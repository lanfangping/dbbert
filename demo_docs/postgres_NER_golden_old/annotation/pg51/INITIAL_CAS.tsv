#FORMAT=WebAnno TSV 3.3


#Text=Performance | GORM - The fantastic ORM library for Golang, aims to be developer friendly. GORM DocsCommunityAPIContribute English English 简体中文 Deutsch Español
1-1	0-11	Performance	
1-2	12-13	|	
1-3	14-18	GORM	
1-4	19-20	-	
1-5	21-24	The	
1-6	25-34	fantastic	
1-7	35-38	ORM	
1-8	39-46	library	
1-9	47-50	for	
1-10	51-57	Golang	
1-11	57-58	,	
1-12	59-63	aims	
1-13	64-66	to	
1-14	67-69	be	
1-15	70-79	developer	
1-16	80-88	friendly	
1-17	88-89	.	
1-18	90-94	GORM	
1-19	95-121	DocsCommunityAPIContribute	
1-20	122-129	English	
1-21	130-137	English	
1-22	138-142	简体中文	
1-23	143-150	Deutsch	
1-24	151-158	Español	

#Text=bahasa Indonesia Italiano 日本語 Русский French 한국어 Performance GORM optimizes many things to improve the performance, the default performance should good for most applications, but there are still some tips for how to improve it for your application.
2-1	159-165	bahasa	
2-2	166-175	Indonesia	
2-3	176-184	Italiano	
2-4	185-188	日本語	
2-5	189-196	Русский	
2-6	197-203	French	
2-7	204-207	한국어	
2-8	208-219	Performance	
2-9	220-224	GORM	
2-10	225-234	optimizes	
2-11	235-239	many	
2-12	240-246	things	
2-13	247-249	to	
2-14	250-257	improve	
2-15	258-261	the	
2-16	262-273	performance	
2-17	273-274	,	
2-18	275-278	the	
2-19	279-286	default	
2-20	287-298	performance	
2-21	299-305	should	
2-22	306-310	good	
2-23	311-314	for	
2-24	315-319	most	
2-25	320-332	applications	
2-26	332-333	,	
2-27	334-337	but	
2-28	338-343	there	
2-29	344-347	are	
2-30	348-353	still	
2-31	354-358	some	
2-32	359-363	tips	
2-33	364-367	for	
2-34	368-371	how	
2-35	372-374	to	
2-36	375-382	improve	
2-37	383-385	it	
2-38	386-389	for	
2-39	390-394	your	
2-40	395-406	application	
2-41	406-407	.	

#Text=Disable Default TransactionGORM perform write (create/update/delete) operations run inside a transaction to ensure data consistency, which is bad for performance, you can disable it during initialization db, err := gorm.Open(sqlite.Open("gorm.db"), &gorm.Config{ SkipDefaultTransaction: true,})
3-1	408-415	Disable	
3-2	416-423	Default	
3-3	424-439	TransactionGORM	
3-4	440-447	perform	
3-5	448-453	write	
3-6	454-455	(	
3-7	455-461	create	
3-8	461-462	/	
3-9	462-468	update	
3-10	468-469	/	
3-11	469-475	delete	
3-12	475-476	)	
3-13	477-487	operations	
3-14	488-491	run	
3-15	492-498	inside	
3-16	499-500	a	
3-17	501-512	transaction	
3-18	513-515	to	
3-19	516-522	ensure	
3-20	523-527	data	
3-21	528-539	consistency	
3-22	539-540	,	
3-23	541-546	which	
3-24	547-549	is	
3-25	550-553	bad	
3-26	554-557	for	
3-27	558-569	performance	
3-28	569-570	,	
3-29	571-574	you	
3-30	575-578	can	
3-31	579-586	disable	
3-32	587-589	it	
3-33	590-596	during	
3-34	597-611	initialization	
3-35	612-614	db	
3-36	614-615	,	
3-37	616-619	err	
3-38	620-621	:	
3-39	621-622	=	
3-40	623-632	gorm.Open	
3-41	632-633	(	
3-42	633-644	sqlite.Open	
3-43	644-645	(	
3-44	645-646	"	
3-45	646-653	gorm.db	
3-46	653-654	"	
3-47	654-655	)	
3-48	655-656	,	
3-49	657-658	&	
3-50	658-669	gorm.Config	
3-51	669-670	{	
3-52	671-693	SkipDefaultTransaction	
3-53	693-694	:	
3-54	695-699	true	
3-55	699-700	,	
3-56	700-701	}	
3-57	701-702	)	

#Text=Caches Prepared StatementCreates a prepared statement when executing any SQL and caches them to speed up future calls // Globally modedb, err := gorm.Open(sqlite.Open("gorm.db"), &gorm.Config{
4-1	703-709	Caches	
4-2	710-718	Prepared	
4-3	719-735	StatementCreates	
4-4	736-737	a	
4-5	738-746	prepared	
4-6	747-756	statement	
4-7	757-761	when	
4-8	762-771	executing	
4-9	772-775	any	
4-10	776-779	SQL	
4-11	780-783	and	
4-12	784-790	caches	
4-13	791-795	them	
4-14	796-798	to	
4-15	799-804	speed	
4-16	805-807	up	
4-17	808-814	future	
4-18	815-820	calls	
4-19	821-822	/	
4-20	822-823	/	
4-21	824-832	Globally	
4-22	833-839	modedb	
4-23	839-840	,	
4-24	841-844	err	
4-25	845-846	:	
4-26	846-847	=	
4-27	848-857	gorm.Open	
4-28	857-858	(	
4-29	858-869	sqlite.Open	
4-30	869-870	(	
4-31	870-871	"	
4-32	871-878	gorm.db	
4-33	878-879	"	
4-34	879-880	)	
4-35	880-881	,	
4-36	882-883	&	
4-37	883-894	gorm.Config	
4-38	894-895	{	

#Text=PrepareStmt: true,})// Session modetx := db.Session(&Session{PrepareStmt: true})tx.First(&user, 1)tx.Find(&users)tx.Model(&user).Update("Age", 18) NOTE Also refer how to enable interpolateparams for MySQL to reduce roundtrip https://github.com/go-sql-driver/mysql#interpolateparams
5-1	896-907	PrepareStmt	
5-2	907-908	:	
5-3	909-913	true	
5-4	913-914	,	
5-5	914-915	}	
5-6	915-916	)	
5-7	916-917	/	
5-8	917-918	/	
5-9	919-926	Session	
5-10	927-933	modetx	
5-11	934-935	:	
5-12	935-936	=	
5-13	937-947	db.Session	
5-14	947-948	(	
5-15	948-949	&	
5-16	949-956	Session	
5-17	956-957	{	
5-18	957-968	PrepareStmt	
5-19	968-969	:	
5-20	970-974	true	
5-21	974-975	}	
5-22	975-976	)	
5-23	976-984	tx.First	
5-24	984-985	(	
5-25	985-986	&	
5-26	986-990	user	
5-27	990-991	,	
5-28	992-993	1	
5-29	993-994	)	
5-30	994-1001	tx.Find	
5-31	1001-1002	(	
5-32	1002-1003	&	
5-33	1003-1008	users	
5-34	1008-1009	)	
5-35	1009-1017	tx.Model	
5-36	1017-1018	(	
5-37	1018-1019	&	
5-38	1019-1023	user	
5-39	1023-1024	)	
5-40	1024-1025	.	
5-41	1025-1031	Update	
5-42	1031-1032	(	
5-43	1032-1033	"	
5-44	1033-1036	Age	
5-45	1036-1037	"	
5-46	1037-1038	,	
5-47	1039-1041	18	
5-48	1041-1042	)	
5-49	1043-1047	NOTE	
5-50	1048-1052	Also	
5-51	1053-1058	refer	
5-52	1059-1062	how	
5-53	1063-1065	to	
5-54	1066-1072	enable	
5-55	1073-1090	interpolateparams	
5-56	1091-1094	for	
5-57	1095-1100	MySQL	
5-58	1101-1103	to	
5-59	1104-1110	reduce	
5-60	1111-1120	roundtrip	
5-61	1121-1126	https	
5-62	1126-1127	:	
5-63	1127-1128	/	
5-64	1128-1129	/	
5-65	1129-1139	github.com	
5-66	1139-1140	/	
5-67	1140-1153	go-sql-driver	
5-68	1153-1154	/	
5-69	1154-1159	mysql	
5-70	1159-1160	#	
5-71	1160-1177	interpolateparams	

#Text=SQL Builder with PreparedStmtPrepared Statement works with RAW SQL also, for example: db, err := gorm.Open(sqlite.Open("gorm.db"), &gorm.Config{ PrepareStmt: true,})db.Raw("select sum(age) from users where role = ?", "admin").Scan(&age)
6-1	1178-1181	SQL	
6-2	1182-1189	Builder	
6-3	1190-1194	with	
6-4	1195-1215	PreparedStmtPrepared	
6-5	1216-1225	Statement	
6-6	1226-1231	works	
6-7	1232-1236	with	
6-8	1237-1240	RAW	
6-9	1241-1244	SQL	
6-10	1245-1249	also	
6-11	1249-1250	,	
6-12	1251-1254	for	
6-13	1255-1262	example	
6-14	1262-1263	:	
6-15	1264-1266	db	
6-16	1266-1267	,	
6-17	1268-1271	err	
6-18	1272-1273	:	
6-19	1273-1274	=	
6-20	1275-1284	gorm.Open	
6-21	1284-1285	(	
6-22	1285-1296	sqlite.Open	
6-23	1296-1297	(	
6-24	1297-1298	"	
6-25	1298-1305	gorm.db	
6-26	1305-1306	"	
6-27	1306-1307	)	
6-28	1307-1308	,	
6-29	1309-1310	&	
6-30	1310-1321	gorm.Config	
6-31	1321-1322	{	
6-32	1323-1334	PrepareStmt	
6-33	1334-1335	:	
6-34	1336-1340	true	
6-35	1340-1341	,	
6-36	1341-1342	}	
6-37	1342-1343	)	
6-38	1343-1349	db.Raw	
6-39	1349-1350	(	
6-40	1350-1351	"	
6-41	1351-1357	select	
6-42	1358-1361	sum	
6-43	1361-1362	(	
6-44	1362-1365	age	
6-45	1365-1366	)	
6-46	1367-1371	from	
6-47	1372-1377	users	
6-48	1378-1383	where	
6-49	1384-1388	role	
6-50	1389-1390	=	
6-51	1391-1392	?	
6-52	1392-1393	"	
6-53	1393-1394	,	
6-54	1395-1396	"	
6-55	1396-1401	admin	
6-56	1401-1402	"	
6-57	1402-1403	)	
6-58	1403-1404	.	
6-59	1404-1408	Scan	
6-60	1408-1409	(	
6-61	1409-1410	&	
6-62	1410-1413	age	
6-63	1413-1414	)	

#Text=You can also use GORM API to prepare SQL with DryRun Mode, and execute it with prepared statement later, checkout Session Mode for details Select FieldsBy default GORM select all fields when querying, you can use Select to specify fields you want db.Select("Name", "Age").Find(&Users{}) Or define a smaller API struct to use the smart select fields feature
7-1	1415-1418	You	
7-2	1419-1422	can	
7-3	1423-1427	also	
7-4	1428-1431	use	
7-5	1432-1436	GORM	
7-6	1437-1440	API	
7-7	1441-1443	to	
7-8	1444-1451	prepare	
7-9	1452-1455	SQL	
7-10	1456-1460	with	
7-11	1461-1467	DryRun	
7-12	1468-1472	Mode	
7-13	1472-1473	,	
7-14	1474-1477	and	
7-15	1478-1485	execute	
7-16	1486-1488	it	
7-17	1489-1493	with	
7-18	1494-1502	prepared	
7-19	1503-1512	statement	
7-20	1513-1518	later	
7-21	1518-1519	,	
7-22	1520-1528	checkout	
7-23	1529-1536	Session	
7-24	1537-1541	Mode	
7-25	1542-1545	for	
7-26	1546-1553	details	
7-27	1554-1560	Select	
7-28	1561-1569	FieldsBy	
7-29	1570-1577	default	
7-30	1578-1582	GORM	
7-31	1583-1589	select	
7-32	1590-1593	all	
7-33	1594-1600	fields	
7-34	1601-1605	when	
7-35	1606-1614	querying	
7-36	1614-1615	,	
7-37	1616-1619	you	
7-38	1620-1623	can	
7-39	1624-1627	use	
7-40	1628-1634	Select	
7-41	1635-1637	to	
7-42	1638-1645	specify	
7-43	1646-1652	fields	
7-44	1653-1656	you	
7-45	1657-1661	want	
7-46	1662-1671	db.Select	
7-47	1671-1672	(	
7-48	1672-1673	"	
7-49	1673-1677	Name	
7-50	1677-1678	"	
7-51	1678-1679	,	
7-52	1680-1681	"	
7-53	1681-1684	Age	
7-54	1684-1685	"	
7-55	1685-1686	)	
7-56	1686-1687	.	
7-57	1687-1691	Find	
7-58	1691-1692	(	
7-59	1692-1693	&	
7-60	1693-1698	Users	
7-61	1698-1699	{	
7-62	1699-1700	}	
7-63	1700-1701	)	
7-64	1702-1704	Or	
7-65	1705-1711	define	
7-66	1712-1713	a	
7-67	1714-1721	smaller	
7-68	1722-1725	API	
7-69	1726-1732	struct	
7-70	1733-1735	to	
7-71	1736-1739	use	
7-72	1740-1743	the	
7-73	1744-1749	smart	
7-74	1750-1756	select	
7-75	1757-1763	fields	
7-76	1764-1771	feature	

#Text=type User struct { uint Name string Age int Gender string // hundreds of fields}type APIUser struct { uint
8-1	1772-1776	type	
8-2	1777-1781	User	
8-3	1782-1788	struct	
8-4	1789-1790	{	
8-5	1791-1795	uint	
8-6	1796-1800	Name	
8-7	1801-1807	string	
8-8	1808-1811	Age	
8-9	1812-1815	int	
8-10	1816-1822	Gender	
8-11	1823-1829	string	
8-12	1830-1831	/	
8-13	1831-1832	/	
8-14	1833-1841	hundreds	
8-15	1842-1844	of	
8-16	1845-1851	fields	
8-17	1851-1852	}	
8-18	1852-1856	type	
8-19	1857-1864	APIUser	
8-20	1865-1871	struct	
8-21	1872-1873	{	
8-22	1874-1878	uint	

#Text=Name string}// Select `id`, `name` automatically when querydb.Model(&User{}).Limit(10).Find(&APIUser{})// SELECT `id`, `name` FROM `users` LIMIT 10 Iteration / FindInBatchesQuery and process records with iteration or in batches Index HintsIndex is used to speed up data search and SQL query performance. Index Hints gives the optimizer information about how to choose indexes during query processing, which gives the flexibility to choose a more efficient execution plan than the optimizer
9-1	1879-1883	Name	
9-2	1884-1890	string	
9-3	1890-1891	}	
9-4	1891-1892	/	
9-5	1892-1893	/	
9-6	1894-1900	Select	
9-7	1901-1902	`	
9-8	1902-1904	id	
9-9	1904-1905	`	
9-10	1905-1906	,	
9-11	1907-1908	`	
9-12	1908-1912	name	
9-13	1912-1913	`	
9-14	1914-1927	automatically	
9-15	1928-1932	when	
9-16	1933-1946	querydb.Model	
9-17	1946-1947	(	
9-18	1947-1948	&	
9-19	1948-1952	User	
9-20	1952-1953	{	
9-21	1953-1954	}	
9-22	1954-1955	)	
9-23	1955-1956	.	
9-24	1956-1961	Limit	
9-25	1961-1962	(	
9-26	1962-1964	10	
9-27	1964-1965	)	
9-28	1965-1966	.	
9-29	1966-1970	Find	
9-30	1970-1971	(	
9-31	1971-1972	&	
9-32	1972-1979	APIUser	
9-33	1979-1980	{	
9-34	1980-1981	}	
9-35	1981-1982	)	
9-36	1982-1983	/	
9-37	1983-1984	/	
9-38	1985-1991	SELECT	
9-39	1992-1993	`	
9-40	1993-1995	id	
9-41	1995-1996	`	
9-42	1996-1997	,	
9-43	1998-1999	`	
9-44	1999-2003	name	
9-45	2003-2004	`	
9-46	2005-2009	FROM	
9-47	2010-2011	`	
9-48	2011-2016	users	
9-49	2016-2017	`	
9-50	2018-2023	LIMIT	
9-51	2024-2026	10	
9-52	2027-2036	Iteration	
9-53	2037-2038	/	
9-54	2039-2057	FindInBatchesQuery	
9-55	2058-2061	and	
9-56	2062-2069	process	
9-57	2070-2077	records	
9-58	2078-2082	with	
9-59	2083-2092	iteration	
9-60	2093-2095	or	
9-61	2096-2098	in	
9-62	2099-2106	batches	
9-63	2107-2112	Index	
9-64	2113-2123	HintsIndex	
9-65	2124-2126	is	
9-66	2127-2131	used	
9-67	2132-2134	to	
9-68	2135-2140	speed	
9-69	2141-2143	up	
9-70	2144-2148	data	
9-71	2149-2155	search	
9-72	2156-2159	and	
9-73	2160-2163	SQL	
9-74	2164-2169	query	
9-75	2170-2181	performance	
9-76	2181-2182	.	
9-77	2183-2188	Index	
9-78	2189-2194	Hints	
9-79	2195-2200	gives	
9-80	2201-2204	the	
9-81	2205-2214	optimizer	
9-82	2215-2226	information	
9-83	2227-2232	about	
9-84	2233-2236	how	
9-85	2237-2239	to	
9-86	2240-2246	choose	
9-87	2247-2254	indexes	
9-88	2255-2261	during	
9-89	2262-2267	query	
9-90	2268-2278	processing	
9-91	2278-2279	,	
9-92	2280-2285	which	
9-93	2286-2291	gives	
9-94	2292-2295	the	
9-95	2296-2307	flexibility	
9-96	2308-2310	to	
9-97	2311-2317	choose	
9-98	2318-2319	a	
9-99	2320-2324	more	
9-100	2325-2334	efficient	
9-101	2335-2344	execution	
9-102	2345-2349	plan	
9-103	2350-2354	than	
9-104	2355-2358	the	
9-105	2359-2368	optimizer	

#Text=import "gorm.io/hints"db.Clauses(hints.UseIndex("idx_user_name")).Find(&User{})// SELECT * FROM `users` USE INDEX (`idx_user_name`)db.Clauses(hints.ForceIndex("idx_user_name", "idx_user_id").ForJoin()).Find(&User{})// SELECT * FROM `users` FORCE INDEX FOR JOIN (`idx_user_name`,`idx_user_id`)"db.Clauses( hints.ForceIndex("idx_user_name", "idx_user_id").ForOrderBy(),
10-1	2369-2375	import	
10-2	2376-2377	"	
10-3	2377-2384	gorm.io	
10-4	2384-2385	/	
10-5	2385-2401	hints"db.Clauses	
10-6	2401-2402	(	
10-7	2402-2416	hints.UseIndex	
10-8	2416-2417	(	
10-9	2417-2418	"	
10-10	2418-2431	idx_user_name	
10-11	2431-2432	"	
10-12	2432-2433	)	
10-13	2433-2434	)	
10-14	2434-2435	.	
10-15	2435-2439	Find	
10-16	2439-2440	(	
10-17	2440-2441	&	
10-18	2441-2445	User	
10-19	2445-2446	{	
10-20	2446-2447	}	
10-21	2447-2448	)	
10-22	2448-2449	/	
10-23	2449-2450	/	
10-24	2451-2457	SELECT	
10-25	2458-2459	*	
10-26	2460-2464	FROM	
10-27	2465-2466	`	
10-28	2466-2471	users	
10-29	2471-2472	`	
10-30	2473-2476	USE	
10-31	2477-2482	INDEX	
10-32	2483-2484	(	
10-33	2484-2485	`	
10-34	2485-2498	idx_user_name	
10-35	2498-2499	`	
10-36	2499-2500	)	
10-37	2500-2510	db.Clauses	
10-38	2510-2511	(	
10-39	2511-2527	hints.ForceIndex	
10-40	2527-2528	(	
10-41	2528-2529	"	
10-42	2529-2542	idx_user_name	
10-43	2542-2543	"	
10-44	2543-2544	,	
10-45	2545-2546	"	
10-46	2546-2557	idx_user_id	
10-47	2557-2558	"	
10-48	2558-2559	)	
10-49	2559-2560	.	
10-50	2560-2567	ForJoin	
10-51	2567-2568	(	
10-52	2568-2569	)	
10-53	2569-2570	)	
10-54	2570-2571	.	
10-55	2571-2575	Find	
10-56	2575-2576	(	
10-57	2576-2577	&	
10-58	2577-2581	User	
10-59	2581-2582	{	
10-60	2582-2583	}	
10-61	2583-2584	)	
10-62	2584-2585	/	
10-63	2585-2586	/	
10-64	2587-2593	SELECT	
10-65	2594-2595	*	
10-66	2596-2600	FROM	
10-67	2601-2602	`	
10-68	2602-2607	users	
10-69	2607-2608	`	
10-70	2609-2614	FORCE	
10-71	2615-2620	INDEX	
10-72	2621-2624	FOR	
10-73	2625-2629	JOIN	
10-74	2630-2631	(	
10-75	2631-2632	`	
10-76	2632-2645	idx_user_name	
10-77	2645-2646	`	
10-78	2646-2647	,	
10-79	2647-2648	`	
10-80	2648-2659	idx_user_id	
10-81	2659-2660	`	
10-82	2660-2661	)	
10-83	2661-2662	"	
10-84	2662-2672	db.Clauses	
10-85	2672-2673	(	
10-86	2674-2690	hints.ForceIndex	
10-87	2690-2691	(	
10-88	2691-2692	"	
10-89	2692-2705	idx_user_name	
10-90	2705-2706	"	
10-91	2706-2707	,	
10-92	2708-2709	"	
10-93	2709-2720	idx_user_id	
10-94	2720-2721	"	
10-95	2721-2722	)	
10-96	2722-2723	.	
10-97	2723-2733	ForOrderBy	
10-98	2733-2734	(	
10-99	2734-2735	)	
10-100	2735-2736	,	

#Text=hints.IgnoreIndex("idx_user_name").ForGroupBy(),).Find(&User{})// SELECT * FROM `users` FORCE INDEX FOR ORDER BY (`idx_user_name`,`idx_user_id`) IGNORE INDEX FOR GROUP BY (`idx_user_name`)" Read/Write SplittingIncrease data throughput through read/write splitting, check out Database Resolver Last updated: 2021-04-09 PrevNext Platinum Sponsors Become a Sponsor!
11-1	2737-2754	hints.IgnoreIndex	
11-2	2754-2755	(	
11-3	2755-2756	"	
11-4	2756-2769	idx_user_name	
11-5	2769-2770	"	
11-6	2770-2771	)	
11-7	2771-2772	.	
11-8	2772-2782	ForGroupBy	
11-9	2782-2783	(	
11-10	2783-2784	)	
11-11	2784-2785	,	
11-12	2785-2786	)	
11-13	2786-2787	.	
11-14	2787-2791	Find	
11-15	2791-2792	(	
11-16	2792-2793	&	
11-17	2793-2797	User	
11-18	2797-2798	{	
11-19	2798-2799	}	
11-20	2799-2800	)	
11-21	2800-2801	/	
11-22	2801-2802	/	
11-23	2803-2809	SELECT	
11-24	2810-2811	*	
11-25	2812-2816	FROM	
11-26	2817-2818	`	
11-27	2818-2823	users	
11-28	2823-2824	`	
11-29	2825-2830	FORCE	
11-30	2831-2836	INDEX	
11-31	2837-2840	FOR	
11-32	2841-2846	ORDER	
11-33	2847-2849	BY	
11-34	2850-2851	(	
11-35	2851-2852	`	
11-36	2852-2865	idx_user_name	
11-37	2865-2866	`	
11-38	2866-2867	,	
11-39	2867-2868	`	
11-40	2868-2879	idx_user_id	
11-41	2879-2880	`	
11-42	2880-2881	)	
11-43	2882-2888	IGNORE	
11-44	2889-2894	INDEX	
11-45	2895-2898	FOR	
11-46	2899-2904	GROUP	
11-47	2905-2907	BY	
11-48	2908-2909	(	
11-49	2909-2910	`	
11-50	2910-2923	idx_user_name	
11-51	2923-2924	`	
11-52	2924-2925	)	
11-53	2925-2926	"	
11-54	2927-2931	Read	
11-55	2931-2932	/	
11-56	2932-2937	Write	
11-57	2938-2955	SplittingIncrease	
11-58	2956-2960	data	
11-59	2961-2971	throughput	
11-60	2972-2979	through	
11-61	2980-2984	read	
11-62	2984-2985	/	
11-63	2985-2990	write	
11-64	2991-3000	splitting	
11-65	3000-3001	,	
11-66	3002-3007	check	
11-67	3008-3011	out	
11-68	3012-3020	Database	
11-69	3021-3029	Resolver	
11-70	3030-3034	Last	
11-71	3035-3042	updated	
11-72	3042-3043	:	
11-73	3044-3048	2021	
11-74	3048-3049	-	
11-75	3049-3051	04	
11-76	3051-3052	-	
11-77	3052-3054	09	
11-78	3055-3063	PrevNext	
11-79	3064-3072	Platinum	
11-80	3073-3081	Sponsors	
11-81	3082-3088	Become	
11-82	3089-3090	a	
11-83	3091-3098	Sponsor	
11-84	3098-3099	!	

#Text=Platinum Sponsors Become a Sponsor! OpenCollective Sponsors Contents Disable Default TransactionCaches Prepared StatementSQL Builder with PreparedStmtSelect FieldsIteration / FindInBatchesIndex HintsRead/Write Splitting
12-1	3100-3108	Platinum	
12-2	3109-3117	Sponsors	
12-3	3118-3124	Become	
12-4	3125-3126	a	
12-5	3127-3134	Sponsor	
12-6	3134-3135	!	
12-7	3136-3150	OpenCollective	
12-8	3151-3159	Sponsors	
12-9	3160-3168	Contents	
12-10	3169-3176	Disable	
12-11	3177-3184	Default	
12-12	3185-3202	TransactionCaches	
12-13	3203-3211	Prepared	
12-14	3212-3224	StatementSQL	
12-15	3225-3232	Builder	
12-16	3233-3237	with	
12-17	3238-3256	PreparedStmtSelect	
12-18	3257-3272	FieldsIteration	
12-19	3273-3274	/	
12-20	3275-3293	FindInBatchesIndex	
12-21	3294-3303	HintsRead	
12-22	3303-3304	/	
12-23	3304-3309	Write	
12-24	3310-3319	Splitting	

#Text=Improve this page Back to Top
13-1	3320-3327	Improve	
13-2	3328-3332	this	
13-3	3333-3337	page	
13-4	3338-3342	Back	
13-5	3343-3345	to	
13-6	3346-3349	Top	

#Text=Getting StartedOverviewDeclaring ModelsConnecting to DatabaseCRUD InterfaceCreateQueryAdvanced QueryUpdateDeleteRaw SQL & SQL BuilderAssociationsBelongs ToHas OneHas ManyMany To ManyAssociation ModePreloading (Eager Loading)TutorialsContextError HandlingMethod ChainingSessionHooksTransactionsMigrationLoggerGeneric Database InterfacePerformanceCustomize Data TypesScopesConventionsSettingsAdvanced TopicsDatabase ResolverPrometheusHintsIndexesConstraintsComposite Primary KeySecurityGORM ConfigWrite PluginsWrite DriverChangeLogCommunityContributeTranslate current site © 2013~2021 Jinzhu Documentation licensed under CC BY 4.0. 感谢 七牛云 对 CDN 的赞助，无闻 对域名 gorm.cn 的捐赠 浙ICP备2020033190号-1
14-1	3350-3357	Getting	
14-2	3358-3382	StartedOverviewDeclaring	
14-3	3383-3399	ModelsConnecting	
14-4	3400-3402	to	
14-5	3403-3415	DatabaseCRUD	
14-6	3416-3444	InterfaceCreateQueryAdvanced	
14-7	3445-3465	QueryUpdateDeleteRaw	
14-8	3466-3469	SQL	
14-9	3470-3471	&	
14-10	3472-3475	SQL	
14-11	3476-3502	BuilderAssociationsBelongs	
14-12	3503-3508	ToHas	
14-13	3509-3515	OneHas	
14-14	3516-3524	ManyMany	
14-15	3525-3527	To	
14-16	3528-3543	ManyAssociation	
14-17	3544-3558	ModePreloading	
14-18	3559-3560	(	
14-19	3560-3565	Eager	
14-20	3566-3573	Loading	
14-21	3573-3574	)	
14-22	3574-3595	TutorialsContextError	
14-23	3596-3610	HandlingMethod	
14-24	3611-3665	ChainingSessionHooksTransactionsMigrationLoggerGeneric	
14-25	3666-3674	Database	
14-26	3675-3704	InterfacePerformanceCustomize	
14-27	3705-3709	Data	
14-28	3710-3748	TypesScopesConventionsSettingsAdvanced	
14-29	3749-3763	TopicsDatabase	
14-30	3764-3814	ResolverPrometheusHintsIndexesConstraintsComposite	
14-31	3815-3822	Primary	
14-32	3823-3838	KeySecurityGORM	
14-33	3839-3850	ConfigWrite	
14-34	3851-3863	PluginsWrite	
14-35	3864-3907	DriverChangeLogCommunityContributeTranslate	
14-36	3908-3915	current	
14-37	3916-3920	site	
14-38	3921-3922	©	
14-39	3923-3927	2013	
14-40	3927-3928	~	
14-41	3928-3932	2021	
14-42	3933-3939	Jinzhu	
14-43	3940-3953	Documentation	
14-44	3954-3962	licensed	
14-45	3963-3968	under	
14-46	3969-3971	CC	
14-47	3972-3974	BY	
14-48	3975-3978	4.0	
14-49	3978-3979	.	
14-50	3980-3982	感谢	
14-51	3983-3986	七牛云	
14-52	3987-3988	对	
14-53	3989-3992	CDN	
14-54	3993-3996	的赞助	
14-55	3996-3997	，	
14-56	3997-3999	无闻	
14-57	4000-4003	对域名	
14-58	4004-4011	gorm.cn	
14-59	4012-4015	的捐赠	
14-60	4016-4017	浙	
14-61	4017-4020	ICP	
14-62	4020-4021	备	
14-63	4021-4031	2020033190	
14-64	4031-4032	号	
14-65	4032-4033	-	
14-66	4033-4034	1	

#Text=Home DocsCommunityAPIContribute
15-1	4035-4039	Home	
15-2	4040-4066	DocsCommunityAPIContribute	
