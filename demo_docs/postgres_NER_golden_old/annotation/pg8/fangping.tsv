#FORMAT=WebAnno TSV 3.3


#Text=Performance tips  |  Cloud SQL for PostgreSQL  |  Google Cloud Why Google close Transform your business with innovative solutions Whether your business is early in its journey or well on its way to digital transformation, Google Cloud's solutions and technologies help solve your toughest challenges.
1-1	0-11	Performance	
1-2	12-16	tips	
1-3	17-18	 	
1-4	18-19	|	
1-5	19-20	 	
1-6	21-26	Cloud	
1-7	27-30	SQL	
1-8	31-34	for	
1-9	35-45	PostgreSQL	
1-10	46-47	 	
1-11	47-48	|	
1-12	48-49	 	
1-13	50-56	Google	
1-14	57-62	Cloud	
1-15	63-66	Why	
1-16	67-73	Google	
1-17	74-79	close	
1-18	80-89	Transform	
1-19	90-94	your	
1-20	95-103	business	
1-21	104-108	with	
1-22	109-119	innovative	
1-23	120-129	solutions	
1-24	130-137	Whether	
1-25	138-142	your	
1-26	143-151	business	
1-27	152-154	is	
1-28	155-160	early	
1-29	161-163	in	
1-30	164-167	its	
1-31	168-175	journey	
1-32	176-178	or	
1-33	179-183	well	
1-34	184-186	on	
1-35	187-190	its	
1-36	191-194	way	
1-37	195-197	to	
1-38	198-205	digital	
1-39	206-220	transformation	
1-40	220-221	,	
1-41	222-228	Google	
1-42	229-236	Cloud's	
1-43	237-246	solutions	
1-44	247-250	and	
1-45	251-263	technologies	
1-46	264-268	help	
1-47	269-274	solve	
1-48	275-279	your	
1-49	280-288	toughest	
1-50	289-299	challenges	
1-51	299-300	.	

#Text=Learn more Why Google Cloud Choosing Google Cloud Reasons why businesses choose us. Multicloud Run your apps wherever you need them. Trust and security Keep your data secure and compliant. Global infrastructure Build on the same infrastructure Google uses.
2-1	301-306	Learn	
2-2	307-311	more	
2-3	312-315	Why	
2-4	316-322	Google	
2-5	323-328	Cloud	
2-6	329-337	Choosing	
2-7	338-344	Google	
2-8	345-350	Cloud	
2-9	351-358	Reasons	
2-10	359-362	why	
2-11	363-373	businesses	
2-12	374-380	choose	
2-13	381-383	us	
2-14	383-384	.	
2-15	385-395	Multicloud	
2-16	396-399	Run	
2-17	400-404	your	
2-18	405-409	apps	
2-19	410-418	wherever	
2-20	419-422	you	
2-21	423-427	need	
2-22	428-432	them	
2-23	432-433	.	
2-24	434-439	Trust	
2-25	440-443	and	
2-26	444-452	security	
2-27	453-457	Keep	
2-28	458-462	your	
2-29	463-467	data	
2-30	468-474	secure	
2-31	475-478	and	
2-32	479-488	compliant	
2-33	488-489	.	
2-34	490-496	Global	
2-35	497-511	infrastructure	
2-36	512-517	Build	
2-37	518-520	on	
2-38	521-524	the	
2-39	525-529	same	
2-40	530-544	infrastructure	
2-41	545-551	Google	
2-42	552-556	uses	
2-43	556-557	.	

#Text=Data analytics Make smarter decisions with the leading data platform. Open cloud Scale with open, flexible technology. Sustainability Run on the cleanest cloud in the industry. Analyst reports See how Google Cloud ranks. Customer stories
3-1	558-562	Data	
3-2	563-572	analytics	
3-3	573-577	Make	
3-4	578-585	smarter	
3-5	586-595	decisions	
3-6	596-600	with	
3-7	601-604	the	
3-8	605-612	leading	
3-9	613-617	data	
3-10	618-626	platform	
3-11	626-627	.	
3-12	628-632	Open	
3-13	633-638	cloud	
3-14	639-644	Scale	
3-15	645-649	with	
3-16	650-654	open	
3-17	654-655	,	
3-18	656-664	flexible	
3-19	665-675	technology	
3-20	675-676	.	
3-21	677-691	Sustainability	
3-22	692-695	Run	
3-23	696-698	on	
3-24	699-702	the	
3-25	703-711	cleanest	
3-26	712-717	cloud	
3-27	718-720	in	
3-28	721-724	the	
3-29	725-733	industry	
3-30	733-734	.	
3-31	735-742	Analyst	
3-32	743-750	reports	
3-33	751-754	See	
3-34	755-758	how	
3-35	759-765	Google	
3-36	766-771	Cloud	
3-37	772-777	ranks	
3-38	777-778	.	
3-39	779-787	Customer	
3-40	788-795	stories	

#Text=Learn how businesses use Google Cloud. Google Cloud Blog Read the latest story and product updates. Solutions close Industry Solutions Reduce cost, increase operational agility, and capture new market opportunities. Retail Analytics and collaboration tools for the retail value chain.
4-1	796-801	Learn	
4-2	802-805	how	
4-3	806-816	businesses	
4-4	817-820	use	
4-5	821-827	Google	
4-6	828-833	Cloud	
4-7	833-834	.	
4-8	835-841	Google	
4-9	842-847	Cloud	
4-10	848-852	Blog	
4-11	853-857	Read	
4-12	858-861	the	
4-13	862-868	latest	
4-14	869-874	story	
4-15	875-878	and	
4-16	879-886	product	
4-17	887-894	updates	
4-18	894-895	.	
4-19	896-905	Solutions	
4-20	906-911	close	
4-21	912-920	Industry	
4-22	921-930	Solutions	
4-23	931-937	Reduce	
4-24	938-942	cost	
4-25	942-943	,	
4-26	944-952	increase	
4-27	953-964	operational	
4-28	965-972	agility	
4-29	972-973	,	
4-30	974-977	and	
4-31	978-985	capture	
4-32	986-989	new	
4-33	990-996	market	
4-34	997-1010	opportunities	
4-35	1010-1011	.	
4-36	1012-1018	Retail	
4-37	1019-1028	Analytics	
4-38	1029-1032	and	
4-39	1033-1046	collaboration	
4-40	1047-1052	tools	
4-41	1053-1056	for	
4-42	1057-1060	the	
4-43	1061-1067	retail	
4-44	1068-1073	value	
4-45	1074-1079	chain	
4-46	1079-1080	.	

#Text=Consumer Packaged Goods Solutions for CPG digital transformation and brand growth. Financial Services Computing, data management, and analytics tools for financial services. Healthcare and Life Sciences Health-specific solutions to enhance the patient experience. Media and Entertainment Solutions for content production and distribution operations.
5-1	1081-1089	Consumer	
5-2	1090-1098	Packaged	
5-3	1099-1104	Goods	
5-4	1105-1114	Solutions	
5-5	1115-1118	for	
5-6	1119-1122	CPG	
5-7	1123-1130	digital	
5-8	1131-1145	transformation	
5-9	1146-1149	and	
5-10	1150-1155	brand	
5-11	1156-1162	growth	
5-12	1162-1163	.	
5-13	1164-1173	Financial	
5-14	1174-1182	Services	
5-15	1183-1192	Computing	
5-16	1192-1193	,	
5-17	1194-1198	data	
5-18	1199-1209	management	
5-19	1209-1210	,	
5-20	1211-1214	and	
5-21	1215-1224	analytics	
5-22	1225-1230	tools	
5-23	1231-1234	for	
5-24	1235-1244	financial	
5-25	1245-1253	services	
5-26	1253-1254	.	
5-27	1255-1265	Healthcare	
5-28	1266-1269	and	
5-29	1270-1274	Life	
5-30	1275-1283	Sciences	
5-31	1284-1299	Health-specific	
5-32	1300-1309	solutions	
5-33	1310-1312	to	
5-34	1313-1320	enhance	
5-35	1321-1324	the	
5-36	1325-1332	patient	
5-37	1333-1343	experience	
5-38	1343-1344	.	
5-39	1345-1350	Media	
5-40	1351-1354	and	
5-41	1355-1368	Entertainment	
5-42	1369-1378	Solutions	
5-43	1379-1382	for	
5-44	1383-1390	content	
5-45	1391-1401	production	
5-46	1402-1405	and	
5-47	1406-1418	distribution	
5-48	1419-1429	operations	
5-49	1429-1430	.	

#Text=Telecommunications Hybrid and multi-cloud services to deploy and monetize 5G. Gaming AI-driven solutions to build and scale games faster. Manufacturing Migration and AI tools to optimize the manufacturing value chain. Supply Chain and Logistics Digital supply chain solutions built in the cloud.
6-1	1431-1449	Telecommunications	
6-2	1450-1456	Hybrid	
6-3	1457-1460	and	
6-4	1461-1472	multi-cloud	
6-5	1473-1481	services	
6-6	1482-1484	to	
6-7	1485-1491	deploy	
6-8	1492-1495	and	
6-9	1496-1504	monetize	
6-10	1505-1507	5G	
6-11	1507-1508	.	
6-12	1509-1515	Gaming	
6-13	1516-1525	AI-driven	
6-14	1526-1535	solutions	
6-15	1536-1538	to	
6-16	1539-1544	build	
6-17	1545-1548	and	
6-18	1549-1554	scale	
6-19	1555-1560	games	
6-20	1561-1567	faster	
6-21	1567-1568	.	
6-22	1569-1582	Manufacturing	
6-23	1583-1592	Migration	
6-24	1593-1596	and	
6-25	1597-1599	AI	
6-26	1600-1605	tools	
6-27	1606-1608	to	
6-28	1609-1617	optimize	
6-29	1618-1621	the	
6-30	1622-1635	manufacturing	
6-31	1636-1641	value	
6-32	1642-1647	chain	
6-33	1647-1648	.	
6-34	1649-1655	Supply	
6-35	1656-1661	Chain	
6-36	1662-1665	and	
6-37	1666-1675	Logistics	
6-38	1676-1683	Digital	
6-39	1684-1690	supply	
6-40	1691-1696	chain	
6-41	1697-1706	solutions	
6-42	1707-1712	built	
6-43	1713-1715	in	
6-44	1716-1719	the	
6-45	1720-1725	cloud	
6-46	1725-1726	.	

#Text=Government Data storage, AI, and analytics solutions for government agencies. Education Teaching tools to provide more engaging learning experiences. Small and Medium Business Explore SMB solutions for web hosting, app development, AI, analytics, and more.
7-1	1727-1737	Government	
7-2	1738-1742	Data	
7-3	1743-1750	storage	
7-4	1750-1751	,	
7-5	1752-1754	AI	
7-6	1754-1755	,	
7-7	1756-1759	and	
7-8	1760-1769	analytics	
7-9	1770-1779	solutions	
7-10	1780-1783	for	
7-11	1784-1794	government	
7-12	1795-1803	agencies	
7-13	1803-1804	.	
7-14	1805-1814	Education	
7-15	1815-1823	Teaching	
7-16	1824-1829	tools	
7-17	1830-1832	to	
7-18	1833-1840	provide	
7-19	1841-1845	more	
7-20	1846-1854	engaging	
7-21	1855-1863	learning	
7-22	1864-1875	experiences	
7-23	1875-1876	.	
7-24	1877-1882	Small	
7-25	1883-1886	and	
7-26	1887-1893	Medium	
7-27	1894-1902	Business	
7-28	1903-1910	Explore	
7-29	1911-1914	SMB	
7-30	1915-1924	solutions	
7-31	1925-1928	for	
7-32	1929-1932	web	
7-33	1933-1940	hosting	
7-34	1940-1941	,	
7-35	1942-1945	app	
7-36	1946-1957	development	
7-37	1957-1958	,	
7-38	1959-1961	AI	
7-39	1961-1962	,	
7-40	1963-1972	analytics	
7-41	1972-1973	,	
7-42	1974-1977	and	
7-43	1978-1982	more	
7-44	1982-1983	.	

#Text=Not seeing what you're looking for? See all solutions Application Modernization Develop and run applications anywhere, using cloud-native technologies like containers, serverless, and service mesh. Hybrid and Multi-cloud Application Platform Platform for modernizing legacy apps and building new apps. Cloud-Native App Development
8-1	1984-1987	Not	
8-2	1988-1994	seeing	
8-3	1995-1999	what	
8-4	2000-2006	you're	
8-5	2007-2014	looking	
8-6	2015-2018	for	
8-7	2018-2019	?	
8-8	2020-2023	See	
8-9	2024-2027	all	
8-10	2028-2037	solutions	
8-11	2038-2049	Application	
8-12	2050-2063	Modernization	
8-13	2064-2071	Develop	
8-14	2072-2075	and	
8-15	2076-2079	run	
8-16	2080-2092	applications	
8-17	2093-2101	anywhere	
8-18	2101-2102	,	
8-19	2103-2108	using	
8-20	2109-2121	cloud-native	
8-21	2122-2134	technologies	
8-22	2135-2139	like	
8-23	2140-2150	containers	
8-24	2150-2151	,	
8-25	2152-2162	serverless	
8-26	2162-2163	,	
8-27	2164-2167	and	
8-28	2168-2175	service	
8-29	2176-2180	mesh	
8-30	2180-2181	.	
8-31	2182-2188	Hybrid	
8-32	2189-2192	and	
8-33	2193-2204	Multi-cloud	
8-34	2205-2216	Application	
8-35	2217-2225	Platform	
8-36	2226-2234	Platform	
8-37	2235-2238	for	
8-38	2239-2250	modernizing	
8-39	2251-2257	legacy	
8-40	2258-2262	apps	
8-41	2263-2266	and	
8-42	2267-2275	building	
8-43	2276-2279	new	
8-44	2280-2284	apps	
8-45	2284-2285	.	
8-46	2286-2298	Cloud-Native	
8-47	2299-2302	App	
8-48	2303-2314	Development	

#Text=End-to-end solution for building, deploying, and managing apps. Serverless Solutions Fully managed environment for developing, deploying and scaling apps. DevOps Processes and resources for implementing DevOps in your org. Continuous Delivery (CD) End-to-end automation from source to production.
9-1	2315-2325	End-to-end	
9-2	2326-2334	solution	
9-3	2335-2338	for	
9-4	2339-2347	building	
9-5	2347-2348	,	
9-6	2349-2358	deploying	
9-7	2358-2359	,	
9-8	2360-2363	and	
9-9	2364-2372	managing	
9-10	2373-2377	apps	
9-11	2377-2378	.	
9-12	2379-2389	Serverless	
9-13	2390-2399	Solutions	
9-14	2400-2405	Fully	
9-15	2406-2413	managed	
9-16	2414-2425	environment	
9-17	2426-2429	for	
9-18	2430-2440	developing	
9-19	2440-2441	,	
9-20	2442-2451	deploying	
9-21	2452-2455	and	
9-22	2456-2463	scaling	
9-23	2464-2468	apps	
9-24	2468-2469	.	
9-25	2470-2476	DevOps	
9-26	2477-2486	Processes	
9-27	2487-2490	and	
9-28	2491-2500	resources	
9-29	2501-2504	for	
9-30	2505-2517	implementing	
9-31	2518-2524	DevOps	
9-32	2525-2527	in	
9-33	2528-2532	your	
9-34	2533-2536	org	
9-35	2536-2537	.	
9-36	2538-2548	Continuous	
9-37	2549-2557	Delivery	
9-38	2558-2559	(	
9-39	2559-2561	CD	
9-40	2561-2562	)	
9-41	2563-2573	End-to-end	
9-42	2574-2584	automation	
9-43	2585-2589	from	
9-44	2590-2596	source	
9-45	2597-2599	to	
9-46	2600-2610	production	
9-47	2610-2611	.	

#Text=Continuous Integration (CI) Fast feedback on code changes at scale. Mainframe Modernization Automated tools and prescriptive guidance for moving to the cloud. Hosting Services and infrastructure for building web apps and websites. Artificial Intelligence Add intelligence and efficiency to your business with AI and machine learning.
10-1	2612-2622	Continuous	
10-2	2623-2634	Integration	
10-3	2635-2636	(	
10-4	2636-2638	CI	
10-5	2638-2639	)	
10-6	2640-2644	Fast	
10-7	2645-2653	feedback	
10-8	2654-2656	on	
10-9	2657-2661	code	
10-10	2662-2669	changes	
10-11	2670-2672	at	
10-12	2673-2678	scale	
10-13	2678-2679	.	
10-14	2680-2689	Mainframe	
10-15	2690-2703	Modernization	
10-16	2704-2713	Automated	
10-17	2714-2719	tools	
10-18	2720-2723	and	
10-19	2724-2736	prescriptive	
10-20	2737-2745	guidance	
10-21	2746-2749	for	
10-22	2750-2756	moving	
10-23	2757-2759	to	
10-24	2760-2763	the	
10-25	2764-2769	cloud	
10-26	2769-2770	.	
10-27	2771-2778	Hosting	
10-28	2779-2787	Services	
10-29	2788-2791	and	
10-30	2792-2806	infrastructure	
10-31	2807-2810	for	
10-32	2811-2819	building	
10-33	2820-2823	web	
10-34	2824-2828	apps	
10-35	2829-2832	and	
10-36	2833-2841	websites	
10-37	2841-2842	.	
10-38	2843-2853	Artificial	
10-39	2854-2866	Intelligence	
10-40	2867-2870	Add	
10-41	2871-2883	intelligence	
10-42	2884-2887	and	
10-43	2888-2898	efficiency	
10-44	2899-2901	to	
10-45	2902-2906	your	
10-46	2907-2915	business	
10-47	2916-2920	with	
10-48	2921-2923	AI	
10-49	2924-2927	and	
10-50	2928-2935	machine	
10-51	2936-2944	learning	
10-52	2944-2945	.	

#Text=Build and Use AI Products to build and use artificial intelligence. Contact Center AI AI model for speaking with customers and assisting human agents. Document AI Machine learning and AI to unlock insights from your documents. Cloud Talent Solution AI with job search and talent acquisition capabilities.
11-1	2946-2951	Build	
11-2	2952-2955	and	
11-3	2956-2959	Use	
11-4	2960-2962	AI	
11-5	2963-2971	Products	
11-6	2972-2974	to	
11-7	2975-2980	build	
11-8	2981-2984	and	
11-9	2985-2988	use	
11-10	2989-2999	artificial	
11-11	3000-3012	intelligence	
11-12	3012-3013	.	
11-13	3014-3021	Contact	
11-14	3022-3028	Center	
11-15	3029-3031	AI	
11-16	3032-3034	AI	
11-17	3035-3040	model	
11-18	3041-3044	for	
11-19	3045-3053	speaking	
11-20	3054-3058	with	
11-21	3059-3068	customers	
11-22	3069-3072	and	
11-23	3073-3082	assisting	
11-24	3083-3088	human	
11-25	3089-3095	agents	
11-26	3095-3096	.	
11-27	3097-3105	Document	
11-28	3106-3108	AI	
11-29	3109-3116	Machine	
11-30	3117-3125	learning	
11-31	3126-3129	and	
11-32	3130-3132	AI	
11-33	3133-3135	to	
11-34	3136-3142	unlock	
11-35	3143-3151	insights	
11-36	3152-3156	from	
11-37	3157-3161	your	
11-38	3162-3171	documents	
11-39	3171-3172	.	
11-40	3173-3178	Cloud	
11-41	3179-3185	Talent	
11-42	3186-3194	Solution	
11-43	3195-3197	AI	
11-44	3198-3202	with	
11-45	3203-3206	job	
11-46	3207-3213	search	
11-47	3214-3217	and	
11-48	3218-3224	talent	
11-49	3225-3236	acquisition	
11-50	3237-3249	capabilities	
11-51	3249-3250	.	

#Text=Business Application Platform Speed up the pace of innovation without coding, using APIs, apps, and automation. New Business Channels Using APIs Attract and empower an ecosystem of developers and partners. Unlocking Legacy Applications Using APIs Cloud services for extending and modernizing legacy apps.
12-1	3251-3259	Business	
12-2	3260-3271	Application	
12-3	3272-3280	Platform	
12-4	3281-3286	Speed	
12-5	3287-3289	up	
12-6	3290-3293	the	
12-7	3294-3298	pace	
12-8	3299-3301	of	
12-9	3302-3312	innovation	
12-10	3313-3320	without	
12-11	3321-3327	coding	
12-12	3327-3328	,	
12-13	3329-3334	using	
12-14	3335-3339	APIs	
12-15	3339-3340	,	
12-16	3341-3345	apps	
12-17	3345-3346	,	
12-18	3347-3350	and	
12-19	3351-3361	automation	
12-20	3361-3362	.	
12-21	3363-3366	New	
12-22	3367-3375	Business	
12-23	3376-3384	Channels	
12-24	3385-3390	Using	
12-25	3391-3395	APIs	
12-26	3396-3403	Attract	
12-27	3404-3407	and	
12-28	3408-3415	empower	
12-29	3416-3418	an	
12-30	3419-3428	ecosystem	
12-31	3429-3431	of	
12-32	3432-3442	developers	
12-33	3443-3446	and	
12-34	3447-3455	partners	
12-35	3455-3456	.	
12-36	3457-3466	Unlocking	
12-37	3467-3473	Legacy	
12-38	3474-3486	Applications	
12-39	3487-3492	Using	
12-40	3493-3497	APIs	
12-41	3498-3503	Cloud	
12-42	3504-3512	services	
12-43	3513-3516	for	
12-44	3517-3526	extending	
12-45	3527-3530	and	
12-46	3531-3542	modernizing	
12-47	3543-3549	legacy	
12-48	3550-3554	apps	
12-49	3554-3555	.	

#Text=Open Banking APIx Simplify and accelerate secure delivery of open banking compliant APIs. Databases Migrate and manage enterprise data with security, reliability, high availability, and fully managed data services. Database Migration Guides and tools to simplify your database migration life cycle.
13-1	3556-3560	Open	
13-2	3561-3568	Banking	
13-3	3569-3573	APIx	
13-4	3574-3582	Simplify	
13-5	3583-3586	and	
13-6	3587-3597	accelerate	
13-7	3598-3604	secure	
13-8	3605-3613	delivery	
13-9	3614-3616	of	
13-10	3617-3621	open	
13-11	3622-3629	banking	
13-12	3630-3639	compliant	
13-13	3640-3644	APIs	
13-14	3644-3645	.	
13-15	3646-3655	Databases	
13-16	3656-3663	Migrate	
13-17	3664-3667	and	
13-18	3668-3674	manage	
13-19	3675-3685	enterprise	
13-20	3686-3690	data	
13-21	3691-3695	with	
13-22	3696-3704	security	
13-23	3704-3705	,	
13-24	3706-3717	reliability	
13-25	3717-3718	,	
13-26	3719-3723	high	
13-27	3724-3736	availability	
13-28	3736-3737	,	
13-29	3738-3741	and	
13-30	3742-3747	fully	
13-31	3748-3755	managed	
13-32	3756-3760	data	
13-33	3761-3769	services	
13-34	3769-3770	.	
13-35	3771-3779	Database	
13-36	3780-3789	Migration	
13-37	3790-3796	Guides	
13-38	3797-3800	and	
13-39	3801-3806	tools	
13-40	3807-3809	to	
13-41	3810-3818	simplify	
13-42	3819-3823	your	
13-43	3824-3832	database	
13-44	3833-3842	migration	
13-45	3843-3847	life	
13-46	3848-3853	cycle	
13-47	3853-3854	.	

#Text=Database Modernization Upgrades to modernize your operational database infrastructure. Google Cloud Databases Database services to migrate, manage, and modernize data. Migrate Oracle workloads to Google Cloud Rehost, replatform, rewrite your Oracle workloads.
14-1	3855-3863	Database	
14-2	3864-3877	Modernization	
14-3	3878-3886	Upgrades	
14-4	3887-3889	to	
14-5	3890-3899	modernize	
14-6	3900-3904	your	
14-7	3905-3916	operational	
14-8	3917-3925	database	
14-9	3926-3940	infrastructure	
14-10	3940-3941	.	
14-11	3942-3948	Google	
14-12	3949-3954	Cloud	
14-13	3955-3964	Databases	
14-14	3965-3973	Database	
14-15	3974-3982	services	
14-16	3983-3985	to	
14-17	3986-3993	migrate	
14-18	3993-3994	,	
14-19	3995-4001	manage	
14-20	4001-4002	,	
14-21	4003-4006	and	
14-22	4007-4016	modernize	
14-23	4017-4021	data	
14-24	4021-4022	.	
14-25	4023-4030	Migrate	
14-26	4031-4037	Oracle	
14-27	4038-4047	workloads	
14-28	4048-4050	to	
14-29	4051-4057	Google	
14-30	4058-4063	Cloud	
14-31	4064-4070	Rehost	
14-32	4070-4071	,	
14-33	4072-4082	replatform	
14-34	4082-4083	,	
14-35	4084-4091	rewrite	
14-36	4092-4096	your	
14-37	4097-4103	Oracle	
14-38	4104-4113	workloads	
14-39	4113-4114	.	

#Text=Open Source Databases Fully managed open source databases with enterprise-grade support. SQL Server on Google Cloud Options for running SQL Server virtual machines on Google Cloud. Digital Transformation Accelerate business recovery and ensure a better future with solutions that enable hybrid and multi-cloud, generate intelligent insights, and keep your workers connected.
15-1	4115-4119	Open	
15-2	4120-4126	Source	
15-3	4127-4136	Databases	
15-4	4137-4142	Fully	
15-5	4143-4150	managed	
15-6	4151-4155	open	
15-7	4156-4162	source	
15-8	4163-4172	databases	
15-9	4173-4177	with	
15-10	4178-4194	enterprise-grade	
15-11	4195-4202	support	
15-12	4202-4203	.	
15-13	4204-4207	SQL	
15-14	4208-4214	Server	
15-15	4215-4217	on	
15-16	4218-4224	Google	
15-17	4225-4230	Cloud	
15-18	4231-4238	Options	
15-19	4239-4242	for	
15-20	4243-4250	running	
15-21	4251-4254	SQL	
15-22	4255-4261	Server	
15-23	4262-4269	virtual	
15-24	4270-4278	machines	
15-25	4279-4281	on	
15-26	4282-4288	Google	
15-27	4289-4294	Cloud	
15-28	4294-4295	.	
15-29	4296-4303	Digital	
15-30	4304-4318	Transformation	
15-31	4319-4329	Accelerate	
15-32	4330-4338	business	
15-33	4339-4347	recovery	
15-34	4348-4351	and	
15-35	4352-4358	ensure	
15-36	4359-4360	a	
15-37	4361-4367	better	
15-38	4368-4374	future	
15-39	4375-4379	with	
15-40	4380-4389	solutions	
15-41	4390-4394	that	
15-42	4395-4401	enable	
15-43	4402-4408	hybrid	
15-44	4409-4412	and	
15-45	4413-4424	multi-cloud	
15-46	4424-4425	,	
15-47	4426-4434	generate	
15-48	4435-4446	intelligent	
15-49	4447-4455	insights	
15-50	4455-4456	,	
15-51	4457-4460	and	
15-52	4461-4465	keep	
15-53	4466-4470	your	
15-54	4471-4478	workers	
15-55	4479-4488	connected	
15-56	4488-4489	.	

#Text=Business Continuity Proactively plan and prioritize workloads. Digital Innovation Reimagine your operations and unlock new opportunities. Operational Efficiency Prioritize investments and optimize costs. COVID-19 Solutions Get work done more safely and securely.
16-1	4490-4498	Business	
16-2	4499-4509	Continuity	
16-3	4510-4521	Proactively	
16-4	4522-4526	plan	
16-5	4527-4530	and	
16-6	4531-4541	prioritize	
16-7	4542-4551	workloads	
16-8	4551-4552	.	
16-9	4553-4560	Digital	
16-10	4561-4571	Innovation	
16-11	4572-4581	Reimagine	
16-12	4582-4586	your	
16-13	4587-4597	operations	
16-14	4598-4601	and	
16-15	4602-4608	unlock	
16-16	4609-4612	new	
16-17	4613-4626	opportunities	
16-18	4626-4627	.	
16-19	4628-4639	Operational	
16-20	4640-4650	Efficiency	
16-21	4651-4661	Prioritize	
16-22	4662-4673	investments	
16-23	4674-4677	and	
16-24	4678-4686	optimize	
16-25	4687-4692	costs	
16-26	4692-4693	.	
16-27	4694-4699	COVID	
16-28	4699-4700	-	
16-29	4700-4702	19	
16-30	4703-4712	Solutions	
16-31	4713-4716	Get	
16-32	4717-4721	work	
16-33	4722-4726	done	
16-34	4727-4731	more	
16-35	4732-4738	safely	
16-36	4739-4742	and	
16-37	4743-4751	securely	
16-38	4751-4752	.	

#Text=COVID-19 Solutions for the Healthcare Industry How Google is helping healthcare meet extraordinary challenges. Infrastructure Modernization Migrate quickly with solutions for SAP, VMware, Windows, Oracle, and other workloads. Application Migration Discovery and analysis tools for moving to the cloud. SAP on Google Cloud
17-1	4753-4758	COVID	
17-2	4758-4759	-	
17-3	4759-4761	19	
17-4	4762-4771	Solutions	
17-5	4772-4775	for	
17-6	4776-4779	the	
17-7	4780-4790	Healthcare	
17-8	4791-4799	Industry	
17-9	4800-4803	How	
17-10	4804-4810	Google	
17-11	4811-4813	is	
17-12	4814-4821	helping	
17-13	4822-4832	healthcare	
17-14	4833-4837	meet	
17-15	4838-4851	extraordinary	
17-16	4852-4862	challenges	
17-17	4862-4863	.	
17-18	4864-4878	Infrastructure	
17-19	4879-4892	Modernization	
17-20	4893-4900	Migrate	
17-21	4901-4908	quickly	
17-22	4909-4913	with	
17-23	4914-4923	solutions	
17-24	4924-4927	for	
17-25	4928-4931	SAP	
17-26	4931-4932	,	
17-27	4933-4939	VMware	
17-28	4939-4940	,	
17-29	4941-4948	Windows	
17-30	4948-4949	,	
17-31	4950-4956	Oracle	
17-32	4956-4957	,	
17-33	4958-4961	and	
17-34	4962-4967	other	
17-35	4968-4977	workloads	
17-36	4977-4978	.	
17-37	4979-4990	Application	
17-38	4991-5000	Migration	
17-39	5001-5010	Discovery	
17-40	5011-5014	and	
17-41	5015-5023	analysis	
17-42	5024-5029	tools	
17-43	5030-5033	for	
17-44	5034-5040	moving	
17-45	5041-5043	to	
17-46	5044-5047	the	
17-47	5048-5053	cloud	
17-48	5053-5054	.	
17-49	5055-5058	SAP	
17-50	5059-5061	on	
17-51	5062-5068	Google	
17-52	5069-5074	Cloud	

#Text=Certifications for running SAP applications and SAP HANA. High Performance Computing Compute, storage, and networking options to support any workload. Windows on Google Cloud Tools and partners for running Windows workloads. Data Center Migration Migration solutions for VMs, apps, databases, and more.
18-1	5075-5089	Certifications	
18-2	5090-5093	for	
18-3	5094-5101	running	
18-4	5102-5105	SAP	
18-5	5106-5118	applications	
18-6	5119-5122	and	
18-7	5123-5126	SAP	
18-8	5127-5131	HANA	
18-9	5131-5132	.	
18-10	5133-5137	High	
18-11	5138-5149	Performance	
18-12	5150-5159	Computing	
18-13	5160-5167	Compute	
18-14	5167-5168	,	
18-15	5169-5176	storage	
18-16	5176-5177	,	
18-17	5178-5181	and	
18-18	5182-5192	networking	
18-19	5193-5200	options	
18-20	5201-5203	to	
18-21	5204-5211	support	
18-22	5212-5215	any	
18-23	5216-5224	workload	
18-24	5224-5225	.	
18-25	5226-5233	Windows	
18-26	5234-5236	on	
18-27	5237-5243	Google	
18-28	5244-5249	Cloud	
18-29	5250-5255	Tools	
18-30	5256-5259	and	
18-31	5260-5268	partners	
18-32	5269-5272	for	
18-33	5273-5280	running	
18-34	5281-5288	Windows	
18-35	5289-5298	workloads	
18-36	5298-5299	.	
18-37	5300-5304	Data	
18-38	5305-5311	Center	
18-39	5312-5321	Migration	
18-40	5322-5331	Migration	
18-41	5332-5341	solutions	
18-42	5342-5345	for	
18-43	5346-5349	VMs	
18-44	5349-5350	,	
18-45	5351-5355	apps	
18-46	5355-5356	,	
18-47	5357-5366	databases	
18-48	5366-5367	,	
18-49	5368-5371	and	
18-50	5372-5376	more	
18-51	5376-5377	.	

#Text=Active Assist Automatic cloud resource optimization and increased security. Virtual Desktops Remote work solutions for desktops and applications (VDI & DaaS). Rapid Assessment & Migration Program (RAMP) End-to-end migration program to simplify your path to the cloud.
19-1	5378-5384	Active	
19-2	5385-5391	Assist	
19-3	5392-5401	Automatic	
19-4	5402-5407	cloud	
19-5	5408-5416	resource	
19-6	5417-5429	optimization	
19-7	5430-5433	and	
19-8	5434-5443	increased	
19-9	5444-5452	security	
19-10	5452-5453	.	
19-11	5454-5461	Virtual	
19-12	5462-5470	Desktops	
19-13	5471-5477	Remote	
19-14	5478-5482	work	
19-15	5483-5492	solutions	
19-16	5493-5496	for	
19-17	5497-5505	desktops	
19-18	5506-5509	and	
19-19	5510-5522	applications	
19-20	5523-5524	(	
19-21	5524-5527	VDI	
19-22	5528-5529	&	
19-23	5530-5534	DaaS	
19-24	5534-5535	)	
19-25	5535-5536	.	
19-26	5537-5542	Rapid	
19-27	5543-5553	Assessment	
19-28	5554-5555	&	
19-29	5556-5565	Migration	
19-30	5566-5573	Program	
19-31	5574-5575	(	
19-32	5575-5579	RAMP	
19-33	5579-5580	)	
19-34	5581-5591	End-to-end	
19-35	5592-5601	migration	
19-36	5602-5609	program	
19-37	5610-5612	to	
19-38	5613-5621	simplify	
19-39	5622-5626	your	
19-40	5627-5631	path	
19-41	5632-5634	to	
19-42	5635-5638	the	
19-43	5639-5644	cloud	
19-44	5644-5645	.	

#Text=Productivity and Collaboration Change the way teams work with solutions designed for humans and built for impact. Google Workspace Collaboration and productivity tools for enterprises. Google Workspace Essentials Secure video meetings and modern collaboration for teams. Cloud Identity
20-1	5646-5658	Productivity	
20-2	5659-5662	and	
20-3	5663-5676	Collaboration	
20-4	5677-5683	Change	
20-5	5684-5687	the	
20-6	5688-5691	way	
20-7	5692-5697	teams	
20-8	5698-5702	work	
20-9	5703-5707	with	
20-10	5708-5717	solutions	
20-11	5718-5726	designed	
20-12	5727-5730	for	
20-13	5731-5737	humans	
20-14	5738-5741	and	
20-15	5742-5747	built	
20-16	5748-5751	for	
20-17	5752-5758	impact	
20-18	5758-5759	.	
20-19	5760-5766	Google	
20-20	5767-5776	Workspace	
20-21	5777-5790	Collaboration	
20-22	5791-5794	and	
20-23	5795-5807	productivity	
20-24	5808-5813	tools	
20-25	5814-5817	for	
20-26	5818-5829	enterprises	
20-27	5829-5830	.	
20-28	5831-5837	Google	
20-29	5838-5847	Workspace	
20-30	5848-5858	Essentials	
20-31	5859-5865	Secure	
20-32	5866-5871	video	
20-33	5872-5880	meetings	
20-34	5881-5884	and	
20-35	5885-5891	modern	
20-36	5892-5905	collaboration	
20-37	5906-5909	for	
20-38	5910-5915	teams	
20-39	5915-5916	.	
20-40	5917-5922	Cloud	
20-41	5923-5931	Identity	

#Text=Unified platform for IT admins to manage user devices and apps. Chrome Enterprise Chrome OS, Chrome Browser, and Chrome devices built for business. Cloud Search Enterprise search for employees to quickly find company information. Security Detect, investigate, and respond to online threats to help protect your business.
21-1	5932-5939	Unified	
21-2	5940-5948	platform	
21-3	5949-5952	for	
21-4	5953-5955	IT	
21-5	5956-5962	admins	
21-6	5963-5965	to	
21-7	5966-5972	manage	
21-8	5973-5977	user	
21-9	5978-5985	devices	
21-10	5986-5989	and	
21-11	5990-5994	apps	
21-12	5994-5995	.	
21-13	5996-6002	Chrome	
21-14	6003-6013	Enterprise	
21-15	6014-6020	Chrome	
21-16	6021-6023	OS	
21-17	6023-6024	,	
21-18	6025-6031	Chrome	
21-19	6032-6039	Browser	
21-20	6039-6040	,	
21-21	6041-6044	and	
21-22	6045-6051	Chrome	
21-23	6052-6059	devices	
21-24	6060-6065	built	
21-25	6066-6069	for	
21-26	6070-6078	business	
21-27	6078-6079	.	
21-28	6080-6085	Cloud	
21-29	6086-6092	Search	
21-30	6093-6103	Enterprise	
21-31	6104-6110	search	
21-32	6111-6114	for	
21-33	6115-6124	employees	
21-34	6125-6127	to	
21-35	6128-6135	quickly	
21-36	6136-6140	find	
21-37	6141-6148	company	
21-38	6149-6160	information	
21-39	6160-6161	.	
21-40	6162-6170	Security	
21-41	6171-6177	Detect	
21-42	6177-6178	,	
21-43	6179-6190	investigate	
21-44	6190-6191	,	
21-45	6192-6195	and	
21-46	6196-6203	respond	
21-47	6204-6206	to	
21-48	6207-6213	online	
21-49	6214-6221	threats	
21-50	6222-6224	to	
21-51	6225-6229	help	
21-52	6230-6237	protect	
21-53	6238-6242	your	
21-54	6243-6251	business	
21-55	6251-6252	.	

#Text=Security Analytics and Operations Solution for analyzing petabytes of security telemetry. Web App and API Protection Threat and fraud protection for your web applications and APIs. Smart Analytics Generate instant insights from data at any scale with a serverless, fully managed analytics platform that significantly simplifies analytics.
22-1	6253-6261	Security	
22-2	6262-6271	Analytics	
22-3	6272-6275	and	
22-4	6276-6286	Operations	
22-5	6287-6295	Solution	
22-6	6296-6299	for	
22-7	6300-6309	analyzing	
22-8	6310-6319	petabytes	
22-9	6320-6322	of	
22-10	6323-6331	security	
22-11	6332-6341	telemetry	
22-12	6341-6342	.	
22-13	6343-6346	Web	
22-14	6347-6350	App	
22-15	6351-6354	and	
22-16	6355-6358	API	
22-17	6359-6369	Protection	
22-18	6370-6376	Threat	
22-19	6377-6380	and	
22-20	6381-6386	fraud	
22-21	6387-6397	protection	
22-22	6398-6401	for	
22-23	6402-6406	your	
22-24	6407-6410	web	
22-25	6411-6423	applications	
22-26	6424-6427	and	
22-27	6428-6432	APIs	
22-28	6432-6433	.	
22-29	6434-6439	Smart	
22-30	6440-6449	Analytics	
22-31	6450-6458	Generate	
22-32	6459-6466	instant	
22-33	6467-6475	insights	
22-34	6476-6480	from	
22-35	6481-6485	data	
22-36	6486-6488	at	
22-37	6489-6492	any	
22-38	6493-6498	scale	
22-39	6499-6503	with	
22-40	6504-6505	a	
22-41	6506-6516	serverless	
22-42	6516-6517	,	
22-43	6518-6523	fully	
22-44	6524-6531	managed	
22-45	6532-6541	analytics	
22-46	6542-6550	platform	
22-47	6551-6555	that	
22-48	6556-6569	significantly	
22-49	6570-6580	simplifies	
22-50	6581-6590	analytics	
22-51	6590-6591	.	

#Text=Data Warehouse Modernization Data warehouse to jumpstart your migration and unlock insights. Stream Analytics Insights from ingesting, processing, and analyzing event streams. Marketing Analytics Solutions for collecting, analyzing, and activating customer data. Data Lake Modernization
23-1	6592-6596	Data	
23-2	6597-6606	Warehouse	
23-3	6607-6620	Modernization	
23-4	6621-6625	Data	
23-5	6626-6635	warehouse	
23-6	6636-6638	to	
23-7	6639-6648	jumpstart	
23-8	6649-6653	your	
23-9	6654-6663	migration	
23-10	6664-6667	and	
23-11	6668-6674	unlock	
23-12	6675-6683	insights	
23-13	6683-6684	.	
23-14	6685-6691	Stream	
23-15	6692-6701	Analytics	
23-16	6702-6710	Insights	
23-17	6711-6715	from	
23-18	6716-6725	ingesting	
23-19	6725-6726	,	
23-20	6727-6737	processing	
23-21	6737-6738	,	
23-22	6739-6742	and	
23-23	6743-6752	analyzing	
23-24	6753-6758	event	
23-25	6759-6766	streams	
23-26	6766-6767	.	
23-27	6768-6777	Marketing	
23-28	6778-6787	Analytics	
23-29	6788-6797	Solutions	
23-30	6798-6801	for	
23-31	6802-6812	collecting	
23-32	6812-6813	,	
23-33	6814-6823	analyzing	
23-34	6823-6824	,	
23-35	6825-6828	and	
23-36	6829-6839	activating	
23-37	6840-6848	customer	
23-38	6849-6853	data	
23-39	6853-6854	.	
23-40	6855-6859	Data	
23-41	6860-6864	Lake	
23-42	6865-6878	Modernization	

#Text=Services for building and modernizing your data lake. Business Intelligence Data analytics tools for collecting, analyzing, and activating BI. Products close Featured Products Compute Engine Virtual machines running in Google’s data center. Cloud Storage Object storage that’s secure, durable, and scalable.
24-1	6879-6887	Services	
24-2	6888-6891	for	
24-3	6892-6900	building	
24-4	6901-6904	and	
24-5	6905-6916	modernizing	
24-6	6917-6921	your	
24-7	6922-6926	data	
24-8	6927-6931	lake	
24-9	6931-6932	.	
24-10	6933-6941	Business	
24-11	6942-6954	Intelligence	
24-12	6955-6959	Data	
24-13	6960-6969	analytics	
24-14	6970-6975	tools	
24-15	6976-6979	for	
24-16	6980-6990	collecting	
24-17	6990-6991	,	
24-18	6992-7001	analyzing	
24-19	7001-7002	,	
24-20	7003-7006	and	
24-21	7007-7017	activating	
24-22	7018-7020	BI	
24-23	7020-7021	.	
24-24	7022-7030	Products	
24-25	7031-7036	close	
24-26	7037-7045	Featured	
24-27	7046-7054	Products	
24-28	7055-7062	Compute	
24-29	7063-7069	Engine	
24-30	7070-7077	Virtual	
24-31	7078-7086	machines	
24-32	7087-7094	running	
24-33	7095-7097	in	
24-34	7098-7104	Google	
24-35	7104-7105	’	
24-36	7105-7106	s	
24-37	7107-7111	data	
24-38	7112-7118	center	
24-39	7118-7119	.	
24-40	7120-7125	Cloud	
24-41	7126-7133	Storage	
24-42	7134-7140	Object	
24-43	7141-7148	storage	
24-44	7149-7153	that	
24-45	7153-7154	’	
24-46	7154-7155	s	
24-47	7156-7162	secure	
24-48	7162-7163	,	
24-49	7164-7171	durable	
24-50	7171-7172	,	
24-51	7173-7176	and	
24-52	7177-7185	scalable	
24-53	7185-7186	.	

#Text=Cloud SDK Command-line tools and libraries for Google Cloud. Cloud SQL Relational database services for MySQL, PostgreSQL, and SQL server. Google Kubernetes Engine Managed environment for running containerized apps. BigQuery
25-1	7187-7192	Cloud	
25-2	7193-7196	SDK	
25-3	7197-7209	Command-line	
25-4	7210-7215	tools	
25-5	7216-7219	and	
25-6	7220-7229	libraries	
25-7	7230-7233	for	
25-8	7234-7240	Google	
25-9	7241-7246	Cloud	
25-10	7246-7247	.	
25-11	7248-7253	Cloud	
25-12	7254-7257	SQL	
25-13	7258-7268	Relational	
25-14	7269-7277	database	
25-15	7278-7286	services	
25-16	7287-7290	for	
25-17	7291-7296	MySQL	
25-18	7296-7297	,	
25-19	7298-7308	PostgreSQL	
25-20	7308-7309	,	
25-21	7310-7313	and	
25-22	7314-7317	SQL	
25-23	7318-7324	server	
25-24	7324-7325	.	
25-25	7326-7332	Google	
25-26	7333-7343	Kubernetes	
25-27	7344-7350	Engine	
25-28	7351-7358	Managed	
25-29	7359-7370	environment	
25-30	7371-7374	for	
25-31	7375-7382	running	
25-32	7383-7396	containerized	
25-33	7397-7401	apps	
25-34	7401-7402	.	
25-35	7403-7411	BigQuery	

#Text=Data warehouse for business agility and insights. Cloud CDN Content delivery network for delivering web and video. Dataflow Streaming analytics for stream and batch processing. Operations Monitoring, logging, and application performance suite. Cloud Run Fully managed environment for running containerized apps.
26-1	7412-7416	Data	
26-2	7417-7426	warehouse	
26-3	7427-7430	for	
26-4	7431-7439	business	
26-5	7440-7447	agility	
26-6	7448-7451	and	
26-7	7452-7460	insights	
26-8	7460-7461	.	
26-9	7462-7467	Cloud	
26-10	7468-7471	CDN	
26-11	7472-7479	Content	
26-12	7480-7488	delivery	
26-13	7489-7496	network	
26-14	7497-7500	for	
26-15	7501-7511	delivering	
26-16	7512-7515	web	
26-17	7516-7519	and	
26-18	7520-7525	video	
26-19	7525-7526	.	
26-20	7527-7535	Dataflow	
26-21	7536-7545	Streaming	
26-22	7546-7555	analytics	
26-23	7556-7559	for	
26-24	7560-7566	stream	
26-25	7567-7570	and	
26-26	7571-7576	batch	
26-27	7577-7587	processing	
26-28	7587-7588	.	
26-29	7589-7599	Operations	
26-30	7600-7610	Monitoring	
26-31	7610-7611	,	
26-32	7612-7619	logging	
26-33	7619-7620	,	
26-34	7621-7624	and	
26-35	7625-7636	application	
26-36	7637-7648	performance	
26-37	7649-7654	suite	
26-38	7654-7655	.	
26-39	7656-7661	Cloud	
26-40	7662-7665	Run	
26-41	7666-7671	Fully	
26-42	7672-7679	managed	
26-43	7680-7691	environment	
26-44	7692-7695	for	
26-45	7696-7703	running	
26-46	7704-7717	containerized	
26-47	7718-7722	apps	
26-48	7722-7723	.	

#Text=Anthos Platform for modernizing existing apps and building new ones. Not seeing what you're looking for? See all products (100+) AI and Machine Learning Speech-to-Text Speech recognition and transcription supporting 125 languages. Vision AI
27-1	7724-7730	Anthos	
27-2	7731-7739	Platform	
27-3	7740-7743	for	
27-4	7744-7755	modernizing	
27-5	7756-7764	existing	
27-6	7765-7769	apps	
27-7	7770-7773	and	
27-8	7774-7782	building	
27-9	7783-7786	new	
27-10	7787-7791	ones	
27-11	7791-7792	.	
27-12	7793-7796	Not	
27-13	7797-7803	seeing	
27-14	7804-7808	what	
27-15	7809-7815	you're	
27-16	7816-7823	looking	
27-17	7824-7827	for	
27-18	7827-7828	?	
27-19	7829-7832	See	
27-20	7833-7836	all	
27-21	7837-7845	products	
27-22	7846-7847	(	
27-23	7847-7850	100	
27-24	7850-7851	+	
27-25	7851-7852	)	
27-26	7853-7855	AI	
27-27	7856-7859	and	
27-28	7860-7867	Machine	
27-29	7868-7876	Learning	
27-30	7877-7891	Speech-to-Text	
27-31	7892-7898	Speech	
27-32	7899-7910	recognition	
27-33	7911-7914	and	
27-34	7915-7928	transcription	
27-35	7929-7939	supporting	
27-36	7940-7943	125	
27-37	7944-7953	languages	
27-38	7953-7954	.	
27-39	7955-7961	Vision	
27-40	7962-7964	AI	

#Text=Custom and pre-trained models to detect emotion, text, more. Text-to-Speech Speech synthesis in 220+ voices and 40+ languages. Cloud Translation Language detection, translation, and glossary support. Cloud Natural Language Sentiment analysis and classification of unstructured text. AutoML
28-1	7965-7971	Custom	
28-2	7972-7975	and	
28-3	7976-7987	pre-trained	
28-4	7988-7994	models	
28-5	7995-7997	to	
28-6	7998-8004	detect	
28-7	8005-8012	emotion	
28-8	8012-8013	,	
28-9	8014-8018	text	
28-10	8018-8019	,	
28-11	8020-8024	more	
28-12	8024-8025	.	
28-13	8026-8040	Text-to-Speech	
28-14	8041-8047	Speech	
28-15	8048-8057	synthesis	
28-16	8058-8060	in	
28-17	8061-8064	220	
28-18	8064-8065	+	
28-19	8066-8072	voices	
28-20	8073-8076	and	
28-21	8077-8079	40	
28-22	8079-8080	+	
28-23	8081-8090	languages	
28-24	8090-8091	.	
28-25	8092-8097	Cloud	
28-26	8098-8109	Translation	
28-27	8110-8118	Language	
28-28	8119-8128	detection	
28-29	8128-8129	,	
28-30	8130-8141	translation	
28-31	8141-8142	,	
28-32	8143-8146	and	
28-33	8147-8155	glossary	
28-34	8156-8163	support	
28-35	8163-8164	.	
28-36	8165-8170	Cloud	
28-37	8171-8178	Natural	
28-38	8179-8187	Language	
28-39	8188-8197	Sentiment	
28-40	8198-8206	analysis	
28-41	8207-8210	and	
28-42	8211-8225	classification	
28-43	8226-8228	of	
28-44	8229-8241	unstructured	
28-45	8242-8246	text	
28-46	8246-8247	.	
28-47	8248-8254	AutoML	

#Text=Custom machine learning model training and development. AI Platform Platform for training, hosting, and managing ML models. Video AI Video classification and recognition using machine learning. AI Infrastructure Options for every business to train deep learning and machine learning models cost-effectively. Dialogflow
29-1	8255-8261	Custom	
29-2	8262-8269	machine	
29-3	8270-8278	learning	
29-4	8279-8284	model	
29-5	8285-8293	training	
29-6	8294-8297	and	
29-7	8298-8309	development	
29-8	8309-8310	.	
29-9	8311-8313	AI	
29-10	8314-8322	Platform	
29-11	8323-8331	Platform	
29-12	8332-8335	for	
29-13	8336-8344	training	
29-14	8344-8345	,	
29-15	8346-8353	hosting	
29-16	8353-8354	,	
29-17	8355-8358	and	
29-18	8359-8367	managing	
29-19	8368-8370	ML	
29-20	8371-8377	models	
29-21	8377-8378	.	
29-22	8379-8384	Video	
29-23	8385-8387	AI	
29-24	8388-8393	Video	
29-25	8394-8408	classification	
29-26	8409-8412	and	
29-27	8413-8424	recognition	
29-28	8425-8430	using	
29-29	8431-8438	machine	
29-30	8439-8447	learning	
29-31	8447-8448	.	
29-32	8449-8451	AI	
29-33	8452-8466	Infrastructure	
29-34	8467-8474	Options	
29-35	8475-8478	for	
29-36	8479-8484	every	
29-37	8485-8493	business	
29-38	8494-8496	to	
29-39	8497-8502	train	
29-40	8503-8507	deep	
29-41	8508-8516	learning	
29-42	8517-8520	and	
29-43	8521-8528	machine	
29-44	8529-8537	learning	
29-45	8538-8544	models	
29-46	8545-8561	cost-effectively	
29-47	8561-8562	.	
29-48	8563-8573	Dialogflow	

#Text=Conversation applications and systems development suite for virtual agents. AutoML Tables Service for training ML models with structured data. Not seeing what you're looking for? See all AI and machine learning products API Management Apigee API Management Manage the full life cycle of APIs anywhere with visibility and control.
30-1	8574-8586	Conversation	
30-2	8587-8599	applications	
30-3	8600-8603	and	
30-4	8604-8611	systems	
30-5	8612-8623	development	
30-6	8624-8629	suite	
30-7	8630-8633	for	
30-8	8634-8641	virtual	
30-9	8642-8648	agents	
30-10	8648-8649	.	
30-11	8650-8656	AutoML	
30-12	8657-8663	Tables	
30-13	8664-8671	Service	
30-14	8672-8675	for	
30-15	8676-8684	training	
30-16	8685-8687	ML	
30-17	8688-8694	models	
30-18	8695-8699	with	
30-19	8700-8710	structured	
30-20	8711-8715	data	
30-21	8715-8716	.	
30-22	8717-8720	Not	
30-23	8721-8727	seeing	
30-24	8728-8732	what	
30-25	8733-8739	you're	
30-26	8740-8747	looking	
30-27	8748-8751	for	
30-28	8751-8752	?	
30-29	8753-8756	See	
30-30	8757-8760	all	
30-31	8761-8763	AI	
30-32	8764-8767	and	
30-33	8768-8775	machine	
30-34	8776-8784	learning	
30-35	8785-8793	products	
30-36	8794-8797	API	
30-37	8798-8808	Management	
30-38	8809-8815	Apigee	
30-39	8816-8819	API	
30-40	8820-8830	Management	
30-41	8831-8837	Manage	
30-42	8838-8841	the	
30-43	8842-8846	full	
30-44	8847-8851	life	
30-45	8852-8857	cycle	
30-46	8858-8860	of	
30-47	8861-8865	APIs	
30-48	8866-8874	anywhere	
30-49	8875-8879	with	
30-50	8880-8890	visibility	
30-51	8891-8894	and	
30-52	8895-8902	control	
30-53	8902-8903	.	

#Text=Cloud Endpoints Deployment and development management for APIs on Google Cloud. Cloud Healthcare API Solution to bridge existing care systems and apps on Google Cloud. AppSheet No-code development platform to build and extend applications. API Gateway
31-1	8904-8909	Cloud	
31-2	8910-8919	Endpoints	
31-3	8920-8930	Deployment	
31-4	8931-8934	and	
31-5	8935-8946	development	
31-6	8947-8957	management	
31-7	8958-8961	for	
31-8	8962-8966	APIs	
31-9	8967-8969	on	
31-10	8970-8976	Google	
31-11	8977-8982	Cloud	
31-12	8982-8983	.	
31-13	8984-8989	Cloud	
31-14	8990-9000	Healthcare	
31-15	9001-9004	API	
31-16	9005-9013	Solution	
31-17	9014-9016	to	
31-18	9017-9023	bridge	
31-19	9024-9032	existing	
31-20	9033-9037	care	
31-21	9038-9045	systems	
31-22	9046-9049	and	
31-23	9050-9054	apps	
31-24	9055-9057	on	
31-25	9058-9064	Google	
31-26	9065-9070	Cloud	
31-27	9070-9071	.	
31-28	9072-9080	AppSheet	
31-29	9081-9088	No-code	
31-30	9089-9100	development	
31-31	9101-9109	platform	
31-32	9110-9112	to	
31-33	9113-9118	build	
31-34	9119-9122	and	
31-35	9123-9129	extend	
31-36	9130-9142	applications	
31-37	9142-9143	.	
31-38	9144-9147	API	
31-39	9148-9155	Gateway	

#Text=Develop, deploy, secure, and manage APIs with a fully managed gateway. Compute Compute Engine Virtual machines running in Google’s data center. App Engine Serverless application platform for apps and back ends. Cloud GPUs GPUs for ML, scientific computing, and 3D visualization.
32-1	9156-9163	Develop	
32-2	9163-9164	,	
32-3	9165-9171	deploy	
32-4	9171-9172	,	
32-5	9173-9179	secure	
32-6	9179-9180	,	
32-7	9181-9184	and	
32-8	9185-9191	manage	
32-9	9192-9196	APIs	
32-10	9197-9201	with	
32-11	9202-9203	a	
32-12	9204-9209	fully	
32-13	9210-9217	managed	
32-14	9218-9225	gateway	
32-15	9225-9226	.	
32-16	9227-9234	Compute	
32-17	9235-9242	Compute	
32-18	9243-9249	Engine	
32-19	9250-9257	Virtual	
32-20	9258-9266	machines	
32-21	9267-9274	running	
32-22	9275-9277	in	
32-23	9278-9284	Google	
32-24	9284-9285	’	
32-25	9285-9286	s	
32-26	9287-9291	data	
32-27	9292-9298	center	
32-28	9298-9299	.	
32-29	9300-9303	App	
32-30	9304-9310	Engine	
32-31	9311-9321	Serverless	
32-32	9322-9333	application	
32-33	9334-9342	platform	
32-34	9343-9346	for	
32-35	9347-9351	apps	
32-36	9352-9355	and	
32-37	9356-9360	back	
32-38	9361-9365	ends	
32-39	9365-9366	.	
32-40	9367-9372	Cloud	
32-41	9373-9377	GPUs	
32-42	9378-9382	GPUs	
32-43	9383-9386	for	
32-44	9387-9389	ML	
32-45	9389-9390	,	
32-46	9391-9401	scientific	
32-47	9402-9411	computing	
32-48	9411-9412	,	
32-49	9413-9416	and	
32-50	9417-9419	3D	
32-51	9420-9433	visualization	
32-52	9433-9434	.	

#Text=Migrate for Compute Engine Server and virtual machine migration to Compute Engine. Preemptible VMs Compute instances for batch jobs and fault-tolerant workloads. Shielded VMs Reinforced virtual machines on Google Cloud. Sole-Tenant Nodes
33-1	9435-9442	Migrate	
33-2	9443-9446	for	
33-3	9447-9454	Compute	
33-4	9455-9461	Engine	
33-5	9462-9468	Server	
33-6	9469-9472	and	
33-7	9473-9480	virtual	
33-8	9481-9488	machine	
33-9	9489-9498	migration	
33-10	9499-9501	to	
33-11	9502-9509	Compute	
33-12	9510-9516	Engine	
33-13	9516-9517	.	
33-14	9518-9529	Preemptible	
33-15	9530-9533	VMs	
33-16	9534-9541	Compute	
33-17	9542-9551	instances	
33-18	9552-9555	for	
33-19	9556-9561	batch	
33-20	9562-9566	jobs	
33-21	9567-9570	and	
33-22	9571-9585	fault-tolerant	
33-23	9586-9595	workloads	
33-24	9595-9596	.	
33-25	9597-9605	Shielded	
33-26	9606-9609	VMs	
33-27	9610-9620	Reinforced	
33-28	9621-9628	virtual	
33-29	9629-9637	machines	
33-30	9638-9640	on	
33-31	9641-9647	Google	
33-32	9648-9653	Cloud	
33-33	9653-9654	.	
33-34	9655-9666	Sole-Tenant	
33-35	9667-9672	Nodes	

#Text=Dedicated hardware for compliance, licensing, and management. Bare Metal Infrastructure to run specialized workloads on Google Cloud. Recommender Usage recommendations for Google Cloud products and services. VMware Engine Fully managed, native VMware Cloud Foundation software stack. Cloud Run
34-1	9673-9682	Dedicated	
34-2	9683-9691	hardware	
34-3	9692-9695	for	
34-4	9696-9706	compliance	
34-5	9706-9707	,	
34-6	9708-9717	licensing	
34-7	9717-9718	,	
34-8	9719-9722	and	
34-9	9723-9733	management	
34-10	9733-9734	.	
34-11	9735-9739	Bare	
34-12	9740-9745	Metal	
34-13	9746-9760	Infrastructure	
34-14	9761-9763	to	
34-15	9764-9767	run	
34-16	9768-9779	specialized	
34-17	9780-9789	workloads	
34-18	9790-9792	on	
34-19	9793-9799	Google	
34-20	9800-9805	Cloud	
34-21	9805-9806	.	
34-22	9807-9818	Recommender	
34-23	9819-9824	Usage	
34-24	9825-9840	recommendations	
34-25	9841-9844	for	
34-26	9845-9851	Google	
34-27	9852-9857	Cloud	
34-28	9858-9866	products	
34-29	9867-9870	and	
34-30	9871-9879	services	
34-31	9879-9880	.	
34-32	9881-9887	VMware	
34-33	9888-9894	Engine	
34-34	9895-9900	Fully	
34-35	9901-9908	managed	
34-36	9908-9909	,	
34-37	9910-9916	native	
34-38	9917-9923	VMware	
34-39	9924-9929	Cloud	
34-40	9930-9940	Foundation	
34-41	9941-9949	software	
34-42	9950-9955	stack	
34-43	9955-9956	.	
34-44	9957-9962	Cloud	
34-45	9963-9966	Run	

#Text=Fully managed environment for running containerized apps. Not seeing what you're looking for? See all compute products Containers Google Kubernetes Engine Managed environment for running containerized apps. Container Registry Registry for storing, managing, and securing Docker images.
35-1	9967-9972	Fully	
35-2	9973-9980	managed	
35-3	9981-9992	environment	
35-4	9993-9996	for	
35-5	9997-10004	running	
35-6	10005-10018	containerized	
35-7	10019-10023	apps	
35-8	10023-10024	.	
35-9	10025-10028	Not	
35-10	10029-10035	seeing	
35-11	10036-10040	what	
35-12	10041-10047	you're	
35-13	10048-10055	looking	
35-14	10056-10059	for	
35-15	10059-10060	?	
35-16	10061-10064	See	
35-17	10065-10068	all	
35-18	10069-10076	compute	
35-19	10077-10085	products	
35-20	10086-10096	Containers	
35-21	10097-10103	Google	
35-22	10104-10114	Kubernetes	
35-23	10115-10121	Engine	
35-24	10122-10129	Managed	
35-25	10130-10141	environment	
35-26	10142-10145	for	
35-27	10146-10153	running	
35-28	10154-10167	containerized	
35-29	10168-10172	apps	
35-30	10172-10173	.	
35-31	10174-10183	Container	
35-32	10184-10192	Registry	
35-33	10193-10201	Registry	
35-34	10202-10205	for	
35-35	10206-10213	storing	
35-36	10213-10214	,	
35-37	10215-10223	managing	
35-38	10223-10224	,	
35-39	10225-10228	and	
35-40	10229-10237	securing	
35-41	10238-10244	Docker	
35-42	10245-10251	images	
35-43	10251-10252	.	

#Text=Container Security Container environment security for each stage of the life cycle. Cloud Build Solution for running build steps in a Docker container. Deep Learning Containers Containers with data science frameworks, libraries, and tools. Kubernetes Applications
36-1	10253-10262	Container	
36-2	10263-10271	Security	
36-3	10272-10281	Container	
36-4	10282-10293	environment	
36-5	10294-10302	security	
36-6	10303-10306	for	
36-7	10307-10311	each	
36-8	10312-10317	stage	
36-9	10318-10320	of	
36-10	10321-10324	the	
36-11	10325-10329	life	
36-12	10330-10335	cycle	
36-13	10335-10336	.	
36-14	10337-10342	Cloud	
36-15	10343-10348	Build	
36-16	10349-10357	Solution	
36-17	10358-10361	for	
36-18	10362-10369	running	
36-19	10370-10375	build	
36-20	10376-10381	steps	
36-21	10382-10384	in	
36-22	10385-10386	a	
36-23	10387-10393	Docker	
36-24	10394-10403	container	
36-25	10403-10404	.	
36-26	10405-10409	Deep	
36-27	10410-10418	Learning	
36-28	10419-10429	Containers	
36-29	10430-10440	Containers	
36-30	10441-10445	with	
36-31	10446-10450	data	
36-32	10451-10458	science	
36-33	10459-10469	frameworks	
36-34	10469-10470	,	
36-35	10471-10480	libraries	
36-36	10480-10481	,	
36-37	10482-10485	and	
36-38	10486-10491	tools	
36-39	10491-10492	.	
36-40	10493-10503	Kubernetes	
36-41	10504-10516	Applications	

#Text=Containerized apps with prebuilt deployment and unified billing. Artifact Registry Package manager for build artifacts and dependencies. Knative Components to create Kubernetes-native cloud-based software. Cloud Run Fully managed environment for running containerized apps. Cloud Code
37-1	10517-10530	Containerized	
37-2	10531-10535	apps	
37-3	10536-10540	with	
37-4	10541-10549	prebuilt	
37-5	10550-10560	deployment	
37-6	10561-10564	and	
37-7	10565-10572	unified	
37-8	10573-10580	billing	
37-9	10580-10581	.	
37-10	10582-10590	Artifact	
37-11	10591-10599	Registry	
37-12	10600-10607	Package	
37-13	10608-10615	manager	
37-14	10616-10619	for	
37-15	10620-10625	build	
37-16	10626-10635	artifacts	
37-17	10636-10639	and	
37-18	10640-10652	dependencies	
37-19	10652-10653	.	
37-20	10654-10661	Knative	
37-21	10662-10672	Components	
37-22	10673-10675	to	
37-23	10676-10682	create	
37-24	10683-10700	Kubernetes-native	
37-25	10701-10712	cloud-based	
37-26	10713-10721	software	
37-27	10721-10722	.	
37-28	10723-10728	Cloud	
37-29	10729-10732	Run	
37-30	10733-10738	Fully	
37-31	10739-10746	managed	
37-32	10747-10758	environment	
37-33	10759-10762	for	
37-34	10763-10770	running	
37-35	10771-10784	containerized	
37-36	10785-10789	apps	
37-37	10789-10790	.	
37-38	10791-10796	Cloud	
37-39	10797-10801	Code	

#Text=IDE support to write, run, and debug Kubernetes applications. Data Analytics BigQuery Data warehouse for business agility and insights. Looker Platform for BI, data applications, and embedded analytics. Dataflow Streaming analytics for stream and batch processing. Pub/Sub
38-1	10802-10805	IDE	
38-2	10806-10813	support	
38-3	10814-10816	to	
38-4	10817-10822	write	
38-5	10822-10823	,	
38-6	10824-10827	run	
38-7	10827-10828	,	
38-8	10829-10832	and	
38-9	10833-10838	debug	
38-10	10839-10849	Kubernetes	
38-11	10850-10862	applications	
38-12	10862-10863	.	
38-13	10864-10868	Data	
38-14	10869-10878	Analytics	
38-15	10879-10887	BigQuery	
38-16	10888-10892	Data	
38-17	10893-10902	warehouse	
38-18	10903-10906	for	
38-19	10907-10915	business	
38-20	10916-10923	agility	
38-21	10924-10927	and	
38-22	10928-10936	insights	
38-23	10936-10937	.	
38-24	10938-10944	Looker	
38-25	10945-10953	Platform	
38-26	10954-10957	for	
38-27	10958-10960	BI	
38-28	10960-10961	,	
38-29	10962-10966	data	
38-30	10967-10979	applications	
38-31	10979-10980	,	
38-32	10981-10984	and	
38-33	10985-10993	embedded	
38-34	10994-11003	analytics	
38-35	11003-11004	.	
38-36	11005-11013	Dataflow	
38-37	11014-11023	Streaming	
38-38	11024-11033	analytics	
38-39	11034-11037	for	
38-40	11038-11044	stream	
38-41	11045-11048	and	
38-42	11049-11054	batch	
38-43	11055-11065	processing	
38-44	11065-11066	.	
38-45	11067-11070	Pub	
38-46	11070-11071	/	
38-47	11071-11074	Sub	

#Text=Messaging service for event ingestion and delivery. Dataproc Service for running Apache Spark and Apache Hadoop clusters. Cloud Data Fusion Data integration for building and managing data pipelines. Cloud Composer Workflow orchestration service built on Apache Airflow. Data Catalog
39-1	11075-11084	Messaging	
39-2	11085-11092	service	
39-3	11093-11096	for	
39-4	11097-11102	event	
39-5	11103-11112	ingestion	
39-6	11113-11116	and	
39-7	11117-11125	delivery	
39-8	11125-11126	.	
39-9	11127-11135	Dataproc	
39-10	11136-11143	Service	
39-11	11144-11147	for	
39-12	11148-11155	running	
39-13	11156-11162	Apache	
39-14	11163-11168	Spark	
39-15	11169-11172	and	
39-16	11173-11179	Apache	
39-17	11180-11186	Hadoop	
39-18	11187-11195	clusters	
39-19	11195-11196	.	
39-20	11197-11202	Cloud	
39-21	11203-11207	Data	
39-22	11208-11214	Fusion	
39-23	11215-11219	Data	
39-24	11220-11231	integration	
39-25	11232-11235	for	
39-26	11236-11244	building	
39-27	11245-11248	and	
39-28	11249-11257	managing	
39-29	11258-11262	data	
39-30	11263-11272	pipelines	
39-31	11272-11273	.	
39-32	11274-11279	Cloud	
39-33	11280-11288	Composer	
39-34	11289-11297	Workflow	
39-35	11298-11311	orchestration	
39-36	11312-11319	service	
39-37	11320-11325	built	
39-38	11326-11328	on	
39-39	11329-11335	Apache	
39-40	11336-11343	Airflow	
39-41	11343-11344	.	
39-42	11345-11349	Data	
39-43	11350-11357	Catalog	

#Text=Metadata service for discovering, understanding and managing data. Dataprep Service to prepare data for analysis and machine learning. Google Data Studio Interactive data suite for dashboarding, reporting, and analytics. Google Marketing Platform Marketing platform unifying advertising and analytics. Cloud Life Sciences
40-1	11358-11366	Metadata	
40-2	11367-11374	service	
40-3	11375-11378	for	
40-4	11379-11390	discovering	
40-5	11390-11391	,	
40-6	11392-11405	understanding	
40-7	11406-11409	and	
40-8	11410-11418	managing	
40-9	11419-11423	data	
40-10	11423-11424	.	
40-11	11425-11433	Dataprep	
40-12	11434-11441	Service	
40-13	11442-11444	to	
40-14	11445-11452	prepare	
40-15	11453-11457	data	
40-16	11458-11461	for	
40-17	11462-11470	analysis	
40-18	11471-11474	and	
40-19	11475-11482	machine	
40-20	11483-11491	learning	
40-21	11491-11492	.	
40-22	11493-11499	Google	
40-23	11500-11504	Data	
40-24	11505-11511	Studio	
40-25	11512-11523	Interactive	
40-26	11524-11528	data	
40-27	11529-11534	suite	
40-28	11535-11538	for	
40-29	11539-11551	dashboarding	
40-30	11551-11552	,	
40-31	11553-11562	reporting	
40-32	11562-11563	,	
40-33	11564-11567	and	
40-34	11568-11577	analytics	
40-35	11577-11578	.	
40-36	11579-11585	Google	
40-37	11586-11595	Marketing	
40-38	11596-11604	Platform	
40-39	11605-11614	Marketing	
40-40	11615-11623	platform	
40-41	11624-11632	unifying	
40-42	11633-11644	advertising	
40-43	11645-11648	and	
40-44	11649-11658	analytics	
40-45	11658-11659	.	
40-46	11660-11665	Cloud	
40-47	11666-11670	Life	
40-48	11671-11679	Sciences	

#Text=Tools for managing, processing, and transforming biomedical data. Databases Cloud Bigtable Cloud-native wide-column database for large scale, low-latency workloads. Firestore Cloud-native document database for building rich mobile, web, and IoT apps. Memorystore
41-1	11680-11685	Tools	
41-2	11686-11689	for	
41-3	11690-11698	managing	
41-4	11698-11699	,	
41-5	11700-11710	processing	
41-6	11710-11711	,	
41-7	11712-11715	and	
41-8	11716-11728	transforming	
41-9	11729-11739	biomedical	
41-10	11740-11744	data	
41-11	11744-11745	.	
41-12	11746-11755	Databases	
41-13	11756-11761	Cloud	
41-14	11762-11770	Bigtable	
41-15	11771-11783	Cloud-native	
41-16	11784-11795	wide-column	
41-17	11796-11804	database	
41-18	11805-11808	for	
41-19	11809-11814	large	
41-20	11815-11820	scale	
41-21	11820-11821	,	
41-22	11822-11833	low-latency	
41-23	11834-11843	workloads	
41-24	11843-11844	.	
41-25	11845-11854	Firestore	
41-26	11855-11867	Cloud-native	
41-27	11868-11876	document	
41-28	11877-11885	database	
41-29	11886-11889	for	
41-30	11890-11898	building	
41-31	11899-11903	rich	
41-32	11904-11910	mobile	
41-33	11910-11911	,	
41-34	11912-11915	web	
41-35	11915-11916	,	
41-36	11917-11920	and	
41-37	11921-11924	IoT	
41-38	11925-11929	apps	
41-39	11929-11930	.	
41-40	11931-11942	Memorystore	

#Text=In-memory database for managed Redis and Memcached. Cloud Spanner Cloud-native relational database with unlimited scale and 99.999% availability. Cloud SQL Fully managed database for MySQL, PostgreSQL, and SQL Server. Database Migration Service
42-1	11943-11952	In-memory	
42-2	11953-11961	database	
42-3	11962-11965	for	
42-4	11966-11973	managed	
42-5	11974-11979	Redis	
42-6	11980-11983	and	
42-7	11984-11993	Memcached	
42-8	11993-11994	.	
42-9	11995-12000	Cloud	
42-10	12001-12008	Spanner	
42-11	12009-12021	Cloud-native	
42-12	12022-12032	relational	
42-13	12033-12041	database	
42-14	12042-12046	with	
42-15	12047-12056	unlimited	
42-16	12057-12062	scale	
42-17	12063-12066	and	
42-18	12067-12074	99.999%	
42-19	12075-12087	availability	
42-20	12087-12088	.	
42-21	12089-12094	Cloud	
42-22	12095-12098	SQL	
42-23	12099-12104	Fully	
42-24	12105-12112	managed	
42-25	12113-12121	database	
42-26	12122-12125	for	
42-27	12126-12131	MySQL	
42-28	12131-12132	,	
42-29	12133-12143	PostgreSQL	
42-30	12143-12144	,	
42-31	12145-12148	and	
42-32	12149-12152	SQL	
42-33	12153-12159	Server	
42-34	12159-12160	.	
42-35	12161-12169	Database	
42-36	12170-12179	Migration	
42-37	12180-12187	Service	

#Text=Serverless, minimal downtime migrations to Cloud SQL. Bare Metal Infrastructure to run specialized workloads on Google Cloud. Firebase Realtime Database NoSQL database for storing and syncing data in real time. Developer Tools Artifact Registry Universal package manager for build artifacts and dependencies.
43-1	12188-12198	Serverless	
43-2	12198-12199	,	
43-3	12200-12207	minimal	
43-4	12208-12216	downtime	
43-5	12217-12227	migrations	
43-6	12228-12230	to	
43-7	12231-12236	Cloud	
43-8	12237-12240	SQL	
43-9	12240-12241	.	
43-10	12242-12246	Bare	
43-11	12247-12252	Metal	
43-12	12253-12267	Infrastructure	
43-13	12268-12270	to	
43-14	12271-12274	run	
43-15	12275-12286	specialized	
43-16	12287-12296	workloads	
43-17	12297-12299	on	
43-18	12300-12306	Google	
43-19	12307-12312	Cloud	
43-20	12312-12313	.	
43-21	12314-12322	Firebase	
43-22	12323-12331	Realtime	
43-23	12332-12340	Database	
43-24	12341-12346	NoSQL	
43-25	12347-12355	database	
43-26	12356-12359	for	
43-27	12360-12367	storing	
43-28	12368-12371	and	
43-29	12372-12379	syncing	
43-30	12380-12384	data	
43-31	12385-12387	in	
43-32	12388-12392	real	
43-33	12393-12397	time	
43-34	12397-12398	.	
43-35	12399-12408	Developer	
43-36	12409-12414	Tools	
43-37	12415-12423	Artifact	
43-38	12424-12432	Registry	
43-39	12433-12442	Universal	
43-40	12443-12450	package	
43-41	12451-12458	manager	
43-42	12459-12462	for	
43-43	12463-12468	build	
43-44	12469-12478	artifacts	
43-45	12479-12482	and	
43-46	12483-12495	dependencies	
43-47	12495-12496	.	

#Text=Cloud Build Continuous integration and continuous delivery platform. Cloud Code IDE support to write, run, and debug Kubernetes applications. Cloud Deployment Manager Service for creating and managing Google Cloud resources. Cloud SDK
44-1	12497-12502	Cloud	
44-2	12503-12508	Build	
44-3	12509-12519	Continuous	
44-4	12520-12531	integration	
44-5	12532-12535	and	
44-6	12536-12546	continuous	
44-7	12547-12555	delivery	
44-8	12556-12564	platform	
44-9	12564-12565	.	
44-10	12566-12571	Cloud	
44-11	12572-12576	Code	
44-12	12577-12580	IDE	
44-13	12581-12588	support	
44-14	12589-12591	to	
44-15	12592-12597	write	
44-16	12597-12598	,	
44-17	12599-12602	run	
44-18	12602-12603	,	
44-19	12604-12607	and	
44-20	12608-12613	debug	
44-21	12614-12624	Kubernetes	
44-22	12625-12637	applications	
44-23	12637-12638	.	
44-24	12639-12644	Cloud	
44-25	12645-12655	Deployment	
44-26	12656-12663	Manager	
44-27	12664-12671	Service	
44-28	12672-12675	for	
44-29	12676-12684	creating	
44-30	12685-12688	and	
44-31	12689-12697	managing	
44-32	12698-12704	Google	
44-33	12705-12710	Cloud	
44-34	12711-12720	resources	
44-35	12720-12721	.	
44-36	12722-12727	Cloud	
44-37	12728-12731	SDK	

#Text=Command line tools and libraries for Google Cloud. Cloud Scheduler Cron job scheduler for task automation and management. Cloud Source Repositories Private Git repository to store, manage, and track code. Cloud Tasks Task management service for asynchronous task execution.
45-1	12732-12739	Command	
45-2	12740-12744	line	
45-3	12745-12750	tools	
45-4	12751-12754	and	
45-5	12755-12764	libraries	
45-6	12765-12768	for	
45-7	12769-12775	Google	
45-8	12776-12781	Cloud	
45-9	12781-12782	.	
45-10	12783-12788	Cloud	
45-11	12789-12798	Scheduler	
45-12	12799-12803	Cron	
45-13	12804-12807	job	
45-14	12808-12817	scheduler	
45-15	12818-12821	for	
45-16	12822-12826	task	
45-17	12827-12837	automation	
45-18	12838-12841	and	
45-19	12842-12852	management	
45-20	12852-12853	.	
45-21	12854-12859	Cloud	
45-22	12860-12866	Source	
45-23	12867-12879	Repositories	
45-24	12880-12887	Private	
45-25	12888-12891	Git	
45-26	12892-12902	repository	
45-27	12903-12905	to	
45-28	12906-12911	store	
45-29	12911-12912	,	
45-30	12913-12919	manage	
45-31	12919-12920	,	
45-32	12921-12924	and	
45-33	12925-12930	track	
45-34	12931-12935	code	
45-35	12935-12936	.	
45-36	12937-12942	Cloud	
45-37	12943-12948	Tasks	
45-38	12949-12953	Task	
45-39	12954-12964	management	
45-40	12965-12972	service	
45-41	12973-12976	for	
45-42	12977-12989	asynchronous	
45-43	12990-12994	task	
45-44	12995-13004	execution	
45-45	13004-13005	.	

#Text=Container Registry Private Docker storage for container images on Google Cloud. Tekton Kubernetes-native resources for declaring CI/CD pipelines. Not seeing what you're looking for? See all developer tools Healthcare and Life Sciences Apigee Healthcare APIx
46-1	13006-13015	Container	
46-2	13016-13024	Registry	
46-3	13025-13032	Private	
46-4	13033-13039	Docker	
46-5	13040-13047	storage	
46-6	13048-13051	for	
46-7	13052-13061	container	
46-8	13062-13068	images	
46-9	13069-13071	on	
46-10	13072-13078	Google	
46-11	13079-13084	Cloud	
46-12	13084-13085	.	
46-13	13086-13092	Tekton	
46-14	13093-13110	Kubernetes-native	
46-15	13111-13120	resources	
46-16	13121-13124	for	
46-17	13125-13134	declaring	
46-18	13135-13137	CI	
46-19	13137-13138	/	
46-20	13138-13140	CD	
46-21	13141-13150	pipelines	
46-22	13150-13151	.	
46-23	13152-13155	Not	
46-24	13156-13162	seeing	
46-25	13163-13167	what	
46-26	13168-13174	you're	
46-27	13175-13182	looking	
46-28	13183-13186	for	
46-29	13186-13187	?	
46-30	13188-13191	See	
46-31	13192-13195	all	
46-32	13196-13205	developer	
46-33	13206-13211	tools	
46-34	13212-13222	Healthcare	
46-35	13223-13226	and	
46-36	13227-13231	Life	
46-37	13232-13240	Sciences	
46-38	13241-13247	Apigee	
46-39	13248-13258	Healthcare	
46-40	13259-13263	APIx	

#Text=FHIR API-based digital service production. Cloud Healthcare API Solution for bridging existing care systems and apps on Google Cloud. Cloud Life Sciences Tools for managing, processing, and transforming biomedical data. Healthcare Natural Language AI Real-time insights from unstructured medical text.
47-1	13264-13268	FHIR	
47-2	13269-13278	API-based	
47-3	13279-13286	digital	
47-4	13287-13294	service	
47-5	13295-13305	production	
47-6	13305-13306	.	
47-7	13307-13312	Cloud	
47-8	13313-13323	Healthcare	
47-9	13324-13327	API	
47-10	13328-13336	Solution	
47-11	13337-13340	for	
47-12	13341-13349	bridging	
47-13	13350-13358	existing	
47-14	13359-13363	care	
47-15	13364-13371	systems	
47-16	13372-13375	and	
47-17	13376-13380	apps	
47-18	13381-13383	on	
47-19	13384-13390	Google	
47-20	13391-13396	Cloud	
47-21	13396-13397	.	
47-22	13398-13403	Cloud	
47-23	13404-13408	Life	
47-24	13409-13417	Sciences	
47-25	13418-13423	Tools	
47-26	13424-13427	for	
47-27	13428-13436	managing	
47-28	13436-13437	,	
47-29	13438-13448	processing	
47-30	13448-13449	,	
47-31	13450-13453	and	
47-32	13454-13466	transforming	
47-33	13467-13477	biomedical	
47-34	13478-13482	data	
47-35	13482-13483	.	
47-36	13484-13494	Healthcare	
47-37	13495-13502	Natural	
47-38	13503-13511	Language	
47-39	13512-13514	AI	
47-40	13515-13524	Real-time	
47-41	13525-13533	insights	
47-42	13534-13538	from	
47-43	13539-13551	unstructured	
47-44	13552-13559	medical	
47-45	13560-13564	text	
47-46	13564-13565	.	

#Text=Hybrid and Multi-cloud Anthos Platform for modernizing existing apps and building new ones. Looker Platform for BI, data applications, and embedded analytics. Cloud Run for Anthos Integration that provides a serverless development platform on GKE.
48-1	13566-13572	Hybrid	
48-2	13573-13576	and	
48-3	13577-13588	Multi-cloud	
48-4	13589-13595	Anthos	
48-5	13596-13604	Platform	
48-6	13605-13608	for	
48-7	13609-13620	modernizing	
48-8	13621-13629	existing	
48-9	13630-13634	apps	
48-10	13635-13638	and	
48-11	13639-13647	building	
48-12	13648-13651	new	
48-13	13652-13656	ones	
48-14	13656-13657	.	
48-15	13658-13664	Looker	
48-16	13665-13673	Platform	
48-17	13674-13677	for	
48-18	13678-13680	BI	
48-19	13680-13681	,	
48-20	13682-13686	data	
48-21	13687-13699	applications	
48-22	13699-13700	,	
48-23	13701-13704	and	
48-24	13705-13713	embedded	
48-25	13714-13723	analytics	
48-26	13723-13724	.	
48-27	13725-13730	Cloud	
48-28	13731-13734	Run	
48-29	13735-13738	for	
48-30	13739-13745	Anthos	
48-31	13746-13757	Integration	
48-32	13758-13762	that	
48-33	13763-13771	provides	
48-34	13772-13773	a	
48-35	13774-13784	serverless	
48-36	13785-13796	development	
48-37	13797-13805	platform	
48-38	13806-13808	on	
48-39	13809-13812	GKE	
48-40	13812-13813	.	

#Text=Google Cloud Marketplace for Anthos Containerized apps with prebuilt deployment and unified billing. Migrate for Anthos Tool to move workloads and existing applications to GKE. Operations Monitoring, logging, and application performance suite. Cloud Build
49-1	13814-13820	Google	
49-2	13821-13826	Cloud	
49-3	13827-13838	Marketplace	
49-4	13839-13842	for	
49-5	13843-13849	Anthos	
49-6	13850-13863	Containerized	
49-7	13864-13868	apps	
49-8	13869-13873	with	
49-9	13874-13882	prebuilt	
49-10	13883-13893	deployment	
49-11	13894-13897	and	
49-12	13898-13905	unified	
49-13	13906-13913	billing	
49-14	13913-13914	.	
49-15	13915-13922	Migrate	
49-16	13923-13926	for	
49-17	13927-13933	Anthos	
49-18	13934-13938	Tool	
49-19	13939-13941	to	
49-20	13942-13946	move	
49-21	13947-13956	workloads	
49-22	13957-13960	and	
49-23	13961-13969	existing	
49-24	13970-13982	applications	
49-25	13983-13985	to	
49-26	13986-13989	GKE	
49-27	13989-13990	.	
49-28	13991-14001	Operations	
49-29	14002-14012	Monitoring	
49-30	14012-14013	,	
49-31	14014-14021	logging	
49-32	14021-14022	,	
49-33	14023-14026	and	
49-34	14027-14038	application	
49-35	14039-14050	performance	
49-36	14051-14056	suite	
49-37	14056-14057	.	
49-38	14058-14063	Cloud	
49-39	14064-14069	Build	

#Text=Service for executing builds on Google Cloud infrastructure. Traffic Director Traffic control pane and management for open service mesh. Apigee API Management API management, development, and security platform. Internet of Things Cloud IoT Core IoT device management, integration, and connection service.
50-1	14070-14077	Service	
50-2	14078-14081	for	
50-3	14082-14091	executing	
50-4	14092-14098	builds	
50-5	14099-14101	on	
50-6	14102-14108	Google	
50-7	14109-14114	Cloud	
50-8	14115-14129	infrastructure	
50-9	14129-14130	.	
50-10	14131-14138	Traffic	
50-11	14139-14147	Director	
50-12	14148-14155	Traffic	
50-13	14156-14163	control	
50-14	14164-14168	pane	
50-15	14169-14172	and	
50-16	14173-14183	management	
50-17	14184-14187	for	
50-18	14188-14192	open	
50-19	14193-14200	service	
50-20	14201-14205	mesh	
50-21	14205-14206	.	
50-22	14207-14213	Apigee	
50-23	14214-14217	API	
50-24	14218-14228	Management	
50-25	14229-14232	API	
50-26	14233-14243	management	
50-27	14243-14244	,	
50-28	14245-14256	development	
50-29	14256-14257	,	
50-30	14258-14261	and	
50-31	14262-14270	security	
50-32	14271-14279	platform	
50-33	14279-14280	.	
50-34	14281-14289	Internet	
50-35	14290-14292	of	
50-36	14293-14299	Things	
50-37	14300-14305	Cloud	
50-38	14306-14309	IoT	
50-39	14310-14314	Core	
50-40	14315-14318	IoT	
50-41	14319-14325	device	
50-42	14326-14336	management	
50-43	14336-14337	,	
50-44	14338-14349	integration	
50-45	14349-14350	,	
50-46	14351-14354	and	
50-47	14355-14365	connection	
50-48	14366-14373	service	
50-49	14373-14374	.	

#Text=Edge TPU ASIC designed to run ML inference and AI at the edge. Management Tools Cloud Shell Interactive shell environment with a built-in command line. Cloud Console Web-based interface for managing and monitoring cloud apps. Cloud Deployment Manager
51-1	14375-14379	Edge	
51-2	14380-14383	TPU	
51-3	14384-14388	ASIC	
51-4	14389-14397	designed	
51-5	14398-14400	to	
51-6	14401-14404	run	
51-7	14405-14407	ML	
51-8	14408-14417	inference	
51-9	14418-14421	and	
51-10	14422-14424	AI	
51-11	14425-14427	at	
51-12	14428-14431	the	
51-13	14432-14436	edge	
51-14	14436-14437	.	
51-15	14438-14448	Management	
51-16	14449-14454	Tools	
51-17	14455-14460	Cloud	
51-18	14461-14466	Shell	
51-19	14467-14478	Interactive	
51-20	14479-14484	shell	
51-21	14485-14496	environment	
51-22	14497-14501	with	
51-23	14502-14503	a	
51-24	14504-14512	built-in	
51-25	14513-14520	command	
51-26	14521-14525	line	
51-27	14525-14526	.	
51-28	14527-14532	Cloud	
51-29	14533-14540	Console	
51-30	14541-14550	Web-based	
51-31	14551-14560	interface	
51-32	14561-14564	for	
51-33	14565-14573	managing	
51-34	14574-14577	and	
51-35	14578-14588	monitoring	
51-36	14589-14594	cloud	
51-37	14595-14599	apps	
51-38	14599-14600	.	
51-39	14601-14606	Cloud	
51-40	14607-14617	Deployment	
51-41	14618-14625	Manager	

#Text=Service for creating and managing Google Cloud resources. Cloud Mobile App App to manage Google Cloud services from your mobile device. Cloud APIs Programmatic interfaces for Google Cloud services. Private Catalog Service catalog for admins managing internal enterprise solutions. Cost Management
52-1	14626-14633	Service	
52-2	14634-14637	for	
52-3	14638-14646	creating	
52-4	14647-14650	and	
52-5	14651-14659	managing	
52-6	14660-14666	Google	
52-7	14667-14672	Cloud	
52-8	14673-14682	resources	
52-9	14682-14683	.	
52-10	14684-14689	Cloud	
52-11	14690-14696	Mobile	
52-12	14697-14700	App	
52-13	14701-14704	App	
52-14	14705-14707	to	
52-15	14708-14714	manage	
52-16	14715-14721	Google	
52-17	14722-14727	Cloud	
52-18	14728-14736	services	
52-19	14737-14741	from	
52-20	14742-14746	your	
52-21	14747-14753	mobile	
52-22	14754-14760	device	
52-23	14760-14761	.	
52-24	14762-14767	Cloud	
52-25	14768-14772	APIs	
52-26	14773-14785	Programmatic	
52-27	14786-14796	interfaces	
52-28	14797-14800	for	
52-29	14801-14807	Google	
52-30	14808-14813	Cloud	
52-31	14814-14822	services	
52-32	14822-14823	.	
52-33	14824-14831	Private	
52-34	14832-14839	Catalog	
52-35	14840-14847	Service	
52-36	14848-14855	catalog	
52-37	14856-14859	for	
52-38	14860-14866	admins	
52-39	14867-14875	managing	
52-40	14876-14884	internal	
52-41	14885-14895	enterprise	
52-42	14896-14905	solutions	
52-43	14905-14906	.	
52-44	14907-14911	Cost	
52-45	14912-14922	Management	

#Text=Tools for monitoring, controlling, and optimizing your costs. Intelligent Management Tools for easily managing performance, security, and cost. Media and Gaming Game Servers Game server management service running on Google Kubernetes Engine. OpenCue Open source render manager for visual effects and animation. Migration
53-1	14923-14928	Tools	
53-2	14929-14932	for	
53-3	14933-14943	monitoring	
53-4	14943-14944	,	
53-5	14945-14956	controlling	
53-6	14956-14957	,	
53-7	14958-14961	and	
53-8	14962-14972	optimizing	
53-9	14973-14977	your	
53-10	14978-14983	costs	
53-11	14983-14984	.	
53-12	14985-14996	Intelligent	
53-13	14997-15007	Management	
53-14	15008-15013	Tools	
53-15	15014-15017	for	
53-16	15018-15024	easily	
53-17	15025-15033	managing	
53-18	15034-15045	performance	
53-19	15045-15046	,	
53-20	15047-15055	security	
53-21	15055-15056	,	
53-22	15057-15060	and	
53-23	15061-15065	cost	
53-24	15065-15066	.	
53-25	15067-15072	Media	
53-26	15073-15076	and	
53-27	15077-15083	Gaming	
53-28	15084-15088	Game	
53-29	15089-15096	Servers	
53-30	15097-15101	Game	
53-31	15102-15108	server	
53-32	15109-15119	management	
53-33	15120-15127	service	
53-34	15128-15135	running	
53-35	15136-15138	on	
53-36	15139-15145	Google	
53-37	15146-15156	Kubernetes	
53-38	15157-15163	Engine	
53-39	15163-15164	.	
53-40	15165-15172	OpenCue	
53-41	15173-15177	Open	
53-42	15178-15184	source	
53-43	15185-15191	render	
53-44	15192-15199	manager	
53-45	15200-15203	for	
53-46	15204-15210	visual	
53-47	15211-15218	effects	
53-48	15219-15222	and	
53-49	15223-15232	animation	
53-50	15232-15233	.	
53-51	15234-15243	Migration	

#Text=Application Migration App migration to the cloud for low-cost refresh cycles. BigQuery Data Transfer Service Data import service for scheduling and moving data into BigQuery. Cloud Data Transfer Tools and services for transferring your data to Google Cloud.
54-1	15244-15255	Application	
54-2	15256-15265	Migration	
54-3	15266-15269	App	
54-4	15270-15279	migration	
54-5	15280-15282	to	
54-6	15283-15286	the	
54-7	15287-15292	cloud	
54-8	15293-15296	for	
54-9	15297-15305	low-cost	
54-10	15306-15313	refresh	
54-11	15314-15320	cycles	
54-12	15320-15321	.	
54-13	15322-15330	BigQuery	
54-14	15331-15335	Data	
54-15	15336-15344	Transfer	
54-16	15345-15352	Service	
54-17	15353-15357	Data	
54-18	15358-15364	import	
54-19	15365-15372	service	
54-20	15373-15376	for	
54-21	15377-15387	scheduling	
54-22	15388-15391	and	
54-23	15392-15398	moving	
54-24	15399-15403	data	
54-25	15404-15408	into	
54-26	15409-15417	BigQuery	
54-27	15417-15418	.	
54-28	15419-15424	Cloud	
54-29	15425-15429	Data	
54-30	15430-15438	Transfer	
54-31	15439-15444	Tools	
54-32	15445-15448	and	
54-33	15449-15457	services	
54-34	15458-15461	for	
54-35	15462-15474	transferring	
54-36	15475-15479	your	
54-37	15480-15484	data	
54-38	15485-15487	to	
54-39	15488-15494	Google	
54-40	15495-15500	Cloud	
54-41	15500-15501	.	

#Text=Cloud Foundation Toolkit Reference templates for Deployment Manager and Terraform. Database Migration Service Serverless, minimal downtime migrations to Cloud SQL. Migrate for Anthos Components for migrating VMs into system containers on GKE.
55-1	15502-15507	Cloud	
55-2	15508-15518	Foundation	
55-3	15519-15526	Toolkit	
55-4	15527-15536	Reference	
55-5	15537-15546	templates	
55-6	15547-15550	for	
55-7	15551-15561	Deployment	
55-8	15562-15569	Manager	
55-9	15570-15573	and	
55-10	15574-15583	Terraform	
55-11	15583-15584	.	
55-12	15585-15593	Database	
55-13	15594-15603	Migration	
55-14	15604-15611	Service	
55-15	15612-15622	Serverless	
55-16	15622-15623	,	
55-17	15624-15631	minimal	
55-18	15632-15640	downtime	
55-19	15641-15651	migrations	
55-20	15652-15654	to	
55-21	15655-15660	Cloud	
55-22	15661-15664	SQL	
55-23	15664-15665	.	
55-24	15666-15673	Migrate	
55-25	15674-15677	for	
55-26	15678-15684	Anthos	
55-27	15685-15695	Components	
55-28	15696-15699	for	
55-29	15700-15709	migrating	
55-30	15710-15713	VMs	
55-31	15714-15718	into	
55-32	15719-15725	system	
55-33	15726-15736	containers	
55-34	15737-15739	on	
55-35	15740-15743	GKE	
55-36	15743-15744	.	

#Text=Migrate for Compute Engine Components for migrating VMs and physical servers to Compute Engine. Rapid Assessment & Migration Program (RAMP) End-to-end migration program to simplify your path to the cloud. Transfer Appliance
56-1	15745-15752	Migrate	
56-2	15753-15756	for	
56-3	15757-15764	Compute	
56-4	15765-15771	Engine	
56-5	15772-15782	Components	
56-6	15783-15786	for	
56-7	15787-15796	migrating	
56-8	15797-15800	VMs	
56-9	15801-15804	and	
56-10	15805-15813	physical	
56-11	15814-15821	servers	
56-12	15822-15824	to	
56-13	15825-15832	Compute	
56-14	15833-15839	Engine	
56-15	15839-15840	.	
56-16	15841-15846	Rapid	
56-17	15847-15857	Assessment	
56-18	15858-15859	&	
56-19	15860-15869	Migration	
56-20	15870-15877	Program	
56-21	15878-15879	(	
56-22	15879-15883	RAMP	
56-23	15883-15884	)	
56-24	15885-15895	End-to-end	
56-25	15896-15905	migration	
56-26	15906-15913	program	
56-27	15914-15916	to	
56-28	15917-15925	simplify	
56-29	15926-15930	your	
56-30	15931-15935	path	
56-31	15936-15938	to	
56-32	15939-15942	the	
56-33	15943-15948	cloud	
56-34	15948-15949	.	
56-35	15950-15958	Transfer	
56-36	15959-15968	Appliance	

#Text=Storage server for moving large volumes of data to Google Cloud. Transfer Service Data transfers from online and on-premises sources to Cloud Storage. VMware Engine Migrate and run your VMware workloads natively on Google Cloud. Networking Cloud Armor Security policies and defense against web and DDoS attacks.
57-1	15969-15976	Storage	
57-2	15977-15983	server	
57-3	15984-15987	for	
57-4	15988-15994	moving	
57-5	15995-16000	large	
57-6	16001-16008	volumes	
57-7	16009-16011	of	
57-8	16012-16016	data	
57-9	16017-16019	to	
57-10	16020-16026	Google	
57-11	16027-16032	Cloud	
57-12	16032-16033	.	
57-13	16034-16042	Transfer	
57-14	16043-16050	Service	
57-15	16051-16055	Data	
57-16	16056-16065	transfers	
57-17	16066-16070	from	
57-18	16071-16077	online	
57-19	16078-16081	and	
57-20	16082-16093	on-premises	
57-21	16094-16101	sources	
57-22	16102-16104	to	
57-23	16105-16110	Cloud	
57-24	16111-16118	Storage	
57-25	16118-16119	.	
57-26	16120-16126	VMware	
57-27	16127-16133	Engine	
57-28	16134-16141	Migrate	
57-29	16142-16145	and	
57-30	16146-16149	run	
57-31	16150-16154	your	
57-32	16155-16161	VMware	
57-33	16162-16171	workloads	
57-34	16172-16180	natively	
57-35	16181-16183	on	
57-36	16184-16190	Google	
57-37	16191-16196	Cloud	
57-38	16196-16197	.	
57-39	16198-16208	Networking	
57-40	16209-16214	Cloud	
57-41	16215-16220	Armor	
57-42	16221-16229	Security	
57-43	16230-16238	policies	
57-44	16239-16242	and	
57-45	16243-16250	defense	
57-46	16251-16258	against	
57-47	16259-16262	web	
57-48	16263-16266	and	
57-49	16267-16271	DDoS	
57-50	16272-16279	attacks	
57-51	16279-16280	.	

#Text=Cloud CDN Content delivery network for serving web and video content. Cloud DNS Domain name system for reliable and low-latency name lookups. Cloud Load Balancing Service for distributing traffic across applications and regions. Cloud NAT NAT service for giving private instances internet access.
58-1	16281-16286	Cloud	
58-2	16287-16290	CDN	
58-3	16291-16298	Content	
58-4	16299-16307	delivery	
58-5	16308-16315	network	
58-6	16316-16319	for	
58-7	16320-16327	serving	
58-8	16328-16331	web	
58-9	16332-16335	and	
58-10	16336-16341	video	
58-11	16342-16349	content	
58-12	16349-16350	.	
58-13	16351-16356	Cloud	
58-14	16357-16360	DNS	
58-15	16361-16367	Domain	
58-16	16368-16372	name	
58-17	16373-16379	system	
58-18	16380-16383	for	
58-19	16384-16392	reliable	
58-20	16393-16396	and	
58-21	16397-16408	low-latency	
58-22	16409-16413	name	
58-23	16414-16421	lookups	
58-24	16421-16422	.	
58-25	16423-16428	Cloud	
58-26	16429-16433	Load	
58-27	16434-16443	Balancing	
58-28	16444-16451	Service	
58-29	16452-16455	for	
58-30	16456-16468	distributing	
58-31	16469-16476	traffic	
58-32	16477-16483	across	
58-33	16484-16496	applications	
58-34	16497-16500	and	
58-35	16501-16508	regions	
58-36	16508-16509	.	
58-37	16510-16515	Cloud	
58-38	16516-16519	NAT	
58-39	16520-16523	NAT	
58-40	16524-16531	service	
58-41	16532-16535	for	
58-42	16536-16542	giving	
58-43	16543-16550	private	
58-44	16551-16560	instances	
58-45	16561-16569	internet	
58-46	16570-16576	access	
58-47	16576-16577	.	

#Text=Hybrid Connectivity Connectivity options for VPN, peering, and enterprise needs. Network Intelligence Center Network monitoring, verification, and optimization platform. Network Service Tiers Cloud network options based on performance, availability, and cost. Network Telemetry
59-1	16578-16584	Hybrid	
59-2	16585-16597	Connectivity	
59-3	16598-16610	Connectivity	
59-4	16611-16618	options	
59-5	16619-16622	for	
59-6	16623-16626	VPN	
59-7	16626-16627	,	
59-8	16628-16635	peering	
59-9	16635-16636	,	
59-10	16637-16640	and	
59-11	16641-16651	enterprise	
59-12	16652-16657	needs	
59-13	16657-16658	.	
59-14	16659-16666	Network	
59-15	16667-16679	Intelligence	
59-16	16680-16686	Center	
59-17	16687-16694	Network	
59-18	16695-16705	monitoring	
59-19	16705-16706	,	
59-20	16707-16719	verification	
59-21	16719-16720	,	
59-22	16721-16724	and	
59-23	16725-16737	optimization	
59-24	16738-16746	platform	
59-25	16746-16747	.	
59-26	16748-16755	Network	
59-27	16756-16763	Service	
59-28	16764-16769	Tiers	
59-29	16770-16775	Cloud	
59-30	16776-16783	network	
59-31	16784-16791	options	
59-32	16792-16797	based	
59-33	16798-16800	on	
59-34	16801-16812	performance	
59-35	16812-16813	,	
59-36	16814-16826	availability	
59-37	16826-16827	,	
59-38	16828-16831	and	
59-39	16832-16836	cost	
59-40	16836-16837	.	
59-41	16838-16845	Network	
59-42	16846-16855	Telemetry	

#Text=VPC flow logs for network monitoring, forensics, and security. Traffic Director Traffic control pane and management for open service mesh. Virtual Private Cloud Virtual network for Google Cloud resources and cloud-based services. Service Directory Platform for discovering, publishing, and connecting services. Operations Cloud Logging
60-1	16856-16859	VPC	
60-2	16860-16864	flow	
60-3	16865-16869	logs	
60-4	16870-16873	for	
60-5	16874-16881	network	
60-6	16882-16892	monitoring	
60-7	16892-16893	,	
60-8	16894-16903	forensics	
60-9	16903-16904	,	
60-10	16905-16908	and	
60-11	16909-16917	security	
60-12	16917-16918	.	
60-13	16919-16926	Traffic	
60-14	16927-16935	Director	
60-15	16936-16943	Traffic	
60-16	16944-16951	control	
60-17	16952-16956	pane	
60-18	16957-16960	and	
60-19	16961-16971	management	
60-20	16972-16975	for	
60-21	16976-16980	open	
60-22	16981-16988	service	
60-23	16989-16993	mesh	
60-24	16993-16994	.	
60-25	16995-17002	Virtual	
60-26	17003-17010	Private	
60-27	17011-17016	Cloud	
60-28	17017-17024	Virtual	
60-29	17025-17032	network	
60-30	17033-17036	for	
60-31	17037-17043	Google	
60-32	17044-17049	Cloud	
60-33	17050-17059	resources	
60-34	17060-17063	and	
60-35	17064-17075	cloud-based	
60-36	17076-17084	services	
60-37	17084-17085	.	
60-38	17086-17093	Service	
60-39	17094-17103	Directory	
60-40	17104-17112	Platform	
60-41	17113-17116	for	
60-42	17117-17128	discovering	
60-43	17128-17129	,	
60-44	17130-17140	publishing	
60-45	17140-17141	,	
60-46	17142-17145	and	
60-47	17146-17156	connecting	
60-48	17157-17165	services	
60-49	17165-17166	.	
60-50	17167-17177	Operations	
60-51	17178-17183	Cloud	
60-52	17184-17191	Logging	

#Text=Google Cloud audit, platform, and application logs management. Cloud Monitoring Infrastructure and application health with rich metrics. Error Reporting Application error identification and analysis. Kubernetes Engine Monitoring GKE app development and troubleshooting. Cloud Trace Tracing system collecting latency data from applications.
61-1	17192-17198	Google	
61-2	17199-17204	Cloud	
61-3	17205-17210	audit	
61-4	17210-17211	,	
61-5	17212-17220	platform	
61-6	17220-17221	,	
61-7	17222-17225	and	
61-8	17226-17237	application	
61-9	17238-17242	logs	
61-10	17243-17253	management	
61-11	17253-17254	.	
61-12	17255-17260	Cloud	
61-13	17261-17271	Monitoring	
61-14	17272-17286	Infrastructure	
61-15	17287-17290	and	
61-16	17291-17302	application	
61-17	17303-17309	health	
61-18	17310-17314	with	
61-19	17315-17319	rich	
61-20	17320-17327	metrics	
61-21	17327-17328	.	
61-22	17329-17334	Error	
61-23	17335-17344	Reporting	
61-24	17345-17356	Application	
61-25	17357-17362	error	
61-26	17363-17377	identification	
61-27	17378-17381	and	
61-28	17382-17390	analysis	
61-29	17390-17391	.	
61-30	17392-17402	Kubernetes	
61-31	17403-17409	Engine	
61-32	17410-17420	Monitoring	
61-33	17421-17424	GKE	
61-34	17425-17428	app	
61-35	17429-17440	development	
61-36	17441-17444	and	
61-37	17445-17460	troubleshooting	
61-38	17460-17461	.	
61-39	17462-17467	Cloud	
61-40	17468-17473	Trace	
61-41	17474-17481	Tracing	
61-42	17482-17488	system	
61-43	17489-17499	collecting	
61-44	17500-17507	latency	
61-45	17508-17512	data	
61-46	17513-17517	from	
61-47	17518-17530	applications	
61-48	17530-17531	.	

#Text=Cloud Profiler CPU and heap profiler for analyzing application performance. Cloud Debugger Real-time application state inspection and in-production debugging. Intelligent Operations Tools for easily optimizing performance, security, and cost. Security and Identity Cloud IAM
62-1	17532-17537	Cloud	
62-2	17538-17546	Profiler	
62-3	17547-17550	CPU	
62-4	17551-17554	and	
62-5	17555-17559	heap	
62-6	17560-17568	profiler	
62-7	17569-17572	for	
62-8	17573-17582	analyzing	
62-9	17583-17594	application	
62-10	17595-17606	performance	
62-11	17606-17607	.	
62-12	17608-17613	Cloud	
62-13	17614-17622	Debugger	
62-14	17623-17632	Real-time	
62-15	17633-17644	application	
62-16	17645-17650	state	
62-17	17651-17661	inspection	
62-18	17662-17665	and	
62-19	17666-17679	in-production	
62-20	17680-17689	debugging	
62-21	17689-17690	.	
62-22	17691-17702	Intelligent	
62-23	17703-17713	Operations	
62-24	17714-17719	Tools	
62-25	17720-17723	for	
62-26	17724-17730	easily	
62-27	17731-17741	optimizing	
62-28	17742-17753	performance	
62-29	17753-17754	,	
62-30	17755-17763	security	
62-31	17763-17764	,	
62-32	17765-17768	and	
62-33	17769-17773	cost	
62-34	17773-17774	.	
62-35	17775-17783	Security	
62-36	17784-17787	and	
62-37	17788-17796	Identity	
62-38	17797-17802	Cloud	
62-39	17803-17806	IAM	

#Text=Permissions management system for Google Cloud resources. Assured Workloads Compliance and security controls for sensitive workloads. Cloud Key Management Manage encryption keys on Google Cloud. Confidential Computing Encrypt data in use with Confidential VMs. Security Command Center
63-1	17807-17818	Permissions	
63-2	17819-17829	management	
63-3	17830-17836	system	
63-4	17837-17840	for	
63-5	17841-17847	Google	
63-6	17848-17853	Cloud	
63-7	17854-17863	resources	
63-8	17863-17864	.	
63-9	17865-17872	Assured	
63-10	17873-17882	Workloads	
63-11	17883-17893	Compliance	
63-12	17894-17897	and	
63-13	17898-17906	security	
63-14	17907-17915	controls	
63-15	17916-17919	for	
63-16	17920-17929	sensitive	
63-17	17930-17939	workloads	
63-18	17939-17940	.	
63-19	17941-17946	Cloud	
63-20	17947-17950	Key	
63-21	17951-17961	Management	
63-22	17962-17968	Manage	
63-23	17969-17979	encryption	
63-24	17980-17984	keys	
63-25	17985-17987	on	
63-26	17988-17994	Google	
63-27	17995-18000	Cloud	
63-28	18000-18001	.	
63-29	18002-18014	Confidential	
63-30	18015-18024	Computing	
63-31	18025-18032	Encrypt	
63-32	18033-18037	data	
63-33	18038-18040	in	
63-34	18041-18044	use	
63-35	18045-18049	with	
63-36	18050-18062	Confidential	
63-37	18063-18066	VMs	
63-38	18066-18067	.	
63-39	18068-18076	Security	
63-40	18077-18084	Command	
63-41	18085-18091	Center	

#Text=Platform for defending against threats to your Google Cloud assets. Cloud Data Loss Prevention Sensitive data inspection, classification, and redaction platform. Managed Service for Microsoft Active Directory Hardened service running Microsoft® Active Directory (AD). Access Transparency Cloud provider visibility through near real-time logs. Titan Security Key
64-1	18092-18100	Platform	
64-2	18101-18104	for	
64-3	18105-18114	defending	
64-4	18115-18122	against	
64-5	18123-18130	threats	
64-6	18131-18133	to	
64-7	18134-18138	your	
64-8	18139-18145	Google	
64-9	18146-18151	Cloud	
64-10	18152-18158	assets	
64-11	18158-18159	.	
64-12	18160-18165	Cloud	
64-13	18166-18170	Data	
64-14	18171-18175	Loss	
64-15	18176-18186	Prevention	
64-16	18187-18196	Sensitive	
64-17	18197-18201	data	
64-18	18202-18212	inspection	
64-19	18212-18213	,	
64-20	18214-18228	classification	
64-21	18228-18229	,	
64-22	18230-18233	and	
64-23	18234-18243	redaction	
64-24	18244-18252	platform	
64-25	18252-18253	.	
64-26	18254-18261	Managed	
64-27	18262-18269	Service	
64-28	18270-18273	for	
64-29	18274-18283	Microsoft	
64-30	18284-18290	Active	
64-31	18291-18300	Directory	
64-32	18301-18309	Hardened	
64-33	18310-18317	service	
64-34	18318-18325	running	
64-35	18326-18335	Microsoft	
64-36	18335-18336	®	
64-37	18337-18343	Active	
64-38	18344-18353	Directory	
64-39	18354-18355	(	
64-40	18355-18357	AD	
64-41	18357-18358	)	
64-42	18358-18359	.	
64-43	18360-18366	Access	
64-44	18367-18379	Transparency	
64-45	18380-18385	Cloud	
64-46	18386-18394	provider	
64-47	18395-18405	visibility	
64-48	18406-18413	through	
64-49	18414-18418	near	
64-50	18419-18428	real-time	
64-51	18429-18433	logs	
64-52	18433-18434	.	
64-53	18435-18440	Titan	
64-54	18441-18449	Security	
64-55	18450-18453	Key	

#Text=Two-factor authentication device for user account protection. Secret Manager Store API keys, passwords, certificates, and other sensitive data. BeyondCorp Enterprise Zero trust solution for secure application and resource access. Not seeing what you're looking for? See all security and identity products Serverless Computing
65-1	18454-18464	Two-factor	
65-2	18465-18479	authentication	
65-3	18480-18486	device	
65-4	18487-18490	for	
65-5	18491-18495	user	
65-6	18496-18503	account	
65-7	18504-18514	protection	
65-8	18514-18515	.	
65-9	18516-18522	Secret	
65-10	18523-18530	Manager	
65-11	18531-18536	Store	
65-12	18537-18540	API	
65-13	18541-18545	keys	
65-14	18545-18546	,	
65-15	18547-18556	passwords	
65-16	18556-18557	,	
65-17	18558-18570	certificates	
65-18	18570-18571	,	
65-19	18572-18575	and	
65-20	18576-18581	other	
65-21	18582-18591	sensitive	
65-22	18592-18596	data	
65-23	18596-18597	.	
65-24	18598-18608	BeyondCorp	
65-25	18609-18619	Enterprise	
65-26	18620-18624	Zero	
65-27	18625-18630	trust	
65-28	18631-18639	solution	
65-29	18640-18643	for	
65-30	18644-18650	secure	
65-31	18651-18662	application	
65-32	18663-18666	and	
65-33	18667-18675	resource	
65-34	18676-18682	access	
65-35	18682-18683	.	
65-36	18684-18687	Not	
65-37	18688-18694	seeing	
65-38	18695-18699	what	
65-39	18700-18706	you're	
65-40	18707-18714	looking	
65-41	18715-18718	for	
65-42	18718-18719	?	
65-43	18720-18723	See	
65-44	18724-18727	all	
65-45	18728-18736	security	
65-46	18737-18740	and	
65-47	18741-18749	identity	
65-48	18750-18758	products	
65-49	18759-18769	Serverless	
65-50	18770-18779	Computing	

#Text=Cloud Run Fully managed environment for running containerized apps. Cloud Functions Platform for creating functions that respond to cloud events. App Engine Serverless application platform for apps and back ends. Workflows Workflow orchestration for serverless products and API services.
66-1	18780-18785	Cloud	
66-2	18786-18789	Run	
66-3	18790-18795	Fully	
66-4	18796-18803	managed	
66-5	18804-18815	environment	
66-6	18816-18819	for	
66-7	18820-18827	running	
66-8	18828-18841	containerized	
66-9	18842-18846	apps	
66-10	18846-18847	.	
66-11	18848-18853	Cloud	
66-12	18854-18863	Functions	
66-13	18864-18872	Platform	
66-14	18873-18876	for	
66-15	18877-18885	creating	
66-16	18886-18895	functions	
66-17	18896-18900	that	
66-18	18901-18908	respond	
66-19	18909-18911	to	
66-20	18912-18917	cloud	
66-21	18918-18924	events	
66-22	18924-18925	.	
66-23	18926-18929	App	
66-24	18930-18936	Engine	
66-25	18937-18947	Serverless	
66-26	18948-18959	application	
66-27	18960-18968	platform	
66-28	18969-18972	for	
66-29	18973-18977	apps	
66-30	18978-18981	and	
66-31	18982-18986	back	
66-32	18987-18991	ends	
66-33	18991-18992	.	
66-34	18993-19002	Workflows	
66-35	19003-19011	Workflow	
66-36	19012-19025	orchestration	
66-37	19026-19029	for	
66-38	19030-19040	serverless	
66-39	19041-19049	products	
66-40	19050-19053	and	
66-41	19054-19057	API	
66-42	19058-19066	services	
66-43	19066-19067	.	

#Text=Storage All Storage Products Cloud-based storage services for your business. Cloud Storage Object storage that’s secure, durable, and scalable. Filestore File storage that is highly scalable and secure. Persistent Disk
67-1	19068-19075	Storage	
67-2	19076-19079	All	
67-3	19080-19087	Storage	
67-4	19088-19096	Products	
67-5	19097-19108	Cloud-based	
67-6	19109-19116	storage	
67-7	19117-19125	services	
67-8	19126-19129	for	
67-9	19130-19134	your	
67-10	19135-19143	business	
67-11	19143-19144	.	
67-12	19145-19150	Cloud	
67-13	19151-19158	Storage	
67-14	19159-19165	Object	
67-15	19166-19173	storage	
67-16	19174-19178	that	
67-17	19178-19179	’	
67-18	19179-19180	s	
67-19	19181-19187	secure	
67-20	19187-19188	,	
67-21	19189-19196	durable	
67-22	19196-19197	,	
67-23	19198-19201	and	
67-24	19202-19210	scalable	
67-25	19210-19211	.	
67-26	19212-19221	Filestore	
67-27	19222-19226	File	
67-28	19227-19234	storage	
67-29	19235-19239	that	
67-30	19240-19242	is	
67-31	19243-19249	highly	
67-32	19250-19258	scalable	
67-33	19259-19262	and	
67-34	19263-19269	secure	
67-35	19269-19270	.	
67-36	19271-19281	Persistent	
67-37	19282-19286	Disk	

#Text=Block storage for virtual machine instances running on Google Cloud. Cloud Storage for Firebase Object storage for storing and serving user-generated content. Local SSD Block storage that is locally attached for high-performance needs. Archival Storage Data archive that offers online access speed at ultra low cost. Cloud Data Transfer
68-1	19287-19292	Block	
68-2	19293-19300	storage	
68-3	19301-19304	for	
68-4	19305-19312	virtual	
68-5	19313-19320	machine	
68-6	19321-19330	instances	
68-7	19331-19338	running	
68-8	19339-19341	on	
68-9	19342-19348	Google	
68-10	19349-19354	Cloud	
68-11	19354-19355	.	
68-12	19356-19361	Cloud	
68-13	19362-19369	Storage	
68-14	19370-19373	for	
68-15	19374-19382	Firebase	
68-16	19383-19389	Object	
68-17	19390-19397	storage	
68-18	19398-19401	for	
68-19	19402-19409	storing	
68-20	19410-19413	and	
68-21	19414-19421	serving	
68-22	19422-19436	user-generated	
68-23	19437-19444	content	
68-24	19444-19445	.	
68-25	19446-19451	Local	
68-26	19452-19455	SSD	
68-27	19456-19461	Block	
68-28	19462-19469	storage	
68-29	19470-19474	that	
68-30	19475-19477	is	
68-31	19478-19485	locally	
68-32	19486-19494	attached	
68-33	19495-19498	for	
68-34	19499-19515	high-performance	
68-35	19516-19521	needs	
68-36	19521-19522	.	
68-37	19523-19531	Archival	
68-38	19532-19539	Storage	
68-39	19540-19544	Data	
68-40	19545-19552	archive	
68-41	19553-19557	that	
68-42	19558-19564	offers	
68-43	19565-19571	online	
68-44	19572-19578	access	
68-45	19579-19584	speed	
68-46	19585-19587	at	
68-47	19588-19593	ultra	
68-48	19594-19597	low	
68-49	19598-19602	cost	
68-50	19602-19603	.	
68-51	19604-19609	Cloud	
68-52	19610-19614	Data	
68-53	19615-19623	Transfer	

#Text=Tools and services for transferring your data to Google Cloud. Google Workspace Essentials Secure video meetings and modern collaboration for teams. Pricing close Do more for less with Google Cloud Our customer-friendly pricing means more overall value to your business. Contact Us Google Cloud Platform Overview
69-1	19624-19629	Tools	
69-2	19630-19633	and	
69-3	19634-19642	services	
69-4	19643-19646	for	
69-5	19647-19659	transferring	
69-6	19660-19664	your	
69-7	19665-19669	data	
69-8	19670-19672	to	
69-9	19673-19679	Google	
69-10	19680-19685	Cloud	
69-11	19685-19686	.	
69-12	19687-19693	Google	
69-13	19694-19703	Workspace	
69-14	19704-19714	Essentials	
69-15	19715-19721	Secure	
69-16	19722-19727	video	
69-17	19728-19736	meetings	
69-18	19737-19740	and	
69-19	19741-19747	modern	
69-20	19748-19761	collaboration	
69-21	19762-19765	for	
69-22	19766-19771	teams	
69-23	19771-19772	.	
69-24	19773-19780	Pricing	
69-25	19781-19786	close	
69-26	19787-19789	Do	
69-27	19790-19794	more	
69-28	19795-19798	for	
69-29	19799-19803	less	
69-30	19804-19808	with	
69-31	19809-19815	Google	
69-32	19816-19821	Cloud	
69-33	19822-19825	Our	
69-34	19826-19843	customer-friendly	
69-35	19844-19851	pricing	
69-36	19852-19857	means	
69-37	19858-19862	more	
69-38	19863-19870	overall	
69-39	19871-19876	value	
69-40	19877-19879	to	
69-41	19880-19884	your	
69-42	19885-19893	business	
69-43	19893-19894	.	
69-44	19895-19902	Contact	
69-45	19903-19905	Us	
69-46	19906-19912	Google	
69-47	19913-19918	Cloud	
69-48	19919-19927	Platform	
69-49	19928-19936	Overview	

#Text=Pay only for what you use with no lock-in Price list Pricing details on each Google Cloud product Calculators Calculate your cloud savings Free on Google Cloud Learn and build on Google Cloud for free More Cloud Products Google Workspace Google Maps Platform Cloud Identity
70-1	19937-19940	Pay	
70-2	19941-19945	only	
70-3	19946-19949	for	
70-4	19950-19954	what	
70-5	19955-19958	you	
70-6	19959-19962	use	
70-7	19963-19967	with	
70-8	19968-19970	no	
70-9	19971-19978	lock-in	
70-10	19979-19984	Price	
70-11	19985-19989	list	
70-12	19990-19997	Pricing	
70-13	19998-20005	details	
70-14	20006-20008	on	
70-15	20009-20013	each	
70-16	20014-20020	Google	
70-17	20021-20026	Cloud	
70-18	20027-20034	product	
70-19	20035-20046	Calculators	
70-20	20047-20056	Calculate	
70-21	20057-20061	your	
70-22	20062-20067	cloud	
70-23	20068-20075	savings	
70-24	20076-20080	Free	
70-25	20081-20083	on	
70-26	20084-20090	Google	
70-27	20091-20096	Cloud	
70-28	20097-20102	Learn	
70-29	20103-20106	and	
70-30	20107-20112	build	
70-31	20113-20115	on	
70-32	20116-20122	Google	
70-33	20123-20128	Cloud	
70-34	20129-20132	for	
70-35	20133-20137	free	
70-36	20138-20142	More	
70-37	20143-20148	Cloud	
70-38	20149-20157	Products	
70-39	20158-20164	Google	
70-40	20165-20174	Workspace	
70-41	20175-20181	Google	
70-42	20182-20186	Maps	
70-43	20187-20195	Platform	
70-44	20196-20201	Cloud	
70-45	20202-20210	Identity	

#Text=Apigee Firebase Zync Render Getting started close Get started with Google Cloud Start building right away on our secure, intelligent platform. New customers can use a $300 free credit to get started with any GCP product. Try GCP Free Get Started
71-1	20211-20217	Apigee	
71-2	20218-20226	Firebase	
71-3	20227-20231	Zync	
71-4	20232-20238	Render	
71-5	20239-20246	Getting	
71-6	20247-20254	started	
71-7	20255-20260	close	
71-8	20261-20264	Get	
71-9	20265-20272	started	
71-10	20273-20277	with	
71-11	20278-20284	Google	
71-12	20285-20290	Cloud	
71-13	20291-20296	Start	
71-14	20297-20305	building	
71-15	20306-20311	right	
71-16	20312-20316	away	
71-17	20317-20319	on	
71-18	20320-20323	our	
71-19	20324-20330	secure	
71-20	20330-20331	,	
71-21	20332-20343	intelligent	
71-22	20344-20352	platform	
71-23	20352-20353	.	
71-24	20354-20357	New	
71-25	20358-20367	customers	
71-26	20368-20371	can	
71-27	20372-20375	use	
71-28	20376-20377	a	
71-29	20378-20382	$300	
71-30	20383-20387	free	
71-31	20388-20394	credit	
71-32	20395-20397	to	
71-33	20398-20401	get	
71-34	20402-20409	started	
71-35	20410-20414	with	
71-36	20415-20418	any	
71-37	20419-20422	GCP	
71-38	20423-20430	product	
71-39	20430-20431	.	
71-40	20432-20435	Try	
71-41	20436-20439	GCP	
71-42	20440-20444	Free	
71-43	20445-20448	Get	
71-44	20449-20456	Started	

#Text=Resources to Start on Your Own Quickstarts View short tutorials to help you get started GCP Marketplace Deploy ready-to-go solutions in a few clicks Training Enroll in on-demand or classroom training Certification Become Google Cloud Certified
72-1	20457-20466	Resources	
72-2	20467-20469	to	
72-3	20470-20475	Start	
72-4	20476-20478	on	
72-5	20479-20483	Your	
72-6	20484-20487	Own	
72-7	20488-20499	Quickstarts	
72-8	20500-20504	View	
72-9	20505-20510	short	
72-10	20511-20520	tutorials	
72-11	20521-20523	to	
72-12	20524-20528	help	
72-13	20529-20532	you	
72-14	20533-20536	get	
72-15	20537-20544	started	
72-16	20545-20548	GCP	
72-17	20549-20560	Marketplace	
72-18	20561-20567	Deploy	
72-19	20568-20579	ready-to-go	
72-20	20580-20589	solutions	
72-21	20590-20592	in	
72-22	20593-20594	a	
72-23	20595-20598	few	
72-24	20599-20605	clicks	
72-25	20606-20614	Training	
72-26	20615-20621	Enroll	
72-27	20622-20624	in	
72-28	20625-20634	on-demand	
72-29	20635-20637	or	
72-30	20638-20647	classroom	
72-31	20648-20656	training	
72-32	20657-20670	Certification	
72-33	20671-20677	Become	
72-34	20678-20684	Google	
72-35	20685-20690	Cloud	
72-36	20691-20700	Certified	

#Text=Get Help from an Expert Consulting Jump-start your project with help from Google Technical Account Management Get long-term guidance from Google Find a Partner Work with a Partner in our global network Become a Partner Join Google Cloud's Partner program
73-1	20701-20704	Get	
73-2	20705-20709	Help	
73-3	20710-20714	from	
73-4	20715-20717	an	
73-5	20718-20724	Expert	
73-6	20725-20735	Consulting	
73-7	20736-20746	Jump-start	
73-8	20747-20751	your	
73-9	20752-20759	project	
73-10	20760-20764	with	
73-11	20765-20769	help	
73-12	20770-20774	from	
73-13	20775-20781	Google	
73-14	20782-20791	Technical	
73-15	20792-20799	Account	
73-16	20800-20810	Management	
73-17	20811-20814	Get	
73-18	20815-20824	long-term	
73-19	20825-20833	guidance	
73-20	20834-20838	from	
73-21	20839-20845	Google	
73-22	20846-20850	Find	
73-23	20851-20852	a	
73-24	20853-20860	Partner	
73-25	20861-20865	Work	
73-26	20866-20870	with	
73-27	20871-20872	a	
73-28	20873-20880	Partner	
73-29	20881-20883	in	
73-30	20884-20887	our	
73-31	20888-20894	global	
73-32	20895-20902	network	
73-33	20903-20909	Become	
73-34	20910-20911	a	
73-35	20912-20919	Partner	
73-36	20920-20924	Join	
73-37	20925-20931	Google	
73-38	20932-20939	Cloud's	
73-39	20940-20947	Partner	
73-40	20948-20955	program	

#Text=More ways to get started Docs Support Docs Support Language English Deutsch Español – América Latina Français Português – Brasil 中文 – 简体 日本語 한국어
74-1	20956-20960	More	
74-2	20961-20965	ways	
74-3	20966-20968	to	
74-4	20969-20972	get	
74-5	20973-20980	started	
74-6	20981-20985	Docs	
74-7	20986-20993	Support	
74-8	20994-20998	Docs	
74-9	20999-21006	Support	
74-10	21007-21015	Language	
74-11	21016-21023	English	
74-12	21024-21031	Deutsch	
74-13	21032-21039	Español	
74-14	21040-21041	–	
74-15	21042-21049	América	
74-16	21050-21056	Latina	
74-17	21057-21065	Français	
74-18	21066-21075	Português	
74-19	21076-21077	–	
74-20	21078-21084	Brasil	
74-21	21085-21087	中文	
74-22	21088-21089	–	
74-23	21090-21092	简体	
74-24	21093-21096	日本語	
74-25	21097-21100	한국어	

#Text=Cloud SQL Overview Guides Reference Samples Support Resources Contact Us Get started for free Why Google More Solutions More Products More Pricing More Getting started More
75-1	21101-21106	Cloud	
75-2	21107-21110	SQL	
75-3	21111-21119	Overview	
75-4	21120-21126	Guides	
75-5	21127-21136	Reference	
75-6	21137-21144	Samples	
75-7	21145-21152	Support	
75-8	21153-21162	Resources	
75-9	21163-21170	Contact	
75-10	21171-21173	Us	
75-11	21174-21177	Get	
75-12	21178-21185	started	
75-13	21186-21189	for	
75-14	21190-21194	free	
75-15	21195-21198	Why	
75-16	21199-21205	Google	
75-17	21206-21210	More	
75-18	21211-21220	Solutions	
75-19	21221-21225	More	
75-20	21226-21234	Products	
75-21	21235-21239	More	
75-22	21240-21247	Pricing	
75-23	21248-21252	More	
75-24	21253-21260	Getting	
75-25	21261-21268	started	
75-26	21269-21273	More	

#Text=Docs Overview Guides Reference Samples Support Resources Support Console Contact Us Get started for free Cloud SQL for PostgreSQL All APIs and reference Error codes
76-1	21274-21278	Docs	
76-2	21279-21287	Overview	
76-3	21288-21294	Guides	
76-4	21295-21304	Reference	
76-5	21305-21312	Samples	
76-6	21313-21320	Support	
76-7	21321-21330	Resources	
76-8	21331-21338	Support	
76-9	21339-21346	Console	
76-10	21347-21354	Contact	
76-11	21355-21357	Us	
76-12	21358-21361	Get	
76-13	21362-21369	started	
76-14	21370-21373	for	
76-15	21374-21378	free	
76-16	21379-21384	Cloud	
76-17	21385-21388	SQL	
76-18	21389-21392	for	
76-19	21393-21403	PostgreSQL	
76-20	21404-21407	All	
76-21	21408-21412	APIs	
76-22	21413-21416	and	
76-23	21417-21426	reference	
76-24	21427-21432	Error	
76-25	21433-21438	codes	

#Text=Cloud SQL MetricsCloud SQL metricsInsights metrics REST Reference v1beta4REST Resources backupRunsOverviewdeletegetinsertlist databasesOverviewdeletegetinsertlistpatchupdate flagsOverviewlist instancesOverviewaddServerCaclonedeletedemoteMasterexportfailovergetimportinsertlistlistServerCaspatchpromoteReplicaresetSslConfigrestartrestoreBackuprotateServerCastartReplicastopReplicatruncateLogupdate operationsOverviewgetlist
77-1	21439-21444	Cloud	
77-2	21445-21448	SQL	
77-3	21449-21461	MetricsCloud	
77-4	21462-21465	SQL	
77-5	21466-21481	metricsInsights	
77-6	21482-21489	metrics	
77-7	21490-21494	REST	
77-8	21495-21504	Reference	
77-9	21505-21516	v1beta4REST	
77-10	21517-21526	Resources	
77-11	21527-21564	backupRunsOverviewdeletegetinsertlist	
77-12	21565-21612	databasesOverviewdeletegetinsertlistpatchupdate	
77-13	21613-21630	flagsOverviewlist	
77-14	21631-21835	instancesOverviewaddServerCaclonedeletedemoteMasterexportfailovergetimportinsertlistlistServerCaspatchpromoteReplicaresetSslConfigrestartrestoreBackuprotateServerCastartReplicastopReplicatruncateLogupdate	
77-15	21836-21861	operationsOverviewgetlist	

#Text=projects.instancesOverviewrescheduleMaintenancestartExternalSyncverifyExternalSyncSettings sslCertsOverviewcreateEphemeraldeletegetinsertlist tiersOverviewlist usersOverviewdeleteinsertlistupdateTypesDiskEncryptionConfigurationDiskEncryptionStatusExternalSyncModeOperationErrorSqlDatabaseVersion API overviewUsing the Cloud SQL Admin APIConfiguring VPC Service Controls
78-1	21862-21952	projects.instancesOverviewrescheduleMaintenancestartExternalSyncverifyExternalSyncSettings	
78-2	21953-22003	sslCertsOverviewcreateEphemeraldeletegetinsertlist	
78-3	22004-22021	tiersOverviewlist	
78-4	22022-22157	usersOverviewdeleteinsertlistupdateTypesDiskEncryptionConfigurationDiskEncryptionStatusExternalSyncModeOperationErrorSqlDatabaseVersion	
78-5	22158-22161	API	
78-6	22162-22175	overviewUsing	
78-7	22176-22179	the	
78-8	22180-22185	Cloud	
78-9	22186-22189	SQL	
78-10	22190-22195	Admin	
78-11	22196-22210	APIConfiguring	
78-12	22211-22214	VPC	
78-13	22215-22222	Service	
78-14	22223-22231	Controls	

#Text=API basicsAuthorizing requestsPerformance tips Client libraries and sample code gcloud sqlOverviewReference Transform your business with innovative solutions Learn more Why Google Cloud Choosing Google Cloud Multicloud Trust and security Global infrastructure
79-1	22232-22235	API	
79-2	22236-22253	basicsAuthorizing	
79-3	22254-22273	requestsPerformance	
79-4	22274-22278	tips	
79-5	22279-22285	Client	
79-6	22286-22295	libraries	
79-7	22296-22299	and	
79-8	22300-22306	sample	
79-9	22307-22311	code	
79-10	22312-22318	gcloud	
79-11	22319-22339	sqlOverviewReference	
79-12	22340-22349	Transform	
79-13	22350-22354	your	
79-14	22355-22363	business	
79-15	22364-22368	with	
79-16	22369-22379	innovative	
79-17	22380-22389	solutions	
79-18	22390-22395	Learn	
79-19	22396-22400	more	
79-20	22401-22404	Why	
79-21	22405-22411	Google	
79-22	22412-22417	Cloud	
79-23	22418-22426	Choosing	
79-24	22427-22433	Google	
79-25	22434-22439	Cloud	
79-26	22440-22450	Multicloud	
79-27	22451-22456	Trust	
79-28	22457-22460	and	
79-29	22461-22469	security	
79-30	22470-22476	Global	
79-31	22477-22491	infrastructure	

#Text=Data analytics Open cloud Sustainability Analyst reports Customer stories Google Cloud Blog Industry Solutions Retail Consumer Packaged Goods Financial Services Healthcare and Life Sciences Media and Entertainment Telecommunications Gaming
80-1	22492-22496	Data	
80-2	22497-22506	analytics	
80-3	22507-22511	Open	
80-4	22512-22517	cloud	
80-5	22518-22532	Sustainability	
80-6	22533-22540	Analyst	
80-7	22541-22548	reports	
80-8	22549-22557	Customer	
80-9	22558-22565	stories	
80-10	22566-22572	Google	
80-11	22573-22578	Cloud	
80-12	22579-22583	Blog	
80-13	22584-22592	Industry	
80-14	22593-22602	Solutions	
80-15	22603-22609	Retail	
80-16	22610-22618	Consumer	
80-17	22619-22627	Packaged	
80-18	22628-22633	Goods	
80-19	22634-22643	Financial	
80-20	22644-22652	Services	
80-21	22653-22663	Healthcare	
80-22	22664-22667	and	
80-23	22668-22672	Life	
80-24	22673-22681	Sciences	
80-25	22682-22687	Media	
80-26	22688-22691	and	
80-27	22692-22705	Entertainment	
80-28	22706-22724	Telecommunications	
80-29	22725-22731	Gaming	

#Text=Manufacturing Supply Chain and Logistics Government Education Small and Medium Business See all solutions Application Modernization Hybrid and Multi-cloud Application Platform Cloud-Native App Development Serverless Solutions DevOps Continuous Delivery (CD)
81-1	22732-22745	Manufacturing	
81-2	22746-22752	Supply	
81-3	22753-22758	Chain	
81-4	22759-22762	and	
81-5	22763-22772	Logistics	
81-6	22773-22783	Government	
81-7	22784-22793	Education	
81-8	22794-22799	Small	
81-9	22800-22803	and	
81-10	22804-22810	Medium	
81-11	22811-22819	Business	
81-12	22820-22823	See	
81-13	22824-22827	all	
81-14	22828-22837	solutions	
81-15	22838-22849	Application	
81-16	22850-22863	Modernization	
81-17	22864-22870	Hybrid	
81-18	22871-22874	and	
81-19	22875-22886	Multi-cloud	
81-20	22887-22898	Application	
81-21	22899-22907	Platform	
81-22	22908-22920	Cloud-Native	
81-23	22921-22924	App	
81-24	22925-22936	Development	
81-25	22937-22947	Serverless	
81-26	22948-22957	Solutions	
81-27	22958-22964	DevOps	
81-28	22965-22975	Continuous	
81-29	22976-22984	Delivery	
81-30	22985-22986	(	
81-31	22986-22988	CD	
81-32	22988-22989	)	

#Text=Continuous Integration (CI) Mainframe Modernization Hosting Artificial Intelligence Build and Use AI Contact Center AI Document AI Cloud Talent Solution Business Application Platform New Business Channels Using APIs Unlocking Legacy Applications Using APIs
82-1	22990-23000	Continuous	
82-2	23001-23012	Integration	
82-3	23013-23014	(	
82-4	23014-23016	CI	
82-5	23016-23017	)	
82-6	23018-23027	Mainframe	
82-7	23028-23041	Modernization	
82-8	23042-23049	Hosting	
82-9	23050-23060	Artificial	
82-10	23061-23073	Intelligence	
82-11	23074-23079	Build	
82-12	23080-23083	and	
82-13	23084-23087	Use	
82-14	23088-23090	AI	
82-15	23091-23098	Contact	
82-16	23099-23105	Center	
82-17	23106-23108	AI	
82-18	23109-23117	Document	
82-19	23118-23120	AI	
82-20	23121-23126	Cloud	
82-21	23127-23133	Talent	
82-22	23134-23142	Solution	
82-23	23143-23151	Business	
82-24	23152-23163	Application	
82-25	23164-23172	Platform	
82-26	23173-23176	New	
82-27	23177-23185	Business	
82-28	23186-23194	Channels	
82-29	23195-23200	Using	
82-30	23201-23205	APIs	
82-31	23206-23215	Unlocking	
82-32	23216-23222	Legacy	
82-33	23223-23235	Applications	
82-34	23236-23241	Using	
82-35	23242-23246	APIs	

#Text=Open Banking APIx Databases Database Migration Database Modernization Google Cloud Databases Migrate Oracle workloads to Google Cloud Open Source Databases SQL Server on Google Cloud Digital Transformation Business Continuity Digital Innovation Operational Efficiency
83-1	23247-23251	Open	
83-2	23252-23259	Banking	
83-3	23260-23264	APIx	
83-4	23265-23274	Databases	
83-5	23275-23283	Database	
83-6	23284-23293	Migration	
83-7	23294-23302	Database	
83-8	23303-23316	Modernization	
83-9	23317-23323	Google	
83-10	23324-23329	Cloud	
83-11	23330-23339	Databases	
83-12	23340-23347	Migrate	
83-13	23348-23354	Oracle	
83-14	23355-23364	workloads	
83-15	23365-23367	to	
83-16	23368-23374	Google	
83-17	23375-23380	Cloud	
83-18	23381-23385	Open	
83-19	23386-23392	Source	
83-20	23393-23402	Databases	
83-21	23403-23406	SQL	
83-22	23407-23413	Server	
83-23	23414-23416	on	
83-24	23417-23423	Google	
83-25	23424-23429	Cloud	
83-26	23430-23437	Digital	
83-27	23438-23452	Transformation	
83-28	23453-23461	Business	
83-29	23462-23472	Continuity	
83-30	23473-23480	Digital	
83-31	23481-23491	Innovation	
83-32	23492-23503	Operational	
83-33	23504-23514	Efficiency	

#Text=COVID-19 Solutions COVID-19 Solutions for the Healthcare Industry Infrastructure Modernization Application Migration SAP on Google Cloud High Performance Computing Windows on Google Cloud Data Center Migration Active Assist Virtual Desktops Rapid Assessment & Migration Program (RAMP)
84-1	23515-23520	COVID	
84-2	23520-23521	-	
84-3	23521-23523	19	
84-4	23524-23533	Solutions	
84-5	23534-23539	COVID	
84-6	23539-23540	-	
84-7	23540-23542	19	
84-8	23543-23552	Solutions	
84-9	23553-23556	for	
84-10	23557-23560	the	
84-11	23561-23571	Healthcare	
84-12	23572-23580	Industry	
84-13	23581-23595	Infrastructure	
84-14	23596-23609	Modernization	
84-15	23610-23621	Application	
84-16	23622-23631	Migration	
84-17	23632-23635	SAP	
84-18	23636-23638	on	
84-19	23639-23645	Google	
84-20	23646-23651	Cloud	
84-21	23652-23656	High	
84-22	23657-23668	Performance	
84-23	23669-23678	Computing	
84-24	23679-23686	Windows	
84-25	23687-23689	on	
84-26	23690-23696	Google	
84-27	23697-23702	Cloud	
84-28	23703-23707	Data	
84-29	23708-23714	Center	
84-30	23715-23724	Migration	
84-31	23725-23731	Active	
84-32	23732-23738	Assist	
84-33	23739-23746	Virtual	
84-34	23747-23755	Desktops	
84-35	23756-23761	Rapid	
84-36	23762-23772	Assessment	
84-37	23773-23774	&	
84-38	23775-23784	Migration	
84-39	23785-23792	Program	
84-40	23793-23794	(	
84-41	23794-23798	RAMP	
84-42	23798-23799	)	

#Text=Productivity and Collaboration Google Workspace Google Workspace Essentials Cloud Identity Chrome Enterprise Cloud Search Security Security Analytics and Operations Web App and API Protection Smart Analytics Data Warehouse Modernization Stream Analytics
85-1	23800-23812	Productivity	
85-2	23813-23816	and	
85-3	23817-23830	Collaboration	
85-4	23831-23837	Google	
85-5	23838-23847	Workspace	
85-6	23848-23854	Google	
85-7	23855-23864	Workspace	
85-8	23865-23875	Essentials	
85-9	23876-23881	Cloud	
85-10	23882-23890	Identity	
85-11	23891-23897	Chrome	
85-12	23898-23908	Enterprise	
85-13	23909-23914	Cloud	
85-14	23915-23921	Search	
85-15	23922-23930	Security	
85-16	23931-23939	Security	
85-17	23940-23949	Analytics	
85-18	23950-23953	and	
85-19	23954-23964	Operations	
85-20	23965-23968	Web	
85-21	23969-23972	App	
85-22	23973-23976	and	
85-23	23977-23980	API	
85-24	23981-23991	Protection	
85-25	23992-23997	Smart	
85-26	23998-24007	Analytics	
85-27	24008-24012	Data	
85-28	24013-24022	Warehouse	
85-29	24023-24036	Modernization	
85-30	24037-24043	Stream	
85-31	24044-24053	Analytics	

#Text=Marketing Analytics Data Lake Modernization Business Intelligence Featured Products Compute Engine Cloud Storage Cloud SDK Cloud SQL Google Kubernetes Engine BigQuery Cloud CDN Dataflow Operations Cloud Run
86-1	24054-24063	Marketing	
86-2	24064-24073	Analytics	
86-3	24074-24078	Data	
86-4	24079-24083	Lake	
86-5	24084-24097	Modernization	
86-6	24098-24106	Business	
86-7	24107-24119	Intelligence	
86-8	24120-24128	Featured	
86-9	24129-24137	Products	
86-10	24138-24145	Compute	
86-11	24146-24152	Engine	
86-12	24153-24158	Cloud	
86-13	24159-24166	Storage	
86-14	24167-24172	Cloud	
86-15	24173-24176	SDK	
86-16	24177-24182	Cloud	
86-17	24183-24186	SQL	
86-18	24187-24193	Google	
86-19	24194-24204	Kubernetes	
86-20	24205-24211	Engine	
86-21	24212-24220	BigQuery	
86-22	24221-24226	Cloud	
86-23	24227-24230	CDN	
86-24	24231-24239	Dataflow	
86-25	24240-24250	Operations	
86-26	24251-24256	Cloud	
86-27	24257-24260	Run	

#Text=Anthos See all products (100+) AI and Machine Learning Speech-to-Text Vision AI Text-to-Speech Cloud Translation Cloud Natural Language AutoML AI Platform Video AI AI Infrastructure Dialogflow
87-1	24261-24267	Anthos	
87-2	24268-24271	See	
87-3	24272-24275	all	
87-4	24276-24284	products	
87-5	24285-24286	(	
87-6	24286-24289	100	
87-7	24289-24290	+	
87-8	24290-24291	)	
87-9	24292-24294	AI	
87-10	24295-24298	and	
87-11	24299-24306	Machine	
87-12	24307-24315	Learning	
87-13	24316-24330	Speech-to-Text	
87-14	24331-24337	Vision	
87-15	24338-24340	AI	
87-16	24341-24355	Text-to-Speech	
87-17	24356-24361	Cloud	
87-18	24362-24373	Translation	
87-19	24374-24379	Cloud	
87-20	24380-24387	Natural	
87-21	24388-24396	Language	
87-22	24397-24403	AutoML	
87-23	24404-24406	AI	
87-24	24407-24415	Platform	
87-25	24416-24421	Video	
87-26	24422-24424	AI	
87-27	24425-24427	AI	
87-28	24428-24442	Infrastructure	
87-29	24443-24453	Dialogflow	

#Text=AutoML Tables See all AI and machine learning products API Management Apigee API Management Cloud Endpoints Cloud Healthcare API AppSheet API Gateway Compute Compute Engine App Engine Cloud GPUs
88-1	24454-24460	AutoML	
88-2	24461-24467	Tables	
88-3	24468-24471	See	
88-4	24472-24475	all	
88-5	24476-24478	AI	
88-6	24479-24482	and	
88-7	24483-24490	machine	
88-8	24491-24499	learning	
88-9	24500-24508	products	
88-10	24509-24512	API	
88-11	24513-24523	Management	
88-12	24524-24530	Apigee	
88-13	24531-24534	API	
88-14	24535-24545	Management	
88-15	24546-24551	Cloud	
88-16	24552-24561	Endpoints	
88-17	24562-24567	Cloud	
88-18	24568-24578	Healthcare	
88-19	24579-24582	API	
88-20	24583-24591	AppSheet	
88-21	24592-24595	API	
88-22	24596-24603	Gateway	
88-23	24604-24611	Compute	
88-24	24612-24619	Compute	
88-25	24620-24626	Engine	
88-26	24627-24630	App	
88-27	24631-24637	Engine	
88-28	24638-24643	Cloud	
88-29	24644-24648	GPUs	

#Text=Migrate for Compute Engine Preemptible VMs Shielded VMs Sole-Tenant Nodes Bare Metal Recommender VMware Engine Cloud Run See all compute products Containers Google Kubernetes Engine
89-1	24649-24656	Migrate	
89-2	24657-24660	for	
89-3	24661-24668	Compute	
89-4	24669-24675	Engine	
89-5	24676-24687	Preemptible	
89-6	24688-24691	VMs	
89-7	24692-24700	Shielded	
89-8	24701-24704	VMs	
89-9	24705-24716	Sole-Tenant	
89-10	24717-24722	Nodes	
89-11	24723-24727	Bare	
89-12	24728-24733	Metal	
89-13	24734-24745	Recommender	
89-14	24746-24752	VMware	
89-15	24753-24759	Engine	
89-16	24760-24765	Cloud	
89-17	24766-24769	Run	
89-18	24770-24773	See	
89-19	24774-24777	all	
89-20	24778-24785	compute	
89-21	24786-24794	products	
89-22	24795-24805	Containers	
89-23	24806-24812	Google	
89-24	24813-24823	Kubernetes	
89-25	24824-24830	Engine	

#Text=Container Registry Container Security Cloud Build Deep Learning Containers Kubernetes Applications Artifact Registry Knative Cloud Run Cloud Code Data Analytics BigQuery Looker Dataflow
90-1	24831-24840	Container	
90-2	24841-24849	Registry	
90-3	24850-24859	Container	
90-4	24860-24868	Security	
90-5	24869-24874	Cloud	
90-6	24875-24880	Build	
90-7	24881-24885	Deep	
90-8	24886-24894	Learning	
90-9	24895-24905	Containers	
90-10	24906-24916	Kubernetes	
90-11	24917-24929	Applications	
90-12	24930-24938	Artifact	
90-13	24939-24947	Registry	
90-14	24948-24955	Knative	
90-15	24956-24961	Cloud	
90-16	24962-24965	Run	
90-17	24966-24971	Cloud	
90-18	24972-24976	Code	
90-19	24977-24981	Data	
90-20	24982-24991	Analytics	
90-21	24992-25000	BigQuery	
90-22	25001-25007	Looker	
90-23	25008-25016	Dataflow	

#Text=Pub/Sub Dataproc Cloud Data Fusion Cloud Composer Data Catalog Dataprep Google Data Studio Google Marketing Platform Cloud Life Sciences Databases Cloud Bigtable Firestore Memorystore Cloud Spanner
91-1	25017-25020	Pub	
91-2	25020-25021	/	
91-3	25021-25024	Sub	
91-4	25025-25033	Dataproc	
91-5	25034-25039	Cloud	
91-6	25040-25044	Data	
91-7	25045-25051	Fusion	
91-8	25052-25057	Cloud	
91-9	25058-25066	Composer	
91-10	25067-25071	Data	
91-11	25072-25079	Catalog	
91-12	25080-25088	Dataprep	
91-13	25089-25095	Google	
91-14	25096-25100	Data	
91-15	25101-25107	Studio	
91-16	25108-25114	Google	
91-17	25115-25124	Marketing	
91-18	25125-25133	Platform	
91-19	25134-25139	Cloud	
91-20	25140-25144	Life	
91-21	25145-25153	Sciences	
91-22	25154-25163	Databases	
91-23	25164-25169	Cloud	
91-24	25170-25178	Bigtable	
91-25	25179-25188	Firestore	
91-26	25189-25200	Memorystore	
91-27	25201-25206	Cloud	
91-28	25207-25214	Spanner	

#Text=Cloud SQL Database Migration Service Bare Metal Firebase Realtime Database Developer Tools Artifact Registry Cloud Build Cloud Code Cloud Deployment Manager Cloud SDK Cloud Scheduler Cloud Source Repositories
92-1	25215-25220	Cloud	
92-2	25221-25224	SQL	
92-3	25225-25233	Database	
92-4	25234-25243	Migration	
92-5	25244-25251	Service	
92-6	25252-25256	Bare	
92-7	25257-25262	Metal	
92-8	25263-25271	Firebase	
92-9	25272-25280	Realtime	
92-10	25281-25289	Database	
92-11	25290-25299	Developer	
92-12	25300-25305	Tools	
92-13	25306-25314	Artifact	
92-14	25315-25323	Registry	
92-15	25324-25329	Cloud	
92-16	25330-25335	Build	
92-17	25336-25341	Cloud	
92-18	25342-25346	Code	
92-19	25347-25352	Cloud	
92-20	25353-25363	Deployment	
92-21	25364-25371	Manager	
92-22	25372-25377	Cloud	
92-23	25378-25381	SDK	
92-24	25382-25387	Cloud	
92-25	25388-25397	Scheduler	
92-26	25398-25403	Cloud	
92-27	25404-25410	Source	
92-28	25411-25423	Repositories	

#Text=Cloud Tasks Container Registry Tekton See all developer tools Healthcare and Life Sciences Apigee Healthcare APIx Cloud Healthcare API Cloud Life Sciences Healthcare Natural Language AI Hybrid and Multi-cloud Anthos Looker
93-1	25424-25429	Cloud	
93-2	25430-25435	Tasks	
93-3	25436-25445	Container	
93-4	25446-25454	Registry	
93-5	25455-25461	Tekton	
93-6	25462-25465	See	
93-7	25466-25469	all	
93-8	25470-25479	developer	
93-9	25480-25485	tools	
93-10	25486-25496	Healthcare	
93-11	25497-25500	and	
93-12	25501-25505	Life	
93-13	25506-25514	Sciences	
93-14	25515-25521	Apigee	
93-15	25522-25532	Healthcare	
93-16	25533-25537	APIx	
93-17	25538-25543	Cloud	
93-18	25544-25554	Healthcare	
93-19	25555-25558	API	
93-20	25559-25564	Cloud	
93-21	25565-25569	Life	
93-22	25570-25578	Sciences	
93-23	25579-25589	Healthcare	
93-24	25590-25597	Natural	
93-25	25598-25606	Language	
93-26	25607-25609	AI	
93-27	25610-25616	Hybrid	
93-28	25617-25620	and	
93-29	25621-25632	Multi-cloud	
93-30	25633-25639	Anthos	
93-31	25640-25646	Looker	

#Text=Cloud Run for Anthos Google Cloud Marketplace for Anthos Migrate for Anthos Operations Cloud Build Traffic Director Apigee API Management Internet of Things Cloud IoT Core Edge TPU Management Tools Cloud Shell
94-1	25647-25652	Cloud	
94-2	25653-25656	Run	
94-3	25657-25660	for	
94-4	25661-25667	Anthos	
94-5	25668-25674	Google	
94-6	25675-25680	Cloud	
94-7	25681-25692	Marketplace	
94-8	25693-25696	for	
94-9	25697-25703	Anthos	
94-10	25704-25711	Migrate	
94-11	25712-25715	for	
94-12	25716-25722	Anthos	
94-13	25723-25733	Operations	
94-14	25734-25739	Cloud	
94-15	25740-25745	Build	
94-16	25746-25753	Traffic	
94-17	25754-25762	Director	
94-18	25763-25769	Apigee	
94-19	25770-25773	API	
94-20	25774-25784	Management	
94-21	25785-25793	Internet	
94-22	25794-25796	of	
94-23	25797-25803	Things	
94-24	25804-25809	Cloud	
94-25	25810-25813	IoT	
94-26	25814-25818	Core	
94-27	25819-25823	Edge	
94-28	25824-25827	TPU	
94-29	25828-25838	Management	
94-30	25839-25844	Tools	
94-31	25845-25850	Cloud	
94-32	25851-25856	Shell	

#Text=Cloud Console Cloud Deployment Manager Cloud Mobile App Cloud APIs Private Catalog Cost Management Intelligent Management Media and Gaming Game Servers OpenCue Migration Application Migration BigQuery Data Transfer Service
95-1	25857-25862	Cloud	
95-2	25863-25870	Console	
95-3	25871-25876	Cloud	
95-4	25877-25887	Deployment	
95-5	25888-25895	Manager	
95-6	25896-25901	Cloud	
95-7	25902-25908	Mobile	
95-8	25909-25912	App	
95-9	25913-25918	Cloud	
95-10	25919-25923	APIs	
95-11	25924-25931	Private	
95-12	25932-25939	Catalog	
95-13	25940-25944	Cost	
95-14	25945-25955	Management	
95-15	25956-25967	Intelligent	
95-16	25968-25978	Management	
95-17	25979-25984	Media	
95-18	25985-25988	and	
95-19	25989-25995	Gaming	
95-20	25996-26000	Game	
95-21	26001-26008	Servers	
95-22	26009-26016	OpenCue	
95-23	26017-26026	Migration	
95-24	26027-26038	Application	
95-25	26039-26048	Migration	
95-26	26049-26057	BigQuery	
95-27	26058-26062	Data	
95-28	26063-26071	Transfer	
95-29	26072-26079	Service	

#Text=Cloud Data Transfer Cloud Foundation Toolkit Database Migration Service Migrate for Anthos Migrate for Compute Engine Rapid Assessment & Migration Program (RAMP) Transfer Appliance Transfer Service VMware Engine Networking
96-1	26080-26085	Cloud	
96-2	26086-26090	Data	
96-3	26091-26099	Transfer	
96-4	26100-26105	Cloud	
96-5	26106-26116	Foundation	
96-6	26117-26124	Toolkit	
96-7	26125-26133	Database	
96-8	26134-26143	Migration	
96-9	26144-26151	Service	
96-10	26152-26159	Migrate	
96-11	26160-26163	for	
96-12	26164-26170	Anthos	
96-13	26171-26178	Migrate	
96-14	26179-26182	for	
96-15	26183-26190	Compute	
96-16	26191-26197	Engine	
96-17	26198-26203	Rapid	
96-18	26204-26214	Assessment	
96-19	26215-26216	&	
96-20	26217-26226	Migration	
96-21	26227-26234	Program	
96-22	26235-26236	(	
96-23	26236-26240	RAMP	
96-24	26240-26241	)	
96-25	26242-26250	Transfer	
96-26	26251-26260	Appliance	
96-27	26261-26269	Transfer	
96-28	26270-26277	Service	
96-29	26278-26284	VMware	
96-30	26285-26291	Engine	
96-31	26292-26302	Networking	

#Text=Cloud Armor Cloud CDN Cloud DNS Cloud Load Balancing Cloud NAT Hybrid Connectivity Network Intelligence Center Network Service Tiers Network Telemetry Traffic Director Virtual Private Cloud Service Directory Operations
97-1	26303-26308	Cloud	
97-2	26309-26314	Armor	
97-3	26315-26320	Cloud	
97-4	26321-26324	CDN	
97-5	26325-26330	Cloud	
97-6	26331-26334	DNS	
97-7	26335-26340	Cloud	
97-8	26341-26345	Load	
97-9	26346-26355	Balancing	
97-10	26356-26361	Cloud	
97-11	26362-26365	NAT	
97-12	26366-26372	Hybrid	
97-13	26373-26385	Connectivity	
97-14	26386-26393	Network	
97-15	26394-26406	Intelligence	
97-16	26407-26413	Center	
97-17	26414-26421	Network	
97-18	26422-26429	Service	
97-19	26430-26435	Tiers	
97-20	26436-26443	Network	
97-21	26444-26453	Telemetry	
97-22	26454-26461	Traffic	
97-23	26462-26470	Director	
97-24	26471-26478	Virtual	
97-25	26479-26486	Private	
97-26	26487-26492	Cloud	
97-27	26493-26500	Service	
97-28	26501-26510	Directory	
97-29	26511-26521	Operations	

#Text=Cloud Logging Cloud Monitoring Error Reporting Kubernetes Engine Monitoring Cloud Trace Cloud Profiler Cloud Debugger Intelligent Operations Security and Identity Cloud IAM Assured Workloads Cloud Key Management
98-1	26522-26527	Cloud	
98-2	26528-26535	Logging	
98-3	26536-26541	Cloud	
98-4	26542-26552	Monitoring	
98-5	26553-26558	Error	
98-6	26559-26568	Reporting	
98-7	26569-26579	Kubernetes	
98-8	26580-26586	Engine	
98-9	26587-26597	Monitoring	
98-10	26598-26603	Cloud	
98-11	26604-26609	Trace	
98-12	26610-26615	Cloud	
98-13	26616-26624	Profiler	
98-14	26625-26630	Cloud	
98-15	26631-26639	Debugger	
98-16	26640-26651	Intelligent	
98-17	26652-26662	Operations	
98-18	26663-26671	Security	
98-19	26672-26675	and	
98-20	26676-26684	Identity	
98-21	26685-26690	Cloud	
98-22	26691-26694	IAM	
98-23	26695-26702	Assured	
98-24	26703-26712	Workloads	
98-25	26713-26718	Cloud	
98-26	26719-26722	Key	
98-27	26723-26733	Management	

#Text=Confidential Computing Security Command Center Cloud Data Loss Prevention Managed Service for Microsoft Active Directory Access Transparency Titan Security Key Secret Manager BeyondCorp Enterprise See all security and identity products Serverless Computing Cloud Run Cloud Functions
99-1	26734-26746	Confidential	
99-2	26747-26756	Computing	
99-3	26757-26765	Security	
99-4	26766-26773	Command	
99-5	26774-26780	Center	
99-6	26781-26786	Cloud	
99-7	26787-26791	Data	
99-8	26792-26796	Loss	
99-9	26797-26807	Prevention	
99-10	26808-26815	Managed	
99-11	26816-26823	Service	
99-12	26824-26827	for	
99-13	26828-26837	Microsoft	
99-14	26838-26844	Active	
99-15	26845-26854	Directory	
99-16	26855-26861	Access	
99-17	26862-26874	Transparency	
99-18	26875-26880	Titan	
99-19	26881-26889	Security	
99-20	26890-26893	Key	
99-21	26894-26900	Secret	
99-22	26901-26908	Manager	
99-23	26909-26919	BeyondCorp	
99-24	26920-26930	Enterprise	
99-25	26931-26934	See	
99-26	26935-26938	all	
99-27	26939-26947	security	
99-28	26948-26951	and	
99-29	26952-26960	identity	
99-30	26961-26969	products	
99-31	26970-26980	Serverless	
99-32	26981-26990	Computing	
99-33	26991-26996	Cloud	
99-34	26997-27000	Run	
99-35	27001-27006	Cloud	
99-36	27007-27016	Functions	

#Text=App Engine Workflows Storage All Storage Products Cloud Storage Filestore Persistent Disk Cloud Storage for Firebase Local SSD Archival Storage Cloud Data Transfer Google Workspace Essentials
100-1	27017-27020	App	
100-2	27021-27027	Engine	
100-3	27028-27037	Workflows	
100-4	27038-27045	Storage	
100-5	27046-27049	All	
100-6	27050-27057	Storage	
100-7	27058-27066	Products	
100-8	27067-27072	Cloud	
100-9	27073-27080	Storage	
100-10	27081-27090	Filestore	
100-11	27091-27101	Persistent	
100-12	27102-27106	Disk	
100-13	27107-27112	Cloud	
100-14	27113-27120	Storage	
100-15	27121-27124	for	
100-16	27125-27133	Firebase	
100-17	27134-27139	Local	
100-18	27140-27143	SSD	
100-19	27144-27152	Archival	
100-20	27153-27160	Storage	
100-21	27161-27166	Cloud	
100-22	27167-27171	Data	
100-23	27172-27180	Transfer	
100-24	27181-27187	Google	
100-25	27188-27197	Workspace	
100-26	27198-27208	Essentials	

#Text=Do more for less with Google Cloud Contact Us Google Cloud Platform Overview Price list Calculators Free on Google Cloud More Cloud Products Google Workspace Google Maps Platform Cloud Identity Apigee Firebase Zync Render
101-1	27209-27211	Do	
101-2	27212-27216	more	
101-3	27217-27220	for	
101-4	27221-27225	less	
101-5	27226-27230	with	
101-6	27231-27237	Google	
101-7	27238-27243	Cloud	
101-8	27244-27251	Contact	
101-9	27252-27254	Us	
101-10	27255-27261	Google	
101-11	27262-27267	Cloud	
101-12	27268-27276	Platform	
101-13	27277-27285	Overview	
101-14	27286-27291	Price	
101-15	27292-27296	list	
101-16	27297-27308	Calculators	
101-17	27309-27313	Free	
101-18	27314-27316	on	
101-19	27317-27323	Google	
101-20	27324-27329	Cloud	
101-21	27330-27334	More	
101-22	27335-27340	Cloud	
101-23	27341-27349	Products	
101-24	27350-27356	Google	
101-25	27357-27366	Workspace	
101-26	27367-27373	Google	
101-27	27374-27378	Maps	
101-28	27379-27387	Platform	
101-29	27388-27393	Cloud	
101-30	27394-27402	Identity	
101-31	27403-27409	Apigee	
101-32	27410-27418	Firebase	
101-33	27419-27423	Zync	
101-34	27424-27430	Render	

#Text=Get started with Google Cloud Try GCP Free Get Started Resources to Start on Your Own Quickstarts GCP Marketplace Training Certification Get Help from an Expert Consulting Technical Account Management Find a Partner
102-1	27431-27434	Get	
102-2	27435-27442	started	
102-3	27443-27447	with	
102-4	27448-27454	Google	
102-5	27455-27460	Cloud	
102-6	27461-27464	Try	
102-7	27465-27468	GCP	
102-8	27469-27473	Free	
102-9	27474-27477	Get	
102-10	27478-27485	Started	
102-11	27486-27495	Resources	
102-12	27496-27498	to	
102-13	27499-27504	Start	
102-14	27505-27507	on	
102-15	27508-27512	Your	
102-16	27513-27516	Own	
102-17	27517-27528	Quickstarts	
102-18	27529-27532	GCP	
102-19	27533-27544	Marketplace	
102-20	27545-27553	Training	
102-21	27554-27567	Certification	
102-22	27568-27571	Get	
102-23	27572-27576	Help	
102-24	27577-27581	from	
102-25	27582-27584	an	
102-26	27585-27591	Expert	
102-27	27592-27602	Consulting	
102-28	27603-27612	Technical	
102-29	27613-27620	Account	
102-30	27621-27631	Management	
102-31	27632-27636	Find	
102-32	27637-27638	a	
102-33	27639-27646	Partner	

#Text=Become a Partner More ways to get started Home Docs Cloud SQL Documentation PostgreSQL Reference Send feedback Performance tips
103-1	27647-27653	Become	
103-2	27654-27655	a	
103-3	27656-27663	Partner	
103-4	27664-27668	More	
103-5	27669-27673	ways	
103-6	27674-27676	to	
103-7	27677-27680	get	
103-8	27681-27688	started	
103-9	27689-27693	Home	
103-10	27694-27698	Docs	
103-11	27699-27704	Cloud	
103-12	27705-27708	SQL	
103-13	27709-27722	Documentation	
103-14	27723-27733	PostgreSQL	
103-15	27734-27743	Reference	
103-16	27744-27748	Send	
103-17	27749-27757	feedback	
103-18	27758-27769	Performance	
103-19	27770-27774	tips	

#Text=This document covers some techniques you can use to improve the performance of your application. In some cases, examples from other APIs or generic APIs are used to illustrate the ideas presented. However, the same concepts are applicable to the Cloud SQL Admin API. Compression using gzip An easy and convenient way to reduce the bandwidth needed for each request is to enable gzip compression. Although this requires additional CPU time to uncompress the results, the trade-off with network costs usually makes it very worthwhile.
104-1	27775-27779	This	
104-2	27780-27788	document	
104-3	27789-27795	covers	
104-4	27796-27800	some	
104-5	27801-27811	techniques	
104-6	27812-27815	you	
104-7	27816-27819	can	
104-8	27820-27823	use	
104-9	27824-27826	to	
104-10	27827-27834	improve	
104-11	27835-27838	the	
104-12	27839-27850	performance	
104-13	27851-27853	of	
104-14	27854-27858	your	
104-15	27859-27870	application	
104-16	27870-27871	.	
104-17	27872-27874	In	
104-18	27875-27879	some	
104-19	27880-27885	cases	
104-20	27885-27886	,	
104-21	27887-27895	examples	
104-22	27896-27900	from	
104-23	27901-27906	other	
104-24	27907-27911	APIs	
104-25	27912-27914	or	
104-26	27915-27922	generic	
104-27	27923-27927	APIs	
104-28	27928-27931	are	
104-29	27932-27936	used	
104-30	27937-27939	to	
104-31	27940-27950	illustrate	
104-32	27951-27954	the	
104-33	27955-27960	ideas	
104-34	27961-27970	presented	
104-35	27970-27971	.	
104-36	27972-27979	However	
104-37	27979-27980	,	
104-38	27981-27984	the	
104-39	27985-27989	same	
104-40	27990-27998	concepts	
104-41	27999-28002	are	
104-42	28003-28013	applicable	
104-43	28014-28016	to	
104-44	28017-28020	the	
104-45	28021-28026	Cloud	
104-46	28027-28030	SQL	
104-47	28031-28036	Admin	
104-48	28037-28040	API	
104-49	28040-28041	.	
104-50	28042-28053	Compression	
104-51	28054-28059	using	
104-52	28060-28064	gzip	
104-53	28065-28067	An	
104-54	28068-28072	easy	
104-55	28073-28076	and	
104-56	28077-28087	convenient	
104-57	28088-28091	way	
104-58	28092-28094	to	
104-59	28095-28101	reduce	
104-60	28102-28105	the	
104-61	28106-28115	bandwidth	
104-62	28116-28122	needed	
104-63	28123-28126	for	
104-64	28127-28131	each	
104-65	28132-28139	request	
104-66	28140-28142	is	
104-67	28143-28145	to	
104-68	28146-28152	enable	
104-69	28153-28157	gzip	
104-70	28158-28169	compression	
104-71	28169-28170	.	
104-72	28171-28179	Although	
104-73	28180-28184	this	
104-74	28185-28193	requires	
104-75	28194-28204	additional	
104-76	28205-28208	CPU	
104-77	28209-28213	time	
104-78	28214-28216	to	
104-79	28217-28227	uncompress	
104-80	28228-28231	the	
104-81	28232-28239	results	
104-82	28239-28240	,	
104-83	28241-28244	the	
104-84	28245-28254	trade-off	
104-85	28255-28259	with	
104-86	28260-28267	network	
104-87	28268-28273	costs	
104-88	28274-28281	usually	
104-89	28282-28287	makes	
104-90	28288-28290	it	
104-91	28291-28295	very	
104-92	28296-28306	worthwhile	
104-93	28306-28307	.	

#Text=In order to receive a gzip-encoded response you must do two things: Set an Accept-Encoding header, and modify your user agent to contain the string gzip. Here is an example of properly formed HTTP headers for enabling gzip compression: Accept-Encoding: gzip User-Agent: my program (gzip) Working with partial resources Another way to improve the performance of your API calls is by sending and receiving only the portion of the
105-1	28308-28310	In	
105-2	28311-28316	order	
105-3	28317-28319	to	
105-4	28320-28327	receive	
105-5	28328-28329	a	
105-6	28330-28342	gzip-encoded	
105-7	28343-28351	response	
105-8	28352-28355	you	
105-9	28356-28360	must	
105-10	28361-28363	do	
105-11	28364-28367	two	
105-12	28368-28374	things	
105-13	28374-28375	:	
105-14	28376-28379	Set	
105-15	28380-28382	an	
105-16	28383-28398	Accept-Encoding	
105-17	28399-28405	header	
105-18	28405-28406	,	
105-19	28407-28410	and	
105-20	28411-28417	modify	
105-21	28418-28422	your	
105-22	28423-28427	user	
105-23	28428-28433	agent	
105-24	28434-28436	to	
105-25	28437-28444	contain	
105-26	28445-28448	the	
105-27	28449-28455	string	
105-28	28456-28460	gzip	
105-29	28460-28461	.	
105-30	28462-28466	Here	
105-31	28467-28469	is	
105-32	28470-28472	an	
105-33	28473-28480	example	
105-34	28481-28483	of	
105-35	28484-28492	properly	
105-36	28493-28499	formed	
105-37	28500-28504	HTTP	
105-38	28505-28512	headers	
105-39	28513-28516	for	
105-40	28517-28525	enabling	
105-41	28526-28530	gzip	
105-42	28531-28542	compression	
105-43	28542-28543	:	
105-44	28544-28559	Accept-Encoding	
105-45	28559-28560	:	
105-46	28561-28565	gzip	
105-47	28566-28576	User-Agent	
105-48	28576-28577	:	
105-49	28578-28580	my	
105-50	28581-28588	program	
105-51	28589-28590	(	
105-52	28590-28594	gzip	
105-53	28594-28595	)	
105-54	28596-28603	Working	
105-55	28604-28608	with	
105-56	28609-28616	partial	
105-57	28617-28626	resources	
105-58	28627-28634	Another	
105-59	28635-28638	way	
105-60	28639-28641	to	
105-61	28642-28649	improve	
105-62	28650-28653	the	
105-63	28654-28665	performance	
105-64	28666-28668	of	
105-65	28669-28673	your	
105-66	28674-28677	API	
105-67	28678-28683	calls	
105-68	28684-28686	is	
105-69	28687-28689	by	
105-70	28690-28697	sending	
105-71	28698-28701	and	
105-72	28702-28711	receiving	
105-73	28712-28716	only	
105-74	28717-28720	the	
105-75	28721-28728	portion	
105-76	28729-28731	of	
105-77	28732-28735	the	

#Text=data that you're interested in. This lets your application avoid transferring, parsing, and storing unneeded fields, so it can use resources including network, CPU, and memory more efficiently. There are two types of partial requests: Partial response: A request where you specify which fields to include in the response (use the fields request parameter). Patch: An update request where you send only the fields you want to change (use the PATCH HTTP verb).
106-1	28736-28740	data	
106-2	28741-28745	that	
106-3	28746-28752	you're	
106-4	28753-28763	interested	
106-5	28764-28766	in	
106-6	28766-28767	.	
106-7	28768-28772	This	
106-8	28773-28777	lets	
106-9	28778-28782	your	
106-10	28783-28794	application	
106-11	28795-28800	avoid	
106-12	28801-28813	transferring	
106-13	28813-28814	,	
106-14	28815-28822	parsing	
106-15	28822-28823	,	
106-16	28824-28827	and	
106-17	28828-28835	storing	
106-18	28836-28844	unneeded	
106-19	28845-28851	fields	
106-20	28851-28852	,	
106-21	28853-28855	so	
106-22	28856-28858	it	
106-23	28859-28862	can	
106-24	28863-28866	use	
106-25	28867-28876	resources	
106-26	28877-28886	including	
106-27	28887-28894	network	
106-28	28894-28895	,	
106-29	28896-28899	CPU	
106-30	28899-28900	,	
106-31	28901-28904	and	
106-32	28905-28911	memory	
106-33	28912-28916	more	
106-34	28917-28928	efficiently	
106-35	28928-28929	.	
106-36	28930-28935	There	
106-37	28936-28939	are	
106-38	28940-28943	two	
106-39	28944-28949	types	
106-40	28950-28952	of	
106-41	28953-28960	partial	
106-42	28961-28969	requests	
106-43	28969-28970	:	
106-44	28971-28978	Partial	
106-45	28979-28987	response	
106-46	28987-28988	:	
106-47	28989-28990	A	
106-48	28991-28998	request	
106-49	28999-29004	where	
106-50	29005-29008	you	
106-51	29009-29016	specify	
106-52	29017-29022	which	
106-53	29023-29029	fields	
106-54	29030-29032	to	
106-55	29033-29040	include	
106-56	29041-29043	in	
106-57	29044-29047	the	
106-58	29048-29056	response	
106-59	29057-29058	(	
106-60	29058-29061	use	
106-61	29062-29065	the	
106-62	29066-29072	fields	
106-63	29073-29080	request	
106-64	29081-29090	parameter	
106-65	29090-29091	)	
106-66	29091-29092	.	
106-67	29093-29098	Patch	
106-68	29098-29099	:	
106-69	29100-29102	An	
106-70	29103-29109	update	
106-71	29110-29117	request	
106-72	29118-29123	where	
106-73	29124-29127	you	
106-74	29128-29132	send	
106-75	29133-29137	only	
106-76	29138-29141	the	
106-77	29142-29148	fields	
106-78	29149-29152	you	
106-79	29153-29157	want	
106-80	29158-29160	to	
106-81	29161-29167	change	
106-82	29168-29169	(	
106-83	29169-29172	use	
106-84	29173-29176	the	
106-85	29177-29182	PATCH	
106-86	29183-29187	HTTP	
106-87	29188-29192	verb	
106-88	29192-29193	)	
106-89	29193-29194	.	

#Text=More details on making partial requests are provided in the following sections. Partial response By default, the server sends back the full representation of a resource after processing requests. For better performance, you can ask the server to send only the fields you really need and get a partial response instead.
107-1	29195-29199	More	
107-2	29200-29207	details	
107-3	29208-29210	on	
107-4	29211-29217	making	
107-5	29218-29225	partial	
107-6	29226-29234	requests	
107-7	29235-29238	are	
107-8	29239-29247	provided	
107-9	29248-29250	in	
107-10	29251-29254	the	
107-11	29255-29264	following	
107-12	29265-29273	sections	
107-13	29273-29274	.	
107-14	29275-29282	Partial	
107-15	29283-29291	response	
107-16	29292-29294	By	
107-17	29295-29302	default	
107-18	29302-29303	,	
107-19	29304-29307	the	
107-20	29308-29314	server	
107-21	29315-29320	sends	
107-22	29321-29325	back	
107-23	29326-29329	the	
107-24	29330-29334	full	
107-25	29335-29349	representation	
107-26	29350-29352	of	
107-27	29353-29354	a	
107-28	29355-29363	resource	
107-29	29364-29369	after	
107-30	29370-29380	processing	
107-31	29381-29389	requests	
107-32	29389-29390	.	
107-33	29391-29394	For	
107-34	29395-29401	better	
107-35	29402-29413	performance	
107-36	29413-29414	,	
107-37	29415-29418	you	
107-38	29419-29422	can	
107-39	29423-29426	ask	
107-40	29427-29430	the	
107-41	29431-29437	server	
107-42	29438-29440	to	
107-43	29441-29445	send	
107-44	29446-29450	only	
107-45	29451-29454	the	
107-46	29455-29461	fields	
107-47	29462-29465	you	
107-48	29466-29472	really	
107-49	29473-29477	need	
107-50	29478-29481	and	
107-51	29482-29485	get	
107-52	29486-29487	a	
107-53	29488-29495	partial	
107-54	29496-29504	response	
107-55	29505-29512	instead	
107-56	29512-29513	.	

#Text=To request a partial response, use the fields request parameter to specify the fields you want returned. You can use this parameter with any request that returns response data. Note that the fields parameter only affects the response data; it does not affect the data that you need to send, if any. To reduce the amount of data you send when modifying resources, use a patch request. Example The following example shows the use of the fields parameter with a generic (fictional) "Demo" API.
108-1	29514-29516	To	
108-2	29517-29524	request	
108-3	29525-29526	a	
108-4	29527-29534	partial	
108-5	29535-29543	response	
108-6	29543-29544	,	
108-7	29545-29548	use	
108-8	29549-29552	the	
108-9	29553-29559	fields	
108-10	29560-29567	request	
108-11	29568-29577	parameter	
108-12	29578-29580	to	
108-13	29581-29588	specify	
108-14	29589-29592	the	
108-15	29593-29599	fields	
108-16	29600-29603	you	
108-17	29604-29608	want	
108-18	29609-29617	returned	
108-19	29617-29618	.	
108-20	29619-29622	You	
108-21	29623-29626	can	
108-22	29627-29630	use	
108-23	29631-29635	this	
108-24	29636-29645	parameter	
108-25	29646-29650	with	
108-26	29651-29654	any	
108-27	29655-29662	request	
108-28	29663-29667	that	
108-29	29668-29675	returns	
108-30	29676-29684	response	
108-31	29685-29689	data	
108-32	29689-29690	.	
108-33	29691-29695	Note	
108-34	29696-29700	that	
108-35	29701-29704	the	
108-36	29705-29711	fields	
108-37	29712-29721	parameter	
108-38	29722-29726	only	
108-39	29727-29734	affects	
108-40	29735-29738	the	
108-41	29739-29747	response	
108-42	29748-29752	data	
108-43	29752-29753	;	
108-44	29754-29756	it	
108-45	29757-29761	does	
108-46	29762-29765	not	
108-47	29766-29772	affect	
108-48	29773-29776	the	
108-49	29777-29781	data	
108-50	29782-29786	that	
108-51	29787-29790	you	
108-52	29791-29795	need	
108-53	29796-29798	to	
108-54	29799-29803	send	
108-55	29803-29804	,	
108-56	29805-29807	if	
108-57	29808-29811	any	
108-58	29811-29812	.	
108-59	29813-29815	To	
108-60	29816-29822	reduce	
108-61	29823-29826	the	
108-62	29827-29833	amount	
108-63	29834-29836	of	
108-64	29837-29841	data	
108-65	29842-29845	you	
108-66	29846-29850	send	
108-67	29851-29855	when	
108-68	29856-29865	modifying	
108-69	29866-29875	resources	
108-70	29875-29876	,	
108-71	29877-29880	use	
108-72	29881-29882	a	
108-73	29883-29888	patch	
108-74	29889-29896	request	
108-75	29896-29897	.	
108-76	29898-29905	Example	
108-77	29906-29909	The	
108-78	29910-29919	following	
108-79	29920-29927	example	
108-80	29928-29933	shows	
108-81	29934-29937	the	
108-82	29938-29941	use	
108-83	29942-29944	of	
108-84	29945-29948	the	
108-85	29949-29955	fields	
108-86	29956-29965	parameter	
108-87	29966-29970	with	
108-88	29971-29972	a	
108-89	29973-29980	generic	
108-90	29981-29982	(	
108-91	29982-29991	fictional	
108-92	29991-29992	)	
108-93	29993-29994	"	
108-94	29994-29998	Demo	
108-95	29998-29999	"	
108-96	30000-30003	API	
108-97	30003-30004	.	

#Text=Simple request: This HTTP GET request omits the fields parameter and returns the full resource. https://www.googleapis.com/demo/v1 Full resource response: The full resource data includes the following fields, along with many others that have been omitted for brevity. "kind": "demo", ...
109-1	30005-30011	Simple	
109-2	30012-30019	request	
109-3	30019-30020	:	
109-4	30021-30025	This	
109-5	30026-30030	HTTP	
109-6	30031-30034	GET	
109-7	30035-30042	request	
109-8	30043-30048	omits	
109-9	30049-30052	the	
109-10	30053-30059	fields	
109-11	30060-30069	parameter	
109-12	30070-30073	and	
109-13	30074-30081	returns	
109-14	30082-30085	the	
109-15	30086-30090	full	
109-16	30091-30099	resource	
109-17	30099-30100	.	
109-18	30101-30106	https	
109-19	30106-30107	:	
109-20	30107-30108	/	
109-21	30108-30109	/	
109-22	30109-30127	www.googleapis.com	
109-23	30127-30128	/	
109-24	30128-30132	demo	
109-25	30132-30133	/	
109-26	30133-30135	v1	
109-27	30136-30140	Full	
109-28	30141-30149	resource	
109-29	30150-30158	response	
109-30	30158-30159	:	
109-31	30160-30163	The	
109-32	30164-30168	full	
109-33	30169-30177	resource	
109-34	30178-30182	data	
109-35	30183-30191	includes	
109-36	30192-30195	the	
109-37	30196-30205	following	
109-38	30206-30212	fields	
109-39	30212-30213	,	
109-40	30214-30219	along	
109-41	30220-30224	with	
109-42	30225-30229	many	
109-43	30230-30236	others	
109-44	30237-30241	that	
109-45	30242-30246	have	
109-46	30247-30251	been	
109-47	30252-30259	omitted	
109-48	30260-30263	for	
109-49	30264-30271	brevity	
109-50	30271-30272	.	
109-51	30273-30274	"	
109-52	30274-30278	kind	
109-53	30278-30279	"	
109-54	30279-30280	:	
109-55	30281-30282	"	
109-56	30282-30286	demo	
109-57	30286-30287	"	
109-58	30287-30288	,	
109-59	30289-30290	.	
109-60	30290-30291	.	
109-61	30291-30292	.	

#Text="items": [ "title": "First title", "comment": "First comment.", "characteristics": { "length": "short", "accuracy": "high", "followers": ["Jo", "Will"],
110-1	30293-30294	"	
110-2	30294-30299	items	
110-3	30299-30300	"	
110-4	30300-30301	:	
110-5	30302-30303	[	
110-6	30304-30305	"	
110-7	30305-30310	title	
110-8	30310-30311	"	
110-9	30311-30312	:	
110-10	30313-30314	"	
110-11	30314-30319	First	
110-12	30320-30325	title	
110-13	30325-30326	"	
110-14	30326-30327	,	
110-15	30328-30329	"	
110-16	30329-30336	comment	
110-17	30336-30337	"	
110-18	30337-30338	:	
110-19	30339-30340	"	
110-20	30340-30345	First	
110-21	30346-30353	comment	
110-22	30353-30354	.	
110-23	30354-30355	"	
110-24	30355-30356	,	
110-25	30357-30358	"	
110-26	30358-30373	characteristics	
110-27	30373-30374	"	
110-28	30374-30375	:	
110-29	30376-30377	{	
110-30	30378-30379	"	
110-31	30379-30385	length	
110-32	30385-30386	"	
110-33	30386-30387	:	
110-34	30388-30389	"	
110-35	30389-30394	short	
110-36	30394-30395	"	
110-37	30395-30396	,	
110-38	30397-30398	"	
110-39	30398-30406	accuracy	
110-40	30406-30407	"	
110-41	30407-30408	:	
110-42	30409-30410	"	
110-43	30410-30414	high	
110-44	30414-30415	"	
110-45	30415-30416	,	
110-46	30417-30418	"	
110-47	30418-30427	followers	
110-48	30427-30428	"	
110-49	30428-30429	:	
110-50	30430-30431	[	
110-51	30431-30432	"	
110-52	30432-30434	Jo	
110-53	30434-30435	"	
110-54	30435-30436	,	
110-55	30437-30438	"	
110-56	30438-30442	Will	
110-57	30442-30443	"	
110-58	30443-30444	]	
110-59	30444-30445	,	

#Text="status": "active", ... "title": "Second title", "comment": "Second comment.", "characteristics": { "length": "long", "accuracy": "medium" "followers": [ ],
111-1	30446-30447	"	
111-2	30447-30453	status	
111-3	30453-30454	"	
111-4	30454-30455	:	
111-5	30456-30457	"	
111-6	30457-30463	active	
111-7	30463-30464	"	
111-8	30464-30465	,	
111-9	30466-30467	.	
111-10	30467-30468	.	
111-11	30468-30469	.	
111-12	30470-30471	"	
111-13	30471-30476	title	
111-14	30476-30477	"	
111-15	30477-30478	:	
111-16	30479-30480	"	
111-17	30480-30486	Second	
111-18	30487-30492	title	
111-19	30492-30493	"	
111-20	30493-30494	,	
111-21	30495-30496	"	
111-22	30496-30503	comment	
111-23	30503-30504	"	
111-24	30504-30505	:	
111-25	30506-30507	"	
111-26	30507-30513	Second	
111-27	30514-30521	comment	
111-28	30521-30522	.	
111-29	30522-30523	"	
111-30	30523-30524	,	
111-31	30525-30526	"	
111-32	30526-30541	characteristics	
111-33	30541-30542	"	
111-34	30542-30543	:	
111-35	30544-30545	{	
111-36	30546-30547	"	
111-37	30547-30553	length	
111-38	30553-30554	"	
111-39	30554-30555	:	
111-40	30556-30557	"	
111-41	30557-30561	long	
111-42	30561-30562	"	
111-43	30562-30563	,	
111-44	30564-30565	"	
111-45	30565-30573	accuracy	
111-46	30573-30574	"	
111-47	30574-30575	:	
111-48	30576-30577	"	
111-49	30577-30583	medium	
111-50	30583-30584	"	
111-51	30585-30586	"	
111-52	30586-30595	followers	
111-53	30595-30596	"	
111-54	30596-30597	:	
111-55	30598-30599	[	
111-56	30600-30601	]	
111-57	30601-30602	,	

#Text="status": "pending", ... ... Request for a partial response: The following request for this same resource uses the fields parameter to significantly reduce the amount of data returned. https://www.googleapis.com/demo/v1?fields=kind,items(title,characteristics/length)
112-1	30603-30604	"	
112-2	30604-30610	status	
112-3	30610-30611	"	
112-4	30611-30612	:	
112-5	30613-30614	"	
112-6	30614-30621	pending	
112-7	30621-30622	"	
112-8	30622-30623	,	
112-9	30624-30625	.	
112-10	30625-30626	.	
112-11	30626-30627	.	
112-12	30628-30629	.	
112-13	30629-30630	.	
112-14	30630-30631	.	
112-15	30632-30639	Request	
112-16	30640-30643	for	
112-17	30644-30645	a	
112-18	30646-30653	partial	
112-19	30654-30662	response	
112-20	30662-30663	:	
112-21	30664-30667	The	
112-22	30668-30677	following	
112-23	30678-30685	request	
112-24	30686-30689	for	
112-25	30690-30694	this	
112-26	30695-30699	same	
112-27	30700-30708	resource	
112-28	30709-30713	uses	
112-29	30714-30717	the	
112-30	30718-30724	fields	
112-31	30725-30734	parameter	
112-32	30735-30737	to	
112-33	30738-30751	significantly	
112-34	30752-30758	reduce	
112-35	30759-30762	the	
112-36	30763-30769	amount	
112-37	30770-30772	of	
112-38	30773-30777	data	
112-39	30778-30786	returned	
112-40	30786-30787	.	
112-41	30788-30793	https	
112-42	30793-30794	:	
112-43	30794-30795	/	
112-44	30795-30796	/	
112-45	30796-30814	www.googleapis.com	
112-46	30814-30815	/	
112-47	30815-30819	demo	
112-48	30819-30820	/	
112-49	30820-30822	v1	
112-50	30822-30823	?	
112-51	30823-30829	fields	
112-52	30829-30830	=	
112-53	30830-30834	kind	
112-54	30834-30835	,	
112-55	30835-30840	items	
112-56	30840-30841	(	
112-57	30841-30846	title	
112-58	30846-30847	,	
112-59	30847-30862	characteristics	
112-60	30862-30863	/	
112-61	30863-30869	length	
112-62	30869-30870	)	

#Text=Partial response: In response to the request above, the server sends back a response that contains only the kind information along with a pared-down items array that includes only HTML title and length characteristic information in each item. 200 OK "kind": "demo", "items": [{ "title": "First title", "characteristics": { "length": "short" }, { "title": "Second title",
113-1	30871-30878	Partial	
113-2	30879-30887	response	
113-3	30887-30888	:	
113-4	30889-30891	In	
113-5	30892-30900	response	
113-6	30901-30903	to	
113-7	30904-30907	the	
113-8	30908-30915	request	
113-9	30916-30921	above	
113-10	30921-30922	,	
113-11	30923-30926	the	
113-12	30927-30933	server	
113-13	30934-30939	sends	
113-14	30940-30944	back	
113-15	30945-30946	a	
113-16	30947-30955	response	
113-17	30956-30960	that	
113-18	30961-30969	contains	
113-19	30970-30974	only	
113-20	30975-30978	the	
113-21	30979-30983	kind	
113-22	30984-30995	information	
113-23	30996-31001	along	
113-24	31002-31006	with	
113-25	31007-31008	a	
113-26	31009-31019	pared-down	
113-27	31020-31025	items	
113-28	31026-31031	array	
113-29	31032-31036	that	
113-30	31037-31045	includes	
113-31	31046-31050	only	
113-32	31051-31055	HTML	
113-33	31056-31061	title	
113-34	31062-31065	and	
113-35	31066-31072	length	
113-36	31073-31087	characteristic	
113-37	31088-31099	information	
113-38	31100-31102	in	
113-39	31103-31107	each	
113-40	31108-31112	item	
113-41	31112-31113	.	
113-42	31114-31117	200	
113-43	31118-31120	OK	
113-44	31121-31122	"	
113-45	31122-31126	kind	
113-46	31126-31127	"	
113-47	31127-31128	:	
113-48	31129-31130	"	
113-49	31130-31134	demo	
113-50	31134-31135	"	
113-51	31135-31136	,	
113-52	31137-31138	"	
113-53	31138-31143	items	
113-54	31143-31144	"	
113-55	31144-31145	:	
113-56	31146-31147	[	
113-57	31147-31148	{	
113-58	31149-31150	"	
113-59	31150-31155	title	
113-60	31155-31156	"	
113-61	31156-31157	:	
113-62	31158-31159	"	
113-63	31159-31164	First	
113-64	31165-31170	title	
113-65	31170-31171	"	
113-66	31171-31172	,	
113-67	31173-31174	"	
113-68	31174-31189	characteristics	
113-69	31189-31190	"	
113-70	31190-31191	:	
113-71	31192-31193	{	
113-72	31194-31195	"	
113-73	31195-31201	length	
113-74	31201-31202	"	
113-75	31202-31203	:	
113-76	31204-31205	"	
113-77	31205-31210	short	
113-78	31210-31211	"	
113-79	31212-31213	}	
113-80	31213-31214	,	
113-81	31215-31216	{	
113-82	31217-31218	"	
113-83	31218-31223	title	
113-84	31223-31224	"	
113-85	31224-31225	:	
113-86	31226-31227	"	
113-87	31227-31233	Second	
113-88	31234-31239	title	
113-89	31239-31240	"	
113-90	31240-31241	,	

#Text="characteristics": { "length": "long" ... Note that the response is a JSON object that includes only the selected fields and their enclosing parent objects. Details on how to format the fields parameter is covered next, followed by more details about what exactly gets returned in the response.
114-1	31242-31243	"	
114-2	31243-31258	characteristics	
114-3	31258-31259	"	
114-4	31259-31260	:	
114-5	31261-31262	{	
114-6	31263-31264	"	
114-7	31264-31270	length	
114-8	31270-31271	"	
114-9	31271-31272	:	
114-10	31273-31274	"	
114-11	31274-31278	long	
114-12	31278-31279	"	
114-13	31280-31281	.	
114-14	31281-31282	.	
114-15	31282-31283	.	
114-16	31284-31288	Note	
114-17	31289-31293	that	
114-18	31294-31297	the	
114-19	31298-31306	response	
114-20	31307-31309	is	
114-21	31310-31311	a	
114-22	31312-31316	JSON	
114-23	31317-31323	object	
114-24	31324-31328	that	
114-25	31329-31337	includes	
114-26	31338-31342	only	
114-27	31343-31346	the	
114-28	31347-31355	selected	
114-29	31356-31362	fields	
114-30	31363-31366	and	
114-31	31367-31372	their	
114-32	31373-31382	enclosing	
114-33	31383-31389	parent	
114-34	31390-31397	objects	
114-35	31397-31398	.	
114-36	31399-31406	Details	
114-37	31407-31409	on	
114-38	31410-31413	how	
114-39	31414-31416	to	
114-40	31417-31423	format	
114-41	31424-31427	the	
114-42	31428-31434	fields	
114-43	31435-31444	parameter	
114-44	31445-31447	is	
114-45	31448-31455	covered	
114-46	31456-31460	next	
114-47	31460-31461	,	
114-48	31462-31470	followed	
114-49	31471-31473	by	
114-50	31474-31478	more	
114-51	31479-31486	details	
114-52	31487-31492	about	
114-53	31493-31497	what	
114-54	31498-31505	exactly	
114-55	31506-31510	gets	
114-56	31511-31519	returned	
114-57	31520-31522	in	
114-58	31523-31526	the	
114-59	31527-31535	response	
114-60	31535-31536	.	

#Text=Fields parameter syntax summary The format of the fields request parameter value is loosely based on XPath syntax. The supported syntax is summarized below, and additional examples are provided in the following section. Use a comma-separated list to select multiple fields.
115-1	31537-31543	Fields	
115-2	31544-31553	parameter	
115-3	31554-31560	syntax	
115-4	31561-31568	summary	
115-5	31569-31572	The	
115-6	31573-31579	format	
115-7	31580-31582	of	
115-8	31583-31586	the	
115-9	31587-31593	fields	
115-10	31594-31601	request	
115-11	31602-31611	parameter	
115-12	31612-31617	value	
115-13	31618-31620	is	
115-14	31621-31628	loosely	
115-15	31629-31634	based	
115-16	31635-31637	on	
115-17	31638-31643	XPath	
115-18	31644-31650	syntax	
115-19	31650-31651	.	
115-20	31652-31655	The	
115-21	31656-31665	supported	
115-22	31666-31672	syntax	
115-23	31673-31675	is	
115-24	31676-31686	summarized	
115-25	31687-31692	below	
115-26	31692-31693	,	
115-27	31694-31697	and	
115-28	31698-31708	additional	
115-29	31709-31717	examples	
115-30	31718-31721	are	
115-31	31722-31730	provided	
115-32	31731-31733	in	
115-33	31734-31737	the	
115-34	31738-31747	following	
115-35	31748-31755	section	
115-36	31755-31756	.	
115-37	31757-31760	Use	
115-38	31761-31762	a	
115-39	31763-31778	comma-separated	
115-40	31779-31783	list	
115-41	31784-31786	to	
115-42	31787-31793	select	
115-43	31794-31802	multiple	
115-44	31803-31809	fields	
115-45	31809-31810	.	

#Text=Use a/b to select a field b that is nested within field a; use a/b/c to select a field c nested within b. Exception: For API responses that use "data" wrappers, where the response is nested within a data object that looks like data: { ... }, do not include "data" in the fields specification. Including the data object with a fields specification like data/a/b causes an error. Instead, just use a fields specification like a/b.
116-1	31811-31814	Use	
116-2	31815-31816	a	
116-3	31816-31817	/	
116-4	31817-31818	b	
116-5	31819-31821	to	
116-6	31822-31828	select	
116-7	31829-31830	a	
116-8	31831-31836	field	
116-9	31837-31838	b	
116-10	31839-31843	that	
116-11	31844-31846	is	
116-12	31847-31853	nested	
116-13	31854-31860	within	
116-14	31861-31866	field	
116-15	31867-31868	a	
116-16	31868-31869	;	
116-17	31870-31873	use	
116-18	31874-31875	a	
116-19	31875-31876	/	
116-20	31876-31877	b	
116-21	31877-31878	/	
116-22	31878-31879	c	
116-23	31880-31882	to	
116-24	31883-31889	select	
116-25	31890-31891	a	
116-26	31892-31897	field	
116-27	31898-31899	c	
116-28	31900-31906	nested	
116-29	31907-31913	within	
116-30	31914-31915	b	
116-31	31915-31916	.	
116-32	31917-31926	Exception	
116-33	31926-31927	:	
116-34	31928-31931	For	
116-35	31932-31935	API	
116-36	31936-31945	responses	
116-37	31946-31950	that	
116-38	31951-31954	use	
116-39	31955-31956	"	
116-40	31956-31960	data	
116-41	31960-31961	"	
116-42	31962-31970	wrappers	
116-43	31970-31971	,	
116-44	31972-31977	where	
116-45	31978-31981	the	
116-46	31982-31990	response	
116-47	31991-31993	is	
116-48	31994-32000	nested	
116-49	32001-32007	within	
116-50	32008-32009	a	
116-51	32010-32014	data	
116-52	32015-32021	object	
116-53	32022-32026	that	
116-54	32027-32032	looks	
116-55	32033-32037	like	
116-56	32038-32042	data	
116-57	32042-32043	:	
116-58	32044-32045	{	
116-59	32046-32047	.	
116-60	32047-32048	.	
116-61	32048-32049	.	
116-62	32050-32051	}	
116-63	32051-32052	,	
116-64	32053-32055	do	
116-65	32056-32059	not	
116-66	32060-32067	include	
116-67	32068-32069	"	
116-68	32069-32073	data	
116-69	32073-32074	"	
116-70	32075-32077	in	
116-71	32078-32081	the	
116-72	32082-32088	fields	
116-73	32089-32102	specification	
116-74	32102-32103	.	
116-75	32104-32113	Including	
116-76	32114-32117	the	
116-77	32118-32122	data	
116-78	32123-32129	object	
116-79	32130-32134	with	
116-80	32135-32136	a	
116-81	32137-32143	fields	
116-82	32144-32157	specification	
116-83	32158-32162	like	
116-84	32163-32167	data	
116-85	32167-32168	/	
116-86	32168-32169	a	
116-87	32169-32170	/	
116-88	32170-32171	b	
116-89	32172-32178	causes	
116-90	32179-32181	an	
116-91	32182-32187	error	
116-92	32187-32188	.	
116-93	32189-32196	Instead	
116-94	32196-32197	,	
116-95	32198-32202	just	
116-96	32203-32206	use	
116-97	32207-32208	a	
116-98	32209-32215	fields	
116-99	32216-32229	specification	
116-100	32230-32234	like	
116-101	32235-32236	a	
116-102	32236-32237	/	
116-103	32237-32238	b	
116-104	32238-32239	.	

#Text=Use a sub-selector to request a set of specific sub-fields of arrays or objects by placing expressions in parentheses "( )". For example: fields=items(id,author/email) returns only the item ID and author's email for each element in the items array. You can also specify a single sub-field, where fields=items(id) is equivalent to fields=items/id.
117-1	32240-32243	Use	
117-2	32244-32245	a	
117-3	32246-32258	sub-selector	
117-4	32259-32261	to	
117-5	32262-32269	request	
117-6	32270-32271	a	
117-7	32272-32275	set	
117-8	32276-32278	of	
117-9	32279-32287	specific	
117-10	32288-32298	sub-fields	
117-11	32299-32301	of	
117-12	32302-32308	arrays	
117-13	32309-32311	or	
117-14	32312-32319	objects	
117-15	32320-32322	by	
117-16	32323-32330	placing	
117-17	32331-32342	expressions	
117-18	32343-32345	in	
117-19	32346-32357	parentheses	
117-20	32358-32359	"	
117-21	32359-32360	(	
117-22	32361-32362	)	
117-23	32362-32363	"	
117-24	32363-32364	.	
117-25	32365-32368	For	
117-26	32369-32376	example	
117-27	32376-32377	:	
117-28	32378-32384	fields	
117-29	32384-32385	=	
117-30	32385-32390	items	
117-31	32390-32391	(	
117-32	32391-32393	id	
117-33	32393-32394	,	
117-34	32394-32400	author	
117-35	32400-32401	/	
117-36	32401-32406	email	
117-37	32406-32407	)	
117-38	32408-32415	returns	
117-39	32416-32420	only	
117-40	32421-32424	the	
117-41	32425-32429	item	
117-42	32430-32432	ID	
117-43	32433-32436	and	
117-44	32437-32445	author's	
117-45	32446-32451	email	
117-46	32452-32455	for	
117-47	32456-32460	each	
117-48	32461-32468	element	
117-49	32469-32471	in	
117-50	32472-32475	the	
117-51	32476-32481	items	
117-52	32482-32487	array	
117-53	32487-32488	.	
117-54	32489-32492	You	
117-55	32493-32496	can	
117-56	32497-32501	also	
117-57	32502-32509	specify	
117-58	32510-32511	a	
117-59	32512-32518	single	
117-60	32519-32528	sub-field	
117-61	32528-32529	,	
117-62	32530-32535	where	
117-63	32536-32542	fields	
117-64	32542-32543	=	
117-65	32543-32548	items	
117-66	32548-32549	(	
117-67	32549-32551	id	
117-68	32551-32552	)	
117-69	32553-32555	is	
117-70	32556-32566	equivalent	
117-71	32567-32569	to	
117-72	32570-32576	fields	
117-73	32576-32577	=	
117-74	32577-32582	items	
117-75	32582-32583	/	
117-76	32583-32585	id	
117-77	32585-32586	.	

#Text=Use wildcards in field selections, if needed. For example: fields=items/pagemap/* selects all objects in a pagemap. More examples of using the fields parameter The examples below include descriptions of how the fields parameter value affects the response.
118-1	32587-32590	Use	
118-2	32591-32600	wildcards	
118-3	32601-32603	in	
118-4	32604-32609	field	
118-5	32610-32620	selections	
118-6	32620-32621	,	
118-7	32622-32624	if	
118-8	32625-32631	needed	
118-9	32631-32632	.	
118-10	32633-32636	For	
118-11	32637-32644	example	
118-12	32644-32645	:	
118-13	32646-32652	fields	
118-14	32652-32653	=	
118-15	32653-32658	items	
118-16	32658-32659	/	
118-17	32659-32666	pagemap	
118-18	32666-32667	/	
118-19	32667-32668	*	
118-20	32669-32676	selects	
118-21	32677-32680	all	
118-22	32681-32688	objects	
118-23	32689-32691	in	
118-24	32692-32693	a	
118-25	32694-32701	pagemap	
118-26	32701-32702	.	
118-27	32703-32707	More	
118-28	32708-32716	examples	
118-29	32717-32719	of	
118-30	32720-32725	using	
118-31	32726-32729	the	
118-32	32730-32736	fields	
118-33	32737-32746	parameter	
118-34	32747-32750	The	
118-35	32751-32759	examples	
118-36	32760-32765	below	
118-37	32766-32773	include	
118-38	32774-32786	descriptions	
118-39	32787-32789	of	
118-40	32790-32793	how	
118-41	32794-32797	the	
118-42	32798-32804	fields	
118-43	32805-32814	parameter	
118-44	32815-32820	value	
118-45	32821-32828	affects	
118-46	32829-32832	the	
118-47	32833-32841	response	
118-48	32841-32842	.	

#Text=Note: As with all query parameter values, the fields parameter value must be URL encoded. For better readability, the examples in this document omit the encoding. Identify the fields you want returned, or make field selections.
119-1	32843-32847	Note	
119-2	32847-32848	:	
119-3	32849-32851	As	
119-4	32852-32856	with	
119-5	32857-32860	all	
119-6	32861-32866	query	
119-7	32867-32876	parameter	
119-8	32877-32883	values	
119-9	32883-32884	,	
119-10	32885-32888	the	
119-11	32889-32895	fields	
119-12	32896-32905	parameter	
119-13	32906-32911	value	
119-14	32912-32916	must	
119-15	32917-32919	be	
119-16	32920-32923	URL	
119-17	32924-32931	encoded	
119-18	32931-32932	.	
119-19	32933-32936	For	
119-20	32937-32943	better	
119-21	32944-32955	readability	
119-22	32955-32956	,	
119-23	32957-32960	the	
119-24	32961-32969	examples	
119-25	32970-32972	in	
119-26	32973-32977	this	
119-27	32978-32986	document	
119-28	32987-32991	omit	
119-29	32992-32995	the	
119-30	32996-33004	encoding	
119-31	33004-33005	.	
119-32	33006-33014	Identify	
119-33	33015-33018	the	
119-34	33019-33025	fields	
119-35	33026-33029	you	
119-36	33030-33034	want	
119-37	33035-33043	returned	
119-38	33043-33044	,	
119-39	33045-33047	or	
119-40	33048-33052	make	
119-41	33053-33058	field	
119-42	33059-33069	selections	
119-43	33069-33070	.	

#Text=The fields request parameter value is a comma-separated list of fields, and each field is specified relative to the root of the response. Thus, if you are performing a list operation, the response is a collection, and it generally includes an array of resources. If you are performing an operation that returns a single resource, fields are specified relative to that resource. If the field you select is (or is part of) an array, the server returns the selected portion of all elements in the array. Here are some collection-level examples: Examples Effect items Returns all elements in the items array, including all fields in each element, but no other fields. etag,items Returns both the etag field and all elements in the items array.
120-1	33071-33074	The	
120-2	33075-33081	fields	
120-3	33082-33089	request	
120-4	33090-33099	parameter	
120-5	33100-33105	value	
120-6	33106-33108	is	
120-7	33109-33110	a	
120-8	33111-33126	comma-separated	
120-9	33127-33131	list	
120-10	33132-33134	of	
120-11	33135-33141	fields	
120-12	33141-33142	,	
120-13	33143-33146	and	
120-14	33147-33151	each	
120-15	33152-33157	field	
120-16	33158-33160	is	
120-17	33161-33170	specified	
120-18	33171-33179	relative	
120-19	33180-33182	to	
120-20	33183-33186	the	
120-21	33187-33191	root	
120-22	33192-33194	of	
120-23	33195-33198	the	
120-24	33199-33207	response	
120-25	33207-33208	.	
120-26	33209-33213	Thus	
120-27	33213-33214	,	
120-28	33215-33217	if	
120-29	33218-33221	you	
120-30	33222-33225	are	
120-31	33226-33236	performing	
120-32	33237-33238	a	
120-33	33239-33243	list	
120-34	33244-33253	operation	
120-35	33253-33254	,	
120-36	33255-33258	the	
120-37	33259-33267	response	
120-38	33268-33270	is	
120-39	33271-33272	a	
120-40	33273-33283	collection	
120-41	33283-33284	,	
120-42	33285-33288	and	
120-43	33289-33291	it	
120-44	33292-33301	generally	
120-45	33302-33310	includes	
120-46	33311-33313	an	
120-47	33314-33319	array	
120-48	33320-33322	of	
120-49	33323-33332	resources	
120-50	33332-33333	.	
120-51	33334-33336	If	
120-52	33337-33340	you	
120-53	33341-33344	are	
120-54	33345-33355	performing	
120-55	33356-33358	an	
120-56	33359-33368	operation	
120-57	33369-33373	that	
120-58	33374-33381	returns	
120-59	33382-33383	a	
120-60	33384-33390	single	
120-61	33391-33399	resource	
120-62	33399-33400	,	
120-63	33401-33407	fields	
120-64	33408-33411	are	
120-65	33412-33421	specified	
120-66	33422-33430	relative	
120-67	33431-33433	to	
120-68	33434-33438	that	
120-69	33439-33447	resource	
120-70	33447-33448	.	
120-71	33449-33451	If	
120-72	33452-33455	the	
120-73	33456-33461	field	
120-74	33462-33465	you	
120-75	33466-33472	select	
120-76	33473-33475	is	
120-77	33476-33477	(	
120-78	33477-33479	or	
120-79	33480-33482	is	
120-80	33483-33487	part	
120-81	33488-33490	of	
120-82	33490-33491	)	
120-83	33492-33494	an	
120-84	33495-33500	array	
120-85	33500-33501	,	
120-86	33502-33505	the	
120-87	33506-33512	server	
120-88	33513-33520	returns	
120-89	33521-33524	the	
120-90	33525-33533	selected	
120-91	33534-33541	portion	
120-92	33542-33544	of	
120-93	33545-33548	all	
120-94	33549-33557	elements	
120-95	33558-33560	in	
120-96	33561-33564	the	
120-97	33565-33570	array	
120-98	33570-33571	.	
120-99	33572-33576	Here	
120-100	33577-33580	are	
120-101	33581-33585	some	
120-102	33586-33602	collection-level	
120-103	33603-33611	examples	
120-104	33611-33612	:	
120-105	33613-33621	Examples	
120-106	33622-33628	Effect	
120-107	33629-33634	items	
120-108	33635-33642	Returns	
120-109	33643-33646	all	
120-110	33647-33655	elements	
120-111	33656-33658	in	
120-112	33659-33662	the	
120-113	33663-33668	items	
120-114	33669-33674	array	
120-115	33674-33675	,	
120-116	33676-33685	including	
120-117	33686-33689	all	
120-118	33690-33696	fields	
120-119	33697-33699	in	
120-120	33700-33704	each	
120-121	33705-33712	element	
120-122	33712-33713	,	
120-123	33714-33717	but	
120-124	33718-33720	no	
120-125	33721-33726	other	
120-126	33727-33733	fields	
120-127	33733-33734	.	
120-128	33735-33739	etag	
120-129	33739-33740	,	
120-130	33740-33745	items	
120-131	33746-33753	Returns	
120-132	33754-33758	both	
120-133	33759-33762	the	
120-134	33763-33767	etag	
120-135	33768-33773	field	
120-136	33774-33777	and	
120-137	33778-33781	all	
120-138	33782-33790	elements	
120-139	33791-33793	in	
120-140	33794-33797	the	
120-141	33798-33803	items	
120-142	33804-33809	array	
120-143	33809-33810	.	

#Text=items/title Returns only the title field for all elements in the items array. Whenever a nested field is returned, the response includes the enclosing parent objects. The parent fields do not include any other child fields unless they are also selected explicitly. context/facets/label
121-1	33811-33816	items	
121-2	33816-33817	/	
121-3	33817-33822	title	
121-4	33823-33830	Returns	
121-5	33831-33835	only	
121-6	33836-33839	the	
121-7	33840-33845	title	
121-8	33846-33851	field	
121-9	33852-33855	for	
121-10	33856-33859	all	
121-11	33860-33868	elements	
121-12	33869-33871	in	
121-13	33872-33875	the	
121-14	33876-33881	items	
121-15	33882-33887	array	
121-16	33887-33888	.	
121-17	33889-33897	Whenever	
121-18	33898-33899	a	
121-19	33900-33906	nested	
121-20	33907-33912	field	
121-21	33913-33915	is	
121-22	33916-33924	returned	
121-23	33924-33925	,	
121-24	33926-33929	the	
121-25	33930-33938	response	
121-26	33939-33947	includes	
121-27	33948-33951	the	
121-28	33952-33961	enclosing	
121-29	33962-33968	parent	
121-30	33969-33976	objects	
121-31	33976-33977	.	
121-32	33978-33981	The	
121-33	33982-33988	parent	
121-34	33989-33995	fields	
121-35	33996-33998	do	
121-36	33999-34002	not	
121-37	34003-34010	include	
121-38	34011-34014	any	
121-39	34015-34020	other	
121-40	34021-34026	child	
121-41	34027-34033	fields	
121-42	34034-34040	unless	
121-43	34041-34045	they	
121-44	34046-34049	are	
121-45	34050-34054	also	
121-46	34055-34063	selected	
121-47	34064-34074	explicitly	
121-48	34074-34075	.	
121-49	34076-34083	context	
121-50	34083-34084	/	
121-51	34084-34090	facets	
121-52	34090-34091	/	
121-53	34091-34096	label	

#Text=Returns only the label field for all members of the facets array, which is itself nested under the context object. items/pagemap/*/title For each element in the items array, returns only the title field (if present) of all objects that are children of pagemap. Here are some resource-level examples: Examples Effect title
122-1	34097-34104	Returns	
122-2	34105-34109	only	
122-3	34110-34113	the	
122-4	34114-34119	label	
122-5	34120-34125	field	
122-6	34126-34129	for	
122-7	34130-34133	all	
122-8	34134-34141	members	
122-9	34142-34144	of	
122-10	34145-34148	the	
122-11	34149-34155	facets	
122-12	34156-34161	array	
122-13	34161-34162	,	
122-14	34163-34168	which	
122-15	34169-34171	is	
122-16	34172-34178	itself	
122-17	34179-34185	nested	
122-18	34186-34191	under	
122-19	34192-34195	the	
122-20	34196-34203	context	
122-21	34204-34210	object	
122-22	34210-34211	.	
122-23	34212-34217	items	
122-24	34217-34218	/	
122-25	34218-34225	pagemap	
122-26	34225-34226	/	
122-27	34226-34227	*	
122-28	34227-34228	/	
122-29	34228-34233	title	
122-30	34234-34237	For	
122-31	34238-34242	each	
122-32	34243-34250	element	
122-33	34251-34253	in	
122-34	34254-34257	the	
122-35	34258-34263	items	
122-36	34264-34269	array	
122-37	34269-34270	,	
122-38	34271-34278	returns	
122-39	34279-34283	only	
122-40	34284-34287	the	
122-41	34288-34293	title	
122-42	34294-34299	field	
122-43	34300-34301	(	
122-44	34301-34303	if	
122-45	34304-34311	present	
122-46	34311-34312	)	
122-47	34313-34315	of	
122-48	34316-34319	all	
122-49	34320-34327	objects	
122-50	34328-34332	that	
122-51	34333-34336	are	
122-52	34337-34345	children	
122-53	34346-34348	of	
122-54	34349-34356	pagemap	
122-55	34356-34357	.	
122-56	34358-34362	Here	
122-57	34363-34366	are	
122-58	34367-34371	some	
122-59	34372-34386	resource-level	
122-60	34387-34395	examples	
122-61	34395-34396	:	
122-62	34397-34405	Examples	
122-63	34406-34412	Effect	
122-64	34413-34418	title	

#Text=Returns the title field of the requested resource. author/uri Returns the uri sub-field of the author object in the requested resource. links/*/href Returns the href field of all objects that are children of links. Request only parts of specific fields using sub-selections.
123-1	34419-34426	Returns	
123-2	34427-34430	the	
123-3	34431-34436	title	
123-4	34437-34442	field	
123-5	34443-34445	of	
123-6	34446-34449	the	
123-7	34450-34459	requested	
123-8	34460-34468	resource	
123-9	34468-34469	.	
123-10	34470-34476	author	
123-11	34476-34477	/	
123-12	34477-34480	uri	
123-13	34481-34488	Returns	
123-14	34489-34492	the	
123-15	34493-34496	uri	
123-16	34497-34506	sub-field	
123-17	34507-34509	of	
123-18	34510-34513	the	
123-19	34514-34520	author	
123-20	34521-34527	object	
123-21	34528-34530	in	
123-22	34531-34534	the	
123-23	34535-34544	requested	
123-24	34545-34553	resource	
123-25	34553-34554	.	
123-26	34555-34560	links	
123-27	34560-34561	/	
123-28	34561-34562	*	
123-29	34562-34563	/	
123-30	34563-34567	href	
123-31	34568-34575	Returns	
123-32	34576-34579	the	
123-33	34580-34584	href	
123-34	34585-34590	field	
123-35	34591-34593	of	
123-36	34594-34597	all	
123-37	34598-34605	objects	
123-38	34606-34610	that	
123-39	34611-34614	are	
123-40	34615-34623	children	
123-41	34624-34626	of	
123-42	34627-34632	links	
123-43	34632-34633	.	
123-44	34634-34641	Request	
123-45	34642-34646	only	
123-46	34647-34652	parts	
123-47	34653-34655	of	
123-48	34656-34664	specific	
123-49	34665-34671	fields	
123-50	34672-34677	using	
123-51	34678-34692	sub-selections	
123-52	34692-34693	.	

#Text=By default, if your request specifies particular fields, the server returns the objects or array elements in their entirety. You can specify a response that includes only certain sub-fields. You do this using "( )" sub-selection syntax, as in the example below. Example Effect items(title,author/uri) Returns only the values of the title and author's uri for each element in the items array. Handling partial responses
124-1	34694-34696	By	
124-2	34697-34704	default	
124-3	34704-34705	,	
124-4	34706-34708	if	
124-5	34709-34713	your	
124-6	34714-34721	request	
124-7	34722-34731	specifies	
124-8	34732-34742	particular	
124-9	34743-34749	fields	
124-10	34749-34750	,	
124-11	34751-34754	the	
124-12	34755-34761	server	
124-13	34762-34769	returns	
124-14	34770-34773	the	
124-15	34774-34781	objects	
124-16	34782-34784	or	
124-17	34785-34790	array	
124-18	34791-34799	elements	
124-19	34800-34802	in	
124-20	34803-34808	their	
124-21	34809-34817	entirety	
124-22	34817-34818	.	
124-23	34819-34822	You	
124-24	34823-34826	can	
124-25	34827-34834	specify	
124-26	34835-34836	a	
124-27	34837-34845	response	
124-28	34846-34850	that	
124-29	34851-34859	includes	
124-30	34860-34864	only	
124-31	34865-34872	certain	
124-32	34873-34883	sub-fields	
124-33	34883-34884	.	
124-34	34885-34888	You	
124-35	34889-34891	do	
124-36	34892-34896	this	
124-37	34897-34902	using	
124-38	34903-34904	"	
124-39	34904-34905	(	
124-40	34906-34907	)	
124-41	34907-34908	"	
124-42	34909-34922	sub-selection	
124-43	34923-34929	syntax	
124-44	34929-34930	,	
124-45	34931-34933	as	
124-46	34934-34936	in	
124-47	34937-34940	the	
124-48	34941-34948	example	
124-49	34949-34954	below	
124-50	34954-34955	.	
124-51	34956-34963	Example	
124-52	34964-34970	Effect	
124-53	34971-34976	items	
124-54	34976-34977	(	
124-55	34977-34982	title	
124-56	34982-34983	,	
124-57	34983-34989	author	
124-58	34989-34990	/	
124-59	34990-34993	uri	
124-60	34993-34994	)	
124-61	34995-35002	Returns	
124-62	35003-35007	only	
124-63	35008-35011	the	
124-64	35012-35018	values	
124-65	35019-35021	of	
124-66	35022-35025	the	
124-67	35026-35031	title	
124-68	35032-35035	and	
124-69	35036-35044	author's	
124-70	35045-35048	uri	
124-71	35049-35052	for	
124-72	35053-35057	each	
124-73	35058-35065	element	
124-74	35066-35068	in	
124-75	35069-35072	the	
124-76	35073-35078	items	
124-77	35079-35084	array	
124-78	35084-35085	.	
124-79	35086-35094	Handling	
124-80	35095-35102	partial	
124-81	35103-35112	responses	

#Text=After a server processes a valid request that includes the fields query parameter, it sends back an HTTP 200 OK status code, along with the requested data. If the fields query parameter has an error or is otherwise invalid, the server returns an HTTP 400 Bad Request status code, along with an error message telling the user what was wrong with their fields selection (for example, "Invalid field selection a/b"). Here is the partial response example shown in the introductory section above. The request uses the fields parameter to specify which fields to return. https://www.googleapis.com/demo/v1?fields=kind,items(title,characteristics/length)
125-1	35113-35118	After	
125-2	35119-35120	a	
125-3	35121-35127	server	
125-4	35128-35137	processes	
125-5	35138-35139	a	
125-6	35140-35145	valid	
125-7	35146-35153	request	
125-8	35154-35158	that	
125-9	35159-35167	includes	
125-10	35168-35171	the	
125-11	35172-35178	fields	
125-12	35179-35184	query	
125-13	35185-35194	parameter	
125-14	35194-35195	,	
125-15	35196-35198	it	
125-16	35199-35204	sends	
125-17	35205-35209	back	
125-18	35210-35212	an	
125-19	35213-35217	HTTP	
125-20	35218-35221	200	
125-21	35222-35224	OK	
125-22	35225-35231	status	
125-23	35232-35236	code	
125-24	35236-35237	,	
125-25	35238-35243	along	
125-26	35244-35248	with	
125-27	35249-35252	the	
125-28	35253-35262	requested	
125-29	35263-35267	data	
125-30	35267-35268	.	
125-31	35269-35271	If	
125-32	35272-35275	the	
125-33	35276-35282	fields	
125-34	35283-35288	query	
125-35	35289-35298	parameter	
125-36	35299-35302	has	
125-37	35303-35305	an	
125-38	35306-35311	error	
125-39	35312-35314	or	
125-40	35315-35317	is	
125-41	35318-35327	otherwise	
125-42	35328-35335	invalid	
125-43	35335-35336	,	
125-44	35337-35340	the	
125-45	35341-35347	server	
125-46	35348-35355	returns	
125-47	35356-35358	an	
125-48	35359-35363	HTTP	
125-49	35364-35367	400	
125-50	35368-35371	Bad	
125-51	35372-35379	Request	
125-52	35380-35386	status	
125-53	35387-35391	code	
125-54	35391-35392	,	
125-55	35393-35398	along	
125-56	35399-35403	with	
125-57	35404-35406	an	
125-58	35407-35412	error	
125-59	35413-35420	message	
125-60	35421-35428	telling	
125-61	35429-35432	the	
125-62	35433-35437	user	
125-63	35438-35442	what	
125-64	35443-35446	was	
125-65	35447-35452	wrong	
125-66	35453-35457	with	
125-67	35458-35463	their	
125-68	35464-35470	fields	
125-69	35471-35480	selection	
125-70	35481-35482	(	
125-71	35482-35485	for	
125-72	35486-35493	example	
125-73	35493-35494	,	
125-74	35495-35496	"	
125-75	35496-35503	Invalid	
125-76	35504-35509	field	
125-77	35510-35519	selection	
125-78	35520-35521	a	
125-79	35521-35522	/	
125-80	35522-35523	b	
125-81	35523-35524	"	
125-82	35524-35525	)	
125-83	35525-35526	.	
125-84	35527-35531	Here	
125-85	35532-35534	is	
125-86	35535-35538	the	
125-87	35539-35546	partial	
125-88	35547-35555	response	
125-89	35556-35563	example	
125-90	35564-35569	shown	
125-91	35570-35572	in	
125-92	35573-35576	the	
125-93	35577-35589	introductory	
125-94	35590-35597	section	
125-95	35598-35603	above	
125-96	35603-35604	.	
125-97	35605-35608	The	
125-98	35609-35616	request	
125-99	35617-35621	uses	
125-100	35622-35625	the	
125-101	35626-35632	fields	
125-102	35633-35642	parameter	
125-103	35643-35645	to	
125-104	35646-35653	specify	
125-105	35654-35659	which	
125-106	35660-35666	fields	
125-107	35667-35669	to	
125-108	35670-35676	return	
125-109	35676-35677	.	
125-110	35678-35683	https	
125-111	35683-35684	:	
125-112	35684-35685	/	
125-113	35685-35686	/	
125-114	35686-35704	www.googleapis.com	
125-115	35704-35705	/	
125-116	35705-35709	demo	
125-117	35709-35710	/	
125-118	35710-35712	v1	
125-119	35712-35713	?	
125-120	35713-35719	fields	
125-121	35719-35720	=	
125-122	35720-35724	kind	
125-123	35724-35725	,	
125-124	35725-35730	items	
125-125	35730-35731	(	
125-126	35731-35736	title	
125-127	35736-35737	,	
125-128	35737-35752	characteristics	
125-129	35752-35753	/	
125-130	35753-35759	length	
125-131	35759-35760	)	

#Text=The partial response looks like this: 200 OK "kind": "demo", "items": [{ "title": "First title", "characteristics": { "length": "short" }, { "title": "Second title",
126-1	35761-35764	The	
126-2	35765-35772	partial	
126-3	35773-35781	response	
126-4	35782-35787	looks	
126-5	35788-35792	like	
126-6	35793-35797	this	
126-7	35797-35798	:	
126-8	35799-35802	200	
126-9	35803-35805	OK	
126-10	35806-35807	"	
126-11	35807-35811	kind	
126-12	35811-35812	"	
126-13	35812-35813	:	
126-14	35814-35815	"	
126-15	35815-35819	demo	
126-16	35819-35820	"	
126-17	35820-35821	,	
126-18	35822-35823	"	
126-19	35823-35828	items	
126-20	35828-35829	"	
126-21	35829-35830	:	
126-22	35831-35832	[	
126-23	35832-35833	{	
126-24	35834-35835	"	
126-25	35835-35840	title	
126-26	35840-35841	"	
126-27	35841-35842	:	
126-28	35843-35844	"	
126-29	35844-35849	First	
126-30	35850-35855	title	
126-31	35855-35856	"	
126-32	35856-35857	,	
126-33	35858-35859	"	
126-34	35859-35874	characteristics	
126-35	35874-35875	"	
126-36	35875-35876	:	
126-37	35877-35878	{	
126-38	35879-35880	"	
126-39	35880-35886	length	
126-40	35886-35887	"	
126-41	35887-35888	:	
126-42	35889-35890	"	
126-43	35890-35895	short	
126-44	35895-35896	"	
126-45	35897-35898	}	
126-46	35898-35899	,	
126-47	35900-35901	{	
126-48	35902-35903	"	
126-49	35903-35908	title	
126-50	35908-35909	"	
126-51	35909-35910	:	
126-52	35911-35912	"	
126-53	35912-35918	Second	
126-54	35919-35924	title	
126-55	35924-35925	"	
126-56	35925-35926	,	

#Text="characteristics": { "length": "long" ... Note: For APIs that support query parameters for data pagination (maxResults and nextPageToken, for example), use those parameters to reduce the results of each query to a manageable size. Otherwise, the performance gains possible with partial response might not be realized.
127-1	35927-35928	"	
127-2	35928-35943	characteristics	
127-3	35943-35944	"	
127-4	35944-35945	:	
127-5	35946-35947	{	
127-6	35948-35949	"	
127-7	35949-35955	length	
127-8	35955-35956	"	
127-9	35956-35957	:	
127-10	35958-35959	"	
127-11	35959-35963	long	
127-12	35963-35964	"	
127-13	35965-35966	.	
127-14	35966-35967	.	
127-15	35967-35968	.	
127-16	35969-35973	Note	
127-17	35973-35974	:	
127-18	35975-35978	For	
127-19	35979-35983	APIs	
127-20	35984-35988	that	
127-21	35989-35996	support	
127-22	35997-36002	query	
127-23	36003-36013	parameters	
127-24	36014-36017	for	
127-25	36018-36022	data	
127-26	36023-36033	pagination	
127-27	36034-36035	(	
127-28	36035-36045	maxResults	
127-29	36046-36049	and	
127-30	36050-36063	nextPageToken	
127-31	36063-36064	,	
127-32	36065-36068	for	
127-33	36069-36076	example	
127-34	36076-36077	)	
127-35	36077-36078	,	
127-36	36079-36082	use	
127-37	36083-36088	those	
127-38	36089-36099	parameters	
127-39	36100-36102	to	
127-40	36103-36109	reduce	
127-41	36110-36113	the	
127-42	36114-36121	results	
127-43	36122-36124	of	
127-44	36125-36129	each	
127-45	36130-36135	query	
127-46	36136-36138	to	
127-47	36139-36140	a	
127-48	36141-36151	manageable	
127-49	36152-36156	size	
127-50	36156-36157	.	
127-51	36158-36167	Otherwise	
127-52	36167-36168	,	
127-53	36169-36172	the	
127-54	36173-36184	performance	
127-55	36185-36190	gains	
127-56	36191-36199	possible	
127-57	36200-36204	with	
127-58	36205-36212	partial	
127-59	36213-36221	response	
127-60	36222-36227	might	
127-61	36228-36231	not	
127-62	36232-36234	be	
127-63	36235-36243	realized	
127-64	36243-36244	.	

#Text=Patch (partial update) You can also avoid sending unnecessary data when modifying resources. To send updated data only for the specific fields that you’re changing, use the HTTP PATCH verb. The patch semantics described in this document are different (and simpler) than they were for the older, GData implementation of partial update.
128-1	36245-36250	Patch	
128-2	36251-36252	(	
128-3	36252-36259	partial	
128-4	36260-36266	update	
128-5	36266-36267	)	
128-6	36268-36271	You	
128-7	36272-36275	can	
128-8	36276-36280	also	
128-9	36281-36286	avoid	
128-10	36287-36294	sending	
128-11	36295-36306	unnecessary	
128-12	36307-36311	data	
128-13	36312-36316	when	
128-14	36317-36326	modifying	
128-15	36327-36336	resources	
128-16	36336-36337	.	
128-17	36338-36340	To	
128-18	36341-36345	send	
128-19	36346-36353	updated	
128-20	36354-36358	data	
128-21	36359-36363	only	
128-22	36364-36367	for	
128-23	36368-36371	the	
128-24	36372-36380	specific	
128-25	36381-36387	fields	
128-26	36388-36392	that	
128-27	36393-36396	you	
128-28	36396-36397	’	
128-29	36397-36399	re	
128-30	36400-36408	changing	
128-31	36408-36409	,	
128-32	36410-36413	use	
128-33	36414-36417	the	
128-34	36418-36422	HTTP	
128-35	36423-36428	PATCH	
128-36	36429-36433	verb	
128-37	36433-36434	.	
128-38	36435-36438	The	
128-39	36439-36444	patch	
128-40	36445-36454	semantics	
128-41	36455-36464	described	
128-42	36465-36467	in	
128-43	36468-36472	this	
128-44	36473-36481	document	
128-45	36482-36485	are	
128-46	36486-36495	different	
128-47	36496-36497	(	
128-48	36497-36500	and	
128-49	36501-36508	simpler	
128-50	36508-36509	)	
128-51	36510-36514	than	
128-52	36515-36519	they	
128-53	36520-36524	were	
128-54	36525-36528	for	
128-55	36529-36532	the	
128-56	36533-36538	older	
128-57	36538-36539	,	
128-58	36540-36545	GData	
128-59	36546-36560	implementation	
128-60	36561-36563	of	
128-61	36564-36571	partial	
128-62	36572-36578	update	
128-63	36578-36579	.	

#Text=The short example below shows how using patch minimizes the data you need to send to make a small update. Example This example shows a simple patch request to update only the title of a generic (fictional) "Demo" API resource. The resource also has a comment, a set of characteristics, status, and many other fields, but this request only sends the title field, since that's the only field being modified:
129-1	36580-36583	The	
129-2	36584-36589	short	
129-3	36590-36597	example	
129-4	36598-36603	below	
129-5	36604-36609	shows	
129-6	36610-36613	how	
129-7	36614-36619	using	
129-8	36620-36625	patch	
129-9	36626-36635	minimizes	
129-10	36636-36639	the	
129-11	36640-36644	data	
129-12	36645-36648	you	
129-13	36649-36653	need	
129-14	36654-36656	to	
129-15	36657-36661	send	
129-16	36662-36664	to	
129-17	36665-36669	make	
129-18	36670-36671	a	
129-19	36672-36677	small	
129-20	36678-36684	update	
129-21	36684-36685	.	
129-22	36686-36693	Example	
129-23	36694-36698	This	
129-24	36699-36706	example	
129-25	36707-36712	shows	
129-26	36713-36714	a	
129-27	36715-36721	simple	
129-28	36722-36727	patch	
129-29	36728-36735	request	
129-30	36736-36738	to	
129-31	36739-36745	update	
129-32	36746-36750	only	
129-33	36751-36754	the	
129-34	36755-36760	title	
129-35	36761-36763	of	
129-36	36764-36765	a	
129-37	36766-36773	generic	
129-38	36774-36775	(	
129-39	36775-36784	fictional	
129-40	36784-36785	)	
129-41	36786-36787	"	
129-42	36787-36791	Demo	
129-43	36791-36792	"	
129-44	36793-36796	API	
129-45	36797-36805	resource	
129-46	36805-36806	.	
129-47	36807-36810	The	
129-48	36811-36819	resource	
129-49	36820-36824	also	
129-50	36825-36828	has	
129-51	36829-36830	a	
129-52	36831-36838	comment	
129-53	36838-36839	,	
129-54	36840-36841	a	
129-55	36842-36845	set	
129-56	36846-36848	of	
129-57	36849-36864	characteristics	
129-58	36864-36865	,	
129-59	36866-36872	status	
129-60	36872-36873	,	
129-61	36874-36877	and	
129-62	36878-36882	many	
129-63	36883-36888	other	
129-64	36889-36895	fields	
129-65	36895-36896	,	
129-66	36897-36900	but	
129-67	36901-36905	this	
129-68	36906-36913	request	
129-69	36914-36918	only	
129-70	36919-36924	sends	
129-71	36925-36928	the	
129-72	36929-36934	title	
129-73	36935-36940	field	
129-74	36940-36941	,	
129-75	36942-36947	since	
129-76	36948-36954	that's	
129-77	36955-36958	the	
129-78	36959-36963	only	
129-79	36964-36969	field	
129-80	36970-36975	being	
129-81	36976-36984	modified	
129-82	36984-36985	:	

#Text=PATCH https://www.googleapis.com/demo/v1/324 Authorization: Bearer your_auth_token Content-Type: application/json "title": "New title" Response: 200 OK "title": "New title", "comment": "First comment.",
130-1	36986-36991	PATCH	
130-2	36992-36997	https	
130-3	36997-36998	:	
130-4	36998-36999	/	
130-5	36999-37000	/	
130-6	37000-37018	www.googleapis.com	
130-7	37018-37019	/	
130-8	37019-37023	demo	
130-9	37023-37024	/	
130-10	37024-37026	v1	
130-11	37026-37027	/	
130-12	37027-37030	324	
130-13	37031-37044	Authorization	
130-14	37044-37045	:	
130-15	37046-37052	Bearer	
130-16	37053-37068	your_auth_token	
130-17	37069-37081	Content-Type	
130-18	37081-37082	:	
130-19	37083-37094	application	
130-20	37094-37095	/	
130-21	37095-37099	json	
130-22	37100-37101	"	
130-23	37101-37106	title	
130-24	37106-37107	"	
130-25	37107-37108	:	
130-26	37109-37110	"	
130-27	37110-37113	New	
130-28	37114-37119	title	
130-29	37119-37120	"	
130-30	37121-37129	Response	
130-31	37129-37130	:	
130-32	37131-37134	200	
130-33	37135-37137	OK	
130-34	37138-37139	"	
130-35	37139-37144	title	
130-36	37144-37145	"	
130-37	37145-37146	:	
130-38	37147-37148	"	
130-39	37148-37151	New	
130-40	37152-37157	title	
130-41	37157-37158	"	
130-42	37158-37159	,	
130-43	37160-37161	"	
130-44	37161-37168	comment	
130-45	37168-37169	"	
130-46	37169-37170	:	
130-47	37171-37172	"	
130-48	37172-37177	First	
130-49	37178-37185	comment	
130-50	37185-37186	.	
130-51	37186-37187	"	
130-52	37187-37188	,	

#Text="characteristics": { "length": "short", "accuracy": "high", "followers": ["Jo", "Will"], "status": "active", ... The server returns a 200 OK status code, along with the full representation of the updated resource.
131-1	37189-37190	"	
131-2	37190-37205	characteristics	
131-3	37205-37206	"	
131-4	37206-37207	:	
131-5	37208-37209	{	
131-6	37210-37211	"	
131-7	37211-37217	length	
131-8	37217-37218	"	
131-9	37218-37219	:	
131-10	37220-37221	"	
131-11	37221-37226	short	
131-12	37226-37227	"	
131-13	37227-37228	,	
131-14	37229-37230	"	
131-15	37230-37238	accuracy	
131-16	37238-37239	"	
131-17	37239-37240	:	
131-18	37241-37242	"	
131-19	37242-37246	high	
131-20	37246-37247	"	
131-21	37247-37248	,	
131-22	37249-37250	"	
131-23	37250-37259	followers	
131-24	37259-37260	"	
131-25	37260-37261	:	
131-26	37262-37263	[	
131-27	37263-37264	"	
131-28	37264-37266	Jo	
131-29	37266-37267	"	
131-30	37267-37268	,	
131-31	37269-37270	"	
131-32	37270-37274	Will	
131-33	37274-37275	"	
131-34	37275-37276	]	
131-35	37276-37277	,	
131-36	37278-37279	"	
131-37	37279-37285	status	
131-38	37285-37286	"	
131-39	37286-37287	:	
131-40	37288-37289	"	
131-41	37289-37295	active	
131-42	37295-37296	"	
131-43	37296-37297	,	
131-44	37298-37299	.	
131-45	37299-37300	.	
131-46	37300-37301	.	
131-47	37302-37305	The	
131-48	37306-37312	server	
131-49	37313-37320	returns	
131-50	37321-37322	a	
131-51	37323-37326	200	
131-52	37327-37329	OK	
131-53	37330-37336	status	
131-54	37337-37341	code	
131-55	37341-37342	,	
131-56	37343-37348	along	
131-57	37349-37353	with	
131-58	37354-37357	the	
131-59	37358-37362	full	
131-60	37363-37377	representation	
131-61	37378-37380	of	
131-62	37381-37384	the	
131-63	37385-37392	updated	
131-64	37393-37401	resource	
131-65	37401-37402	.	

#Text=Since only the title field was included in the patch request, that's the only value that is different from before. Note: If you use the partial response fields parameter in combination with patch, you can increase the efficiency of your update requests even further. A patch request only reduces the size of the request. A partial response reduces the size of the response. So to reduce the amount of data sent in both directions, use a patch request with the fields parameter.
132-1	37403-37408	Since	
132-2	37409-37413	only	
132-3	37414-37417	the	
132-4	37418-37423	title	
132-5	37424-37429	field	
132-6	37430-37433	was	
132-7	37434-37442	included	
132-8	37443-37445	in	
132-9	37446-37449	the	
132-10	37450-37455	patch	
132-11	37456-37463	request	
132-12	37463-37464	,	
132-13	37465-37471	that's	
132-14	37472-37475	the	
132-15	37476-37480	only	
132-16	37481-37486	value	
132-17	37487-37491	that	
132-18	37492-37494	is	
132-19	37495-37504	different	
132-20	37505-37509	from	
132-21	37510-37516	before	
132-22	37516-37517	.	
132-23	37518-37522	Note	
132-24	37522-37523	:	
132-25	37524-37526	If	
132-26	37527-37530	you	
132-27	37531-37534	use	
132-28	37535-37538	the	
132-29	37539-37546	partial	
132-30	37547-37555	response	
132-31	37556-37562	fields	
132-32	37563-37572	parameter	
132-33	37573-37575	in	
132-34	37576-37587	combination	
132-35	37588-37592	with	
132-36	37593-37598	patch	
132-37	37598-37599	,	
132-38	37600-37603	you	
132-39	37604-37607	can	
132-40	37608-37616	increase	
132-41	37617-37620	the	
132-42	37621-37631	efficiency	
132-43	37632-37634	of	
132-44	37635-37639	your	
132-45	37640-37646	update	
132-46	37647-37655	requests	
132-47	37656-37660	even	
132-48	37661-37668	further	
132-49	37668-37669	.	
132-50	37670-37671	A	
132-51	37672-37677	patch	
132-52	37678-37685	request	
132-53	37686-37690	only	
132-54	37691-37698	reduces	
132-55	37699-37702	the	
132-56	37703-37707	size	
132-57	37708-37710	of	
132-58	37711-37714	the	
132-59	37715-37722	request	
132-60	37722-37723	.	
132-61	37724-37725	A	
132-62	37726-37733	partial	
132-63	37734-37742	response	
132-64	37743-37750	reduces	
132-65	37751-37754	the	
132-66	37755-37759	size	
132-67	37760-37762	of	
132-68	37763-37766	the	
132-69	37767-37775	response	
132-70	37775-37776	.	
132-71	37777-37779	So	
132-72	37780-37782	to	
132-73	37783-37789	reduce	
132-74	37790-37793	the	
132-75	37794-37800	amount	
132-76	37801-37803	of	
132-77	37804-37808	data	
132-78	37809-37813	sent	
132-79	37814-37816	in	
132-80	37817-37821	both	
132-81	37822-37832	directions	
132-82	37832-37833	,	
132-83	37834-37837	use	
132-84	37838-37839	a	
132-85	37840-37845	patch	
132-86	37846-37853	request	
132-87	37854-37858	with	
132-88	37859-37862	the	
132-89	37863-37869	fields	
132-90	37870-37879	parameter	
132-91	37879-37880	.	

#Text=Semantics of a patch request The body of the patch request includes only the resource fields you want to modify. When you specify a field, you must include any enclosing parent objects, just as the enclosing parents are returned with a partial response. The modified data you send is merged into the data for the parent object, if there is one.
133-1	37881-37890	Semantics	
133-2	37891-37893	of	
133-3	37894-37895	a	
133-4	37896-37901	patch	
133-5	37902-37909	request	
133-6	37910-37913	The	
133-7	37914-37918	body	
133-8	37919-37921	of	
133-9	37922-37925	the	
133-10	37925-37926	 	
133-11	37926-37931	patch	
133-12	37931-37932	 	
133-13	37932-37939	request	
133-14	37940-37948	includes	
133-15	37949-37953	only	
133-16	37954-37957	the	
133-17	37958-37966	resource	
133-18	37967-37973	fields	
133-19	37974-37977	you	
133-20	37978-37982	want	
133-21	37983-37985	to	
133-22	37986-37992	modify	
133-23	37992-37993	.	
133-24	37994-37998	When	
133-25	37999-38002	you	
133-26	38003-38010	specify	
133-27	38011-38012	a	
133-28	38013-38018	field	
133-29	38018-38019	,	
133-30	38020-38023	you	
133-31	38024-38028	must	
133-32	38029-38036	include	
133-33	38037-38040	any	
133-34	38041-38050	enclosing	
133-35	38051-38057	parent	
133-36	38058-38065	objects	
133-37	38065-38066	,	
133-38	38067-38071	just	
133-39	38072-38074	as	
133-40	38075-38078	the	
133-41	38079-38088	enclosing	
133-42	38089-38096	parents	
133-43	38097-38100	are	
133-44	38101-38109	returned	
133-45	38110-38114	with	
133-46	38115-38116	a	
133-47	38117-38124	partial	
133-48	38125-38133	response	
133-49	38133-38134	.	
133-50	38135-38138	The	
133-51	38139-38147	modified	
133-52	38148-38152	data	
133-53	38153-38156	you	
133-54	38157-38161	send	
133-55	38162-38164	is	
133-56	38165-38171	merged	
133-57	38172-38176	into	
133-58	38177-38180	the	
133-59	38181-38185	data	
133-60	38186-38189	for	
133-61	38190-38193	the	
133-62	38194-38200	parent	
133-63	38201-38207	object	
133-64	38207-38208	,	
133-65	38209-38211	if	
133-66	38212-38217	there	
133-67	38218-38220	is	
133-68	38221-38224	one	
133-69	38224-38225	.	

#Text=Add: To add a field that doesn't already exist, specify the new field and its value. Modify: To change the value of an existing field, specify the field and set it to the new value. Delete: To delete a field, specify the field and set it to null. For example, "comment": null. You can also delete an entire object (if it is mutable) by setting it to null. If you are using the
134-1	38226-38229	Add	
134-2	38229-38230	:	
134-3	38231-38233	To	
134-4	38234-38237	add	
134-5	38238-38239	a	
134-6	38240-38245	field	
134-7	38246-38250	that	
134-8	38251-38258	doesn't	
134-9	38259-38266	already	
134-10	38267-38272	exist	
134-11	38272-38273	,	
134-12	38274-38281	specify	
134-13	38282-38285	the	
134-14	38286-38289	new	
134-15	38290-38295	field	
134-16	38296-38299	and	
134-17	38300-38303	its	
134-18	38304-38309	value	
134-19	38309-38310	.	
134-20	38311-38317	Modify	
134-21	38317-38318	:	
134-22	38319-38321	To	
134-23	38322-38328	change	
134-24	38329-38332	the	
134-25	38333-38338	value	
134-26	38339-38341	of	
134-27	38342-38344	an	
134-28	38345-38353	existing	
134-29	38354-38359	field	
134-30	38359-38360	,	
134-31	38361-38368	specify	
134-32	38369-38372	the	
134-33	38373-38378	field	
134-34	38379-38382	and	
134-35	38383-38386	set	
134-36	38387-38389	it	
134-37	38390-38392	to	
134-38	38393-38396	the	
134-39	38397-38400	new	
134-40	38401-38406	value	
134-41	38406-38407	.	
134-42	38408-38414	Delete	
134-43	38414-38415	:	
134-44	38416-38418	To	
134-45	38419-38425	delete	
134-46	38426-38427	a	
134-47	38428-38433	field	
134-48	38433-38434	,	
134-49	38435-38442	specify	
134-50	38443-38446	the	
134-51	38447-38452	field	
134-52	38453-38456	and	
134-53	38457-38460	set	
134-54	38461-38463	it	
134-55	38464-38466	to	
134-56	38467-38471	null	
134-57	38471-38472	.	
134-58	38473-38476	For	
134-59	38477-38484	example	
134-60	38484-38485	,	
134-61	38486-38487	"	
134-62	38487-38494	comment	
134-63	38494-38495	"	
134-64	38495-38496	:	
134-65	38497-38501	null	
134-66	38501-38502	.	
134-67	38503-38506	You	
134-68	38507-38510	can	
134-69	38511-38515	also	
134-70	38516-38522	delete	
134-71	38523-38525	an	
134-72	38526-38532	entire	
134-73	38533-38539	object	
134-74	38540-38541	(	
134-75	38541-38543	if	
134-76	38544-38546	it	
134-77	38547-38549	is	
134-78	38550-38557	mutable	
134-79	38557-38558	)	
134-80	38559-38561	by	
134-81	38562-38569	setting	
134-82	38570-38572	it	
134-83	38573-38575	to	
134-84	38576-38580	null	
134-85	38580-38581	.	
134-86	38582-38584	If	
134-87	38585-38588	you	
134-88	38589-38592	are	
134-89	38593-38598	using	
134-90	38599-38602	the	

#Text=Java API Client Library, use Data.NULL_STRING instead; for details, see JSON null. Note about arrays: Patch requests that contain arrays replace the existing array with the one you provide. You cannot modify, add, or delete items in an array in a piecemeal fashion. Using patch in a read-modify-write cycle
135-1	38603-38607	Java	
135-2	38608-38611	API	
135-3	38612-38618	Client	
135-4	38619-38626	Library	
135-5	38626-38627	,	
135-6	38628-38631	use	
135-7	38632-38648	Data.NULL_STRING	
135-8	38649-38656	instead	
135-9	38656-38657	;	
135-10	38658-38661	for	
135-11	38662-38669	details	
135-12	38669-38670	,	
135-13	38671-38674	see	
135-14	38675-38679	JSON	
135-15	38680-38684	null	
135-16	38684-38685	.	
135-17	38686-38690	Note	
135-18	38691-38696	about	
135-19	38697-38703	arrays	
135-20	38703-38704	:	
135-21	38705-38710	Patch	
135-22	38711-38719	requests	
135-23	38720-38724	that	
135-24	38725-38732	contain	
135-25	38733-38739	arrays	
135-26	38740-38747	replace	
135-27	38748-38751	the	
135-28	38752-38760	existing	
135-29	38761-38766	array	
135-30	38767-38771	with	
135-31	38772-38775	the	
135-32	38776-38779	one	
135-33	38780-38783	you	
135-34	38784-38791	provide	
135-35	38791-38792	.	
135-36	38793-38796	You	
135-37	38797-38803	cannot	
135-38	38804-38810	modify	
135-39	38810-38811	,	
135-40	38812-38815	add	
135-41	38815-38816	,	
135-42	38817-38819	or	
135-43	38820-38826	delete	
135-44	38827-38832	items	
135-45	38833-38835	in	
135-46	38836-38838	an	
135-47	38839-38844	array	
135-48	38845-38847	in	
135-49	38848-38849	a	
135-50	38850-38859	piecemeal	
135-51	38860-38867	fashion	
135-52	38867-38868	.	
135-53	38869-38874	Using	
135-54	38875-38880	patch	
135-55	38881-38883	in	
135-56	38884-38885	a	
135-57	38886-38903	read-modify-write	
135-58	38904-38909	cycle	

#Text=It can be a useful practice to start by retrieving a partial response with the data you want to modify. This is especially important for resources that use ETags, since you must provide the current ETag value in the If-Match HTTP header in order to update the resource successfully. After you get the data, you can then modify the values you want to change and send the modified partial representation back with a patch request. Here is an example that assumes the Demo resource uses ETags:
136-1	38910-38912	It	
136-2	38913-38916	can	
136-3	38917-38919	be	
136-4	38920-38921	a	
136-5	38922-38928	useful	
136-6	38929-38937	practice	
136-7	38938-38940	to	
136-8	38941-38946	start	
136-9	38947-38949	by	
136-10	38950-38960	retrieving	
136-11	38961-38962	a	
136-12	38963-38970	partial	
136-13	38971-38979	response	
136-14	38980-38984	with	
136-15	38985-38988	the	
136-16	38989-38993	data	
136-17	38994-38997	you	
136-18	38998-39002	want	
136-19	39003-39005	to	
136-20	39006-39012	modify	
136-21	39012-39013	.	
136-22	39014-39018	This	
136-23	39019-39021	is	
136-24	39022-39032	especially	
136-25	39033-39042	important	
136-26	39043-39046	for	
136-27	39047-39056	resources	
136-28	39057-39061	that	
136-29	39062-39065	use	
136-30	39066-39071	ETags	
136-31	39071-39072	,	
136-32	39073-39078	since	
136-33	39079-39082	you	
136-34	39083-39087	must	
136-35	39088-39095	provide	
136-36	39096-39099	the	
136-37	39100-39107	current	
136-38	39108-39112	ETag	
136-39	39113-39118	value	
136-40	39119-39121	in	
136-41	39122-39125	the	
136-42	39126-39134	If-Match	
136-43	39135-39139	HTTP	
136-44	39140-39146	header	
136-45	39147-39149	in	
136-46	39150-39155	order	
136-47	39156-39158	to	
136-48	39159-39165	update	
136-49	39166-39169	the	
136-50	39170-39178	resource	
136-51	39179-39191	successfully	
136-52	39191-39192	.	
136-53	39193-39198	After	
136-54	39199-39202	you	
136-55	39203-39206	get	
136-56	39207-39210	the	
136-57	39211-39215	data	
136-58	39215-39216	,	
136-59	39217-39220	you	
136-60	39221-39224	can	
136-61	39225-39229	then	
136-62	39230-39236	modify	
136-63	39237-39240	the	
136-64	39241-39247	values	
136-65	39248-39251	you	
136-66	39252-39256	want	
136-67	39257-39259	to	
136-68	39260-39266	change	
136-69	39267-39270	and	
136-70	39271-39275	send	
136-71	39276-39279	the	
136-72	39280-39288	modified	
136-73	39289-39296	partial	
136-74	39297-39311	representation	
136-75	39312-39316	back	
136-76	39317-39321	with	
136-77	39322-39323	a	
136-78	39324-39329	patch	
136-79	39330-39337	request	
136-80	39337-39338	.	
136-81	39339-39343	Here	
136-82	39344-39346	is	
136-83	39347-39349	an	
136-84	39350-39357	example	
136-85	39358-39362	that	
136-86	39363-39370	assumes	
136-87	39371-39374	the	
136-88	39375-39379	Demo	
136-89	39380-39388	resource	
136-90	39389-39393	uses	
136-91	39394-39399	ETags	
136-92	39399-39400	:	

#Text=GET https://www.googleapis.com/demo/v1/324?fields=etag,title,comment,characteristics Authorization: Bearer your_auth_token This is the partial response: 200 OK "etag": "ETagString" "title": "New title" "comment": "First comment.", "characteristics": {
137-1	39401-39404	GET	
137-2	39405-39410	https	
137-3	39410-39411	:	
137-4	39411-39412	/	
137-5	39412-39413	/	
137-6	39413-39431	www.googleapis.com	
137-7	39431-39432	/	
137-8	39432-39436	demo	
137-9	39436-39437	/	
137-10	39437-39439	v1	
137-11	39439-39440	/	
137-12	39440-39443	324	
137-13	39443-39444	?	
137-14	39444-39450	fields	
137-15	39450-39451	=	
137-16	39451-39455	etag	
137-17	39455-39456	,	
137-18	39456-39461	title	
137-19	39461-39462	,	
137-20	39462-39469	comment	
137-21	39469-39470	,	
137-22	39470-39485	characteristics	
137-23	39486-39499	Authorization	
137-24	39499-39500	:	
137-25	39501-39507	Bearer	
137-26	39508-39523	your_auth_token	
137-27	39524-39528	This	
137-28	39529-39531	is	
137-29	39532-39535	the	
137-30	39536-39543	partial	
137-31	39544-39552	response	
137-32	39552-39553	:	
137-33	39554-39557	200	
137-34	39558-39560	OK	
137-35	39561-39562	"	
137-36	39562-39566	etag	
137-37	39566-39567	"	
137-38	39567-39568	:	
137-39	39569-39570	"	
137-40	39570-39580	ETagString	
137-41	39580-39581	"	
137-42	39582-39583	"	
137-43	39583-39588	title	
137-44	39588-39589	"	
137-45	39589-39590	:	
137-46	39591-39592	"	
137-47	39592-39595	New	
137-48	39596-39601	title	
137-49	39601-39602	"	
137-50	39603-39604	"	
137-51	39604-39611	comment	
137-52	39611-39612	"	
137-53	39612-39613	:	
137-54	39614-39615	"	
137-55	39615-39620	First	
137-56	39621-39628	comment	
137-57	39628-39629	.	
137-58	39629-39630	"	
137-59	39630-39631	,	
137-60	39632-39633	"	
137-61	39633-39648	characteristics	
137-62	39648-39649	"	
137-63	39649-39650	:	
137-64	39651-39652	{	

#Text="length": "short", "level": "5", "followers": ["Jo", "Will"], The following patch request is based on that response. As shown below, it also uses the fields parameter to limit the data returned in the patch response:
138-1	39653-39654	"	
138-2	39654-39660	length	
138-3	39660-39661	"	
138-4	39661-39662	:	
138-5	39663-39664	"	
138-6	39664-39669	short	
138-7	39669-39670	"	
138-8	39670-39671	,	
138-9	39672-39673	"	
138-10	39673-39678	level	
138-11	39678-39679	"	
138-12	39679-39680	:	
138-13	39681-39682	"	
138-14	39682-39683	5	
138-15	39683-39684	"	
138-16	39684-39685	,	
138-17	39686-39687	"	
138-18	39687-39696	followers	
138-19	39696-39697	"	
138-20	39697-39698	:	
138-21	39699-39700	[	
138-22	39700-39701	"	
138-23	39701-39703	Jo	
138-24	39703-39704	"	
138-25	39704-39705	,	
138-26	39706-39707	"	
138-27	39707-39711	Will	
138-28	39711-39712	"	
138-29	39712-39713	]	
138-30	39713-39714	,	
138-31	39715-39718	The	
138-32	39719-39728	following	
138-33	39729-39734	patch	
138-34	39735-39742	request	
138-35	39743-39745	is	
138-36	39746-39751	based	
138-37	39752-39754	on	
138-38	39755-39759	that	
138-39	39760-39768	response	
138-40	39768-39769	.	
138-41	39770-39772	As	
138-42	39773-39778	shown	
138-43	39779-39784	below	
138-44	39784-39785	,	
138-45	39786-39788	it	
138-46	39789-39793	also	
138-47	39794-39798	uses	
138-48	39799-39802	the	
138-49	39803-39809	fields	
138-50	39810-39819	parameter	
138-51	39820-39822	to	
138-52	39823-39828	limit	
138-53	39829-39832	the	
138-54	39833-39837	data	
138-55	39838-39846	returned	
138-56	39847-39849	in	
138-57	39850-39853	the	
138-58	39854-39859	patch	
138-59	39860-39868	response	
138-60	39868-39869	:	

#Text=PATCH https://www.googleapis.com/demo/v1/324?fields=etag,title,comment,characteristics Authorization: Bearer your_auth_token Content-Type: application/json If-Match: "ETagString" "etag": "ETagString" "title": "",
139-1	39870-39875	PATCH	
139-2	39876-39881	https	
139-3	39881-39882	:	
139-4	39882-39883	/	
139-5	39883-39884	/	
139-6	39884-39902	www.googleapis.com	
139-7	39902-39903	/	
139-8	39903-39907	demo	
139-9	39907-39908	/	
139-10	39908-39910	v1	
139-11	39910-39911	/	
139-12	39911-39914	324	
139-13	39914-39915	?	
139-14	39915-39921	fields	
139-15	39921-39922	=	
139-16	39922-39926	etag	
139-17	39926-39927	,	
139-18	39927-39932	title	
139-19	39932-39933	,	
139-20	39933-39940	comment	
139-21	39940-39941	,	
139-22	39941-39956	characteristics	
139-23	39957-39970	Authorization	
139-24	39970-39971	:	
139-25	39972-39978	Bearer	
139-26	39979-39994	your_auth_token	
139-27	39995-40007	Content-Type	
139-28	40007-40008	:	
139-29	40009-40020	application	
139-30	40020-40021	/	
139-31	40021-40025	json	
139-32	40026-40034	If-Match	
139-33	40034-40035	:	
139-34	40036-40037	"	
139-35	40037-40047	ETagString	
139-36	40047-40048	"	
139-37	40049-40050	"	
139-38	40050-40054	etag	
139-39	40054-40055	"	
139-40	40055-40056	:	
139-41	40057-40058	"	
139-42	40058-40068	ETagString	
139-43	40068-40069	"	
139-44	40070-40071	"	
139-45	40071-40076	title	
139-46	40076-40077	"	
139-47	40077-40078	:	
139-48	40079-40080	"	
139-49	40080-40081	"	
139-50	40081-40082	,	

#Text=/* Clear the value of the title by setting it to the empty string. */ "comment": null, /* Delete the comment by replacing its value with null. */ "characteristics": { "length": "short", "level": "10", /* Modify the level value. */
140-1	40083-40084	/	
140-2	40084-40085	*	
140-3	40086-40091	Clear	
140-4	40092-40095	the	
140-5	40096-40101	value	
140-6	40102-40104	of	
140-7	40105-40108	the	
140-8	40109-40114	title	
140-9	40115-40117	by	
140-10	40118-40125	setting	
140-11	40126-40128	it	
140-12	40129-40131	to	
140-13	40132-40135	the	
140-14	40136-40141	empty	
140-15	40142-40148	string	
140-16	40148-40149	.	
140-17	40150-40151	*	
140-18	40151-40152	/	
140-19	40153-40154	"	
140-20	40154-40161	comment	
140-21	40161-40162	"	
140-22	40162-40163	:	
140-23	40164-40168	null	
140-24	40168-40169	,	
140-25	40170-40171	/	
140-26	40171-40172	*	
140-27	40173-40179	Delete	
140-28	40180-40183	the	
140-29	40184-40191	comment	
140-30	40192-40194	by	
140-31	40195-40204	replacing	
140-32	40205-40208	its	
140-33	40209-40214	value	
140-34	40215-40219	with	
140-35	40220-40224	null	
140-36	40224-40225	.	
140-37	40226-40227	*	
140-38	40227-40228	/	
140-39	40229-40230	"	
140-40	40230-40245	characteristics	
140-41	40245-40246	"	
140-42	40246-40247	:	
140-43	40248-40249	{	
140-44	40250-40251	"	
140-45	40251-40257	length	
140-46	40257-40258	"	
140-47	40258-40259	:	
140-48	40260-40261	"	
140-49	40261-40266	short	
140-50	40266-40267	"	
140-51	40267-40268	,	
140-52	40269-40270	"	
140-53	40270-40275	level	
140-54	40275-40276	"	
140-55	40276-40277	:	
140-56	40278-40279	"	
140-57	40279-40281	10	
140-58	40281-40282	"	
140-59	40282-40283	,	
140-60	40284-40285	/	
140-61	40285-40286	*	
140-62	40287-40293	Modify	
140-63	40294-40297	the	
140-64	40298-40303	level	
140-65	40304-40309	value	
140-66	40309-40310	.	
140-67	40311-40312	*	
140-68	40312-40313	/	

#Text="followers": ["Jo", "Liz"], /* Replace the followers array to delete Will and add Liz. */ "accuracy": "high" /* Add a new characteristic. */ The server responds with a 200 OK HTTP status code, and the partial representation of the updated resource: 200 OK "etag": "newETagString"
141-1	40314-40315	"	
141-2	40315-40324	followers	
141-3	40324-40325	"	
141-4	40325-40326	:	
141-5	40327-40328	[	
141-6	40328-40329	"	
141-7	40329-40331	Jo	
141-8	40331-40332	"	
141-9	40332-40333	,	
141-10	40334-40335	"	
141-11	40335-40338	Liz	
141-12	40338-40339	"	
141-13	40339-40340	]	
141-14	40340-40341	,	
141-15	40342-40343	/	
141-16	40343-40344	*	
141-17	40345-40352	Replace	
141-18	40353-40356	the	
141-19	40357-40366	followers	
141-20	40367-40372	array	
141-21	40373-40375	to	
141-22	40376-40382	delete	
141-23	40383-40387	Will	
141-24	40388-40391	and	
141-25	40392-40395	add	
141-26	40396-40399	Liz	
141-27	40399-40400	.	
141-28	40401-40402	*	
141-29	40402-40403	/	
141-30	40404-40405	"	
141-31	40405-40413	accuracy	
141-32	40413-40414	"	
141-33	40414-40415	:	
141-34	40416-40417	"	
141-35	40417-40421	high	
141-36	40421-40422	"	
141-37	40423-40424	/	
141-38	40424-40425	*	
141-39	40426-40429	Add	
141-40	40430-40431	a	
141-41	40432-40435	new	
141-42	40436-40450	characteristic	
141-43	40450-40451	.	
141-44	40452-40453	*	
141-45	40453-40454	/	
141-46	40455-40458	The	
141-47	40459-40465	server	
141-48	40466-40474	responds	
141-49	40475-40479	with	
141-50	40480-40481	a	
141-51	40482-40485	200	
141-52	40486-40488	OK	
141-53	40489-40493	HTTP	
141-54	40494-40500	status	
141-55	40501-40505	code	
141-56	40505-40506	,	
141-57	40507-40510	and	
141-58	40511-40514	the	
141-59	40515-40522	partial	
141-60	40523-40537	representation	
141-61	40538-40540	of	
141-62	40541-40544	the	
141-63	40545-40552	updated	
141-64	40553-40561	resource	
141-65	40561-40562	:	
141-66	40563-40566	200	
141-67	40567-40569	OK	
141-68	40570-40571	"	
141-69	40571-40575	etag	
141-70	40575-40576	"	
141-71	40576-40577	:	
141-72	40578-40579	"	
141-73	40579-40592	newETagString	
141-74	40592-40593	"	

#Text="title": "", /* Title is cleared; deleted comment field is missing. */ "characteristics": { "length": "short", "level": "10", /* Value is updated.*/
142-1	40594-40595	"	
142-2	40595-40600	title	
142-3	40600-40601	"	
142-4	40601-40602	:	
142-5	40603-40604	"	
142-6	40604-40605	"	
142-7	40605-40606	,	
142-8	40607-40608	/	
142-9	40608-40609	*	
142-10	40610-40615	Title	
142-11	40616-40618	is	
142-12	40619-40626	cleared	
142-13	40626-40627	;	
142-14	40628-40635	deleted	
142-15	40636-40643	comment	
142-16	40644-40649	field	
142-17	40650-40652	is	
142-18	40653-40660	missing	
142-19	40660-40661	.	
142-20	40662-40663	*	
142-21	40663-40664	/	
142-22	40665-40666	"	
142-23	40666-40681	characteristics	
142-24	40681-40682	"	
142-25	40682-40683	:	
142-26	40684-40685	{	
142-27	40686-40687	"	
142-28	40687-40693	length	
142-29	40693-40694	"	
142-30	40694-40695	:	
142-31	40696-40697	"	
142-32	40697-40702	short	
142-33	40702-40703	"	
142-34	40703-40704	,	
142-35	40705-40706	"	
142-36	40706-40711	level	
142-37	40711-40712	"	
142-38	40712-40713	:	
142-39	40714-40715	"	
142-40	40715-40717	10	
142-41	40717-40718	"	
142-42	40718-40719	,	
142-43	40720-40721	/	
142-44	40721-40722	*	
142-45	40723-40728	Value	
142-46	40729-40731	is	
142-47	40732-40739	updated	
142-48	40739-40740	.	
142-49	40740-40741	*	
142-50	40741-40742	/	

#Text="followers": ["Jo" "Liz"], /* New follower Liz is present; deleted Will is missing. */ "accuracy": "high" /* New characteristic is present. */ Constructing a patch request directly
143-1	40743-40744	"	
143-2	40744-40753	followers	
143-3	40753-40754	"	
143-4	40754-40755	:	
143-5	40756-40757	[	
143-6	40757-40758	"	
143-7	40758-40760	Jo	
143-8	40760-40761	"	
143-9	40762-40763	"	
143-10	40763-40766	Liz	
143-11	40766-40767	"	
143-12	40767-40768	]	
143-13	40768-40769	,	
143-14	40770-40771	/	
143-15	40771-40772	*	
143-16	40773-40776	New	
143-17	40777-40785	follower	
143-18	40786-40789	Liz	
143-19	40790-40792	is	
143-20	40793-40800	present	
143-21	40800-40801	;	
143-22	40802-40809	deleted	
143-23	40810-40814	Will	
143-24	40815-40817	is	
143-25	40818-40825	missing	
143-26	40825-40826	.	
143-27	40827-40828	*	
143-28	40828-40829	/	
143-29	40830-40831	"	
143-30	40831-40839	accuracy	
143-31	40839-40840	"	
143-32	40840-40841	:	
143-33	40842-40843	"	
143-34	40843-40847	high	
143-35	40847-40848	"	
143-36	40849-40850	/	
143-37	40850-40851	*	
143-38	40852-40855	New	
143-39	40856-40870	characteristic	
143-40	40871-40873	is	
143-41	40874-40881	present	
143-42	40881-40882	.	
143-43	40883-40884	*	
143-44	40884-40885	/	
143-45	40886-40898	Constructing	
143-46	40899-40900	a	
143-47	40901-40906	patch	
143-48	40907-40914	request	
143-49	40915-40923	directly	

#Text=For some patch requests, you need to base them on the data you previously retrieved. For example, if you want to add an item to an array and don't want to lose any of the existing array elements, you must get the existing data first. Similarly, if an API uses ETags, you need to send the previous ETag value with your request in order to update the resource successfully. Note: You can use an "If-Match: *" HTTP header to force a patch to go through when ETags are in use.  If you do this, you don't need to do the read before the write.
144-1	40924-40927	For	
144-2	40928-40932	some	
144-3	40933-40938	patch	
144-4	40939-40947	requests	
144-5	40947-40948	,	
144-6	40949-40952	you	
144-7	40953-40957	need	
144-8	40958-40960	to	
144-9	40961-40965	base	
144-10	40966-40970	them	
144-11	40971-40973	on	
144-12	40974-40977	the	
144-13	40978-40982	data	
144-14	40983-40986	you	
144-15	40987-40997	previously	
144-16	40998-41007	retrieved	
144-17	41007-41008	.	
144-18	41009-41012	For	
144-19	41013-41020	example	
144-20	41020-41021	,	
144-21	41022-41024	if	
144-22	41025-41028	you	
144-23	41029-41033	want	
144-24	41034-41036	to	
144-25	41037-41040	add	
144-26	41041-41043	an	
144-27	41044-41048	item	
144-28	41049-41051	to	
144-29	41052-41054	an	
144-30	41055-41060	array	
144-31	41061-41064	and	
144-32	41065-41070	don't	
144-33	41071-41075	want	
144-34	41076-41078	to	
144-35	41079-41083	lose	
144-36	41084-41087	any	
144-37	41088-41090	of	
144-38	41091-41094	the	
144-39	41095-41103	existing	
144-40	41104-41109	array	
144-41	41110-41118	elements	
144-42	41118-41119	,	
144-43	41120-41123	you	
144-44	41124-41128	must	
144-45	41129-41132	get	
144-46	41133-41136	the	
144-47	41137-41145	existing	
144-48	41146-41150	data	
144-49	41151-41156	first	
144-50	41156-41157	.	
144-51	41158-41167	Similarly	
144-52	41167-41168	,	
144-53	41169-41171	if	
144-54	41172-41174	an	
144-55	41175-41178	API	
144-56	41179-41183	uses	
144-57	41184-41189	ETags	
144-58	41189-41190	,	
144-59	41191-41194	you	
144-60	41195-41199	need	
144-61	41200-41202	to	
144-62	41203-41207	send	
144-63	41208-41211	the	
144-64	41212-41220	previous	
144-65	41221-41225	ETag	
144-66	41226-41231	value	
144-67	41232-41236	with	
144-68	41237-41241	your	
144-69	41242-41249	request	
144-70	41250-41252	in	
144-71	41253-41258	order	
144-72	41259-41261	to	
144-73	41262-41268	update	
144-74	41269-41272	the	
144-75	41273-41281	resource	
144-76	41282-41294	successfully	
144-77	41294-41295	.	
144-78	41296-41300	Note	
144-79	41300-41301	:	
144-80	41302-41305	You	
144-81	41306-41309	can	
144-82	41310-41313	use	
144-83	41314-41316	an	
144-84	41317-41318	"	
144-85	41318-41326	If-Match	
144-86	41326-41327	:	
144-87	41328-41329	*	
144-88	41329-41330	"	
144-89	41331-41335	HTTP	
144-90	41336-41342	header	
144-91	41343-41345	to	
144-92	41346-41351	force	
144-93	41352-41353	a	
144-94	41354-41359	patch	
144-95	41360-41362	to	
144-96	41363-41365	go	
144-97	41366-41373	through	
144-98	41374-41378	when	
144-99	41379-41384	ETags	
144-100	41385-41388	are	
144-101	41389-41391	in	
144-102	41392-41395	use	
144-103	41395-41396	.	
144-104	41397-41398	 	
144-105	41398-41400	If	
144-106	41401-41404	you	
144-107	41405-41407	do	
144-108	41408-41412	this	
144-109	41412-41413	,	
144-110	41414-41417	you	
144-111	41418-41423	don't	
144-112	41424-41428	need	
144-113	41429-41431	to	
144-114	41432-41434	do	
144-115	41435-41438	the	
144-116	41439-41443	read	
144-117	41444-41450	before	
144-118	41451-41454	the	
144-119	41455-41460	write	
144-120	41460-41461	.	

#Text=For other situations, however, you can construct the patch request directly, without first retrieving the existing data. For example, you can easily set up a patch request that updates a field to a new value or adds a new field. Here is an example: PATCH https://www.googleapis.com/demo/v1/324?fields=comment,characteristics Authorization: Bearer your_auth_token Content-Type: application/json "comment": "A new comment",
145-1	41462-41465	For	
145-2	41466-41471	other	
145-3	41472-41482	situations	
145-4	41482-41483	,	
145-5	41484-41491	however	
145-6	41491-41492	,	
145-7	41493-41496	you	
145-8	41497-41500	can	
145-9	41501-41510	construct	
145-10	41511-41514	the	
145-11	41515-41520	patch	
145-12	41521-41528	request	
145-13	41529-41537	directly	
145-14	41537-41538	,	
145-15	41539-41546	without	
145-16	41547-41552	first	
145-17	41553-41563	retrieving	
145-18	41564-41567	the	
145-19	41568-41576	existing	
145-20	41577-41581	data	
145-21	41581-41582	.	
145-22	41583-41586	For	
145-23	41587-41594	example	
145-24	41594-41595	,	
145-25	41596-41599	you	
145-26	41600-41603	can	
145-27	41604-41610	easily	
145-28	41611-41614	set	
145-29	41615-41617	up	
145-30	41618-41619	a	
145-31	41620-41625	patch	
145-32	41626-41633	request	
145-33	41634-41638	that	
145-34	41639-41646	updates	
145-35	41647-41648	a	
145-36	41649-41654	field	
145-37	41655-41657	to	
145-38	41658-41659	a	
145-39	41660-41663	new	
145-40	41664-41669	value	
145-41	41670-41672	or	
145-42	41673-41677	adds	
145-43	41678-41679	a	
145-44	41680-41683	new	
145-45	41684-41689	field	
145-46	41689-41690	.	
145-47	41691-41695	Here	
145-48	41696-41698	is	
145-49	41699-41701	an	
145-50	41702-41709	example	
145-51	41709-41710	:	
145-52	41711-41716	PATCH	
145-53	41717-41722	https	
145-54	41722-41723	:	
145-55	41723-41724	/	
145-56	41724-41725	/	
145-57	41725-41743	www.googleapis.com	
145-58	41743-41744	/	
145-59	41744-41748	demo	
145-60	41748-41749	/	
145-61	41749-41751	v1	
145-62	41751-41752	/	
145-63	41752-41755	324	
145-64	41755-41756	?	
145-65	41756-41762	fields	
145-66	41762-41763	=	
145-67	41763-41770	comment	
145-68	41770-41771	,	
145-69	41771-41786	characteristics	
145-70	41787-41800	Authorization	
145-71	41800-41801	:	
145-72	41802-41808	Bearer	
145-73	41809-41824	your_auth_token	
145-74	41825-41837	Content-Type	
145-75	41837-41838	:	
145-76	41839-41850	application	
145-77	41850-41851	/	
145-78	41851-41855	json	
145-79	41856-41857	"	
145-80	41857-41864	comment	
145-81	41864-41865	"	
145-82	41865-41866	:	
145-83	41867-41868	"	
145-84	41868-41869	A	
145-85	41870-41873	new	
145-86	41874-41881	comment	
145-87	41881-41882	"	
145-88	41882-41883	,	

#Text="characteristics": { "volume": "loud", "accuracy": null With this request, if the comment field has an existing value, the new value overwrites it; otherwise it is set to the new value. Similarly, if there was a volume characteristic, its value is overwritten; if not, it is created. The accuracy field, if set, is removed.
146-1	41884-41885	"	
146-2	41885-41900	characteristics	
146-3	41900-41901	"	
146-4	41901-41902	:	
146-5	41903-41904	{	
146-6	41905-41906	"	
146-7	41906-41912	volume	
146-8	41912-41913	"	
146-9	41913-41914	:	
146-10	41915-41916	"	
146-11	41916-41920	loud	
146-12	41920-41921	"	
146-13	41921-41922	,	
146-14	41923-41924	"	
146-15	41924-41932	accuracy	
146-16	41932-41933	"	
146-17	41933-41934	:	
146-18	41935-41939	null	
146-19	41940-41944	With	
146-20	41945-41949	this	
146-21	41950-41957	request	
146-22	41957-41958	,	
146-23	41959-41961	if	
146-24	41962-41965	the	
146-25	41966-41973	comment	
146-26	41974-41979	field	
146-27	41980-41983	has	
146-28	41984-41986	an	
146-29	41987-41995	existing	
146-30	41996-42001	value	
146-31	42001-42002	,	
146-32	42003-42006	the	
146-33	42007-42010	new	
146-34	42011-42016	value	
146-35	42017-42027	overwrites	
146-36	42028-42030	it	
146-37	42030-42031	;	
146-38	42032-42041	otherwise	
146-39	42042-42044	it	
146-40	42045-42047	is	
146-41	42048-42051	set	
146-42	42052-42054	to	
146-43	42055-42058	the	
146-44	42059-42062	new	
146-45	42063-42068	value	
146-46	42068-42069	.	
146-47	42070-42079	Similarly	
146-48	42079-42080	,	
146-49	42081-42083	if	
146-50	42084-42089	there	
146-51	42090-42093	was	
146-52	42094-42095	a	
146-53	42096-42102	volume	
146-54	42103-42117	characteristic	
146-55	42117-42118	,	
146-56	42119-42122	its	
146-57	42123-42128	value	
146-58	42129-42131	is	
146-59	42132-42143	overwritten	
146-60	42143-42144	;	
146-61	42145-42147	if	
146-62	42148-42151	not	
146-63	42151-42152	,	
146-64	42153-42155	it	
146-65	42156-42158	is	
146-66	42159-42166	created	
146-67	42166-42167	.	
146-68	42168-42171	The	
146-69	42172-42180	accuracy	
146-70	42181-42186	field	
146-71	42186-42187	,	
146-72	42188-42190	if	
146-73	42191-42194	set	
146-74	42194-42195	,	
146-75	42196-42198	is	
146-76	42199-42206	removed	
146-77	42206-42207	.	

#Text=Handling the response to a patch After processing a valid patch request, the API returns a 200 OK HTTP response code along with the complete representation of the modified resource. If ETags are used by the API, the server updates ETag values when it successfully processes a patch request, just as it does with PUT.
147-1	42208-42216	Handling	
147-2	42217-42220	the	
147-3	42221-42229	response	
147-4	42230-42232	to	
147-5	42233-42234	a	
147-6	42235-42240	patch	
147-7	42241-42246	After	
147-8	42247-42257	processing	
147-9	42258-42259	a	
147-10	42260-42265	valid	
147-11	42266-42271	patch	
147-12	42272-42279	request	
147-13	42279-42280	,	
147-14	42281-42284	the	
147-15	42285-42288	API	
147-16	42289-42296	returns	
147-17	42297-42298	a	
147-18	42298-42299	 	
147-19	42299-42302	200	
147-20	42303-42305	OK	
147-21	42305-42306	 	
147-22	42306-42310	HTTP	
147-23	42311-42319	response	
147-24	42320-42324	code	
147-25	42325-42330	along	
147-26	42331-42335	with	
147-27	42336-42339	the	
147-28	42340-42348	complete	
147-29	42349-42363	representation	
147-30	42364-42366	of	
147-31	42367-42370	the	
147-32	42371-42379	modified	
147-33	42380-42388	resource	
147-34	42388-42389	.	
147-35	42390-42392	If	
147-36	42393-42398	ETags	
147-37	42399-42402	are	
147-38	42403-42407	used	
147-39	42408-42410	by	
147-40	42411-42414	the	
147-41	42415-42418	API	
147-42	42418-42419	,	
147-43	42420-42423	the	
147-44	42424-42430	server	
147-45	42431-42438	updates	
147-46	42439-42443	ETag	
147-47	42444-42450	values	
147-48	42451-42455	when	
147-49	42456-42458	it	
147-50	42459-42471	successfully	
147-51	42472-42481	processes	
147-52	42482-42483	a	
147-53	42484-42489	patch	
147-54	42490-42497	request	
147-55	42497-42498	,	
147-56	42499-42503	just	
147-57	42504-42506	as	
147-58	42507-42509	it	
147-59	42510-42514	does	
147-60	42515-42519	with	
147-61	42519-42520	 	
147-62	42520-42523	PUT	
147-63	42523-42524	.	

#Text=The patch request returns the entire resource representation unless you use the fields parameter to reduce the amount of data it returns. If a patch request results in a new resource state that is syntactically or semantically invalid, the server returns a 400 Bad Request or 422 Unprocessable Entity HTTP status code, and the resource state remains unchanged. For example, if you attempt to delete the value for a required field, the server returns an error.
148-1	42525-42528	The	
148-2	42529-42534	patch	
148-3	42535-42542	request	
148-4	42543-42550	returns	
148-5	42551-42554	the	
148-6	42555-42561	entire	
148-7	42562-42570	resource	
148-8	42571-42585	representation	
148-9	42586-42592	unless	
148-10	42593-42596	you	
148-11	42597-42600	use	
148-12	42601-42604	the	
148-13	42605-42611	fields	
148-14	42612-42621	parameter	
148-15	42622-42624	to	
148-16	42625-42631	reduce	
148-17	42632-42635	the	
148-18	42636-42642	amount	
148-19	42643-42645	of	
148-20	42646-42650	data	
148-21	42651-42653	it	
148-22	42654-42661	returns	
148-23	42661-42662	.	
148-24	42663-42665	If	
148-25	42666-42667	a	
148-26	42667-42668	 	
148-27	42668-42673	patch	
148-28	42673-42674	 	
148-29	42674-42681	request	
148-30	42682-42689	results	
148-31	42690-42692	in	
148-32	42693-42694	a	
148-33	42695-42698	new	
148-34	42699-42707	resource	
148-35	42708-42713	state	
148-36	42714-42718	that	
148-37	42719-42721	is	
148-38	42722-42735	syntactically	
148-39	42736-42738	or	
148-40	42739-42751	semantically	
148-41	42752-42759	invalid	
148-42	42759-42760	,	
148-43	42761-42764	the	
148-44	42765-42771	server	
148-45	42772-42779	returns	
148-46	42780-42781	a	
148-47	42782-42785	400	
148-48	42786-42789	Bad	
148-49	42790-42797	Request	
148-50	42797-42798	 	
148-51	42798-42800	or	
148-52	42800-42801	 	
148-53	42801-42804	422	
148-54	42805-42818	Unprocessable	
148-55	42819-42825	Entity	
148-56	42825-42826	 	
148-57	42826-42830	HTTP	
148-58	42831-42837	status	
148-59	42838-42842	code	
148-60	42842-42843	,	
148-61	42844-42847	and	
148-62	42848-42851	the	
148-63	42852-42860	resource	
148-64	42861-42866	state	
148-65	42867-42874	remains	
148-66	42875-42884	unchanged	
148-67	42884-42885	.	
148-68	42886-42889	For	
148-69	42890-42897	example	
148-70	42897-42898	,	
148-71	42899-42901	if	
148-72	42902-42905	you	
148-73	42906-42913	attempt	
148-74	42914-42916	to	
148-75	42917-42923	delete	
148-76	42924-42927	the	
148-77	42928-42933	value	
148-78	42934-42937	for	
148-79	42938-42939	a	
148-80	42940-42948	required	
148-81	42949-42954	field	
148-82	42954-42955	,	
148-83	42956-42959	the	
148-84	42960-42966	server	
148-85	42967-42974	returns	
148-86	42975-42977	an	
148-87	42978-42983	error	
148-88	42983-42984	.	

#Text=Alternate notation when PATCH HTTP verb is not supported If your firewall does not allow HTTP PATCH requests, then do an HTTP POST request and set the override header to PATCH, as shown below: POST https://www.googleapis.com/...
149-1	42985-42994	Alternate	
149-2	42995-43003	notation	
149-3	43004-43008	when	
149-4	43009-43014	PATCH	
149-5	43015-43019	HTTP	
149-6	43020-43024	verb	
149-7	43025-43027	is	
149-8	43028-43031	not	
149-9	43032-43041	supported	
149-10	43042-43044	If	
149-11	43045-43049	your	
149-12	43050-43058	firewall	
149-13	43059-43063	does	
149-14	43064-43067	not	
149-15	43068-43073	allow	
149-16	43074-43078	HTTP	
149-17	43078-43079	 	
149-18	43079-43084	PATCH	
149-19	43085-43093	requests	
149-20	43093-43094	,	
149-21	43095-43099	then	
149-22	43100-43102	do	
149-23	43103-43105	an	
149-24	43106-43110	HTTP	
149-25	43110-43111	 	
149-26	43111-43115	POST	
149-27	43115-43116	 	
149-28	43116-43123	request	
149-29	43124-43127	and	
149-30	43128-43131	set	
149-31	43132-43135	the	
149-32	43136-43144	override	
149-33	43145-43151	header	
149-34	43152-43154	to	
149-35	43154-43155	 	
149-36	43155-43160	PATCH	
149-37	43160-43161	,	
149-38	43162-43164	as	
149-39	43165-43170	shown	
149-40	43171-43176	below	
149-41	43176-43177	:	
149-42	43178-43182	POST	
149-43	43183-43188	https	
149-44	43188-43189	:	
149-45	43189-43190	/	
149-46	43190-43191	/	
149-47	43191-43209	www.googleapis.com	
149-48	43209-43210	/	
149-49	43210-43211	.	
149-50	43211-43212	.	
149-51	43212-43213	.	

#Text=X-HTTP-Method-Override: PATCH ... Difference between patch and update
150-1	43214-43236	X-HTTP-Method-Override	
150-2	43236-43237	:	
150-3	43238-43243	PATCH	
150-4	43244-43245	.	
150-5	43245-43246	.	
150-6	43246-43247	.	
150-7	43248-43258	Difference	
150-8	43259-43266	between	
150-9	43267-43272	patch	
150-10	43273-43276	and	
150-11	43277-43283	update	

#Text=In practice, when you send data for an update request that uses the HTTP PUT verb, you only need to send those fields which are either required or optional; if you send values for fields that are set by the server, they are ignored. Although this might seem like another way to do a partial update, this approach has some limitations. With updates that use the HTTP PUT verb, the request fails if you don't supply required parameters, and it clears previously set data if you don't supply optional parameters. It's much safer to use patch for this reason. You only supply data for the fields you want to change; fields that you omit are not cleared. The only exception to this rule occurs with repeating elements or arrays: If you omit all of them, they stay just as they are; if you provide any of them, the whole set is replaced with the set that you provide.
151-1	43284-43286	In	
151-2	43287-43295	practice	
151-3	43295-43296	,	
151-4	43297-43301	when	
151-5	43302-43305	you	
151-6	43306-43310	send	
151-7	43311-43315	data	
151-8	43316-43319	for	
151-9	43320-43322	an	
151-10	43323-43329	update	
151-11	43330-43337	request	
151-12	43338-43342	that	
151-13	43343-43347	uses	
151-14	43348-43351	the	
151-15	43352-43356	HTTP	
151-16	43357-43360	PUT	
151-17	43361-43365	verb	
151-18	43365-43366	,	
151-19	43367-43370	you	
151-20	43371-43375	only	
151-21	43376-43380	need	
151-22	43381-43383	to	
151-23	43384-43388	send	
151-24	43389-43394	those	
151-25	43395-43401	fields	
151-26	43402-43407	which	
151-27	43408-43411	are	
151-28	43412-43418	either	
151-29	43419-43427	required	
151-30	43428-43430	or	
151-31	43431-43439	optional	
151-32	43439-43440	;	
151-33	43441-43443	if	
151-34	43444-43447	you	
151-35	43448-43452	send	
151-36	43453-43459	values	
151-37	43460-43463	for	
151-38	43464-43470	fields	
151-39	43471-43475	that	
151-40	43476-43479	are	
151-41	43480-43483	set	
151-42	43484-43486	by	
151-43	43487-43490	the	
151-44	43491-43497	server	
151-45	43497-43498	,	
151-46	43499-43503	they	
151-47	43504-43507	are	
151-48	43508-43515	ignored	
151-49	43515-43516	.	
151-50	43517-43525	Although	
151-51	43526-43530	this	
151-52	43531-43536	might	
151-53	43537-43541	seem	
151-54	43542-43546	like	
151-55	43547-43554	another	
151-56	43555-43558	way	
151-57	43559-43561	to	
151-58	43562-43564	do	
151-59	43565-43566	a	
151-60	43567-43574	partial	
151-61	43575-43581	update	
151-62	43581-43582	,	
151-63	43583-43587	this	
151-64	43588-43596	approach	
151-65	43597-43600	has	
151-66	43601-43605	some	
151-67	43606-43617	limitations	
151-68	43617-43618	.	
151-69	43619-43623	With	
151-70	43624-43631	updates	
151-71	43632-43636	that	
151-72	43637-43640	use	
151-73	43641-43644	the	
151-74	43645-43649	HTTP	
151-75	43650-43653	PUT	
151-76	43654-43658	verb	
151-77	43658-43659	,	
151-78	43660-43663	the	
151-79	43664-43671	request	
151-80	43672-43677	fails	
151-81	43678-43680	if	
151-82	43681-43684	you	
151-83	43685-43690	don't	
151-84	43691-43697	supply	
151-85	43698-43706	required	
151-86	43707-43717	parameters	
151-87	43717-43718	,	
151-88	43719-43722	and	
151-89	43723-43725	it	
151-90	43726-43732	clears	
151-91	43733-43743	previously	
151-92	43744-43747	set	
151-93	43748-43752	data	
151-94	43753-43755	if	
151-95	43756-43759	you	
151-96	43760-43765	don't	
151-97	43766-43772	supply	
151-98	43773-43781	optional	
151-99	43782-43792	parameters	
151-100	43792-43793	.	
151-101	43794-43798	It's	
151-102	43799-43803	much	
151-103	43804-43809	safer	
151-104	43810-43812	to	
151-105	43813-43816	use	
151-106	43817-43822	patch	
151-107	43823-43826	for	
151-108	43827-43831	this	
151-109	43832-43838	reason	
151-110	43838-43839	.	
151-111	43840-43843	You	
151-112	43844-43848	only	
151-113	43849-43855	supply	
151-114	43856-43860	data	
151-115	43861-43864	for	
151-116	43865-43868	the	
151-117	43869-43875	fields	
151-118	43876-43879	you	
151-119	43880-43884	want	
151-120	43885-43887	to	
151-121	43888-43894	change	
151-122	43894-43895	;	
151-123	43896-43902	fields	
151-124	43903-43907	that	
151-125	43908-43911	you	
151-126	43912-43916	omit	
151-127	43917-43920	are	
151-128	43921-43924	not	
151-129	43925-43932	cleared	
151-130	43932-43933	.	
151-131	43934-43937	The	
151-132	43938-43942	only	
151-133	43943-43952	exception	
151-134	43953-43955	to	
151-135	43956-43960	this	
151-136	43961-43965	rule	
151-137	43966-43972	occurs	
151-138	43973-43977	with	
151-139	43978-43987	repeating	
151-140	43988-43996	elements	
151-141	43997-43999	or	
151-142	44000-44006	arrays	
151-143	44006-44007	:	
151-144	44008-44010	If	
151-145	44011-44014	you	
151-146	44015-44019	omit	
151-147	44020-44023	all	
151-148	44024-44026	of	
151-149	44027-44031	them	
151-150	44031-44032	,	
151-151	44033-44037	they	
151-152	44038-44042	stay	
151-153	44043-44047	just	
151-154	44048-44050	as	
151-155	44051-44055	they	
151-156	44056-44059	are	
151-157	44059-44060	;	
151-158	44061-44063	if	
151-159	44064-44067	you	
151-160	44068-44075	provide	
151-161	44076-44079	any	
151-162	44080-44082	of	
151-163	44083-44087	them	
151-164	44087-44088	,	
151-165	44089-44092	the	
151-166	44093-44098	whole	
151-167	44099-44102	set	
151-168	44103-44105	is	
151-169	44106-44114	replaced	
151-170	44115-44119	with	
151-171	44120-44123	the	
151-172	44124-44127	set	
151-173	44128-44132	that	
151-174	44133-44136	you	
151-175	44137-44144	provide	
151-176	44144-44145	.	

#Text=Send feedback Except as otherwise noted, the content of this page is licensed under the Creative Commons Attribution 4.0 License, and code samples are licensed under the Apache 2.0 License. For details, see the Google Developers Site Policies. Java is a registered trademark of Oracle and/or its affiliates.
152-1	44146-44150	Send	
152-2	44151-44159	feedback	
152-3	44160-44166	Except	
152-4	44167-44169	as	
152-5	44170-44179	otherwise	
152-6	44180-44185	noted	
152-7	44185-44186	,	
152-8	44187-44190	the	
152-9	44191-44198	content	
152-10	44199-44201	of	
152-11	44202-44206	this	
152-12	44207-44211	page	
152-13	44212-44214	is	
152-14	44215-44223	licensed	
152-15	44224-44229	under	
152-16	44230-44233	the	
152-17	44234-44242	Creative	
152-18	44243-44250	Commons	
152-19	44251-44262	Attribution	
152-20	44263-44266	4.0	
152-21	44267-44274	License	
152-22	44274-44275	,	
152-23	44276-44279	and	
152-24	44280-44284	code	
152-25	44285-44292	samples	
152-26	44293-44296	are	
152-27	44297-44305	licensed	
152-28	44306-44311	under	
152-29	44312-44315	the	
152-30	44316-44322	Apache	
152-31	44323-44326	2.0	
152-32	44327-44334	License	
152-33	44334-44335	.	
152-34	44336-44339	For	
152-35	44340-44347	details	
152-36	44347-44348	,	
152-37	44349-44352	see	
152-38	44353-44356	the	
152-39	44357-44363	Google	
152-40	44364-44374	Developers	
152-41	44375-44379	Site	
152-42	44380-44388	Policies	
152-43	44388-44389	.	
152-44	44390-44394	Java	
152-45	44395-44397	is	
152-46	44398-44399	a	
152-47	44400-44410	registered	
152-48	44411-44420	trademark	
152-49	44421-44423	of	
152-50	44424-44430	Oracle	
152-51	44431-44434	and	
152-52	44434-44435	/	
152-53	44435-44437	or	
152-54	44438-44441	its	
152-55	44442-44452	affiliates	
152-56	44452-44453	.	

#Text=Last updated 2020-11-16 UTC. Why Google Choosing Google Cloud Trust and security Open cloud Global infrastructure Customers and case studies Analyst reports Whitepapers Products and pricing Google Cloud pricing Google Workspace pricing Maps Platform pricing
153-1	44454-44458	Last	
153-2	44459-44466	updated	
153-3	44467-44471	2020	
153-4	44471-44472	-	
153-5	44472-44474	11	
153-6	44474-44475	-	
153-7	44475-44477	16	
153-8	44478-44481	UTC	
153-9	44481-44482	.	
153-10	44483-44486	Why	
153-11	44487-44493	Google	
153-12	44494-44502	Choosing	
153-13	44503-44509	Google	
153-14	44510-44515	Cloud	
153-15	44516-44521	Trust	
153-16	44522-44525	and	
153-17	44526-44534	security	
153-18	44535-44539	Open	
153-19	44540-44545	cloud	
153-20	44546-44552	Global	
153-21	44553-44567	infrastructure	
153-22	44568-44577	Customers	
153-23	44578-44581	and	
153-24	44582-44586	case	
153-25	44587-44594	studies	
153-26	44595-44602	Analyst	
153-27	44603-44610	reports	
153-28	44611-44622	Whitepapers	
153-29	44623-44631	Products	
153-30	44632-44635	and	
153-31	44636-44643	pricing	
153-32	44644-44650	Google	
153-33	44651-44656	Cloud	
153-34	44657-44664	pricing	
153-35	44665-44671	Google	
153-36	44672-44681	Workspace	
153-37	44682-44689	pricing	
153-38	44690-44694	Maps	
153-39	44695-44703	Platform	
153-40	44704-44711	pricing	

#Text=See all products Solutions Application modernization Artificial Intelligence Business application platform Database solutions Infrastructure modernization Productivity & collaboration Security Smart analytics DevOps Industries Small business See all solutions Resources Google Cloud documentation
154-1	44712-44715	See	
154-2	44716-44719	all	
154-3	44720-44728	products	
154-4	44729-44738	Solutions	
154-5	44739-44750	Application	
154-6	44751-44764	modernization	
154-7	44765-44775	Artificial	
154-8	44776-44788	Intelligence	
154-9	44789-44797	Business	
154-10	44798-44809	application	
154-11	44810-44818	platform	
154-12	44819-44827	Database	
154-13	44828-44837	solutions	
154-14	44838-44852	Infrastructure	
154-15	44853-44866	modernization	
154-16	44867-44879	Productivity	
154-17	44880-44881	&	
154-18	44882-44895	collaboration	
154-19	44896-44904	Security	
154-20	44905-44910	Smart	
154-21	44911-44920	analytics	
154-22	44921-44927	DevOps	
154-23	44928-44938	Industries	
154-24	44939-44944	Small	
154-25	44945-44953	business	
154-26	44954-44957	See	
154-27	44958-44961	all	
154-28	44962-44971	solutions	
154-29	44972-44981	Resources	
154-30	44982-44988	Google	
154-31	44989-44994	Cloud	
154-32	44995-45008	documentation	

#Text=Google Cloud quickstarts Google Cloud Marketplace Google Workspace Marketplace Support Code samples Tutorials Training Certifications Google Developers Google Cloud for Startups System status Release Notes Engage Contact sales
155-1	45009-45015	Google	
155-2	45016-45021	Cloud	
155-3	45022-45033	quickstarts	
155-4	45034-45040	Google	
155-5	45041-45046	Cloud	
155-6	45047-45058	Marketplace	
155-7	45059-45065	Google	
155-8	45066-45075	Workspace	
155-9	45076-45087	Marketplace	
155-10	45088-45095	Support	
155-11	45096-45100	Code	
155-12	45101-45108	samples	
155-13	45109-45118	Tutorials	
155-14	45119-45127	Training	
155-15	45128-45142	Certifications	
155-16	45143-45149	Google	
155-17	45150-45160	Developers	
155-18	45161-45167	Google	
155-19	45168-45173	Cloud	
155-20	45174-45177	for	
155-21	45178-45186	Startups	
155-22	45187-45193	System	
155-23	45194-45200	status	
155-24	45201-45208	Release	
155-25	45209-45214	Notes	
155-26	45215-45221	Engage	
155-27	45222-45229	Contact	
155-28	45230-45235	sales	

#Text=Find a Partner Become a Partner Blog Events Podcast Community Press center Google Cloud on YouTube Google Cloud Platform on YouTube Google Workspace on YouTube Follow on Twitter Join User Research We're hiring. Join Google Cloud!
156-1	45236-45240	Find	
156-2	45241-45242	a	
156-3	45243-45250	Partner	
156-4	45251-45257	Become	
156-5	45258-45259	a	
156-6	45260-45267	Partner	
156-7	45268-45272	Blog	
156-8	45273-45279	Events	
156-9	45280-45287	Podcast	
156-10	45288-45297	Community	
156-11	45298-45303	Press	
156-12	45304-45310	center	
156-13	45311-45317	Google	
156-14	45318-45323	Cloud	
156-15	45324-45326	on	
156-16	45327-45334	YouTube	
156-17	45335-45341	Google	
156-18	45342-45347	Cloud	
156-19	45348-45356	Platform	
156-20	45357-45359	on	
156-21	45360-45367	YouTube	
156-22	45368-45374	Google	
156-23	45375-45384	Workspace	
156-24	45385-45387	on	
156-25	45388-45395	YouTube	
156-26	45396-45402	Follow	
156-27	45403-45405	on	
156-28	45406-45413	Twitter	
156-29	45414-45418	Join	
156-30	45419-45423	User	
156-31	45424-45432	Research	
156-32	45433-45438	We're	
156-33	45439-45445	hiring	
156-34	45445-45446	.	
156-35	45447-45451	Join	
156-36	45452-45458	Google	
156-37	45459-45464	Cloud	
156-38	45464-45465	!	

#Text=About Google Privacy Site terms Google Cloud terms Carbon neutral since 2007 Sign up for the Google Cloud newsletter Subscribe Language English Deutsch Español – América Latina Français
157-1	45466-45471	About	
157-2	45472-45478	Google	
157-3	45479-45486	Privacy	
157-4	45487-45491	Site	
157-5	45492-45497	terms	
157-6	45498-45504	Google	
157-7	45505-45510	Cloud	
157-8	45511-45516	terms	
157-9	45517-45523	Carbon	
157-10	45524-45531	neutral	
157-11	45532-45537	since	
157-12	45538-45542	2007	
157-13	45543-45547	Sign	
157-14	45548-45550	up	
157-15	45551-45554	for	
157-16	45555-45558	the	
157-17	45559-45565	Google	
157-18	45566-45571	Cloud	
157-19	45572-45582	newsletter	
157-20	45583-45592	Subscribe	
157-21	45593-45601	Language	
157-22	45602-45609	English	
157-23	45610-45617	Deutsch	
157-24	45618-45625	Español	
157-25	45626-45627	–	
157-26	45628-45635	América	
157-27	45636-45642	Latina	
157-28	45643-45651	Français	
