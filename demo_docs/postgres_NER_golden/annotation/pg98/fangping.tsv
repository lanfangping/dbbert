#FORMAT=WebAnno TSV 3.3


#Text=Server tuning — Nextcloud latest Administration Manual latest documentation Introduction Release notes Maintenance and release schedule Installation and server configuration System requirements Deployment recommendations Installation on Linux Installation wizard Installing from command line
1-1	0-6	Server	
1-2	7-13	tuning	
1-3	14-15	—	
1-4	16-25	Nextcloud	
1-5	26-32	latest	
1-6	33-47	Administration	
1-7	48-54	Manual	
1-8	55-61	latest	
1-9	62-75	documentation	
1-10	76-88	Introduction	
1-11	89-96	Release	
1-12	97-102	notes	
1-13	103-114	Maintenance	
1-14	115-118	and	
1-15	119-126	release	
1-16	127-135	schedule	
1-17	136-148	Installation	
1-18	149-152	and	
1-19	153-159	server	
1-20	160-173	configuration	
1-21	174-180	System	
1-22	181-193	requirements	
1-23	194-204	Deployment	
1-24	205-220	recommendations	
1-25	221-233	Installation	
1-26	234-236	on	
1-27	237-242	Linux	
1-28	243-255	Installation	
1-29	256-262	wizard	
1-30	263-273	Installing	
1-31	274-278	from	
1-32	279-286	command	
1-33	287-291	line	

#Text=Supported apps SELinux configuration Nginx configuration Hardening and security guidance Server tuning Using cron to perform background jobs Reducing system load Caching Using MariaDB/MySQL instead of SQLite
2-1	292-301	Supported	
2-2	302-306	apps	
2-3	307-314	SELinux	
2-4	315-328	configuration	
2-5	329-334	Nginx	
2-6	335-348	configuration	
2-7	349-358	Hardening	
2-8	359-362	and	
2-9	363-371	security	
2-10	372-380	guidance	
2-11	381-387	Server	
2-12	388-394	tuning	
2-13	395-400	Using	
2-14	401-405	cron	
2-15	406-408	to	
2-16	409-416	perform	
2-17	417-427	background	
2-18	428-432	jobs	
2-19	433-441	Reducing	
2-20	442-448	system	
2-21	449-453	load	
2-22	454-461	Caching	
2-23	462-467	Using	
2-24	468-475	MariaDB	
2-25	475-476	/	
2-26	476-481	MySQL	
2-27	482-489	instead	
2-28	490-492	of	
2-29	493-499	SQLite	

#Text=Using Redis-based transactional file locking TLS / encryption app Enable HTTP/2 for faster loading Tune PHP-FPM Enable PHP OPcache Example installation on Ubuntu 20.04 LTS Example installation on CentOS 8
3-1	500-505	Using	
3-2	506-517	Redis-based	
3-3	518-531	transactional	
3-4	532-536	file	
3-5	537-544	locking	
3-6	545-548	TLS	
3-7	549-550	/	
3-8	551-561	encryption	
3-9	562-565	app	
3-10	566-572	Enable	
3-11	573-577	HTTP	
3-12	577-578	/	
3-13	578-579	2	
3-14	580-583	for	
3-15	584-590	faster	
3-16	591-598	loading	
3-17	599-603	Tune	
3-18	604-611	PHP-FPM	
3-19	612-618	Enable	
3-20	619-622	PHP	
3-21	623-630	OPcache	
3-22	631-638	Example	
3-23	639-651	installation	
3-24	652-654	on	
3-25	655-661	Ubuntu	
3-26	662-667	20.04	
3-27	668-671	LTS	
3-28	672-679	Example	
3-29	680-692	installation	
3-30	693-695	on	
3-31	696-702	CentOS	
3-32	703-704	8	

#Text=Example installation on OpenBSD Nextcloud configuration Apps management User management File sharing and management File workflows Groupware Database configuration Mimetypes management Maintenance Issues and troubleshooting GDPR Nextcloud latest Administration Manual
4-1	705-712	Example	
4-2	713-725	installation	
4-3	726-728	on	
4-4	729-736	OpenBSD	
4-5	737-746	Nextcloud	
4-6	747-760	configuration	
4-7	761-765	Apps	
4-8	766-776	management	
4-9	777-781	User	
4-10	782-792	management	
4-11	793-797	File	
4-12	798-805	sharing	
4-13	806-809	and	
4-14	810-820	management	
4-15	821-825	File	
4-16	826-835	workflows	
4-17	836-845	Groupware	
4-18	846-854	Database	
4-19	855-868	configuration	
4-20	869-878	Mimetypes	
4-21	879-889	management	
4-22	890-901	Maintenance	
4-23	902-908	Issues	
4-24	909-912	and	
4-25	913-928	troubleshooting	
4-26	929-933	GDPR	
4-27	934-943	Nextcloud	
4-28	944-950	latest	
4-29	951-965	Administration	
4-30	966-972	Manual	

#Text=Installation and server configuration » Server tuning Edit on GitHub Server tuning¶ Using cron to perform background jobs¶ See Background jobs for a description and the benefits. Reducing system load¶ High system load will slow down Nextcloud and might also lead to other unwanted
5-1	973-985	Installation	
5-2	986-989	and	
5-3	990-996	server	
5-4	997-1010	configuration	
5-5	1011-1012	»	
5-6	1013-1019	Server	
5-7	1020-1026	tuning	
5-8	1027-1031	Edit	
5-9	1032-1034	on	
5-10	1035-1041	GitHub	
5-11	1042-1048	Server	
5-12	1049-1055	tuning	
5-13	1055-1056	¶	
5-14	1057-1062	Using	
5-15	1063-1067	cron	
5-16	1068-1070	to	
5-17	1071-1078	perform	
5-18	1079-1089	background	
5-19	1090-1094	jobs	
5-20	1094-1095	¶	
5-21	1096-1099	See	
5-22	1100-1110	Background	
5-23	1111-1115	jobs	
5-24	1116-1119	for	
5-25	1120-1121	a	
5-26	1122-1133	description	
5-27	1134-1137	and	
5-28	1138-1141	the	
5-29	1142-1150	benefits	
5-30	1150-1151	.	
5-31	1152-1160	Reducing	
5-32	1161-1167	system	
5-33	1168-1172	load	
5-34	1172-1173	¶	
5-35	1174-1178	High	
5-36	1179-1185	system	
5-37	1186-1190	load	
5-38	1191-1195	will	
5-39	1196-1200	slow	
5-40	1201-1205	down	
5-41	1206-1215	Nextcloud	
5-42	1216-1219	and	
5-43	1220-1225	might	
5-44	1226-1230	also	
5-45	1231-1235	lead	
5-46	1236-1238	to	
5-47	1239-1244	other	
5-48	1245-1253	unwanted	

#Text=side effects. To reduce load you should first identify the source of the problem. Tools such as htop, iotop, netdata or glances will help to identify the process or the drive that slows down your system. First you should make sure that you installed/assigned enough RAM. Swap usage should be
6-1	1254-1258	side	
6-2	1259-1266	effects	
6-3	1266-1267	.	
6-4	1268-1270	To	
6-5	1271-1277	reduce	
6-6	1278-1282	load	
6-7	1283-1286	you	
6-8	1287-1293	should	
6-9	1294-1299	first	
6-10	1300-1308	identify	
6-11	1309-1312	the	
6-12	1313-1319	source	
6-13	1320-1322	of	
6-14	1323-1326	the	
6-15	1327-1334	problem	
6-16	1334-1335	.	
6-17	1336-1341	Tools	
6-18	1342-1346	such	
6-19	1347-1349	as	
6-20	1350-1354	htop	
6-21	1354-1355	,	
6-22	1356-1361	iotop	
6-23	1361-1362	,	
6-24	1363-1370	netdata	
6-25	1371-1373	or	
6-26	1374-1381	glances	
6-27	1382-1386	will	
6-28	1387-1391	help	
6-29	1392-1394	to	
6-30	1395-1403	identify	
6-31	1404-1407	the	
6-32	1408-1415	process	
6-33	1416-1418	or	
6-34	1419-1422	the	
6-35	1423-1428	drive	
6-36	1429-1433	that	
6-37	1434-1439	slows	
6-38	1440-1444	down	
6-39	1445-1449	your	
6-40	1450-1456	system	
6-41	1456-1457	.	
6-42	1458-1463	First	
6-43	1464-1467	you	
6-44	1468-1474	should	
6-45	1475-1479	make	
6-46	1480-1484	sure	
6-47	1485-1489	that	
6-48	1490-1493	you	
6-49	1494-1503	installed	
6-50	1503-1504	/	
6-51	1504-1512	assigned	
6-52	1513-1519	enough	
6-53	1520-1523	RAM	
6-54	1523-1524	.	
6-55	1525-1529	Swap	
6-56	1530-1535	usage	
6-57	1536-1542	should	
6-58	1543-1545	be	

#Text=prevented by all means. If you run your database inside a VM, you should not store it inside a VM image file. Better put it on a dedicated block device to reduce latency due to multiple abstraction layers. Caching¶ Caching improves performance by storing data, code, and other objects in memory.
7-1	1546-1555	prevented	
7-2	1556-1558	by	
7-3	1559-1562	all	
7-4	1563-1568	means	
7-5	1568-1569	.	
7-6	1570-1572	If	
7-7	1573-1576	you	
7-8	1577-1580	run	
7-9	1581-1585	your	
7-10	1586-1594	database	
7-11	1595-1601	inside	
7-12	1602-1603	a	
7-13	1604-1606	VM	
7-14	1606-1607	,	
7-15	1608-1611	you	
7-16	1612-1618	should	
7-17	1619-1622	not	
7-18	1623-1628	store	
7-19	1629-1631	it	
7-20	1632-1638	inside	
7-21	1639-1640	a	
7-22	1641-1643	VM	
7-23	1644-1649	image	
7-24	1650-1654	file	
7-25	1654-1655	.	
7-26	1656-1662	Better	
7-27	1663-1666	put	
7-28	1667-1669	it	
7-29	1670-1672	on	
7-30	1673-1674	a	
7-31	1675-1684	dedicated	
7-32	1685-1690	block	
7-33	1691-1697	device	
7-34	1698-1700	to	
7-35	1701-1707	reduce	
7-36	1708-1715	latency	
7-37	1716-1719	due	
7-38	1720-1722	to	
7-39	1723-1731	multiple	
7-40	1732-1743	abstraction	
7-41	1744-1750	layers	
7-42	1750-1751	.	
7-43	1752-1759	Caching	
7-44	1759-1760	¶	
7-45	1761-1768	Caching	
7-46	1769-1777	improves	
7-47	1778-1789	performance	
7-48	1790-1792	by	
7-49	1793-1800	storing	
7-50	1801-1805	data	
7-51	1805-1806	,	
7-52	1807-1811	code	
7-53	1811-1812	,	
7-54	1813-1816	and	
7-55	1817-1822	other	
7-56	1823-1830	objects	
7-57	1831-1833	in	
7-58	1834-1840	memory	
7-59	1840-1841	.	

#Text=Memory cache configuration for the Nextcloud server must be installed and configured. See Memory caching. Using MariaDB/MySQL instead of SQLite¶ MySQL or MariaDB are preferred because of the performance limitations of SQLite with highly concurrent applications, like Nextcloud. See the section Database configuration for how to
8-1	1842-1848	Memory	
8-2	1849-1854	cache	
8-3	1855-1868	configuration	
8-4	1869-1872	for	
8-5	1873-1876	the	
8-6	1877-1886	Nextcloud	
8-7	1887-1893	server	
8-8	1894-1898	must	
8-9	1899-1901	be	
8-10	1902-1911	installed	
8-11	1912-1915	and	
8-12	1916-1926	configured	
8-13	1926-1927	.	
8-14	1928-1931	See	
8-15	1932-1938	Memory	
8-16	1939-1946	caching	
8-17	1946-1947	.	
8-18	1948-1953	Using	
8-19	1954-1961	MariaDB	
8-20	1961-1962	/	
8-21	1962-1967	MySQL	
8-22	1968-1975	instead	
8-23	1976-1978	of	
8-24	1979-1985	SQLite	
8-25	1985-1986	¶	
8-26	1987-1992	MySQL	
8-27	1993-1995	or	
8-28	1996-2003	MariaDB	
8-29	2004-2007	are	
8-30	2008-2017	preferred	
8-31	2018-2025	because	
8-32	2026-2028	of	
8-33	2029-2032	the	
8-34	2033-2044	performance	
8-35	2045-2056	limitations	
8-36	2057-2059	of	
8-37	2060-2066	SQLite	
8-38	2067-2071	with	
8-39	2072-2078	highly	
8-40	2079-2089	concurrent	
8-41	2090-2102	applications	
8-42	2102-2103	,	
8-43	2104-2108	like	
8-44	2109-2118	Nextcloud	
8-45	2118-2119	.	
8-46	2120-2123	See	
8-47	2124-2127	the	
8-48	2128-2135	section	
8-49	2136-2144	Database	
8-50	2145-2158	configuration	
8-51	2159-2162	for	
8-52	2163-2166	how	
8-53	2167-2169	to	

#Text=configure Nextcloud for MySQL or MariaDB. If your installation is already running on SQLite then it is possible to convert to MySQL or MariaDB using the steps provided in Converting database type. For more details and help tuning your database, check this article at MariaDB. Using Redis-based transactional file locking¶
9-1	2170-2179	configure	
9-2	2180-2189	Nextcloud	
9-3	2190-2193	for	
9-4	2194-2199	MySQL	
9-5	2200-2202	or	
9-6	2203-2210	MariaDB	
9-7	2210-2211	.	
9-8	2212-2214	If	
9-9	2215-2219	your	
9-10	2220-2232	installation	
9-11	2233-2235	is	
9-12	2236-2243	already	
9-13	2244-2251	running	
9-14	2252-2254	on	
9-15	2255-2261	SQLite	
9-16	2262-2266	then	
9-17	2267-2269	it	
9-18	2270-2272	is	
9-19	2273-2281	possible	
9-20	2282-2284	to	
9-21	2285-2292	convert	
9-22	2293-2295	to	
9-23	2296-2301	MySQL	
9-24	2302-2304	or	
9-25	2305-2312	MariaDB	
9-26	2313-2318	using	
9-27	2319-2322	the	
9-28	2323-2328	steps	
9-29	2329-2337	provided	
9-30	2338-2340	in	
9-31	2341-2351	Converting	
9-32	2352-2360	database	
9-33	2361-2365	type	
9-34	2365-2366	.	
9-35	2367-2370	For	
9-36	2371-2375	more	
9-37	2376-2383	details	
9-38	2384-2387	and	
9-39	2388-2392	help	
9-40	2393-2399	tuning	
9-41	2400-2404	your	
9-42	2405-2413	database	
9-43	2413-2414	,	
9-44	2415-2420	check	
9-45	2421-2425	this	
9-46	2426-2433	article	
9-47	2434-2436	at	
9-48	2437-2444	MariaDB	
9-49	2444-2445	.	
9-50	2446-2451	Using	
9-51	2452-2463	Redis-based	
9-52	2464-2477	transactional	
9-53	2478-2482	file	
9-54	2483-2490	locking	
9-55	2490-2491	¶	

#Text=File locking is enabled by default, using the database locking backend. This places a significant load on your database. See the section Transactional file locking for how to configure Nextcloud to use Redis-based Transactional File Locking. TLS / encryption app¶
10-1	2492-2496	File	
10-2	2497-2504	locking	
10-3	2505-2507	is	
10-4	2508-2515	enabled	
10-5	2516-2518	by	
10-6	2519-2526	default	
10-7	2526-2527	,	
10-8	2528-2533	using	
10-9	2534-2537	the	
10-10	2538-2546	database	
10-11	2547-2554	locking	
10-12	2555-2562	backend	
10-13	2562-2563	.	
10-14	2564-2568	This	
10-15	2569-2575	places	
10-16	2576-2577	a	
10-17	2578-2589	significant	
10-18	2590-2594	load	
10-19	2595-2597	on	
10-20	2598-2602	your	
10-21	2603-2611	database	
10-22	2611-2612	.	
10-23	2613-2616	See	
10-24	2617-2620	the	
10-25	2621-2628	section	
10-26	2629-2642	Transactional	
10-27	2643-2647	file	
10-28	2648-2655	locking	
10-29	2656-2659	for	
10-30	2660-2663	how	
10-31	2664-2666	to	
10-32	2667-2676	configure	
10-33	2677-2686	Nextcloud	
10-34	2687-2689	to	
10-35	2690-2693	use	
10-36	2694-2705	Redis-based	
10-37	2706-2719	Transactional	
10-38	2720-2724	File	
10-39	2725-2732	Locking	
10-40	2732-2733	.	
10-41	2734-2737	TLS	
10-42	2738-2739	/	
10-43	2740-2750	encryption	
10-44	2751-2754	app	
10-45	2754-2755	¶	

#Text=TLS (HTTPS) and file encryption/decryption can be offloaded to a processor’s AES-NI extension. This can both speed up these operations while lowering processing overhead. This requires a processor with the AES-NI instruction set. Here are some examples how to check if your CPU / environment supports the AES-NI extension:
11-1	2756-2759	TLS	
11-2	2760-2761	(	
11-3	2761-2766	HTTPS	
11-4	2766-2767	)	
11-5	2768-2771	and	
11-6	2772-2776	file	
11-7	2777-2787	encryption	
11-8	2787-2788	/	
11-9	2788-2798	decryption	
11-10	2799-2802	can	
11-11	2803-2805	be	
11-12	2806-2815	offloaded	
11-13	2816-2818	to	
11-14	2819-2820	a	
11-15	2821-2830	processor	
11-16	2830-2831	’	
11-17	2831-2832	s	
11-18	2833-2839	AES-NI	
11-19	2840-2849	extension	
11-20	2849-2850	.	
11-21	2851-2855	This	
11-22	2856-2859	can	
11-23	2860-2864	both	
11-24	2865-2870	speed	
11-25	2871-2873	up	
11-26	2874-2879	these	
11-27	2880-2890	operations	
11-28	2891-2896	while	
11-29	2897-2905	lowering	
11-30	2906-2916	processing	
11-31	2917-2925	overhead	
11-32	2925-2926	.	
11-33	2927-2931	This	
11-34	2932-2940	requires	
11-35	2941-2942	a	
11-36	2943-2952	processor	
11-37	2953-2957	with	
11-38	2958-2961	the	
11-39	2962-2968	AES-NI	
11-40	2969-2980	instruction	
11-41	2981-2984	set	
11-42	2984-2985	.	
11-43	2986-2990	Here	
11-44	2991-2994	are	
11-45	2995-2999	some	
11-46	3000-3008	examples	
11-47	3009-3012	how	
11-48	3013-3015	to	
11-49	3016-3021	check	
11-50	3022-3024	if	
11-51	3025-3029	your	
11-52	3030-3033	CPU	
11-53	3034-3035	/	
11-54	3036-3047	environment	
11-55	3048-3056	supports	
11-56	3057-3060	the	
11-57	3061-3067	AES-NI	
11-58	3068-3077	extension	
11-59	3077-3078	:	

#Text=For each CPU core present: grep flags /proc/cpuinfo or as a summary for all cores: grep -m 1 '^flags' /proc/cpuinfo If the result contains any aes, the extension is present. Search eg. on the Intel web if the processor used supports the extension Intel Processor Feature Filter You may set a filter by
12-1	3079-3082	For	
12-2	3083-3087	each	
12-3	3088-3091	CPU	
12-4	3092-3096	core	
12-5	3097-3104	present	
12-6	3104-3105	:	
12-7	3106-3110	grep	
12-8	3111-3116	flags	
12-9	3117-3118	/	
12-10	3118-3122	proc	
12-11	3122-3123	/	
12-12	3123-3130	cpuinfo	
12-13	3131-3133	or	
12-14	3134-3136	as	
12-15	3137-3138	a	
12-16	3139-3146	summary	
12-17	3147-3150	for	
12-18	3151-3154	all	
12-19	3155-3160	cores	
12-20	3160-3161	:	
12-21	3162-3166	grep	
12-22	3167-3168	-	
12-23	3168-3169	m	
12-24	3170-3171	1	
12-25	3172-3173	'	
12-26	3173-3174	^	
12-27	3174-3179	flags	
12-28	3179-3180	'	
12-29	3181-3182	/	
12-30	3182-3186	proc	
12-31	3186-3187	/	
12-32	3187-3194	cpuinfo	
12-33	3195-3197	If	
12-34	3198-3201	the	
12-35	3202-3208	result	
12-36	3209-3217	contains	
12-37	3218-3221	any	
12-38	3222-3225	aes	
12-39	3225-3226	,	
12-40	3227-3230	the	
12-41	3231-3240	extension	
12-42	3241-3243	is	
12-43	3244-3251	present	
12-44	3251-3252	.	
12-45	3253-3259	Search	
12-46	3260-3262	eg	
12-47	3262-3263	.	
12-48	3264-3266	on	
12-49	3267-3270	the	
12-50	3271-3276	Intel	
12-51	3277-3280	web	
12-52	3281-3283	if	
12-53	3284-3287	the	
12-54	3288-3297	processor	
12-55	3298-3302	used	
12-56	3303-3311	supports	
12-57	3312-3315	the	
12-58	3316-3325	extension	
12-59	3326-3331	Intel	
12-60	3332-3341	Processor	
12-61	3342-3349	Feature	
12-62	3350-3356	Filter	
12-63	3357-3360	You	
12-64	3361-3364	may	
12-65	3365-3368	set	
12-66	3369-3370	a	
12-67	3371-3377	filter	
12-68	3378-3380	by	

#Text="AES New Instructions" to get a reduced result set. For versions of openssl >= 1.0.1, AES-NI does not work via an engine and will not show up in the openssl engine command. It is active by default on the supported hardware. You can check the openssl version via openssl
13-1	3381-3382	"	
13-2	3382-3385	AES	
13-3	3386-3389	New	
13-4	3390-3402	Instructions	
13-5	3402-3403	"	
13-6	3404-3406	to	
13-7	3407-3410	get	
13-8	3411-3412	a	
13-9	3413-3420	reduced	
13-10	3421-3427	result	
13-11	3428-3431	set	
13-12	3431-3432	.	
13-13	3433-3436	For	
13-14	3437-3445	versions	
13-15	3446-3448	of	
13-16	3449-3456	openssl	
13-17	3457-3458	>	
13-18	3458-3459	=	
13-19	3460-3465	1.0.1	
13-20	3465-3466	,	
13-21	3467-3473	AES-NI	
13-22	3474-3478	does	
13-23	3479-3482	not	
13-24	3483-3487	work	
13-25	3488-3491	via	
13-26	3492-3494	an	
13-27	3495-3501	engine	
13-28	3502-3505	and	
13-29	3506-3510	will	
13-30	3511-3514	not	
13-31	3515-3519	show	
13-32	3520-3522	up	
13-33	3523-3525	in	
13-34	3526-3529	the	
13-35	3530-3537	openssl	
13-36	3538-3544	engine	
13-37	3545-3552	command	
13-38	3552-3553	.	
13-39	3554-3556	It	
13-40	3557-3559	is	
13-41	3560-3566	active	
13-42	3567-3569	by	
13-43	3570-3577	default	
13-44	3578-3580	on	
13-45	3581-3584	the	
13-46	3585-3594	supported	
13-47	3595-3603	hardware	
13-48	3603-3604	.	
13-49	3605-3608	You	
13-50	3609-3612	can	
13-51	3613-3618	check	
13-52	3619-3622	the	
13-53	3623-3630	openssl	
13-54	3631-3638	version	
13-55	3639-3642	via	
13-56	3643-3650	openssl	

#Text=version -a If your processor supports AES-NI but it does not show up eg via grep or coreinfo, it is maybe disabled in the BIOS. If your environment runs virtualized, check the virtualization vendor for support.
14-1	3651-3658	version	
14-2	3659-3660	-	
14-3	3660-3661	a	
14-4	3662-3664	If	
14-5	3665-3669	your	
14-6	3670-3679	processor	
14-7	3680-3688	supports	
14-8	3689-3695	AES-NI	
14-9	3696-3699	but	
14-10	3700-3702	it	
14-11	3703-3707	does	
14-12	3708-3711	not	
14-13	3712-3716	show	
14-14	3717-3719	up	
14-15	3720-3722	eg	
14-16	3723-3726	via	
14-17	3727-3731	grep	
14-18	3732-3734	or	
14-19	3735-3743	coreinfo	
14-20	3743-3744	,	
14-21	3745-3747	it	
14-22	3748-3750	is	
14-23	3751-3756	maybe	
14-24	3757-3765	disabled	
14-25	3766-3768	in	
14-26	3769-3772	the	
14-27	3773-3777	BIOS	
14-28	3777-3778	.	
14-29	3779-3781	If	
14-30	3782-3786	your	
14-31	3787-3798	environment	
14-32	3799-3803	runs	
14-33	3804-3815	virtualized	
14-34	3815-3816	,	
14-35	3817-3822	check	
14-36	3823-3826	the	
14-37	3827-3841	virtualization	
14-38	3842-3848	vendor	
14-39	3849-3852	for	
14-40	3853-3860	support	
14-41	3860-3861	.	

#Text=Enable HTTP/2 for faster loading¶ HTTP/2 has huge speed improvements over HTTP with multiple request. Most browsers already support HTTP/2 over TLS (HTTPS). Refer to your web server manual for guides on how to enable HTTP/2. Tune PHP-FPM¶
15-1	3862-3868	Enable	
15-2	3869-3873	HTTP	
15-3	3873-3874	/	
15-4	3874-3875	2	
15-5	3876-3879	for	
15-6	3880-3886	faster	
15-7	3887-3894	loading	
15-8	3894-3895	¶	
15-9	3896-3900	HTTP	
15-10	3900-3901	/	
15-11	3901-3902	2	
15-12	3903-3906	has	
15-13	3907-3911	huge	
15-14	3912-3917	speed	
15-15	3918-3930	improvements	
15-16	3931-3935	over	
15-17	3936-3940	HTTP	
15-18	3941-3945	with	
15-19	3946-3954	multiple	
15-20	3955-3962	request	
15-21	3962-3963	.	
15-22	3964-3968	Most	
15-23	3969-3977	browsers	
15-24	3978-3985	already	
15-25	3986-3993	support	
15-26	3994-3998	HTTP	
15-27	3998-3999	/	
15-28	3999-4000	2	
15-29	4001-4005	over	
15-30	4006-4009	TLS	
15-31	4010-4011	(	
15-32	4011-4016	HTTPS	
15-33	4016-4017	)	
15-34	4017-4018	.	
15-35	4019-4024	Refer	
15-36	4025-4027	to	
15-37	4028-4032	your	
15-38	4033-4036	web	
15-39	4037-4043	server	
15-40	4044-4050	manual	
15-41	4051-4054	for	
15-42	4055-4061	guides	
15-43	4062-4064	on	
15-44	4065-4068	how	
15-45	4069-4071	to	
15-46	4072-4078	enable	
15-47	4079-4083	HTTP	
15-48	4083-4084	/	
15-49	4084-4085	2	
15-50	4085-4086	.	
15-51	4087-4091	Tune	
15-52	4092-4099	PHP-FPM	
15-53	4099-4100	¶	

#Text=If you are using a default installation of PHP-FPM you might have noticed excessive load times on the web interface or even sync issues. This is due to the fact that each simultaneous request of an element is handled by a separate PHP-FPM process. So even on a small installation you should allow more processes to run in parallel to handle the requests.
16-1	4101-4103	If	
16-2	4104-4107	you	
16-3	4108-4111	are	
16-4	4112-4117	using	
16-5	4118-4119	a	
16-6	4120-4127	default	
16-7	4128-4140	installation	
16-8	4141-4143	of	
16-9	4144-4151	PHP-FPM	
16-10	4152-4155	you	
16-11	4156-4161	might	
16-12	4162-4166	have	
16-13	4167-4174	noticed	
16-14	4175-4184	excessive	
16-15	4185-4189	load	
16-16	4190-4195	times	
16-17	4196-4198	on	
16-18	4199-4202	the	
16-19	4203-4206	web	
16-20	4207-4216	interface	
16-21	4217-4219	or	
16-22	4220-4224	even	
16-23	4225-4229	sync	
16-24	4230-4236	issues	
16-25	4236-4237	.	
16-26	4238-4242	This	
16-27	4243-4245	is	
16-28	4246-4249	due	
16-29	4250-4252	to	
16-30	4253-4256	the	
16-31	4257-4261	fact	
16-32	4262-4266	that	
16-33	4267-4271	each	
16-34	4272-4284	simultaneous	
16-35	4285-4292	request	
16-36	4293-4295	of	
16-37	4296-4298	an	
16-38	4299-4306	element	
16-39	4307-4309	is	
16-40	4310-4317	handled	
16-41	4318-4320	by	
16-42	4321-4322	a	
16-43	4323-4331	separate	
16-44	4332-4339	PHP-FPM	
16-45	4340-4347	process	
16-46	4347-4348	.	
16-47	4349-4351	So	
16-48	4352-4356	even	
16-49	4357-4359	on	
16-50	4360-4361	a	
16-51	4362-4367	small	
16-52	4368-4380	installation	
16-53	4381-4384	you	
16-54	4385-4391	should	
16-55	4392-4397	allow	
16-56	4398-4402	more	
16-57	4403-4412	processes	
16-58	4413-4415	to	
16-59	4416-4419	run	
16-60	4420-4422	in	
16-61	4423-4431	parallel	
16-62	4432-4434	to	
16-63	4435-4441	handle	
16-64	4442-4445	the	
16-65	4446-4454	requests	
16-66	4454-4455	.	

#Text=This link can help you calculate the good values for your system. Enable PHP OPcache¶ The OPcache improves the performance of PHP applications by caching precompiled bytecode. We recommend at least the following settings: opcache.enable = 1 opcache.interned_strings_buffer = 8
17-1	4456-4460	This	
17-2	4461-4465	link	
17-3	4466-4469	can	
17-4	4470-4474	help	
17-5	4475-4478	you	
17-6	4479-4488	calculate	
17-7	4489-4492	the	
17-8	4493-4497	good	
17-9	4498-4504	values	
17-10	4505-4508	for	
17-11	4509-4513	your	
17-12	4514-4520	system	
17-13	4520-4521	.	
17-14	4522-4528	Enable	
17-15	4529-4532	PHP	
17-16	4533-4540	OPcache	
17-17	4540-4541	¶	
17-18	4542-4545	The	
17-19	4546-4553	OPcache	
17-20	4554-4562	improves	
17-21	4563-4566	the	
17-22	4567-4578	performance	
17-23	4579-4581	of	
17-24	4582-4585	PHP	
17-25	4586-4598	applications	
17-26	4599-4601	by	
17-27	4602-4609	caching	
17-28	4610-4621	precompiled	
17-29	4622-4630	bytecode	
17-30	4630-4631	.	
17-31	4632-4634	We	
17-32	4635-4644	recommend	
17-33	4645-4647	at	
17-34	4648-4653	least	
17-35	4654-4657	the	
17-36	4658-4667	following	
17-37	4668-4676	settings	
17-38	4676-4677	:	
17-39	4678-4692	opcache.enable	
17-40	4693-4694	=	
17-41	4695-4696	1	
17-42	4697-4728	opcache.interned_strings_buffer	
17-43	4729-4730	=	
17-44	4731-4732	8	

#Text=opcache.max_accelerated_files = 10000 opcache.memory_consumption = 128 opcache.save_comments = 1 opcache.revalidate_freq = 1 For more details check out the official documentation or this blog post about some recommended settings. Next Previous
18-1	4733-4762	opcache.max_accelerated_files	
18-2	4763-4764	=	
18-3	4765-4770	10000	
18-4	4771-4797	opcache.memory_consumption	
18-5	4798-4799	=	
18-6	4800-4803	128	
18-7	4804-4825	opcache.save_comments	
18-8	4826-4827	=	
18-9	4828-4829	1	
18-10	4830-4853	opcache.revalidate_freq	
18-11	4854-4855	=	
18-12	4856-4857	1	
18-13	4858-4861	For	
18-14	4862-4866	more	
18-15	4867-4874	details	
18-16	4875-4880	check	
18-17	4881-4884	out	
18-18	4885-4888	the	
18-19	4889-4897	official	
18-20	4898-4911	documentation	
18-21	4912-4914	or	
18-22	4915-4919	this	
18-23	4920-4924	blog	
18-24	4925-4929	post	
18-25	4930-4935	about	
18-26	4936-4940	some	
18-27	4941-4952	recommended	
18-28	4953-4961	settings	
18-29	4961-4962	.	
18-30	4963-4967	Next	
18-31	4968-4976	Previous	
