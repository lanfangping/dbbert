#FORMAT=WebAnno TSV 3.3


#Text=Lab3: Query Plan Management :: Amazon Aurora Labs for PostgreSQL
#Text=Amazon Aurora Labs for PostgreSQL
#Text=Overview of Labs
#Text=Prerequisites
#Text=I am in a workshop using Event Engine
#Text=Signing in to the AWS console using Event Engine
#Text=I need to deploy lab environment manually
#Text=Getting started
#Text=Signing in to the AWS Console
#Text=Setup Lab Environment with Aurora cluster
#Text=Setup the Lab without Aurora cluster
#Text=Lab1: Creating a New Aurora Cluster Manually
#Text=Configure Cloud9 and Initialize Database
#Text=Configure the Cloud9 workstation
#Text=Connect, Verify and Initialize DB Instance
#Text=Lab2: Fast Cloning
#Text=Lab3: Query Plan Management
#Text=Lab4: Cluster Cache Management
#Text=4.1 Setup cluster cache management
#Text=4.2 Benchmarking with Cluster Cache management
#Text=Lab5: Database Activity Streaming
#Text=5.1: Setup KMS for Database Activity Streaming
#Text=5.2: Database Activity Streams in action
#Text=Lab6: RDS Performance Insights
#Text=Lab7: Create dataset and Auto Scale
#Text=Lab8: Test Fault Tolerance
#Text=Lab9: Aurora Global Database
#Text=9.0: Prerequisites
#Text=9.1: Establish Global Database
#Text=9.2: Monitor a Global Database
#Text=9.3: Failover: Promote a Region
#Text=Failback: Optional Lab
#Text=Lab10: Aurora Serverless
#Text=Create an Aurora Serverless DB Cluster
#Text=Use Aurora Serverless with AWS Lambda and RDS Data API
#Text=Lab11: Aurora Machine Learning
#Text=Clean Up
#Text=Contributors & Revision History
#Text=More Resources
#Text=Privacy | Site Terms | © 2021, Amazon Web Services, Inc. or its affiliates.
1-1	0-4	Lab3	
1-2	4-5	:	
1-3	6-11	Query	
1-4	12-16	Plan	
1-5	17-27	Management	
1-6	28-29	:	
1-7	29-30	:	
1-8	31-37	Amazon	
1-9	38-44	Aurora	
1-10	45-49	Labs	
1-11	50-53	for	
1-12	54-64	PostgreSQL	
1-13	65-71	Amazon	
1-14	72-78	Aurora	
1-15	79-83	Labs	
1-16	84-87	for	
1-17	88-98	PostgreSQL	
1-18	99-107	Overview	
1-19	108-110	of	
1-20	111-115	Labs	
1-21	116-129	Prerequisites	
1-22	130-131	I	
1-23	132-134	am	
1-24	135-137	in	
1-25	138-139	a	
1-26	140-148	workshop	
1-27	149-154	using	
1-28	155-160	Event	
1-29	161-167	Engine	
1-30	168-175	Signing	
1-31	176-178	in	
1-32	179-181	to	
1-33	182-185	the	
1-34	186-189	AWS	
1-35	190-197	console	
1-36	198-203	using	
1-37	204-209	Event	
1-38	210-216	Engine	
1-39	217-218	I	
1-40	219-223	need	
1-41	224-226	to	
1-42	227-233	deploy	
1-43	234-237	lab	
1-44	238-249	environment	
1-45	250-258	manually	
1-46	259-266	Getting	
1-47	267-274	started	
1-48	275-282	Signing	
1-49	283-285	in	
1-50	286-288	to	
1-51	289-292	the	
1-52	293-296	AWS	
1-53	297-304	Console	
1-54	305-310	Setup	
1-55	311-314	Lab	
1-56	315-326	Environment	
1-57	327-331	with	
1-58	332-338	Aurora	
1-59	339-346	cluster	
1-60	347-352	Setup	
1-61	353-356	the	
1-62	357-360	Lab	
1-63	361-368	without	
1-64	369-375	Aurora	
1-65	376-383	cluster	
1-66	384-388	Lab1	
1-67	388-389	:	
1-68	390-398	Creating	
1-69	399-400	a	
1-70	401-404	New	
1-71	405-411	Aurora	
1-72	412-419	Cluster	
1-73	420-428	Manually	
1-74	429-438	Configure	
1-75	439-445	Cloud9	
1-76	446-449	and	
1-77	450-460	Initialize	
1-78	461-469	Database	
1-79	470-479	Configure	
1-80	480-483	the	
1-81	484-490	Cloud9	
1-82	491-502	workstation	
1-83	503-510	Connect	
1-84	510-511	,	
1-85	512-518	Verify	
1-86	519-522	and	
1-87	523-533	Initialize	
1-88	534-536	DB	
1-89	537-545	Instance	
1-90	546-550	Lab2	
1-91	550-551	:	
1-92	552-556	Fast	
1-93	557-564	Cloning	
1-94	565-569	Lab3	
1-95	569-570	:	
1-96	571-576	Query	
1-97	577-581	Plan	
1-98	582-592	Management	
1-99	593-597	Lab4	
1-100	597-598	:	
1-101	599-606	Cluster	
1-102	607-612	Cache	
1-103	613-623	Management	
1-104	624-627	4.1	
1-105	628-633	Setup	
1-106	634-641	cluster	
1-107	642-647	cache	
1-108	648-658	management	
1-109	659-662	4.2	
1-110	663-675	Benchmarking	
1-111	676-680	with	
1-112	681-688	Cluster	
1-113	689-694	Cache	
1-114	695-705	management	
1-115	706-710	Lab5	
1-116	710-711	:	
1-117	712-720	Database	
1-118	721-729	Activity	
1-119	730-739	Streaming	
1-120	740-743	5.1	
1-121	743-744	:	
1-122	745-750	Setup	
1-123	751-754	KMS	
1-124	755-758	for	
1-125	759-767	Database	
1-126	768-776	Activity	
1-127	777-786	Streaming	
1-128	787-790	5.2	
1-129	790-791	:	
1-130	792-800	Database	
1-131	801-809	Activity	
1-132	810-817	Streams	
1-133	818-820	in	
1-134	821-827	action	
1-135	828-832	Lab6	
1-136	832-833	:	
1-137	834-837	RDS	
1-138	838-849	Performance	
1-139	850-858	Insights	
1-140	859-863	Lab7	
1-141	863-864	:	
1-142	865-871	Create	
1-143	872-879	dataset	
1-144	880-883	and	
1-145	884-888	Auto	
1-146	889-894	Scale	
1-147	895-899	Lab8	
1-148	899-900	:	
1-149	901-905	Test	
1-150	906-911	Fault	
1-151	912-921	Tolerance	
1-152	922-926	Lab9	
1-153	926-927	:	
1-154	928-934	Aurora	
1-155	935-941	Global	
1-156	942-950	Database	
1-157	951-954	9.0	
1-158	954-955	:	
1-159	956-969	Prerequisites	
1-160	970-973	9.1	
1-161	973-974	:	
1-162	975-984	Establish	
1-163	985-991	Global	
1-164	992-1000	Database	
1-165	1001-1004	9.2	
1-166	1004-1005	:	
1-167	1006-1013	Monitor	
1-168	1014-1015	a	
1-169	1016-1022	Global	
1-170	1023-1031	Database	
1-171	1032-1035	9.3	
1-172	1035-1036	:	
1-173	1037-1045	Failover	
1-174	1045-1046	:	
1-175	1047-1054	Promote	
1-176	1055-1056	a	
1-177	1057-1063	Region	
1-178	1064-1072	Failback	
1-179	1072-1073	:	
1-180	1074-1082	Optional	
1-181	1083-1086	Lab	
1-182	1087-1092	Lab10	
1-183	1092-1093	:	
1-184	1094-1100	Aurora	
1-185	1101-1111	Serverless	
1-186	1112-1118	Create	
1-187	1119-1121	an	
1-188	1122-1128	Aurora	
1-189	1129-1139	Serverless	
1-190	1140-1142	DB	
1-191	1143-1150	Cluster	
1-192	1151-1154	Use	
1-193	1155-1161	Aurora	
1-194	1162-1172	Serverless	
1-195	1173-1177	with	
1-196	1178-1181	AWS	
1-197	1182-1188	Lambda	
1-198	1189-1192	and	
1-199	1193-1196	RDS	
1-200	1197-1201	Data	
1-201	1202-1205	API	
1-202	1206-1211	Lab11	
1-203	1211-1212	:	
1-204	1213-1219	Aurora	
1-205	1220-1227	Machine	
1-206	1228-1236	Learning	
1-207	1237-1242	Clean	
1-208	1243-1245	Up	
1-209	1246-1258	Contributors	
1-210	1259-1260	&	
1-211	1261-1269	Revision	
1-212	1270-1277	History	
1-213	1278-1282	More	
1-214	1283-1292	Resources	
1-215	1293-1300	Privacy	
1-216	1301-1302	|	
1-217	1303-1307	Site	
1-218	1308-1313	Terms	
1-219	1314-1315	|	
1-220	1316-1317	©	
1-221	1318-1322	2021	
1-222	1322-1323	,	
1-223	1324-1330	Amazon	
1-224	1331-1334	Web	
1-225	1335-1343	Services	
1-226	1343-1344	,	
1-227	1345-1348	Inc	
1-228	1348-1349	.	
1-229	1350-1352	or	
1-230	1353-1356	its	
1-231	1357-1367	affiliates	
1-232	1367-1368	.	

#Text=All rights reserved.
2-1	1369-1372	All	
2-2	1373-1379	rights	
2-3	1380-1388	reserved	
2-4	1388-1389	.	

#Text=Edit this page
#Text=Amazon Aurora Labs for PostgreSQL > Lab3: Query Plan Management
#Text=Lab3: Query Plan Management
#Text=With query plan management (QPM), you can control execution plans for a set of statements that you want to manage.
3-1	1390-1394	Edit	
3-2	1395-1399	this	
3-3	1400-1404	page	
3-4	1405-1411	Amazon	
3-5	1412-1418	Aurora	
3-6	1419-1423	Labs	
3-7	1424-1427	for	
3-8	1428-1438	PostgreSQL	
3-9	1439-1440	>	
3-10	1441-1445	Lab3	
3-11	1445-1446	:	
3-12	1447-1452	Query	
3-13	1453-1457	Plan	
3-14	1458-1468	Management	
3-15	1469-1473	Lab3	
3-16	1473-1474	:	
3-17	1475-1480	Query	
3-18	1481-1485	Plan	
3-19	1486-1496	Management	
3-20	1497-1501	With	
3-21	1502-1507	query	
3-22	1508-1512	plan	
3-23	1513-1523	management	
3-24	1524-1525	(	
3-25	1525-1528	QPM	
3-26	1528-1529	)	
3-27	1529-1530	,	
3-28	1531-1534	you	
3-29	1535-1538	can	
3-30	1539-1546	control	
3-31	1547-1556	execution	
3-32	1557-1562	plans	
3-33	1563-1566	for	
3-34	1567-1568	a	
3-35	1569-1572	set	
3-36	1573-1575	of	
3-37	1576-1586	statements	
3-38	1587-1591	that	
3-39	1592-1595	you	
3-40	1596-1600	want	
3-41	1601-1603	to	
3-42	1604-1610	manage	
3-43	1610-1611	.	

#Text=You can do the following:
#Text=Improve plan stability by forcing the optimizer to choose from a small number of known, good plans.
4-1	1612-1615	You	
4-2	1616-1619	can	
4-3	1620-1622	do	
4-4	1623-1626	the	
4-5	1627-1636	following	
4-6	1636-1637	:	
4-7	1638-1645	Improve	
4-8	1646-1650	plan	
4-9	1651-1660	stability	
4-10	1661-1663	by	
4-11	1664-1671	forcing	
4-12	1672-1675	the	
4-13	1676-1685	optimizer	
4-14	1686-1688	to	
4-15	1689-1695	choose	
4-16	1696-1700	from	
4-17	1701-1702	a	
4-18	1703-1708	small	
4-19	1709-1715	number	
4-20	1716-1718	of	
4-21	1719-1724	known	
4-22	1724-1725	,	
4-23	1726-1730	good	
4-24	1731-1736	plans	
4-25	1736-1737	.	

#Text=Optimize plans centrally and then distribute the best plans globally.
5-1	1738-1746	Optimize	
5-2	1747-1752	plans	
5-3	1753-1762	centrally	
5-4	1763-1766	and	
5-5	1767-1771	then	
5-6	1772-1782	distribute	
5-7	1783-1786	the	
5-8	1787-1791	best	
5-9	1792-1797	plans	
5-10	1798-1806	globally	
5-11	1806-1807	.	

#Text=Identify indexes that aren’t used and assess the impact of creating or dropping an index.
6-1	1808-1816	Identify	
6-2	1817-1824	indexes	
6-3	1825-1829	that	
6-4	1830-1834	aren	
6-5	1834-1835	’	
6-6	1835-1836	t	
6-7	1837-1841	used	
6-8	1842-1845	and	
6-9	1846-1852	assess	
6-10	1853-1856	the	
6-11	1857-1863	impact	
6-12	1864-1866	of	
6-13	1867-1875	creating	
6-14	1876-1878	or	
6-15	1879-1887	dropping	
6-16	1888-1890	an	
6-17	1891-1896	index	
6-18	1896-1897	.	

#Text=Automatically detect a new minimum-cost plan discovered by the optimizer.
7-1	1898-1911	Automatically	
7-2	1912-1918	detect	
7-3	1919-1920	a	
7-4	1921-1924	new	
7-5	1925-1937	minimum-cost	
7-6	1938-1942	plan	
7-7	1943-1953	discovered	
7-8	1954-1956	by	
7-9	1957-1960	the	
7-10	1961-1970	optimizer	
7-11	1970-1971	.	

#Text=Try new optimizer features with less risk, because you can choose to approve only the plan changes that improve performance.
8-1	1972-1975	Try	
8-2	1976-1979	new	
8-3	1980-1989	optimizer	
8-4	1990-1998	features	
8-5	1999-2003	with	
8-6	2004-2008	less	
8-7	2009-2013	risk	
8-8	2013-2014	,	
8-9	2015-2022	because	
8-10	2023-2026	you	
8-11	2027-2030	can	
8-12	2031-2037	choose	
8-13	2038-2040	to	
8-14	2041-2048	approve	
8-15	2049-2053	only	
8-16	2054-2057	the	
8-17	2058-2062	plan	
8-18	2063-2070	changes	
8-19	2071-2075	that	
8-20	2076-2083	improve	
8-21	2084-2095	performance	
8-22	2095-2096	.	

#Text=For additional details on the Query Plan Management please refer official documentation
#Text=Managing Query Execution Plans for Aurora PostgreSQL.
9-1	2097-2100	For	
9-2	2101-2111	additional	
9-3	2112-2119	details	
9-4	2120-2122	on	
9-5	2123-2126	the	
9-6	2127-2132	Query	
9-7	2133-2137	Plan	
9-8	2138-2148	Management	
9-9	2149-2155	please	
9-10	2156-2161	refer	
9-11	2162-2170	official	
9-12	2171-2184	documentation	
9-13	2185-2193	Managing	
9-14	2194-2199	Query	
9-15	2200-2209	Execution	
9-16	2210-2215	Plans	
9-17	2216-2219	for	
9-18	2220-2226	Aurora	
9-19	2227-2237	PostgreSQL	
9-20	2237-2238	.	

#Text=Query plan management is available with Amazon Aurora PostgreSQL version 10.5-compatible (Aurora 2.1.0) and later, or Amazon Aurora PostgreSQL version 9.6.11-compatible (Aurora 1.4.0) and later.
10-1	2239-2244	Query	
10-2	2245-2249	plan	
10-3	2250-2260	management	
10-4	2261-2263	is	
10-5	2264-2273	available	
10-6	2274-2278	with	
10-7	2279-2285	Amazon	
10-8	2286-2292	Aurora	
10-9	2293-2303	PostgreSQL	
10-10	2304-2311	version	
10-11	2312-2316	10.5	
10-12	2316-2317	-	
10-13	2317-2327	compatible	
10-14	2328-2329	(	
10-15	2329-2335	Aurora	
10-16	2336-2341	2.1.0	
10-17	2341-2342	)	
10-18	2343-2346	and	
10-19	2347-2352	later	
10-20	2352-2353	,	
10-21	2354-2356	or	
10-22	2357-2363	Amazon	
10-23	2364-2370	Aurora	
10-24	2371-2381	PostgreSQL	
10-25	2382-2389	version	
10-26	2390-2396	9.6.11	
10-27	2396-2397	-	
10-28	2397-2407	compatible	
10-29	2408-2409	(	
10-30	2409-2415	Aurora	
10-31	2416-2421	1.4.0	
10-32	2421-2422	)	
10-33	2423-2426	and	
10-34	2427-2432	later	
10-35	2432-2433	.	

#Text=The quickest way to enable QPM is to use the automatic plan capture, which enables the plan capture for all SQL statements that run at least two times.
11-1	2434-2437	The	
11-2	2438-2446	quickest	
11-3	2447-2450	way	
11-4	2451-2453	to	
11-5	2454-2460	enable	
11-6	2461-2464	QPM	
11-7	2465-2467	is	
11-8	2468-2470	to	
11-9	2471-2474	use	
11-10	2475-2478	the	
11-11	2479-2488	automatic	
11-12	2489-2493	plan	
11-13	2494-2501	capture	
11-14	2501-2502	,	
11-15	2503-2508	which	
11-16	2509-2516	enables	
11-17	2517-2520	the	
11-18	2521-2525	plan	
11-19	2526-2533	capture	
11-20	2534-2537	for	
11-21	2538-2541	all	
11-22	2542-2545	SQL	
11-23	2546-2556	statements	
11-24	2557-2561	that	
11-25	2562-2565	run	
11-26	2566-2568	at	
11-27	2569-2574	least	
11-28	2575-2578	two	
11-29	2579-2584	times	
11-30	2584-2585	.	

#Text=In this lab, we will walk through the process of enabling QPM with automatic plan capture, evolving captured query plans to manually accept them and fixing query plans by using optimizer hints.
12-1	2586-2588	In	
12-2	2589-2593	this	
12-3	2594-2597	lab	
12-4	2597-2598	,	
12-5	2599-2601	we	
12-6	2602-2606	will	
12-7	2607-2611	walk	
12-8	2612-2619	through	
12-9	2620-2623	the	
12-10	2624-2631	process	
12-11	2632-2634	of	
12-12	2635-2643	enabling	
12-13	2644-2647	QPM	
12-14	2648-2652	with	
12-15	2653-2662	automatic	
12-16	2663-2667	plan	
12-17	2668-2675	capture	
12-18	2675-2676	,	
12-19	2677-2685	evolving	
12-20	2686-2694	captured	
12-21	2695-2700	query	
12-22	2701-2706	plans	
12-23	2707-2709	to	
12-24	2710-2718	manually	
12-25	2719-2725	accept	
12-26	2726-2730	them	
12-27	2731-2734	and	
12-28	2735-2741	fixing	
12-29	2742-2747	query	
12-30	2748-2753	plans	
12-31	2754-2756	by	
12-32	2757-2762	using	
12-33	2763-2772	optimizer	
12-34	2773-2778	hints	
12-35	2778-2779	.	

#Text=Prerequisites
#Text=This lab requires the following lab modules to be completed first:
#Text=Prerequisites
#Text=Creating a New Aurora Cluster (optional, if creating a cluster manually)
#Text=Configure Cloud9 and Initialize Database
#Text=1.
13-1	2780-2793	Prerequisites	
13-2	2794-2798	This	
13-3	2799-2802	lab	
13-4	2803-2811	requires	
13-5	2812-2815	the	
13-6	2816-2825	following	
13-7	2826-2829	lab	
13-8	2830-2837	modules	
13-9	2838-2840	to	
13-10	2841-2843	be	
13-11	2844-2853	completed	
13-12	2854-2859	first	
13-13	2859-2860	:	
13-14	2861-2874	Prerequisites	
13-15	2875-2883	Creating	
13-16	2884-2885	a	
13-17	2886-2889	New	
13-18	2890-2896	Aurora	
13-19	2897-2904	Cluster	
13-20	2905-2906	(	
13-21	2906-2914	optional	
13-22	2914-2915	,	
13-23	2916-2918	if	
13-24	2919-2927	creating	
13-25	2928-2929	a	
13-26	2930-2937	cluster	
13-27	2938-2946	manually	
13-28	2946-2947	)	
13-29	2948-2957	Configure	
13-30	2958-2964	Cloud9	
13-31	2965-2968	and	
13-32	2969-2979	Initialize	
13-33	2980-2988	Database	
13-34	2989-2990	1	
13-35	2990-2991	.	

#Text=Quick start guide on using QPM with automatic capture
#Text=Here are the steps to configure and enable QPM on your Aurora PostgreSQL cluster to automatically capture and control execution plans for a set of SQL statements.
#Text=1.1 Modify the Amazon Aurora DB Cluster Parameters related to the QPM.
#Text=a.
14-1	2992-2997	Quick	
14-2	2998-3003	start	
14-3	3004-3009	guide	
14-4	3010-3012	on	
14-5	3013-3018	using	
14-6	3019-3022	QPM	
14-7	3023-3027	with	
14-8	3028-3037	automatic	
14-9	3038-3045	capture	
14-10	3046-3050	Here	
14-11	3051-3054	are	
14-12	3055-3058	the	
14-13	3059-3064	steps	
14-14	3065-3067	to	
14-15	3068-3077	configure	
14-16	3078-3081	and	
14-17	3082-3088	enable	
14-18	3089-3092	QPM	
14-19	3093-3095	on	
14-20	3096-3100	your	
14-21	3101-3107	Aurora	
14-22	3108-3118	PostgreSQL	
14-23	3119-3126	cluster	
14-24	3127-3129	to	
14-25	3130-3143	automatically	
14-26	3144-3151	capture	
14-27	3152-3155	and	
14-28	3156-3163	control	
14-29	3164-3173	execution	
14-30	3174-3179	plans	
14-31	3180-3183	for	
14-32	3184-3185	a	
14-33	3186-3189	set	
14-34	3190-3192	of	
14-35	3193-3196	SQL	
14-36	3197-3207	statements	
14-37	3207-3208	.	
14-38	3209-3212	1.1	
14-39	3213-3219	Modify	
14-40	3220-3223	the	
14-41	3224-3230	Amazon	
14-42	3231-3237	Aurora	
14-43	3238-3240	DB	
14-44	3241-3248	Cluster	
14-45	3249-3259	Parameters	
14-46	3260-3267	related	
14-47	3268-3270	to	
14-48	3271-3274	the	
14-49	3275-3278	QPM	
14-50	3278-3279	.	
14-51	3280-3281	a	
14-52	3281-3282	.	

#Text=Open the Amazon RDS service console Parameters group section.
#Text=b.
15-1	3283-3287	Open	
15-2	3288-3291	the	
15-3	3292-3298	Amazon	
15-4	3299-3302	RDS	
15-5	3303-3310	service	
15-6	3311-3318	console	
15-7	3319-3329	Parameters	
15-8	3330-3335	group	
15-9	3336-3343	section	
15-10	3343-3344	.	
15-11	3345-3346	b	
15-12	3346-3347	.	

#Text=In the list, choose the parameter group for your Aurora PostgreSQL DB cluster.
16-1	3348-3350	In	
16-2	3351-3354	the	
16-3	3355-3359	list	
16-4	3359-3360	,	
16-5	3361-3367	choose	
16-6	3368-3371	the	
16-7	3372-3381	parameter	
16-8	3382-3387	group	
16-9	3388-3391	for	
16-10	3392-3396	your	
16-11	3397-3403	Aurora	
16-12	3404-3414	PostgreSQL	
16-13	3415-3417	DB	
16-14	3418-3425	cluster	
16-15	3425-3426	.	

#Text=You can find the DB Cluster parameter group name by selecting the CloudFormation Stack with description “Amazon Aurora PostgreSQL Labs Stackset” in the Cloudformation Console and referring to the Value for key apgcustomclusterparamgroup in the Outputs tab.The DB cluster must use a parameter group other than the default, because you can’t change values in a default parameter group.
17-1	3427-3430	You	
17-2	3431-3434	can	
17-3	3435-3439	find	
17-4	3440-3443	the	
17-5	3444-3446	DB	
17-6	3447-3454	Cluster	
17-7	3455-3464	parameter	
17-8	3465-3470	group	
17-9	3471-3475	name	
17-10	3476-3478	by	
17-11	3479-3488	selecting	
17-12	3489-3492	the	
17-13	3493-3507	CloudFormation	
17-14	3508-3513	Stack	
17-15	3514-3518	with	
17-16	3519-3530	description	
17-17	3531-3532	“	
17-18	3532-3538	Amazon	
17-19	3539-3545	Aurora	
17-20	3546-3556	PostgreSQL	
17-21	3557-3561	Labs	
17-22	3562-3570	Stackset	
17-23	3570-3571	”	
17-24	3572-3574	in	
17-25	3575-3578	the	
17-26	3579-3593	Cloudformation	
17-27	3594-3601	Console	
17-28	3602-3605	and	
17-29	3606-3615	referring	
17-30	3616-3618	to	
17-31	3619-3622	the	
17-32	3623-3628	Value	
17-33	3629-3632	for	
17-34	3633-3636	key	
17-35	3637-3663	apgcustomclusterparamgroup	
17-36	3664-3666	in	
17-37	3667-3670	the	
17-38	3671-3678	Outputs	
17-39	3679-3686	tab.The	
17-40	3687-3689	DB	
17-41	3690-3697	cluster	
17-42	3698-3702	must	
17-43	3703-3706	use	
17-44	3707-3708	a	
17-45	3709-3718	parameter	
17-46	3719-3724	group	
17-47	3725-3730	other	
17-48	3731-3735	than	
17-49	3736-3739	the	
17-50	3740-3747	default	
17-51	3747-3748	,	
17-52	3749-3756	because	
17-53	3757-3760	you	
17-54	3761-3764	can	
17-55	3764-3765	’	
17-56	3765-3766	t	
17-57	3767-3773	change	
17-58	3774-3780	values	
17-59	3781-3783	in	
17-60	3784-3785	a	
17-61	3786-3793	default	
17-62	3794-3803	parameter	
17-63	3804-3809	group	
17-64	3809-3810	.	

#Text=For more information, see Creating a DB Cluster Parameter Group.
#Text=c.
18-1	3811-3814	For	
18-2	3815-3819	more	
18-3	3820-3831	information	
18-4	3831-3832	,	
18-5	3833-3836	see	
18-6	3837-3845	Creating	
18-7	3846-3847	a	
18-8	3848-3850	DB	
18-9	3851-3858	Cluster	
18-10	3859-3868	Parameter	
18-11	3869-3874	Group	
18-12	3874-3875	.	
18-13	3876-3877	c	
18-14	3877-3878	.	

#Text=Click on the DB cluster parameter group name selected above and then click on Edit Parameters.
19-1	3879-3884	Click	
19-2	3885-3887	on	
19-3	3888-3891	the	
19-4	3892-3894	DB	
19-5	3895-3902	cluster	
19-6	3903-3912	parameter	
19-7	3913-3918	group	
19-8	3919-3923	name	
19-9	3924-3932	selected	
19-10	3933-3938	above	
19-11	3939-3942	and	
19-12	3943-3947	then	
19-13	3948-3953	click	
19-14	3954-3956	on	
19-15	3957-3961	Edit	
19-16	3962-3972	Parameters	
19-17	3972-3973	.	

#Text=In Parameter Filter field, enter rds.enable_plan_management to reveal the filtered parameter.
20-1	3974-3976	In	
20-2	3977-3986	Parameter	
20-3	3987-3993	Filter	
20-4	3994-3999	field	
20-5	3999-4000	,	
20-6	4001-4006	enter	
20-7	4007-4033	rds.enable_plan_management	
20-8	4034-4036	to	
20-9	4037-4043	reveal	
20-10	4044-4047	the	
20-11	4048-4056	filtered	
20-12	4057-4066	parameter	
20-13	4066-4067	.	

#Text=Set value of rds.enable_plan_management to 1 and click on Save changes.
#Text=e.
21-1	4068-4071	Set	
21-2	4072-4077	value	
21-3	4078-4080	of	
21-4	4081-4107	rds.enable_plan_management	
21-5	4108-4110	to	
21-6	4111-4112	1	
21-7	4113-4116	and	
21-8	4117-4122	click	
21-9	4123-4125	on	
21-10	4126-4130	Save	
21-11	4131-4138	changes	
21-12	4138-4139	.	
21-13	4140-4141	e	
21-14	4141-4142	.	

#Text=Click on the database parameter group name and click on Edit Parameters.
#Text=f.
22-1	4143-4148	Click	
22-2	4149-4151	on	
22-3	4152-4155	the	
22-4	4156-4164	database	
22-5	4165-4174	parameter	
22-6	4175-4180	group	
22-7	4181-4185	name	
22-8	4186-4189	and	
22-9	4190-4195	click	
22-10	4196-4198	on	
22-11	4199-4203	Edit	
22-12	4204-4214	Parameters	
22-13	4214-4215	.	
22-14	4216-4217	f	
22-15	4217-4218	.	

#Text=We need to change two paramaters
#Text=Modify the value for apg_plan_mgmt.capture_plan_baselines parameter to automatic
#Text=Modify the value for apg_plan_mgmt.use_plan_baselines to true.
#Text=g.
23-1	4219-4221	We	
23-2	4222-4226	need	
23-3	4227-4229	to	
23-4	4230-4236	change	
23-5	4237-4240	two	
23-6	4241-4251	paramaters	
23-7	4252-4258	Modify	
23-8	4259-4262	the	
23-9	4263-4268	value	
23-10	4269-4272	for	
23-11	4273-4309	apg_plan_mgmt.capture_plan_baselines	
23-12	4310-4319	parameter	
23-13	4320-4322	to	
23-14	4323-4332	automatic	
23-15	4333-4339	Modify	
23-16	4340-4343	the	
23-17	4344-4349	value	
23-18	4350-4353	for	
23-19	4354-4386	apg_plan_mgmt.use_plan_baselines	
23-20	4387-4389	to	
23-21	4390-4394	true	
23-22	4394-4395	.	
23-23	4396-4397	g	
23-24	4397-4398	.	

#Text=Click on the Preview changes to verify the changes and click Save changes.
#Text=h.
24-1	4399-4404	Click	
24-2	4405-4407	on	
24-3	4408-4411	the	
24-4	4412-4419	Preview	
24-5	4420-4427	changes	
24-6	4428-4430	to	
24-7	4431-4437	verify	
24-8	4438-4441	the	
24-9	4442-4449	changes	
24-10	4450-4453	and	
24-11	4454-4459	click	
24-12	4460-4464	Save	
24-13	4465-4472	changes	
24-14	4472-4473	.	
24-15	4474-4475	h	
24-16	4475-4476	.	

#Text=Click Databases on the left navigation panel and wait for the status of the instance to change to available.
25-1	4477-4482	Click	
25-2	4483-4492	Databases	
25-3	4493-4495	on	
25-4	4496-4499	the	
25-5	4500-4504	left	
25-6	4505-4515	navigation	
25-7	4516-4521	panel	
25-8	4522-4525	and	
25-9	4526-4530	wait	
25-10	4531-4534	for	
25-11	4535-4538	the	
25-12	4539-4545	status	
25-13	4546-4548	of	
25-14	4549-4552	the	
25-15	4553-4561	instance	
25-16	4562-4564	to	
25-17	4565-4571	change	
25-18	4572-4574	to	
25-19	4575-4584	available	
25-20	4584-4585	.	

#Text=The parameter changes will take effect after an DB instance reboot as suggested on the configuration tab of the Aurora writer and reader instances.
#Text=i.
26-1	4586-4589	The	
26-2	4590-4599	parameter	
26-3	4600-4607	changes	
26-4	4608-4612	will	
26-5	4613-4617	take	
26-6	4618-4624	effect	
26-7	4625-4630	after	
26-8	4631-4633	an	
26-9	4634-4636	DB	
26-10	4637-4645	instance	
26-11	4646-4652	reboot	
26-12	4653-4655	as	
26-13	4656-4665	suggested	
26-14	4666-4668	on	
26-15	4669-4672	the	
26-16	4673-4686	configuration	
26-17	4687-4690	tab	
26-18	4691-4693	of	
26-19	4694-4697	the	
26-20	4698-4704	Aurora	
26-21	4705-4711	writer	
26-22	4712-4715	and	
26-23	4716-4722	reader	
26-24	4723-4732	instances	
26-25	4732-4733	.	
26-26	4734-4735	i	
26-27	4735-4736	.	

#Text=Reboot the writer node by selecting it and going to the Actions menu.
27-1	4737-4743	Reboot	
27-2	4744-4747	the	
27-3	4748-4754	writer	
27-4	4755-4759	node	
27-5	4760-4762	by	
27-6	4763-4772	selecting	
27-7	4773-4775	it	
27-8	4776-4779	and	
27-9	4780-4785	going	
27-10	4786-4788	to	
27-11	4789-4792	the	
27-12	4793-4800	Actions	
27-13	4801-4805	menu	
27-14	4805-4806	.	

#Text=The reader will automatically be rebooted after the writer reboots.
#Text=j.
28-1	4807-4810	The	
28-2	4811-4817	reader	
28-3	4818-4822	will	
28-4	4823-4836	automatically	
28-5	4837-4839	be	
28-6	4840-4848	rebooted	
28-7	4849-4854	after	
28-8	4855-4858	the	
28-9	4859-4865	writer	
28-10	4866-4873	reboots	
28-11	4873-4874	.	
28-12	4875-4876	j	
28-13	4876-4877	.	

#Text=Wait for the Status of Writer and Reader nodes to become Available.
#Text=1.2 Create and verify the apg_plan_mgmt extension for your DB instance.
#Text=a.
29-1	4878-4882	Wait	
29-2	4883-4886	for	
29-3	4887-4890	the	
29-4	4891-4897	Status	
29-5	4898-4900	of	
29-6	4901-4907	Writer	
29-7	4908-4911	and	
29-8	4912-4918	Reader	
29-9	4919-4924	nodes	
29-10	4925-4927	to	
29-11	4928-4934	become	
29-12	4935-4944	Available	
29-13	4944-4945	.	
29-14	4946-4949	1.2	
29-15	4950-4956	Create	
29-16	4957-4960	and	
29-17	4961-4967	verify	
29-18	4968-4971	the	
29-19	4972-4985	apg_plan_mgmt	
29-20	4986-4995	extension	
29-21	4996-4999	for	
29-22	5000-5004	your	
29-23	5005-5007	DB	
29-24	5008-5016	instance	
29-25	5016-5017	.	
29-26	5018-5019	a	
29-27	5019-5020	.	

#Text=Open a Cloud9 terminal window and create the apg_plan_mgmt extension for your DB instance.
#Text=psql
#Text=CREATE EXTENSION apg_plan_mgmt;
#Text=select extname,extversion from pg_extension where extname='apg_plan_mgmt';
#Text=You should see output similar to the following.
30-1	5021-5025	Open	
30-2	5026-5027	a	
30-3	5028-5034	Cloud9	
30-4	5035-5043	terminal	
30-5	5044-5050	window	
30-6	5051-5054	and	
30-7	5055-5061	create	
30-8	5062-5065	the	
30-9	5066-5079	apg_plan_mgmt	
30-10	5080-5089	extension	
30-11	5090-5093	for	
30-12	5094-5098	your	
30-13	5099-5101	DB	
30-14	5102-5110	instance	
30-15	5110-5111	.	
30-16	5112-5116	psql	
30-17	5117-5123	CREATE	
30-18	5124-5133	EXTENSION	
30-19	5134-5147	apg_plan_mgmt	
30-20	5147-5148	;	
30-21	5149-5155	select	
30-22	5156-5163	extname	
30-23	5163-5164	,	
30-24	5164-5174	extversion	
30-25	5175-5179	from	
30-26	5180-5192	pg_extension	
30-27	5193-5198	where	
30-28	5199-5206	extname	
30-29	5206-5207	=	
30-30	5207-5208	'	
30-31	5208-5221	apg_plan_mgmt	
30-32	5221-5222	'	
30-33	5222-5223	;	
30-34	5224-5227	You	
30-35	5228-5234	should	
30-36	5235-5238	see	
30-37	5239-5245	output	
30-38	5246-5253	similar	
30-39	5254-5256	to	
30-40	5257-5260	the	
30-41	5261-5270	following	
30-42	5270-5271	.	

#Text=The extension version will vary depending on the Aurora PostgreSQL version.
#Text=b.
31-1	5272-5275	The	
31-2	5276-5285	extension	
31-3	5286-5293	version	
31-4	5294-5298	will	
31-5	5299-5303	vary	
31-6	5304-5313	depending	
31-7	5314-5316	on	
31-8	5317-5320	the	
31-9	5321-5327	Aurora	
31-10	5328-5338	PostgreSQL	
31-11	5339-5346	version	
31-12	5346-5347	.	
31-13	5348-5349	b	
31-14	5349-5350	.	

#Text=Review all QPM related parameters are modified to the appropriate value by pasting the following queries.
#Text=show rds.enable_plan_management;
#Text=show apg_plan_mgmt.capture_plan_baselines;
#Text=show apg_plan_mgmt.use_plan_baselines;
#Text=The output should be:
#Text=rds.enable_plan_management
#Text=----------------------------
#Text=apg_plan_mgmt.capture_plan_baselines
#Text=--------------------------------------
#Text=automatic
#Text=apg_plan_mgmt.use_plan_baselines
#Text=----------------------------------
#Text=c. exit the psql command line by pressing Ctrl+d or typing \\q and pressing Enter.
#Text=1.3 Run synthetic workload with automatic capture.
#Text=a.
32-1	5351-5357	Review	
32-2	5358-5361	all	
32-3	5362-5365	QPM	
32-4	5366-5373	related	
32-5	5374-5384	parameters	
32-6	5385-5388	are	
32-7	5389-5397	modified	
32-8	5398-5400	to	
32-9	5401-5404	the	
32-10	5405-5416	appropriate	
32-11	5417-5422	value	
32-12	5423-5425	by	
32-13	5426-5433	pasting	
32-14	5434-5437	the	
32-15	5438-5447	following	
32-16	5448-5455	queries	
32-17	5455-5456	.	
32-18	5457-5461	show	
32-19	5462-5488	rds.enable_plan_management	
32-20	5488-5489	;	
32-21	5490-5494	show	
32-22	5495-5531	apg_plan_mgmt.capture_plan_baselines	
32-23	5531-5532	;	
32-24	5533-5537	show	
32-25	5538-5570	apg_plan_mgmt.use_plan_baselines	
32-26	5570-5571	;	
32-27	5572-5575	The	
32-28	5576-5582	output	
32-29	5583-5589	should	
32-30	5590-5592	be	
32-31	5592-5593	:	
32-32	5594-5620	rds.enable_plan_management	
32-33	5621-5622	-	
32-34	5622-5623	-	
32-35	5623-5624	-	
32-36	5624-5625	-	
32-37	5625-5626	-	
32-38	5626-5627	-	
32-39	5627-5628	-	
32-40	5628-5629	-	
32-41	5629-5630	-	
32-42	5630-5631	-	
32-43	5631-5632	-	
32-44	5632-5633	-	
32-45	5633-5634	-	
32-46	5634-5635	-	
32-47	5635-5636	-	
32-48	5636-5637	-	
32-49	5637-5638	-	
32-50	5638-5639	-	
32-51	5639-5640	-	
32-52	5640-5641	-	
32-53	5641-5642	-	
32-54	5642-5643	-	
32-55	5643-5644	-	
32-56	5644-5645	-	
32-57	5645-5646	-	
32-58	5646-5647	-	
32-59	5647-5648	-	
32-60	5648-5649	-	
32-61	5650-5686	apg_plan_mgmt.capture_plan_baselines	
32-62	5687-5688	-	
32-63	5688-5689	-	
32-64	5689-5690	-	
32-65	5690-5691	-	
32-66	5691-5692	-	
32-67	5692-5693	-	
32-68	5693-5694	-	
32-69	5694-5695	-	
32-70	5695-5696	-	
32-71	5696-5697	-	
32-72	5697-5698	-	
32-73	5698-5699	-	
32-74	5699-5700	-	
32-75	5700-5701	-	
32-76	5701-5702	-	
32-77	5702-5703	-	
32-78	5703-5704	-	
32-79	5704-5705	-	
32-80	5705-5706	-	
32-81	5706-5707	-	
32-82	5707-5708	-	
32-83	5708-5709	-	
32-84	5709-5710	-	
32-85	5710-5711	-	
32-86	5711-5712	-	
32-87	5712-5713	-	
32-88	5713-5714	-	
32-89	5714-5715	-	
32-90	5715-5716	-	
32-91	5716-5717	-	
32-92	5717-5718	-	
32-93	5718-5719	-	
32-94	5719-5720	-	
32-95	5720-5721	-	
32-96	5721-5722	-	
32-97	5722-5723	-	
32-98	5723-5724	-	
32-99	5724-5725	-	
32-100	5726-5735	automatic	
32-101	5736-5768	apg_plan_mgmt.use_plan_baselines	
32-102	5769-5770	-	
32-103	5770-5771	-	
32-104	5771-5772	-	
32-105	5772-5773	-	
32-106	5773-5774	-	
32-107	5774-5775	-	
32-108	5775-5776	-	
32-109	5776-5777	-	
32-110	5777-5778	-	
32-111	5778-5779	-	
32-112	5779-5780	-	
32-113	5780-5781	-	
32-114	5781-5782	-	
32-115	5782-5783	-	
32-116	5783-5784	-	
32-117	5784-5785	-	
32-118	5785-5786	-	
32-119	5786-5787	-	
32-120	5787-5788	-	
32-121	5788-5789	-	
32-122	5789-5790	-	
32-123	5790-5791	-	
32-124	5791-5792	-	
32-125	5792-5793	-	
32-126	5793-5794	-	
32-127	5794-5795	-	
32-128	5795-5796	-	
32-129	5796-5797	-	
32-130	5797-5798	-	
32-131	5798-5799	-	
32-132	5799-5800	-	
32-133	5800-5801	-	
32-134	5801-5802	-	
32-135	5802-5803	-	
32-136	5804-5805	c	
32-137	5805-5806	.	
32-138	5807-5811	exit	
32-139	5812-5815	the	
32-140	5816-5820	psql	
32-141	5821-5828	command	
32-142	5829-5833	line	
32-143	5834-5836	by	
32-144	5837-5845	pressing	
32-145	5846-5850	Ctrl	
32-146	5850-5851	+	
32-147	5851-5852	d	
32-148	5853-5855	or	
32-149	5856-5862	typing	
32-150	5863-5864	\	
32-151	5864-5865	q	
32-152	5866-5869	and	
32-153	5870-5878	pressing	
32-154	5879-5884	Enter	
32-155	5884-5885	.	
32-156	5886-5889	1.3	
32-157	5890-5893	Run	
32-158	5894-5903	synthetic	
32-159	5904-5912	workload	
32-160	5913-5917	with	
32-161	5918-5927	automatic	
32-162	5928-5935	capture	
32-163	5935-5936	.	
32-164	5937-5938	a	
32-165	5938-5939	.	

#Text=Open a terminal window in Cloud9 and run pgbench (a PostgreSQL benchmarking tool) to generate a simulated workload, which runs same queries for a specified period.
33-1	5940-5944	Open	
33-2	5945-5946	a	
33-3	5947-5955	terminal	
33-4	5956-5962	window	
33-5	5963-5965	in	
33-6	5966-5972	Cloud9	
33-7	5973-5976	and	
33-8	5977-5980	run	
33-9	5981-5988	pgbench	
33-10	5989-5990	(	
33-11	5990-5991	a	
33-12	5992-6002	PostgreSQL	
33-13	6003-6015	benchmarking	
33-14	6016-6020	tool	
33-15	6020-6021	)	
33-16	6022-6024	to	
33-17	6025-6033	generate	
33-18	6034-6035	a	
33-19	6036-6045	simulated	
33-20	6046-6054	workload	
33-21	6054-6055	,	
33-22	6056-6061	which	
33-23	6062-6066	runs	
33-24	6067-6071	same	
33-25	6072-6079	queries	
33-26	6080-6083	for	
33-27	6084-6085	a	
33-28	6086-6095	specified	
33-29	6096-6102	period	
33-30	6102-6103	.	

#Text=With automatic capture enabled, QPM captures plans for each query that runs at least twice.
#Text=pgbench --progress-timestamp -M prepared -n -T 100 -P 1
#Text=-c 500 -j 500 -b tpcb-like@1 -b select-only@20
#Text=b.
34-1	6104-6108	With	
34-2	6109-6118	automatic	
34-3	6119-6126	capture	
34-4	6127-6134	enabled	
34-5	6134-6135	,	
34-6	6136-6139	QPM	
34-7	6140-6148	captures	
34-8	6149-6154	plans	
34-9	6155-6158	for	
34-10	6159-6163	each	
34-11	6164-6169	query	
34-12	6170-6174	that	
34-13	6175-6179	runs	
34-14	6180-6182	at	
34-15	6183-6188	least	
34-16	6189-6194	twice	
34-17	6194-6195	.	
34-18	6196-6203	pgbench	
34-19	6204-6205	-	
34-20	6205-6206	-	
34-21	6206-6224	progress-timestamp	
34-22	6225-6226	-	
34-23	6226-6227	M	
34-24	6228-6236	prepared	
34-25	6237-6238	-	
34-26	6238-6239	n	
34-27	6240-6241	-	
34-28	6241-6242	T	
34-29	6243-6246	100	
34-30	6247-6248	-	
34-31	6248-6249	P	
34-32	6250-6251	1	
34-33	6252-6253	-	
34-34	6253-6254	c	
34-35	6255-6258	500	
34-36	6259-6260	-	
34-37	6260-6261	j	
34-38	6262-6265	500	
34-39	6266-6267	-	
34-40	6267-6268	b	
34-41	6269-6278	tpcb-like	
34-42	6278-6279	@	
34-43	6279-6280	1	
34-44	6281-6282	-	
34-45	6282-6283	b	
34-46	6284-6295	select-only	
34-47	6295-6296	@	
34-48	6296-6298	20	
34-49	6299-6300	b	
34-50	6300-6301	.	

#Text=Open another terminal window on Cloud9 to query apg_plan_mgmt.dba_plans table to view the managed statements and the execution plans for the SQL statements started with the pgbench tool.
35-1	6302-6306	Open	
35-2	6307-6314	another	
35-3	6315-6323	terminal	
35-4	6324-6330	window	
35-5	6331-6333	on	
35-6	6334-6340	Cloud9	
35-7	6341-6343	to	
35-8	6344-6349	query	
35-9	6350-6373	apg_plan_mgmt.dba_plans	
35-10	6374-6379	table	
35-11	6380-6382	to	
35-12	6383-6387	view	
35-13	6388-6391	the	
35-14	6392-6399	managed	
35-15	6400-6410	statements	
35-16	6411-6414	and	
35-17	6415-6418	the	
35-18	6419-6428	execution	
35-19	6429-6434	plans	
35-20	6435-6438	for	
35-21	6439-6442	the	
35-22	6443-6446	SQL	
35-23	6447-6457	statements	
35-24	6458-6465	started	
35-25	6466-6470	with	
35-26	6471-6474	the	
35-27	6475-6482	pgbench	
35-28	6483-6487	tool	
35-29	6487-6488	.	

#Text=Then run the following commands:
#Text=psql
#Text=SELECT sql_hash,
#Text=plan_hash,
#Text=status,
#Text=enabled,
#Text=sql_text
#Text=FROM
#Text=apg_plan_mgmt.dba_plans;
#Text=sql_hash
#Text=plan_hash
#Text=status
#Text=| enabled |
#Text=sql_text
#Text=-------------+-------------+----------+---------+-------------
#Text=474705734 |
#Text=695325866 | Approved | t
#Text=| SELECT abalance FROM pgbench_accounts WHERE aid = $1;
#Text=-2033469270 | -1987991358 | Approved | t
#Text=| UPDATE pgbench_tellers SET tbalance = tbalance + $1 WHERE tid = $2;
#Text=-1677381765 |
#Text=-225188843 | Approved | t
#Text=| UPDATE pgbench_branches SET bbalance = bbalance + $1 WHERE bid = $2;
#Text=(3 rows)
#Text=c.
36-1	6489-6493	Then	
36-2	6494-6497	run	
36-3	6498-6501	the	
36-4	6502-6511	following	
36-5	6512-6520	commands	
36-6	6520-6521	:	
36-7	6522-6526	psql	
36-8	6527-6533	SELECT	
36-9	6534-6542	sql_hash	
36-10	6542-6543	,	
36-11	6544-6553	plan_hash	
36-12	6553-6554	,	
36-13	6555-6561	status	
36-14	6561-6562	,	
36-15	6563-6570	enabled	
36-16	6570-6571	,	
36-17	6572-6580	sql_text	
36-18	6581-6585	FROM	
36-19	6586-6609	apg_plan_mgmt.dba_plans	
36-20	6609-6610	;	
36-21	6611-6619	sql_hash	
36-22	6620-6629	plan_hash	
36-23	6630-6636	status	
36-24	6637-6638	|	
36-25	6639-6646	enabled	
36-26	6647-6648	|	
36-27	6649-6657	sql_text	
36-28	6658-6659	-	
36-29	6659-6660	-	
36-30	6660-6661	-	
36-31	6661-6662	-	
36-32	6662-6663	-	
36-33	6663-6664	-	
36-34	6664-6665	-	
36-35	6665-6666	-	
36-36	6666-6667	-	
36-37	6667-6668	-	
36-38	6668-6669	-	
36-39	6669-6670	-	
36-40	6670-6671	-	
36-41	6671-6672	+	
36-42	6672-6673	-	
36-43	6673-6674	-	
36-44	6674-6675	-	
36-45	6675-6676	-	
36-46	6676-6677	-	
36-47	6677-6678	-	
36-48	6678-6679	-	
36-49	6679-6680	-	
36-50	6680-6681	-	
36-51	6681-6682	-	
36-52	6682-6683	-	
36-53	6683-6684	-	
36-54	6684-6685	-	
36-55	6685-6686	+	
36-56	6686-6687	-	
36-57	6687-6688	-	
36-58	6688-6689	-	
36-59	6689-6690	-	
36-60	6690-6691	-	
36-61	6691-6692	-	
36-62	6692-6693	-	
36-63	6693-6694	-	
36-64	6694-6695	-	
36-65	6695-6696	-	
36-66	6696-6697	+	
36-67	6697-6698	-	
36-68	6698-6699	-	
36-69	6699-6700	-	
36-70	6700-6701	-	
36-71	6701-6702	-	
36-72	6702-6703	-	
36-73	6703-6704	-	
36-74	6704-6705	-	
36-75	6705-6706	-	
36-76	6706-6707	+	
36-77	6707-6708	-	
36-78	6708-6709	-	
36-79	6709-6710	-	
36-80	6710-6711	-	
36-81	6711-6712	-	
36-82	6712-6713	-	
36-83	6713-6714	-	
36-84	6714-6715	-	
36-85	6715-6716	-	
36-86	6716-6717	-	
36-87	6717-6718	-	
36-88	6718-6719	-	
36-89	6719-6720	-	
36-90	6721-6730	474705734	
36-91	6731-6732	|	
36-92	6733-6742	695325866	
36-93	6743-6744	|	
36-94	6745-6753	Approved	
36-95	6754-6755	|	
36-96	6756-6757	t	
36-97	6758-6759	|	
36-98	6760-6766	SELECT	
36-99	6767-6775	abalance	
36-100	6776-6780	FROM	
36-101	6781-6797	pgbench_accounts	
36-102	6798-6803	WHERE	
36-103	6804-6807	aid	
36-104	6808-6809	=	
36-105	6810-6812	$1	
36-106	6812-6813	;	
36-107	6814-6815	-	
36-108	6815-6825	2033469270	
36-109	6826-6827	|	
36-110	6828-6829	-	
36-111	6829-6839	1987991358	
36-112	6840-6841	|	
36-113	6842-6850	Approved	
36-114	6851-6852	|	
36-115	6853-6854	t	
36-116	6855-6856	|	
36-117	6857-6863	UPDATE	
36-118	6864-6879	pgbench_tellers	
36-119	6880-6883	SET	
36-120	6884-6892	tbalance	
36-121	6893-6894	=	
36-122	6895-6903	tbalance	
36-123	6904-6905	+	
36-124	6906-6908	$1	
36-125	6909-6914	WHERE	
36-126	6915-6918	tid	
36-127	6919-6920	=	
36-128	6921-6923	$2	
36-129	6923-6924	;	
36-130	6925-6926	-	
36-131	6926-6936	1677381765	
36-132	6937-6938	|	
36-133	6939-6940	-	
36-134	6940-6949	225188843	
36-135	6950-6951	|	
36-136	6952-6960	Approved	
36-137	6961-6962	|	
36-138	6963-6964	t	
36-139	6965-6966	|	
36-140	6967-6973	UPDATE	
36-141	6974-6990	pgbench_branches	
36-142	6991-6994	SET	
36-143	6995-7003	bbalance	
36-144	7004-7005	=	
36-145	7006-7014	bbalance	
36-146	7015-7016	+	
36-147	7017-7019	$1	
36-148	7020-7025	WHERE	
36-149	7026-7029	bid	
36-150	7030-7031	=	
36-151	7032-7034	$2	
36-152	7034-7035	;	
36-153	7036-7037	(	
36-154	7037-7038	3	
36-155	7039-7043	rows	
36-156	7043-7044	)	
36-157	7045-7046	c	
36-158	7046-7047	.	

#Text=Turn off automatic capture of query plans.
37-1	7048-7052	Turn	
37-2	7053-7056	off	
37-3	7057-7066	automatic	
37-4	7067-7074	capture	
37-5	7075-7077	of	
37-6	7078-7083	query	
37-7	7084-7089	plans	
37-8	7089-7090	.	

#Text=Capturing all plans with automatic capture has little runtime overhead and can be enabled in production.
38-1	7091-7100	Capturing	
38-2	7101-7104	all	
38-3	7105-7110	plans	
38-4	7111-7115	with	
38-5	7116-7125	automatic	
38-6	7126-7133	capture	
38-7	7134-7137	has	
38-8	7138-7144	little	
38-9	7145-7152	runtime	
38-10	7153-7161	overhead	
38-11	7162-7165	and	
38-12	7166-7169	can	
38-13	7170-7172	be	
38-14	7173-7180	enabled	
38-15	7181-7183	in	
38-16	7184-7194	production	
38-17	7194-7195	.	

#Text=We are turning off the automatic capture to make sure that we don’t capture SQL statements outside the pgbench workload.
39-1	7196-7198	We	
39-2	7199-7202	are	
39-3	7203-7210	turning	
39-4	7211-7214	off	
39-5	7215-7218	the	
39-6	7219-7228	automatic	
39-7	7229-7236	capture	
39-8	7237-7239	to	
39-9	7240-7244	make	
39-10	7245-7249	sure	
39-11	7250-7254	that	
39-12	7255-7257	we	
39-13	7258-7261	don	
39-14	7261-7262	’	
39-15	7262-7263	t	
39-16	7264-7271	capture	
39-17	7272-7275	SQL	
39-18	7276-7286	statements	
39-19	7287-7294	outside	
39-20	7295-7298	the	
39-21	7299-7306	pgbench	
39-22	7307-7315	workload	
39-23	7315-7316	.	

#Text=This can be turned off by setting the apg_plan_mgmt.capture_plan_baselines parameter to off from the DB parameter group.
40-1	7317-7321	This	
40-2	7322-7325	can	
40-3	7326-7328	be	
40-4	7329-7335	turned	
40-5	7336-7339	off	
40-6	7340-7342	by	
40-7	7343-7350	setting	
40-8	7351-7354	the	
40-9	7355-7391	apg_plan_mgmt.capture_plan_baselines	
40-10	7392-7401	parameter	
40-11	7402-7404	to	
40-12	7405-7408	off	
40-13	7409-7413	from	
40-14	7414-7417	the	
40-15	7418-7420	DB	
40-16	7421-7430	parameter	
40-17	7431-7436	group	
40-18	7436-7437	.	

#Text=Verify parameter settings using PSQL.
#Text=show apg_plan_mgmt.capture_plan_baselines;
#Text=apg_plan_mgmt.capture_plan_baselines
#Text=--------------------------------------
#Text=Off
#Text=d.
41-1	7438-7444	Verify	
41-2	7445-7454	parameter	
41-3	7455-7463	settings	
41-4	7464-7469	using	
41-5	7470-7474	PSQL	
41-6	7474-7475	.	
41-7	7476-7480	show	
41-8	7481-7517	apg_plan_mgmt.capture_plan_baselines	
41-9	7517-7518	;	
41-10	7519-7555	apg_plan_mgmt.capture_plan_baselines	
41-11	7556-7557	-	
41-12	7557-7558	-	
41-13	7558-7559	-	
41-14	7559-7560	-	
41-15	7560-7561	-	
41-16	7561-7562	-	
41-17	7562-7563	-	
41-18	7563-7564	-	
41-19	7564-7565	-	
41-20	7565-7566	-	
41-21	7566-7567	-	
41-22	7567-7568	-	
41-23	7568-7569	-	
41-24	7569-7570	-	
41-25	7570-7571	-	
41-26	7571-7572	-	
41-27	7572-7573	-	
41-28	7573-7574	-	
41-29	7574-7575	-	
41-30	7575-7576	-	
41-31	7576-7577	-	
41-32	7577-7578	-	
41-33	7578-7579	-	
41-34	7579-7580	-	
41-35	7580-7581	-	
41-36	7581-7582	-	
41-37	7582-7583	-	
41-38	7583-7584	-	
41-39	7584-7585	-	
41-40	7585-7586	-	
41-41	7586-7587	-	
41-42	7587-7588	-	
41-43	7588-7589	-	
41-44	7589-7590	-	
41-45	7590-7591	-	
41-46	7591-7592	-	
41-47	7592-7593	-	
41-48	7593-7594	-	
41-49	7595-7598	Off	
41-50	7599-7600	d	
41-51	7600-7601	.	

#Text=Let’s verify that the execution plan for one of the managed statements is same as the plan captured by QPM.
42-1	7602-7605	Let	
42-2	7605-7606	’	
42-3	7606-7607	s	
42-4	7608-7614	verify	
42-5	7615-7619	that	
42-6	7620-7623	the	
42-7	7624-7633	execution	
42-8	7634-7638	plan	
42-9	7639-7642	for	
42-10	7643-7646	one	
42-11	7647-7649	of	
42-12	7650-7653	the	
42-13	7654-7661	managed	
42-14	7662-7672	statements	
42-15	7673-7675	is	
42-16	7676-7680	same	
42-17	7681-7683	as	
42-18	7684-7687	the	
42-19	7688-7692	plan	
42-20	7693-7701	captured	
42-21	7702-7704	by	
42-22	7705-7708	QPM	
42-23	7708-7709	.	

#Text=Execute explain plan on one of the managed statements.
43-1	7710-7717	Execute	
43-2	7718-7725	explain	
43-3	7726-7730	plan	
43-4	7731-7733	on	
43-5	7734-7737	one	
43-6	7738-7740	of	
43-7	7741-7744	the	
43-8	7745-7752	managed	
43-9	7753-7763	statements	
43-10	7763-7764	.	

#Text=The explain plan output shows that the SQL hash and the plan hash matches with the QPM approved plan for that statement.
#Text=explain (hashes true) UPDATE pgbench_tellers SET tbalance = tbalance + 100 WHERE tid = 200;
#Text=Output:
#Text=QUERY PLAN
#Text=----------------------------------------------------------------------
#Text=Update on pgbench_tellers
#Text=(cost=0.14..8.16 rows=1 width=358)
#Text=Index Scan using pgbench_tellers_pkey on pgbench_tellers
#Text=(cost=0.14..8.16 rows=1 width=358)
#Text=Index Cond: (tid = 200)
#Text=SQL Hash: -2033469270, Plan Hash: -1987991358
#Text=SQL Hash and Plan Hash values could vary during your lab runs, so please note your specific values for later use in lab.
44-1	7765-7768	The	
44-2	7769-7776	explain	
44-3	7777-7781	plan	
44-4	7782-7788	output	
44-5	7789-7794	shows	
44-6	7795-7799	that	
44-7	7800-7803	the	
44-8	7804-7807	SQL	
44-9	7808-7812	hash	
44-10	7813-7816	and	
44-11	7817-7820	the	
44-12	7821-7825	plan	
44-13	7826-7830	hash	
44-14	7831-7838	matches	
44-15	7839-7843	with	
44-16	7844-7847	the	
44-17	7848-7851	QPM	
44-18	7852-7860	approved	
44-19	7861-7865	plan	
44-20	7866-7869	for	
44-21	7870-7874	that	
44-22	7875-7884	statement	
44-23	7884-7885	.	
44-24	7886-7893	explain	
44-25	7894-7895	(	
44-26	7895-7901	hashes	
44-27	7902-7906	true	
44-28	7906-7907	)	
44-29	7908-7914	UPDATE	
44-30	7915-7930	pgbench_tellers	
44-31	7931-7934	SET	
44-32	7935-7943	tbalance	
44-33	7944-7945	=	
44-34	7946-7954	tbalance	
44-35	7955-7956	+	
44-36	7957-7960	100	
44-37	7961-7966	WHERE	
44-38	7967-7970	tid	
44-39	7971-7972	=	
44-40	7973-7976	200	
44-41	7976-7977	;	
44-42	7978-7984	Output	
44-43	7984-7985	:	
44-44	7986-7991	QUERY	
44-45	7992-7996	PLAN	
44-46	7997-7998	-	
44-47	7998-7999	-	
44-48	7999-8000	-	
44-49	8000-8001	-	
44-50	8001-8002	-	
44-51	8002-8003	-	
44-52	8003-8004	-	
44-53	8004-8005	-	
44-54	8005-8006	-	
44-55	8006-8007	-	
44-56	8007-8008	-	
44-57	8008-8009	-	
44-58	8009-8010	-	
44-59	8010-8011	-	
44-60	8011-8012	-	
44-61	8012-8013	-	
44-62	8013-8014	-	
44-63	8014-8015	-	
44-64	8015-8016	-	
44-65	8016-8017	-	
44-66	8017-8018	-	
44-67	8018-8019	-	
44-68	8019-8020	-	
44-69	8020-8021	-	
44-70	8021-8022	-	
44-71	8022-8023	-	
44-72	8023-8024	-	
44-73	8024-8025	-	
44-74	8025-8026	-	
44-75	8026-8027	-	
44-76	8027-8028	-	
44-77	8028-8029	-	
44-78	8029-8030	-	
44-79	8030-8031	-	
44-80	8031-8032	-	
44-81	8032-8033	-	
44-82	8033-8034	-	
44-83	8034-8035	-	
44-84	8035-8036	-	
44-85	8036-8037	-	
44-86	8037-8038	-	
44-87	8038-8039	-	
44-88	8039-8040	-	
44-89	8040-8041	-	
44-90	8041-8042	-	
44-91	8042-8043	-	
44-92	8043-8044	-	
44-93	8044-8045	-	
44-94	8045-8046	-	
44-95	8046-8047	-	
44-96	8047-8048	-	
44-97	8048-8049	-	
44-98	8049-8050	-	
44-99	8050-8051	-	
44-100	8051-8052	-	
44-101	8052-8053	-	
44-102	8053-8054	-	
44-103	8054-8055	-	
44-104	8055-8056	-	
44-105	8056-8057	-	
44-106	8057-8058	-	
44-107	8058-8059	-	
44-108	8059-8060	-	
44-109	8060-8061	-	
44-110	8061-8062	-	
44-111	8062-8063	-	
44-112	8063-8064	-	
44-113	8064-8065	-	
44-114	8065-8066	-	
44-115	8066-8067	-	
44-116	8068-8074	Update	
44-117	8075-8077	on	
44-118	8078-8093	pgbench_tellers	
44-119	8094-8095	(	
44-120	8095-8099	cost	
44-121	8099-8100	=	
44-122	8100-8104	0.14	
44-123	8104-8105	.	
44-124	8105-8110	.8.16	
44-125	8111-8115	rows	
44-126	8115-8116	=	
44-127	8116-8117	1	
44-128	8118-8123	width	
44-129	8123-8124	=	
44-130	8124-8127	358	
44-131	8127-8128	)	
44-132	8129-8134	Index	
44-133	8135-8139	Scan	
44-134	8140-8145	using	
44-135	8146-8166	pgbench_tellers_pkey	
44-136	8167-8169	on	
44-137	8170-8185	pgbench_tellers	
44-138	8186-8187	(	
44-139	8187-8191	cost	
44-140	8191-8192	=	
44-141	8192-8196	0.14	
44-142	8196-8197	.	
44-143	8197-8202	.8.16	
44-144	8203-8207	rows	
44-145	8207-8208	=	
44-146	8208-8209	1	
44-147	8210-8215	width	
44-148	8215-8216	=	
44-149	8216-8219	358	
44-150	8219-8220	)	
44-151	8221-8226	Index	
44-152	8227-8231	Cond	
44-153	8231-8232	:	
44-154	8233-8234	(	
44-155	8234-8237	tid	
44-156	8238-8239	=	
44-157	8240-8243	200	
44-158	8243-8244	)	
44-159	8245-8248	SQL	
44-160	8249-8253	Hash	
44-161	8253-8254	:	
44-162	8255-8256	-	
44-163	8256-8266	2033469270	
44-164	8266-8267	,	
44-165	8268-8272	Plan	
44-166	8273-8277	Hash	
44-167	8277-8278	:	
44-168	8279-8280	-	
44-169	8280-8290	1987991358	
44-170	8291-8294	SQL	
44-171	8295-8299	Hash	
44-172	8300-8303	and	
44-173	8304-8308	Plan	
44-174	8309-8313	Hash	
44-175	8314-8320	values	
44-176	8321-8326	could	
44-177	8327-8331	vary	
44-178	8332-8338	during	
44-179	8339-8343	your	
44-180	8344-8347	lab	
44-181	8348-8352	runs	
44-182	8352-8353	,	
44-183	8354-8356	so	
44-184	8357-8363	please	
44-185	8364-8368	note	
44-186	8369-8373	your	
44-187	8374-8382	specific	
44-188	8383-8389	values	
44-189	8390-8393	for	
44-190	8394-8399	later	
44-191	8400-8403	use	
44-192	8404-8406	in	
44-193	8407-8410	lab	
44-194	8410-8411	.	

#Text=In addition to automatic plan capture, QPM has manual plan capture capability, which offers a mechanism to capture execution plans for known problematic queries.
45-1	8412-8414	In	
45-2	8415-8423	addition	
45-3	8424-8426	to	
45-4	8427-8436	automatic	
45-5	8437-8441	plan	
45-6	8442-8449	capture	
45-7	8449-8450	,	
45-8	8451-8454	QPM	
45-9	8455-8458	has	
45-10	8459-8465	manual	
45-11	8466-8470	plan	
45-12	8471-8478	capture	
45-13	8479-8489	capability	
45-14	8489-8490	,	
45-15	8491-8496	which	
45-16	8497-8503	offers	
45-17	8504-8505	a	
45-18	8506-8515	mechanism	
45-19	8516-8518	to	
45-20	8519-8526	capture	
45-21	8527-8536	execution	
45-22	8537-8542	plans	
45-23	8543-8546	for	
45-24	8547-8552	known	
45-25	8553-8564	problematic	
45-26	8565-8572	queries	
45-27	8572-8573	.	

#Text=Capturing the plans automatically is recommended generally.
46-1	8574-8583	Capturing	
46-2	8584-8587	the	
46-3	8588-8593	plans	
46-4	8594-8607	automatically	
46-5	8608-8610	is	
46-6	8611-8622	recommended	
46-7	8623-8632	generally	
46-8	8632-8633	.	

#Text=However, there are situations where capturing plans manually would be the best option, such as:
#Text=You don’t want to enable plan management at the Database level, but you do want to control a few critical SQL statements only.
47-1	8634-8641	However	
47-2	8641-8642	,	
47-3	8643-8648	there	
47-4	8649-8652	are	
47-5	8653-8663	situations	
47-6	8664-8669	where	
47-7	8670-8679	capturing	
47-8	8680-8685	plans	
47-9	8686-8694	manually	
47-10	8695-8700	would	
47-11	8701-8703	be	
47-12	8704-8707	the	
47-13	8708-8712	best	
47-14	8713-8719	option	
47-15	8719-8720	,	
47-16	8721-8725	such	
47-17	8726-8728	as	
47-18	8728-8729	:	
47-19	8730-8733	You	
47-20	8734-8737	don	
47-21	8737-8738	’	
47-22	8738-8739	t	
47-23	8740-8744	want	
47-24	8745-8747	to	
47-25	8748-8754	enable	
47-26	8755-8759	plan	
47-27	8760-8770	management	
47-28	8771-8773	at	
47-29	8774-8777	the	
47-30	8778-8786	Database	
47-31	8787-8792	level	
47-32	8792-8793	,	
47-33	8794-8797	but	
47-34	8798-8801	you	
47-35	8802-8804	do	
47-36	8805-8809	want	
47-37	8810-8812	to	
47-38	8813-8820	control	
47-39	8821-8822	a	
47-40	8823-8826	few	
47-41	8827-8835	critical	
47-42	8836-8839	SQL	
47-43	8840-8850	statements	
47-44	8851-8855	only	
47-45	8855-8856	.	

#Text=You want to save the plan for a specific set of literals or parameter values that are causing a performance problem.
#Text=2.
48-1	8857-8860	You	
48-2	8861-8865	want	
48-3	8866-8868	to	
48-4	8869-8873	save	
48-5	8874-8877	the	
48-6	8878-8882	plan	
48-7	8883-8886	for	
48-8	8887-8888	a	
48-9	8889-8897	specific	
48-10	8898-8901	set	
48-11	8902-8904	of	
48-12	8905-8913	literals	
48-13	8914-8916	or	
48-14	8917-8926	parameter	
48-15	8927-8933	values	
48-16	8934-8938	that	
48-17	8939-8942	are	
48-18	8943-8950	causing	
48-19	8951-8952	a	
48-20	8953-8964	performance	
48-21	8965-8972	problem	
48-22	8972-8973	.	
48-23	8974-8975	2	
48-24	8975-8976	.	

#Text=QPM Plan adaptability with plan evolution mechanism
#Text=If the optimizer’s generated plan is not a stored plan, the optimizer captures and stores it as a new unapproved plan to preserve stability for the QPM-managed SQL statements.
49-1	8977-8980	QPM	
49-2	8981-8985	Plan	
49-3	8986-8998	adaptability	
49-4	8999-9003	with	
49-5	9004-9008	plan	
49-6	9009-9018	evolution	
49-7	9019-9028	mechanism	
49-8	9029-9031	If	
49-9	9032-9035	the	
49-10	9036-9045	optimizer	
49-11	9045-9046	’	
49-12	9046-9047	s	
49-13	9048-9057	generated	
49-14	9058-9062	plan	
49-15	9063-9065	is	
49-16	9066-9069	not	
49-17	9070-9071	a	
49-18	9072-9078	stored	
49-19	9079-9083	plan	
49-20	9083-9084	,	
49-21	9085-9088	the	
49-22	9089-9098	optimizer	
49-23	9099-9107	captures	
49-24	9108-9111	and	
49-25	9112-9118	stores	
49-26	9119-9121	it	
49-27	9122-9124	as	
49-28	9125-9126	a	
49-29	9127-9130	new	
49-30	9131-9141	unapproved	
49-31	9142-9146	plan	
49-32	9147-9149	to	
49-33	9150-9158	preserve	
49-34	9159-9168	stability	
49-35	9169-9172	for	
49-36	9173-9176	the	
49-37	9177-9188	QPM-managed	
49-38	9189-9192	SQL	
49-39	9193-9203	statements	
49-40	9203-9204	.	

#Text=Query plan management provides techniques and functions to add, maintain, and improve execution plans and thus provides Plan adaptability.
50-1	9205-9210	Query	
50-2	9211-9215	plan	
50-3	9216-9226	management	
50-4	9227-9235	provides	
50-5	9236-9246	techniques	
50-6	9247-9250	and	
50-7	9251-9260	functions	
50-8	9261-9263	to	
50-9	9264-9267	add	
50-10	9267-9268	,	
50-11	9269-9277	maintain	
50-12	9277-9278	,	
50-13	9279-9282	and	
50-14	9283-9290	improve	
50-15	9291-9300	execution	
50-16	9301-9306	plans	
50-17	9307-9310	and	
50-18	9311-9315	thus	
50-19	9316-9324	provides	
50-20	9325-9329	Plan	
50-21	9330-9342	adaptability	
50-22	9342-9343	.	

#Text=Users can instruct QPM on demand or periodically to evolve all the stored plans to see if there is a better minimum cost plan available than any of the approved plans.
51-1	9344-9349	Users	
51-2	9350-9353	can	
51-3	9354-9362	instruct	
51-4	9363-9366	QPM	
51-5	9367-9369	on	
51-6	9370-9376	demand	
51-7	9377-9379	or	
51-8	9380-9392	periodically	
51-9	9393-9395	to	
51-10	9396-9402	evolve	
51-11	9403-9406	all	
51-12	9407-9410	the	
51-13	9411-9417	stored	
51-14	9418-9423	plans	
51-15	9424-9426	to	
51-16	9427-9430	see	
51-17	9431-9433	if	
51-18	9434-9439	there	
51-19	9440-9442	is	
51-20	9443-9444	a	
51-21	9445-9451	better	
51-22	9452-9459	minimum	
51-23	9460-9464	cost	
51-24	9465-9469	plan	
51-25	9470-9479	available	
51-26	9480-9484	than	
51-27	9485-9488	any	
51-28	9489-9491	of	
51-29	9492-9495	the	
51-30	9496-9504	approved	
51-31	9505-9510	plans	
51-32	9510-9511	.	

#Text=QPM provides apg_plan_mgmt.evolve_plan_baselines function to compare plans based on their actual performance.
52-1	9512-9515	QPM	
52-2	9516-9524	provides	
52-3	9525-9560	apg_plan_mgmt.evolve_plan_baselines	
52-4	9561-9569	function	
52-5	9570-9572	to	
52-6	9573-9580	compare	
52-7	9581-9586	plans	
52-8	9587-9592	based	
52-9	9593-9595	on	
52-10	9596-9601	their	
52-11	9602-9608	actual	
52-12	9609-9620	performance	
52-13	9620-9621	.	

#Text=Depending on the outcome of your performance experiments, you can change a plan’s status from unapproved to either approved or rejected.
53-1	9622-9631	Depending	
53-2	9632-9634	on	
53-3	9635-9638	the	
53-4	9639-9646	outcome	
53-5	9647-9649	of	
53-6	9650-9654	your	
53-7	9655-9666	performance	
53-8	9667-9678	experiments	
53-9	9678-9679	,	
53-10	9680-9683	you	
53-11	9684-9687	can	
53-12	9688-9694	change	
53-13	9695-9696	a	
53-14	9697-9701	plan	
53-15	9701-9702	’	
53-16	9702-9703	s	
53-17	9704-9710	status	
53-18	9711-9715	from	
53-19	9716-9726	unapproved	
53-20	9727-9729	to	
53-21	9730-9736	either	
53-22	9737-9745	approved	
53-23	9746-9748	or	
53-24	9749-9757	rejected	
53-25	9757-9758	.	

#Text=You can instead decide to use the apg_plan_mgmt.evolve_plan_baselines function to temporarily disable a plan if it does not meet your requirements.
54-1	9759-9762	You	
54-2	9763-9766	can	
54-3	9767-9774	instead	
54-4	9775-9781	decide	
54-5	9782-9784	to	
54-6	9785-9788	use	
54-7	9789-9792	the	
54-8	9793-9828	apg_plan_mgmt.evolve_plan_baselines	
54-9	9829-9837	function	
54-10	9838-9840	to	
54-11	9841-9852	temporarily	
54-12	9853-9860	disable	
54-13	9861-9862	a	
54-14	9863-9867	plan	
54-15	9868-9870	if	
54-16	9871-9873	it	
54-17	9874-9878	does	
54-18	9879-9882	not	
54-19	9883-9887	meet	
54-20	9888-9892	your	
54-21	9893-9905	requirements	
54-22	9905-9906	.	

#Text=For additional details about the QPM Plan evolution, see Evaluating Plan Performance.
55-1	9907-9910	For	
55-2	9911-9921	additional	
55-3	9922-9929	details	
55-4	9930-9935	about	
55-5	9936-9939	the	
55-6	9940-9943	QPM	
55-7	9944-9948	Plan	
55-8	9949-9958	evolution	
55-9	9958-9959	,	
55-10	9960-9963	see	
55-11	9964-9974	Evaluating	
55-12	9975-9979	Plan	
55-13	9980-9991	Performance	
55-14	9991-9992	.	

#Text=For the first use case, we’ll walk through an example on how QPM helps ensure plan stability where various changes can result in plan regression.
56-1	9993-9996	For	
56-2	9997-10000	the	
56-3	10001-10006	first	
56-4	10007-10010	use	
56-5	10011-10015	case	
56-6	10015-10016	,	
56-7	10017-10019	we	
56-8	10019-10020	’	
56-9	10020-10022	ll	
56-10	10023-10027	walk	
56-11	10028-10035	through	
56-12	10036-10038	an	
56-13	10039-10046	example	
56-14	10047-10049	on	
56-15	10050-10053	how	
56-16	10054-10057	QPM	
56-17	10058-10063	helps	
56-18	10064-10070	ensure	
56-19	10071-10075	plan	
56-20	10076-10085	stability	
56-21	10086-10091	where	
56-22	10092-10099	various	
56-23	10100-10107	changes	
56-24	10108-10111	can	
56-25	10112-10118	result	
56-26	10119-10121	in	
56-27	10122-10126	plan	
56-28	10127-10137	regression	
56-29	10137-10138	.	

#Text=In most cases, you set up QPM to use automatic plan capture so that plans are captured for all statements that run two or more times.
57-1	10139-10141	In	
57-2	10142-10146	most	
57-3	10147-10152	cases	
57-4	10152-10153	,	
57-5	10154-10157	you	
57-6	10158-10161	set	
57-7	10162-10164	up	
57-8	10165-10168	QPM	
57-9	10169-10171	to	
57-10	10172-10175	use	
57-11	10176-10185	automatic	
57-12	10186-10190	plan	
57-13	10191-10198	capture	
57-14	10199-10201	so	
57-15	10202-10206	that	
57-16	10207-10212	plans	
57-17	10213-10216	are	
57-18	10217-10225	captured	
57-19	10226-10229	for	
57-20	10230-10233	all	
57-21	10234-10244	statements	
57-22	10245-10249	that	
57-23	10250-10253	run	
57-24	10254-10257	two	
57-25	10258-10260	or	
57-26	10261-10265	more	
57-27	10266-10271	times	
57-28	10271-10272	.	

#Text=However, you can also capture plans for a specific set of statements that you specify manually.
58-1	10273-10280	However	
58-2	10280-10281	,	
58-3	10282-10285	you	
58-4	10286-10289	can	
58-5	10290-10294	also	
58-6	10295-10302	capture	
58-7	10303-10308	plans	
58-8	10309-10312	for	
58-9	10313-10314	a	
58-10	10315-10323	specific	
58-11	10324-10327	set	
58-12	10328-10330	of	
58-13	10331-10341	statements	
58-14	10342-10346	that	
58-15	10347-10350	you	
58-16	10351-10358	specify	
58-17	10359-10367	manually	
58-18	10367-10368	.	

#Text=To do this, you set apg_plan_mgmt.capture_plan_baselines = off in the DB parameter group (which is the default) and apg_plan_mgmt.capture_plan_baselines = manual at the session level.
#Text=a.
59-1	10369-10371	To	
59-2	10372-10374	do	
59-3	10375-10379	this	
59-4	10379-10380	,	
59-5	10381-10384	you	
59-6	10385-10388	set	
59-7	10389-10425	apg_plan_mgmt.capture_plan_baselines	
59-8	10426-10427	=	
59-9	10428-10431	off	
59-10	10432-10434	in	
59-11	10435-10438	the	
59-12	10439-10441	DB	
59-13	10442-10451	parameter	
59-14	10452-10457	group	
59-15	10458-10459	(	
59-16	10459-10464	which	
59-17	10465-10467	is	
59-18	10468-10471	the	
59-19	10472-10479	default	
59-20	10479-10480	)	
59-21	10481-10484	and	
59-22	10485-10521	apg_plan_mgmt.capture_plan_baselines	
59-23	10522-10523	=	
59-24	10524-10530	manual	
59-25	10531-10533	at	
59-26	10534-10537	the	
59-27	10538-10545	session	
59-28	10546-10551	level	
59-29	10551-10552	.	
59-30	10553-10554	a	
59-31	10554-10555	.	

#Text=Enable manual plan capture to instruct QPM to capture the execution plan of the desired SQL statements manually.
60-1	10556-10562	Enable	
60-2	10563-10569	manual	
60-3	10570-10574	plan	
60-4	10575-10582	capture	
60-5	10583-10585	to	
60-6	10586-10594	instruct	
60-7	10595-10598	QPM	
60-8	10599-10601	to	
60-9	10602-10609	capture	
60-10	10610-10613	the	
60-11	10614-10623	execution	
60-12	10624-10628	plan	
60-13	10629-10631	of	
60-14	10632-10635	the	
60-15	10636-10643	desired	
60-16	10644-10647	SQL	
60-17	10648-10658	statements	
60-18	10659-10667	manually	
60-19	10667-10668	.	

#Text=SET apg_plan_mgmt.capture_plan_baselines = manual;
#Text=b.
61-1	10669-10672	SET	
61-2	10673-10709	apg_plan_mgmt.capture_plan_baselines	
61-3	10710-10711	=	
61-4	10712-10718	manual	
61-5	10718-10719	;	
61-6	10720-10721	b	
61-7	10721-10722	.	

#Text=Run explain plan for a specific query so that QPM can capture the execution plan (the following output for the explain plan is truncated for brevity).
#Text=explain (hashes true)
#Text=SELECT Sum(delta),
#Text=Sum(bbalance)
#Text=FROM
#Text=pgbench_history h,
#Text=pgbench_branches b
#Text=WHERE
#Text=b.bid = h.bid
#Text=AND b.bid IN ( 1, 2, 3 )
#Text=AND mtime BETWEEN (SELECT Min(mtime)
#Text=FROM
#Text=pgbench_history mn) AND (SELECT Max(mtime)
#Text=FROM
#Text=pgbench_history mx);
#Text=Output:
#Text=QUERY PLAN
#Text=----------------------------------------------------------------------
#Text=Aggregate
#Text=(cost=23228.13..23228.14 rows=1 width=16)
#Text=InitPlan 1 (returns $1)
#Text=Finalize Aggregate
#Text=(cost=6966.00..6966.01 rows=1 width=8)
#Text=Gather
#Text=(cost=6965.89..6966.00 rows=1 width=8)
#Text=Workers Planned: 1
#Text=Partial Aggregate
#Text=(cost=5965.89..5965.90 rows=1 width=8)
#Text=Parallel Seq Scan on pgbench_history mn
#Text=(cost=0.00..5346.11 rows=247911 width=8)
#Text=InitPlan 2 (returns $3)
#Text=Finalize Aggregate
#Text=(cost=6966.00..6966.01 rows=1 width=8)
#Text=Gather
#Text=(cost=6965.89..6966.00 rows=1 width=8)
#Text=Workers Planned: 1
#Text=Partial Aggregate
#Text=(cost=5965.89..5965.90 rows=1 width=8)
#Text=Parallel Seq Scan on pgbench_history mx
#Text=(cost=0.00..5346.11 rows=247911 width=8)
#Text=Nested Loop
#Text=(cost=0.00..9292.95 rows=632 width=8)
#Text=Join Filter: (h.bid = b.bid)
#Text=Seq Scan on pgbench_history h
#Text=(cost=0.00..9188.74 rows=2107 width=8)
#Text=Filter: ((mtime >= $1) AND (mtime <= $3))
#Text=Materialize
#Text=(cost=0.00..14.15 rows=3 width=8)
#Text=Seq Scan on pgbench_branches b
#Text=(cost=0.00..14.14 rows=3 width=8)
#Text=Filter: (bid = ANY ('{1,2,3}'::integer[]))
#Text=………………………………………………………………………..
62-1	10723-10726	Run	
62-2	10727-10734	explain	
62-3	10735-10739	plan	
62-4	10740-10743	for	
62-5	10744-10745	a	
62-6	10746-10754	specific	
62-7	10755-10760	query	
62-8	10761-10763	so	
62-9	10764-10768	that	
62-10	10769-10772	QPM	
62-11	10773-10776	can	
62-12	10777-10784	capture	
62-13	10785-10788	the	
62-14	10789-10798	execution	
62-15	10799-10803	plan	
62-16	10804-10805	(	
62-17	10805-10808	the	
62-18	10809-10818	following	
62-19	10819-10825	output	
62-20	10826-10829	for	
62-21	10830-10833	the	
62-22	10834-10841	explain	
62-23	10842-10846	plan	
62-24	10847-10849	is	
62-25	10850-10859	truncated	
62-26	10860-10863	for	
62-27	10864-10871	brevity	
62-28	10871-10872	)	
62-29	10872-10873	.	
62-30	10874-10881	explain	
62-31	10882-10883	(	
62-32	10883-10889	hashes	
62-33	10890-10894	true	
62-34	10894-10895	)	
62-35	10896-10902	SELECT	
62-36	10903-10906	Sum	
62-37	10906-10907	(	
62-38	10907-10912	delta	
62-39	10912-10913	)	
62-40	10913-10914	,	
62-41	10915-10918	Sum	
62-42	10918-10919	(	
62-43	10919-10927	bbalance	
62-44	10927-10928	)	
62-45	10929-10933	FROM	
62-46	10934-10949	pgbench_history	
62-47	10950-10951	h	
62-48	10951-10952	,	
62-49	10953-10969	pgbench_branches	
62-50	10970-10971	b	
62-51	10972-10977	WHERE	
62-52	10978-10983	b.bid	
62-53	10984-10985	=	
62-54	10986-10991	h.bid	
62-55	10992-10995	AND	
62-56	10996-11001	b.bid	
62-57	11002-11004	IN	
62-58	11005-11006	(	
62-59	11007-11008	1	
62-60	11008-11009	,	
62-61	11010-11011	2	
62-62	11011-11012	,	
62-63	11013-11014	3	
62-64	11015-11016	)	
62-65	11017-11020	AND	
62-66	11021-11026	mtime	
62-67	11027-11034	BETWEEN	
62-68	11035-11036	(	
62-69	11036-11042	SELECT	
62-70	11043-11046	Min	
62-71	11046-11047	(	
62-72	11047-11052	mtime	
62-73	11052-11053	)	
62-74	11054-11058	FROM	
62-75	11059-11074	pgbench_history	
62-76	11075-11077	mn	
62-77	11077-11078	)	
62-78	11079-11082	AND	
62-79	11083-11084	(	
62-80	11084-11090	SELECT	
62-81	11091-11094	Max	
62-82	11094-11095	(	
62-83	11095-11100	mtime	
62-84	11100-11101	)	
62-85	11102-11106	FROM	
62-86	11107-11122	pgbench_history	
62-87	11123-11125	mx	
62-88	11125-11126	)	
62-89	11126-11127	;	
62-90	11128-11134	Output	
62-91	11134-11135	:	
62-92	11136-11141	QUERY	
62-93	11142-11146	PLAN	
62-94	11147-11148	-	
62-95	11148-11149	-	
62-96	11149-11150	-	
62-97	11150-11151	-	
62-98	11151-11152	-	
62-99	11152-11153	-	
62-100	11153-11154	-	
62-101	11154-11155	-	
62-102	11155-11156	-	
62-103	11156-11157	-	
62-104	11157-11158	-	
62-105	11158-11159	-	
62-106	11159-11160	-	
62-107	11160-11161	-	
62-108	11161-11162	-	
62-109	11162-11163	-	
62-110	11163-11164	-	
62-111	11164-11165	-	
62-112	11165-11166	-	
62-113	11166-11167	-	
62-114	11167-11168	-	
62-115	11168-11169	-	
62-116	11169-11170	-	
62-117	11170-11171	-	
62-118	11171-11172	-	
62-119	11172-11173	-	
62-120	11173-11174	-	
62-121	11174-11175	-	
62-122	11175-11176	-	
62-123	11176-11177	-	
62-124	11177-11178	-	
62-125	11178-11179	-	
62-126	11179-11180	-	
62-127	11180-11181	-	
62-128	11181-11182	-	
62-129	11182-11183	-	
62-130	11183-11184	-	
62-131	11184-11185	-	
62-132	11185-11186	-	
62-133	11186-11187	-	
62-134	11187-11188	-	
62-135	11188-11189	-	
62-136	11189-11190	-	
62-137	11190-11191	-	
62-138	11191-11192	-	
62-139	11192-11193	-	
62-140	11193-11194	-	
62-141	11194-11195	-	
62-142	11195-11196	-	
62-143	11196-11197	-	
62-144	11197-11198	-	
62-145	11198-11199	-	
62-146	11199-11200	-	
62-147	11200-11201	-	
62-148	11201-11202	-	
62-149	11202-11203	-	
62-150	11203-11204	-	
62-151	11204-11205	-	
62-152	11205-11206	-	
62-153	11206-11207	-	
62-154	11207-11208	-	
62-155	11208-11209	-	
62-156	11209-11210	-	
62-157	11210-11211	-	
62-158	11211-11212	-	
62-159	11212-11213	-	
62-160	11213-11214	-	
62-161	11214-11215	-	
62-162	11215-11216	-	
62-163	11216-11217	-	
62-164	11218-11227	Aggregate	
62-165	11228-11229	(	
62-166	11229-11233	cost	
62-167	11233-11234	=	
62-168	11234-11242	23228.13	
62-169	11242-11243	.	
62-170	11243-11252	.23228.14	
62-171	11253-11257	rows	
62-172	11257-11258	=	
62-173	11258-11259	1	
62-174	11260-11265	width	
62-175	11265-11266	=	
62-176	11266-11268	16	
62-177	11268-11269	)	
62-178	11270-11278	InitPlan	
62-179	11279-11280	1	
62-180	11281-11282	(	
62-181	11282-11289	returns	
62-182	11290-11292	$1	
62-183	11292-11293	)	
62-184	11294-11302	Finalize	
62-185	11303-11312	Aggregate	
62-186	11313-11314	(	
62-187	11314-11318	cost	
62-188	11318-11319	=	
62-189	11319-11326	6966.00	
62-190	11326-11327	.	
62-191	11327-11335	.6966.01	
62-192	11336-11340	rows	
62-193	11340-11341	=	
62-194	11341-11342	1	
62-195	11343-11348	width	
62-196	11348-11349	=	
62-197	11349-11350	8	
62-198	11350-11351	)	
62-199	11352-11358	Gather	
62-200	11359-11360	(	
62-201	11360-11364	cost	
62-202	11364-11365	=	
62-203	11365-11372	6965.89	
62-204	11372-11373	.	
62-205	11373-11381	.6966.00	
62-206	11382-11386	rows	
62-207	11386-11387	=	
62-208	11387-11388	1	
62-209	11389-11394	width	
62-210	11394-11395	=	
62-211	11395-11396	8	
62-212	11396-11397	)	
62-213	11398-11405	Workers	
62-214	11406-11413	Planned	
62-215	11413-11414	:	
62-216	11415-11416	1	
62-217	11417-11424	Partial	
62-218	11425-11434	Aggregate	
62-219	11435-11436	(	
62-220	11436-11440	cost	
62-221	11440-11441	=	
62-222	11441-11448	5965.89	
62-223	11448-11449	.	
62-224	11449-11457	.5965.90	
62-225	11458-11462	rows	
62-226	11462-11463	=	
62-227	11463-11464	1	
62-228	11465-11470	width	
62-229	11470-11471	=	
62-230	11471-11472	8	
62-231	11472-11473	)	
62-232	11474-11482	Parallel	
62-233	11483-11486	Seq	
62-234	11487-11491	Scan	
62-235	11492-11494	on	
62-236	11495-11510	pgbench_history	
62-237	11511-11513	mn	
62-238	11514-11515	(	
62-239	11515-11519	cost	
62-240	11519-11520	=	
62-241	11520-11524	0.00	
62-242	11524-11525	.	
62-243	11525-11533	.5346.11	
62-244	11534-11538	rows	
62-245	11538-11539	=	
62-246	11539-11545	247911	
62-247	11546-11551	width	
62-248	11551-11552	=	
62-249	11552-11553	8	
62-250	11553-11554	)	
62-251	11555-11563	InitPlan	
62-252	11564-11565	2	
62-253	11566-11567	(	
62-254	11567-11574	returns	
62-255	11575-11577	$3	
62-256	11577-11578	)	
62-257	11579-11587	Finalize	
62-258	11588-11597	Aggregate	
62-259	11598-11599	(	
62-260	11599-11603	cost	
62-261	11603-11604	=	
62-262	11604-11611	6966.00	
62-263	11611-11612	.	
62-264	11612-11620	.6966.01	
62-265	11621-11625	rows	
62-266	11625-11626	=	
62-267	11626-11627	1	
62-268	11628-11633	width	
62-269	11633-11634	=	
62-270	11634-11635	8	
62-271	11635-11636	)	
62-272	11637-11643	Gather	
62-273	11644-11645	(	
62-274	11645-11649	cost	
62-275	11649-11650	=	
62-276	11650-11657	6965.89	
62-277	11657-11658	.	
62-278	11658-11666	.6966.00	
62-279	11667-11671	rows	
62-280	11671-11672	=	
62-281	11672-11673	1	
62-282	11674-11679	width	
62-283	11679-11680	=	
62-284	11680-11681	8	
62-285	11681-11682	)	
62-286	11683-11690	Workers	
62-287	11691-11698	Planned	
62-288	11698-11699	:	
62-289	11700-11701	1	
62-290	11702-11709	Partial	
62-291	11710-11719	Aggregate	
62-292	11720-11721	(	
62-293	11721-11725	cost	
62-294	11725-11726	=	
62-295	11726-11733	5965.89	
62-296	11733-11734	.	
62-297	11734-11742	.5965.90	
62-298	11743-11747	rows	
62-299	11747-11748	=	
62-300	11748-11749	1	
62-301	11750-11755	width	
62-302	11755-11756	=	
62-303	11756-11757	8	
62-304	11757-11758	)	
62-305	11759-11767	Parallel	
62-306	11768-11771	Seq	
62-307	11772-11776	Scan	
62-308	11777-11779	on	
62-309	11780-11795	pgbench_history	
62-310	11796-11798	mx	
62-311	11799-11800	(	
62-312	11800-11804	cost	
62-313	11804-11805	=	
62-314	11805-11809	0.00	
62-315	11809-11810	.	
62-316	11810-11818	.5346.11	
62-317	11819-11823	rows	
62-318	11823-11824	=	
62-319	11824-11830	247911	
62-320	11831-11836	width	
62-321	11836-11837	=	
62-322	11837-11838	8	
62-323	11838-11839	)	
62-324	11840-11846	Nested	
62-325	11847-11851	Loop	
62-326	11852-11853	(	
62-327	11853-11857	cost	
62-328	11857-11858	=	
62-329	11858-11862	0.00	
62-330	11862-11863	.	
62-331	11863-11871	.9292.95	
62-332	11872-11876	rows	
62-333	11876-11877	=	
62-334	11877-11880	632	
62-335	11881-11886	width	
62-336	11886-11887	=	
62-337	11887-11888	8	
62-338	11888-11889	)	
62-339	11890-11894	Join	
62-340	11895-11901	Filter	
62-341	11901-11902	:	
62-342	11903-11904	(	
62-343	11904-11909	h.bid	
62-344	11910-11911	=	
62-345	11912-11917	b.bid	
62-346	11917-11918	)	
62-347	11919-11922	Seq	
62-348	11923-11927	Scan	
62-349	11928-11930	on	
62-350	11931-11946	pgbench_history	
62-351	11947-11948	h	
62-352	11949-11950	(	
62-353	11950-11954	cost	
62-354	11954-11955	=	
62-355	11955-11959	0.00	
62-356	11959-11960	.	
62-357	11960-11968	.9188.74	
62-358	11969-11973	rows	
62-359	11973-11974	=	
62-360	11974-11978	2107	
62-361	11979-11984	width	
62-362	11984-11985	=	
62-363	11985-11986	8	
62-364	11986-11987	)	
62-365	11988-11994	Filter	
62-366	11994-11995	:	
62-367	11996-11997	(	
62-368	11997-11998	(	
62-369	11998-12003	mtime	
62-370	12004-12005	>	
62-371	12005-12006	=	
62-372	12007-12009	$1	
62-373	12009-12010	)	
62-374	12011-12014	AND	
62-375	12015-12016	(	
62-376	12016-12021	mtime	
62-377	12022-12023	<	
62-378	12023-12024	=	
62-379	12025-12027	$3	
62-380	12027-12028	)	
62-381	12028-12029	)	
62-382	12030-12041	Materialize	
62-383	12042-12043	(	
62-384	12043-12047	cost	
62-385	12047-12048	=	
62-386	12048-12052	0.00	
62-387	12052-12053	.	
62-388	12053-12059	.14.15	
62-389	12060-12064	rows	
62-390	12064-12065	=	
62-391	12065-12066	3	
62-392	12067-12072	width	
62-393	12072-12073	=	
62-394	12073-12074	8	
62-395	12074-12075	)	
62-396	12076-12079	Seq	
62-397	12080-12084	Scan	
62-398	12085-12087	on	
62-399	12088-12104	pgbench_branches	
62-400	12105-12106	b	
62-401	12107-12108	(	
62-402	12108-12112	cost	
62-403	12112-12113	=	
62-404	12113-12117	0.00	
62-405	12117-12118	.	
62-406	12118-12124	.14.14	
62-407	12125-12129	rows	
62-408	12129-12130	=	
62-409	12130-12131	3	
62-410	12132-12137	width	
62-411	12137-12138	=	
62-412	12138-12139	8	
62-413	12139-12140	)	
62-414	12141-12147	Filter	
62-415	12147-12148	:	
62-416	12149-12150	(	
62-417	12150-12153	bid	
62-418	12154-12155	=	
62-419	12156-12159	ANY	
62-420	12160-12161	(	
62-421	12161-12162	'	
62-422	12162-12163	{	
62-423	12163-12168	1,2,3	
62-424	12168-12169	}	
62-425	12169-12170	'	
62-426	12170-12171	:	
62-427	12171-12172	:	
62-428	12172-12179	integer	
62-429	12179-12180	[	
62-430	12180-12181	]	
62-431	12181-12182	)	
62-432	12182-12183	)	
62-433	12184-12185	…	
62-434	12185-12186	…	
62-435	12186-12187	…	
62-436	12187-12188	…	
62-437	12188-12189	…	
62-438	12189-12190	…	
62-439	12190-12191	…	
62-440	12191-12192	…	
62-441	12192-12193	…	
62-442	12193-12194	…	
62-443	12194-12195	…	
62-444	12195-12196	…	
62-445	12196-12197	…	
62-446	12197-12198	…	
62-447	12198-12199	…	
62-448	12199-12200	…	
62-449	12200-12201	…	
62-450	12201-12202	…	
62-451	12202-12203	…	
62-452	12203-12204	…	
62-453	12204-12205	…	
62-454	12205-12206	…	
62-455	12206-12207	…	
62-456	12207-12208	…	
62-457	12208-12209	…	
62-458	12209-12210	…	
62-459	12210-12211	…	
62-460	12211-12212	.	
62-461	12212-12213	.	

#Text=SQL Hash: 1561242727, Plan Hash: -1990695905
#Text=c.
63-1	12214-12217	SQL	
63-2	12218-12222	Hash	
63-3	12222-12223	:	
63-4	12224-12234	1561242727	
63-5	12234-12235	,	
63-6	12236-12240	Plan	
63-7	12241-12245	Hash	
63-8	12245-12246	:	
63-9	12247-12248	-	
63-10	12248-12258	1990695905	
63-11	12259-12260	c	
63-12	12260-12261	.	

#Text=Disable manual capture of the plan after you capture the execution plan for the desired SQL statement.
64-1	12262-12269	Disable	
64-2	12270-12276	manual	
64-3	12277-12284	capture	
64-4	12285-12287	of	
64-5	12288-12291	the	
64-6	12292-12296	plan	
64-7	12297-12302	after	
64-8	12303-12306	you	
64-9	12307-12314	capture	
64-10	12315-12318	the	
64-11	12319-12328	execution	
64-12	12329-12333	plan	
64-13	12334-12337	for	
64-14	12338-12341	the	
64-15	12342-12349	desired	
64-16	12350-12353	SQL	
64-17	12354-12363	statement	
64-18	12363-12364	.	

#Text=SET apg_plan_mgmt.capture_plan_baselines = off;
#Text=d.
65-1	12365-12368	SET	
65-2	12369-12405	apg_plan_mgmt.capture_plan_baselines	
65-3	12406-12407	=	
65-4	12408-12411	off	
65-5	12411-12412	;	
65-6	12413-12414	d	
65-7	12414-12415	.	

#Text=View captured query plan for the specific query that you ran previously.
66-1	12416-12420	View	
66-2	12421-12429	captured	
66-3	12430-12435	query	
66-4	12436-12440	plan	
66-5	12441-12444	for	
66-6	12445-12448	the	
66-7	12449-12457	specific	
66-8	12458-12463	query	
66-9	12464-12468	that	
66-10	12469-12472	you	
66-11	12473-12476	ran	
66-12	12477-12487	previously	
66-13	12487-12488	.	

#Text=The plan_outline column in the table apg_plan_mgmt.dba_plans shows the entire plan for the SQL.
67-1	12489-12492	The	
67-2	12493-12505	plan_outline	
67-3	12506-12512	column	
67-4	12513-12515	in	
67-5	12516-12519	the	
67-6	12520-12525	table	
67-7	12526-12549	apg_plan_mgmt.dba_plans	
67-8	12550-12555	shows	
67-9	12556-12559	the	
67-10	12560-12566	entire	
67-11	12567-12571	plan	
67-12	12572-12575	for	
67-13	12576-12579	the	
67-14	12580-12583	SQL	
67-15	12583-12584	.	

#Text=For brevity, the plan_outline isn’t shown here.
68-1	12585-12588	For	
68-2	12589-12596	brevity	
68-3	12596-12597	,	
68-4	12598-12601	the	
68-5	12602-12614	plan_outline	
68-6	12615-12618	isn	
68-7	12618-12619	’	
68-8	12619-12620	t	
68-9	12621-12626	shown	
68-10	12627-12631	here	
68-11	12631-12632	.	

#Text=Instead, plan_hash_value from the explain plan preceding is compared with plan_hash from the output of the apg_plan_mgmt.dba_plans query.
69-1	12633-12640	Instead	
69-2	12640-12641	,	
69-3	12642-12657	plan_hash_value	
69-4	12658-12662	from	
69-5	12663-12666	the	
69-6	12667-12674	explain	
69-7	12675-12679	plan	
69-8	12680-12689	preceding	
69-9	12690-12692	is	
69-10	12693-12701	compared	
69-11	12702-12706	with	
69-12	12707-12716	plan_hash	
69-13	12717-12721	from	
69-14	12722-12725	the	
69-15	12726-12732	output	
69-16	12733-12735	of	
69-17	12736-12739	the	
69-18	12740-12763	apg_plan_mgmt.dba_plans	
69-19	12764-12769	query	
69-20	12769-12770	.	

#Text=SELECT sql_hash,
#Text=plan_hash,
#Text=status,
#Text=estimated_total_cost "cost",
#Text=sql_text
#Text=FROM apg_plan_mgmt.dba_plans;
#Text=Output:
#Text=sql_hash
#Text=plan_hash
#Text=status
#Text=| cost
#Text=| sql_text
#Text=------------+-------------+----------+---------+-----------------------------
#Text=1561242727\t-1990695905\t Approved \t 23228.14
#Text=select sum(delta),sum(bbalance) from pgbench_history h, pgbench_branches b where b.bid=h.bid and b.bid in (1,2,3) and mtime between (select min(mtime) from pgbench_history mn) and (select max(mtime) from pgbench_history mx);
#Text=e.
70-1	12771-12777	SELECT	
70-2	12778-12786	sql_hash	
70-3	12786-12787	,	
70-4	12788-12797	plan_hash	
70-5	12797-12798	,	
70-6	12799-12805	status	
70-7	12805-12806	,	
70-8	12807-12827	estimated_total_cost	
70-9	12828-12829	"	
70-10	12829-12833	cost	
70-11	12833-12834	"	
70-12	12834-12835	,	
70-13	12836-12844	sql_text	
70-14	12845-12849	FROM	
70-15	12850-12873	apg_plan_mgmt.dba_plans	
70-16	12873-12874	;	
70-17	12875-12881	Output	
70-18	12881-12882	:	
70-19	12883-12891	sql_hash	
70-20	12892-12901	plan_hash	
70-21	12902-12908	status	
70-22	12909-12910	|	
70-23	12911-12915	cost	
70-24	12916-12917	|	
70-25	12918-12926	sql_text	
70-26	12927-12928	-	
70-27	12928-12929	-	
70-28	12929-12930	-	
70-29	12930-12931	-	
70-30	12931-12932	-	
70-31	12932-12933	-	
70-32	12933-12934	-	
70-33	12934-12935	-	
70-34	12935-12936	-	
70-35	12936-12937	-	
70-36	12937-12938	-	
70-37	12938-12939	-	
70-38	12939-12940	+	
70-39	12940-12941	-	
70-40	12941-12942	-	
70-41	12942-12943	-	
70-42	12943-12944	-	
70-43	12944-12945	-	
70-44	12945-12946	-	
70-45	12946-12947	-	
70-46	12947-12948	-	
70-47	12948-12949	-	
70-48	12949-12950	-	
70-49	12950-12951	-	
70-50	12951-12952	-	
70-51	12952-12953	-	
70-52	12953-12954	+	
70-53	12954-12955	-	
70-54	12955-12956	-	
70-55	12956-12957	-	
70-56	12957-12958	-	
70-57	12958-12959	-	
70-58	12959-12960	-	
70-59	12960-12961	-	
70-60	12961-12962	-	
70-61	12962-12963	-	
70-62	12963-12964	-	
70-63	12964-12965	+	
70-64	12965-12966	-	
70-65	12966-12967	-	
70-66	12967-12968	-	
70-67	12968-12969	-	
70-68	12969-12970	-	
70-69	12970-12971	-	
70-70	12971-12972	-	
70-71	12972-12973	-	
70-72	12973-12974	-	
70-73	12974-12975	+	
70-74	12975-12976	-	
70-75	12976-12977	-	
70-76	12977-12978	-	
70-77	12978-12979	-	
70-78	12979-12980	-	
70-79	12980-12981	-	
70-80	12981-12982	-	
70-81	12982-12983	-	
70-82	12983-12984	-	
70-83	12984-12985	-	
70-84	12985-12986	-	
70-85	12986-12987	-	
70-86	12987-12988	-	
70-87	12988-12989	-	
70-88	12989-12990	-	
70-89	12990-12991	-	
70-90	12991-12992	-	
70-91	12992-12993	-	
70-92	12993-12994	-	
70-93	12994-12995	-	
70-94	12995-12996	-	
70-95	12996-12997	-	
70-96	12997-12998	-	
70-97	12998-12999	-	
70-98	12999-13000	-	
70-99	13000-13001	-	
70-100	13001-13002	-	
70-101	13002-13003	-	
70-102	13003-13004	-	
70-103	13005-13015	1561242727	
70-104	13016-13017	-	
70-105	13017-13027	1990695905	
70-106	13029-13037	Approved	
70-107	13040-13048	23228.14	
70-108	13049-13055	select	
70-109	13056-13059	sum	
70-110	13059-13060	(	
70-111	13060-13065	delta	
70-112	13065-13066	)	
70-113	13066-13067	,	
70-114	13067-13070	sum	
70-115	13070-13071	(	
70-116	13071-13079	bbalance	
70-117	13079-13080	)	
70-118	13081-13085	from	
70-119	13086-13101	pgbench_history	
70-120	13102-13103	h	
70-121	13103-13104	,	
70-122	13105-13121	pgbench_branches	
70-123	13122-13123	b	
70-124	13124-13129	where	
70-125	13130-13135	b.bid	
70-126	13135-13136	=	
70-127	13136-13141	h.bid	
70-128	13142-13145	and	
70-129	13146-13151	b.bid	
70-130	13152-13154	in	
70-131	13155-13156	(	
70-132	13156-13161	1,2,3	
70-133	13161-13162	)	
70-134	13163-13166	and	
70-135	13167-13172	mtime	
70-136	13173-13180	between	
70-137	13181-13182	(	
70-138	13182-13188	select	
70-139	13189-13192	min	
70-140	13192-13193	(	
70-141	13193-13198	mtime	
70-142	13198-13199	)	
70-143	13200-13204	from	
70-144	13205-13220	pgbench_history	
70-145	13221-13223	mn	
70-146	13223-13224	)	
70-147	13225-13228	and	
70-148	13229-13230	(	
70-149	13230-13236	select	
70-150	13237-13240	max	
70-151	13240-13241	(	
70-152	13241-13246	mtime	
70-153	13246-13247	)	
70-154	13248-13252	from	
70-155	13253-13268	pgbench_history	
70-156	13269-13271	mx	
70-157	13271-13272	)	
70-158	13272-13273	;	
70-159	13274-13275	e	
70-160	13275-13276	.	

#Text=To instruct the query optimizer to use the approved or preferred captured plans for your managed statements, set the parameter apg_plan_mgmt.use_plan_baselines to true.
71-1	13277-13279	To	
71-2	13280-13288	instruct	
71-3	13289-13292	the	
71-4	13293-13298	query	
71-5	13299-13308	optimizer	
71-6	13309-13311	to	
71-7	13312-13315	use	
71-8	13316-13319	the	
71-9	13320-13328	approved	
71-10	13329-13331	or	
71-11	13332-13341	preferred	
71-12	13342-13350	captured	
71-13	13351-13356	plans	
71-14	13357-13360	for	
71-15	13361-13365	your	
71-16	13366-13373	managed	
71-17	13374-13384	statements	
71-18	13384-13385	,	
71-19	13386-13389	set	
71-20	13390-13393	the	
71-21	13394-13403	parameter	
71-22	13404-13436	apg_plan_mgmt.use_plan_baselines	
71-23	13437-13439	to	
71-24	13440-13444	true	
71-25	13444-13445	.	

#Text=SET apg_plan_mgmt.use_plan_baselines = true;
#Text=f.
72-1	13446-13449	SET	
72-2	13450-13482	apg_plan_mgmt.use_plan_baselines	
72-3	13483-13484	=	
72-4	13485-13489	true	
72-5	13489-13490	;	
72-6	13491-13492	f	
72-7	13492-13493	.	

#Text=View the explain plan output to see that the QPM approved plan is used by the query optimizer.
#Text=explain (hashes true)
#Text=SELECT Sum(delta),
#Text=Sum(bbalance)
#Text=FROM
#Text=pgbench_history h,
#Text=pgbench_branches b
#Text=WHERE
#Text=b.bid = h.bid
#Text=AND b.bid IN ( 1, 2, 3 )
#Text=AND mtime BETWEEN (SELECT Min(mtime)
#Text=FROM
#Text=pgbench_history mn) AND (SELECT Max(mtime)
#Text=FROM
#Text=pgbench_history mx);
#Text=QUERY PLAN
#Text=---------------------------------------------------------------------------------------------------
#Text=Aggregate
#Text=(cost=33986.68..33986.69 rows=1 width=16)
#Text=InitPlan 1 (returns $1)
#Text=Finalize Aggregate
#Text=(cost=9404.57..9404.58 rows=1 width=8)
#Text=Gather
#Text=(cost=9404.35..9404.56 rows=2 width=8)
#Text=Workers Planned: 2
#Text=Partial Aggregate
#Text=(cost=8404.35..8404.36 rows=1 width=8)
#Text=Parallel Seq Scan on pgbench_history mn
#Text=(cost=0.00..7703.48 rows=280348 width=8)
#Text=InitPlan 2 (returns $3)
#Text=Finalize Aggregate
#Text=(cost=9404.57..9404.58 rows=1 width=8)
#Text=Gather
#Text=(cost=9404.35..9404.56 rows=2 width=8)
#Text=Workers Planned: 2
#Text=Partial Aggregate
#Text=(cost=8404.35..8404.36 rows=1 width=8)
#Text=Parallel Seq Scan on pgbench_history mx
#Text=(cost=0.00..7703.48 rows=280348 width=8)
#Text=Nested Loop
#Text=(cost=0.27..15177.06 rows=93 width=8)
#Text=Join Filter: (h.bid = b.bid)
#Text=Index Scan using pgbench_branches_pkey on pgbench_branches b
#Text=(cost=0.27..24.73 rows=3 width=8)
#Text=Index Cond: (bid = ANY ('{1,2,3}'::integer[]))
#Text=Materialize
#Text=(cost=0.00..15009.36 rows=3364 width=8)
#Text=Seq Scan on pgbench_history h
#Text=(cost=0.00..14992.54 rows=3364 width=8)
#Text=Filter: ((mtime >= $1) AND (mtime <= $3))
#Text=SQL Hash: 1561242727, Plan Hash: -1990695905
#Text=g.
73-1	13494-13498	View	
73-2	13499-13502	the	
73-3	13503-13510	explain	
73-4	13511-13515	plan	
73-5	13516-13522	output	
73-6	13523-13525	to	
73-7	13526-13529	see	
73-8	13530-13534	that	
73-9	13535-13538	the	
73-10	13539-13542	QPM	
73-11	13543-13551	approved	
73-12	13552-13556	plan	
73-13	13557-13559	is	
73-14	13560-13564	used	
73-15	13565-13567	by	
73-16	13568-13571	the	
73-17	13572-13577	query	
73-18	13578-13587	optimizer	
73-19	13587-13588	.	
73-20	13589-13596	explain	
73-21	13597-13598	(	
73-22	13598-13604	hashes	
73-23	13605-13609	true	
73-24	13609-13610	)	
73-25	13611-13617	SELECT	
73-26	13618-13621	Sum	
73-27	13621-13622	(	
73-28	13622-13627	delta	
73-29	13627-13628	)	
73-30	13628-13629	,	
73-31	13630-13633	Sum	
73-32	13633-13634	(	
73-33	13634-13642	bbalance	
73-34	13642-13643	)	
73-35	13644-13648	FROM	
73-36	13649-13664	pgbench_history	
73-37	13665-13666	h	
73-38	13666-13667	,	
73-39	13668-13684	pgbench_branches	
73-40	13685-13686	b	
73-41	13687-13692	WHERE	
73-42	13693-13698	b.bid	
73-43	13699-13700	=	
73-44	13701-13706	h.bid	
73-45	13707-13710	AND	
73-46	13711-13716	b.bid	
73-47	13717-13719	IN	
73-48	13720-13721	(	
73-49	13722-13723	1	
73-50	13723-13724	,	
73-51	13725-13726	2	
73-52	13726-13727	,	
73-53	13728-13729	3	
73-54	13730-13731	)	
73-55	13732-13735	AND	
73-56	13736-13741	mtime	
73-57	13742-13749	BETWEEN	
73-58	13750-13751	(	
73-59	13751-13757	SELECT	
73-60	13758-13761	Min	
73-61	13761-13762	(	
73-62	13762-13767	mtime	
73-63	13767-13768	)	
73-64	13769-13773	FROM	
73-65	13774-13789	pgbench_history	
73-66	13790-13792	mn	
73-67	13792-13793	)	
73-68	13794-13797	AND	
73-69	13798-13799	(	
73-70	13799-13805	SELECT	
73-71	13806-13809	Max	
73-72	13809-13810	(	
73-73	13810-13815	mtime	
73-74	13815-13816	)	
73-75	13817-13821	FROM	
73-76	13822-13837	pgbench_history	
73-77	13838-13840	mx	
73-78	13840-13841	)	
73-79	13841-13842	;	
73-80	13843-13848	QUERY	
73-81	13849-13853	PLAN	
73-82	13854-13855	-	
73-83	13855-13856	-	
73-84	13856-13857	-	
73-85	13857-13858	-	
73-86	13858-13859	-	
73-87	13859-13860	-	
73-88	13860-13861	-	
73-89	13861-13862	-	
73-90	13862-13863	-	
73-91	13863-13864	-	
73-92	13864-13865	-	
73-93	13865-13866	-	
73-94	13866-13867	-	
73-95	13867-13868	-	
73-96	13868-13869	-	
73-97	13869-13870	-	
73-98	13870-13871	-	
73-99	13871-13872	-	
73-100	13872-13873	-	
73-101	13873-13874	-	
73-102	13874-13875	-	
73-103	13875-13876	-	
73-104	13876-13877	-	
73-105	13877-13878	-	
73-106	13878-13879	-	
73-107	13879-13880	-	
73-108	13880-13881	-	
73-109	13881-13882	-	
73-110	13882-13883	-	
73-111	13883-13884	-	
73-112	13884-13885	-	
73-113	13885-13886	-	
73-114	13886-13887	-	
73-115	13887-13888	-	
73-116	13888-13889	-	
73-117	13889-13890	-	
73-118	13890-13891	-	
73-119	13891-13892	-	
73-120	13892-13893	-	
73-121	13893-13894	-	
73-122	13894-13895	-	
73-123	13895-13896	-	
73-124	13896-13897	-	
73-125	13897-13898	-	
73-126	13898-13899	-	
73-127	13899-13900	-	
73-128	13900-13901	-	
73-129	13901-13902	-	
73-130	13902-13903	-	
73-131	13903-13904	-	
73-132	13904-13905	-	
73-133	13905-13906	-	
73-134	13906-13907	-	
73-135	13907-13908	-	
73-136	13908-13909	-	
73-137	13909-13910	-	
73-138	13910-13911	-	
73-139	13911-13912	-	
73-140	13912-13913	-	
73-141	13913-13914	-	
73-142	13914-13915	-	
73-143	13915-13916	-	
73-144	13916-13917	-	
73-145	13917-13918	-	
73-146	13918-13919	-	
73-147	13919-13920	-	
73-148	13920-13921	-	
73-149	13921-13922	-	
73-150	13922-13923	-	
73-151	13923-13924	-	
73-152	13924-13925	-	
73-153	13925-13926	-	
73-154	13926-13927	-	
73-155	13927-13928	-	
73-156	13928-13929	-	
73-157	13929-13930	-	
73-158	13930-13931	-	
73-159	13931-13932	-	
73-160	13932-13933	-	
73-161	13933-13934	-	
73-162	13934-13935	-	
73-163	13935-13936	-	
73-164	13936-13937	-	
73-165	13937-13938	-	
73-166	13938-13939	-	
73-167	13939-13940	-	
73-168	13940-13941	-	
73-169	13941-13942	-	
73-170	13942-13943	-	
73-171	13943-13944	-	
73-172	13944-13945	-	
73-173	13945-13946	-	
73-174	13946-13947	-	
73-175	13947-13948	-	
73-176	13948-13949	-	
73-177	13949-13950	-	
73-178	13950-13951	-	
73-179	13951-13952	-	
73-180	13952-13953	-	
73-181	13954-13963	Aggregate	
73-182	13964-13965	(	
73-183	13965-13969	cost	
73-184	13969-13970	=	
73-185	13970-13978	33986.68	
73-186	13978-13979	.	
73-187	13979-13988	.33986.69	
73-188	13989-13993	rows	
73-189	13993-13994	=	
73-190	13994-13995	1	
73-191	13996-14001	width	
73-192	14001-14002	=	
73-193	14002-14004	16	
73-194	14004-14005	)	
73-195	14006-14014	InitPlan	
73-196	14015-14016	1	
73-197	14017-14018	(	
73-198	14018-14025	returns	
73-199	14026-14028	$1	
73-200	14028-14029	)	
73-201	14030-14038	Finalize	
73-202	14039-14048	Aggregate	
73-203	14049-14050	(	
73-204	14050-14054	cost	
73-205	14054-14055	=	
73-206	14055-14062	9404.57	
73-207	14062-14063	.	
73-208	14063-14071	.9404.58	
73-209	14072-14076	rows	
73-210	14076-14077	=	
73-211	14077-14078	1	
73-212	14079-14084	width	
73-213	14084-14085	=	
73-214	14085-14086	8	
73-215	14086-14087	)	
73-216	14088-14094	Gather	
73-217	14095-14096	(	
73-218	14096-14100	cost	
73-219	14100-14101	=	
73-220	14101-14108	9404.35	
73-221	14108-14109	.	
73-222	14109-14117	.9404.56	
73-223	14118-14122	rows	
73-224	14122-14123	=	
73-225	14123-14124	2	
73-226	14125-14130	width	
73-227	14130-14131	=	
73-228	14131-14132	8	
73-229	14132-14133	)	
73-230	14134-14141	Workers	
73-231	14142-14149	Planned	
73-232	14149-14150	:	
73-233	14151-14152	2	
73-234	14153-14160	Partial	
73-235	14161-14170	Aggregate	
73-236	14171-14172	(	
73-237	14172-14176	cost	
73-238	14176-14177	=	
73-239	14177-14184	8404.35	
73-240	14184-14185	.	
73-241	14185-14193	.8404.36	
73-242	14194-14198	rows	
73-243	14198-14199	=	
73-244	14199-14200	1	
73-245	14201-14206	width	
73-246	14206-14207	=	
73-247	14207-14208	8	
73-248	14208-14209	)	
73-249	14210-14218	Parallel	
73-250	14219-14222	Seq	
73-251	14223-14227	Scan	
73-252	14228-14230	on	
73-253	14231-14246	pgbench_history	
73-254	14247-14249	mn	
73-255	14250-14251	(	
73-256	14251-14255	cost	
73-257	14255-14256	=	
73-258	14256-14260	0.00	
73-259	14260-14261	.	
73-260	14261-14269	.7703.48	
73-261	14270-14274	rows	
73-262	14274-14275	=	
73-263	14275-14281	280348	
73-264	14282-14287	width	
73-265	14287-14288	=	
73-266	14288-14289	8	
73-267	14289-14290	)	
73-268	14291-14299	InitPlan	
73-269	14300-14301	2	
73-270	14302-14303	(	
73-271	14303-14310	returns	
73-272	14311-14313	$3	
73-273	14313-14314	)	
73-274	14315-14323	Finalize	
73-275	14324-14333	Aggregate	
73-276	14334-14335	(	
73-277	14335-14339	cost	
73-278	14339-14340	=	
73-279	14340-14347	9404.57	
73-280	14347-14348	.	
73-281	14348-14356	.9404.58	
73-282	14357-14361	rows	
73-283	14361-14362	=	
73-284	14362-14363	1	
73-285	14364-14369	width	
73-286	14369-14370	=	
73-287	14370-14371	8	
73-288	14371-14372	)	
73-289	14373-14379	Gather	
73-290	14380-14381	(	
73-291	14381-14385	cost	
73-292	14385-14386	=	
73-293	14386-14393	9404.35	
73-294	14393-14394	.	
73-295	14394-14402	.9404.56	
73-296	14403-14407	rows	
73-297	14407-14408	=	
73-298	14408-14409	2	
73-299	14410-14415	width	
73-300	14415-14416	=	
73-301	14416-14417	8	
73-302	14417-14418	)	
73-303	14419-14426	Workers	
73-304	14427-14434	Planned	
73-305	14434-14435	:	
73-306	14436-14437	2	
73-307	14438-14445	Partial	
73-308	14446-14455	Aggregate	
73-309	14456-14457	(	
73-310	14457-14461	cost	
73-311	14461-14462	=	
73-312	14462-14469	8404.35	
73-313	14469-14470	.	
73-314	14470-14478	.8404.36	
73-315	14479-14483	rows	
73-316	14483-14484	=	
73-317	14484-14485	1	
73-318	14486-14491	width	
73-319	14491-14492	=	
73-320	14492-14493	8	
73-321	14493-14494	)	
73-322	14495-14503	Parallel	
73-323	14504-14507	Seq	
73-324	14508-14512	Scan	
73-325	14513-14515	on	
73-326	14516-14531	pgbench_history	
73-327	14532-14534	mx	
73-328	14535-14536	(	
73-329	14536-14540	cost	
73-330	14540-14541	=	
73-331	14541-14545	0.00	
73-332	14545-14546	.	
73-333	14546-14554	.7703.48	
73-334	14555-14559	rows	
73-335	14559-14560	=	
73-336	14560-14566	280348	
73-337	14567-14572	width	
73-338	14572-14573	=	
73-339	14573-14574	8	
73-340	14574-14575	)	
73-341	14576-14582	Nested	
73-342	14583-14587	Loop	
73-343	14588-14589	(	
73-344	14589-14593	cost	
73-345	14593-14594	=	
73-346	14594-14598	0.27	
73-347	14598-14599	.	
73-348	14599-14608	.15177.06	
73-349	14609-14613	rows	
73-350	14613-14614	=	
73-351	14614-14616	93	
73-352	14617-14622	width	
73-353	14622-14623	=	
73-354	14623-14624	8	
73-355	14624-14625	)	
73-356	14626-14630	Join	
73-357	14631-14637	Filter	
73-358	14637-14638	:	
73-359	14639-14640	(	
73-360	14640-14645	h.bid	
73-361	14646-14647	=	
73-362	14648-14653	b.bid	
73-363	14653-14654	)	
73-364	14655-14660	Index	
73-365	14661-14665	Scan	
73-366	14666-14671	using	
73-367	14672-14693	pgbench_branches_pkey	
73-368	14694-14696	on	
73-369	14697-14713	pgbench_branches	
73-370	14714-14715	b	
73-371	14716-14717	(	
73-372	14717-14721	cost	
73-373	14721-14722	=	
73-374	14722-14726	0.27	
73-375	14726-14727	.	
73-376	14727-14733	.24.73	
73-377	14734-14738	rows	
73-378	14738-14739	=	
73-379	14739-14740	3	
73-380	14741-14746	width	
73-381	14746-14747	=	
73-382	14747-14748	8	
73-383	14748-14749	)	
73-384	14750-14755	Index	
73-385	14756-14760	Cond	
73-386	14760-14761	:	
73-387	14762-14763	(	
73-388	14763-14766	bid	
73-389	14767-14768	=	
73-390	14769-14772	ANY	
73-391	14773-14774	(	
73-392	14774-14775	'	
73-393	14775-14776	{	
73-394	14776-14781	1,2,3	
73-395	14781-14782	}	
73-396	14782-14783	'	
73-397	14783-14784	:	
73-398	14784-14785	:	
73-399	14785-14792	integer	
73-400	14792-14793	[	
73-401	14793-14794	]	
73-402	14794-14795	)	
73-403	14795-14796	)	
73-404	14797-14808	Materialize	
73-405	14809-14810	(	
73-406	14810-14814	cost	
73-407	14814-14815	=	
73-408	14815-14819	0.00	
73-409	14819-14820	.	
73-410	14820-14829	.15009.36	
73-411	14830-14834	rows	
73-412	14834-14835	=	
73-413	14835-14839	3364	
73-414	14840-14845	width	
73-415	14845-14846	=	
73-416	14846-14847	8	
73-417	14847-14848	)	
73-418	14849-14852	Seq	
73-419	14853-14857	Scan	
73-420	14858-14860	on	
73-421	14861-14876	pgbench_history	
73-422	14877-14878	h	
73-423	14879-14880	(	
73-424	14880-14884	cost	
73-425	14884-14885	=	
73-426	14885-14889	0.00	
73-427	14889-14890	.	
73-428	14890-14899	.14992.54	
73-429	14900-14904	rows	
73-430	14904-14905	=	
73-431	14905-14909	3364	
73-432	14910-14915	width	
73-433	14915-14916	=	
73-434	14916-14917	8	
73-435	14917-14918	)	
73-436	14919-14925	Filter	
73-437	14925-14926	:	
73-438	14927-14928	(	
73-439	14928-14929	(	
73-440	14929-14934	mtime	
73-441	14935-14936	>	
73-442	14936-14937	=	
73-443	14938-14940	$1	
73-444	14940-14941	)	
73-445	14942-14945	AND	
73-446	14946-14947	(	
73-447	14947-14952	mtime	
73-448	14953-14954	<	
73-449	14954-14955	=	
73-450	14956-14958	$3	
73-451	14958-14959	)	
73-452	14959-14960	)	
73-453	14961-14964	SQL	
73-454	14965-14969	Hash	
73-455	14969-14970	:	
73-456	14971-14981	1561242727	
73-457	14981-14982	,	
73-458	14983-14987	Plan	
73-459	14988-14992	Hash	
73-460	14992-14993	:	
73-461	14994-14995	-	
73-462	14995-15005	1990695905	
73-463	15006-15007	g	
73-464	15007-15008	.	

#Text=Create a new index on the pgbench_history table column “mtime” to change the planner configuration and force the query optimizer to generate a new plan.
#Text=create index pgbench_hist_mtime on pgbench_history(mtime);
#Text=h.
74-1	15009-15015	Create	
74-2	15016-15017	a	
74-3	15018-15021	new	
74-4	15022-15027	index	
74-5	15028-15030	on	
74-6	15031-15034	the	
74-7	15035-15050	pgbench_history	
74-8	15051-15056	table	
74-9	15057-15063	column	
74-10	15064-15065	“	
74-11	15065-15070	mtime	
74-12	15070-15071	”	
74-13	15072-15074	to	
74-14	15075-15081	change	
74-15	15082-15085	the	
74-16	15086-15093	planner	
74-17	15094-15107	configuration	
74-18	15108-15111	and	
74-19	15112-15117	force	
74-20	15118-15121	the	
74-21	15122-15127	query	
74-22	15128-15137	optimizer	
74-23	15138-15140	to	
74-24	15141-15149	generate	
74-25	15150-15151	a	
74-26	15152-15155	new	
74-27	15156-15160	plan	
74-28	15160-15161	.	
74-29	15162-15168	create	
74-30	15169-15174	index	
74-31	15175-15193	pgbench_hist_mtime	
74-32	15194-15196	on	
74-33	15197-15212	pgbench_history	
74-34	15212-15213	(	
74-35	15213-15218	mtime	
74-36	15218-15219	)	
74-37	15219-15220	;	
74-38	15221-15222	h	
74-39	15222-15223	.	

#Text=View the explain plan output to see that QPM detects a new plan but still uses the approved plan and maintains the plan stability.
#Text=explain (hashes true)
#Text=SELECT Sum(delta),
#Text=Sum(bbalance)
#Text=FROM
#Text=pgbench_history h,
#Text=pgbench_branches b
#Text=WHERE
#Text=b.bid = h.bid
#Text=AND b.bid IN ( 1, 2, 3 )
#Text=AND mtime BETWEEN (SELECT Min(mtime)
#Text=FROM
#Text=pgbench_history mn) AND (SELECT Max(mtime)
#Text=FROM
#Text=pgbench_history mx);
#Text=Output:
#Text=QUERY PLAN
#Text=------------------------------------------------------------------------------------------
#Text=Aggregate
#Text=(cost=33101.22..33101.23 rows=1 width=16)
#Text=InitPlan 1 (returns $2)
#Text=Finalize Aggregate
#Text=(cost=9224.80..9224.81 rows=1 width=8)
#Text=Gather
#Text=(cost=9224.58..9224.79 rows=2 width=8)
#Text=Workers Planned: 2
#Text=Partial Aggregate
#Text=(cost=8224.58..8224.59 rows=1 width=8)
#Text=Parallel Seq Scan on pgbench_history mn
#Text=(cost=0.00..7559.67 rows=265967 width=8)
#Text=InitPlan 2 (returns $5)
#Text=Finalize Aggregate
#Text=(cost=9224.80..9224.81 rows=1 width=8)
#Text=Gather
#Text=(cost=9224.58..9224.79 rows=2 width=8)
#Text=Workers Planned: 2
#Text=Partial Aggregate
#Text=(cost=8224.58..8224.59 rows=1 width=8)
#Text=Parallel Seq Scan on pgbench_history mx
#Text=(cost=0.00..7559.67 rows=265967 width=8)
#Text=Nested Loop
#Text=(cost=0.27..14651.15 rows=89 width=8)
#Text=Join Filter: (h.bid = b.bid)
#Text=Index Scan using pgbench_branches_pkey on pgbench_branches b
#Text=(cost=0.27..24.73 rows=3 width=8)
#Text=Index Cond: (bid = ANY ('{1,2,3}'::integer[]))
#Text=Materialize
#Text=(cost=0.00..14490.76 rows=3192 width=8)
#Text=Seq Scan on pgbench_history h
#Text=(cost=0.00..14474.80 rows=3192 width=8)
#Text=Filter: ((mtime >= $2) AND (mtime <= $5))
#Text=Note: An Approved plan was used instead of the minimum cost plan.
75-1	15224-15228	View	
75-2	15229-15232	the	
75-3	15233-15240	explain	
75-4	15241-15245	plan	
75-5	15246-15252	output	
75-6	15253-15255	to	
75-7	15256-15259	see	
75-8	15260-15264	that	
75-9	15265-15268	QPM	
75-10	15269-15276	detects	
75-11	15277-15278	a	
75-12	15279-15282	new	
75-13	15283-15287	plan	
75-14	15288-15291	but	
75-15	15292-15297	still	
75-16	15298-15302	uses	
75-17	15303-15306	the	
75-18	15307-15315	approved	
75-19	15316-15320	plan	
75-20	15321-15324	and	
75-21	15325-15334	maintains	
75-22	15335-15338	the	
75-23	15339-15343	plan	
75-24	15344-15353	stability	
75-25	15353-15354	.	
75-26	15355-15362	explain	
75-27	15363-15364	(	
75-28	15364-15370	hashes	
75-29	15371-15375	true	
75-30	15375-15376	)	
75-31	15377-15383	SELECT	
75-32	15384-15387	Sum	
75-33	15387-15388	(	
75-34	15388-15393	delta	
75-35	15393-15394	)	
75-36	15394-15395	,	
75-37	15396-15399	Sum	
75-38	15399-15400	(	
75-39	15400-15408	bbalance	
75-40	15408-15409	)	
75-41	15410-15414	FROM	
75-42	15415-15430	pgbench_history	
75-43	15431-15432	h	
75-44	15432-15433	,	
75-45	15434-15450	pgbench_branches	
75-46	15451-15452	b	
75-47	15453-15458	WHERE	
75-48	15459-15464	b.bid	
75-49	15465-15466	=	
75-50	15467-15472	h.bid	
75-51	15473-15476	AND	
75-52	15477-15482	b.bid	
75-53	15483-15485	IN	
75-54	15486-15487	(	
75-55	15488-15489	1	
75-56	15489-15490	,	
75-57	15491-15492	2	
75-58	15492-15493	,	
75-59	15494-15495	3	
75-60	15496-15497	)	
75-61	15498-15501	AND	
75-62	15502-15507	mtime	
75-63	15508-15515	BETWEEN	
75-64	15516-15517	(	
75-65	15517-15523	SELECT	
75-66	15524-15527	Min	
75-67	15527-15528	(	
75-68	15528-15533	mtime	
75-69	15533-15534	)	
75-70	15535-15539	FROM	
75-71	15540-15555	pgbench_history	
75-72	15556-15558	mn	
75-73	15558-15559	)	
75-74	15560-15563	AND	
75-75	15564-15565	(	
75-76	15565-15571	SELECT	
75-77	15572-15575	Max	
75-78	15575-15576	(	
75-79	15576-15581	mtime	
75-80	15581-15582	)	
75-81	15583-15587	FROM	
75-82	15588-15603	pgbench_history	
75-83	15604-15606	mx	
75-84	15606-15607	)	
75-85	15607-15608	;	
75-86	15609-15615	Output	
75-87	15615-15616	:	
75-88	15617-15622	QUERY	
75-89	15623-15627	PLAN	
75-90	15628-15629	-	
75-91	15629-15630	-	
75-92	15630-15631	-	
75-93	15631-15632	-	
75-94	15632-15633	-	
75-95	15633-15634	-	
75-96	15634-15635	-	
75-97	15635-15636	-	
75-98	15636-15637	-	
75-99	15637-15638	-	
75-100	15638-15639	-	
75-101	15639-15640	-	
75-102	15640-15641	-	
75-103	15641-15642	-	
75-104	15642-15643	-	
75-105	15643-15644	-	
75-106	15644-15645	-	
75-107	15645-15646	-	
75-108	15646-15647	-	
75-109	15647-15648	-	
75-110	15648-15649	-	
75-111	15649-15650	-	
75-112	15650-15651	-	
75-113	15651-15652	-	
75-114	15652-15653	-	
75-115	15653-15654	-	
75-116	15654-15655	-	
75-117	15655-15656	-	
75-118	15656-15657	-	
75-119	15657-15658	-	
75-120	15658-15659	-	
75-121	15659-15660	-	
75-122	15660-15661	-	
75-123	15661-15662	-	
75-124	15662-15663	-	
75-125	15663-15664	-	
75-126	15664-15665	-	
75-127	15665-15666	-	
75-128	15666-15667	-	
75-129	15667-15668	-	
75-130	15668-15669	-	
75-131	15669-15670	-	
75-132	15670-15671	-	
75-133	15671-15672	-	
75-134	15672-15673	-	
75-135	15673-15674	-	
75-136	15674-15675	-	
75-137	15675-15676	-	
75-138	15676-15677	-	
75-139	15677-15678	-	
75-140	15678-15679	-	
75-141	15679-15680	-	
75-142	15680-15681	-	
75-143	15681-15682	-	
75-144	15682-15683	-	
75-145	15683-15684	-	
75-146	15684-15685	-	
75-147	15685-15686	-	
75-148	15686-15687	-	
75-149	15687-15688	-	
75-150	15688-15689	-	
75-151	15689-15690	-	
75-152	15690-15691	-	
75-153	15691-15692	-	
75-154	15692-15693	-	
75-155	15693-15694	-	
75-156	15694-15695	-	
75-157	15695-15696	-	
75-158	15696-15697	-	
75-159	15697-15698	-	
75-160	15698-15699	-	
75-161	15699-15700	-	
75-162	15700-15701	-	
75-163	15701-15702	-	
75-164	15702-15703	-	
75-165	15703-15704	-	
75-166	15704-15705	-	
75-167	15705-15706	-	
75-168	15706-15707	-	
75-169	15707-15708	-	
75-170	15708-15709	-	
75-171	15709-15710	-	
75-172	15710-15711	-	
75-173	15711-15712	-	
75-174	15712-15713	-	
75-175	15713-15714	-	
75-176	15714-15715	-	
75-177	15715-15716	-	
75-178	15716-15717	-	
75-179	15717-15718	-	
75-180	15719-15728	Aggregate	
75-181	15729-15730	(	
75-182	15730-15734	cost	
75-183	15734-15735	=	
75-184	15735-15743	33101.22	
75-185	15743-15744	.	
75-186	15744-15753	.33101.23	
75-187	15754-15758	rows	
75-188	15758-15759	=	
75-189	15759-15760	1	
75-190	15761-15766	width	
75-191	15766-15767	=	
75-192	15767-15769	16	
75-193	15769-15770	)	
75-194	15771-15779	InitPlan	
75-195	15780-15781	1	
75-196	15782-15783	(	
75-197	15783-15790	returns	
75-198	15791-15793	$2	
75-199	15793-15794	)	
75-200	15795-15803	Finalize	
75-201	15804-15813	Aggregate	
75-202	15814-15815	(	
75-203	15815-15819	cost	
75-204	15819-15820	=	
75-205	15820-15827	9224.80	
75-206	15827-15828	.	
75-207	15828-15836	.9224.81	
75-208	15837-15841	rows	
75-209	15841-15842	=	
75-210	15842-15843	1	
75-211	15844-15849	width	
75-212	15849-15850	=	
75-213	15850-15851	8	
75-214	15851-15852	)	
75-215	15853-15859	Gather	
75-216	15860-15861	(	
75-217	15861-15865	cost	
75-218	15865-15866	=	
75-219	15866-15873	9224.58	
75-220	15873-15874	.	
75-221	15874-15882	.9224.79	
75-222	15883-15887	rows	
75-223	15887-15888	=	
75-224	15888-15889	2	
75-225	15890-15895	width	
75-226	15895-15896	=	
75-227	15896-15897	8	
75-228	15897-15898	)	
75-229	15899-15906	Workers	
75-230	15907-15914	Planned	
75-231	15914-15915	:	
75-232	15916-15917	2	
75-233	15918-15925	Partial	
75-234	15926-15935	Aggregate	
75-235	15936-15937	(	
75-236	15937-15941	cost	
75-237	15941-15942	=	
75-238	15942-15949	8224.58	
75-239	15949-15950	.	
75-240	15950-15958	.8224.59	
75-241	15959-15963	rows	
75-242	15963-15964	=	
75-243	15964-15965	1	
75-244	15966-15971	width	
75-245	15971-15972	=	
75-246	15972-15973	8	
75-247	15973-15974	)	
75-248	15975-15983	Parallel	
75-249	15984-15987	Seq	
75-250	15988-15992	Scan	
75-251	15993-15995	on	
75-252	15996-16011	pgbench_history	
75-253	16012-16014	mn	
75-254	16015-16016	(	
75-255	16016-16020	cost	
75-256	16020-16021	=	
75-257	16021-16025	0.00	
75-258	16025-16026	.	
75-259	16026-16034	.7559.67	
75-260	16035-16039	rows	
75-261	16039-16040	=	
75-262	16040-16046	265967	
75-263	16047-16052	width	
75-264	16052-16053	=	
75-265	16053-16054	8	
75-266	16054-16055	)	
75-267	16056-16064	InitPlan	
75-268	16065-16066	2	
75-269	16067-16068	(	
75-270	16068-16075	returns	
75-271	16076-16078	$5	
75-272	16078-16079	)	
75-273	16080-16088	Finalize	
75-274	16089-16098	Aggregate	
75-275	16099-16100	(	
75-276	16100-16104	cost	
75-277	16104-16105	=	
75-278	16105-16112	9224.80	
75-279	16112-16113	.	
75-280	16113-16121	.9224.81	
75-281	16122-16126	rows	
75-282	16126-16127	=	
75-283	16127-16128	1	
75-284	16129-16134	width	
75-285	16134-16135	=	
75-286	16135-16136	8	
75-287	16136-16137	)	
75-288	16138-16144	Gather	
75-289	16145-16146	(	
75-290	16146-16150	cost	
75-291	16150-16151	=	
75-292	16151-16158	9224.58	
75-293	16158-16159	.	
75-294	16159-16167	.9224.79	
75-295	16168-16172	rows	
75-296	16172-16173	=	
75-297	16173-16174	2	
75-298	16175-16180	width	
75-299	16180-16181	=	
75-300	16181-16182	8	
75-301	16182-16183	)	
75-302	16184-16191	Workers	
75-303	16192-16199	Planned	
75-304	16199-16200	:	
75-305	16201-16202	2	
75-306	16203-16210	Partial	
75-307	16211-16220	Aggregate	
75-308	16221-16222	(	
75-309	16222-16226	cost	
75-310	16226-16227	=	
75-311	16227-16234	8224.58	
75-312	16234-16235	.	
75-313	16235-16243	.8224.59	
75-314	16244-16248	rows	
75-315	16248-16249	=	
75-316	16249-16250	1	
75-317	16251-16256	width	
75-318	16256-16257	=	
75-319	16257-16258	8	
75-320	16258-16259	)	
75-321	16260-16268	Parallel	
75-322	16269-16272	Seq	
75-323	16273-16277	Scan	
75-324	16278-16280	on	
75-325	16281-16296	pgbench_history	
75-326	16297-16299	mx	
75-327	16300-16301	(	
75-328	16301-16305	cost	
75-329	16305-16306	=	
75-330	16306-16310	0.00	
75-331	16310-16311	.	
75-332	16311-16319	.7559.67	
75-333	16320-16324	rows	
75-334	16324-16325	=	
75-335	16325-16331	265967	
75-336	16332-16337	width	
75-337	16337-16338	=	
75-338	16338-16339	8	
75-339	16339-16340	)	
75-340	16341-16347	Nested	
75-341	16348-16352	Loop	
75-342	16353-16354	(	
75-343	16354-16358	cost	
75-344	16358-16359	=	
75-345	16359-16363	0.27	
75-346	16363-16364	.	
75-347	16364-16373	.14651.15	
75-348	16374-16378	rows	
75-349	16378-16379	=	
75-350	16379-16381	89	
75-351	16382-16387	width	
75-352	16387-16388	=	
75-353	16388-16389	8	
75-354	16389-16390	)	
75-355	16391-16395	Join	
75-356	16396-16402	Filter	
75-357	16402-16403	:	
75-358	16404-16405	(	
75-359	16405-16410	h.bid	
75-360	16411-16412	=	
75-361	16413-16418	b.bid	
75-362	16418-16419	)	
75-363	16420-16425	Index	
75-364	16426-16430	Scan	
75-365	16431-16436	using	
75-366	16437-16458	pgbench_branches_pkey	
75-367	16459-16461	on	
75-368	16462-16478	pgbench_branches	
75-369	16479-16480	b	
75-370	16481-16482	(	
75-371	16482-16486	cost	
75-372	16486-16487	=	
75-373	16487-16491	0.27	
75-374	16491-16492	.	
75-375	16492-16498	.24.73	
75-376	16499-16503	rows	
75-377	16503-16504	=	
75-378	16504-16505	3	
75-379	16506-16511	width	
75-380	16511-16512	=	
75-381	16512-16513	8	
75-382	16513-16514	)	
75-383	16515-16520	Index	
75-384	16521-16525	Cond	
75-385	16525-16526	:	
75-386	16527-16528	(	
75-387	16528-16531	bid	
75-388	16532-16533	=	
75-389	16534-16537	ANY	
75-390	16538-16539	(	
75-391	16539-16540	'	
75-392	16540-16541	{	
75-393	16541-16546	1,2,3	
75-394	16546-16547	}	
75-395	16547-16548	'	
75-396	16548-16549	:	
75-397	16549-16550	:	
75-398	16550-16557	integer	
75-399	16557-16558	[	
75-400	16558-16559	]	
75-401	16559-16560	)	
75-402	16560-16561	)	
75-403	16562-16573	Materialize	
75-404	16574-16575	(	
75-405	16575-16579	cost	
75-406	16579-16580	=	
75-407	16580-16584	0.00	
75-408	16584-16585	.	
75-409	16585-16594	.14490.76	
75-410	16595-16599	rows	
75-411	16599-16600	=	
75-412	16600-16604	3192	
75-413	16605-16610	width	
75-414	16610-16611	=	
75-415	16611-16612	8	
75-416	16612-16613	)	
75-417	16614-16617	Seq	
75-418	16618-16622	Scan	
75-419	16623-16625	on	
75-420	16626-16641	pgbench_history	
75-421	16642-16643	h	
75-422	16644-16645	(	
75-423	16645-16649	cost	
75-424	16649-16650	=	
75-425	16650-16654	0.00	
75-426	16654-16655	.	
75-427	16655-16664	.14474.80	
75-428	16665-16669	rows	
75-429	16669-16670	=	
75-430	16670-16674	3192	
75-431	16675-16680	width	
75-432	16680-16681	=	
75-433	16681-16682	8	
75-434	16682-16683	)	
75-435	16684-16690	Filter	
75-436	16690-16691	:	
75-437	16692-16693	(	
75-438	16693-16694	(	
75-439	16694-16699	mtime	
75-440	16700-16701	>	
75-441	16701-16702	=	
75-442	16703-16705	$2	
75-443	16705-16706	)	
75-444	16707-16710	AND	
75-445	16711-16712	(	
75-446	16712-16717	mtime	
75-447	16718-16719	<	
75-448	16719-16720	=	
75-449	16721-16723	$5	
75-450	16723-16724	)	
75-451	16724-16725	)	
75-452	16726-16730	Note	
75-453	16730-16731	:	
75-454	16732-16734	An	
75-455	16735-16743	Approved	
75-456	16744-16748	plan	
75-457	16749-16752	was	
75-458	16753-16757	used	
75-459	16758-16765	instead	
75-460	16766-16768	of	
75-461	16769-16772	the	
75-462	16773-16780	minimum	
75-463	16781-16785	cost	
75-464	16786-16790	plan	
75-465	16790-16791	.	

#Text=SQL Hash: 1561242727, Plan Hash: -1990695905, Minimum Cost Plan Hash: -794604077
#Text=(22 rows)
#Text=i.
76-1	16792-16795	SQL	
76-2	16796-16800	Hash	
76-3	16800-16801	:	
76-4	16802-16812	1561242727	
76-5	16812-16813	,	
76-6	16814-16818	Plan	
76-7	16819-16823	Hash	
76-8	16823-16824	:	
76-9	16825-16826	-	
76-10	16826-16836	1990695905	
76-11	16836-16837	,	
76-12	16838-16845	Minimum	
76-13	16846-16850	Cost	
76-14	16851-16855	Plan	
76-15	16856-16860	Hash	
76-16	16860-16861	:	
76-17	16862-16863	-	
76-18	16863-16872	794604077	
76-19	16873-16874	(	
76-20	16874-16876	22	
76-21	16877-16881	rows	
76-22	16881-16882	)	
76-23	16883-16884	i	
76-24	16884-16885	.	

#Text=Run the following SQL query to view the new plan and status of the plan.
77-1	16886-16889	Run	
77-2	16890-16893	the	
77-3	16894-16903	following	
77-4	16904-16907	SQL	
77-5	16908-16913	query	
77-6	16914-16916	to	
77-7	16917-16921	view	
77-8	16922-16925	the	
77-9	16926-16929	new	
77-10	16930-16934	plan	
77-11	16935-16938	and	
77-12	16939-16945	status	
77-13	16946-16948	of	
77-14	16949-16952	the	
77-15	16953-16957	plan	
77-16	16957-16958	.	

#Text=To ensure plan stability, QPM stores all the newly generated plans for a managed query in QPM as unapproved plans.
78-1	16959-16961	To	
78-2	16962-16968	ensure	
78-3	16969-16973	plan	
78-4	16974-16983	stability	
78-5	16983-16984	,	
78-6	16985-16988	QPM	
78-7	16989-16995	stores	
78-8	16996-16999	all	
78-9	17000-17003	the	
78-10	17004-17009	newly	
78-11	17010-17019	generated	
78-12	17020-17025	plans	
78-13	17026-17029	for	
78-14	17030-17031	a	
78-15	17032-17039	managed	
78-16	17040-17045	query	
78-17	17046-17048	in	
78-18	17049-17052	QPM	
78-19	17053-17055	as	
78-20	17056-17066	unapproved	
78-21	17067-17072	plans	
78-22	17072-17073	.	

#Text=The following output shows that there are two different execution plans stored for the same managed statement, as shown by the two different plan_hash values.
79-1	17074-17077	The	
79-2	17078-17087	following	
79-3	17088-17094	output	
79-4	17095-17100	shows	
79-5	17101-17105	that	
79-6	17106-17111	there	
79-7	17112-17115	are	
79-8	17116-17119	two	
79-9	17120-17129	different	
79-10	17130-17139	execution	
79-11	17140-17145	plans	
79-12	17146-17152	stored	
79-13	17153-17156	for	
79-14	17157-17160	the	
79-15	17161-17165	same	
79-16	17166-17173	managed	
79-17	17174-17183	statement	
79-18	17183-17184	,	
79-19	17185-17187	as	
79-20	17188-17193	shown	
79-21	17194-17196	by	
79-22	17197-17200	the	
79-23	17201-17204	two	
79-24	17205-17214	different	
79-25	17215-17224	plan_hash	
79-26	17225-17231	values	
79-27	17231-17232	.	

#Text=Although the new execution plan has the minimum cost (lower than the approved plan), QPM continues to ignore the unapproved plans to maintain plan stability.
80-1	17233-17241	Although	
80-2	17242-17245	the	
80-3	17246-17249	new	
80-4	17250-17259	execution	
80-5	17260-17264	plan	
80-6	17265-17268	has	
80-7	17269-17272	the	
80-8	17273-17280	minimum	
80-9	17281-17285	cost	
80-10	17286-17287	(	
80-11	17287-17292	lower	
80-12	17293-17297	than	
80-13	17298-17301	the	
80-14	17302-17310	approved	
80-15	17311-17315	plan	
80-16	17315-17316	)	
80-17	17316-17317	,	
80-18	17318-17321	QPM	
80-19	17322-17331	continues	
80-20	17332-17334	to	
80-21	17335-17341	ignore	
80-22	17342-17345	the	
80-23	17346-17356	unapproved	
80-24	17357-17362	plans	
80-25	17363-17365	to	
80-26	17366-17374	maintain	
80-27	17375-17379	plan	
80-28	17380-17389	stability	
80-29	17389-17390	.	

#Text=The plan_outline column in the table apg_plan_mgmt.dba_plans shows the entire plan for the SQL.
81-1	17391-17394	The	
81-2	17395-17407	plan_outline	
81-3	17408-17414	column	
81-4	17415-17417	in	
81-5	17418-17421	the	
81-6	17422-17427	table	
81-7	17428-17451	apg_plan_mgmt.dba_plans	
81-8	17452-17457	shows	
81-9	17458-17461	the	
81-10	17462-17468	entire	
81-11	17469-17473	plan	
81-12	17474-17477	for	
81-13	17478-17481	the	
81-14	17482-17485	SQL	
81-15	17485-17486	.	

#Text=For brevity, the plan_outline is not shown here.
82-1	17487-17490	For	
82-2	17491-17498	brevity	
82-3	17498-17499	,	
82-4	17500-17503	the	
82-5	17504-17516	plan_outline	
82-6	17517-17519	is	
82-7	17520-17523	not	
82-8	17524-17529	shown	
82-9	17530-17534	here	
82-10	17534-17535	.	

#Text=Instead, plan_hash_value from the explain plan preceding is compared with plan_hash from the output of the apg_plan_mgmt.dba_plans query.
83-1	17536-17543	Instead	
83-2	17543-17544	,	
83-3	17545-17560	plan_hash_value	
83-4	17561-17565	from	
83-5	17566-17569	the	
83-6	17570-17577	explain	
83-7	17578-17582	plan	
83-8	17583-17592	preceding	
83-9	17593-17595	is	
83-10	17596-17604	compared	
83-11	17605-17609	with	
83-12	17610-17619	plan_hash	
83-13	17620-17624	from	
83-14	17625-17628	the	
83-15	17629-17635	output	
83-16	17636-17638	of	
83-17	17639-17642	the	
83-18	17643-17666	apg_plan_mgmt.dba_plans	
83-19	17667-17672	query	
83-20	17672-17673	.	

#Text=SELECT sql_hash,
#Text=plan_hash,
#Text=status,
#Text=estimated_total_cost "cost",
#Text=sql_text
#Text=FROM apg_plan_mgmt.dba_plans;
#Text=Output:
#Text=sql_hash
#Text=plan_hash
#Text=status
#Text=| cost \t|
#Text=sql_text
#Text=------------+-------------+----------+---------+----------------------------
#Text=1561242727\t-1990695905\t Approved \t 23228.14
#Text=select sum(delta),sum(bbalance) from pgbench_history h, pgbench_branches b where b.bid=h.bid and b.bid in (1,2,3) and mtime between (select min(mtime) from pgbench_history mn) and (select max(mtime) from pgbench_history mx);
#Text=1561242727\t-794604077\t UnApproved \t 111.17
#Text=select sum(delta),sum(bbalance) from pgbench_history h, pgbench_branches b where b.bid=h.bid and b.bid in (1,2,3) and mtime between (select min(mtime) from pgbench_history mn) and (select max(mtime) from pgbench_history mx);
#Text=The following is an example of plan adaptability with QPM.
84-1	17674-17680	SELECT	
84-2	17681-17689	sql_hash	
84-3	17689-17690	,	
84-4	17691-17700	plan_hash	
84-5	17700-17701	,	
84-6	17702-17708	status	
84-7	17708-17709	,	
84-8	17710-17730	estimated_total_cost	
84-9	17731-17732	"	
84-10	17732-17736	cost	
84-11	17736-17737	"	
84-12	17737-17738	,	
84-13	17739-17747	sql_text	
84-14	17748-17752	FROM	
84-15	17753-17776	apg_plan_mgmt.dba_plans	
84-16	17776-17777	;	
84-17	17778-17784	Output	
84-18	17784-17785	:	
84-19	17786-17794	sql_hash	
84-20	17795-17804	plan_hash	
84-21	17805-17811	status	
84-22	17812-17813	|	
84-23	17814-17818	cost	
84-24	17820-17821	|	
84-25	17822-17830	sql_text	
84-26	17831-17832	-	
84-27	17832-17833	-	
84-28	17833-17834	-	
84-29	17834-17835	-	
84-30	17835-17836	-	
84-31	17836-17837	-	
84-32	17837-17838	-	
84-33	17838-17839	-	
84-34	17839-17840	-	
84-35	17840-17841	-	
84-36	17841-17842	-	
84-37	17842-17843	-	
84-38	17843-17844	+	
84-39	17844-17845	-	
84-40	17845-17846	-	
84-41	17846-17847	-	
84-42	17847-17848	-	
84-43	17848-17849	-	
84-44	17849-17850	-	
84-45	17850-17851	-	
84-46	17851-17852	-	
84-47	17852-17853	-	
84-48	17853-17854	-	
84-49	17854-17855	-	
84-50	17855-17856	-	
84-51	17856-17857	-	
84-52	17857-17858	+	
84-53	17858-17859	-	
84-54	17859-17860	-	
84-55	17860-17861	-	
84-56	17861-17862	-	
84-57	17862-17863	-	
84-58	17863-17864	-	
84-59	17864-17865	-	
84-60	17865-17866	-	
84-61	17866-17867	-	
84-62	17867-17868	-	
84-63	17868-17869	+	
84-64	17869-17870	-	
84-65	17870-17871	-	
84-66	17871-17872	-	
84-67	17872-17873	-	
84-68	17873-17874	-	
84-69	17874-17875	-	
84-70	17875-17876	-	
84-71	17876-17877	-	
84-72	17877-17878	-	
84-73	17878-17879	+	
84-74	17879-17880	-	
84-75	17880-17881	-	
84-76	17881-17882	-	
84-77	17882-17883	-	
84-78	17883-17884	-	
84-79	17884-17885	-	
84-80	17885-17886	-	
84-81	17886-17887	-	
84-82	17887-17888	-	
84-83	17888-17889	-	
84-84	17889-17890	-	
84-85	17890-17891	-	
84-86	17891-17892	-	
84-87	17892-17893	-	
84-88	17893-17894	-	
84-89	17894-17895	-	
84-90	17895-17896	-	
84-91	17896-17897	-	
84-92	17897-17898	-	
84-93	17898-17899	-	
84-94	17899-17900	-	
84-95	17900-17901	-	
84-96	17901-17902	-	
84-97	17902-17903	-	
84-98	17903-17904	-	
84-99	17904-17905	-	
84-100	17905-17906	-	
84-101	17906-17907	-	
84-102	17908-17918	1561242727	
84-103	17919-17920	-	
84-104	17920-17930	1990695905	
84-105	17932-17940	Approved	
84-106	17943-17951	23228.14	
84-107	17952-17958	select	
84-108	17959-17962	sum	
84-109	17962-17963	(	
84-110	17963-17968	delta	
84-111	17968-17969	)	
84-112	17969-17970	,	
84-113	17970-17973	sum	
84-114	17973-17974	(	
84-115	17974-17982	bbalance	
84-116	17982-17983	)	
84-117	17984-17988	from	
84-118	17989-18004	pgbench_history	
84-119	18005-18006	h	
84-120	18006-18007	,	
84-121	18008-18024	pgbench_branches	
84-122	18025-18026	b	
84-123	18027-18032	where	
84-124	18033-18038	b.bid	
84-125	18038-18039	=	
84-126	18039-18044	h.bid	
84-127	18045-18048	and	
84-128	18049-18054	b.bid	
84-129	18055-18057	in	
84-130	18058-18059	(	
84-131	18059-18064	1,2,3	
84-132	18064-18065	)	
84-133	18066-18069	and	
84-134	18070-18075	mtime	
84-135	18076-18083	between	
84-136	18084-18085	(	
84-137	18085-18091	select	
84-138	18092-18095	min	
84-139	18095-18096	(	
84-140	18096-18101	mtime	
84-141	18101-18102	)	
84-142	18103-18107	from	
84-143	18108-18123	pgbench_history	
84-144	18124-18126	mn	
84-145	18126-18127	)	
84-146	18128-18131	and	
84-147	18132-18133	(	
84-148	18133-18139	select	
84-149	18140-18143	max	
84-150	18143-18144	(	
84-151	18144-18149	mtime	
84-152	18149-18150	)	
84-153	18151-18155	from	
84-154	18156-18171	pgbench_history	
84-155	18172-18174	mx	
84-156	18174-18175	)	
84-157	18175-18176	;	
84-158	18177-18187	1561242727	
84-159	18188-18189	-	
84-160	18189-18198	794604077	
84-161	18200-18210	UnApproved	
84-162	18213-18219	111.17	
84-163	18220-18226	select	
84-164	18227-18230	sum	
84-165	18230-18231	(	
84-166	18231-18236	delta	
84-167	18236-18237	)	
84-168	18237-18238	,	
84-169	18238-18241	sum	
84-170	18241-18242	(	
84-171	18242-18250	bbalance	
84-172	18250-18251	)	
84-173	18252-18256	from	
84-174	18257-18272	pgbench_history	
84-175	18273-18274	h	
84-176	18274-18275	,	
84-177	18276-18292	pgbench_branches	
84-178	18293-18294	b	
84-179	18295-18300	where	
84-180	18301-18306	b.bid	
84-181	18306-18307	=	
84-182	18307-18312	h.bid	
84-183	18313-18316	and	
84-184	18317-18322	b.bid	
84-185	18323-18325	in	
84-186	18326-18327	(	
84-187	18327-18332	1,2,3	
84-188	18332-18333	)	
84-189	18334-18337	and	
84-190	18338-18343	mtime	
84-191	18344-18351	between	
84-192	18352-18353	(	
84-193	18353-18359	select	
84-194	18360-18363	min	
84-195	18363-18364	(	
84-196	18364-18369	mtime	
84-197	18369-18370	)	
84-198	18371-18375	from	
84-199	18376-18391	pgbench_history	
84-200	18392-18394	mn	
84-201	18394-18395	)	
84-202	18396-18399	and	
84-203	18400-18401	(	
84-204	18401-18407	select	
84-205	18408-18411	max	
84-206	18411-18412	(	
84-207	18412-18417	mtime	
84-208	18417-18418	)	
84-209	18419-18423	from	
84-210	18424-18439	pgbench_history	
84-211	18440-18442	mx	
84-212	18442-18443	)	
84-213	18443-18444	;	
84-214	18445-18448	The	
84-215	18449-18458	following	
84-216	18459-18461	is	
84-217	18462-18464	an	
84-218	18465-18472	example	
84-219	18473-18475	of	
84-220	18476-18480	plan	
84-221	18481-18493	adaptability	
84-222	18494-18498	with	
84-223	18499-18502	QPM	
84-224	18502-18503	.	

#Text=This example evaluates the unapproved plan based on the minimum speedup factor.
85-1	18504-18508	This	
85-2	18509-18516	example	
85-3	18517-18526	evaluates	
85-4	18527-18530	the	
85-5	18531-18541	unapproved	
85-6	18542-18546	plan	
85-7	18547-18552	based	
85-8	18553-18555	on	
85-9	18556-18559	the	
85-10	18560-18567	minimum	
85-11	18568-18575	speedup	
85-12	18576-18582	factor	
85-13	18582-18583	.	

#Text=It approves any captured unapproved plan that is faster by at least 10 percent than the best approved plan for the statement.
86-1	18584-18586	It	
86-2	18587-18595	approves	
86-3	18596-18599	any	
86-4	18600-18608	captured	
86-5	18609-18619	unapproved	
86-6	18620-18624	plan	
86-7	18625-18629	that	
86-8	18630-18632	is	
86-9	18633-18639	faster	
86-10	18640-18642	by	
86-11	18643-18645	at	
86-12	18646-18651	least	
86-13	18652-18654	10	
86-14	18655-18662	percent	
86-15	18663-18667	than	
86-16	18668-18671	the	
86-17	18672-18676	best	
86-18	18677-18685	approved	
86-19	18686-18690	plan	
86-20	18691-18694	for	
86-21	18695-18698	the	
86-22	18699-18708	statement	
86-23	18708-18709	.	

#Text=For additional details, see Evaluating Plan Performance in the Aurora documentation.
87-1	18710-18713	For	
87-2	18714-18724	additional	
87-3	18725-18732	details	
87-4	18732-18733	,	
87-5	18734-18737	see	
87-6	18738-18748	Evaluating	
87-7	18749-18753	Plan	
87-8	18754-18765	Performance	
87-9	18766-18768	in	
87-10	18769-18772	the	
87-11	18773-18779	Aurora	
87-12	18780-18793	documentation	
87-13	18793-18794	.	

#Text=SELECT apg_plan_mgmt.Evolve_plan_baselines (sql_hash, plan_hash, 1.1,'approve')
#Text=FROM
#Text=apg_plan_mgmt.dba_plans
#Text=WHERE
#Text=status = 'Unapproved';
#Text=Output:
#Text=NOTICE: [Unapproved] SQL Hash: 1561242727, Plan Hash: -794604077, SELECT sum(delta),sum(bbalance) from pgbench_history h, pgbench_branches b where ...
88-1	18795-18801	SELECT	
88-2	18802-18837	apg_plan_mgmt.Evolve_plan_baselines	
88-3	18838-18839	(	
88-4	18839-18847	sql_hash	
88-5	18847-18848	,	
88-6	18849-18858	plan_hash	
88-7	18858-18859	,	
88-8	18860-18863	1.1	
88-9	18863-18864	,	
88-10	18864-18865	'	
88-11	18865-18872	approve	
88-12	18872-18873	'	
88-13	18873-18874	)	
88-14	18875-18879	FROM	
88-15	18880-18903	apg_plan_mgmt.dba_plans	
88-16	18904-18909	WHERE	
88-17	18910-18916	status	
88-18	18917-18918	=	
88-19	18919-18920	'	
88-20	18920-18930	Unapproved	
88-21	18930-18931	'	
88-22	18931-18932	;	
88-23	18933-18939	Output	
88-24	18939-18940	:	
88-25	18941-18947	NOTICE	
88-26	18947-18948	:	
88-27	18949-18950	[	
88-28	18950-18960	Unapproved	
88-29	18960-18961	]	
88-30	18962-18965	SQL	
88-31	18966-18970	Hash	
88-32	18970-18971	:	
88-33	18972-18982	1561242727	
88-34	18982-18983	,	
88-35	18984-18988	Plan	
88-36	18989-18993	Hash	
88-37	18993-18994	:	
88-38	18995-18996	-	
88-39	18996-19005	794604077	
88-40	19005-19006	,	
88-41	19007-19013	SELECT	
88-42	19014-19017	sum	
88-43	19017-19018	(	
88-44	19018-19023	delta	
88-45	19023-19024	)	
88-46	19024-19025	,	
88-47	19025-19028	sum	
88-48	19028-19029	(	
88-49	19029-19037	bbalance	
88-50	19037-19038	)	
88-51	19039-19043	from	
88-52	19044-19059	pgbench_history	
88-53	19060-19061	h	
88-54	19061-19062	,	
88-55	19063-19079	pgbench_branches	
88-56	19080-19081	b	
88-57	19082-19087	where	
88-58	19088-19089	.	
88-59	19089-19090	.	
88-60	19090-19091	.	

#Text=NOTICE:
#Text=Baseline
#Text=[Planning time 0.693 ms, Execution time 316.644 ms]
#Text=NOTICE:
#Text=Baseline+1 [Planning time 0.695 ms, Execution time 213.919 ms]
#Text=NOTICE:
#Text=Total time benefit: 102.723 ms, Execution time benefit: 102.725 ms, Avg Log Cardinality Error: 3.53418, Cost = 111.16..111.17
#Text=NOTICE:
#Text=Unapproved -> Approved
#Text=After QPM evaluates the plan based on the speed factor, the plan status changes from unapproved to approved.
89-1	19092-19098	NOTICE	
89-2	19098-19099	:	
89-3	19100-19108	Baseline	
89-4	19109-19110	[	
89-5	19110-19118	Planning	
89-6	19119-19123	time	
89-7	19124-19129	0.693	
89-8	19130-19132	ms	
89-9	19132-19133	,	
89-10	19134-19143	Execution	
89-11	19144-19148	time	
89-12	19149-19156	316.644	
89-13	19157-19159	ms	
89-14	19159-19160	]	
89-15	19161-19167	NOTICE	
89-16	19167-19168	:	
89-17	19169-19177	Baseline	
89-18	19177-19178	+	
89-19	19178-19179	1	
89-20	19180-19181	[	
89-21	19181-19189	Planning	
89-22	19190-19194	time	
89-23	19195-19200	0.695	
89-24	19201-19203	ms	
89-25	19203-19204	,	
89-26	19205-19214	Execution	
89-27	19215-19219	time	
89-28	19220-19227	213.919	
89-29	19228-19230	ms	
89-30	19230-19231	]	
89-31	19232-19238	NOTICE	
89-32	19238-19239	:	
89-33	19240-19245	Total	
89-34	19246-19250	time	
89-35	19251-19258	benefit	
89-36	19258-19259	:	
89-37	19260-19267	102.723	
89-38	19268-19270	ms	
89-39	19270-19271	,	
89-40	19272-19281	Execution	
89-41	19282-19286	time	
89-42	19287-19294	benefit	
89-43	19294-19295	:	
89-44	19296-19303	102.725	
89-45	19304-19306	ms	
89-46	19306-19307	,	
89-47	19308-19311	Avg	
89-48	19312-19315	Log	
89-49	19316-19327	Cardinality	
89-50	19328-19333	Error	
89-51	19333-19334	:	
89-52	19335-19342	3.53418	
89-53	19342-19343	,	
89-54	19344-19348	Cost	
89-55	19349-19350	=	
89-56	19351-19357	111.16	
89-57	19357-19358	.	
89-58	19358-19365	.111.17	
89-59	19366-19372	NOTICE	
89-60	19372-19373	:	
89-61	19374-19384	Unapproved	
89-62	19385-19386	-	
89-63	19386-19387	>	
89-64	19388-19396	Approved	
89-65	19397-19402	After	
89-66	19403-19406	QPM	
89-67	19407-19416	evaluates	
89-68	19417-19420	the	
89-69	19421-19425	plan	
89-70	19426-19431	based	
89-71	19432-19434	on	
89-72	19435-19438	the	
89-73	19439-19444	speed	
89-74	19445-19451	factor	
89-75	19451-19452	,	
89-76	19453-19456	the	
89-77	19457-19461	plan	
89-78	19462-19468	status	
89-79	19469-19476	changes	
89-80	19477-19481	from	
89-81	19482-19492	unapproved	
89-82	19493-19495	to	
89-83	19496-19504	approved	
89-84	19504-19505	.	

#Text=At this point, the optimizer can choose the newly approved lower cost plan for that managed statement.
90-1	19506-19508	At	
90-2	19509-19513	this	
90-3	19514-19519	point	
90-4	19519-19520	,	
90-5	19521-19524	the	
90-6	19525-19534	optimizer	
90-7	19535-19538	can	
90-8	19539-19545	choose	
90-9	19546-19549	the	
90-10	19550-19555	newly	
90-11	19556-19564	approved	
90-12	19565-19570	lower	
90-13	19571-19575	cost	
90-14	19576-19580	plan	
90-15	19581-19584	for	
90-16	19585-19589	that	
90-17	19590-19597	managed	
90-18	19598-19607	statement	
90-19	19607-19608	.	

#Text=SELECT sql_hash,
#Text=plan_hash,
#Text=status,
#Text=estimated_total_cost "cost",
#Text=sql_text
#Text=FROM apg_plan_mgmt.dba_plans;
#Text=Output:
#Text=sql_hash
#Text=plan_hash
#Text=status
#Text=cost |
#Text=sql_text
#Text=------------+-------------+----------+---------+-----------------------------------------
#Text=1561242727\t-1990695905\t Approved \t 23228.14
#Text=select sum(delta),sum(bbalance) from pgbench_history h, pgbench_branches b where b.bid=h.bid and b.bid in (1,2,3) and mtime between (select min(mtime) from pgbench_history mn) and (select max(mtime) from pgbench_history mx);
#Text=1561242727\t-794604077\t Approved \t 111.17
#Text=select sum(delta),sum(bbalance) from pgbench_history h, pgbench_branches b where b.bid=h.bid and b.bid in (1,2,3) and mtime between (select min(mtime) from pgbench_history mn) and (select max(mtime) from pgbench_history mx);
#Text=j.
91-1	19609-19615	SELECT	
91-2	19616-19624	sql_hash	
91-3	19624-19625	,	
91-4	19626-19635	plan_hash	
91-5	19635-19636	,	
91-6	19637-19643	status	
91-7	19643-19644	,	
91-8	19645-19665	estimated_total_cost	
91-9	19666-19667	"	
91-10	19667-19671	cost	
91-11	19671-19672	"	
91-12	19672-19673	,	
91-13	19674-19682	sql_text	
91-14	19683-19687	FROM	
91-15	19688-19711	apg_plan_mgmt.dba_plans	
91-16	19711-19712	;	
91-17	19713-19719	Output	
91-18	19719-19720	:	
91-19	19721-19729	sql_hash	
91-20	19730-19739	plan_hash	
91-21	19740-19746	status	
91-22	19747-19751	cost	
91-23	19752-19753	|	
91-24	19754-19762	sql_text	
91-25	19763-19764	-	
91-26	19764-19765	-	
91-27	19765-19766	-	
91-28	19766-19767	-	
91-29	19767-19768	-	
91-30	19768-19769	-	
91-31	19769-19770	-	
91-32	19770-19771	-	
91-33	19771-19772	-	
91-34	19772-19773	-	
91-35	19773-19774	-	
91-36	19774-19775	-	
91-37	19775-19776	+	
91-38	19776-19777	-	
91-39	19777-19778	-	
91-40	19778-19779	-	
91-41	19779-19780	-	
91-42	19780-19781	-	
91-43	19781-19782	-	
91-44	19782-19783	-	
91-45	19783-19784	-	
91-46	19784-19785	-	
91-47	19785-19786	-	
91-48	19786-19787	-	
91-49	19787-19788	-	
91-50	19788-19789	-	
91-51	19789-19790	+	
91-52	19790-19791	-	
91-53	19791-19792	-	
91-54	19792-19793	-	
91-55	19793-19794	-	
91-56	19794-19795	-	
91-57	19795-19796	-	
91-58	19796-19797	-	
91-59	19797-19798	-	
91-60	19798-19799	-	
91-61	19799-19800	-	
91-62	19800-19801	+	
91-63	19801-19802	-	
91-64	19802-19803	-	
91-65	19803-19804	-	
91-66	19804-19805	-	
91-67	19805-19806	-	
91-68	19806-19807	-	
91-69	19807-19808	-	
91-70	19808-19809	-	
91-71	19809-19810	-	
91-72	19810-19811	+	
91-73	19811-19812	-	
91-74	19812-19813	-	
91-75	19813-19814	-	
91-76	19814-19815	-	
91-77	19815-19816	-	
91-78	19816-19817	-	
91-79	19817-19818	-	
91-80	19818-19819	-	
91-81	19819-19820	-	
91-82	19820-19821	-	
91-83	19821-19822	-	
91-84	19822-19823	-	
91-85	19823-19824	-	
91-86	19824-19825	-	
91-87	19825-19826	-	
91-88	19826-19827	-	
91-89	19827-19828	-	
91-90	19828-19829	-	
91-91	19829-19830	-	
91-92	19830-19831	-	
91-93	19831-19832	-	
91-94	19832-19833	-	
91-95	19833-19834	-	
91-96	19834-19835	-	
91-97	19835-19836	-	
91-98	19836-19837	-	
91-99	19837-19838	-	
91-100	19838-19839	-	
91-101	19839-19840	-	
91-102	19840-19841	-	
91-103	19841-19842	-	
91-104	19842-19843	-	
91-105	19843-19844	-	
91-106	19844-19845	-	
91-107	19845-19846	-	
91-108	19846-19847	-	
91-109	19847-19848	-	
91-110	19848-19849	-	
91-111	19849-19850	-	
91-112	19850-19851	-	
91-113	19851-19852	-	
91-114	19853-19863	1561242727	
91-115	19864-19865	-	
91-116	19865-19875	1990695905	
91-117	19877-19885	Approved	
91-118	19888-19896	23228.14	
91-119	19897-19903	select	
91-120	19904-19907	sum	
91-121	19907-19908	(	
91-122	19908-19913	delta	
91-123	19913-19914	)	
91-124	19914-19915	,	
91-125	19915-19918	sum	
91-126	19918-19919	(	
91-127	19919-19927	bbalance	
91-128	19927-19928	)	
91-129	19929-19933	from	
91-130	19934-19949	pgbench_history	
91-131	19950-19951	h	
91-132	19951-19952	,	
91-133	19953-19969	pgbench_branches	
91-134	19970-19971	b	
91-135	19972-19977	where	
91-136	19978-19983	b.bid	
91-137	19983-19984	=	
91-138	19984-19989	h.bid	
91-139	19990-19993	and	
91-140	19994-19999	b.bid	
91-141	20000-20002	in	
91-142	20003-20004	(	
91-143	20004-20009	1,2,3	
91-144	20009-20010	)	
91-145	20011-20014	and	
91-146	20015-20020	mtime	
91-147	20021-20028	between	
91-148	20029-20030	(	
91-149	20030-20036	select	
91-150	20037-20040	min	
91-151	20040-20041	(	
91-152	20041-20046	mtime	
91-153	20046-20047	)	
91-154	20048-20052	from	
91-155	20053-20068	pgbench_history	
91-156	20069-20071	mn	
91-157	20071-20072	)	
91-158	20073-20076	and	
91-159	20077-20078	(	
91-160	20078-20084	select	
91-161	20085-20088	max	
91-162	20088-20089	(	
91-163	20089-20094	mtime	
91-164	20094-20095	)	
91-165	20096-20100	from	
91-166	20101-20116	pgbench_history	
91-167	20117-20119	mx	
91-168	20119-20120	)	
91-169	20120-20121	;	
91-170	20122-20132	1561242727	
91-171	20133-20134	-	
91-172	20134-20143	794604077	
91-173	20145-20153	Approved	
91-174	20156-20162	111.17	
91-175	20163-20169	select	
91-176	20170-20173	sum	
91-177	20173-20174	(	
91-178	20174-20179	delta	
91-179	20179-20180	)	
91-180	20180-20181	,	
91-181	20181-20184	sum	
91-182	20184-20185	(	
91-183	20185-20193	bbalance	
91-184	20193-20194	)	
91-185	20195-20199	from	
91-186	20200-20215	pgbench_history	
91-187	20216-20217	h	
91-188	20217-20218	,	
91-189	20219-20235	pgbench_branches	
91-190	20236-20237	b	
91-191	20238-20243	where	
91-192	20244-20249	b.bid	
91-193	20249-20250	=	
91-194	20250-20255	h.bid	
91-195	20256-20259	and	
91-196	20260-20265	b.bid	
91-197	20266-20268	in	
91-198	20269-20270	(	
91-199	20270-20275	1,2,3	
91-200	20275-20276	)	
91-201	20277-20280	and	
91-202	20281-20286	mtime	
91-203	20287-20294	between	
91-204	20295-20296	(	
91-205	20296-20302	select	
91-206	20303-20306	min	
91-207	20306-20307	(	
91-208	20307-20312	mtime	
91-209	20312-20313	)	
91-210	20314-20318	from	
91-211	20319-20334	pgbench_history	
91-212	20335-20337	mn	
91-213	20337-20338	)	
91-214	20339-20342	and	
91-215	20343-20344	(	
91-216	20344-20350	select	
91-217	20351-20354	max	
91-218	20354-20355	(	
91-219	20355-20360	mtime	
91-220	20360-20361	)	
91-221	20362-20366	from	
91-222	20367-20382	pgbench_history	
91-223	20383-20385	mx	
91-224	20385-20386	)	
91-225	20386-20387	;	
91-226	20388-20389	j	
91-227	20389-20390	.	

#Text=View the explain plan output to see whether the query is using the newly approved minimum cost plan.
#Text=explain (hashes true)
#Text=SELECT Sum(delta),
#Text=Sum(bbalance)
#Text=FROM
#Text=pgbench_history h,
#Text=pgbench_branches b
#Text=WHERE
#Text=b.bid = h.bid
#Text=AND b.bid IN ( 1, 2, 3 )
#Text=AND mtime BETWEEN (SELECT Min(mtime)
#Text=FROM
#Text=pgbench_history mn) AND (SELECT Max(mtime)
#Text=FROM
#Text=pgbench_history mx);
#Text=Output:
#Text=QUERY PLAN
#Text=-----------------------------------------------------------------------------------------------------------------
#Text=Aggregate
#Text=(cost=163.22..163.23 rows=1 width=16)
#Text=InitPlan 2 (returns $1)
#Text=Result
#Text=(cost=0.46..0.47 rows=1 width=8)
#Text=InitPlan 1 (returns $0)
#Text=Limit
#Text=(cost=0.42..0.46 rows=1 width=8)
#Text=Index Only Scan using pgbench_hist_mtime on pgbench_history mn
#Text=(cost=0.42..23092.45 rows=638320 width=8)
#Text=Index Cond: (mtime IS NOT NULL)
#Text=InitPlan 4 (returns $3)
#Text=Result
#Text=(cost=0.46..0.47 rows=1 width=8)
#Text=InitPlan 3 (returns $2)
#Text=Limit
#Text=(cost=0.42..0.46 rows=1 width=8)
#Text=Index Only Scan Backward using pgbench_hist_mtime on pgbench_history mx
#Text=(cost=0.42..23092.45 rows=638320 width=8)
#Text=Index Cond: (mtime IS NOT NULL)
#Text=Hash Join
#Text=(cost=23.70..161.83 rows=89 width=8)
#Text=Hash Cond: (h.bid = b.bid)
#Text=Index Scan using pgbench_hist_mtime on pgbench_history h
#Text=(cost=0.42..129.85 rows=3192 width=8)
#Text=Index Cond: ((mtime >= $1) AND (mtime <= $3))
#Text=Hash
#Text=(cost=23.23..23.23 rows=3 width=8)
#Text=Bitmap Heap Scan on pgbench_branches b
#Text=(cost=12.83..23.23 rows=3 width=8)
#Text=Recheck Cond: (bid = ANY ('{1,2,3}'::integer[]))
#Text=Bitmap Index Scan on pgbench_branches_pkey
#Text=(cost=0.00..12.83 rows=3 width=0)
#Text=Index Cond: (bid = ANY ('{1,2,3}'::integer[]))
#Text=SQL Hash: 1561242727, Plan Hash: -794604077
#Text=3.
92-1	20391-20395	View	
92-2	20396-20399	the	
92-3	20400-20407	explain	
92-4	20408-20412	plan	
92-5	20413-20419	output	
92-6	20420-20422	to	
92-7	20423-20426	see	
92-8	20427-20434	whether	
92-9	20435-20438	the	
92-10	20439-20444	query	
92-11	20445-20447	is	
92-12	20448-20453	using	
92-13	20454-20457	the	
92-14	20458-20463	newly	
92-15	20464-20472	approved	
92-16	20473-20480	minimum	
92-17	20481-20485	cost	
92-18	20486-20490	plan	
92-19	20490-20491	.	
92-20	20492-20499	explain	
92-21	20500-20501	(	
92-22	20501-20507	hashes	
92-23	20508-20512	true	
92-24	20512-20513	)	
92-25	20514-20520	SELECT	
92-26	20521-20524	Sum	
92-27	20524-20525	(	
92-28	20525-20530	delta	
92-29	20530-20531	)	
92-30	20531-20532	,	
92-31	20533-20536	Sum	
92-32	20536-20537	(	
92-33	20537-20545	bbalance	
92-34	20545-20546	)	
92-35	20547-20551	FROM	
92-36	20552-20567	pgbench_history	
92-37	20568-20569	h	
92-38	20569-20570	,	
92-39	20571-20587	pgbench_branches	
92-40	20588-20589	b	
92-41	20590-20595	WHERE	
92-42	20596-20601	b.bid	
92-43	20602-20603	=	
92-44	20604-20609	h.bid	
92-45	20610-20613	AND	
92-46	20614-20619	b.bid	
92-47	20620-20622	IN	
92-48	20623-20624	(	
92-49	20625-20626	1	
92-50	20626-20627	,	
92-51	20628-20629	2	
92-52	20629-20630	,	
92-53	20631-20632	3	
92-54	20633-20634	)	
92-55	20635-20638	AND	
92-56	20639-20644	mtime	
92-57	20645-20652	BETWEEN	
92-58	20653-20654	(	
92-59	20654-20660	SELECT	
92-60	20661-20664	Min	
92-61	20664-20665	(	
92-62	20665-20670	mtime	
92-63	20670-20671	)	
92-64	20672-20676	FROM	
92-65	20677-20692	pgbench_history	
92-66	20693-20695	mn	
92-67	20695-20696	)	
92-68	20697-20700	AND	
92-69	20701-20702	(	
92-70	20702-20708	SELECT	
92-71	20709-20712	Max	
92-72	20712-20713	(	
92-73	20713-20718	mtime	
92-74	20718-20719	)	
92-75	20720-20724	FROM	
92-76	20725-20740	pgbench_history	
92-77	20741-20743	mx	
92-78	20743-20744	)	
92-79	20744-20745	;	
92-80	20746-20752	Output	
92-81	20752-20753	:	
92-82	20754-20759	QUERY	
92-83	20760-20764	PLAN	
92-84	20765-20766	-	
92-85	20766-20767	-	
92-86	20767-20768	-	
92-87	20768-20769	-	
92-88	20769-20770	-	
92-89	20770-20771	-	
92-90	20771-20772	-	
92-91	20772-20773	-	
92-92	20773-20774	-	
92-93	20774-20775	-	
92-94	20775-20776	-	
92-95	20776-20777	-	
92-96	20777-20778	-	
92-97	20778-20779	-	
92-98	20779-20780	-	
92-99	20780-20781	-	
92-100	20781-20782	-	
92-101	20782-20783	-	
92-102	20783-20784	-	
92-103	20784-20785	-	
92-104	20785-20786	-	
92-105	20786-20787	-	
92-106	20787-20788	-	
92-107	20788-20789	-	
92-108	20789-20790	-	
92-109	20790-20791	-	
92-110	20791-20792	-	
92-111	20792-20793	-	
92-112	20793-20794	-	
92-113	20794-20795	-	
92-114	20795-20796	-	
92-115	20796-20797	-	
92-116	20797-20798	-	
92-117	20798-20799	-	
92-118	20799-20800	-	
92-119	20800-20801	-	
92-120	20801-20802	-	
92-121	20802-20803	-	
92-122	20803-20804	-	
92-123	20804-20805	-	
92-124	20805-20806	-	
92-125	20806-20807	-	
92-126	20807-20808	-	
92-127	20808-20809	-	
92-128	20809-20810	-	
92-129	20810-20811	-	
92-130	20811-20812	-	
92-131	20812-20813	-	
92-132	20813-20814	-	
92-133	20814-20815	-	
92-134	20815-20816	-	
92-135	20816-20817	-	
92-136	20817-20818	-	
92-137	20818-20819	-	
92-138	20819-20820	-	
92-139	20820-20821	-	
92-140	20821-20822	-	
92-141	20822-20823	-	
92-142	20823-20824	-	
92-143	20824-20825	-	
92-144	20825-20826	-	
92-145	20826-20827	-	
92-146	20827-20828	-	
92-147	20828-20829	-	
92-148	20829-20830	-	
92-149	20830-20831	-	
92-150	20831-20832	-	
92-151	20832-20833	-	
92-152	20833-20834	-	
92-153	20834-20835	-	
92-154	20835-20836	-	
92-155	20836-20837	-	
92-156	20837-20838	-	
92-157	20838-20839	-	
92-158	20839-20840	-	
92-159	20840-20841	-	
92-160	20841-20842	-	
92-161	20842-20843	-	
92-162	20843-20844	-	
92-163	20844-20845	-	
92-164	20845-20846	-	
92-165	20846-20847	-	
92-166	20847-20848	-	
92-167	20848-20849	-	
92-168	20849-20850	-	
92-169	20850-20851	-	
92-170	20851-20852	-	
92-171	20852-20853	-	
92-172	20853-20854	-	
92-173	20854-20855	-	
92-174	20855-20856	-	
92-175	20856-20857	-	
92-176	20857-20858	-	
92-177	20858-20859	-	
92-178	20859-20860	-	
92-179	20860-20861	-	
92-180	20861-20862	-	
92-181	20862-20863	-	
92-182	20863-20864	-	
92-183	20864-20865	-	
92-184	20865-20866	-	
92-185	20866-20867	-	
92-186	20867-20868	-	
92-187	20868-20869	-	
92-188	20869-20870	-	
92-189	20870-20871	-	
92-190	20871-20872	-	
92-191	20872-20873	-	
92-192	20873-20874	-	
92-193	20874-20875	-	
92-194	20875-20876	-	
92-195	20876-20877	-	
92-196	20877-20878	-	
92-197	20879-20888	Aggregate	
92-198	20889-20890	(	
92-199	20890-20894	cost	
92-200	20894-20895	=	
92-201	20895-20901	163.22	
92-202	20901-20902	.	
92-203	20902-20909	.163.23	
92-204	20910-20914	rows	
92-205	20914-20915	=	
92-206	20915-20916	1	
92-207	20917-20922	width	
92-208	20922-20923	=	
92-209	20923-20925	16	
92-210	20925-20926	)	
92-211	20927-20935	InitPlan	
92-212	20936-20937	2	
92-213	20938-20939	(	
92-214	20939-20946	returns	
92-215	20947-20949	$1	
92-216	20949-20950	)	
92-217	20951-20957	Result	
92-218	20958-20959	(	
92-219	20959-20963	cost	
92-220	20963-20964	=	
92-221	20964-20968	0.46	
92-222	20968-20969	.	
92-223	20969-20974	.0.47	
92-224	20975-20979	rows	
92-225	20979-20980	=	
92-226	20980-20981	1	
92-227	20982-20987	width	
92-228	20987-20988	=	
92-229	20988-20989	8	
92-230	20989-20990	)	
92-231	20991-20999	InitPlan	
92-232	21000-21001	1	
92-233	21002-21003	(	
92-234	21003-21010	returns	
92-235	21011-21013	$0	
92-236	21013-21014	)	
92-237	21015-21020	Limit	
92-238	21021-21022	(	
92-239	21022-21026	cost	
92-240	21026-21027	=	
92-241	21027-21031	0.42	
92-242	21031-21032	.	
92-243	21032-21037	.0.46	
92-244	21038-21042	rows	
92-245	21042-21043	=	
92-246	21043-21044	1	
92-247	21045-21050	width	
92-248	21050-21051	=	
92-249	21051-21052	8	
92-250	21052-21053	)	
92-251	21054-21059	Index	
92-252	21060-21064	Only	
92-253	21065-21069	Scan	
92-254	21070-21075	using	
92-255	21076-21094	pgbench_hist_mtime	
92-256	21095-21097	on	
92-257	21098-21113	pgbench_history	
92-258	21114-21116	mn	
92-259	21117-21118	(	
92-260	21118-21122	cost	
92-261	21122-21123	=	
92-262	21123-21127	0.42	
92-263	21127-21128	.	
92-264	21128-21137	.23092.45	
92-265	21138-21142	rows	
92-266	21142-21143	=	
92-267	21143-21149	638320	
92-268	21150-21155	width	
92-269	21155-21156	=	
92-270	21156-21157	8	
92-271	21157-21158	)	
92-272	21159-21164	Index	
92-273	21165-21169	Cond	
92-274	21169-21170	:	
92-275	21171-21172	(	
92-276	21172-21177	mtime	
92-277	21178-21180	IS	
92-278	21181-21184	NOT	
92-279	21185-21189	NULL	
92-280	21189-21190	)	
92-281	21191-21199	InitPlan	
92-282	21200-21201	4	
92-283	21202-21203	(	
92-284	21203-21210	returns	
92-285	21211-21213	$3	
92-286	21213-21214	)	
92-287	21215-21221	Result	
92-288	21222-21223	(	
92-289	21223-21227	cost	
92-290	21227-21228	=	
92-291	21228-21232	0.46	
92-292	21232-21233	.	
92-293	21233-21238	.0.47	
92-294	21239-21243	rows	
92-295	21243-21244	=	
92-296	21244-21245	1	
92-297	21246-21251	width	
92-298	21251-21252	=	
92-299	21252-21253	8	
92-300	21253-21254	)	
92-301	21255-21263	InitPlan	
92-302	21264-21265	3	
92-303	21266-21267	(	
92-304	21267-21274	returns	
92-305	21275-21277	$2	
92-306	21277-21278	)	
92-307	21279-21284	Limit	
92-308	21285-21286	(	
92-309	21286-21290	cost	
92-310	21290-21291	=	
92-311	21291-21295	0.42	
92-312	21295-21296	.	
92-313	21296-21301	.0.46	
92-314	21302-21306	rows	
92-315	21306-21307	=	
92-316	21307-21308	1	
92-317	21309-21314	width	
92-318	21314-21315	=	
92-319	21315-21316	8	
92-320	21316-21317	)	
92-321	21318-21323	Index	
92-322	21324-21328	Only	
92-323	21329-21333	Scan	
92-324	21334-21342	Backward	
92-325	21343-21348	using	
92-326	21349-21367	pgbench_hist_mtime	
92-327	21368-21370	on	
92-328	21371-21386	pgbench_history	
92-329	21387-21389	mx	
92-330	21390-21391	(	
92-331	21391-21395	cost	
92-332	21395-21396	=	
92-333	21396-21400	0.42	
92-334	21400-21401	.	
92-335	21401-21410	.23092.45	
92-336	21411-21415	rows	
92-337	21415-21416	=	
92-338	21416-21422	638320	
92-339	21423-21428	width	
92-340	21428-21429	=	
92-341	21429-21430	8	
92-342	21430-21431	)	
92-343	21432-21437	Index	
92-344	21438-21442	Cond	
92-345	21442-21443	:	
92-346	21444-21445	(	
92-347	21445-21450	mtime	
92-348	21451-21453	IS	
92-349	21454-21457	NOT	
92-350	21458-21462	NULL	
92-351	21462-21463	)	
92-352	21464-21468	Hash	
92-353	21469-21473	Join	
92-354	21474-21475	(	
92-355	21475-21479	cost	
92-356	21479-21480	=	
92-357	21480-21485	23.70	
92-358	21485-21486	.	
92-359	21486-21493	.161.83	
92-360	21494-21498	rows	
92-361	21498-21499	=	
92-362	21499-21501	89	
92-363	21502-21507	width	
92-364	21507-21508	=	
92-365	21508-21509	8	
92-366	21509-21510	)	
92-367	21511-21515	Hash	
92-368	21516-21520	Cond	
92-369	21520-21521	:	
92-370	21522-21523	(	
92-371	21523-21528	h.bid	
92-372	21529-21530	=	
92-373	21531-21536	b.bid	
92-374	21536-21537	)	
92-375	21538-21543	Index	
92-376	21544-21548	Scan	
92-377	21549-21554	using	
92-378	21555-21573	pgbench_hist_mtime	
92-379	21574-21576	on	
92-380	21577-21592	pgbench_history	
92-381	21593-21594	h	
92-382	21595-21596	(	
92-383	21596-21600	cost	
92-384	21600-21601	=	
92-385	21601-21605	0.42	
92-386	21605-21606	.	
92-387	21606-21613	.129.85	
92-388	21614-21618	rows	
92-389	21618-21619	=	
92-390	21619-21623	3192	
92-391	21624-21629	width	
92-392	21629-21630	=	
92-393	21630-21631	8	
92-394	21631-21632	)	
92-395	21633-21638	Index	
92-396	21639-21643	Cond	
92-397	21643-21644	:	
92-398	21645-21646	(	
92-399	21646-21647	(	
92-400	21647-21652	mtime	
92-401	21653-21654	>	
92-402	21654-21655	=	
92-403	21656-21658	$1	
92-404	21658-21659	)	
92-405	21660-21663	AND	
92-406	21664-21665	(	
92-407	21665-21670	mtime	
92-408	21671-21672	<	
92-409	21672-21673	=	
92-410	21674-21676	$3	
92-411	21676-21677	)	
92-412	21677-21678	)	
92-413	21679-21683	Hash	
92-414	21684-21685	(	
92-415	21685-21689	cost	
92-416	21689-21690	=	
92-417	21690-21695	23.23	
92-418	21695-21696	.	
92-419	21696-21702	.23.23	
92-420	21703-21707	rows	
92-421	21707-21708	=	
92-422	21708-21709	3	
92-423	21710-21715	width	
92-424	21715-21716	=	
92-425	21716-21717	8	
92-426	21717-21718	)	
92-427	21719-21725	Bitmap	
92-428	21726-21730	Heap	
92-429	21731-21735	Scan	
92-430	21736-21738	on	
92-431	21739-21755	pgbench_branches	
92-432	21756-21757	b	
92-433	21758-21759	(	
92-434	21759-21763	cost	
92-435	21763-21764	=	
92-436	21764-21769	12.83	
92-437	21769-21770	.	
92-438	21770-21776	.23.23	
92-439	21777-21781	rows	
92-440	21781-21782	=	
92-441	21782-21783	3	
92-442	21784-21789	width	
92-443	21789-21790	=	
92-444	21790-21791	8	
92-445	21791-21792	)	
92-446	21793-21800	Recheck	
92-447	21801-21805	Cond	
92-448	21805-21806	:	
92-449	21807-21808	(	
92-450	21808-21811	bid	
92-451	21812-21813	=	
92-452	21814-21817	ANY	
92-453	21818-21819	(	
92-454	21819-21820	'	
92-455	21820-21821	{	
92-456	21821-21826	1,2,3	
92-457	21826-21827	}	
92-458	21827-21828	'	
92-459	21828-21829	:	
92-460	21829-21830	:	
92-461	21830-21837	integer	
92-462	21837-21838	[	
92-463	21838-21839	]	
92-464	21839-21840	)	
92-465	21840-21841	)	
92-466	21842-21848	Bitmap	
92-467	21849-21854	Index	
92-468	21855-21859	Scan	
92-469	21860-21862	on	
92-470	21863-21884	pgbench_branches_pkey	
92-471	21885-21886	(	
92-472	21886-21890	cost	
92-473	21890-21891	=	
92-474	21891-21895	0.00	
92-475	21895-21896	.	
92-476	21896-21902	.12.83	
92-477	21903-21907	rows	
92-478	21907-21908	=	
92-479	21908-21909	3	
92-480	21910-21915	width	
92-481	21915-21916	=	
92-482	21916-21917	0	
92-483	21917-21918	)	
92-484	21919-21924	Index	
92-485	21925-21929	Cond	
92-486	21929-21930	:	
92-487	21931-21932	(	
92-488	21932-21935	bid	
92-489	21936-21937	=	
92-490	21938-21941	ANY	
92-491	21942-21943	(	
92-492	21943-21944	'	
92-493	21944-21945	{	
92-494	21945-21950	1,2,3	
92-495	21950-21951	}	
92-496	21951-21952	'	
92-497	21952-21953	:	
92-498	21953-21954	:	
92-499	21954-21961	integer	
92-500	21961-21962	[	
92-501	21962-21963	]	
92-502	21963-21964	)	
92-503	21964-21965	)	
92-504	21966-21969	SQL	
92-505	21970-21974	Hash	
92-506	21974-21975	:	
92-507	21976-21986	1561242727	
92-508	21986-21987	,	
92-509	21988-21992	Plan	
92-510	21993-21997	Hash	
92-511	21997-21998	:	
92-512	21999-22000	-	
92-513	22000-22009	794604077	
92-514	22010-22011	3	
92-515	22011-22012	.	

#Text=Fixing plans with QPM using pg_hint_plan
#Text=In some cases, the query optimizer doesn’t generate the best execution plan for the query.
93-1	22013-22019	Fixing	
93-2	22020-22025	plans	
93-3	22026-22030	with	
93-4	22031-22034	QPM	
93-5	22035-22040	using	
93-6	22041-22053	pg_hint_plan	
93-7	22054-22056	In	
93-8	22057-22061	some	
93-9	22062-22067	cases	
93-10	22067-22068	,	
93-11	22069-22072	the	
93-12	22073-22078	query	
93-13	22079-22088	optimizer	
93-14	22089-22094	doesn	
93-15	22094-22095	’	
93-16	22095-22096	t	
93-17	22097-22105	generate	
93-18	22106-22109	the	
93-19	22110-22114	best	
93-20	22115-22124	execution	
93-21	22125-22129	plan	
93-22	22130-22133	for	
93-23	22134-22137	the	
93-24	22138-22143	query	
93-25	22143-22144	.	

#Text=One approach to fixing this problem is to put query hints into your application code, but this approach is widely discouraged because it makes applications more brittle and harder to maintain, and in some cases, you can’t hint the SQL because it is generated by a 3rd party application.
94-1	22145-22148	One	
94-2	22149-22157	approach	
94-3	22158-22160	to	
94-4	22161-22167	fixing	
94-5	22168-22172	this	
94-6	22173-22180	problem	
94-7	22181-22183	is	
94-8	22184-22186	to	
94-9	22187-22190	put	
94-10	22191-22196	query	
94-11	22197-22202	hints	
94-12	22203-22207	into	
94-13	22208-22212	your	
94-14	22213-22224	application	
94-15	22225-22229	code	
94-16	22229-22230	,	
94-17	22231-22234	but	
94-18	22235-22239	this	
94-19	22240-22248	approach	
94-20	22249-22251	is	
94-21	22252-22258	widely	
94-22	22259-22270	discouraged	
94-23	22271-22278	because	
94-24	22279-22281	it	
94-25	22282-22287	makes	
94-26	22288-22300	applications	
94-27	22301-22305	more	
94-28	22306-22313	brittle	
94-29	22314-22317	and	
94-30	22318-22324	harder	
94-31	22325-22327	to	
94-32	22328-22336	maintain	
94-33	22336-22337	,	
94-34	22338-22341	and	
94-35	22342-22344	in	
94-36	22345-22349	some	
94-37	22350-22355	cases	
94-38	22355-22356	,	
94-39	22357-22360	you	
94-40	22361-22364	can	
94-41	22364-22365	’	
94-42	22365-22366	t	
94-43	22367-22371	hint	
94-44	22372-22375	the	
94-45	22376-22379	SQL	
94-46	22380-22387	because	
94-47	22388-22390	it	
94-48	22391-22393	is	
94-49	22394-22403	generated	
94-50	22404-22406	by	
94-51	22407-22408	a	
94-52	22409-22412	3rd	
94-53	22413-22418	party	
94-54	22419-22430	application	
94-55	22430-22431	.	

#Text=What we will show is how to use hints to control the query optimizer, but then to remove the hints and allow QPM to enforce the desired plan, without adding hints to the application code.
95-1	22432-22436	What	
95-2	22437-22439	we	
95-3	22440-22444	will	
95-4	22445-22449	show	
95-5	22450-22452	is	
95-6	22453-22456	how	
95-7	22457-22459	to	
95-8	22460-22463	use	
95-9	22464-22469	hints	
95-10	22470-22472	to	
95-11	22473-22480	control	
95-12	22481-22484	the	
95-13	22485-22490	query	
95-14	22491-22500	optimizer	
95-15	22500-22501	,	
95-16	22502-22505	but	
95-17	22506-22510	then	
95-18	22511-22513	to	
95-19	22514-22520	remove	
95-20	22521-22524	the	
95-21	22525-22530	hints	
95-22	22531-22534	and	
95-23	22535-22540	allow	
95-24	22541-22544	QPM	
95-25	22545-22547	to	
95-26	22548-22555	enforce	
95-27	22556-22559	the	
95-28	22560-22567	desired	
95-29	22568-22572	plan	
95-30	22572-22573	,	
95-31	22574-22581	without	
95-32	22582-22588	adding	
95-33	22589-22594	hints	
95-34	22595-22597	to	
95-35	22598-22601	the	
95-36	22602-22613	application	
95-37	22614-22618	code	
95-38	22618-22619	.	

#Text=For this purpose, PostgreSQL users can use the pg_hint_plan extension to provide directives such as “scan method”, “join method”, “join order”, or “row number correction” to the optimizer.
96-1	22620-22623	For	
96-2	22624-22628	this	
96-3	22629-22636	purpose	
96-4	22636-22637	,	
96-5	22638-22648	PostgreSQL	
96-6	22649-22654	users	
96-7	22655-22658	can	
96-8	22659-22662	use	
96-9	22663-22666	the	
96-10	22667-22679	pg_hint_plan	
96-11	22680-22689	extension	
96-12	22690-22692	to	
96-13	22693-22700	provide	
96-14	22701-22711	directives	
96-15	22712-22716	such	
96-16	22717-22719	as	
96-17	22720-22721	“	
96-18	22721-22725	scan	
96-19	22726-22732	method	
96-20	22732-22733	”	
96-21	22733-22734	,	
96-22	22735-22736	“	
96-23	22736-22740	join	
96-24	22741-22747	method	
96-25	22747-22748	”	
96-26	22748-22749	,	
96-27	22750-22751	“	
96-28	22751-22755	join	
96-29	22756-22761	order	
96-30	22761-22762	”	
96-31	22762-22763	,	
96-32	22764-22766	or	
96-33	22767-22768	“	
96-34	22768-22771	row	
96-35	22772-22778	number	
96-36	22779-22789	correction	
96-37	22789-22790	”	
96-38	22791-22793	to	
96-39	22794-22797	the	
96-40	22798-22807	optimizer	
96-41	22807-22808	.	

#Text=The resulting plan will be saved by QPM, along with any GUC parameters you choose to override (such as work_mem).
97-1	22809-22812	The	
97-2	22813-22822	resulting	
97-3	22823-22827	plan	
97-4	22828-22832	will	
97-5	22833-22835	be	
97-6	22836-22841	saved	
97-7	22842-22844	by	
97-8	22845-22848	QPM	
97-9	22848-22849	,	
97-10	22850-22855	along	
97-11	22856-22860	with	
97-12	22861-22864	any	
97-13	22865-22868	GUC	
97-14	22869-22879	parameters	
97-15	22880-22883	you	
97-16	22884-22890	choose	
97-17	22891-22893	to	
97-18	22894-22902	override	
97-19	22903-22904	(	
97-20	22904-22908	such	
97-21	22909-22911	as	
97-22	22912-22920	work_mem	
97-23	22920-22921	)	
97-24	22921-22922	.	

#Text=QPM remembers any GUC parameter overrides and uses them when it needs to recreate the plan.
98-1	22923-22926	QPM	
98-2	22927-22936	remembers	
98-3	22937-22940	any	
98-4	22941-22944	GUC	
98-5	22945-22954	parameter	
98-6	22955-22964	overrides	
98-7	22965-22968	and	
98-8	22969-22973	uses	
98-9	22974-22978	them	
98-10	22979-22983	when	
98-11	22984-22986	it	
98-12	22987-22992	needs	
98-13	22993-22995	to	
98-14	22996-23004	recreate	
98-15	23005-23008	the	
98-16	23009-23013	plan	
98-17	23013-23014	.	

#Text=To install and learn more about how to use the pg_hint_plan extension, see the pg_hint_plan documentation.
99-1	23015-23017	To	
99-2	23018-23025	install	
99-3	23026-23029	and	
99-4	23030-23035	learn	
99-5	23036-23040	more	
99-6	23041-23046	about	
99-7	23047-23050	how	
99-8	23051-23053	to	
99-9	23054-23057	use	
99-10	23058-23061	the	
99-11	23062-23074	pg_hint_plan	
99-12	23075-23084	extension	
99-13	23084-23085	,	
99-14	23086-23089	see	
99-15	23090-23093	the	
99-16	23094-23106	pg_hint_plan	
99-17	23107-23120	documentation	
99-18	23120-23121	.	

#Text=QPM steps to fix the plan generated by using hints
#Text=Working with pg_hint_plan is incredibly useful for cases where the query can’t be modified to add hints.
100-1	23122-23125	QPM	
100-2	23126-23131	steps	
100-3	23132-23134	to	
100-4	23135-23138	fix	
100-5	23139-23142	the	
100-6	23143-23147	plan	
100-7	23148-23157	generated	
100-8	23158-23160	by	
100-9	23161-23166	using	
100-10	23167-23172	hints	
100-11	23173-23180	Working	
100-12	23181-23185	with	
100-13	23186-23198	pg_hint_plan	
100-14	23199-23201	is	
100-15	23202-23212	incredibly	
100-16	23213-23219	useful	
100-17	23220-23223	for	
100-18	23224-23229	cases	
100-19	23230-23235	where	
100-20	23236-23239	the	
100-21	23240-23245	query	
100-22	23246-23249	can	
100-23	23249-23250	’	
100-24	23250-23251	t	
100-25	23252-23254	be	
100-26	23255-23263	modified	
100-27	23264-23266	to	
100-28	23267-23270	add	
100-29	23271-23276	hints	
100-30	23276-23277	.	

#Text=In this example, you’ll use a sample query to generate an execution plan that you want to modify by adding hints.
101-1	23278-23280	In	
101-2	23281-23285	this	
101-3	23286-23293	example	
101-4	23293-23294	,	
101-5	23295-23298	you	
101-6	23298-23299	’	
101-7	23299-23301	ll	
101-8	23302-23305	use	
101-9	23306-23307	a	
101-10	23308-23314	sample	
101-11	23315-23320	query	
101-12	23321-23323	to	
101-13	23324-23332	generate	
101-14	23333-23335	an	
101-15	23336-23345	execution	
101-16	23346-23350	plan	
101-17	23351-23355	that	
101-18	23356-23359	you	
101-19	23360-23364	want	
101-20	23365-23367	to	
101-21	23368-23374	modify	
101-22	23375-23377	by	
101-23	23378-23384	adding	
101-24	23385-23390	hints	
101-25	23390-23391	.	

#Text=Then you’ll associate the new execution plan with the original unmodified statement.
102-1	23392-23396	Then	
102-2	23397-23400	you	
102-3	23400-23401	’	
102-4	23401-23403	ll	
102-5	23404-23413	associate	
102-6	23414-23417	the	
102-7	23418-23421	new	
102-8	23422-23431	execution	
102-9	23432-23436	plan	
102-10	23437-23441	with	
102-11	23442-23445	the	
102-12	23446-23454	original	
102-13	23455-23465	unmodified	
102-14	23466-23475	statement	
102-15	23475-23476	.	

#Text=Here are the detailed steps:
#Text=a.
103-1	23477-23481	Here	
103-2	23482-23485	are	
103-3	23486-23489	the	
103-4	23490-23498	detailed	
103-5	23499-23504	steps	
103-6	23504-23505	:	
103-7	23506-23507	a	
103-8	23507-23508	.	

#Text=Check if the plan capture is disabled
#Text=show apg_plan_mgmt.capture_plan_baselines;
#Text=Output:
#Text=apg_plan_mgmt.capture_plan_baselines
#Text=--------------------------------------
#Text=off
#Text=(1 row)
#Text=b.
104-1	23509-23514	Check	
104-2	23515-23517	if	
104-3	23518-23521	the	
104-4	23522-23526	plan	
104-5	23527-23534	capture	
104-6	23535-23537	is	
104-7	23538-23546	disabled	
104-8	23547-23551	show	
104-9	23552-23588	apg_plan_mgmt.capture_plan_baselines	
104-10	23588-23589	;	
104-11	23590-23596	Output	
104-12	23596-23597	:	
104-13	23598-23634	apg_plan_mgmt.capture_plan_baselines	
104-14	23635-23636	-	
104-15	23636-23637	-	
104-16	23637-23638	-	
104-17	23638-23639	-	
104-18	23639-23640	-	
104-19	23640-23641	-	
104-20	23641-23642	-	
104-21	23642-23643	-	
104-22	23643-23644	-	
104-23	23644-23645	-	
104-24	23645-23646	-	
104-25	23646-23647	-	
104-26	23647-23648	-	
104-27	23648-23649	-	
104-28	23649-23650	-	
104-29	23650-23651	-	
104-30	23651-23652	-	
104-31	23652-23653	-	
104-32	23653-23654	-	
104-33	23654-23655	-	
104-34	23655-23656	-	
104-35	23656-23657	-	
104-36	23657-23658	-	
104-37	23658-23659	-	
104-38	23659-23660	-	
104-39	23660-23661	-	
104-40	23661-23662	-	
104-41	23662-23663	-	
104-42	23663-23664	-	
104-43	23664-23665	-	
104-44	23665-23666	-	
104-45	23666-23667	-	
104-46	23667-23668	-	
104-47	23668-23669	-	
104-48	23669-23670	-	
104-49	23670-23671	-	
104-50	23671-23672	-	
104-51	23672-23673	-	
104-52	23674-23677	off	
104-53	23678-23679	(	
104-54	23679-23680	1	
104-55	23681-23684	row	
104-56	23684-23685	)	
104-57	23686-23687	b	
104-58	23687-23688	.	

#Text=Run explain plan for the original query without any hints to see the execution plan optimizer generates.
105-1	23689-23692	Run	
105-2	23693-23700	explain	
105-3	23701-23705	plan	
105-4	23706-23709	for	
105-5	23710-23713	the	
105-6	23714-23722	original	
105-7	23723-23728	query	
105-8	23729-23736	without	
105-9	23737-23740	any	
105-10	23741-23746	hints	
105-11	23747-23749	to	
105-12	23750-23753	see	
105-13	23754-23757	the	
105-14	23758-23767	execution	
105-15	23768-23772	plan	
105-16	23773-23782	optimizer	
105-17	23783-23792	generates	
105-18	23792-23793	.	

#Text=The original plan of the query without hints is as follows.
106-1	23794-23797	The	
106-2	23798-23806	original	
106-3	23807-23811	plan	
106-4	23812-23814	of	
106-5	23815-23818	the	
106-6	23819-23824	query	
106-7	23825-23832	without	
106-8	23833-23838	hints	
106-9	23839-23841	is	
106-10	23842-23844	as	
106-11	23845-23852	follows	
106-12	23852-23853	.	

#Text=EXPLAIN (hashes true)
#Text=SELECT
#Text=FROM
#Text=pgbench_branches b
#Text=JOIN
#Text=pgbench_accounts a
#Text=ON b.bid = a.bid
#Text=ORDER BY
#Text=a.aid;
#Text=Output:
#Text=QUERY PLAN
#Text=-----------------------------------------------------------------------------------------
#Text=Gather Merge
#Text=(cost=1000.73..2760454.51 rows=10052747 width=465)
#Text=Workers Planned: 2
#Text=Nested Loop
#Text=(cost=0.70..1599118.05 rows=4188645 width=461)
#Text=Parallel Index Scan using pgbench_accounts_pkey on pgbench_accounts a
#Text=(cost=0.43..405754.08 rows=4188645 width=97)
#Text=Index Scan using pgbench_branches_pkey on pgbench_branches b
#Text=(cost=0.27..0.29 rows=1 width=364)
#Text=Index Cond: (bid = a.bid)
#Text=SQL Hash: 356104612, Plan Hash: 1425407480
#Text=c.
107-1	23854-23861	EXPLAIN	
107-2	23862-23863	(	
107-3	23863-23869	hashes	
107-4	23870-23874	true	
107-5	23874-23875	)	
107-6	23876-23882	SELECT	
107-7	23883-23887	FROM	
107-8	23888-23904	pgbench_branches	
107-9	23905-23906	b	
107-10	23907-23911	JOIN	
107-11	23912-23928	pgbench_accounts	
107-12	23929-23930	a	
107-13	23931-23933	ON	
107-14	23934-23939	b.bid	
107-15	23940-23941	=	
107-16	23942-23947	a.bid	
107-17	23948-23953	ORDER	
107-18	23954-23956	BY	
107-19	23957-23962	a.aid	
107-20	23962-23963	;	
107-21	23964-23970	Output	
107-22	23970-23971	:	
107-23	23972-23977	QUERY	
107-24	23978-23982	PLAN	
107-25	23983-23984	-	
107-26	23984-23985	-	
107-27	23985-23986	-	
107-28	23986-23987	-	
107-29	23987-23988	-	
107-30	23988-23989	-	
107-31	23989-23990	-	
107-32	23990-23991	-	
107-33	23991-23992	-	
107-34	23992-23993	-	
107-35	23993-23994	-	
107-36	23994-23995	-	
107-37	23995-23996	-	
107-38	23996-23997	-	
107-39	23997-23998	-	
107-40	23998-23999	-	
107-41	23999-24000	-	
107-42	24000-24001	-	
107-43	24001-24002	-	
107-44	24002-24003	-	
107-45	24003-24004	-	
107-46	24004-24005	-	
107-47	24005-24006	-	
107-48	24006-24007	-	
107-49	24007-24008	-	
107-50	24008-24009	-	
107-51	24009-24010	-	
107-52	24010-24011	-	
107-53	24011-24012	-	
107-54	24012-24013	-	
107-55	24013-24014	-	
107-56	24014-24015	-	
107-57	24015-24016	-	
107-58	24016-24017	-	
107-59	24017-24018	-	
107-60	24018-24019	-	
107-61	24019-24020	-	
107-62	24020-24021	-	
107-63	24021-24022	-	
107-64	24022-24023	-	
107-65	24023-24024	-	
107-66	24024-24025	-	
107-67	24025-24026	-	
107-68	24026-24027	-	
107-69	24027-24028	-	
107-70	24028-24029	-	
107-71	24029-24030	-	
107-72	24030-24031	-	
107-73	24031-24032	-	
107-74	24032-24033	-	
107-75	24033-24034	-	
107-76	24034-24035	-	
107-77	24035-24036	-	
107-78	24036-24037	-	
107-79	24037-24038	-	
107-80	24038-24039	-	
107-81	24039-24040	-	
107-82	24040-24041	-	
107-83	24041-24042	-	
107-84	24042-24043	-	
107-85	24043-24044	-	
107-86	24044-24045	-	
107-87	24045-24046	-	
107-88	24046-24047	-	
107-89	24047-24048	-	
107-90	24048-24049	-	
107-91	24049-24050	-	
107-92	24050-24051	-	
107-93	24051-24052	-	
107-94	24052-24053	-	
107-95	24053-24054	-	
107-96	24054-24055	-	
107-97	24055-24056	-	
107-98	24056-24057	-	
107-99	24057-24058	-	
107-100	24058-24059	-	
107-101	24059-24060	-	
107-102	24060-24061	-	
107-103	24061-24062	-	
107-104	24062-24063	-	
107-105	24063-24064	-	
107-106	24064-24065	-	
107-107	24065-24066	-	
107-108	24066-24067	-	
107-109	24067-24068	-	
107-110	24068-24069	-	
107-111	24069-24070	-	
107-112	24070-24071	-	
107-113	24071-24072	-	
107-114	24073-24079	Gather	
107-115	24080-24085	Merge	
107-116	24086-24087	(	
107-117	24087-24091	cost	
107-118	24091-24092	=	
107-119	24092-24099	1000.73	
107-120	24099-24100	.	
107-121	24100-24111	.2760454.51	
107-122	24112-24116	rows	
107-123	24116-24117	=	
107-124	24117-24125	10052747	
107-125	24126-24131	width	
107-126	24131-24132	=	
107-127	24132-24135	465	
107-128	24135-24136	)	
107-129	24137-24144	Workers	
107-130	24145-24152	Planned	
107-131	24152-24153	:	
107-132	24154-24155	2	
107-133	24156-24162	Nested	
107-134	24163-24167	Loop	
107-135	24168-24169	(	
107-136	24169-24173	cost	
107-137	24173-24174	=	
107-138	24174-24178	0.70	
107-139	24178-24179	.	
107-140	24179-24190	.1599118.05	
107-141	24191-24195	rows	
107-142	24195-24196	=	
107-143	24196-24203	4188645	
107-144	24204-24209	width	
107-145	24209-24210	=	
107-146	24210-24213	461	
107-147	24213-24214	)	
107-148	24215-24223	Parallel	
107-149	24224-24229	Index	
107-150	24230-24234	Scan	
107-151	24235-24240	using	
107-152	24241-24262	pgbench_accounts_pkey	
107-153	24263-24265	on	
107-154	24266-24282	pgbench_accounts	
107-155	24283-24284	a	
107-156	24285-24286	(	
107-157	24286-24290	cost	
107-158	24290-24291	=	
107-159	24291-24295	0.43	
107-160	24295-24296	.	
107-161	24296-24306	.405754.08	
107-162	24307-24311	rows	
107-163	24311-24312	=	
107-164	24312-24319	4188645	
107-165	24320-24325	width	
107-166	24325-24326	=	
107-167	24326-24328	97	
107-168	24328-24329	)	
107-169	24330-24335	Index	
107-170	24336-24340	Scan	
107-171	24341-24346	using	
107-172	24347-24368	pgbench_branches_pkey	
107-173	24369-24371	on	
107-174	24372-24388	pgbench_branches	
107-175	24389-24390	b	
107-176	24391-24392	(	
107-177	24392-24396	cost	
107-178	24396-24397	=	
107-179	24397-24401	0.27	
107-180	24401-24402	.	
107-181	24402-24407	.0.29	
107-182	24408-24412	rows	
107-183	24412-24413	=	
107-184	24413-24414	1	
107-185	24415-24420	width	
107-186	24420-24421	=	
107-187	24421-24424	364	
107-188	24424-24425	)	
107-189	24426-24431	Index	
107-190	24432-24436	Cond	
107-191	24436-24437	:	
107-192	24438-24439	(	
107-193	24439-24442	bid	
107-194	24443-24444	=	
107-195	24445-24450	a.bid	
107-196	24450-24451	)	
107-197	24452-24455	SQL	
107-198	24456-24460	Hash	
107-199	24460-24461	:	
107-200	24462-24471	356104612	
107-201	24471-24472	,	
107-202	24473-24477	Plan	
107-203	24478-24482	Hash	
107-204	24482-24483	:	
107-205	24484-24494	1425407480	
107-206	24495-24496	c	
107-207	24496-24497	.	

#Text=Enable pg_hint_plan and
#Text=QPM manual plan capture:
#Text=SET pg_hint_plan.enable_hint = true;
#Text=SET apg_plan_mgmt.capture_plan_baselines = manual;
#Text=d.
108-1	24498-24504	Enable	
108-2	24505-24517	pg_hint_plan	
108-3	24518-24521	and	
108-4	24522-24525	QPM	
108-5	24526-24532	manual	
108-6	24533-24537	plan	
108-7	24538-24545	capture	
108-8	24545-24546	:	
108-9	24547-24550	SET	
108-10	24551-24575	pg_hint_plan.enable_hint	
108-11	24576-24577	=	
108-12	24578-24582	true	
108-13	24582-24583	;	
108-14	24584-24587	SET	
108-15	24588-24624	apg_plan_mgmt.capture_plan_baselines	
108-16	24625-24626	=	
108-17	24627-24633	manual	
108-18	24633-24634	;	
108-19	24635-24636	d	
108-20	24636-24637	.	

#Text=Now, EXPLAIN the query with the hints you want to use.
109-1	24638-24641	Now	
109-2	24641-24642	,	
109-3	24643-24650	EXPLAIN	
109-4	24651-24654	the	
109-5	24655-24660	query	
109-6	24661-24665	with	
109-7	24666-24669	the	
109-8	24670-24675	hints	
109-9	24676-24679	you	
109-10	24680-24684	want	
109-11	24685-24687	to	
109-12	24688-24691	use	
109-13	24691-24692	.	

#Text=In the following example, we are using the HashJoin (a, b) hint, which is a directive for the optimizer to use a hash join algorithm to join table a and table b:
#Text=The plan that you want with a hash join is as follows.
#Text=/*+ HashJoin(a b) */
#Text=EXPLAIN (hashes true)
#Text=SELECT
#Text=FROM
#Text=pgbench_branches b
#Text=JOIN
#Text=pgbench_accounts a
#Text=ON b.bid = a.bid
#Text=ORDER BY
#Text=a.aid;
#Text=Output:
#Text=QUERY PLAN
#Text=--------------------------------------------------------------------------
#Text=Gather Merge
#Text=(cost=3345991.72..3443795.01 rows=8377290 width=465)
#Text=Workers Planned: 2
#Text=Sort
#Text=(cost=3344991.70..3355463.31 rows=4188645 width=465)
#Text=Sort Key: a.aid
#Text=Hash Join
#Text=(cost=93.43..221376.54 rows=4188645 width=465)
#Text=Hash Cond: (a.bid = b.bid)
#Text=Parallel Seq Scan on pgbench_accounts a
#Text=(cost=0.00..209856.45 rows=4188645 width=97)
#Text=Hash
#Text=(cost=92.08..92.08 rows=108 width=364)
#Text=Seq Scan on pgbench_branches b
#Text=(cost=0.00..92.08 rows=108 width=364)
#Text=SQL Hash: 356104612, Plan Hash: -58126597
#Text=e.
110-1	24693-24695	In	
110-2	24696-24699	the	
110-3	24700-24709	following	
110-4	24710-24717	example	
110-5	24717-24718	,	
110-6	24719-24721	we	
110-7	24722-24725	are	
110-8	24726-24731	using	
110-9	24732-24735	the	
110-10	24736-24744	HashJoin	
110-11	24745-24746	(	
110-12	24746-24747	a	
110-13	24747-24748	,	
110-14	24749-24750	b	
110-15	24750-24751	)	
110-16	24752-24756	hint	
110-17	24756-24757	,	
110-18	24758-24763	which	
110-19	24764-24766	is	
110-20	24767-24768	a	
110-21	24769-24778	directive	
110-22	24779-24782	for	
110-23	24783-24786	the	
110-24	24787-24796	optimizer	
110-25	24797-24799	to	
110-26	24800-24803	use	
110-27	24804-24805	a	
110-28	24806-24810	hash	
110-29	24811-24815	join	
110-30	24816-24825	algorithm	
110-31	24826-24828	to	
110-32	24829-24833	join	
110-33	24834-24839	table	
110-34	24840-24841	a	
110-35	24842-24845	and	
110-36	24846-24851	table	
110-37	24852-24853	b	
110-38	24853-24854	:	
110-39	24855-24858	The	
110-40	24859-24863	plan	
110-41	24864-24868	that	
110-42	24869-24872	you	
110-43	24873-24877	want	
110-44	24878-24882	with	
110-45	24883-24884	a	
110-46	24885-24889	hash	
110-47	24890-24894	join	
110-48	24895-24897	is	
110-49	24898-24900	as	
110-50	24901-24908	follows	
110-51	24908-24909	.	
110-52	24910-24911	/	
110-53	24911-24912	*	
110-54	24912-24913	+	
110-55	24914-24922	HashJoin	
110-56	24922-24923	(	
110-57	24923-24924	a	
110-58	24925-24926	b	
110-59	24926-24927	)	
110-60	24928-24929	*	
110-61	24929-24930	/	
110-62	24931-24938	EXPLAIN	
110-63	24939-24940	(	
110-64	24940-24946	hashes	
110-65	24947-24951	true	
110-66	24951-24952	)	
110-67	24953-24959	SELECT	
110-68	24960-24964	FROM	
110-69	24965-24981	pgbench_branches	
110-70	24982-24983	b	
110-71	24984-24988	JOIN	
110-72	24989-25005	pgbench_accounts	
110-73	25006-25007	a	
110-74	25008-25010	ON	
110-75	25011-25016	b.bid	
110-76	25017-25018	=	
110-77	25019-25024	a.bid	
110-78	25025-25030	ORDER	
110-79	25031-25033	BY	
110-80	25034-25039	a.aid	
110-81	25039-25040	;	
110-82	25041-25047	Output	
110-83	25047-25048	:	
110-84	25049-25054	QUERY	
110-85	25055-25059	PLAN	
110-86	25060-25061	-	
110-87	25061-25062	-	
110-88	25062-25063	-	
110-89	25063-25064	-	
110-90	25064-25065	-	
110-91	25065-25066	-	
110-92	25066-25067	-	
110-93	25067-25068	-	
110-94	25068-25069	-	
110-95	25069-25070	-	
110-96	25070-25071	-	
110-97	25071-25072	-	
110-98	25072-25073	-	
110-99	25073-25074	-	
110-100	25074-25075	-	
110-101	25075-25076	-	
110-102	25076-25077	-	
110-103	25077-25078	-	
110-104	25078-25079	-	
110-105	25079-25080	-	
110-106	25080-25081	-	
110-107	25081-25082	-	
110-108	25082-25083	-	
110-109	25083-25084	-	
110-110	25084-25085	-	
110-111	25085-25086	-	
110-112	25086-25087	-	
110-113	25087-25088	-	
110-114	25088-25089	-	
110-115	25089-25090	-	
110-116	25090-25091	-	
110-117	25091-25092	-	
110-118	25092-25093	-	
110-119	25093-25094	-	
110-120	25094-25095	-	
110-121	25095-25096	-	
110-122	25096-25097	-	
110-123	25097-25098	-	
110-124	25098-25099	-	
110-125	25099-25100	-	
110-126	25100-25101	-	
110-127	25101-25102	-	
110-128	25102-25103	-	
110-129	25103-25104	-	
110-130	25104-25105	-	
110-131	25105-25106	-	
110-132	25106-25107	-	
110-133	25107-25108	-	
110-134	25108-25109	-	
110-135	25109-25110	-	
110-136	25110-25111	-	
110-137	25111-25112	-	
110-138	25112-25113	-	
110-139	25113-25114	-	
110-140	25114-25115	-	
110-141	25115-25116	-	
110-142	25116-25117	-	
110-143	25117-25118	-	
110-144	25118-25119	-	
110-145	25119-25120	-	
110-146	25120-25121	-	
110-147	25121-25122	-	
110-148	25122-25123	-	
110-149	25123-25124	-	
110-150	25124-25125	-	
110-151	25125-25126	-	
110-152	25126-25127	-	
110-153	25127-25128	-	
110-154	25128-25129	-	
110-155	25129-25130	-	
110-156	25130-25131	-	
110-157	25131-25132	-	
110-158	25132-25133	-	
110-159	25133-25134	-	
110-160	25135-25141	Gather	
110-161	25142-25147	Merge	
110-162	25148-25149	(	
110-163	25149-25153	cost	
110-164	25153-25154	=	
110-165	25154-25164	3345991.72	
110-166	25164-25165	.	
110-167	25165-25176	.3443795.01	
110-168	25177-25181	rows	
110-169	25181-25182	=	
110-170	25182-25189	8377290	
110-171	25190-25195	width	
110-172	25195-25196	=	
110-173	25196-25199	465	
110-174	25199-25200	)	
110-175	25201-25208	Workers	
110-176	25209-25216	Planned	
110-177	25216-25217	:	
110-178	25218-25219	2	
110-179	25220-25224	Sort	
110-180	25225-25226	(	
110-181	25226-25230	cost	
110-182	25230-25231	=	
110-183	25231-25241	3344991.70	
110-184	25241-25242	.	
110-185	25242-25253	.3355463.31	
110-186	25254-25258	rows	
110-187	25258-25259	=	
110-188	25259-25266	4188645	
110-189	25267-25272	width	
110-190	25272-25273	=	
110-191	25273-25276	465	
110-192	25276-25277	)	
110-193	25278-25282	Sort	
110-194	25283-25286	Key	
110-195	25286-25287	:	
110-196	25288-25293	a.aid	
110-197	25294-25298	Hash	
110-198	25299-25303	Join	
110-199	25304-25305	(	
110-200	25305-25309	cost	
110-201	25309-25310	=	
110-202	25310-25315	93.43	
110-203	25315-25316	.	
110-204	25316-25326	.221376.54	
110-205	25327-25331	rows	
110-206	25331-25332	=	
110-207	25332-25339	4188645	
110-208	25340-25345	width	
110-209	25345-25346	=	
110-210	25346-25349	465	
110-211	25349-25350	)	
110-212	25351-25355	Hash	
110-213	25356-25360	Cond	
110-214	25360-25361	:	
110-215	25362-25363	(	
110-216	25363-25368	a.bid	
110-217	25369-25370	=	
110-218	25371-25376	b.bid	
110-219	25376-25377	)	
110-220	25378-25386	Parallel	
110-221	25387-25390	Seq	
110-222	25391-25395	Scan	
110-223	25396-25398	on	
110-224	25399-25415	pgbench_accounts	
110-225	25416-25417	a	
110-226	25418-25419	(	
110-227	25419-25423	cost	
110-228	25423-25424	=	
110-229	25424-25428	0.00	
110-230	25428-25429	.	
110-231	25429-25439	.209856.45	
110-232	25440-25444	rows	
110-233	25444-25445	=	
110-234	25445-25452	4188645	
110-235	25453-25458	width	
110-236	25458-25459	=	
110-237	25459-25461	97	
110-238	25461-25462	)	
110-239	25463-25467	Hash	
110-240	25468-25469	(	
110-241	25469-25473	cost	
110-242	25473-25474	=	
110-243	25474-25479	92.08	
110-244	25479-25480	.	
110-245	25480-25486	.92.08	
110-246	25487-25491	rows	
110-247	25491-25492	=	
110-248	25492-25495	108	
110-249	25496-25501	width	
110-250	25501-25502	=	
110-251	25502-25505	364	
110-252	25505-25506	)	
110-253	25507-25510	Seq	
110-254	25511-25515	Scan	
110-255	25516-25518	on	
110-256	25519-25535	pgbench_branches	
110-257	25536-25537	b	
110-258	25538-25539	(	
110-259	25539-25543	cost	
110-260	25543-25544	=	
110-261	25544-25548	0.00	
110-262	25548-25549	.	
110-263	25549-25555	.92.08	
110-264	25556-25560	rows	
110-265	25560-25561	=	
110-266	25561-25564	108	
110-267	25565-25570	width	
110-268	25570-25571	=	
110-269	25571-25574	364	
110-270	25574-25575	)	
110-271	25576-25579	SQL	
110-272	25580-25584	Hash	
110-273	25584-25585	:	
110-274	25586-25595	356104612	
110-275	25595-25596	,	
110-276	25597-25601	Plan	
110-277	25602-25606	Hash	
110-278	25606-25607	:	
110-279	25608-25609	-	
110-280	25609-25617	58126597	
110-281	25618-25619	e	
110-282	25619-25620	.	

#Text=Verify that plan -58126597 was captured, and note the status of the plan.
111-1	25621-25627	Verify	
111-2	25628-25632	that	
111-3	25633-25637	plan	
111-4	25638-25639	-	
111-5	25639-25647	58126597	
111-6	25648-25651	was	
111-7	25652-25660	captured	
111-8	25660-25661	,	
111-9	25662-25665	and	
111-10	25666-25670	note	
111-11	25671-25674	the	
111-12	25675-25681	status	
111-13	25682-25684	of	
111-14	25685-25688	the	
111-15	25689-25693	plan	
111-16	25693-25694	.	

#Text=In your case, query plan Hash might be different.
112-1	25695-25697	In	
112-2	25698-25702	your	
112-3	25703-25707	case	
112-4	25707-25708	,	
112-5	25709-25714	query	
112-6	25715-25719	plan	
112-7	25720-25724	Hash	
112-8	25725-25730	might	
112-9	25731-25733	be	
112-10	25734-25743	different	
112-11	25743-25744	.	

#Text=Capture the Plan hash value from output of the previous step (e.g. “-58126597”) to use it later in queries.
113-1	25745-25752	Capture	
113-2	25753-25756	the	
113-3	25757-25761	Plan	
113-4	25762-25766	hash	
113-5	25767-25772	value	
113-6	25773-25777	from	
113-7	25778-25784	output	
113-8	25785-25787	of	
113-9	25788-25791	the	
113-10	25792-25800	previous	
113-11	25801-25805	step	
113-12	25806-25807	(	
113-13	25807-25810	e.g	
113-14	25810-25811	.	
113-15	25812-25813	“	
113-16	25813-25814	-	
113-17	25814-25822	58126597	
113-18	25822-25823	”	
113-19	25823-25824	)	
113-20	25825-25827	to	
113-21	25828-25831	use	
113-22	25832-25834	it	
113-23	25835-25840	later	
113-24	25841-25843	in	
113-25	25844-25851	queries	
113-26	25851-25852	.	

#Text=Also note the SQL hash value (e.g. “356104612”) because you’ll use that later in apg_plan_mgmt.set_plan_status command.
114-1	25853-25857	Also	
114-2	25858-25862	note	
114-3	25863-25866	the	
114-4	25867-25870	SQL	
114-5	25871-25875	hash	
114-6	25876-25881	value	
114-7	25882-25883	(	
114-8	25883-25886	e.g	
114-9	25886-25887	.	
114-10	25888-25889	“	
114-11	25889-25898	356104612	
114-12	25898-25899	”	
114-13	25899-25900	)	
114-14	25901-25908	because	
114-15	25909-25912	you	
114-16	25912-25913	’	
114-17	25913-25915	ll	
114-18	25916-25919	use	
114-19	25920-25924	that	
114-20	25925-25930	later	
114-21	25931-25933	in	
114-22	25934-25963	apg_plan_mgmt.set_plan_status	
114-23	25964-25971	command	
114-24	25971-25972	.	

#Text=SELECT sql_hash,
#Text=plan_hash,
#Text=status,
#Text=enabled,
#Text=sql_text
#Text=FROM
#Text=apg_plan_mgmt.dba_plans
#Text=Where plan_hash=-58126597;
#Text=Output:
#Text=sql_hash
#Text=| plan_hash |
#Text=status
#Text=| enabled |
#Text=sql_text
#Text=-----------+-----------+----------+---------+---------------------------
#Text=356104612 | -58126597 | Approved | t
#Text=| SELECT
#Text=| FROM
#Text=pgbench_branches b
#Text=JOIN
#Text=pgbench_accounts a +
#Text=ON b.bid = a.bid
#Text=| ORDER BY
#Text=a.aid;
#Text=f.
115-1	25973-25979	SELECT	
115-2	25980-25988	sql_hash	
115-3	25988-25989	,	
115-4	25990-25999	plan_hash	
115-5	25999-26000	,	
115-6	26001-26007	status	
115-7	26007-26008	,	
115-8	26009-26016	enabled	
115-9	26016-26017	,	
115-10	26018-26026	sql_text	
115-11	26027-26031	FROM	
115-12	26032-26055	apg_plan_mgmt.dba_plans	
115-13	26056-26061	Where	
115-14	26062-26071	plan_hash	
115-15	26071-26072	=	
115-16	26072-26073	-	
115-17	26073-26081	58126597	
115-18	26081-26082	;	
115-19	26083-26089	Output	
115-20	26089-26090	:	
115-21	26091-26099	sql_hash	
115-22	26100-26101	|	
115-23	26102-26111	plan_hash	
115-24	26112-26113	|	
115-25	26114-26120	status	
115-26	26121-26122	|	
115-27	26123-26130	enabled	
115-28	26131-26132	|	
115-29	26133-26141	sql_text	
115-30	26142-26143	-	
115-31	26143-26144	-	
115-32	26144-26145	-	
115-33	26145-26146	-	
115-34	26146-26147	-	
115-35	26147-26148	-	
115-36	26148-26149	-	
115-37	26149-26150	-	
115-38	26150-26151	-	
115-39	26151-26152	-	
115-40	26152-26153	-	
115-41	26153-26154	+	
115-42	26154-26155	-	
115-43	26155-26156	-	
115-44	26156-26157	-	
115-45	26157-26158	-	
115-46	26158-26159	-	
115-47	26159-26160	-	
115-48	26160-26161	-	
115-49	26161-26162	-	
115-50	26162-26163	-	
115-51	26163-26164	-	
115-52	26164-26165	-	
115-53	26165-26166	+	
115-54	26166-26167	-	
115-55	26167-26168	-	
115-56	26168-26169	-	
115-57	26169-26170	-	
115-58	26170-26171	-	
115-59	26171-26172	-	
115-60	26172-26173	-	
115-61	26173-26174	-	
115-62	26174-26175	-	
115-63	26175-26176	-	
115-64	26176-26177	+	
115-65	26177-26178	-	
115-66	26178-26179	-	
115-67	26179-26180	-	
115-68	26180-26181	-	
115-69	26181-26182	-	
115-70	26182-26183	-	
115-71	26183-26184	-	
115-72	26184-26185	-	
115-73	26185-26186	-	
115-74	26186-26187	+	
115-75	26187-26188	-	
115-76	26188-26189	-	
115-77	26189-26190	-	
115-78	26190-26191	-	
115-79	26191-26192	-	
115-80	26192-26193	-	
115-81	26193-26194	-	
115-82	26194-26195	-	
115-83	26195-26196	-	
115-84	26196-26197	-	
115-85	26197-26198	-	
115-86	26198-26199	-	
115-87	26199-26200	-	
115-88	26200-26201	-	
115-89	26201-26202	-	
115-90	26202-26203	-	
115-91	26203-26204	-	
115-92	26204-26205	-	
115-93	26205-26206	-	
115-94	26206-26207	-	
115-95	26207-26208	-	
115-96	26208-26209	-	
115-97	26209-26210	-	
115-98	26210-26211	-	
115-99	26211-26212	-	
115-100	26212-26213	-	
115-101	26213-26214	-	
115-102	26215-26224	356104612	
115-103	26225-26226	|	
115-104	26227-26228	-	
115-105	26228-26236	58126597	
115-106	26237-26238	|	
115-107	26239-26247	Approved	
115-108	26248-26249	|	
115-109	26250-26251	t	
115-110	26252-26253	|	
115-111	26254-26260	SELECT	
115-112	26261-26262	|	
115-113	26263-26267	FROM	
115-114	26268-26284	pgbench_branches	
115-115	26285-26286	b	
115-116	26287-26291	JOIN	
115-117	26292-26308	pgbench_accounts	
115-118	26309-26310	a	
115-119	26311-26312	+	
115-120	26313-26315	ON	
115-121	26316-26321	b.bid	
115-122	26322-26323	=	
115-123	26324-26329	a.bid	
115-124	26330-26331	|	
115-125	26332-26337	ORDER	
115-126	26338-26340	BY	
115-127	26341-26346	a.aid	
115-128	26346-26347	;	
115-129	26348-26349	f	
115-130	26349-26350	.	

#Text=If necessary, Approve the plan.
116-1	26351-26353	If	
116-2	26354-26363	necessary	
116-3	26363-26364	,	
116-4	26365-26372	Approve	
116-5	26373-26376	the	
116-6	26377-26381	plan	
116-7	26381-26382	.	

#Text=In this case, this is the first and only plan saved for the statement with SQL Hash=356104612 (in your case it could be different).
117-1	26383-26385	In	
117-2	26386-26390	this	
117-3	26391-26395	case	
117-4	26395-26396	,	
117-5	26397-26401	this	
117-6	26402-26404	is	
117-7	26405-26408	the	
117-8	26409-26414	first	
117-9	26415-26418	and	
117-10	26419-26423	only	
117-11	26424-26428	plan	
117-12	26429-26434	saved	
117-13	26435-26438	for	
117-14	26439-26442	the	
117-15	26443-26452	statement	
117-16	26453-26457	with	
117-17	26458-26461	SQL	
117-18	26462-26466	Hash	
117-19	26466-26467	=	
117-20	26467-26476	356104612	
117-21	26477-26478	(	
117-22	26478-26480	in	
117-23	26481-26485	your	
117-24	26486-26490	case	
117-25	26491-26493	it	
117-26	26494-26499	could	
117-27	26500-26502	be	
117-28	26503-26512	different	
117-29	26512-26513	)	
117-30	26513-26514	.	

#Text=So it was saved as an Approved plan.
118-1	26515-26517	So	
118-2	26518-26520	it	
118-3	26521-26524	was	
118-4	26525-26530	saved	
118-5	26531-26533	as	
118-6	26534-26536	an	
118-7	26537-26545	Approved	
118-8	26546-26550	plan	
118-9	26550-26551	.	

#Text=If this statement already had a baseline of approved plans, then this plan would have been saved as an Unapproved plan.
119-1	26552-26554	If	
119-2	26555-26559	this	
119-3	26560-26569	statement	
119-4	26570-26577	already	
119-5	26578-26581	had	
119-6	26582-26583	a	
119-7	26584-26592	baseline	
119-8	26593-26595	of	
119-9	26596-26604	approved	
119-10	26605-26610	plans	
119-11	26610-26611	,	
119-12	26612-26616	then	
119-13	26617-26621	this	
119-14	26622-26626	plan	
119-15	26627-26632	would	
119-16	26633-26637	have	
119-17	26638-26642	been	
119-18	26643-26648	saved	
119-19	26649-26651	as	
119-20	26652-26654	an	
119-21	26655-26665	Unapproved	
119-22	26666-26670	plan	
119-23	26670-26671	.	

#Text=In general, to Reject all existing plans for a statement and then Approve one specific plan, you could call apg_plan_mgmt.set_plan_status twice, like this:
#Text=-- please replace "356104612"-> your SQL Hash value; -58126597 -> your Plan Hash value
#Text=SELECT apg_plan_mgmt.set_plan_status (sql_hash, plan_hash, 'Rejected') from apg_plan_mgmt.dba_plans where sql_hash = 356104612;
#Text=SELECT apg_plan_mgmt.set_plan_status (356104612, -58126597, 'Approved');
#Text=g.
120-1	26672-26674	In	
120-2	26675-26682	general	
120-3	26682-26683	,	
120-4	26684-26686	to	
120-5	26687-26693	Reject	
120-6	26694-26697	all	
120-7	26698-26706	existing	
120-8	26707-26712	plans	
120-9	26713-26716	for	
120-10	26717-26718	a	
120-11	26719-26728	statement	
120-12	26729-26732	and	
120-13	26733-26737	then	
120-14	26738-26745	Approve	
120-15	26746-26749	one	
120-16	26750-26758	specific	
120-17	26759-26763	plan	
120-18	26763-26764	,	
120-19	26765-26768	you	
120-20	26769-26774	could	
120-21	26775-26779	call	
120-22	26780-26809	apg_plan_mgmt.set_plan_status	
120-23	26810-26815	twice	
120-24	26815-26816	,	
120-25	26817-26821	like	
120-26	26822-26826	this	
120-27	26826-26827	:	
120-28	26828-26829	-	
120-29	26829-26830	-	
120-30	26831-26837	please	
120-31	26838-26845	replace	
120-32	26846-26847	"	
120-33	26847-26856	356104612	
120-34	26856-26857	"	
120-35	26857-26858	-	
120-36	26858-26859	>	
120-37	26860-26864	your	
120-38	26865-26868	SQL	
120-39	26869-26873	Hash	
120-40	26874-26879	value	
120-41	26879-26880	;	
120-42	26881-26882	-	
120-43	26882-26890	58126597	
120-44	26891-26892	-	
120-45	26892-26893	>	
120-46	26894-26898	your	
120-47	26899-26903	Plan	
120-48	26904-26908	Hash	
120-49	26909-26914	value	
120-50	26915-26921	SELECT	
120-51	26922-26951	apg_plan_mgmt.set_plan_status	
120-52	26952-26953	(	
120-53	26953-26961	sql_hash	
120-54	26961-26962	,	
120-55	26963-26972	plan_hash	
120-56	26972-26973	,	
120-57	26974-26975	'	
120-58	26975-26983	Rejected	
120-59	26983-26984	'	
120-60	26984-26985	)	
120-61	26986-26990	from	
120-62	26991-27014	apg_plan_mgmt.dba_plans	
120-63	27015-27020	where	
120-64	27021-27029	sql_hash	
120-65	27030-27031	=	
120-66	27032-27041	356104612	
120-67	27041-27042	;	
120-68	27043-27049	SELECT	
120-69	27050-27079	apg_plan_mgmt.set_plan_status	
120-70	27080-27081	(	
120-71	27081-27090	356104612	
120-72	27090-27091	,	
120-73	27092-27093	-	
120-74	27093-27101	58126597	
120-75	27101-27102	,	
120-76	27103-27104	'	
120-77	27104-27112	Approved	
120-78	27112-27113	'	
120-79	27113-27114	)	
120-80	27114-27115	;	
120-81	27116-27117	g	
120-82	27117-27118	.	

#Text=Next, remove the optimizer hint from the SQL, set capture_plan_baselines parameter to off to disable plan capturing and
#Text=turn on use_plan_baselines parameter.
121-1	27119-27123	Next	
121-2	27123-27124	,	
121-3	27125-27131	remove	
121-4	27132-27135	the	
121-5	27136-27145	optimizer	
121-6	27146-27150	hint	
121-7	27151-27155	from	
121-8	27156-27159	the	
121-9	27160-27163	SQL	
121-10	27163-27164	,	
121-11	27165-27168	set	
121-12	27169-27191	capture_plan_baselines	
121-13	27192-27201	parameter	
121-14	27202-27204	to	
121-15	27205-27208	off	
121-16	27209-27211	to	
121-17	27212-27219	disable	
121-18	27220-27224	plan	
121-19	27225-27234	capturing	
121-20	27235-27238	and	
121-21	27239-27243	turn	
121-22	27244-27246	on	
121-23	27247-27265	use_plan_baselines	
121-24	27266-27275	parameter	
121-25	27275-27276	.	

#Text=As you will notice below even after the hint removal, optimizer choose to use the same SQL plan with hash value -58126597 (this might be different in your case).
122-1	27277-27279	As	
122-2	27280-27283	you	
122-3	27284-27288	will	
122-4	27289-27295	notice	
122-5	27296-27301	below	
122-6	27302-27306	even	
122-7	27307-27312	after	
122-8	27313-27316	the	
122-9	27317-27321	hint	
122-10	27322-27329	removal	
122-11	27329-27330	,	
122-12	27331-27340	optimizer	
122-13	27341-27347	choose	
122-14	27348-27350	to	
122-15	27351-27354	use	
122-16	27355-27358	the	
122-17	27359-27363	same	
122-18	27364-27367	SQL	
122-19	27368-27372	plan	
122-20	27373-27377	with	
122-21	27378-27382	hash	
122-22	27383-27388	value	
122-23	27389-27390	-	
122-24	27390-27398	58126597	
122-25	27399-27400	(	
122-26	27400-27404	this	
122-27	27405-27410	might	
122-28	27411-27413	be	
122-29	27414-27423	different	
122-30	27424-27426	in	
122-31	27427-27431	your	
122-32	27432-27436	case	
122-33	27436-27437	)	
122-34	27437-27438	.	

#Text=SET apg_plan_mgmt.capture_plan_baselines = off;
#Text=SET apg_plan_mgmt.use_plan_baselines = true;
#Text=EXPLAIN (hashes true)
#Text=SELECT
#Text=FROM
#Text=pgbench_branches b
#Text=JOIN
#Text=pgbench_accounts a
#Text=ON b.bid = a.bid
#Text=ORDER BY
#Text=a.aid;
#Text=Output:
#Text=QUERY PLAN
#Text=-----------------------------------------------------------------------------
#Text=Gather Merge
#Text=(cost=3345991.72..4323410.46 rows=8377290 width=465)
#Text=Workers Planned: 2
#Text=Sort
#Text=(cost=3344991.70..3355463.31 rows=4188645 width=465)
#Text=Sort Key: a.aid
#Text=Hash Join
#Text=(cost=93.43..221376.54 rows=4188645 width=465)
#Text=Hash Cond: (a.bid = b.bid)
#Text=Parallel Seq Scan on pgbench_accounts a
#Text=(cost=0.00..209856.45 rows=4188645 width=97)
#Text=Hash
#Text=(cost=92.08..92.08 rows=108 width=364)
#Text=Seq Scan on pgbench_branches b
#Text=(cost=0.00..92.08 rows=108 width=364)
#Text=Note: An Approved plan was used instead of the minimum cost plan.
123-1	27439-27442	SET	
123-2	27443-27479	apg_plan_mgmt.capture_plan_baselines	
123-3	27480-27481	=	
123-4	27482-27485	off	
123-5	27485-27486	;	
123-6	27487-27490	SET	
123-7	27491-27523	apg_plan_mgmt.use_plan_baselines	
123-8	27524-27525	=	
123-9	27526-27530	true	
123-10	27530-27531	;	
123-11	27532-27539	EXPLAIN	
123-12	27540-27541	(	
123-13	27541-27547	hashes	
123-14	27548-27552	true	
123-15	27552-27553	)	
123-16	27554-27560	SELECT	
123-17	27561-27565	FROM	
123-18	27566-27582	pgbench_branches	
123-19	27583-27584	b	
123-20	27585-27589	JOIN	
123-21	27590-27606	pgbench_accounts	
123-22	27607-27608	a	
123-23	27609-27611	ON	
123-24	27612-27617	b.bid	
123-25	27618-27619	=	
123-26	27620-27625	a.bid	
123-27	27626-27631	ORDER	
123-28	27632-27634	BY	
123-29	27635-27640	a.aid	
123-30	27640-27641	;	
123-31	27642-27648	Output	
123-32	27648-27649	:	
123-33	27650-27655	QUERY	
123-34	27656-27660	PLAN	
123-35	27661-27662	-	
123-36	27662-27663	-	
123-37	27663-27664	-	
123-38	27664-27665	-	
123-39	27665-27666	-	
123-40	27666-27667	-	
123-41	27667-27668	-	
123-42	27668-27669	-	
123-43	27669-27670	-	
123-44	27670-27671	-	
123-45	27671-27672	-	
123-46	27672-27673	-	
123-47	27673-27674	-	
123-48	27674-27675	-	
123-49	27675-27676	-	
123-50	27676-27677	-	
123-51	27677-27678	-	
123-52	27678-27679	-	
123-53	27679-27680	-	
123-54	27680-27681	-	
123-55	27681-27682	-	
123-56	27682-27683	-	
123-57	27683-27684	-	
123-58	27684-27685	-	
123-59	27685-27686	-	
123-60	27686-27687	-	
123-61	27687-27688	-	
123-62	27688-27689	-	
123-63	27689-27690	-	
123-64	27690-27691	-	
123-65	27691-27692	-	
123-66	27692-27693	-	
123-67	27693-27694	-	
123-68	27694-27695	-	
123-69	27695-27696	-	
123-70	27696-27697	-	
123-71	27697-27698	-	
123-72	27698-27699	-	
123-73	27699-27700	-	
123-74	27700-27701	-	
123-75	27701-27702	-	
123-76	27702-27703	-	
123-77	27703-27704	-	
123-78	27704-27705	-	
123-79	27705-27706	-	
123-80	27706-27707	-	
123-81	27707-27708	-	
123-82	27708-27709	-	
123-83	27709-27710	-	
123-84	27710-27711	-	
123-85	27711-27712	-	
123-86	27712-27713	-	
123-87	27713-27714	-	
123-88	27714-27715	-	
123-89	27715-27716	-	
123-90	27716-27717	-	
123-91	27717-27718	-	
123-92	27718-27719	-	
123-93	27719-27720	-	
123-94	27720-27721	-	
123-95	27721-27722	-	
123-96	27722-27723	-	
123-97	27723-27724	-	
123-98	27724-27725	-	
123-99	27725-27726	-	
123-100	27726-27727	-	
123-101	27727-27728	-	
123-102	27728-27729	-	
123-103	27729-27730	-	
123-104	27730-27731	-	
123-105	27731-27732	-	
123-106	27732-27733	-	
123-107	27733-27734	-	
123-108	27734-27735	-	
123-109	27735-27736	-	
123-110	27736-27737	-	
123-111	27737-27738	-	
123-112	27739-27745	Gather	
123-113	27746-27751	Merge	
123-114	27752-27753	(	
123-115	27753-27757	cost	
123-116	27757-27758	=	
123-117	27758-27768	3345991.72	
123-118	27768-27769	.	
123-119	27769-27780	.4323410.46	
123-120	27781-27785	rows	
123-121	27785-27786	=	
123-122	27786-27793	8377290	
123-123	27794-27799	width	
123-124	27799-27800	=	
123-125	27800-27803	465	
123-126	27803-27804	)	
123-127	27805-27812	Workers	
123-128	27813-27820	Planned	
123-129	27820-27821	:	
123-130	27822-27823	2	
123-131	27824-27828	Sort	
123-132	27829-27830	(	
123-133	27830-27834	cost	
123-134	27834-27835	=	
123-135	27835-27845	3344991.70	
123-136	27845-27846	.	
123-137	27846-27857	.3355463.31	
123-138	27858-27862	rows	
123-139	27862-27863	=	
123-140	27863-27870	4188645	
123-141	27871-27876	width	
123-142	27876-27877	=	
123-143	27877-27880	465	
123-144	27880-27881	)	
123-145	27882-27886	Sort	
123-146	27887-27890	Key	
123-147	27890-27891	:	
123-148	27892-27897	a.aid	
123-149	27898-27902	Hash	
123-150	27903-27907	Join	
123-151	27908-27909	(	
123-152	27909-27913	cost	
123-153	27913-27914	=	
123-154	27914-27919	93.43	
123-155	27919-27920	.	
123-156	27920-27930	.221376.54	
123-157	27931-27935	rows	
123-158	27935-27936	=	
123-159	27936-27943	4188645	
123-160	27944-27949	width	
123-161	27949-27950	=	
123-162	27950-27953	465	
123-163	27953-27954	)	
123-164	27955-27959	Hash	
123-165	27960-27964	Cond	
123-166	27964-27965	:	
123-167	27966-27967	(	
123-168	27967-27972	a.bid	
123-169	27973-27974	=	
123-170	27975-27980	b.bid	
123-171	27980-27981	)	
123-172	27982-27990	Parallel	
123-173	27991-27994	Seq	
123-174	27995-27999	Scan	
123-175	28000-28002	on	
123-176	28003-28019	pgbench_accounts	
123-177	28020-28021	a	
123-178	28022-28023	(	
123-179	28023-28027	cost	
123-180	28027-28028	=	
123-181	28028-28032	0.00	
123-182	28032-28033	.	
123-183	28033-28043	.209856.45	
123-184	28044-28048	rows	
123-185	28048-28049	=	
123-186	28049-28056	4188645	
123-187	28057-28062	width	
123-188	28062-28063	=	
123-189	28063-28065	97	
123-190	28065-28066	)	
123-191	28067-28071	Hash	
123-192	28072-28073	(	
123-193	28073-28077	cost	
123-194	28077-28078	=	
123-195	28078-28083	92.08	
123-196	28083-28084	.	
123-197	28084-28090	.92.08	
123-198	28091-28095	rows	
123-199	28095-28096	=	
123-200	28096-28099	108	
123-201	28100-28105	width	
123-202	28105-28106	=	
123-203	28106-28109	364	
123-204	28109-28110	)	
123-205	28111-28114	Seq	
123-206	28115-28119	Scan	
123-207	28120-28122	on	
123-208	28123-28139	pgbench_branches	
123-209	28140-28141	b	
123-210	28142-28143	(	
123-211	28143-28147	cost	
123-212	28147-28148	=	
123-213	28148-28152	0.00	
123-214	28152-28153	.	
123-215	28153-28159	.92.08	
123-216	28160-28164	rows	
123-217	28164-28165	=	
123-218	28165-28168	108	
123-219	28169-28174	width	
123-220	28174-28175	=	
123-221	28175-28178	364	
123-222	28178-28179	)	
123-223	28180-28184	Note	
123-224	28184-28185	:	
123-225	28186-28188	An	
123-226	28189-28197	Approved	
123-227	28198-28202	plan	
123-228	28203-28206	was	
123-229	28207-28211	used	
123-230	28212-28219	instead	
123-231	28220-28222	of	
123-232	28223-28226	the	
123-233	28227-28234	minimum	
123-234	28235-28239	cost	
123-235	28240-28244	plan	
123-236	28244-28245	.	

#Text=SQL Hash: 356104612, Plan Hash: -58126597, Minimum Cost Plan Hash: 1425407480
#Text=As you can observe, the optimizer choose the plan with hash value -58126597 (with hash join between the tables) even though a minimum cost plan with hash value 1425407480 exists.
124-1	28246-28249	SQL	
124-2	28250-28254	Hash	
124-3	28254-28255	:	
124-4	28256-28265	356104612	
124-5	28265-28266	,	
124-6	28267-28271	Plan	
124-7	28272-28276	Hash	
124-8	28276-28277	:	
124-9	28278-28279	-	
124-10	28279-28287	58126597	
124-11	28287-28288	,	
124-12	28289-28296	Minimum	
124-13	28297-28301	Cost	
124-14	28302-28306	Plan	
124-15	28307-28311	Hash	
124-16	28311-28312	:	
124-17	28313-28323	1425407480	
124-18	28324-28326	As	
124-19	28327-28330	you	
124-20	28331-28334	can	
124-21	28335-28342	observe	
124-22	28342-28343	,	
124-23	28344-28347	the	
124-24	28348-28357	optimizer	
124-25	28358-28364	choose	
124-26	28365-28368	the	
124-27	28369-28373	plan	
124-28	28374-28378	with	
124-29	28379-28383	hash	
124-30	28384-28389	value	
124-31	28390-28391	-	
124-32	28391-28399	58126597	
124-33	28400-28401	(	
124-34	28401-28405	with	
124-35	28406-28410	hash	
124-36	28411-28415	join	
124-37	28416-28423	between	
124-38	28424-28427	the	
124-39	28428-28434	tables	
124-40	28434-28435	)	
124-41	28436-28440	even	
124-42	28441-28447	though	
124-43	28448-28449	a	
124-44	28450-28457	minimum	
124-45	28458-28462	cost	
124-46	28463-28467	plan	
124-47	28468-28472	with	
124-48	28473-28477	hash	
124-49	28478-28483	value	
124-50	28484-28494	1425407480	
124-51	28495-28501	exists	
124-52	28501-28502	.	

#Text=For this specific example, we approved a slightly costly plan with hash join because it returns the results faster compared to an index scan, which you might have do do sometimes in your production environment depending on your use case.
#Text=4.
125-1	28503-28506	For	
125-2	28507-28511	this	
125-3	28512-28520	specific	
125-4	28521-28528	example	
125-5	28528-28529	,	
125-6	28530-28532	we	
125-7	28533-28541	approved	
125-8	28542-28543	a	
125-9	28544-28552	slightly	
125-10	28553-28559	costly	
125-11	28560-28564	plan	
125-12	28565-28569	with	
125-13	28570-28574	hash	
125-14	28575-28579	join	
125-15	28580-28587	because	
125-16	28588-28590	it	
125-17	28591-28598	returns	
125-18	28599-28602	the	
125-19	28603-28610	results	
125-20	28611-28617	faster	
125-21	28618-28626	compared	
125-22	28627-28629	to	
125-23	28630-28632	an	
125-24	28633-28638	index	
125-25	28639-28643	scan	
125-26	28643-28644	,	
125-27	28645-28650	which	
125-28	28651-28654	you	
125-29	28655-28660	might	
125-30	28661-28665	have	
125-31	28666-28668	do	
125-32	28669-28671	do	
125-33	28672-28681	sometimes	
125-34	28682-28684	in	
125-35	28685-28689	your	
125-36	28690-28700	production	
125-37	28701-28712	environment	
125-38	28713-28722	depending	
125-39	28723-28725	on	
125-40	28726-28730	your	
125-41	28731-28734	use	
125-42	28735-28739	case	
125-43	28739-28740	.	
125-44	28741-28742	4	
125-45	28742-28743	.	

#Text=Deploying QPM-managed plans globally using export and import (no lab)
#Text=Large enterprise customers often have applications and databases deployed globally.
126-1	28744-28753	Deploying	
126-2	28754-28765	QPM-managed	
126-3	28766-28771	plans	
126-4	28772-28780	globally	
126-5	28781-28786	using	
126-6	28787-28793	export	
126-7	28794-28797	and	
126-8	28798-28804	import	
126-9	28805-28806	(	
126-10	28806-28808	no	
126-11	28809-28812	lab	
126-12	28812-28813	)	
126-13	28814-28819	Large	
126-14	28820-28830	enterprise	
126-15	28831-28840	customers	
126-16	28841-28846	often	
126-17	28847-28851	have	
126-18	28852-28864	applications	
126-19	28865-28868	and	
126-20	28869-28878	databases	
126-21	28879-28887	deployed	
126-22	28888-28896	globally	
126-23	28896-28897	.	

#Text=They also often maintain several environments (Dev, QA, Staging, UAT, Preprod, and Prod) for each application database.
127-1	28898-28902	They	
127-2	28903-28907	also	
127-3	28908-28913	often	
127-4	28914-28922	maintain	
127-5	28923-28930	several	
127-6	28931-28943	environments	
127-7	28944-28945	(	
127-8	28945-28948	Dev	
127-9	28948-28949	,	
127-10	28950-28952	QA	
127-11	28952-28953	,	
127-12	28954-28961	Staging	
127-13	28961-28962	,	
127-14	28963-28966	UAT	
127-15	28966-28967	,	
127-16	28968-28975	Preprod	
127-17	28975-28976	,	
127-18	28977-28980	and	
127-19	28981-28985	Prod	
127-20	28985-28986	)	
127-21	28987-28990	for	
127-22	28991-28995	each	
127-23	28996-29007	application	
127-24	29008-29016	database	
127-25	29016-29017	.	

#Text=However, managing the execution plans manually in each of the database environments can be cumbersome and time-consuming.
128-1	29018-29025	However	
128-2	29025-29026	,	
128-3	29027-29035	managing	
128-4	29036-29039	the	
128-5	29040-29049	execution	
128-6	29050-29055	plans	
128-7	29056-29064	manually	
128-8	29065-29067	in	
128-9	29068-29072	each	
128-10	29073-29075	of	
128-11	29076-29079	the	
128-12	29080-29088	database	
128-13	29089-29101	environments	
128-14	29102-29105	can	
128-15	29106-29108	be	
128-16	29109-29119	cumbersome	
128-17	29120-29123	and	
128-18	29124-29138	time-consuming	
128-19	29138-29139	.	

#Text=QPM provides an option to export and import QPM-managed plans from one database to another database.
129-1	29140-29143	QPM	
129-2	29144-29152	provides	
129-3	29153-29155	an	
129-4	29156-29162	option	
129-5	29163-29165	to	
129-6	29166-29172	export	
129-7	29173-29176	and	
129-8	29177-29183	import	
129-9	29184-29195	QPM-managed	
129-10	29196-29201	plans	
129-11	29202-29206	from	
129-12	29207-29210	one	
129-13	29211-29219	database	
129-14	29220-29222	to	
129-15	29223-29230	another	
129-16	29231-29239	database	
129-17	29239-29240	.	

#Text=With this option, you can manage the query execution plans centrally and deploy them to databases globally.
130-1	29241-29245	With	
130-2	29246-29250	this	
130-3	29251-29257	option	
130-4	29257-29258	,	
130-5	29259-29262	you	
130-6	29263-29266	can	
130-7	29267-29273	manage	
130-8	29274-29277	the	
130-9	29278-29283	query	
130-10	29284-29293	execution	
130-11	29294-29299	plans	
130-12	29300-29309	centrally	
130-13	29310-29313	and	
130-14	29314-29320	deploy	
130-15	29321-29325	them	
130-16	29326-29328	to	
130-17	29329-29338	databases	
130-18	29339-29347	globally	
130-19	29347-29348	.	

#Text=This feature is useful for the scenarios where you investigate a set of plans on a preprod database, verify that they perform well, and then load them into a production database.
131-1	29349-29353	This	
131-2	29354-29361	feature	
131-3	29362-29364	is	
131-4	29365-29371	useful	
131-5	29372-29375	for	
131-6	29376-29379	the	
131-7	29380-29389	scenarios	
131-8	29390-29395	where	
131-9	29396-29399	you	
131-10	29400-29411	investigate	
131-11	29412-29413	a	
131-12	29414-29417	set	
131-13	29418-29420	of	
131-14	29421-29426	plans	
131-15	29427-29429	on	
131-16	29430-29431	a	
131-17	29432-29439	preprod	
131-18	29440-29448	database	
131-19	29448-29449	,	
131-20	29450-29456	verify	
131-21	29457-29461	that	
131-22	29462-29466	they	
131-23	29467-29474	perform	
131-24	29475-29479	well	
131-25	29479-29480	,	
131-26	29481-29484	and	
131-27	29485-29489	then	
131-28	29490-29494	load	
131-29	29495-29499	them	
131-30	29500-29504	into	
131-31	29505-29506	a	
131-32	29507-29517	production	
131-33	29518-29526	database	
131-34	29526-29527	.	

#Text=For additional details, see Exporting and Importing Plans in the Aurora documentation.
#Text=5.
132-1	29528-29531	For	
132-2	29532-29542	additional	
132-3	29543-29550	details	
132-4	29550-29551	,	
132-5	29552-29555	see	
132-6	29556-29565	Exporting	
132-7	29566-29569	and	
132-8	29570-29579	Importing	
132-9	29580-29585	Plans	
132-10	29586-29588	in	
132-11	29589-29592	the	
132-12	29593-29599	Aurora	
132-13	29600-29613	documentation	
132-14	29613-29614	.	
132-15	29615-29616	5	
132-16	29616-29617	.	

#Text=Disabling QPM and deleting plans manually
#Text=To disable QPM feature, open your cluster-level parameter group and set the rds.enable_plan_management parameter to 0.
133-1	29618-29627	Disabling	
133-2	29628-29631	QPM	
133-3	29632-29635	and	
133-4	29636-29644	deleting	
133-5	29645-29650	plans	
133-6	29651-29659	manually	
133-7	29660-29662	To	
133-8	29663-29670	disable	
133-9	29671-29674	QPM	
133-10	29675-29682	feature	
133-11	29682-29683	,	
133-12	29684-29688	open	
133-13	29689-29693	your	
133-14	29694-29707	cluster-level	
133-15	29708-29717	parameter	
133-16	29718-29723	group	
133-17	29724-29727	and	
133-18	29728-29731	set	
133-19	29732-29735	the	
133-20	29736-29762	rds.enable_plan_management	
133-21	29763-29772	parameter	
133-22	29773-29775	to	
133-23	29776-29777	0	
133-24	29777-29778	.	

#Text=Delete all the captured plans by running the following in PSQL:
#Text=SELECT SUM(apg_plan_mgmt.delete_plan(sql_hash, plan_hash))
#Text=FROM apg_plan_mgmt.dba_plans;
#Text=Verify that no captured plans exist by running the following:
#Text=SELECT sql_hash,plan_hash,enabled, status,estimated_total_cost "cost",sql_text FROM apg_plan_mgmt.dba_plans;
134-1	29779-29785	Delete	
134-2	29786-29789	all	
134-3	29790-29793	the	
134-4	29794-29802	captured	
134-5	29803-29808	plans	
134-6	29809-29811	by	
134-7	29812-29819	running	
134-8	29820-29823	the	
134-9	29824-29833	following	
134-10	29834-29836	in	
134-11	29837-29841	PSQL	
134-12	29841-29842	:	
134-13	29843-29849	SELECT	
134-14	29850-29853	SUM	
134-15	29853-29854	(	
134-16	29854-29879	apg_plan_mgmt.delete_plan	
134-17	29879-29880	(	
134-18	29880-29888	sql_hash	
134-19	29888-29889	,	
134-20	29890-29899	plan_hash	
134-21	29899-29900	)	
134-22	29900-29901	)	
134-23	29902-29906	FROM	
134-24	29907-29930	apg_plan_mgmt.dba_plans	
134-25	29930-29931	;	
134-26	29932-29938	Verify	
134-27	29939-29943	that	
134-28	29944-29946	no	
134-29	29947-29955	captured	
134-30	29956-29961	plans	
134-31	29962-29967	exist	
134-32	29968-29970	by	
134-33	29971-29978	running	
134-34	29979-29982	the	
134-35	29983-29992	following	
134-36	29992-29993	:	
134-37	29994-30000	SELECT	
134-38	30001-30009	sql_hash	
134-39	30009-30010	,	
134-40	30010-30019	plan_hash	
134-41	30019-30020	,	
134-42	30020-30027	enabled	
134-43	30027-30028	,	
134-44	30029-30035	status	
134-45	30035-30036	,	
134-46	30036-30056	estimated_total_cost	
134-47	30057-30058	"	
134-48	30058-30062	cost	
134-49	30062-30063	"	
134-50	30063-30064	,	
134-51	30064-30072	sql_text	
134-52	30073-30077	FROM	
134-53	30078-30101	apg_plan_mgmt.dba_plans	
134-54	30101-30102	;	
