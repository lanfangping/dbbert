#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value
#T_RL=webanno.custom.Relation|relation|BT_de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity


#Text=PostgreSQL: Documentation: 12: 25.3. 
1-1	0-10	PostgreSQL	_	_	_	_	
1-2	10-11	:	_	_	_	_	
1-3	12-25	Documentation	_	_	_	_	
1-4	25-26	:	_	_	_	_	
1-5	27-29	12	_	_	_	_	
1-6	29-30	:	_	_	_	_	
1-7	31-35	25.3	_	_	_	_	
1-8	35-36	.	_	_	_	_	
1-9	36-37	 	_	_	_	_	

#Text=Continuous Archiving and Point-in-Time Recovery (PITR)
#Text=Home
#Text=About
#Text=Download
#Text=Documentation
#Text=Community
#Text=Developers
#Text=Support
#Text=Donate
#Text=Your account
#Text=11th February 2021:
#Text=PostgreSQL 13.2, 12.6, 11.11, 10.16, 9.6.21, & 9.5.25 Released!
2-1	37-47	Continuous	_	_	_	_	
2-2	48-57	Archiving	_	_	_	_	
2-3	58-61	and	_	_	_	_	
2-4	62-75	Point-in-Time	_	_	_	_	
2-5	76-84	Recovery	_	_	_	_	
2-6	85-86	(	_	_	_	_	
2-7	86-90	PITR	_	_	_	_	
2-8	90-91	)	_	_	_	_	
2-9	92-96	Home	_	_	_	_	
2-10	97-102	About	_	_	_	_	
2-11	103-111	Download	_	_	_	_	
2-12	112-125	Documentation	_	_	_	_	
2-13	126-135	Community	_	_	_	_	
2-14	136-146	Developers	_	_	_	_	
2-15	147-154	Support	_	_	_	_	
2-16	155-161	Donate	_	_	_	_	
2-17	162-166	Your	_	_	_	_	
2-18	167-174	account	_	_	_	_	
2-19	175-179	11th	_	_	_	_	
2-20	180-188	February	_	_	_	_	
2-21	189-193	2021	_	_	_	_	
2-22	193-194	:	_	_	_	_	
2-23	195-205	PostgreSQL	_	_	_	_	
2-24	206-210	13.2	_	_	_	_	
2-25	210-211	,	_	_	_	_	
2-26	212-216	12.6	_	_	_	_	
2-27	216-217	,	_	_	_	_	
2-28	218-223	11.11	_	_	_	_	
2-29	223-224	,	_	_	_	_	
2-30	225-230	10.16	_	_	_	_	
2-31	230-231	,	_	_	_	_	
2-32	232-238	9.6.21	_	_	_	_	
2-33	238-239	,	_	_	_	_	
2-34	240-241	&	_	_	_	_	
2-35	242-248	9.5.25	_	_	_	_	
2-36	249-257	Released	_	_	_	_	
2-37	257-258	!	_	_	_	_	

#Text=Documentation → PostgreSQL 12
#Text=Supported Versions:
#Text=Current
#Text=(13)
#Text=9.6
#Text=Development Versions:
#Text=devel
#Text=Unsupported versions:
#Text=9.5
#Text=9.4
#Text=9.3
#Text=9.2
#Text=9.1
#Text=9.0
#Text=8.4
#Text=8.3
#Text=8.2
#Text=25.3. 
3-1	259-272	Documentation	_	_	_	_	
3-2	273-274	→	_	_	_	_	
3-3	275-285	PostgreSQL	_	_	_	_	
3-4	286-288	12	_	_	_	_	
3-5	289-298	Supported	_	_	_	_	
3-6	299-307	Versions	_	_	_	_	
3-7	307-308	:	_	_	_	_	
3-8	309-316	Current	_	_	_	_	
3-9	317-318	(	_	_	_	_	
3-10	318-320	13	_	_	_	_	
3-11	320-321	)	_	_	_	_	
3-12	322-325	9.6	_	_	_	_	
3-13	326-337	Development	_	_	_	_	
3-14	338-346	Versions	_	_	_	_	
3-15	346-347	:	_	_	_	_	
3-16	348-353	devel	_	_	_	_	
3-17	354-365	Unsupported	_	_	_	_	
3-18	366-374	versions	_	_	_	_	
3-19	374-375	:	_	_	_	_	
3-20	376-379	9.5	_	_	_	_	
3-21	380-383	9.4	_	_	_	_	
3-22	384-387	9.3	_	_	_	_	
3-23	388-391	9.2	_	_	_	_	
3-24	392-395	9.1	_	_	_	_	
3-25	396-399	9.0	_	_	_	_	
3-26	400-403	8.4	_	_	_	_	
3-27	404-407	8.3	_	_	_	_	
3-28	408-411	8.2	_	_	_	_	
3-29	412-416	25.3	_	_	_	_	
3-30	416-417	.	_	_	_	_	
3-31	417-418	 	_	_	_	_	

#Text=Continuous Archiving and Point-in-Time Recovery (PITR)
#Text=Prev
#Text=Chapter 25. 
4-1	418-428	Continuous	_	_	_	_	
4-2	429-438	Archiving	_	_	_	_	
4-3	439-442	and	_	_	_	_	
4-4	443-456	Point-in-Time	_	_	_	_	
4-5	457-465	Recovery	_	_	_	_	
4-6	466-467	(	_	_	_	_	
4-7	467-471	PITR	_	_	_	_	
4-8	471-472	)	_	_	_	_	
4-9	473-477	Prev	_	_	_	_	
4-10	478-485	Chapter	_	_	_	_	
4-11	485-486	 	_	_	_	_	
4-12	486-488	25	_	_	_	_	
4-13	488-489	.	_	_	_	_	
4-14	489-490	 	_	_	_	_	

#Text=Backup and Restore
#Text=Home
#Text=Next
#Text=25.3. 
5-1	490-496	Backup	_	_	_	_	
5-2	497-500	and	_	_	_	_	
5-3	501-508	Restore	_	_	_	_	
5-4	509-513	Home	_	_	_	_	
5-5	514-518	Next	_	_	_	_	
5-6	519-523	25.3	_	_	_	_	
5-7	523-524	.	_	_	_	_	
5-8	524-525	 	_	_	_	_	

#Text=Continuous Archiving and Point-in-Time Recovery (PITR)
#Text=25.3.1.
6-1	525-535	Continuous	_	_	_	_	
6-2	536-545	Archiving	_	_	_	_	
6-3	546-549	and	_	_	_	_	
6-4	550-563	Point-in-Time	_	_	_	_	
6-5	564-572	Recovery	_	_	_	_	
6-6	573-574	(	_	_	_	_	
6-7	574-578	PITR	_	_	_	_	
6-8	578-579	)	_	_	_	_	
6-9	580-586	25.3.1	_	_	_	_	
6-10	586-587	.	_	_	_	_	

#Text=Setting Up WAL Archiving
#Text=25.3.2.
7-1	588-595	Setting	_	_	_	_	
7-2	596-598	Up	_	_	_	_	
7-3	599-602	WAL	_	_	_	_	
7-4	603-612	Archiving	_	_	_	_	
7-5	613-619	25.3.2	_	_	_	_	
7-6	619-620	.	_	_	_	_	

#Text=Making a Base Backup
#Text=25.3.3.
8-1	621-627	Making	_	_	_	_	
8-2	628-629	a	_	_	_	_	
8-3	630-634	Base	_	_	_	_	
8-4	635-641	Backup	_	_	_	_	
8-5	642-648	25.3.3	_	_	_	_	
8-6	648-649	.	_	_	_	_	

#Text=Making a Base Backup Using the Low Level API
#Text=25.3.4.
9-1	650-656	Making	_	_	_	_	
9-2	657-658	a	_	_	_	_	
9-3	659-663	Base	_	_	_	_	
9-4	664-670	Backup	_	_	_	_	
9-5	671-676	Using	_	_	_	_	
9-6	677-680	the	_	_	_	_	
9-7	681-684	Low	_	_	_	_	
9-8	685-690	Level	_	_	_	_	
9-9	691-694	API	_	_	_	_	
9-10	695-701	25.3.4	_	_	_	_	
9-11	701-702	.	_	_	_	_	

#Text=Recovering Using a Continuous Archive Backup
#Text=25.3.5.
10-1	703-713	Recovering	_	_	_	_	
10-2	714-719	Using	_	_	_	_	
10-3	720-721	a	_	_	_	_	
10-4	722-732	Continuous	_	_	_	_	
10-5	733-740	Archive	_	_	_	_	
10-6	741-747	Backup	_	_	_	_	
10-7	748-754	25.3.5	_	_	_	_	
10-8	754-755	.	_	_	_	_	

#Text=Timelines
#Text=25.3.6.
11-1	756-765	Timelines	_	_	_	_	
11-2	766-772	25.3.6	_	_	_	_	
11-3	772-773	.	_	_	_	_	

#Text=Tips and Examples
#Text=25.3.7.
12-1	774-778	Tips	_	_	_	_	
12-2	779-782	and	_	_	_	_	
12-3	783-791	Examples	_	_	_	_	
12-4	792-798	25.3.7	_	_	_	_	
12-5	798-799	.	_	_	_	_	

#Text=Caveats
#Text=At all times, PostgreSQL maintains a write ahead log (WAL) in the pg_wal/ subdirectory of the cluster's data directory.
13-1	800-807	Caveats	_	_	_	_	
13-2	808-810	At	_	_	_	_	
13-3	811-814	all	_	_	_	_	
13-4	815-820	times	_	_	_	_	
13-5	820-821	,	_	_	_	_	
13-6	822-832	PostgreSQL	_	_	_	_	
13-7	833-842	maintains	_	_	_	_	
13-8	843-844	a	_	_	_	_	
13-9	845-850	write	_	_	_	_	
13-10	851-856	ahead	_	_	_	_	
13-11	857-860	log	_	_	_	_	
13-12	861-862	(	_	_	_	_	
13-13	862-865	WAL	_	_	_	_	
13-14	865-866	)	_	_	_	_	
13-15	867-869	in	_	_	_	_	
13-16	870-873	the	_	_	_	_	
13-17	874-880	pg_wal	_	_	_	_	
13-18	880-881	/	_	_	_	_	
13-19	882-894	subdirectory	_	_	_	_	
13-20	895-897	of	_	_	_	_	
13-21	898-901	the	_	_	_	_	
13-22	902-911	cluster's	_	_	_	_	
13-23	912-916	data	_	_	_	_	
13-24	917-926	directory	_	_	_	_	
13-25	926-927	.	_	_	_	_	

#Text=The log records every change made to the database's data files.
14-1	928-931	The	_	_	_	_	
14-2	932-935	log	_	_	_	_	
14-3	936-943	records	_	_	_	_	
14-4	944-949	every	_	_	_	_	
14-5	950-956	change	_	_	_	_	
14-6	957-961	made	_	_	_	_	
14-7	962-964	to	_	_	_	_	
14-8	965-968	the	_	_	_	_	
14-9	969-979	database's	_	_	_	_	
14-10	980-984	data	_	_	_	_	
14-11	985-990	files	_	_	_	_	
14-12	990-991	.	_	_	_	_	

#Text=This log exists primarily for crash-safety purposes: if the system crashes, the database can be restored to consistency by “replaying” the log entries made since the last checkpoint.
15-1	992-996	This	_	_	_	_	
15-2	997-1000	log	_	_	_	_	
15-3	1001-1007	exists	_	_	_	_	
15-4	1008-1017	primarily	_	_	_	_	
15-5	1018-1021	for	_	_	_	_	
15-6	1022-1034	crash-safety	_	_	_	_	
15-7	1035-1043	purposes	_	_	_	_	
15-8	1043-1044	:	_	_	_	_	
15-9	1045-1047	if	_	_	_	_	
15-10	1048-1051	the	_	_	_	_	
15-11	1052-1058	system	_	_	_	_	
15-12	1059-1066	crashes	_	_	_	_	
15-13	1066-1067	,	_	_	_	_	
15-14	1068-1071	the	_	_	_	_	
15-15	1072-1080	database	_	_	_	_	
15-16	1081-1084	can	_	_	_	_	
15-17	1085-1087	be	_	_	_	_	
15-18	1088-1096	restored	_	_	_	_	
15-19	1097-1099	to	_	_	_	_	
15-20	1100-1111	consistency	_	_	_	_	
15-21	1112-1114	by	_	_	_	_	
15-22	1115-1116	“	_	_	_	_	
15-23	1116-1125	replaying	_	_	_	_	
15-24	1125-1126	”	_	_	_	_	
15-25	1127-1130	the	_	_	_	_	
15-26	1131-1134	log	_	_	_	_	
15-27	1135-1142	entries	_	_	_	_	
15-28	1143-1147	made	_	_	_	_	
15-29	1148-1153	since	_	_	_	_	
15-30	1154-1157	the	_	_	_	_	
15-31	1158-1162	last	_	_	_	_	
15-32	1163-1173	checkpoint	_	_	_	_	
15-33	1173-1174	.	_	_	_	_	

#Text=However, the existence of the log makes it possible to use a third strategy for backing up databases: we can combine a file-system-level backup with backup of the WAL files.
16-1	1175-1182	However	_	_	_	_	
16-2	1182-1183	,	_	_	_	_	
16-3	1184-1187	the	_	_	_	_	
16-4	1188-1197	existence	_	_	_	_	
16-5	1198-1200	of	_	_	_	_	
16-6	1201-1204	the	_	_	_	_	
16-7	1205-1208	log	_	_	_	_	
16-8	1209-1214	makes	_	_	_	_	
16-9	1215-1217	it	_	_	_	_	
16-10	1218-1226	possible	_	_	_	_	
16-11	1227-1229	to	_	_	_	_	
16-12	1230-1233	use	_	_	_	_	
16-13	1234-1235	a	_	_	_	_	
16-14	1236-1241	third	_	_	_	_	
16-15	1242-1250	strategy	_	_	_	_	
16-16	1251-1254	for	_	_	_	_	
16-17	1255-1262	backing	_	_	_	_	
16-18	1263-1265	up	_	_	_	_	
16-19	1266-1275	databases	_	_	_	_	
16-20	1275-1276	:	_	_	_	_	
16-21	1277-1279	we	_	_	_	_	
16-22	1280-1283	can	_	_	_	_	
16-23	1284-1291	combine	_	_	_	_	
16-24	1292-1293	a	_	_	_	_	
16-25	1294-1311	file-system-level	_	_	_	_	
16-26	1312-1318	backup	_	_	_	_	
16-27	1319-1323	with	_	_	_	_	
16-28	1324-1330	backup	_	_	_	_	
16-29	1331-1333	of	_	_	_	_	
16-30	1334-1337	the	_	_	_	_	
16-31	1338-1341	WAL	_	_	_	_	
16-32	1342-1347	files	_	_	_	_	
16-33	1347-1348	.	_	_	_	_	

#Text=If recovery is needed, we restore the file system backup and then replay from the backed-up WAL files to bring the system to a current state.
17-1	1349-1351	If	_	_	_	_	
17-2	1352-1360	recovery	_	_	_	_	
17-3	1361-1363	is	_	_	_	_	
17-4	1364-1370	needed	_	_	_	_	
17-5	1370-1371	,	_	_	_	_	
17-6	1372-1374	we	_	_	_	_	
17-7	1375-1382	restore	_	_	_	_	
17-8	1383-1386	the	_	_	_	_	
17-9	1387-1391	file	_	_	_	_	
17-10	1392-1398	system	_	_	_	_	
17-11	1399-1405	backup	_	_	_	_	
17-12	1406-1409	and	_	_	_	_	
17-13	1410-1414	then	_	_	_	_	
17-14	1415-1421	replay	_	_	_	_	
17-15	1422-1426	from	_	_	_	_	
17-16	1427-1430	the	_	_	_	_	
17-17	1431-1440	backed-up	_	_	_	_	
17-18	1441-1444	WAL	_	_	_	_	
17-19	1445-1450	files	_	_	_	_	
17-20	1451-1453	to	_	_	_	_	
17-21	1454-1459	bring	_	_	_	_	
17-22	1460-1463	the	_	_	_	_	
17-23	1464-1470	system	_	_	_	_	
17-24	1471-1473	to	_	_	_	_	
17-25	1474-1475	a	_	_	_	_	
17-26	1476-1483	current	_	_	_	_	
17-27	1484-1489	state	_	_	_	_	
17-28	1489-1490	.	_	_	_	_	

#Text=This approach is more complex to administer than either of the previous approaches, but it has some significant benefits:
#Text=We do not need a perfectly consistent file system backup as the starting point.
18-1	1491-1495	This	_	_	_	_	
18-2	1496-1504	approach	_	_	_	_	
18-3	1505-1507	is	_	_	_	_	
18-4	1508-1512	more	_	_	_	_	
18-5	1513-1520	complex	_	_	_	_	
18-6	1521-1523	to	_	_	_	_	
18-7	1524-1534	administer	_	_	_	_	
18-8	1535-1539	than	_	_	_	_	
18-9	1540-1546	either	_	_	_	_	
18-10	1547-1549	of	_	_	_	_	
18-11	1550-1553	the	_	_	_	_	
18-12	1554-1562	previous	_	_	_	_	
18-13	1563-1573	approaches	_	_	_	_	
18-14	1573-1574	,	_	_	_	_	
18-15	1575-1578	but	_	_	_	_	
18-16	1579-1581	it	_	_	_	_	
18-17	1582-1585	has	_	_	_	_	
18-18	1586-1590	some	_	_	_	_	
18-19	1591-1602	significant	_	_	_	_	
18-20	1603-1611	benefits	_	_	_	_	
18-21	1611-1612	:	_	_	_	_	
18-22	1613-1615	We	_	_	_	_	
18-23	1616-1618	do	_	_	_	_	
18-24	1619-1622	not	_	_	_	_	
18-25	1623-1627	need	_	_	_	_	
18-26	1628-1629	a	_	_	_	_	
18-27	1630-1639	perfectly	_	_	_	_	
18-28	1640-1650	consistent	_	_	_	_	
18-29	1651-1655	file	_	_	_	_	
18-30	1656-1662	system	_	_	_	_	
18-31	1663-1669	backup	_	_	_	_	
18-32	1670-1672	as	_	_	_	_	
18-33	1673-1676	the	_	_	_	_	
18-34	1677-1685	starting	_	_	_	_	
18-35	1686-1691	point	_	_	_	_	
18-36	1691-1692	.	_	_	_	_	

#Text=Any internal inconsistency in the backup will be corrected by log replay (this is not significantly different from what happens during crash recovery).
19-1	1693-1696	Any	_	_	_	_	
19-2	1697-1705	internal	_	_	_	_	
19-3	1706-1719	inconsistency	_	_	_	_	
19-4	1720-1722	in	_	_	_	_	
19-5	1723-1726	the	_	_	_	_	
19-6	1727-1733	backup	_	_	_	_	
19-7	1734-1738	will	_	_	_	_	
19-8	1739-1741	be	_	_	_	_	
19-9	1742-1751	corrected	_	_	_	_	
19-10	1752-1754	by	_	_	_	_	
19-11	1755-1758	log	_	_	_	_	
19-12	1759-1765	replay	_	_	_	_	
19-13	1766-1767	(	_	_	_	_	
19-14	1767-1771	this	_	_	_	_	
19-15	1772-1774	is	_	_	_	_	
19-16	1775-1778	not	_	_	_	_	
19-17	1779-1792	significantly	_	_	_	_	
19-18	1793-1802	different	_	_	_	_	
19-19	1803-1807	from	_	_	_	_	
19-20	1808-1812	what	_	_	_	_	
19-21	1813-1820	happens	_	_	_	_	
19-22	1821-1827	during	_	_	_	_	
19-23	1828-1833	crash	_	_	_	_	
19-24	1834-1842	recovery	_	_	_	_	
19-25	1842-1843	)	_	_	_	_	
19-26	1843-1844	.	_	_	_	_	

#Text=So we do not need a file system snapshot capability, just tar or a similar archiving tool.
20-1	1845-1847	So	_	_	_	_	
20-2	1848-1850	we	_	_	_	_	
20-3	1851-1853	do	_	_	_	_	
20-4	1854-1857	not	_	_	_	_	
20-5	1858-1862	need	_	_	_	_	
20-6	1863-1864	a	_	_	_	_	
20-7	1865-1869	file	_	_	_	_	
20-8	1870-1876	system	_	_	_	_	
20-9	1877-1885	snapshot	_	_	_	_	
20-10	1886-1896	capability	_	_	_	_	
20-11	1896-1897	,	_	_	_	_	
20-12	1898-1902	just	_	_	_	_	
20-13	1903-1906	tar	_	_	_	_	
20-14	1907-1909	or	_	_	_	_	
20-15	1910-1911	a	_	_	_	_	
20-16	1912-1919	similar	_	_	_	_	
20-17	1920-1929	archiving	_	_	_	_	
20-18	1930-1934	tool	_	_	_	_	
20-19	1934-1935	.	_	_	_	_	

#Text=Since we can combine an indefinitely long sequence of WAL files for replay, continuous backup can be achieved simply by continuing to archive the WAL files.
21-1	1936-1941	Since	_	_	_	_	
21-2	1942-1944	we	_	_	_	_	
21-3	1945-1948	can	_	_	_	_	
21-4	1949-1956	combine	_	_	_	_	
21-5	1957-1959	an	_	_	_	_	
21-6	1960-1972	indefinitely	_	_	_	_	
21-7	1973-1977	long	_	_	_	_	
21-8	1978-1986	sequence	_	_	_	_	
21-9	1987-1989	of	_	_	_	_	
21-10	1990-1993	WAL	_	_	_	_	
21-11	1994-1999	files	_	_	_	_	
21-12	2000-2003	for	_	_	_	_	
21-13	2004-2010	replay	_	_	_	_	
21-14	2010-2011	,	_	_	_	_	
21-15	2012-2022	continuous	_	_	_	_	
21-16	2023-2029	backup	_	_	_	_	
21-17	2030-2033	can	_	_	_	_	
21-18	2034-2036	be	_	_	_	_	
21-19	2037-2045	achieved	_	_	_	_	
21-20	2046-2052	simply	_	_	_	_	
21-21	2053-2055	by	_	_	_	_	
21-22	2056-2066	continuing	_	_	_	_	
21-23	2067-2069	to	_	_	_	_	
21-24	2070-2077	archive	_	_	_	_	
21-25	2078-2081	the	_	_	_	_	
21-26	2082-2085	WAL	_	_	_	_	
21-27	2086-2091	files	_	_	_	_	
21-28	2091-2092	.	_	_	_	_	

#Text=This is particularly valuable for large databases, where it might not be convenient to take a full backup frequently.
22-1	2093-2097	This	_	_	_	_	
22-2	2098-2100	is	_	_	_	_	
22-3	2101-2113	particularly	_	_	_	_	
22-4	2114-2122	valuable	_	_	_	_	
22-5	2123-2126	for	_	_	_	_	
22-6	2127-2132	large	_	_	_	_	
22-7	2133-2142	databases	_	_	_	_	
22-8	2142-2143	,	_	_	_	_	
22-9	2144-2149	where	_	_	_	_	
22-10	2150-2152	it	_	_	_	_	
22-11	2153-2158	might	_	_	_	_	
22-12	2159-2162	not	_	_	_	_	
22-13	2163-2165	be	_	_	_	_	
22-14	2166-2176	convenient	_	_	_	_	
22-15	2177-2179	to	_	_	_	_	
22-16	2180-2184	take	_	_	_	_	
22-17	2185-2186	a	_	_	_	_	
22-18	2187-2191	full	_	_	_	_	
22-19	2192-2198	backup	_	_	_	_	
22-20	2199-2209	frequently	_	_	_	_	
22-21	2209-2210	.	_	_	_	_	

#Text=It is not necessary to replay the WAL entries all the way to the end.
23-1	2211-2213	It	_	_	_	_	
23-2	2214-2216	is	_	_	_	_	
23-3	2217-2220	not	_	_	_	_	
23-4	2221-2230	necessary	_	_	_	_	
23-5	2231-2233	to	_	_	_	_	
23-6	2234-2240	replay	_	_	_	_	
23-7	2241-2244	the	_	_	_	_	
23-8	2245-2248	WAL	_	_	_	_	
23-9	2249-2256	entries	_	_	_	_	
23-10	2257-2260	all	_	_	_	_	
23-11	2261-2264	the	_	_	_	_	
23-12	2265-2268	way	_	_	_	_	
23-13	2269-2271	to	_	_	_	_	
23-14	2272-2275	the	_	_	_	_	
23-15	2276-2279	end	_	_	_	_	
23-16	2279-2280	.	_	_	_	_	

#Text=We could stop the replay at any point and have a consistent snapshot of the database as it was at that time.
24-1	2281-2283	We	_	_	_	_	
24-2	2284-2289	could	_	_	_	_	
24-3	2290-2294	stop	_	_	_	_	
24-4	2295-2298	the	_	_	_	_	
24-5	2299-2305	replay	_	_	_	_	
24-6	2306-2308	at	_	_	_	_	
24-7	2309-2312	any	_	_	_	_	
24-8	2313-2318	point	_	_	_	_	
24-9	2319-2322	and	_	_	_	_	
24-10	2323-2327	have	_	_	_	_	
24-11	2328-2329	a	_	_	_	_	
24-12	2330-2340	consistent	_	_	_	_	
24-13	2341-2349	snapshot	_	_	_	_	
24-14	2350-2352	of	_	_	_	_	
24-15	2353-2356	the	_	_	_	_	
24-16	2357-2365	database	_	_	_	_	
24-17	2366-2368	as	_	_	_	_	
24-18	2369-2371	it	_	_	_	_	
24-19	2372-2375	was	_	_	_	_	
24-20	2376-2378	at	_	_	_	_	
24-21	2379-2383	that	_	_	_	_	
24-22	2384-2388	time	_	_	_	_	
24-23	2388-2389	.	_	_	_	_	

#Text=Thus, this technique supports point-in-time recovery: it is possible to restore the database to its state at any time since your base backup was taken.
25-1	2390-2394	Thus	_	_	_	_	
25-2	2394-2395	,	_	_	_	_	
25-3	2396-2400	this	_	_	_	_	
25-4	2401-2410	technique	_	_	_	_	
25-5	2411-2419	supports	_	_	_	_	
25-6	2420-2433	point-in-time	_	_	_	_	
25-7	2434-2442	recovery	_	_	_	_	
25-8	2442-2443	:	_	_	_	_	
25-9	2444-2446	it	_	_	_	_	
25-10	2447-2449	is	_	_	_	_	
25-11	2450-2458	possible	_	_	_	_	
25-12	2459-2461	to	_	_	_	_	
25-13	2462-2469	restore	_	_	_	_	
25-14	2470-2473	the	_	_	_	_	
25-15	2474-2482	database	_	_	_	_	
25-16	2483-2485	to	_	_	_	_	
25-17	2486-2489	its	_	_	_	_	
25-18	2490-2495	state	_	_	_	_	
25-19	2496-2498	at	_	_	_	_	
25-20	2499-2502	any	_	_	_	_	
25-21	2503-2507	time	_	_	_	_	
25-22	2508-2513	since	_	_	_	_	
25-23	2514-2518	your	_	_	_	_	
25-24	2519-2523	base	_	_	_	_	
25-25	2524-2530	backup	_	_	_	_	
25-26	2531-2534	was	_	_	_	_	
25-27	2535-2540	taken	_	_	_	_	
25-28	2540-2541	.	_	_	_	_	

#Text=If we continuously feed the series of WAL files to another machine that has been loaded with the same base backup file, we have a warm standby system: at any point we can bring up the second machine and it will have a nearly-current copy of the database.
26-1	2542-2544	If	_	_	_	_	
26-2	2545-2547	we	_	_	_	_	
26-3	2548-2560	continuously	_	_	_	_	
26-4	2561-2565	feed	_	_	_	_	
26-5	2566-2569	the	_	_	_	_	
26-6	2570-2576	series	_	_	_	_	
26-7	2577-2579	of	_	_	_	_	
26-8	2580-2583	WAL	_	_	_	_	
26-9	2584-2589	files	_	_	_	_	
26-10	2590-2592	to	_	_	_	_	
26-11	2593-2600	another	_	_	_	_	
26-12	2601-2608	machine	_	_	_	_	
26-13	2609-2613	that	_	_	_	_	
26-14	2614-2617	has	_	_	_	_	
26-15	2618-2622	been	_	_	_	_	
26-16	2623-2629	loaded	_	_	_	_	
26-17	2630-2634	with	_	_	_	_	
26-18	2635-2638	the	_	_	_	_	
26-19	2639-2643	same	_	_	_	_	
26-20	2644-2648	base	_	_	_	_	
26-21	2649-2655	backup	_	_	_	_	
26-22	2656-2660	file	_	_	_	_	
26-23	2660-2661	,	_	_	_	_	
26-24	2662-2664	we	_	_	_	_	
26-25	2665-2669	have	_	_	_	_	
26-26	2670-2671	a	_	_	_	_	
26-27	2672-2676	warm	_	_	_	_	
26-28	2677-2684	standby	_	_	_	_	
26-29	2685-2691	system	_	_	_	_	
26-30	2691-2692	:	_	_	_	_	
26-31	2693-2695	at	_	_	_	_	
26-32	2696-2699	any	_	_	_	_	
26-33	2700-2705	point	_	_	_	_	
26-34	2706-2708	we	_	_	_	_	
26-35	2709-2712	can	_	_	_	_	
26-36	2713-2718	bring	_	_	_	_	
26-37	2719-2721	up	_	_	_	_	
26-38	2722-2725	the	_	_	_	_	
26-39	2726-2732	second	_	_	_	_	
26-40	2733-2740	machine	_	_	_	_	
26-41	2741-2744	and	_	_	_	_	
26-42	2745-2747	it	_	_	_	_	
26-43	2748-2752	will	_	_	_	_	
26-44	2753-2757	have	_	_	_	_	
26-45	2758-2759	a	_	_	_	_	
26-46	2760-2774	nearly-current	_	_	_	_	
26-47	2775-2779	copy	_	_	_	_	
26-48	2780-2782	of	_	_	_	_	
26-49	2783-2786	the	_	_	_	_	
26-50	2787-2795	database	_	_	_	_	
26-51	2795-2796	.	_	_	_	_	

#Text=Note
#Text=pg_dump and pg_dumpall do not produce file-system-level backups and cannot be used as part of a continuous-archiving solution.
27-1	2797-2801	Note	_	_	_	_	
27-2	2802-2809	pg_dump	_	_	_	_	
27-3	2810-2813	and	_	_	_	_	
27-4	2814-2824	pg_dumpall	_	_	_	_	
27-5	2825-2827	do	_	_	_	_	
27-6	2828-2831	not	_	_	_	_	
27-7	2832-2839	produce	_	_	_	_	
27-8	2840-2857	file-system-level	_	_	_	_	
27-9	2858-2865	backups	_	_	_	_	
27-10	2866-2869	and	_	_	_	_	
27-11	2870-2876	cannot	_	_	_	_	
27-12	2877-2879	be	_	_	_	_	
27-13	2880-2884	used	_	_	_	_	
27-14	2885-2887	as	_	_	_	_	
27-15	2888-2892	part	_	_	_	_	
27-16	2893-2895	of	_	_	_	_	
27-17	2896-2897	a	_	_	_	_	
27-18	2898-2918	continuous-archiving	_	_	_	_	
27-19	2919-2927	solution	_	_	_	_	
27-20	2927-2928	.	_	_	_	_	

#Text=Such dumps are logical and do not contain enough information to be used by WAL replay.
28-1	2929-2933	Such	_	_	_	_	
28-2	2934-2939	dumps	_	_	_	_	
28-3	2940-2943	are	_	_	_	_	
28-4	2944-2951	logical	_	_	_	_	
28-5	2952-2955	and	_	_	_	_	
28-6	2956-2958	do	_	_	_	_	
28-7	2959-2962	not	_	_	_	_	
28-8	2963-2970	contain	_	_	_	_	
28-9	2971-2977	enough	_	_	_	_	
28-10	2978-2989	information	_	_	_	_	
28-11	2990-2992	to	_	_	_	_	
28-12	2993-2995	be	_	_	_	_	
28-13	2996-3000	used	_	_	_	_	
28-14	3001-3003	by	_	_	_	_	
28-15	3004-3007	WAL	_	_	_	_	
28-16	3008-3014	replay	_	_	_	_	
28-17	3014-3015	.	_	_	_	_	

#Text=As with the plain file-system-backup technique, this method can only support restoration of an entire database cluster, not a subset.
29-1	3016-3018	As	_	_	_	_	
29-2	3019-3023	with	_	_	_	_	
29-3	3024-3027	the	_	_	_	_	
29-4	3028-3033	plain	_	_	_	_	
29-5	3034-3052	file-system-backup	_	_	_	_	
29-6	3053-3062	technique	_	_	_	_	
29-7	3062-3063	,	_	_	_	_	
29-8	3064-3068	this	_	_	_	_	
29-9	3069-3075	method	_	_	_	_	
29-10	3076-3079	can	_	_	_	_	
29-11	3080-3084	only	_	_	_	_	
29-12	3085-3092	support	_	_	_	_	
29-13	3093-3104	restoration	_	_	_	_	
29-14	3105-3107	of	_	_	_	_	
29-15	3108-3110	an	_	_	_	_	
29-16	3111-3117	entire	_	_	_	_	
29-17	3118-3126	database	_	_	_	_	
29-18	3127-3134	cluster	_	_	_	_	
29-19	3134-3135	,	_	_	_	_	
29-20	3136-3139	not	_	_	_	_	
29-21	3140-3141	a	_	_	_	_	
29-22	3142-3148	subset	_	_	_	_	
29-23	3148-3149	.	_	_	_	_	

#Text=Also, it requires a lot of archival storage: the base backup might be bulky, and a busy system will generate many megabytes of WAL traffic that have to be archived.
30-1	3150-3154	Also	_	_	_	_	
30-2	3154-3155	,	_	_	_	_	
30-3	3156-3158	it	_	_	_	_	
30-4	3159-3167	requires	_	_	_	_	
30-5	3168-3169	a	_	_	_	_	
30-6	3170-3173	lot	_	_	_	_	
30-7	3174-3176	of	_	_	_	_	
30-8	3177-3185	archival	_	_	_	_	
30-9	3186-3193	storage	_	_	_	_	
30-10	3193-3194	:	_	_	_	_	
30-11	3195-3198	the	_	_	_	_	
30-12	3199-3203	base	_	_	_	_	
30-13	3204-3210	backup	_	_	_	_	
30-14	3211-3216	might	_	_	_	_	
30-15	3217-3219	be	_	_	_	_	
30-16	3220-3225	bulky	_	_	_	_	
30-17	3225-3226	,	_	_	_	_	
30-18	3227-3230	and	_	_	_	_	
30-19	3231-3232	a	_	_	_	_	
30-20	3233-3237	busy	_	_	_	_	
30-21	3238-3244	system	_	_	_	_	
30-22	3245-3249	will	_	_	_	_	
30-23	3250-3258	generate	_	_	_	_	
30-24	3259-3263	many	_	_	_	_	
30-25	3264-3273	megabytes	_	_	_	_	
30-26	3274-3276	of	_	_	_	_	
30-27	3277-3280	WAL	_	_	_	_	
30-28	3281-3288	traffic	_	_	_	_	
30-29	3289-3293	that	_	_	_	_	
30-30	3294-3298	have	_	_	_	_	
30-31	3299-3301	to	_	_	_	_	
30-32	3302-3304	be	_	_	_	_	
30-33	3305-3313	archived	_	_	_	_	
30-34	3313-3314	.	_	_	_	_	

#Text=Still, it is the preferred backup technique in many situations where high reliability is needed.
31-1	3315-3320	Still	_	_	_	_	
31-2	3320-3321	,	_	_	_	_	
31-3	3322-3324	it	_	_	_	_	
31-4	3325-3327	is	_	_	_	_	
31-5	3328-3331	the	_	_	_	_	
31-6	3332-3341	preferred	_	_	_	_	
31-7	3342-3348	backup	_	_	_	_	
31-8	3349-3358	technique	_	_	_	_	
31-9	3359-3361	in	_	_	_	_	
31-10	3362-3366	many	_	_	_	_	
31-11	3367-3377	situations	_	_	_	_	
31-12	3378-3383	where	_	_	_	_	
31-13	3384-3388	high	_	_	_	_	
31-14	3389-3400	reliability	_	_	_	_	
31-15	3401-3403	is	_	_	_	_	
31-16	3404-3410	needed	_	_	_	_	
31-17	3410-3411	.	_	_	_	_	

#Text=To recover successfully using continuous archiving (also called “online backup” by many database vendors), you need a continuous sequence of archived WAL files that extends back at least as far as the start time of your backup.
32-1	3412-3414	To	_	_	_	_	
32-2	3415-3422	recover	_	_	_	_	
32-3	3423-3435	successfully	_	_	_	_	
32-4	3436-3441	using	_	_	_	_	
32-5	3442-3452	continuous	_	_	_	_	
32-6	3453-3462	archiving	_	_	_	_	
32-7	3463-3464	(	_	_	_	_	
32-8	3464-3468	also	_	_	_	_	
32-9	3469-3475	called	_	_	_	_	
32-10	3476-3477	“	_	_	_	_	
32-11	3477-3483	online	_	_	_	_	
32-12	3484-3490	backup	_	_	_	_	
32-13	3490-3491	”	_	_	_	_	
32-14	3492-3494	by	_	_	_	_	
32-15	3495-3499	many	_	_	_	_	
32-16	3500-3508	database	_	_	_	_	
32-17	3509-3516	vendors	_	_	_	_	
32-18	3516-3517	)	_	_	_	_	
32-19	3517-3518	,	_	_	_	_	
32-20	3519-3522	you	_	_	_	_	
32-21	3523-3527	need	_	_	_	_	
32-22	3528-3529	a	_	_	_	_	
32-23	3530-3540	continuous	_	_	_	_	
32-24	3541-3549	sequence	_	_	_	_	
32-25	3550-3552	of	_	_	_	_	
32-26	3553-3561	archived	_	_	_	_	
32-27	3562-3565	WAL	_	_	_	_	
32-28	3566-3571	files	_	_	_	_	
32-29	3572-3576	that	_	_	_	_	
32-30	3577-3584	extends	_	_	_	_	
32-31	3585-3589	back	_	_	_	_	
32-32	3590-3592	at	_	_	_	_	
32-33	3593-3598	least	_	_	_	_	
32-34	3599-3601	as	_	_	_	_	
32-35	3602-3605	far	_	_	_	_	
32-36	3606-3608	as	_	_	_	_	
32-37	3609-3612	the	_	_	_	_	
32-38	3613-3618	start	_	_	_	_	
32-39	3619-3623	time	_	_	_	_	
32-40	3624-3626	of	_	_	_	_	
32-41	3627-3631	your	_	_	_	_	
32-42	3632-3638	backup	_	_	_	_	
32-43	3638-3639	.	_	_	_	_	

#Text=So to get started, you should set up and test your procedure for archiving WAL files before you take your first base backup.
33-1	3640-3642	So	_	_	_	_	
33-2	3643-3645	to	_	_	_	_	
33-3	3646-3649	get	_	_	_	_	
33-4	3650-3657	started	_	_	_	_	
33-5	3657-3658	,	_	_	_	_	
33-6	3659-3662	you	_	_	_	_	
33-7	3663-3669	should	_	_	_	_	
33-8	3670-3673	set	_	_	_	_	
33-9	3674-3676	up	_	_	_	_	
33-10	3677-3680	and	_	_	_	_	
33-11	3681-3685	test	_	_	_	_	
33-12	3686-3690	your	_	_	_	_	
33-13	3691-3700	procedure	_	_	_	_	
33-14	3701-3704	for	_	_	_	_	
33-15	3705-3714	archiving	_	_	_	_	
33-16	3715-3718	WAL	_	_	_	_	
33-17	3719-3724	files	_	_	_	_	
33-18	3725-3731	before	_	_	_	_	
33-19	3732-3735	you	_	_	_	_	
33-20	3736-3740	take	_	_	_	_	
33-21	3741-3745	your	_	_	_	_	
33-22	3746-3751	first	_	_	_	_	
33-23	3752-3756	base	_	_	_	_	
33-24	3757-3763	backup	_	_	_	_	
33-25	3763-3764	.	_	_	_	_	

#Text=Accordingly, we first discuss the mechanics of archiving WAL files.
#Text=25.3.1. 
34-1	3765-3776	Accordingly	_	_	_	_	
34-2	3776-3777	,	_	_	_	_	
34-3	3778-3780	we	_	_	_	_	
34-4	3781-3786	first	_	_	_	_	
34-5	3787-3794	discuss	_	_	_	_	
34-6	3795-3798	the	_	_	_	_	
34-7	3799-3808	mechanics	_	_	_	_	
34-8	3809-3811	of	_	_	_	_	
34-9	3812-3821	archiving	_	_	_	_	
34-10	3822-3825	WAL	_	_	_	_	
34-11	3826-3831	files	_	_	_	_	
34-12	3831-3832	.	_	_	_	_	
34-13	3833-3839	25.3.1	_	_	_	_	
34-14	3839-3840	.	_	_	_	_	
34-15	3840-3841	 	_	_	_	_	

#Text=Setting Up WAL Archiving
#Text=In an abstract sense, a running PostgreSQL system produces an indefinitely long sequence of WAL records.
35-1	3841-3848	Setting	_	_	_	_	
35-2	3849-3851	Up	_	_	_	_	
35-3	3852-3855	WAL	_	_	_	_	
35-4	3856-3865	Archiving	_	_	_	_	
35-5	3866-3868	In	_	_	_	_	
35-6	3869-3871	an	_	_	_	_	
35-7	3872-3880	abstract	_	_	_	_	
35-8	3881-3886	sense	_	_	_	_	
35-9	3886-3887	,	_	_	_	_	
35-10	3888-3889	a	_	_	_	_	
35-11	3890-3897	running	_	_	_	_	
35-12	3898-3908	PostgreSQL	_	_	_	_	
35-13	3909-3915	system	_	_	_	_	
35-14	3916-3924	produces	_	_	_	_	
35-15	3925-3927	an	_	_	_	_	
35-16	3928-3940	indefinitely	_	_	_	_	
35-17	3941-3945	long	_	_	_	_	
35-18	3946-3954	sequence	_	_	_	_	
35-19	3955-3957	of	_	_	_	_	
35-20	3958-3961	WAL	_	_	_	_	
35-21	3962-3969	records	_	_	_	_	
35-22	3969-3970	.	_	_	_	_	

#Text=The system physically divides this sequence into WAL segment files, which are normally 16MB apiece (although the segment size can be altered during initdb).
36-1	3971-3974	The	_	_	_	_	
36-2	3975-3981	system	_	_	_	_	
36-3	3982-3992	physically	_	_	_	_	
36-4	3993-4000	divides	_	_	_	_	
36-5	4001-4005	this	_	_	_	_	
36-6	4006-4014	sequence	_	_	_	_	
36-7	4015-4019	into	_	_	_	_	
36-8	4020-4023	WAL	_	_	_	_	
36-9	4024-4031	segment	_	_	_	_	
36-10	4032-4037	files	_	_	_	_	
36-11	4037-4038	,	_	_	_	_	
36-12	4039-4044	which	_	_	_	_	
36-13	4045-4048	are	_	_	_	_	
36-14	4049-4057	normally	_	_	_	_	
36-15	4058-4062	16MB	_	_	_	_	
36-16	4063-4069	apiece	_	_	_	_	
36-17	4070-4071	(	_	_	_	_	
36-18	4071-4079	although	_	_	_	_	
36-19	4080-4083	the	_	_	_	_	
36-20	4084-4091	segment	_	_	_	_	
36-21	4092-4096	size	_	_	_	_	
36-22	4097-4100	can	_	_	_	_	
36-23	4101-4103	be	_	_	_	_	
36-24	4104-4111	altered	_	_	_	_	
36-25	4112-4118	during	_	_	_	_	
36-26	4119-4125	initdb	_	_	_	_	
36-27	4125-4126	)	_	_	_	_	
36-28	4126-4127	.	_	_	_	_	

#Text=The segment files are given numeric names that reflect their position in the abstract WAL sequence.
37-1	4128-4131	The	_	_	_	_	
37-2	4132-4139	segment	_	_	_	_	
37-3	4140-4145	files	_	_	_	_	
37-4	4146-4149	are	_	_	_	_	
37-5	4150-4155	given	_	_	_	_	
37-6	4156-4163	numeric	_	_	_	_	
37-7	4164-4169	names	_	_	_	_	
37-8	4170-4174	that	_	_	_	_	
37-9	4175-4182	reflect	_	_	_	_	
37-10	4183-4188	their	_	_	_	_	
37-11	4189-4197	position	_	_	_	_	
37-12	4198-4200	in	_	_	_	_	
37-13	4201-4204	the	_	_	_	_	
37-14	4205-4213	abstract	_	_	_	_	
37-15	4214-4217	WAL	_	_	_	_	
37-16	4218-4226	sequence	_	_	_	_	
37-17	4226-4227	.	_	_	_	_	

#Text=When not using WAL archiving, the system normally creates just a few segment files and then “recycles” them by renaming no-longer-needed segment files to higher segment numbers.
38-1	4228-4232	When	_	_	_	_	
38-2	4233-4236	not	_	_	_	_	
38-3	4237-4242	using	_	_	_	_	
38-4	4243-4246	WAL	_	_	_	_	
38-5	4247-4256	archiving	_	_	_	_	
38-6	4256-4257	,	_	_	_	_	
38-7	4258-4261	the	_	_	_	_	
38-8	4262-4268	system	_	_	_	_	
38-9	4269-4277	normally	_	_	_	_	
38-10	4278-4285	creates	_	_	_	_	
38-11	4286-4290	just	_	_	_	_	
38-12	4291-4292	a	_	_	_	_	
38-13	4293-4296	few	_	_	_	_	
38-14	4297-4304	segment	_	_	_	_	
38-15	4305-4310	files	_	_	_	_	
38-16	4311-4314	and	_	_	_	_	
38-17	4315-4319	then	_	_	_	_	
38-18	4320-4321	“	_	_	_	_	
38-19	4321-4329	recycles	_	_	_	_	
38-20	4329-4330	”	_	_	_	_	
38-21	4331-4335	them	_	_	_	_	
38-22	4336-4338	by	_	_	_	_	
38-23	4339-4347	renaming	_	_	_	_	
38-24	4348-4364	no-longer-needed	_	_	_	_	
38-25	4365-4372	segment	_	_	_	_	
38-26	4373-4378	files	_	_	_	_	
38-27	4379-4381	to	_	_	_	_	
38-28	4382-4388	higher	_	_	_	_	
38-29	4389-4396	segment	_	_	_	_	
38-30	4397-4404	numbers	_	_	_	_	
38-31	4404-4405	.	_	_	_	_	

#Text=It's assumed that segment files whose contents precede the last checkpoint are no longer of interest and can be recycled.
39-1	4406-4410	It's	_	_	_	_	
39-2	4411-4418	assumed	_	_	_	_	
39-3	4419-4423	that	_	_	_	_	
39-4	4424-4431	segment	_	_	_	_	
39-5	4432-4437	files	_	_	_	_	
39-6	4438-4443	whose	_	_	_	_	
39-7	4444-4452	contents	_	_	_	_	
39-8	4453-4460	precede	_	_	_	_	
39-9	4461-4464	the	_	_	_	_	
39-10	4465-4469	last	_	_	_	_	
39-11	4470-4480	checkpoint	_	_	_	_	
39-12	4481-4484	are	_	_	_	_	
39-13	4485-4487	no	_	_	_	_	
39-14	4488-4494	longer	_	_	_	_	
39-15	4495-4497	of	_	_	_	_	
39-16	4498-4506	interest	_	_	_	_	
39-17	4507-4510	and	_	_	_	_	
39-18	4511-4514	can	_	_	_	_	
39-19	4515-4517	be	_	_	_	_	
39-20	4518-4526	recycled	_	_	_	_	
39-21	4526-4527	.	_	_	_	_	

#Text=When archiving WAL data, we need to capture the contents of each segment file once it is filled, and save that data somewhere before the segment file is recycled for reuse.
40-1	4528-4532	When	_	_	_	_	
40-2	4533-4542	archiving	_	_	_	_	
40-3	4543-4546	WAL	_	_	_	_	
40-4	4547-4551	data	_	_	_	_	
40-5	4551-4552	,	_	_	_	_	
40-6	4553-4555	we	_	_	_	_	
40-7	4556-4560	need	_	_	_	_	
40-8	4561-4563	to	_	_	_	_	
40-9	4564-4571	capture	_	_	_	_	
40-10	4572-4575	the	_	_	_	_	
40-11	4576-4584	contents	_	_	_	_	
40-12	4585-4587	of	_	_	_	_	
40-13	4588-4592	each	_	_	_	_	
40-14	4593-4600	segment	_	_	_	_	
40-15	4601-4605	file	_	_	_	_	
40-16	4606-4610	once	_	_	_	_	
40-17	4611-4613	it	_	_	_	_	
40-18	4614-4616	is	_	_	_	_	
40-19	4617-4623	filled	_	_	_	_	
40-20	4623-4624	,	_	_	_	_	
40-21	4625-4628	and	_	_	_	_	
40-22	4629-4633	save	_	_	_	_	
40-23	4634-4638	that	_	_	_	_	
40-24	4639-4643	data	_	_	_	_	
40-25	4644-4653	somewhere	_	_	_	_	
40-26	4654-4660	before	_	_	_	_	
40-27	4661-4664	the	_	_	_	_	
40-28	4665-4672	segment	_	_	_	_	
40-29	4673-4677	file	_	_	_	_	
40-30	4678-4680	is	_	_	_	_	
40-31	4681-4689	recycled	_	_	_	_	
40-32	4690-4693	for	_	_	_	_	
40-33	4694-4699	reuse	_	_	_	_	
40-34	4699-4700	.	_	_	_	_	

#Text=Depending on the application and the available hardware, there could be many different ways of “saving the data somewhere”: we could copy the segment files to an NFS-mounted directory on another machine, write them onto a tape drive (ensuring that you have a way of identifying the original name of each file), or batch them together and burn them onto CDs, or something else entirely.
41-1	4701-4710	Depending	_	_	_	_	
41-2	4711-4713	on	_	_	_	_	
41-3	4714-4717	the	_	_	_	_	
41-4	4718-4729	application	_	_	_	_	
41-5	4730-4733	and	_	_	_	_	
41-6	4734-4737	the	_	_	_	_	
41-7	4738-4747	available	_	_	_	_	
41-8	4748-4756	hardware	_	_	_	_	
41-9	4756-4757	,	_	_	_	_	
41-10	4758-4763	there	_	_	_	_	
41-11	4764-4769	could	_	_	_	_	
41-12	4770-4772	be	_	_	_	_	
41-13	4773-4777	many	_	_	_	_	
41-14	4778-4787	different	_	_	_	_	
41-15	4788-4792	ways	_	_	_	_	
41-16	4793-4795	of	_	_	_	_	
41-17	4796-4797	“	_	_	_	_	
41-18	4797-4803	saving	_	_	_	_	
41-19	4804-4807	the	_	_	_	_	
41-20	4808-4812	data	_	_	_	_	
41-21	4813-4822	somewhere	_	_	_	_	
41-22	4822-4823	”	_	_	_	_	
41-23	4823-4824	:	_	_	_	_	
41-24	4825-4827	we	_	_	_	_	
41-25	4828-4833	could	_	_	_	_	
41-26	4834-4838	copy	_	_	_	_	
41-27	4839-4842	the	_	_	_	_	
41-28	4843-4850	segment	_	_	_	_	
41-29	4851-4856	files	_	_	_	_	
41-30	4857-4859	to	_	_	_	_	
41-31	4860-4862	an	_	_	_	_	
41-32	4863-4874	NFS-mounted	_	_	_	_	
41-33	4875-4884	directory	_	_	_	_	
41-34	4885-4887	on	_	_	_	_	
41-35	4888-4895	another	_	_	_	_	
41-36	4896-4903	machine	_	_	_	_	
41-37	4903-4904	,	_	_	_	_	
41-38	4905-4910	write	_	_	_	_	
41-39	4911-4915	them	_	_	_	_	
41-40	4916-4920	onto	_	_	_	_	
41-41	4921-4922	a	_	_	_	_	
41-42	4923-4927	tape	_	_	_	_	
41-43	4928-4933	drive	_	_	_	_	
41-44	4934-4935	(	_	_	_	_	
41-45	4935-4943	ensuring	_	_	_	_	
41-46	4944-4948	that	_	_	_	_	
41-47	4949-4952	you	_	_	_	_	
41-48	4953-4957	have	_	_	_	_	
41-49	4958-4959	a	_	_	_	_	
41-50	4960-4963	way	_	_	_	_	
41-51	4964-4966	of	_	_	_	_	
41-52	4967-4978	identifying	_	_	_	_	
41-53	4979-4982	the	_	_	_	_	
41-54	4983-4991	original	_	_	_	_	
41-55	4992-4996	name	_	_	_	_	
41-56	4997-4999	of	_	_	_	_	
41-57	5000-5004	each	_	_	_	_	
41-58	5005-5009	file	_	_	_	_	
41-59	5009-5010	)	_	_	_	_	
41-60	5010-5011	,	_	_	_	_	
41-61	5012-5014	or	_	_	_	_	
41-62	5015-5020	batch	_	_	_	_	
41-63	5021-5025	them	_	_	_	_	
41-64	5026-5034	together	_	_	_	_	
41-65	5035-5038	and	_	_	_	_	
41-66	5039-5043	burn	_	_	_	_	
41-67	5044-5048	them	_	_	_	_	
41-68	5049-5053	onto	_	_	_	_	
41-69	5054-5057	CDs	_	_	_	_	
41-70	5057-5058	,	_	_	_	_	
41-71	5059-5061	or	_	_	_	_	
41-72	5062-5071	something	_	_	_	_	
41-73	5072-5076	else	_	_	_	_	
41-74	5077-5085	entirely	_	_	_	_	
41-75	5085-5086	.	_	_	_	_	

#Text=To provide the database administrator with flexibility, PostgreSQL tries not to make any assumptions about how the archiving will be done.
42-1	5087-5089	To	_	_	_	_	
42-2	5090-5097	provide	_	_	_	_	
42-3	5098-5101	the	_	_	_	_	
42-4	5102-5110	database	_	_	_	_	
42-5	5111-5124	administrator	_	_	_	_	
42-6	5125-5129	with	_	_	_	_	
42-7	5130-5141	flexibility	_	_	_	_	
42-8	5141-5142	,	_	_	_	_	
42-9	5143-5153	PostgreSQL	_	_	_	_	
42-10	5154-5159	tries	_	_	_	_	
42-11	5160-5163	not	_	_	_	_	
42-12	5164-5166	to	_	_	_	_	
42-13	5167-5171	make	_	_	_	_	
42-14	5172-5175	any	_	_	_	_	
42-15	5176-5187	assumptions	_	_	_	_	
42-16	5188-5193	about	_	_	_	_	
42-17	5194-5197	how	_	_	_	_	
42-18	5198-5201	the	_	_	_	_	
42-19	5202-5211	archiving	_	_	_	_	
42-20	5212-5216	will	_	_	_	_	
42-21	5217-5219	be	_	_	_	_	
42-22	5220-5224	done	_	_	_	_	
42-23	5224-5225	.	_	_	_	_	

#Text=Instead, PostgreSQL lets the administrator specify a shell command to be executed to copy a completed segment file to wherever it needs to go.
43-1	5226-5233	Instead	_	_	_	_	
43-2	5233-5234	,	_	_	_	_	
43-3	5235-5245	PostgreSQL	_	_	_	_	
43-4	5246-5250	lets	_	_	_	_	
43-5	5251-5254	the	_	_	_	_	
43-6	5255-5268	administrator	_	_	_	_	
43-7	5269-5276	specify	_	_	_	_	
43-8	5277-5278	a	_	_	_	_	
43-9	5279-5284	shell	_	_	_	_	
43-10	5285-5292	command	_	_	_	_	
43-11	5293-5295	to	_	_	_	_	
43-12	5296-5298	be	_	_	_	_	
43-13	5299-5307	executed	_	_	_	_	
43-14	5308-5310	to	_	_	_	_	
43-15	5311-5315	copy	_	_	_	_	
43-16	5316-5317	a	_	_	_	_	
43-17	5318-5327	completed	_	_	_	_	
43-18	5328-5335	segment	_	_	_	_	
43-19	5336-5340	file	_	_	_	_	
43-20	5341-5343	to	_	_	_	_	
43-21	5344-5352	wherever	_	_	_	_	
43-22	5353-5355	it	_	_	_	_	
43-23	5356-5361	needs	_	_	_	_	
43-24	5362-5364	to	_	_	_	_	
43-25	5365-5367	go	_	_	_	_	
43-26	5367-5368	.	_	_	_	_	

#Text=The command could be as simple as a cp, or it could invoke a complex shell script — it's all up to you.
44-1	5369-5372	The	_	_	_	_	
44-2	5373-5380	command	_	_	_	_	
44-3	5381-5386	could	_	_	_	_	
44-4	5387-5389	be	_	_	_	_	
44-5	5390-5392	as	_	_	_	_	
44-6	5393-5399	simple	_	_	_	_	
44-7	5400-5402	as	_	_	_	_	
44-8	5403-5404	a	_	_	_	_	
44-9	5405-5407	cp	_	_	_	_	
44-10	5407-5408	,	_	_	_	_	
44-11	5409-5411	or	_	_	_	_	
44-12	5412-5414	it	_	_	_	_	
44-13	5415-5420	could	_	_	_	_	
44-14	5421-5427	invoke	_	_	_	_	
44-15	5428-5429	a	_	_	_	_	
44-16	5430-5437	complex	_	_	_	_	
44-17	5438-5443	shell	_	_	_	_	
44-18	5444-5450	script	_	_	_	_	
44-19	5451-5452	—	_	_	_	_	
44-20	5453-5457	it's	_	_	_	_	
44-21	5458-5461	all	_	_	_	_	
44-22	5462-5464	up	_	_	_	_	
44-23	5465-5467	to	_	_	_	_	
44-24	5468-5471	you	_	_	_	_	
44-25	5471-5472	.	_	_	_	_	

#Text=To enable WAL archiving, set the wal_level configuration parameter to replica or higher, archive_mode to on, and specify the shell command to use in the archive_command configuration parameter.
45-1	5473-5475	To	_	_	_	_	
45-2	5476-5482	enable	_	_	_	_	
45-3	5483-5486	WAL	_	_	_	_	
45-4	5487-5496	archiving	_	_	_	_	
45-5	5496-5497	,	_	_	_	_	
45-6	5498-5501	set	_	_	_	_	
45-7	5502-5505	the	_	_	_	_	
45-8	5506-5515	wal_level	_	_	_	_	
45-9	5516-5529	configuration	_	_	_	_	
45-10	5530-5539	parameter	_	_	_	_	
45-11	5540-5542	to	_	_	_	_	
45-12	5543-5550	replica	_	_	_	_	
45-13	5551-5553	or	_	_	_	_	
45-14	5554-5560	higher	_	_	_	_	
45-15	5560-5561	,	_	_	_	_	
45-16	5562-5574	archive_mode	_	_	_	_	
45-17	5575-5577	to	_	_	_	_	
45-18	5578-5580	on	_	_	_	_	
45-19	5580-5581	,	_	_	_	_	
45-20	5582-5585	and	_	_	_	_	
45-21	5586-5593	specify	_	_	_	_	
45-22	5594-5597	the	_	_	_	_	
45-23	5598-5603	shell	_	_	_	_	
45-24	5604-5611	command	_	_	_	_	
45-25	5612-5614	to	_	_	_	_	
45-26	5615-5618	use	_	_	_	_	
45-27	5619-5621	in	_	_	_	_	
45-28	5622-5625	the	_	_	_	_	
45-29	5626-5641	archive_command	_	_	_	_	
45-30	5642-5655	configuration	_	_	_	_	
45-31	5656-5665	parameter	_	_	_	_	
45-32	5665-5666	.	_	_	_	_	

#Text=In practice these settings will always be placed in the postgresql.conf file.
46-1	5667-5669	In	_	_	_	_	
46-2	5670-5678	practice	_	_	_	_	
46-3	5679-5684	these	_	_	_	_	
46-4	5685-5693	settings	_	_	_	_	
46-5	5694-5698	will	_	_	_	_	
46-6	5699-5705	always	_	_	_	_	
46-7	5706-5708	be	_	_	_	_	
46-8	5709-5715	placed	_	_	_	_	
46-9	5716-5718	in	_	_	_	_	
46-10	5719-5722	the	_	_	_	_	
46-11	5723-5738	postgresql.conf	_	_	_	_	
46-12	5739-5743	file	_	_	_	_	
46-13	5743-5744	.	_	_	_	_	

#Text=In archive_command, %p is replaced by the path name of the file to archive, while %f is replaced by only the file name.
47-1	5745-5747	In	_	_	_	_	
47-2	5748-5763	archive_command	_	_	_	_	
47-3	5763-5764	,	_	_	_	_	
47-4	5765-5766	%	_	_	_	_	
47-5	5766-5767	p	_	_	_	_	
47-6	5768-5770	is	_	_	_	_	
47-7	5771-5779	replaced	_	_	_	_	
47-8	5780-5782	by	_	_	_	_	
47-9	5783-5786	the	_	_	_	_	
47-10	5787-5791	path	_	_	_	_	
47-11	5792-5796	name	_	_	_	_	
47-12	5797-5799	of	_	_	_	_	
47-13	5800-5803	the	_	_	_	_	
47-14	5804-5808	file	_	_	_	_	
47-15	5809-5811	to	_	_	_	_	
47-16	5812-5819	archive	_	_	_	_	
47-17	5819-5820	,	_	_	_	_	
47-18	5821-5826	while	_	_	_	_	
47-19	5827-5828	%	_	_	_	_	
47-20	5828-5829	f	_	_	_	_	
47-21	5830-5832	is	_	_	_	_	
47-22	5833-5841	replaced	_	_	_	_	
47-23	5842-5844	by	_	_	_	_	
47-24	5845-5849	only	_	_	_	_	
47-25	5850-5853	the	_	_	_	_	
47-26	5854-5858	file	_	_	_	_	
47-27	5859-5863	name	_	_	_	_	
47-28	5863-5864	.	_	_	_	_	

#Text=(The path name is relative to the current working directory, i.e., the cluster's data directory.)
48-1	5865-5866	(	_	_	_	_	
48-2	5866-5869	The	_	_	_	_	
48-3	5870-5874	path	_	_	_	_	
48-4	5875-5879	name	_	_	_	_	
48-5	5880-5882	is	_	_	_	_	
48-6	5883-5891	relative	_	_	_	_	
48-7	5892-5894	to	_	_	_	_	
48-8	5895-5898	the	_	_	_	_	
48-9	5899-5906	current	_	_	_	_	
48-10	5907-5914	working	_	_	_	_	
48-11	5915-5924	directory	_	_	_	_	
48-12	5924-5925	,	_	_	_	_	
48-13	5926-5929	i.e	_	_	_	_	
48-14	5929-5930	.	_	_	_	_	
48-15	5930-5931	,	_	_	_	_	
48-16	5932-5935	the	_	_	_	_	
48-17	5936-5945	cluster's	_	_	_	_	
48-18	5946-5950	data	_	_	_	_	
48-19	5951-5960	directory	_	_	_	_	
48-20	5960-5961	.	_	_	_	_	
48-21	5961-5962	)	_	_	_	_	

#Text=Use %% if you need to embed an actual % character in the command.
49-1	5963-5966	Use	_	_	_	_	
49-2	5967-5968	%	_	_	_	_	
49-3	5968-5969	%	_	_	_	_	
49-4	5970-5972	if	_	_	_	_	
49-5	5973-5976	you	_	_	_	_	
49-6	5977-5981	need	_	_	_	_	
49-7	5982-5984	to	_	_	_	_	
49-8	5985-5990	embed	_	_	_	_	
49-9	5991-5993	an	_	_	_	_	
49-10	5994-6000	actual	_	_	_	_	
49-11	6001-6002	%	_	_	_	_	
49-12	6003-6012	character	_	_	_	_	
49-13	6013-6015	in	_	_	_	_	
49-14	6016-6019	the	_	_	_	_	
49-15	6020-6027	command	_	_	_	_	
49-16	6027-6028	.	_	_	_	_	

#Text=The simplest useful command is something like:
#Text=archive_command = 'test !
50-1	6029-6032	The	_	_	_	_	
50-2	6033-6041	simplest	_	_	_	_	
50-3	6042-6048	useful	_	_	_	_	
50-4	6049-6056	command	_	_	_	_	
50-5	6057-6059	is	_	_	_	_	
50-6	6060-6069	something	_	_	_	_	
50-7	6070-6074	like	_	_	_	_	
50-8	6074-6075	:	_	_	_	_	
50-9	6076-6091	archive_command	_	_	_	_	
50-10	6092-6093	=	_	_	_	_	
50-11	6094-6095	'	_	_	_	_	
50-12	6095-6099	test	_	_	_	_	
50-13	6100-6101	!	_	_	_	_	

#Text=-f /mnt/server/archivedir/%f && cp %p /mnt/server/archivedir/%f'
#Text=# Unix
#Text=archive_command = 'copy "%p" "C:\\\\server\\\\archivedir\\\\%f"'
#Text=# Windows
#Text=which will copy archivable WAL segments to the directory /mnt/server/archivedir.
51-1	6102-6103	-	_	_	_	_	
51-2	6103-6104	f	_	_	_	_	
51-3	6105-6106	/	_	_	_	_	
51-4	6106-6109	mnt	_	_	_	_	
51-5	6109-6110	/	_	_	_	_	
51-6	6110-6116	server	_	_	_	_	
51-7	6116-6117	/	_	_	_	_	
51-8	6117-6127	archivedir	_	_	_	_	
51-9	6127-6128	/	_	_	_	_	
51-10	6128-6129	%	_	_	_	_	
51-11	6129-6130	f	_	_	_	_	
51-12	6131-6132	&	_	_	_	_	
51-13	6132-6133	&	_	_	_	_	
51-14	6134-6136	cp	_	_	_	_	
51-15	6137-6138	%	_	_	_	_	
51-16	6138-6139	p	_	_	_	_	
51-17	6140-6141	/	_	_	_	_	
51-18	6141-6144	mnt	_	_	_	_	
51-19	6144-6145	/	_	_	_	_	
51-20	6145-6151	server	_	_	_	_	
51-21	6151-6152	/	_	_	_	_	
51-22	6152-6162	archivedir	_	_	_	_	
51-23	6162-6163	/	_	_	_	_	
51-24	6163-6164	%	_	_	_	_	
51-25	6164-6165	f	_	_	_	_	
51-26	6165-6166	'	_	_	_	_	
51-27	6167-6168	#	_	_	_	_	
51-28	6169-6173	Unix	_	_	_	_	
51-29	6174-6189	archive_command	_	_	_	_	
51-30	6190-6191	=	_	_	_	_	
51-31	6192-6193	'	_	_	_	_	
51-32	6193-6197	copy	_	_	_	_	
51-33	6198-6199	"	_	_	_	_	
51-34	6199-6200	%	_	_	_	_	
51-35	6200-6201	p	_	_	_	_	
51-36	6201-6202	"	_	_	_	_	
51-37	6203-6204	"	_	_	_	_	
51-38	6204-6205	C	_	_	_	_	
51-39	6205-6206	:	_	_	_	_	
51-40	6206-6207	\	_	_	_	_	
51-41	6207-6208	\	_	_	_	_	
51-42	6208-6214	server	_	_	_	_	
51-43	6214-6215	\	_	_	_	_	
51-44	6215-6216	\	_	_	_	_	
51-45	6216-6226	archivedir	_	_	_	_	
51-46	6226-6227	\	_	_	_	_	
51-47	6227-6228	\	_	_	_	_	
51-48	6228-6229	%	_	_	_	_	
51-49	6229-6230	f	_	_	_	_	
51-50	6230-6231	"	_	_	_	_	
51-51	6231-6232	'	_	_	_	_	
51-52	6233-6234	#	_	_	_	_	
51-53	6235-6242	Windows	_	_	_	_	
51-54	6243-6248	which	_	_	_	_	
51-55	6249-6253	will	_	_	_	_	
51-56	6254-6258	copy	_	_	_	_	
51-57	6259-6269	archivable	_	_	_	_	
51-58	6270-6273	WAL	_	_	_	_	
51-59	6274-6282	segments	_	_	_	_	
51-60	6283-6285	to	_	_	_	_	
51-61	6286-6289	the	_	_	_	_	
51-62	6290-6299	directory	_	_	_	_	
51-63	6300-6301	/	_	_	_	_	
51-64	6301-6304	mnt	_	_	_	_	
51-65	6304-6305	/	_	_	_	_	
51-66	6305-6311	server	_	_	_	_	
51-67	6311-6312	/	_	_	_	_	
51-68	6312-6322	archivedir	_	_	_	_	
51-69	6322-6323	.	_	_	_	_	

#Text=(This is an example, not a recommendation, and might not work on all platforms.)
52-1	6324-6325	(	_	_	_	_	
52-2	6325-6329	This	_	_	_	_	
52-3	6330-6332	is	_	_	_	_	
52-4	6333-6335	an	_	_	_	_	
52-5	6336-6343	example	_	_	_	_	
52-6	6343-6344	,	_	_	_	_	
52-7	6345-6348	not	_	_	_	_	
52-8	6349-6350	a	_	_	_	_	
52-9	6351-6365	recommendation	_	_	_	_	
52-10	6365-6366	,	_	_	_	_	
52-11	6367-6370	and	_	_	_	_	
52-12	6371-6376	might	_	_	_	_	
52-13	6377-6380	not	_	_	_	_	
52-14	6381-6385	work	_	_	_	_	
52-15	6386-6388	on	_	_	_	_	
52-16	6389-6392	all	_	_	_	_	
52-17	6393-6402	platforms	_	_	_	_	
52-18	6402-6403	.	_	_	_	_	
52-19	6403-6404	)	_	_	_	_	

#Text=After the %p and %f parameters have been replaced, the actual command executed might look like this:
#Text=test !
53-1	6405-6410	After	_	_	_	_	
53-2	6411-6414	the	_	_	_	_	
53-3	6415-6416	%	_	_	_	_	
53-4	6416-6417	p	_	_	_	_	
53-5	6418-6421	and	_	_	_	_	
53-6	6422-6423	%	_	_	_	_	
53-7	6423-6424	f	_	_	_	_	
53-8	6425-6435	parameters	_	_	_	_	
53-9	6436-6440	have	_	_	_	_	
53-10	6441-6445	been	_	_	_	_	
53-11	6446-6454	replaced	_	_	_	_	
53-12	6454-6455	,	_	_	_	_	
53-13	6456-6459	the	_	_	_	_	
53-14	6460-6466	actual	_	_	_	_	
53-15	6467-6474	command	_	_	_	_	
53-16	6475-6483	executed	_	_	_	_	
53-17	6484-6489	might	_	_	_	_	
53-18	6490-6494	look	_	_	_	_	
53-19	6495-6499	like	_	_	_	_	
53-20	6500-6504	this	_	_	_	_	
53-21	6504-6505	:	_	_	_	_	
53-22	6506-6510	test	_	_	_	_	
53-23	6511-6512	!	_	_	_	_	

#Text=-f /mnt/server/archivedir/00000001000000A900000065 && cp pg_wal/00000001000000A900000065 /mnt/server/archivedir/00000001000000A900000065
#Text=A similar command will be generated for each new file to be archived.
54-1	6513-6514	-	_	_	_	_	
54-2	6514-6515	f	_	_	_	_	
54-3	6516-6517	/	_	_	_	_	
54-4	6517-6520	mnt	_	_	_	_	
54-5	6520-6521	/	_	_	_	_	
54-6	6521-6527	server	_	_	_	_	
54-7	6527-6528	/	_	_	_	_	
54-8	6528-6538	archivedir	_	_	_	_	
54-9	6538-6539	/	_	_	_	_	
54-10	6539-6563	00000001000000A900000065	_	_	_	_	
54-11	6564-6565	&	_	_	_	_	
54-12	6565-6566	&	_	_	_	_	
54-13	6567-6569	cp	_	_	_	_	
54-14	6570-6576	pg_wal	_	_	_	_	
54-15	6576-6577	/	_	_	_	_	
54-16	6577-6601	00000001000000A900000065	_	_	_	_	
54-17	6602-6603	/	_	_	_	_	
54-18	6603-6606	mnt	_	_	_	_	
54-19	6606-6607	/	_	_	_	_	
54-20	6607-6613	server	_	_	_	_	
54-21	6613-6614	/	_	_	_	_	
54-22	6614-6624	archivedir	_	_	_	_	
54-23	6624-6625	/	_	_	_	_	
54-24	6625-6649	00000001000000A900000065	_	_	_	_	
54-25	6650-6651	A	_	_	_	_	
54-26	6652-6659	similar	_	_	_	_	
54-27	6660-6667	command	_	_	_	_	
54-28	6668-6672	will	_	_	_	_	
54-29	6673-6675	be	_	_	_	_	
54-30	6676-6685	generated	_	_	_	_	
54-31	6686-6689	for	_	_	_	_	
54-32	6690-6694	each	_	_	_	_	
54-33	6695-6698	new	_	_	_	_	
54-34	6699-6703	file	_	_	_	_	
54-35	6704-6706	to	_	_	_	_	
54-36	6707-6709	be	_	_	_	_	
54-37	6710-6718	archived	_	_	_	_	
54-38	6718-6719	.	_	_	_	_	

#Text=The archive command will be executed under the ownership of the same user that the PostgreSQL server is running as.
55-1	6720-6723	The	_	_	_	_	
55-2	6724-6731	archive	_	_	_	_	
55-3	6732-6739	command	_	_	_	_	
55-4	6740-6744	will	_	_	_	_	
55-5	6745-6747	be	_	_	_	_	
55-6	6748-6756	executed	_	_	_	_	
55-7	6757-6762	under	_	_	_	_	
55-8	6763-6766	the	_	_	_	_	
55-9	6767-6776	ownership	_	_	_	_	
55-10	6777-6779	of	_	_	_	_	
55-11	6780-6783	the	_	_	_	_	
55-12	6784-6788	same	_	_	_	_	
55-13	6789-6793	user	_	_	_	_	
55-14	6794-6798	that	_	_	_	_	
55-15	6799-6802	the	_	_	_	_	
55-16	6803-6813	PostgreSQL	_	_	_	_	
55-17	6814-6820	server	_	_	_	_	
55-18	6821-6823	is	_	_	_	_	
55-19	6824-6831	running	_	_	_	_	
55-20	6832-6834	as	_	_	_	_	
55-21	6834-6835	.	_	_	_	_	

#Text=Since the series of WAL files being archived contains effectively everything in your database, you will want to be sure that the archived data is protected from prying eyes; for example, archive into a directory that does not have group or world read access.
56-1	6836-6841	Since	_	_	_	_	
56-2	6842-6845	the	_	_	_	_	
56-3	6846-6852	series	_	_	_	_	
56-4	6853-6855	of	_	_	_	_	
56-5	6856-6859	WAL	_	_	_	_	
56-6	6860-6865	files	_	_	_	_	
56-7	6866-6871	being	_	_	_	_	
56-8	6872-6880	archived	_	_	_	_	
56-9	6881-6889	contains	_	_	_	_	
56-10	6890-6901	effectively	_	_	_	_	
56-11	6902-6912	everything	_	_	_	_	
56-12	6913-6915	in	_	_	_	_	
56-13	6916-6920	your	_	_	_	_	
56-14	6921-6929	database	_	_	_	_	
56-15	6929-6930	,	_	_	_	_	
56-16	6931-6934	you	_	_	_	_	
56-17	6935-6939	will	_	_	_	_	
56-18	6940-6944	want	_	_	_	_	
56-19	6945-6947	to	_	_	_	_	
56-20	6948-6950	be	_	_	_	_	
56-21	6951-6955	sure	_	_	_	_	
56-22	6956-6960	that	_	_	_	_	
56-23	6961-6964	the	_	_	_	_	
56-24	6965-6973	archived	_	_	_	_	
56-25	6974-6978	data	_	_	_	_	
56-26	6979-6981	is	_	_	_	_	
56-27	6982-6991	protected	_	_	_	_	
56-28	6992-6996	from	_	_	_	_	
56-29	6997-7003	prying	_	_	_	_	
56-30	7004-7008	eyes	_	_	_	_	
56-31	7008-7009	;	_	_	_	_	
56-32	7010-7013	for	_	_	_	_	
56-33	7014-7021	example	_	_	_	_	
56-34	7021-7022	,	_	_	_	_	
56-35	7023-7030	archive	_	_	_	_	
56-36	7031-7035	into	_	_	_	_	
56-37	7036-7037	a	_	_	_	_	
56-38	7038-7047	directory	_	_	_	_	
56-39	7048-7052	that	_	_	_	_	
56-40	7053-7057	does	_	_	_	_	
56-41	7058-7061	not	_	_	_	_	
56-42	7062-7066	have	_	_	_	_	
56-43	7067-7072	group	_	_	_	_	
56-44	7073-7075	or	_	_	_	_	
56-45	7076-7081	world	_	_	_	_	
56-46	7082-7086	read	_	_	_	_	
56-47	7087-7093	access	_	_	_	_	
56-48	7093-7094	.	_	_	_	_	

#Text=It is important that the archive command return zero exit status if and only if it succeeds.
57-1	7095-7097	It	_	_	_	_	
57-2	7098-7100	is	_	_	_	_	
57-3	7101-7110	important	_	_	_	_	
57-4	7111-7115	that	_	_	_	_	
57-5	7116-7119	the	_	_	_	_	
57-6	7120-7127	archive	_	_	_	_	
57-7	7128-7135	command	_	_	_	_	
57-8	7136-7142	return	_	_	_	_	
57-9	7143-7147	zero	_	_	_	_	
57-10	7148-7152	exit	_	_	_	_	
57-11	7153-7159	status	_	_	_	_	
57-12	7160-7162	if	_	_	_	_	
57-13	7163-7166	and	_	_	_	_	
57-14	7167-7171	only	_	_	_	_	
57-15	7172-7174	if	_	_	_	_	
57-16	7175-7177	it	_	_	_	_	
57-17	7178-7186	succeeds	_	_	_	_	
57-18	7186-7187	.	_	_	_	_	

#Text=Upon getting a zero result, PostgreSQL will assume that the file has been successfully archived, and will remove or recycle it.
58-1	7188-7192	Upon	_	_	_	_	
58-2	7193-7200	getting	_	_	_	_	
58-3	7201-7202	a	_	_	_	_	
58-4	7203-7207	zero	_	_	_	_	
58-5	7208-7214	result	_	_	_	_	
58-6	7214-7215	,	_	_	_	_	
58-7	7216-7226	PostgreSQL	_	_	_	_	
58-8	7227-7231	will	_	_	_	_	
58-9	7232-7238	assume	_	_	_	_	
58-10	7239-7243	that	_	_	_	_	
58-11	7244-7247	the	_	_	_	_	
58-12	7248-7252	file	_	_	_	_	
58-13	7253-7256	has	_	_	_	_	
58-14	7257-7261	been	_	_	_	_	
58-15	7262-7274	successfully	_	_	_	_	
58-16	7275-7283	archived	_	_	_	_	
58-17	7283-7284	,	_	_	_	_	
58-18	7285-7288	and	_	_	_	_	
58-19	7289-7293	will	_	_	_	_	
58-20	7294-7300	remove	_	_	_	_	
58-21	7301-7303	or	_	_	_	_	
58-22	7304-7311	recycle	_	_	_	_	
58-23	7312-7314	it	_	_	_	_	
58-24	7314-7315	.	_	_	_	_	

#Text=However, a nonzero status tells PostgreSQL that the file was not archived; it will try again periodically until it succeeds.
59-1	7316-7323	However	_	_	_	_	
59-2	7323-7324	,	_	_	_	_	
59-3	7325-7326	a	_	_	_	_	
59-4	7327-7334	nonzero	_	_	_	_	
59-5	7335-7341	status	_	_	_	_	
59-6	7342-7347	tells	_	_	_	_	
59-7	7348-7358	PostgreSQL	_	_	_	_	
59-8	7359-7363	that	_	_	_	_	
59-9	7364-7367	the	_	_	_	_	
59-10	7368-7372	file	_	_	_	_	
59-11	7373-7376	was	_	_	_	_	
59-12	7377-7380	not	_	_	_	_	
59-13	7381-7389	archived	_	_	_	_	
59-14	7389-7390	;	_	_	_	_	
59-15	7391-7393	it	_	_	_	_	
59-16	7394-7398	will	_	_	_	_	
59-17	7399-7402	try	_	_	_	_	
59-18	7403-7408	again	_	_	_	_	
59-19	7409-7421	periodically	_	_	_	_	
59-20	7422-7427	until	_	_	_	_	
59-21	7428-7430	it	_	_	_	_	
59-22	7431-7439	succeeds	_	_	_	_	
59-23	7439-7440	.	_	_	_	_	

#Text=The archive command should generally be designed to refuse to overwrite any pre-existing archive file.
60-1	7441-7444	The	_	_	_	_	
60-2	7445-7452	archive	_	_	_	_	
60-3	7453-7460	command	_	_	_	_	
60-4	7461-7467	should	_	_	_	_	
60-5	7468-7477	generally	_	_	_	_	
60-6	7478-7480	be	_	_	_	_	
60-7	7481-7489	designed	_	_	_	_	
60-8	7490-7492	to	_	_	_	_	
60-9	7493-7499	refuse	_	_	_	_	
60-10	7500-7502	to	_	_	_	_	
60-11	7503-7512	overwrite	_	_	_	_	
60-12	7513-7516	any	_	_	_	_	
60-13	7517-7529	pre-existing	_	_	_	_	
60-14	7530-7537	archive	_	_	_	_	
60-15	7538-7542	file	_	_	_	_	
60-16	7542-7543	.	_	_	_	_	

#Text=This is an important safety feature to preserve the integrity of your archive in case of administrator error (such as sending the output of two different servers to the same archive directory).
61-1	7544-7548	This	_	_	_	_	
61-2	7549-7551	is	_	_	_	_	
61-3	7552-7554	an	_	_	_	_	
61-4	7555-7564	important	_	_	_	_	
61-5	7565-7571	safety	_	_	_	_	
61-6	7572-7579	feature	_	_	_	_	
61-7	7580-7582	to	_	_	_	_	
61-8	7583-7591	preserve	_	_	_	_	
61-9	7592-7595	the	_	_	_	_	
61-10	7596-7605	integrity	_	_	_	_	
61-11	7606-7608	of	_	_	_	_	
61-12	7609-7613	your	_	_	_	_	
61-13	7614-7621	archive	_	_	_	_	
61-14	7622-7624	in	_	_	_	_	
61-15	7625-7629	case	_	_	_	_	
61-16	7630-7632	of	_	_	_	_	
61-17	7633-7646	administrator	_	_	_	_	
61-18	7647-7652	error	_	_	_	_	
61-19	7653-7654	(	_	_	_	_	
61-20	7654-7658	such	_	_	_	_	
61-21	7659-7661	as	_	_	_	_	
61-22	7662-7669	sending	_	_	_	_	
61-23	7670-7673	the	_	_	_	_	
61-24	7674-7680	output	_	_	_	_	
61-25	7681-7683	of	_	_	_	_	
61-26	7684-7687	two	_	_	_	_	
61-27	7688-7697	different	_	_	_	_	
61-28	7698-7705	servers	_	_	_	_	
61-29	7706-7708	to	_	_	_	_	
61-30	7709-7712	the	_	_	_	_	
61-31	7713-7717	same	_	_	_	_	
61-32	7718-7725	archive	_	_	_	_	
61-33	7726-7735	directory	_	_	_	_	
61-34	7735-7736	)	_	_	_	_	
61-35	7736-7737	.	_	_	_	_	

#Text=It is advisable to test your proposed archive command to ensure that it indeed does not overwrite an existing file, and that it returns nonzero status in this case.
62-1	7738-7740	It	_	_	_	_	
62-2	7741-7743	is	_	_	_	_	
62-3	7744-7753	advisable	_	_	_	_	
62-4	7754-7756	to	_	_	_	_	
62-5	7757-7761	test	_	_	_	_	
62-6	7762-7766	your	_	_	_	_	
62-7	7767-7775	proposed	_	_	_	_	
62-8	7776-7783	archive	_	_	_	_	
62-9	7784-7791	command	_	_	_	_	
62-10	7792-7794	to	_	_	_	_	
62-11	7795-7801	ensure	_	_	_	_	
62-12	7802-7806	that	_	_	_	_	
62-13	7807-7809	it	_	_	_	_	
62-14	7810-7816	indeed	_	_	_	_	
62-15	7817-7821	does	_	_	_	_	
62-16	7822-7825	not	_	_	_	_	
62-17	7826-7835	overwrite	_	_	_	_	
62-18	7836-7838	an	_	_	_	_	
62-19	7839-7847	existing	_	_	_	_	
62-20	7848-7852	file	_	_	_	_	
62-21	7852-7853	,	_	_	_	_	
62-22	7854-7857	and	_	_	_	_	
62-23	7858-7862	that	_	_	_	_	
62-24	7863-7865	it	_	_	_	_	
62-25	7866-7873	returns	_	_	_	_	
62-26	7874-7881	nonzero	_	_	_	_	
62-27	7882-7888	status	_	_	_	_	
62-28	7889-7891	in	_	_	_	_	
62-29	7892-7896	this	_	_	_	_	
62-30	7897-7901	case	_	_	_	_	
62-31	7901-7902	.	_	_	_	_	

#Text=The example command above for Unix ensures this by including a separate test step.
63-1	7903-7906	The	_	_	_	_	
63-2	7907-7914	example	_	_	_	_	
63-3	7915-7922	command	_	_	_	_	
63-4	7923-7928	above	_	_	_	_	
63-5	7929-7932	for	_	_	_	_	
63-6	7933-7937	Unix	_	_	_	_	
63-7	7938-7945	ensures	_	_	_	_	
63-8	7946-7950	this	_	_	_	_	
63-9	7951-7953	by	_	_	_	_	
63-10	7954-7963	including	_	_	_	_	
63-11	7964-7965	a	_	_	_	_	
63-12	7966-7974	separate	_	_	_	_	
63-13	7975-7979	test	_	_	_	_	
63-14	7980-7984	step	_	_	_	_	
63-15	7984-7985	.	_	_	_	_	

#Text=On some Unix platforms, cp has switches such as -i that can be used to do the same thing less verbosely, but you should not rely on these without verifying that the right exit status is returned.
64-1	7986-7988	On	_	_	_	_	
64-2	7989-7993	some	_	_	_	_	
64-3	7994-7998	Unix	_	_	_	_	
64-4	7999-8008	platforms	_	_	_	_	
64-5	8008-8009	,	_	_	_	_	
64-6	8010-8012	cp	_	_	_	_	
64-7	8013-8016	has	_	_	_	_	
64-8	8017-8025	switches	_	_	_	_	
64-9	8026-8030	such	_	_	_	_	
64-10	8031-8033	as	_	_	_	_	
64-11	8034-8035	-	_	_	_	_	
64-12	8035-8036	i	_	_	_	_	
64-13	8037-8041	that	_	_	_	_	
64-14	8042-8045	can	_	_	_	_	
64-15	8046-8048	be	_	_	_	_	
64-16	8049-8053	used	_	_	_	_	
64-17	8054-8056	to	_	_	_	_	
64-18	8057-8059	do	_	_	_	_	
64-19	8060-8063	the	_	_	_	_	
64-20	8064-8068	same	_	_	_	_	
64-21	8069-8074	thing	_	_	_	_	
64-22	8075-8079	less	_	_	_	_	
64-23	8080-8089	verbosely	_	_	_	_	
64-24	8089-8090	,	_	_	_	_	
64-25	8091-8094	but	_	_	_	_	
64-26	8095-8098	you	_	_	_	_	
64-27	8099-8105	should	_	_	_	_	
64-28	8106-8109	not	_	_	_	_	
64-29	8110-8114	rely	_	_	_	_	
64-30	8115-8117	on	_	_	_	_	
64-31	8118-8123	these	_	_	_	_	
64-32	8124-8131	without	_	_	_	_	
64-33	8132-8141	verifying	_	_	_	_	
64-34	8142-8146	that	_	_	_	_	
64-35	8147-8150	the	_	_	_	_	
64-36	8151-8156	right	_	_	_	_	
64-37	8157-8161	exit	_	_	_	_	
64-38	8162-8168	status	_	_	_	_	
64-39	8169-8171	is	_	_	_	_	
64-40	8172-8180	returned	_	_	_	_	
64-41	8180-8181	.	_	_	_	_	

#Text=(In particular, GNU cp will return status zero when -i is used and the target file already exists, which is not the desired behavior.)
65-1	8182-8183	(	_	_	_	_	
65-2	8183-8185	In	_	_	_	_	
65-3	8186-8196	particular	_	_	_	_	
65-4	8196-8197	,	_	_	_	_	
65-5	8198-8201	GNU	_	_	_	_	
65-6	8202-8204	cp	_	_	_	_	
65-7	8205-8209	will	_	_	_	_	
65-8	8210-8216	return	_	_	_	_	
65-9	8217-8223	status	_	_	_	_	
65-10	8224-8228	zero	_	_	_	_	
65-11	8229-8233	when	_	_	_	_	
65-12	8234-8235	-	_	_	_	_	
65-13	8235-8236	i	_	_	_	_	
65-14	8237-8239	is	_	_	_	_	
65-15	8240-8244	used	_	_	_	_	
65-16	8245-8248	and	_	_	_	_	
65-17	8249-8252	the	_	_	_	_	
65-18	8253-8259	target	_	_	_	_	
65-19	8260-8264	file	_	_	_	_	
65-20	8265-8272	already	_	_	_	_	
65-21	8273-8279	exists	_	_	_	_	
65-22	8279-8280	,	_	_	_	_	
65-23	8281-8286	which	_	_	_	_	
65-24	8287-8289	is	_	_	_	_	
65-25	8290-8293	not	_	_	_	_	
65-26	8294-8297	the	_	_	_	_	
65-27	8298-8305	desired	_	_	_	_	
65-28	8306-8314	behavior	_	_	_	_	
65-29	8314-8315	.	_	_	_	_	
65-30	8315-8316	)	_	_	_	_	

#Text=While designing your archiving setup, consider what will happen if the archive command fails repeatedly because some aspect requires operator intervention or the archive runs out of space.
66-1	8317-8322	While	_	_	_	_	
66-2	8323-8332	designing	_	_	_	_	
66-3	8333-8337	your	_	_	_	_	
66-4	8338-8347	archiving	_	_	_	_	
66-5	8348-8353	setup	_	_	_	_	
66-6	8353-8354	,	_	_	_	_	
66-7	8355-8363	consider	_	_	_	_	
66-8	8364-8368	what	_	_	_	_	
66-9	8369-8373	will	_	_	_	_	
66-10	8374-8380	happen	_	_	_	_	
66-11	8381-8383	if	_	_	_	_	
66-12	8384-8387	the	_	_	_	_	
66-13	8388-8395	archive	_	_	_	_	
66-14	8396-8403	command	_	_	_	_	
66-15	8404-8409	fails	_	_	_	_	
66-16	8410-8420	repeatedly	_	_	_	_	
66-17	8421-8428	because	_	_	_	_	
66-18	8429-8433	some	_	_	_	_	
66-19	8434-8440	aspect	_	_	_	_	
66-20	8441-8449	requires	_	_	_	_	
66-21	8450-8458	operator	_	_	_	_	
66-22	8459-8471	intervention	_	_	_	_	
66-23	8472-8474	or	_	_	_	_	
66-24	8475-8478	the	_	_	_	_	
66-25	8479-8486	archive	_	_	_	_	
66-26	8487-8491	runs	_	_	_	_	
66-27	8492-8495	out	_	_	_	_	
66-28	8496-8498	of	_	_	_	_	
66-29	8499-8504	space	_	_	_	_	
66-30	8504-8505	.	_	_	_	_	

#Text=For example, this could occur if you write to tape without an autochanger; when the tape fills, nothing further can be archived until the tape is swapped.
67-1	8506-8509	For	_	_	_	_	
67-2	8510-8517	example	_	_	_	_	
67-3	8517-8518	,	_	_	_	_	
67-4	8519-8523	this	_	_	_	_	
67-5	8524-8529	could	_	_	_	_	
67-6	8530-8535	occur	_	_	_	_	
67-7	8536-8538	if	_	_	_	_	
67-8	8539-8542	you	_	_	_	_	
67-9	8543-8548	write	_	_	_	_	
67-10	8549-8551	to	_	_	_	_	
67-11	8552-8556	tape	_	_	_	_	
67-12	8557-8564	without	_	_	_	_	
67-13	8565-8567	an	_	_	_	_	
67-14	8568-8579	autochanger	_	_	_	_	
67-15	8579-8580	;	_	_	_	_	
67-16	8581-8585	when	_	_	_	_	
67-17	8586-8589	the	_	_	_	_	
67-18	8590-8594	tape	_	_	_	_	
67-19	8595-8600	fills	_	_	_	_	
67-20	8600-8601	,	_	_	_	_	
67-21	8602-8609	nothing	_	_	_	_	
67-22	8610-8617	further	_	_	_	_	
67-23	8618-8621	can	_	_	_	_	
67-24	8622-8624	be	_	_	_	_	
67-25	8625-8633	archived	_	_	_	_	
67-26	8634-8639	until	_	_	_	_	
67-27	8640-8643	the	_	_	_	_	
67-28	8644-8648	tape	_	_	_	_	
67-29	8649-8651	is	_	_	_	_	
67-30	8652-8659	swapped	_	_	_	_	
67-31	8659-8660	.	_	_	_	_	

#Text=You should ensure that any error condition or request to a human operator is reported appropriately so that the situation can be resolved reasonably quickly.
68-1	8661-8664	You	_	_	_	_	
68-2	8665-8671	should	_	_	_	_	
68-3	8672-8678	ensure	_	_	_	_	
68-4	8679-8683	that	_	_	_	_	
68-5	8684-8687	any	_	_	_	_	
68-6	8688-8693	error	_	_	_	_	
68-7	8694-8703	condition	_	_	_	_	
68-8	8704-8706	or	_	_	_	_	
68-9	8707-8714	request	_	_	_	_	
68-10	8715-8717	to	_	_	_	_	
68-11	8718-8719	a	_	_	_	_	
68-12	8720-8725	human	_	_	_	_	
68-13	8726-8734	operator	_	_	_	_	
68-14	8735-8737	is	_	_	_	_	
68-15	8738-8746	reported	_	_	_	_	
68-16	8747-8760	appropriately	_	_	_	_	
68-17	8761-8763	so	_	_	_	_	
68-18	8764-8768	that	_	_	_	_	
68-19	8769-8772	the	_	_	_	_	
68-20	8773-8782	situation	_	_	_	_	
68-21	8783-8786	can	_	_	_	_	
68-22	8787-8789	be	_	_	_	_	
68-23	8790-8798	resolved	_	_	_	_	
68-24	8799-8809	reasonably	_	_	_	_	
68-25	8810-8817	quickly	_	_	_	_	
68-26	8817-8818	.	_	_	_	_	

#Text=The pg_wal/ directory will continue to fill with WAL segment files until the situation is resolved.
69-1	8819-8822	The	_	_	_	_	
69-2	8823-8829	pg_wal	_	_	_	_	
69-3	8829-8830	/	_	_	_	_	
69-4	8831-8840	directory	_	_	_	_	
69-5	8841-8845	will	_	_	_	_	
69-6	8846-8854	continue	_	_	_	_	
69-7	8855-8857	to	_	_	_	_	
69-8	8858-8862	fill	_	_	_	_	
69-9	8863-8867	with	_	_	_	_	
69-10	8868-8871	WAL	_	_	_	_	
69-11	8872-8879	segment	_	_	_	_	
69-12	8880-8885	files	_	_	_	_	
69-13	8886-8891	until	_	_	_	_	
69-14	8892-8895	the	_	_	_	_	
69-15	8896-8905	situation	_	_	_	_	
69-16	8906-8908	is	_	_	_	_	
69-17	8909-8917	resolved	_	_	_	_	
69-18	8917-8918	.	_	_	_	_	

#Text=(If the file system containing pg_wal/ fills up, PostgreSQL will do a PANIC shutdown.
70-1	8919-8920	(	_	_	_	_	
70-2	8920-8922	If	_	_	_	_	
70-3	8923-8926	the	_	_	_	_	
70-4	8927-8931	file	_	_	_	_	
70-5	8932-8938	system	_	_	_	_	
70-6	8939-8949	containing	_	_	_	_	
70-7	8950-8956	pg_wal	_	_	_	_	
70-8	8956-8957	/	_	_	_	_	
70-9	8958-8963	fills	_	_	_	_	
70-10	8964-8966	up	_	_	_	_	
70-11	8966-8967	,	_	_	_	_	
70-12	8968-8978	PostgreSQL	_	_	_	_	
70-13	8979-8983	will	_	_	_	_	
70-14	8984-8986	do	_	_	_	_	
70-15	8987-8988	a	_	_	_	_	
70-16	8989-8994	PANIC	_	_	_	_	
70-17	8995-9003	shutdown	_	_	_	_	
70-18	9003-9004	.	_	_	_	_	

#Text=No committed transactions will be lost, but the database will remain offline until you free some space.)
71-1	9005-9007	No	_	_	_	_	
71-2	9008-9017	committed	_	_	_	_	
71-3	9018-9030	transactions	_	_	_	_	
71-4	9031-9035	will	_	_	_	_	
71-5	9036-9038	be	_	_	_	_	
71-6	9039-9043	lost	_	_	_	_	
71-7	9043-9044	,	_	_	_	_	
71-8	9045-9048	but	_	_	_	_	
71-9	9049-9052	the	_	_	_	_	
71-10	9053-9061	database	_	_	_	_	
71-11	9062-9066	will	_	_	_	_	
71-12	9067-9073	remain	_	_	_	_	
71-13	9074-9081	offline	_	_	_	_	
71-14	9082-9087	until	_	_	_	_	
71-15	9088-9091	you	_	_	_	_	
71-16	9092-9096	free	_	_	_	_	
71-17	9097-9101	some	_	_	_	_	
71-18	9102-9107	space	_	_	_	_	
71-19	9107-9108	.	_	_	_	_	
71-20	9108-9109	)	_	_	_	_	

#Text=The speed of the archiving command is unimportant as long as it can keep up with the average rate at which your server generates WAL data.
72-1	9110-9113	The	_	_	_	_	
72-2	9114-9119	speed	_	_	_	_	
72-3	9120-9122	of	_	_	_	_	
72-4	9123-9126	the	_	_	_	_	
72-5	9127-9136	archiving	_	_	_	_	
72-6	9137-9144	command	_	_	_	_	
72-7	9145-9147	is	_	_	_	_	
72-8	9148-9159	unimportant	_	_	_	_	
72-9	9160-9162	as	_	_	_	_	
72-10	9163-9167	long	_	_	_	_	
72-11	9168-9170	as	_	_	_	_	
72-12	9171-9173	it	_	_	_	_	
72-13	9174-9177	can	_	_	_	_	
72-14	9178-9182	keep	_	_	_	_	
72-15	9183-9185	up	_	_	_	_	
72-16	9186-9190	with	_	_	_	_	
72-17	9191-9194	the	_	_	_	_	
72-18	9195-9202	average	_	_	_	_	
72-19	9203-9207	rate	_	_	_	_	
72-20	9208-9210	at	_	_	_	_	
72-21	9211-9216	which	_	_	_	_	
72-22	9217-9221	your	_	_	_	_	
72-23	9222-9228	server	_	_	_	_	
72-24	9229-9238	generates	_	_	_	_	
72-25	9239-9242	WAL	_	_	_	_	
72-26	9243-9247	data	_	_	_	_	
72-27	9247-9248	.	_	_	_	_	

#Text=Normal operation continues even if the archiving process falls a little behind.
73-1	9249-9255	Normal	_	_	_	_	
73-2	9256-9265	operation	_	_	_	_	
73-3	9266-9275	continues	_	_	_	_	
73-4	9276-9280	even	_	_	_	_	
73-5	9281-9283	if	_	_	_	_	
73-6	9284-9287	the	_	_	_	_	
73-7	9288-9297	archiving	_	_	_	_	
73-8	9298-9305	process	_	_	_	_	
73-9	9306-9311	falls	_	_	_	_	
73-10	9312-9313	a	_	_	_	_	
73-11	9314-9320	little	_	_	_	_	
73-12	9321-9327	behind	_	_	_	_	
73-13	9327-9328	.	_	_	_	_	

#Text=If archiving falls significantly behind, this will increase the amount of data that would be lost in the event of a disaster.
74-1	9329-9331	If	_	_	_	_	
74-2	9332-9341	archiving	_	_	_	_	
74-3	9342-9347	falls	_	_	_	_	
74-4	9348-9361	significantly	_	_	_	_	
74-5	9362-9368	behind	_	_	_	_	
74-6	9368-9369	,	_	_	_	_	
74-7	9370-9374	this	_	_	_	_	
74-8	9375-9379	will	_	_	_	_	
74-9	9380-9388	increase	_	_	_	_	
74-10	9389-9392	the	_	_	_	_	
74-11	9393-9399	amount	_	_	_	_	
74-12	9400-9402	of	_	_	_	_	
74-13	9403-9407	data	_	_	_	_	
74-14	9408-9412	that	_	_	_	_	
74-15	9413-9418	would	_	_	_	_	
74-16	9419-9421	be	_	_	_	_	
74-17	9422-9426	lost	_	_	_	_	
74-18	9427-9429	in	_	_	_	_	
74-19	9430-9433	the	_	_	_	_	
74-20	9434-9439	event	_	_	_	_	
74-21	9440-9442	of	_	_	_	_	
74-22	9443-9444	a	_	_	_	_	
74-23	9445-9453	disaster	_	_	_	_	
74-24	9453-9454	.	_	_	_	_	

#Text=It will also mean that the pg_wal/ directory will contain large numbers of not-yet-archived segment files, which could eventually exceed available disk space.
75-1	9455-9457	It	_	_	_	_	
75-2	9458-9462	will	_	_	_	_	
75-3	9463-9467	also	_	_	_	_	
75-4	9468-9472	mean	_	_	_	_	
75-5	9473-9477	that	_	_	_	_	
75-6	9478-9481	the	_	_	_	_	
75-7	9482-9488	pg_wal	_	_	_	_	
75-8	9488-9489	/	_	_	_	_	
75-9	9490-9499	directory	_	_	_	_	
75-10	9500-9504	will	_	_	_	_	
75-11	9505-9512	contain	_	_	_	_	
75-12	9513-9518	large	_	_	_	_	
75-13	9519-9526	numbers	_	_	_	_	
75-14	9527-9529	of	_	_	_	_	
75-15	9530-9546	not-yet-archived	_	_	_	_	
75-16	9547-9554	segment	_	_	_	_	
75-17	9555-9560	files	_	_	_	_	
75-18	9560-9561	,	_	_	_	_	
75-19	9562-9567	which	_	_	_	_	
75-20	9568-9573	could	_	_	_	_	
75-21	9574-9584	eventually	_	_	_	_	
75-22	9585-9591	exceed	_	_	_	_	
75-23	9592-9601	available	_	_	_	_	
75-24	9602-9606	disk	_	_	_	_	
75-25	9607-9612	space	_	_	_	_	
75-26	9612-9613	.	_	_	_	_	

#Text=You are advised to monitor the archiving process to ensure that it is working as you intend.
76-1	9614-9617	You	_	_	_	_	
76-2	9618-9621	are	_	_	_	_	
76-3	9622-9629	advised	_	_	_	_	
76-4	9630-9632	to	_	_	_	_	
76-5	9633-9640	monitor	_	_	_	_	
76-6	9641-9644	the	_	_	_	_	
76-7	9645-9654	archiving	_	_	_	_	
76-8	9655-9662	process	_	_	_	_	
76-9	9663-9665	to	_	_	_	_	
76-10	9666-9672	ensure	_	_	_	_	
76-11	9673-9677	that	_	_	_	_	
76-12	9678-9680	it	_	_	_	_	
76-13	9681-9683	is	_	_	_	_	
76-14	9684-9691	working	_	_	_	_	
76-15	9692-9694	as	_	_	_	_	
76-16	9695-9698	you	_	_	_	_	
76-17	9699-9705	intend	_	_	_	_	
76-18	9705-9706	.	_	_	_	_	

#Text=In writing your archive command, you should assume that the file names to be archived can be up to 64 characters long and can contain any combination of ASCII letters, digits, and dots.
77-1	9707-9709	In	_	_	_	_	
77-2	9710-9717	writing	_	_	_	_	
77-3	9718-9722	your	_	_	_	_	
77-4	9723-9730	archive	_	_	_	_	
77-5	9731-9738	command	_	_	_	_	
77-6	9738-9739	,	_	_	_	_	
77-7	9740-9743	you	_	_	_	_	
77-8	9744-9750	should	_	_	_	_	
77-9	9751-9757	assume	_	_	_	_	
77-10	9758-9762	that	_	_	_	_	
77-11	9763-9766	the	_	_	_	_	
77-12	9767-9771	file	_	_	_	_	
77-13	9772-9777	names	_	_	_	_	
77-14	9778-9780	to	_	_	_	_	
77-15	9781-9783	be	_	_	_	_	
77-16	9784-9792	archived	_	_	_	_	
77-17	9793-9796	can	_	_	_	_	
77-18	9797-9799	be	_	_	_	_	
77-19	9800-9802	up	_	_	_	_	
77-20	9803-9805	to	_	_	_	_	
77-21	9806-9808	64	_	_	_	_	
77-22	9809-9819	characters	_	_	_	_	
77-23	9820-9824	long	_	_	_	_	
77-24	9825-9828	and	_	_	_	_	
77-25	9829-9832	can	_	_	_	_	
77-26	9833-9840	contain	_	_	_	_	
77-27	9841-9844	any	_	_	_	_	
77-28	9845-9856	combination	_	_	_	_	
77-29	9857-9859	of	_	_	_	_	
77-30	9860-9865	ASCII	_	_	_	_	
77-31	9866-9873	letters	_	_	_	_	
77-32	9873-9874	,	_	_	_	_	
77-33	9875-9881	digits	_	_	_	_	
77-34	9881-9882	,	_	_	_	_	
77-35	9883-9886	and	_	_	_	_	
77-36	9887-9891	dots	_	_	_	_	
77-37	9891-9892	.	_	_	_	_	

#Text=It is not necessary to preserve the original relative path (%p) but it is necessary to preserve the file name (%f).
78-1	9893-9895	It	_	_	_	_	
78-2	9896-9898	is	_	_	_	_	
78-3	9899-9902	not	_	_	_	_	
78-4	9903-9912	necessary	_	_	_	_	
78-5	9913-9915	to	_	_	_	_	
78-6	9916-9924	preserve	_	_	_	_	
78-7	9925-9928	the	_	_	_	_	
78-8	9929-9937	original	_	_	_	_	
78-9	9938-9946	relative	_	_	_	_	
78-10	9947-9951	path	_	_	_	_	
78-11	9952-9953	(	_	_	_	_	
78-12	9953-9954	%	_	_	_	_	
78-13	9954-9955	p	_	_	_	_	
78-14	9955-9956	)	_	_	_	_	
78-15	9957-9960	but	_	_	_	_	
78-16	9961-9963	it	_	_	_	_	
78-17	9964-9966	is	_	_	_	_	
78-18	9967-9976	necessary	_	_	_	_	
78-19	9977-9979	to	_	_	_	_	
78-20	9980-9988	preserve	_	_	_	_	
78-21	9989-9992	the	_	_	_	_	
78-22	9993-9997	file	_	_	_	_	
78-23	9998-10002	name	_	_	_	_	
78-24	10003-10004	(	_	_	_	_	
78-25	10004-10005	%	_	_	_	_	
78-26	10005-10006	f	_	_	_	_	
78-27	10006-10007	)	_	_	_	_	
78-28	10007-10008	.	_	_	_	_	

#Text=Note that although WAL archiving will allow you to restore any modifications made to the data in your PostgreSQL database, it will not restore changes made to configuration files (that is, postgresql.conf, pg_hba.conf and pg_ident.conf), since those are edited manually rather than through SQL operations.
79-1	10009-10013	Note	_	_	_	_	
79-2	10014-10018	that	_	_	_	_	
79-3	10019-10027	although	_	_	_	_	
79-4	10028-10031	WAL	_	_	_	_	
79-5	10032-10041	archiving	_	_	_	_	
79-6	10042-10046	will	_	_	_	_	
79-7	10047-10052	allow	_	_	_	_	
79-8	10053-10056	you	_	_	_	_	
79-9	10057-10059	to	_	_	_	_	
79-10	10060-10067	restore	_	_	_	_	
79-11	10068-10071	any	_	_	_	_	
79-12	10072-10085	modifications	_	_	_	_	
79-13	10086-10090	made	_	_	_	_	
79-14	10091-10093	to	_	_	_	_	
79-15	10094-10097	the	_	_	_	_	
79-16	10098-10102	data	_	_	_	_	
79-17	10103-10105	in	_	_	_	_	
79-18	10106-10110	your	_	_	_	_	
79-19	10111-10121	PostgreSQL	_	_	_	_	
79-20	10122-10130	database	_	_	_	_	
79-21	10130-10131	,	_	_	_	_	
79-22	10132-10134	it	_	_	_	_	
79-23	10135-10139	will	_	_	_	_	
79-24	10140-10143	not	_	_	_	_	
79-25	10144-10151	restore	_	_	_	_	
79-26	10152-10159	changes	_	_	_	_	
79-27	10160-10164	made	_	_	_	_	
79-28	10165-10167	to	_	_	_	_	
79-29	10168-10181	configuration	_	_	_	_	
79-30	10182-10187	files	_	_	_	_	
79-31	10188-10189	(	_	_	_	_	
79-32	10189-10193	that	_	_	_	_	
79-33	10194-10196	is	_	_	_	_	
79-34	10196-10197	,	_	_	_	_	
79-35	10198-10213	postgresql.conf	_	_	_	_	
79-36	10213-10214	,	_	_	_	_	
79-37	10215-10226	pg_hba.conf	_	_	_	_	
79-38	10227-10230	and	_	_	_	_	
79-39	10231-10244	pg_ident.conf	_	_	_	_	
79-40	10244-10245	)	_	_	_	_	
79-41	10245-10246	,	_	_	_	_	
79-42	10247-10252	since	_	_	_	_	
79-43	10253-10258	those	_	_	_	_	
79-44	10259-10262	are	_	_	_	_	
79-45	10263-10269	edited	_	_	_	_	
79-46	10270-10278	manually	_	_	_	_	
79-47	10279-10285	rather	_	_	_	_	
79-48	10286-10290	than	_	_	_	_	
79-49	10291-10298	through	_	_	_	_	
79-50	10299-10302	SQL	_	_	_	_	
79-51	10303-10313	operations	_	_	_	_	
79-52	10313-10314	.	_	_	_	_	

#Text=You might wish to keep the configuration files in a location that will be backed up by your regular file system backup procedures.
80-1	10315-10318	You	_	_	_	_	
80-2	10319-10324	might	_	_	_	_	
80-3	10325-10329	wish	_	_	_	_	
80-4	10330-10332	to	_	_	_	_	
80-5	10333-10337	keep	_	_	_	_	
80-6	10338-10341	the	_	_	_	_	
80-7	10342-10355	configuration	_	_	_	_	
80-8	10356-10361	files	_	_	_	_	
80-9	10362-10364	in	_	_	_	_	
80-10	10365-10366	a	_	_	_	_	
80-11	10367-10375	location	_	_	_	_	
80-12	10376-10380	that	_	_	_	_	
80-13	10381-10385	will	_	_	_	_	
80-14	10386-10388	be	_	_	_	_	
80-15	10389-10395	backed	_	_	_	_	
80-16	10396-10398	up	_	_	_	_	
80-17	10399-10401	by	_	_	_	_	
80-18	10402-10406	your	_	_	_	_	
80-19	10407-10414	regular	_	_	_	_	
80-20	10415-10419	file	_	_	_	_	
80-21	10420-10426	system	_	_	_	_	
80-22	10427-10433	backup	_	_	_	_	
80-23	10434-10444	procedures	_	_	_	_	
80-24	10444-10445	.	_	_	_	_	

#Text=See Section 19.2 for how to relocate the configuration files.
81-1	10446-10449	See	_	_	_	_	
81-2	10450-10457	Section	_	_	_	_	
81-3	10457-10458	 	_	_	_	_	
81-4	10458-10462	19.2	_	_	_	_	
81-5	10463-10466	for	_	_	_	_	
81-6	10467-10470	how	_	_	_	_	
81-7	10471-10473	to	_	_	_	_	
81-8	10474-10482	relocate	_	_	_	_	
81-9	10483-10486	the	_	_	_	_	
81-10	10487-10500	configuration	_	_	_	_	
81-11	10501-10506	files	_	_	_	_	
81-12	10506-10507	.	_	_	_	_	

#Text=The archive command is only invoked on completed WAL segments.
82-1	10508-10511	The	_	_	_	_	
82-2	10512-10519	archive	_	_	_	_	
82-3	10520-10527	command	_	_	_	_	
82-4	10528-10530	is	_	_	_	_	
82-5	10531-10535	only	_	_	_	_	
82-6	10536-10543	invoked	_	_	_	_	
82-7	10544-10546	on	_	_	_	_	
82-8	10547-10556	completed	_	_	_	_	
82-9	10557-10560	WAL	_	_	_	_	
82-10	10561-10569	segments	_	_	_	_	
82-11	10569-10570	.	_	_	_	_	

#Text=Hence, if your server generates only little WAL traffic (or has slack periods where it does so), there could be a long delay between the completion of a transaction and its safe recording in archive storage.
83-1	10571-10576	Hence	_	_	_	_	
83-2	10576-10577	,	_	_	_	_	
83-3	10578-10580	if	_	_	_	_	
83-4	10581-10585	your	_	_	_	_	
83-5	10586-10592	server	_	_	_	_	
83-6	10593-10602	generates	_	_	_	_	
83-7	10603-10607	only	_	_	_	_	
83-8	10608-10614	little	_	_	_	_	
83-9	10615-10618	WAL	_	_	_	_	
83-10	10619-10626	traffic	_	_	_	_	
83-11	10627-10628	(	_	_	_	_	
83-12	10628-10630	or	_	_	_	_	
83-13	10631-10634	has	_	_	_	_	
83-14	10635-10640	slack	_	_	_	_	
83-15	10641-10648	periods	_	_	_	_	
83-16	10649-10654	where	_	_	_	_	
83-17	10655-10657	it	_	_	_	_	
83-18	10658-10662	does	_	_	_	_	
83-19	10663-10665	so	_	_	_	_	
83-20	10665-10666	)	_	_	_	_	
83-21	10666-10667	,	_	_	_	_	
83-22	10668-10673	there	_	_	_	_	
83-23	10674-10679	could	_	_	_	_	
83-24	10680-10682	be	_	_	_	_	
83-25	10683-10684	a	_	_	_	_	
83-26	10685-10689	long	_	_	_	_	
83-27	10690-10695	delay	_	_	_	_	
83-28	10696-10703	between	_	_	_	_	
83-29	10704-10707	the	_	_	_	_	
83-30	10708-10718	completion	_	_	_	_	
83-31	10719-10721	of	_	_	_	_	
83-32	10722-10723	a	_	_	_	_	
83-33	10724-10735	transaction	_	_	_	_	
83-34	10736-10739	and	_	_	_	_	
83-35	10740-10743	its	_	_	_	_	
83-36	10744-10748	safe	_	_	_	_	
83-37	10749-10758	recording	_	_	_	_	
83-38	10759-10761	in	_	_	_	_	
83-39	10762-10769	archive	_	_	_	_	
83-40	10770-10777	storage	_	_	_	_	
83-41	10777-10778	.	_	_	_	_	

#Text=To put a limit on how old unarchived data can be, you can set archive_timeout to force the server to switch to a new WAL segment file at least that often.
84-1	10779-10781	To	_	_	_	_	
84-2	10782-10785	put	_	_	_	_	
84-3	10786-10787	a	_	_	_	_	
84-4	10788-10793	limit	_	_	_	_	
84-5	10794-10796	on	_	_	_	_	
84-6	10797-10800	how	_	_	_	_	
84-7	10801-10804	old	_	_	_	_	
84-8	10805-10815	unarchived	_	_	_	_	
84-9	10816-10820	data	_	_	_	_	
84-10	10821-10824	can	_	_	_	_	
84-11	10825-10827	be	_	_	_	_	
84-12	10827-10828	,	_	_	_	_	
84-13	10829-10832	you	_	_	_	_	
84-14	10833-10836	can	_	_	_	_	
84-15	10837-10840	set	_	_	_	_	
84-16	10841-10856	archive_timeout	_	_	_	_	
84-17	10857-10859	to	_	_	_	_	
84-18	10860-10865	force	_	_	_	_	
84-19	10866-10869	the	_	_	_	_	
84-20	10870-10876	server	_	_	_	_	
84-21	10877-10879	to	_	_	_	_	
84-22	10880-10886	switch	_	_	_	_	
84-23	10887-10889	to	_	_	_	_	
84-24	10890-10891	a	_	_	_	_	
84-25	10892-10895	new	_	_	_	_	
84-26	10896-10899	WAL	_	_	_	_	
84-27	10900-10907	segment	_	_	_	_	
84-28	10908-10912	file	_	_	_	_	
84-29	10913-10915	at	_	_	_	_	
84-30	10916-10921	least	_	_	_	_	
84-31	10922-10926	that	_	_	_	_	
84-32	10927-10932	often	_	_	_	_	
84-33	10932-10933	.	_	_	_	_	

#Text=Note that archived files that are archived early due to a forced switch are still the same length as completely full files.
85-1	10934-10938	Note	_	_	_	_	
85-2	10939-10943	that	_	_	_	_	
85-3	10944-10952	archived	_	_	_	_	
85-4	10953-10958	files	_	_	_	_	
85-5	10959-10963	that	_	_	_	_	
85-6	10964-10967	are	_	_	_	_	
85-7	10968-10976	archived	_	_	_	_	
85-8	10977-10982	early	_	_	_	_	
85-9	10983-10986	due	_	_	_	_	
85-10	10987-10989	to	_	_	_	_	
85-11	10990-10991	a	_	_	_	_	
85-12	10992-10998	forced	_	_	_	_	
85-13	10999-11005	switch	_	_	_	_	
85-14	11006-11009	are	_	_	_	_	
85-15	11010-11015	still	_	_	_	_	
85-16	11016-11019	the	_	_	_	_	
85-17	11020-11024	same	_	_	_	_	
85-18	11025-11031	length	_	_	_	_	
85-19	11032-11034	as	_	_	_	_	
85-20	11035-11045	completely	_	_	_	_	
85-21	11046-11050	full	_	_	_	_	
85-22	11051-11056	files	_	_	_	_	
85-23	11056-11057	.	_	_	_	_	

#Text=It is therefore unwise to set a very short archive_timeout — it will bloat your archive storage. archive_timeout settings of a minute or so are usually reasonable.
86-1	11058-11060	It	_	_	_	_	
86-2	11061-11063	is	_	_	_	_	
86-3	11064-11073	therefore	_	_	_	_	
86-4	11074-11080	unwise	_	_	_	_	
86-5	11081-11083	to	_	_	_	_	
86-6	11084-11087	set	_	_	_	_	
86-7	11088-11089	a	_	_	_	_	
86-8	11090-11094	very	_	_	_	_	
86-9	11095-11100	short	_	_	_	_	
86-10	11101-11116	archive_timeout	_	_	_	_	
86-11	11117-11118	—	_	_	_	_	
86-12	11119-11121	it	_	_	_	_	
86-13	11122-11126	will	_	_	_	_	
86-14	11127-11132	bloat	_	_	_	_	
86-15	11133-11137	your	_	_	_	_	
86-16	11138-11145	archive	_	_	_	_	
86-17	11146-11153	storage	_	_	_	_	
86-18	11153-11154	.	_	_	_	_	
86-19	11155-11170	archive_timeout	*	parameter	_	_	
86-20	11171-11179	settings	_	_	_	_	
86-21	11180-11182	of	_	_	_	_	
86-22	11183-11184	a	*[1]	value[1]	Associated-With	86-19[0_1]	
86-23	11185-11191	minute	*[1]	value[1]	_	_	
86-24	11192-11194	or	_	_	_	_	
86-25	11195-11197	so	_	_	_	_	
86-26	11198-11201	are	_	_	_	_	
86-27	11202-11209	usually	_	_	_	_	
86-28	11210-11220	reasonable	_	_	_	_	
86-29	11220-11221	.	_	_	_	_	

#Text=Also, you can force a segment switch manually with pg_switch_wal if you want to ensure that a just-finished transaction is archived as soon as possible.
87-1	11222-11226	Also	_	_	_	_	
87-2	11226-11227	,	_	_	_	_	
87-3	11228-11231	you	_	_	_	_	
87-4	11232-11235	can	_	_	_	_	
87-5	11236-11241	force	_	_	_	_	
87-6	11242-11243	a	_	_	_	_	
87-7	11244-11251	segment	_	_	_	_	
87-8	11252-11258	switch	_	_	_	_	
87-9	11259-11267	manually	_	_	_	_	
87-10	11268-11272	with	_	_	_	_	
87-11	11273-11286	pg_switch_wal	_	_	_	_	
87-12	11287-11289	if	_	_	_	_	
87-13	11290-11293	you	_	_	_	_	
87-14	11294-11298	want	_	_	_	_	
87-15	11299-11301	to	_	_	_	_	
87-16	11302-11308	ensure	_	_	_	_	
87-17	11309-11313	that	_	_	_	_	
87-18	11314-11315	a	_	_	_	_	
87-19	11316-11329	just-finished	_	_	_	_	
87-20	11330-11341	transaction	_	_	_	_	
87-21	11342-11344	is	_	_	_	_	
87-22	11345-11353	archived	_	_	_	_	
87-23	11354-11356	as	_	_	_	_	
87-24	11357-11361	soon	_	_	_	_	
87-25	11362-11364	as	_	_	_	_	
87-26	11365-11373	possible	_	_	_	_	
87-27	11373-11374	.	_	_	_	_	

#Text=Other utility functions related to WAL management are listed in Table 9.84.
88-1	11375-11380	Other	_	_	_	_	
88-2	11381-11388	utility	_	_	_	_	
88-3	11389-11398	functions	_	_	_	_	
88-4	11399-11406	related	_	_	_	_	
88-5	11407-11409	to	_	_	_	_	
88-6	11410-11413	WAL	_	_	_	_	
88-7	11414-11424	management	_	_	_	_	
88-8	11425-11428	are	_	_	_	_	
88-9	11429-11435	listed	_	_	_	_	
88-10	11436-11438	in	_	_	_	_	
88-11	11439-11444	Table	_	_	_	_	
88-12	11444-11445	 	_	_	_	_	
88-13	11445-11449	9.84	_	_	_	_	
88-14	11449-11450	.	_	_	_	_	

#Text=When wal_level is minimal some SQL commands are optimized to avoid WAL logging, as described in Section 14.4.7.
89-1	11451-11455	When	_	_	_	_	
89-2	11456-11465	wal_level	_	_	_	_	
89-3	11466-11468	is	_	_	_	_	
89-4	11469-11476	minimal	_	_	_	_	
89-5	11477-11481	some	_	_	_	_	
89-6	11482-11485	SQL	_	_	_	_	
89-7	11486-11494	commands	_	_	_	_	
89-8	11495-11498	are	_	_	_	_	
89-9	11499-11508	optimized	_	_	_	_	
89-10	11509-11511	to	_	_	_	_	
89-11	11512-11517	avoid	_	_	_	_	
89-12	11518-11521	WAL	_	_	_	_	
89-13	11522-11529	logging	_	_	_	_	
89-14	11529-11530	,	_	_	_	_	
89-15	11531-11533	as	_	_	_	_	
89-16	11534-11543	described	_	_	_	_	
89-17	11544-11546	in	_	_	_	_	
89-18	11547-11554	Section	_	_	_	_	
89-19	11554-11555	 	_	_	_	_	
89-20	11555-11561	14.4.7	_	_	_	_	
89-21	11561-11562	.	_	_	_	_	

#Text=If archiving or streaming replication were turned on during execution of one of these statements, WAL would not contain enough information for archive recovery.
90-1	11563-11565	If	_	_	_	_	
90-2	11566-11575	archiving	_	_	_	_	
90-3	11576-11578	or	_	_	_	_	
90-4	11579-11588	streaming	_	_	_	_	
90-5	11589-11600	replication	_	_	_	_	
90-6	11601-11605	were	_	_	_	_	
90-7	11606-11612	turned	_	_	_	_	
90-8	11613-11615	on	_	_	_	_	
90-9	11616-11622	during	_	_	_	_	
90-10	11623-11632	execution	_	_	_	_	
90-11	11633-11635	of	_	_	_	_	
90-12	11636-11639	one	_	_	_	_	
90-13	11640-11642	of	_	_	_	_	
90-14	11643-11648	these	_	_	_	_	
90-15	11649-11659	statements	_	_	_	_	
90-16	11659-11660	,	_	_	_	_	
90-17	11661-11664	WAL	_	_	_	_	
90-18	11665-11670	would	_	_	_	_	
90-19	11671-11674	not	_	_	_	_	
90-20	11675-11682	contain	_	_	_	_	
90-21	11683-11689	enough	_	_	_	_	
90-22	11690-11701	information	_	_	_	_	
90-23	11702-11705	for	_	_	_	_	
90-24	11706-11713	archive	_	_	_	_	
90-25	11714-11722	recovery	_	_	_	_	
90-26	11722-11723	.	_	_	_	_	

#Text=(Crash recovery is unaffected.)
91-1	11724-11725	(	_	_	_	_	
91-2	11725-11730	Crash	_	_	_	_	
91-3	11731-11739	recovery	_	_	_	_	
91-4	11740-11742	is	_	_	_	_	
91-5	11743-11753	unaffected	_	_	_	_	
91-6	11753-11754	.	_	_	_	_	
91-7	11754-11755	)	_	_	_	_	

#Text=For this reason, wal_level can only be changed at server start.
92-1	11756-11759	For	_	_	_	_	
92-2	11760-11764	this	_	_	_	_	
92-3	11765-11771	reason	_	_	_	_	
92-4	11771-11772	,	_	_	_	_	
92-5	11773-11782	wal_level	_	_	_	_	
92-6	11783-11786	can	_	_	_	_	
92-7	11787-11791	only	_	_	_	_	
92-8	11792-11794	be	_	_	_	_	
92-9	11795-11802	changed	_	_	_	_	
92-10	11803-11805	at	_	_	_	_	
92-11	11806-11812	server	_	_	_	_	
92-12	11813-11818	start	_	_	_	_	
92-13	11818-11819	.	_	_	_	_	

#Text=However, archive_command can be changed with a configuration file reload.
93-1	11820-11827	However	_	_	_	_	
93-2	11827-11828	,	_	_	_	_	
93-3	11829-11844	archive_command	_	_	_	_	
93-4	11845-11848	can	_	_	_	_	
93-5	11849-11851	be	_	_	_	_	
93-6	11852-11859	changed	_	_	_	_	
93-7	11860-11864	with	_	_	_	_	
93-8	11865-11866	a	_	_	_	_	
93-9	11867-11880	configuration	_	_	_	_	
93-10	11881-11885	file	_	_	_	_	
93-11	11886-11892	reload	_	_	_	_	
93-12	11892-11893	.	_	_	_	_	

#Text=If you wish to temporarily stop archiving, one way to do it is to set archive_command to the empty string ('').
94-1	11894-11896	If	_	_	_	_	
94-2	11897-11900	you	_	_	_	_	
94-3	11901-11905	wish	_	_	_	_	
94-4	11906-11908	to	_	_	_	_	
94-5	11909-11920	temporarily	_	_	_	_	
94-6	11921-11925	stop	_	_	_	_	
94-7	11926-11935	archiving	_	_	_	_	
94-8	11935-11936	,	_	_	_	_	
94-9	11937-11940	one	_	_	_	_	
94-10	11941-11944	way	_	_	_	_	
94-11	11945-11947	to	_	_	_	_	
94-12	11948-11950	do	_	_	_	_	
94-13	11951-11953	it	_	_	_	_	
94-14	11954-11956	is	_	_	_	_	
94-15	11957-11959	to	_	_	_	_	
94-16	11960-11963	set	_	_	_	_	
94-17	11964-11979	archive_command	_	_	_	_	
94-18	11980-11982	to	_	_	_	_	
94-19	11983-11986	the	_	_	_	_	
94-20	11987-11992	empty	_	_	_	_	
94-21	11993-11999	string	_	_	_	_	
94-22	12000-12001	(	_	_	_	_	
94-23	12001-12002	'	_	_	_	_	
94-24	12002-12003	'	_	_	_	_	
94-25	12003-12004	)	_	_	_	_	
94-26	12004-12005	.	_	_	_	_	

#Text=This will cause WAL files to accumulate in pg_wal/ until a working archive_command is re-established.
#Text=25.3.2. 
95-1	12006-12010	This	_	_	_	_	
95-2	12011-12015	will	_	_	_	_	
95-3	12016-12021	cause	_	_	_	_	
95-4	12022-12025	WAL	_	_	_	_	
95-5	12026-12031	files	_	_	_	_	
95-6	12032-12034	to	_	_	_	_	
95-7	12035-12045	accumulate	_	_	_	_	
95-8	12046-12048	in	_	_	_	_	
95-9	12049-12055	pg_wal	_	_	_	_	
95-10	12055-12056	/	_	_	_	_	
95-11	12057-12062	until	_	_	_	_	
95-12	12063-12064	a	_	_	_	_	
95-13	12065-12072	working	_	_	_	_	
95-14	12073-12088	archive_command	_	_	_	_	
95-15	12089-12091	is	_	_	_	_	
95-16	12092-12106	re-established	_	_	_	_	
95-17	12106-12107	.	_	_	_	_	
95-18	12108-12114	25.3.2	_	_	_	_	
95-19	12114-12115	.	_	_	_	_	
95-20	12115-12116	 	_	_	_	_	

#Text=Making a Base Backup
#Text=The easiest way to perform a base backup is to use the pg_basebackup tool.
96-1	12116-12122	Making	_	_	_	_	
96-2	12123-12124	a	_	_	_	_	
96-3	12125-12129	Base	_	_	_	_	
96-4	12130-12136	Backup	_	_	_	_	
96-5	12137-12140	The	_	_	_	_	
96-6	12141-12148	easiest	_	_	_	_	
96-7	12149-12152	way	_	_	_	_	
96-8	12153-12155	to	_	_	_	_	
96-9	12156-12163	perform	_	_	_	_	
96-10	12164-12165	a	_	_	_	_	
96-11	12166-12170	base	_	_	_	_	
96-12	12171-12177	backup	_	_	_	_	
96-13	12178-12180	is	_	_	_	_	
96-14	12181-12183	to	_	_	_	_	
96-15	12184-12187	use	_	_	_	_	
96-16	12188-12191	the	_	_	_	_	
96-17	12192-12205	pg_basebackup	_	_	_	_	
96-18	12206-12210	tool	_	_	_	_	
96-19	12210-12211	.	_	_	_	_	

#Text=It can create a base backup either as regular files or as a tar archive.
97-1	12212-12214	It	_	_	_	_	
97-2	12215-12218	can	_	_	_	_	
97-3	12219-12225	create	_	_	_	_	
97-4	12226-12227	a	_	_	_	_	
97-5	12228-12232	base	_	_	_	_	
97-6	12233-12239	backup	_	_	_	_	
97-7	12240-12246	either	_	_	_	_	
97-8	12247-12249	as	_	_	_	_	
97-9	12250-12257	regular	_	_	_	_	
97-10	12258-12263	files	_	_	_	_	
97-11	12264-12266	or	_	_	_	_	
97-12	12267-12269	as	_	_	_	_	
97-13	12270-12271	a	_	_	_	_	
97-14	12272-12275	tar	_	_	_	_	
97-15	12276-12283	archive	_	_	_	_	
97-16	12283-12284	.	_	_	_	_	

#Text=If more flexibility than pg_basebackup can provide is required, you can also make a base backup using the low level API (see Section 25.3.3).
98-1	12285-12287	If	_	_	_	_	
98-2	12288-12292	more	_	_	_	_	
98-3	12293-12304	flexibility	_	_	_	_	
98-4	12305-12309	than	_	_	_	_	
98-5	12310-12323	pg_basebackup	_	_	_	_	
98-6	12324-12327	can	_	_	_	_	
98-7	12328-12335	provide	_	_	_	_	
98-8	12336-12338	is	_	_	_	_	
98-9	12339-12347	required	_	_	_	_	
98-10	12347-12348	,	_	_	_	_	
98-11	12349-12352	you	_	_	_	_	
98-12	12353-12356	can	_	_	_	_	
98-13	12357-12361	also	_	_	_	_	
98-14	12362-12366	make	_	_	_	_	
98-15	12367-12368	a	_	_	_	_	
98-16	12369-12373	base	_	_	_	_	
98-17	12374-12380	backup	_	_	_	_	
98-18	12381-12386	using	_	_	_	_	
98-19	12387-12390	the	_	_	_	_	
98-20	12391-12394	low	_	_	_	_	
98-21	12395-12400	level	_	_	_	_	
98-22	12401-12404	API	_	_	_	_	
98-23	12405-12406	(	_	_	_	_	
98-24	12406-12409	see	_	_	_	_	
98-25	12410-12417	Section	_	_	_	_	
98-26	12417-12418	 	_	_	_	_	
98-27	12418-12424	25.3.3	_	_	_	_	
98-28	12424-12425	)	_	_	_	_	
98-29	12425-12426	.	_	_	_	_	

#Text=It is not necessary to be concerned about the amount of time it takes to make a base backup.
99-1	12427-12429	It	_	_	_	_	
99-2	12430-12432	is	_	_	_	_	
99-3	12433-12436	not	_	_	_	_	
99-4	12437-12446	necessary	_	_	_	_	
99-5	12447-12449	to	_	_	_	_	
99-6	12450-12452	be	_	_	_	_	
99-7	12453-12462	concerned	_	_	_	_	
99-8	12463-12468	about	_	_	_	_	
99-9	12469-12472	the	_	_	_	_	
99-10	12473-12479	amount	_	_	_	_	
99-11	12480-12482	of	_	_	_	_	
99-12	12483-12487	time	_	_	_	_	
99-13	12488-12490	it	_	_	_	_	
99-14	12491-12496	takes	_	_	_	_	
99-15	12497-12499	to	_	_	_	_	
99-16	12500-12504	make	_	_	_	_	
99-17	12505-12506	a	_	_	_	_	
99-18	12507-12511	base	_	_	_	_	
99-19	12512-12518	backup	_	_	_	_	
99-20	12518-12519	.	_	_	_	_	

#Text=However, if you normally run the server with full_page_writes disabled, you might notice a drop in performance while the backup runs since full_page_writes is effectively forced on during backup mode.
100-1	12520-12527	However	_	_	_	_	
100-2	12527-12528	,	_	_	_	_	
100-3	12529-12531	if	_	_	_	_	
100-4	12532-12535	you	_	_	_	_	
100-5	12536-12544	normally	_	_	_	_	
100-6	12545-12548	run	_	_	_	_	
100-7	12549-12552	the	_	_	_	_	
100-8	12553-12559	server	_	_	_	_	
100-9	12560-12564	with	_	_	_	_	
100-10	12565-12581	full_page_writes	_	_	_	_	
100-11	12582-12590	disabled	_	_	_	_	
100-12	12590-12591	,	_	_	_	_	
100-13	12592-12595	you	_	_	_	_	
100-14	12596-12601	might	_	_	_	_	
100-15	12602-12608	notice	_	_	_	_	
100-16	12609-12610	a	_	_	_	_	
100-17	12611-12615	drop	_	_	_	_	
100-18	12616-12618	in	_	_	_	_	
100-19	12619-12630	performance	_	_	_	_	
100-20	12631-12636	while	_	_	_	_	
100-21	12637-12640	the	_	_	_	_	
100-22	12641-12647	backup	_	_	_	_	
100-23	12648-12652	runs	_	_	_	_	
100-24	12653-12658	since	_	_	_	_	
100-25	12659-12675	full_page_writes	_	_	_	_	
100-26	12676-12678	is	_	_	_	_	
100-27	12679-12690	effectively	_	_	_	_	
100-28	12691-12697	forced	_	_	_	_	
100-29	12698-12700	on	_	_	_	_	
100-30	12701-12707	during	_	_	_	_	
100-31	12708-12714	backup	_	_	_	_	
100-32	12715-12719	mode	_	_	_	_	
100-33	12719-12720	.	_	_	_	_	

#Text=To make use of the backup, you will need to keep all the WAL segment files generated during and after the file system backup.
101-1	12721-12723	To	_	_	_	_	
101-2	12724-12728	make	_	_	_	_	
101-3	12729-12732	use	_	_	_	_	
101-4	12733-12735	of	_	_	_	_	
101-5	12736-12739	the	_	_	_	_	
101-6	12740-12746	backup	_	_	_	_	
101-7	12746-12747	,	_	_	_	_	
101-8	12748-12751	you	_	_	_	_	
101-9	12752-12756	will	_	_	_	_	
101-10	12757-12761	need	_	_	_	_	
101-11	12762-12764	to	_	_	_	_	
101-12	12765-12769	keep	_	_	_	_	
101-13	12770-12773	all	_	_	_	_	
101-14	12774-12777	the	_	_	_	_	
101-15	12778-12781	WAL	_	_	_	_	
101-16	12782-12789	segment	_	_	_	_	
101-17	12790-12795	files	_	_	_	_	
101-18	12796-12805	generated	_	_	_	_	
101-19	12806-12812	during	_	_	_	_	
101-20	12813-12816	and	_	_	_	_	
101-21	12817-12822	after	_	_	_	_	
101-22	12823-12826	the	_	_	_	_	
101-23	12827-12831	file	_	_	_	_	
101-24	12832-12838	system	_	_	_	_	
101-25	12839-12845	backup	_	_	_	_	
101-26	12845-12846	.	_	_	_	_	

#Text=To aid you in doing this, the base backup process creates a backup history file that is immediately stored into the WAL archive area.
102-1	12847-12849	To	_	_	_	_	
102-2	12850-12853	aid	_	_	_	_	
102-3	12854-12857	you	_	_	_	_	
102-4	12858-12860	in	_	_	_	_	
102-5	12861-12866	doing	_	_	_	_	
102-6	12867-12871	this	_	_	_	_	
102-7	12871-12872	,	_	_	_	_	
102-8	12873-12876	the	_	_	_	_	
102-9	12877-12881	base	_	_	_	_	
102-10	12882-12888	backup	_	_	_	_	
102-11	12889-12896	process	_	_	_	_	
102-12	12897-12904	creates	_	_	_	_	
102-13	12905-12906	a	_	_	_	_	
102-14	12907-12913	backup	_	_	_	_	
102-15	12914-12921	history	_	_	_	_	
102-16	12922-12926	file	_	_	_	_	
102-17	12927-12931	that	_	_	_	_	
102-18	12932-12934	is	_	_	_	_	
102-19	12935-12946	immediately	_	_	_	_	
102-20	12947-12953	stored	_	_	_	_	
102-21	12954-12958	into	_	_	_	_	
102-22	12959-12962	the	_	_	_	_	
102-23	12963-12966	WAL	_	_	_	_	
102-24	12967-12974	archive	_	_	_	_	
102-25	12975-12979	area	_	_	_	_	
102-26	12979-12980	.	_	_	_	_	

#Text=This file is named after the first WAL segment file that you need for the file system backup.
103-1	12981-12985	This	_	_	_	_	
103-2	12986-12990	file	_	_	_	_	
103-3	12991-12993	is	_	_	_	_	
103-4	12994-12999	named	_	_	_	_	
103-5	13000-13005	after	_	_	_	_	
103-6	13006-13009	the	_	_	_	_	
103-7	13010-13015	first	_	_	_	_	
103-8	13016-13019	WAL	_	_	_	_	
103-9	13020-13027	segment	_	_	_	_	
103-10	13028-13032	file	_	_	_	_	
103-11	13033-13037	that	_	_	_	_	
103-12	13038-13041	you	_	_	_	_	
103-13	13042-13046	need	_	_	_	_	
103-14	13047-13050	for	_	_	_	_	
103-15	13051-13054	the	_	_	_	_	
103-16	13055-13059	file	_	_	_	_	
103-17	13060-13066	system	_	_	_	_	
103-18	13067-13073	backup	_	_	_	_	
103-19	13073-13074	.	_	_	_	_	

#Text=For example, if the starting WAL file is 0000000100001234000055CD the backup history file will be named something like 0000000100001234000055CD.007C9330.backup.
104-1	13075-13078	For	_	_	_	_	
104-2	13079-13086	example	_	_	_	_	
104-3	13086-13087	,	_	_	_	_	
104-4	13088-13090	if	_	_	_	_	
104-5	13091-13094	the	_	_	_	_	
104-6	13095-13103	starting	_	_	_	_	
104-7	13104-13107	WAL	_	_	_	_	
104-8	13108-13112	file	_	_	_	_	
104-9	13113-13115	is	_	_	_	_	
104-10	13116-13140	0000000100001234000055CD	_	_	_	_	
104-11	13141-13144	the	_	_	_	_	
104-12	13145-13151	backup	_	_	_	_	
104-13	13152-13159	history	_	_	_	_	
104-14	13160-13164	file	_	_	_	_	
104-15	13165-13169	will	_	_	_	_	
104-16	13170-13172	be	_	_	_	_	
104-17	13173-13178	named	_	_	_	_	
104-18	13179-13188	something	_	_	_	_	
104-19	13189-13193	like	_	_	_	_	
104-20	13194-13218	0000000100001234000055CD	_	_	_	_	
104-21	13218-13227	.007C9330	_	_	_	_	
104-22	13227-13228	.	_	_	_	_	
104-23	13228-13234	backup	_	_	_	_	
104-24	13234-13235	.	_	_	_	_	

#Text=(The second part of the file name stands for an exact position within the WAL file, and can ordinarily be ignored.)
105-1	13236-13237	(	_	_	_	_	
105-2	13237-13240	The	_	_	_	_	
105-3	13241-13247	second	_	_	_	_	
105-4	13248-13252	part	_	_	_	_	
105-5	13253-13255	of	_	_	_	_	
105-6	13256-13259	the	_	_	_	_	
105-7	13260-13264	file	_	_	_	_	
105-8	13265-13269	name	_	_	_	_	
105-9	13270-13276	stands	_	_	_	_	
105-10	13277-13280	for	_	_	_	_	
105-11	13281-13283	an	_	_	_	_	
105-12	13284-13289	exact	_	_	_	_	
105-13	13290-13298	position	_	_	_	_	
105-14	13299-13305	within	_	_	_	_	
105-15	13306-13309	the	_	_	_	_	
105-16	13310-13313	WAL	_	_	_	_	
105-17	13314-13318	file	_	_	_	_	
105-18	13318-13319	,	_	_	_	_	
105-19	13320-13323	and	_	_	_	_	
105-20	13324-13327	can	_	_	_	_	
105-21	13328-13338	ordinarily	_	_	_	_	
105-22	13339-13341	be	_	_	_	_	
105-23	13342-13349	ignored	_	_	_	_	
105-24	13349-13350	.	_	_	_	_	
105-25	13350-13351	)	_	_	_	_	

#Text=Once you have safely archived the file system backup and the WAL segment files used during the backup (as specified in the backup history file), all archived WAL segments with names numerically less are no longer needed to recover the file system backup and can be deleted.
106-1	13352-13356	Once	_	_	_	_	
106-2	13357-13360	you	_	_	_	_	
106-3	13361-13365	have	_	_	_	_	
106-4	13366-13372	safely	_	_	_	_	
106-5	13373-13381	archived	_	_	_	_	
106-6	13382-13385	the	_	_	_	_	
106-7	13386-13390	file	_	_	_	_	
106-8	13391-13397	system	_	_	_	_	
106-9	13398-13404	backup	_	_	_	_	
106-10	13405-13408	and	_	_	_	_	
106-11	13409-13412	the	_	_	_	_	
106-12	13413-13416	WAL	_	_	_	_	
106-13	13417-13424	segment	_	_	_	_	
106-14	13425-13430	files	_	_	_	_	
106-15	13431-13435	used	_	_	_	_	
106-16	13436-13442	during	_	_	_	_	
106-17	13443-13446	the	_	_	_	_	
106-18	13447-13453	backup	_	_	_	_	
106-19	13454-13455	(	_	_	_	_	
106-20	13455-13457	as	_	_	_	_	
106-21	13458-13467	specified	_	_	_	_	
106-22	13468-13470	in	_	_	_	_	
106-23	13471-13474	the	_	_	_	_	
106-24	13475-13481	backup	_	_	_	_	
106-25	13482-13489	history	_	_	_	_	
106-26	13490-13494	file	_	_	_	_	
106-27	13494-13495	)	_	_	_	_	
106-28	13495-13496	,	_	_	_	_	
106-29	13497-13500	all	_	_	_	_	
106-30	13501-13509	archived	_	_	_	_	
106-31	13510-13513	WAL	_	_	_	_	
106-32	13514-13522	segments	_	_	_	_	
106-33	13523-13527	with	_	_	_	_	
106-34	13528-13533	names	_	_	_	_	
106-35	13534-13545	numerically	_	_	_	_	
106-36	13546-13550	less	_	_	_	_	
106-37	13551-13554	are	_	_	_	_	
106-38	13555-13557	no	_	_	_	_	
106-39	13558-13564	longer	_	_	_	_	
106-40	13565-13571	needed	_	_	_	_	
106-41	13572-13574	to	_	_	_	_	
106-42	13575-13582	recover	_	_	_	_	
106-43	13583-13586	the	_	_	_	_	
106-44	13587-13591	file	_	_	_	_	
106-45	13592-13598	system	_	_	_	_	
106-46	13599-13605	backup	_	_	_	_	
106-47	13606-13609	and	_	_	_	_	
106-48	13610-13613	can	_	_	_	_	
106-49	13614-13616	be	_	_	_	_	
106-50	13617-13624	deleted	_	_	_	_	
106-51	13624-13625	.	_	_	_	_	

#Text=However, you should consider keeping several backup sets to be absolutely certain that you can recover your data.
107-1	13626-13633	However	_	_	_	_	
107-2	13633-13634	,	_	_	_	_	
107-3	13635-13638	you	_	_	_	_	
107-4	13639-13645	should	_	_	_	_	
107-5	13646-13654	consider	_	_	_	_	
107-6	13655-13662	keeping	_	_	_	_	
107-7	13663-13670	several	_	_	_	_	
107-8	13671-13677	backup	_	_	_	_	
107-9	13678-13682	sets	_	_	_	_	
107-10	13683-13685	to	_	_	_	_	
107-11	13686-13688	be	_	_	_	_	
107-12	13689-13699	absolutely	_	_	_	_	
107-13	13700-13707	certain	_	_	_	_	
107-14	13708-13712	that	_	_	_	_	
107-15	13713-13716	you	_	_	_	_	
107-16	13717-13720	can	_	_	_	_	
107-17	13721-13728	recover	_	_	_	_	
107-18	13729-13733	your	_	_	_	_	
107-19	13734-13738	data	_	_	_	_	
107-20	13738-13739	.	_	_	_	_	

#Text=The backup history file is just a small text file.
108-1	13740-13743	The	_	_	_	_	
108-2	13744-13750	backup	_	_	_	_	
108-3	13751-13758	history	_	_	_	_	
108-4	13759-13763	file	_	_	_	_	
108-5	13764-13766	is	_	_	_	_	
108-6	13767-13771	just	_	_	_	_	
108-7	13772-13773	a	_	_	_	_	
108-8	13774-13779	small	_	_	_	_	
108-9	13780-13784	text	_	_	_	_	
108-10	13785-13789	file	_	_	_	_	
108-11	13789-13790	.	_	_	_	_	

#Text=It contains the label string you gave to pg_basebackup, as well as the starting and ending times and WAL segments of the backup.
109-1	13791-13793	It	_	_	_	_	
109-2	13794-13802	contains	_	_	_	_	
109-3	13803-13806	the	_	_	_	_	
109-4	13807-13812	label	_	_	_	_	
109-5	13813-13819	string	_	_	_	_	
109-6	13820-13823	you	_	_	_	_	
109-7	13824-13828	gave	_	_	_	_	
109-8	13829-13831	to	_	_	_	_	
109-9	13832-13845	pg_basebackup	_	_	_	_	
109-10	13845-13846	,	_	_	_	_	
109-11	13847-13849	as	_	_	_	_	
109-12	13850-13854	well	_	_	_	_	
109-13	13855-13857	as	_	_	_	_	
109-14	13858-13861	the	_	_	_	_	
109-15	13862-13870	starting	_	_	_	_	
109-16	13871-13874	and	_	_	_	_	
109-17	13875-13881	ending	_	_	_	_	
109-18	13882-13887	times	_	_	_	_	
109-19	13888-13891	and	_	_	_	_	
109-20	13892-13895	WAL	_	_	_	_	
109-21	13896-13904	segments	_	_	_	_	
109-22	13905-13907	of	_	_	_	_	
109-23	13908-13911	the	_	_	_	_	
109-24	13912-13918	backup	_	_	_	_	
109-25	13918-13919	.	_	_	_	_	

#Text=If you used the label to identify the associated dump file, then the archived history file is enough to tell you which dump file to restore.
110-1	13920-13922	If	_	_	_	_	
110-2	13923-13926	you	_	_	_	_	
110-3	13927-13931	used	_	_	_	_	
110-4	13932-13935	the	_	_	_	_	
110-5	13936-13941	label	_	_	_	_	
110-6	13942-13944	to	_	_	_	_	
110-7	13945-13953	identify	_	_	_	_	
110-8	13954-13957	the	_	_	_	_	
110-9	13958-13968	associated	_	_	_	_	
110-10	13969-13973	dump	_	_	_	_	
110-11	13974-13978	file	_	_	_	_	
110-12	13978-13979	,	_	_	_	_	
110-13	13980-13984	then	_	_	_	_	
110-14	13985-13988	the	_	_	_	_	
110-15	13989-13997	archived	_	_	_	_	
110-16	13998-14005	history	_	_	_	_	
110-17	14006-14010	file	_	_	_	_	
110-18	14011-14013	is	_	_	_	_	
110-19	14014-14020	enough	_	_	_	_	
110-20	14021-14023	to	_	_	_	_	
110-21	14024-14028	tell	_	_	_	_	
110-22	14029-14032	you	_	_	_	_	
110-23	14033-14038	which	_	_	_	_	
110-24	14039-14043	dump	_	_	_	_	
110-25	14044-14048	file	_	_	_	_	
110-26	14049-14051	to	_	_	_	_	
110-27	14052-14059	restore	_	_	_	_	
110-28	14059-14060	.	_	_	_	_	

#Text=Since you have to keep around all the archived WAL files back to your last base backup, the interval between base backups should usually be chosen based on how much storage you want to expend on archived WAL files.
111-1	14061-14066	Since	_	_	_	_	
111-2	14067-14070	you	_	_	_	_	
111-3	14071-14075	have	_	_	_	_	
111-4	14076-14078	to	_	_	_	_	
111-5	14079-14083	keep	_	_	_	_	
111-6	14084-14090	around	_	_	_	_	
111-7	14091-14094	all	_	_	_	_	
111-8	14095-14098	the	_	_	_	_	
111-9	14099-14107	archived	_	_	_	_	
111-10	14108-14111	WAL	_	_	_	_	
111-11	14112-14117	files	_	_	_	_	
111-12	14118-14122	back	_	_	_	_	
111-13	14123-14125	to	_	_	_	_	
111-14	14126-14130	your	_	_	_	_	
111-15	14131-14135	last	_	_	_	_	
111-16	14136-14140	base	_	_	_	_	
111-17	14141-14147	backup	_	_	_	_	
111-18	14147-14148	,	_	_	_	_	
111-19	14149-14152	the	_	_	_	_	
111-20	14153-14161	interval	_	_	_	_	
111-21	14162-14169	between	_	_	_	_	
111-22	14170-14174	base	_	_	_	_	
111-23	14175-14182	backups	_	_	_	_	
111-24	14183-14189	should	_	_	_	_	
111-25	14190-14197	usually	_	_	_	_	
111-26	14198-14200	be	_	_	_	_	
111-27	14201-14207	chosen	_	_	_	_	
111-28	14208-14213	based	_	_	_	_	
111-29	14214-14216	on	_	_	_	_	
111-30	14217-14220	how	_	_	_	_	
111-31	14221-14225	much	_	_	_	_	
111-32	14226-14233	storage	_	_	_	_	
111-33	14234-14237	you	_	_	_	_	
111-34	14238-14242	want	_	_	_	_	
111-35	14243-14245	to	_	_	_	_	
111-36	14246-14252	expend	_	_	_	_	
111-37	14253-14255	on	_	_	_	_	
111-38	14256-14264	archived	_	_	_	_	
111-39	14265-14268	WAL	_	_	_	_	
111-40	14269-14274	files	_	_	_	_	
111-41	14274-14275	.	_	_	_	_	

#Text=You should also consider how long you are prepared to spend recovering, if recovery should be necessary — the system will have to replay all those WAL segments, and that could take awhile if it has been a long time since the last base backup.
#Text=25.3.3. 
112-1	14276-14279	You	_	_	_	_	
112-2	14280-14286	should	_	_	_	_	
112-3	14287-14291	also	_	_	_	_	
112-4	14292-14300	consider	_	_	_	_	
112-5	14301-14304	how	_	_	_	_	
112-6	14305-14309	long	_	_	_	_	
112-7	14310-14313	you	_	_	_	_	
112-8	14314-14317	are	_	_	_	_	
112-9	14318-14326	prepared	_	_	_	_	
112-10	14327-14329	to	_	_	_	_	
112-11	14330-14335	spend	_	_	_	_	
112-12	14336-14346	recovering	_	_	_	_	
112-13	14346-14347	,	_	_	_	_	
112-14	14348-14350	if	_	_	_	_	
112-15	14351-14359	recovery	_	_	_	_	
112-16	14360-14366	should	_	_	_	_	
112-17	14367-14369	be	_	_	_	_	
112-18	14370-14379	necessary	_	_	_	_	
112-19	14380-14381	—	_	_	_	_	
112-20	14382-14385	the	_	_	_	_	
112-21	14386-14392	system	_	_	_	_	
112-22	14393-14397	will	_	_	_	_	
112-23	14398-14402	have	_	_	_	_	
112-24	14403-14405	to	_	_	_	_	
112-25	14406-14412	replay	_	_	_	_	
112-26	14413-14416	all	_	_	_	_	
112-27	14417-14422	those	_	_	_	_	
112-28	14423-14426	WAL	_	_	_	_	
112-29	14427-14435	segments	_	_	_	_	
112-30	14435-14436	,	_	_	_	_	
112-31	14437-14440	and	_	_	_	_	
112-32	14441-14445	that	_	_	_	_	
112-33	14446-14451	could	_	_	_	_	
112-34	14452-14456	take	_	_	_	_	
112-35	14457-14463	awhile	_	_	_	_	
112-36	14464-14466	if	_	_	_	_	
112-37	14467-14469	it	_	_	_	_	
112-38	14470-14473	has	_	_	_	_	
112-39	14474-14478	been	_	_	_	_	
112-40	14479-14480	a	_	_	_	_	
112-41	14481-14485	long	_	_	_	_	
112-42	14486-14490	time	_	_	_	_	
112-43	14491-14496	since	_	_	_	_	
112-44	14497-14500	the	_	_	_	_	
112-45	14501-14505	last	_	_	_	_	
112-46	14506-14510	base	_	_	_	_	
112-47	14511-14517	backup	_	_	_	_	
112-48	14517-14518	.	_	_	_	_	
112-49	14519-14525	25.3.3	_	_	_	_	
112-50	14525-14526	.	_	_	_	_	
112-51	14526-14527	 	_	_	_	_	

#Text=Making a Base Backup Using the Low Level API
#Text=The procedure for making a base backup using the low level APIs contains a few more steps than the pg_basebackup method, but is relatively simple.
113-1	14527-14533	Making	_	_	_	_	
113-2	14534-14535	a	_	_	_	_	
113-3	14536-14540	Base	_	_	_	_	
113-4	14541-14547	Backup	_	_	_	_	
113-5	14548-14553	Using	_	_	_	_	
113-6	14554-14557	the	_	_	_	_	
113-7	14558-14561	Low	_	_	_	_	
113-8	14562-14567	Level	_	_	_	_	
113-9	14568-14571	API	_	_	_	_	
113-10	14572-14575	The	_	_	_	_	
113-11	14576-14585	procedure	_	_	_	_	
113-12	14586-14589	for	_	_	_	_	
113-13	14590-14596	making	_	_	_	_	
113-14	14597-14598	a	_	_	_	_	
113-15	14599-14603	base	_	_	_	_	
113-16	14604-14610	backup	_	_	_	_	
113-17	14611-14616	using	_	_	_	_	
113-18	14617-14620	the	_	_	_	_	
113-19	14621-14624	low	_	_	_	_	
113-20	14625-14630	level	_	_	_	_	
113-21	14631-14635	APIs	_	_	_	_	
113-22	14636-14644	contains	_	_	_	_	
113-23	14645-14646	a	_	_	_	_	
113-24	14647-14650	few	_	_	_	_	
113-25	14651-14655	more	_	_	_	_	
113-26	14656-14661	steps	_	_	_	_	
113-27	14662-14666	than	_	_	_	_	
113-28	14667-14670	the	_	_	_	_	
113-29	14671-14684	pg_basebackup	_	_	_	_	
113-30	14685-14691	method	_	_	_	_	
113-31	14691-14692	,	_	_	_	_	
113-32	14693-14696	but	_	_	_	_	
113-33	14697-14699	is	_	_	_	_	
113-34	14700-14710	relatively	_	_	_	_	
113-35	14711-14717	simple	_	_	_	_	
113-36	14717-14718	.	_	_	_	_	

#Text=It is very important that these steps are executed in sequence, and that the success of a step is verified before proceeding to the next step.
114-1	14719-14721	It	_	_	_	_	
114-2	14722-14724	is	_	_	_	_	
114-3	14725-14729	very	_	_	_	_	
114-4	14730-14739	important	_	_	_	_	
114-5	14740-14744	that	_	_	_	_	
114-6	14745-14750	these	_	_	_	_	
114-7	14751-14756	steps	_	_	_	_	
114-8	14757-14760	are	_	_	_	_	
114-9	14761-14769	executed	_	_	_	_	
114-10	14770-14772	in	_	_	_	_	
114-11	14773-14781	sequence	_	_	_	_	
114-12	14781-14782	,	_	_	_	_	
114-13	14783-14786	and	_	_	_	_	
114-14	14787-14791	that	_	_	_	_	
114-15	14792-14795	the	_	_	_	_	
114-16	14796-14803	success	_	_	_	_	
114-17	14804-14806	of	_	_	_	_	
114-18	14807-14808	a	_	_	_	_	
114-19	14809-14813	step	_	_	_	_	
114-20	14814-14816	is	_	_	_	_	
114-21	14817-14825	verified	_	_	_	_	
114-22	14826-14832	before	_	_	_	_	
114-23	14833-14843	proceeding	_	_	_	_	
114-24	14844-14846	to	_	_	_	_	
114-25	14847-14850	the	_	_	_	_	
114-26	14851-14855	next	_	_	_	_	
114-27	14856-14860	step	_	_	_	_	
114-28	14860-14861	.	_	_	_	_	

#Text=Low level base backups can be made in a non-exclusive or an exclusive way.
115-1	14862-14865	Low	_	_	_	_	
115-2	14866-14871	level	_	_	_	_	
115-3	14872-14876	base	_	_	_	_	
115-4	14877-14884	backups	_	_	_	_	
115-5	14885-14888	can	_	_	_	_	
115-6	14889-14891	be	_	_	_	_	
115-7	14892-14896	made	_	_	_	_	
115-8	14897-14899	in	_	_	_	_	
115-9	14900-14901	a	_	_	_	_	
115-10	14902-14915	non-exclusive	_	_	_	_	
115-11	14916-14918	or	_	_	_	_	
115-12	14919-14921	an	_	_	_	_	
115-13	14922-14931	exclusive	_	_	_	_	
115-14	14932-14935	way	_	_	_	_	
115-15	14935-14936	.	_	_	_	_	

#Text=The non-exclusive method is recommended and the exclusive one is deprecated and will eventually be removed.
#Text=25.3.3.1. 
116-1	14937-14940	The	_	_	_	_	
116-2	14941-14954	non-exclusive	_	_	_	_	
116-3	14955-14961	method	_	_	_	_	
116-4	14962-14964	is	_	_	_	_	
116-5	14965-14976	recommended	_	_	_	_	
116-6	14977-14980	and	_	_	_	_	
116-7	14981-14984	the	_	_	_	_	
116-8	14985-14994	exclusive	_	_	_	_	
116-9	14995-14998	one	_	_	_	_	
116-10	14999-15001	is	_	_	_	_	
116-11	15002-15012	deprecated	_	_	_	_	
116-12	15013-15016	and	_	_	_	_	
116-13	15017-15021	will	_	_	_	_	
116-14	15022-15032	eventually	_	_	_	_	
116-15	15033-15035	be	_	_	_	_	
116-16	15036-15043	removed	_	_	_	_	
116-17	15043-15044	.	_	_	_	_	
116-18	15045-15053	25.3.3.1	_	_	_	_	
116-19	15053-15054	.	_	_	_	_	
116-20	15054-15055	 	_	_	_	_	

#Text=Making a Non-Exclusive Low-Level Backup
#Text=A non-exclusive low level backup is one that allows other concurrent backups to be running (both those started using the same backup API and those started using pg_basebackup).
117-1	15055-15061	Making	_	_	_	_	
117-2	15062-15063	a	_	_	_	_	
117-3	15064-15077	Non-Exclusive	_	_	_	_	
117-4	15078-15087	Low-Level	_	_	_	_	
117-5	15088-15094	Backup	_	_	_	_	
117-6	15095-15096	A	_	_	_	_	
117-7	15097-15110	non-exclusive	_	_	_	_	
117-8	15111-15114	low	_	_	_	_	
117-9	15115-15120	level	_	_	_	_	
117-10	15121-15127	backup	_	_	_	_	
117-11	15128-15130	is	_	_	_	_	
117-12	15131-15134	one	_	_	_	_	
117-13	15135-15139	that	_	_	_	_	
117-14	15140-15146	allows	_	_	_	_	
117-15	15147-15152	other	_	_	_	_	
117-16	15153-15163	concurrent	_	_	_	_	
117-17	15164-15171	backups	_	_	_	_	
117-18	15172-15174	to	_	_	_	_	
117-19	15175-15177	be	_	_	_	_	
117-20	15178-15185	running	_	_	_	_	
117-21	15186-15187	(	_	_	_	_	
117-22	15187-15191	both	_	_	_	_	
117-23	15192-15197	those	_	_	_	_	
117-24	15198-15205	started	_	_	_	_	
117-25	15206-15211	using	_	_	_	_	
117-26	15212-15215	the	_	_	_	_	
117-27	15216-15220	same	_	_	_	_	
117-28	15221-15227	backup	_	_	_	_	
117-29	15228-15231	API	_	_	_	_	
117-30	15232-15235	and	_	_	_	_	
117-31	15236-15241	those	_	_	_	_	
117-32	15242-15249	started	_	_	_	_	
117-33	15250-15255	using	_	_	_	_	
117-34	15256-15269	pg_basebackup	_	_	_	_	
117-35	15269-15270	)	_	_	_	_	
117-36	15270-15271	.	_	_	_	_	

#Text=Ensure that WAL archiving is enabled and working.
118-1	15272-15278	Ensure	_	_	_	_	
118-2	15279-15283	that	_	_	_	_	
118-3	15284-15287	WAL	_	_	_	_	
118-4	15288-15297	archiving	_	_	_	_	
118-5	15298-15300	is	_	_	_	_	
118-6	15301-15308	enabled	_	_	_	_	
118-7	15309-15312	and	_	_	_	_	
118-8	15313-15320	working	_	_	_	_	
118-9	15320-15321	.	_	_	_	_	

#Text=Connect to the server (it does not matter which database) as a user with rights to run pg_start_backup (superuser, or a user who has been granted EXECUTE on the function) and issue the command:
#Text=SELECT pg_start_backup('label', false, false);
#Text=where label is any string you want to use to uniquely identify this backup operation.
119-1	15322-15329	Connect	_	_	_	_	
119-2	15330-15332	to	_	_	_	_	
119-3	15333-15336	the	_	_	_	_	
119-4	15337-15343	server	_	_	_	_	
119-5	15344-15345	(	_	_	_	_	
119-6	15345-15347	it	_	_	_	_	
119-7	15348-15352	does	_	_	_	_	
119-8	15353-15356	not	_	_	_	_	
119-9	15357-15363	matter	_	_	_	_	
119-10	15364-15369	which	_	_	_	_	
119-11	15370-15378	database	_	_	_	_	
119-12	15378-15379	)	_	_	_	_	
119-13	15380-15382	as	_	_	_	_	
119-14	15383-15384	a	_	_	_	_	
119-15	15385-15389	user	_	_	_	_	
119-16	15390-15394	with	_	_	_	_	
119-17	15395-15401	rights	_	_	_	_	
119-18	15402-15404	to	_	_	_	_	
119-19	15405-15408	run	_	_	_	_	
119-20	15409-15424	pg_start_backup	_	_	_	_	
119-21	15425-15426	(	_	_	_	_	
119-22	15426-15435	superuser	_	_	_	_	
119-23	15435-15436	,	_	_	_	_	
119-24	15437-15439	or	_	_	_	_	
119-25	15440-15441	a	_	_	_	_	
119-26	15442-15446	user	_	_	_	_	
119-27	15447-15450	who	_	_	_	_	
119-28	15451-15454	has	_	_	_	_	
119-29	15455-15459	been	_	_	_	_	
119-30	15460-15467	granted	_	_	_	_	
119-31	15468-15475	EXECUTE	_	_	_	_	
119-32	15476-15478	on	_	_	_	_	
119-33	15479-15482	the	_	_	_	_	
119-34	15483-15491	function	_	_	_	_	
119-35	15491-15492	)	_	_	_	_	
119-36	15493-15496	and	_	_	_	_	
119-37	15497-15502	issue	_	_	_	_	
119-38	15503-15506	the	_	_	_	_	
119-39	15507-15514	command	_	_	_	_	
119-40	15514-15515	:	_	_	_	_	
119-41	15516-15522	SELECT	_	_	_	_	
119-42	15523-15538	pg_start_backup	_	_	_	_	
119-43	15538-15539	(	_	_	_	_	
119-44	15539-15540	'	_	_	_	_	
119-45	15540-15545	label	_	_	_	_	
119-46	15545-15546	'	_	_	_	_	
119-47	15546-15547	,	_	_	_	_	
119-48	15548-15553	false	_	_	_	_	
119-49	15553-15554	,	_	_	_	_	
119-50	15555-15560	false	_	_	_	_	
119-51	15560-15561	)	_	_	_	_	
119-52	15561-15562	;	_	_	_	_	
119-53	15563-15568	where	_	_	_	_	
119-54	15569-15574	label	_	_	_	_	
119-55	15575-15577	is	_	_	_	_	
119-56	15578-15581	any	_	_	_	_	
119-57	15582-15588	string	_	_	_	_	
119-58	15589-15592	you	_	_	_	_	
119-59	15593-15597	want	_	_	_	_	
119-60	15598-15600	to	_	_	_	_	
119-61	15601-15604	use	_	_	_	_	
119-62	15605-15607	to	_	_	_	_	
119-63	15608-15616	uniquely	_	_	_	_	
119-64	15617-15625	identify	_	_	_	_	
119-65	15626-15630	this	_	_	_	_	
119-66	15631-15637	backup	_	_	_	_	
119-67	15638-15647	operation	_	_	_	_	
119-68	15647-15648	.	_	_	_	_	

#Text=The connection calling pg_start_backup must be maintained until the end of the backup, or the backup will be automatically aborted.
120-1	15649-15652	The	_	_	_	_	
120-2	15653-15663	connection	_	_	_	_	
120-3	15664-15671	calling	_	_	_	_	
120-4	15672-15687	pg_start_backup	_	_	_	_	
120-5	15688-15692	must	_	_	_	_	
120-6	15693-15695	be	_	_	_	_	
120-7	15696-15706	maintained	_	_	_	_	
120-8	15707-15712	until	_	_	_	_	
120-9	15713-15716	the	_	_	_	_	
120-10	15717-15720	end	_	_	_	_	
120-11	15721-15723	of	_	_	_	_	
120-12	15724-15727	the	_	_	_	_	
120-13	15728-15734	backup	_	_	_	_	
120-14	15734-15735	,	_	_	_	_	
120-15	15736-15738	or	_	_	_	_	
120-16	15739-15742	the	_	_	_	_	
120-17	15743-15749	backup	_	_	_	_	
120-18	15750-15754	will	_	_	_	_	
120-19	15755-15757	be	_	_	_	_	
120-20	15758-15771	automatically	_	_	_	_	
120-21	15772-15779	aborted	_	_	_	_	
120-22	15779-15780	.	_	_	_	_	

#Text=By default, pg_start_backup can take a long time to finish.
121-1	15781-15783	By	_	_	_	_	
121-2	15784-15791	default	_	_	_	_	
121-3	15791-15792	,	_	_	_	_	
121-4	15793-15808	pg_start_backup	_	_	_	_	
121-5	15809-15812	can	_	_	_	_	
121-6	15813-15817	take	_	_	_	_	
121-7	15818-15819	a	_	_	_	_	
121-8	15820-15824	long	_	_	_	_	
121-9	15825-15829	time	_	_	_	_	
121-10	15830-15832	to	_	_	_	_	
121-11	15833-15839	finish	_	_	_	_	
121-12	15839-15840	.	_	_	_	_	

#Text=This is because it performs a checkpoint, and the I/O required for the checkpoint will be spread out over a significant period of time, by default half your inter-checkpoint interval (see the configuration parameter checkpoint_completion_target).
122-1	15841-15845	This	_	_	_	_	
122-2	15846-15848	is	_	_	_	_	
122-3	15849-15856	because	_	_	_	_	
122-4	15857-15859	it	_	_	_	_	
122-5	15860-15868	performs	_	_	_	_	
122-6	15869-15870	a	_	_	_	_	
122-7	15871-15881	checkpoint	_	_	_	_	
122-8	15881-15882	,	_	_	_	_	
122-9	15883-15886	and	_	_	_	_	
122-10	15887-15890	the	_	_	_	_	
122-11	15891-15892	I	_	_	_	_	
122-12	15892-15893	/	_	_	_	_	
122-13	15893-15894	O	_	_	_	_	
122-14	15895-15903	required	_	_	_	_	
122-15	15904-15907	for	_	_	_	_	
122-16	15908-15911	the	_	_	_	_	
122-17	15912-15922	checkpoint	_	_	_	_	
122-18	15923-15927	will	_	_	_	_	
122-19	15928-15930	be	_	_	_	_	
122-20	15931-15937	spread	_	_	_	_	
122-21	15938-15941	out	_	_	_	_	
122-22	15942-15946	over	_	_	_	_	
122-23	15947-15948	a	_	_	_	_	
122-24	15949-15960	significant	_	_	_	_	
122-25	15961-15967	period	_	_	_	_	
122-26	15968-15970	of	_	_	_	_	
122-27	15971-15975	time	_	_	_	_	
122-28	15975-15976	,	_	_	_	_	
122-29	15977-15979	by	_	_	_	_	
122-30	15980-15987	default	_	_	_	_	
122-31	15988-15992	half	_	_	_	_	
122-32	15993-15997	your	_	_	_	_	
122-33	15998-16014	inter-checkpoint	_	_	_	_	
122-34	16015-16023	interval	_	_	_	_	
122-35	16024-16025	(	_	_	_	_	
122-36	16025-16028	see	_	_	_	_	
122-37	16029-16032	the	_	_	_	_	
122-38	16033-16046	configuration	_	_	_	_	
122-39	16047-16056	parameter	_	_	_	_	
122-40	16057-16085	checkpoint_completion_target	_	_	_	_	
122-41	16085-16086	)	_	_	_	_	
122-42	16086-16087	.	_	_	_	_	

#Text=This is usually what you want, because it minimizes the impact on query processing.
123-1	16088-16092	This	_	_	_	_	
123-2	16093-16095	is	_	_	_	_	
123-3	16096-16103	usually	_	_	_	_	
123-4	16104-16108	what	_	_	_	_	
123-5	16109-16112	you	_	_	_	_	
123-6	16113-16117	want	_	_	_	_	
123-7	16117-16118	,	_	_	_	_	
123-8	16119-16126	because	_	_	_	_	
123-9	16127-16129	it	_	_	_	_	
123-10	16130-16139	minimizes	_	_	_	_	
123-11	16140-16143	the	_	_	_	_	
123-12	16144-16150	impact	_	_	_	_	
123-13	16151-16153	on	_	_	_	_	
123-14	16154-16159	query	_	_	_	_	
123-15	16160-16170	processing	_	_	_	_	
123-16	16170-16171	.	_	_	_	_	

#Text=If you want to start the backup as soon as possible, change the second parameter to true, which will issue an immediate checkpoint using as much I/O as available.
124-1	16172-16174	If	_	_	_	_	
124-2	16175-16178	you	_	_	_	_	
124-3	16179-16183	want	_	_	_	_	
124-4	16184-16186	to	_	_	_	_	
124-5	16187-16192	start	_	_	_	_	
124-6	16193-16196	the	_	_	_	_	
124-7	16197-16203	backup	_	_	_	_	
124-8	16204-16206	as	_	_	_	_	
124-9	16207-16211	soon	_	_	_	_	
124-10	16212-16214	as	_	_	_	_	
124-11	16215-16223	possible	_	_	_	_	
124-12	16223-16224	,	_	_	_	_	
124-13	16225-16231	change	_	_	_	_	
124-14	16232-16235	the	_	_	_	_	
124-15	16236-16242	second	_	_	_	_	
124-16	16243-16252	parameter	_	_	_	_	
124-17	16253-16255	to	_	_	_	_	
124-18	16256-16260	true	_	_	_	_	
124-19	16260-16261	,	_	_	_	_	
124-20	16262-16267	which	_	_	_	_	
124-21	16268-16272	will	_	_	_	_	
124-22	16273-16278	issue	_	_	_	_	
124-23	16279-16281	an	_	_	_	_	
124-24	16282-16291	immediate	_	_	_	_	
124-25	16292-16302	checkpoint	_	_	_	_	
124-26	16303-16308	using	_	_	_	_	
124-27	16309-16311	as	_	_	_	_	
124-28	16312-16316	much	_	_	_	_	
124-29	16317-16318	I	_	_	_	_	
124-30	16318-16319	/	_	_	_	_	
124-31	16319-16320	O	_	_	_	_	
124-32	16321-16323	as	_	_	_	_	
124-33	16324-16333	available	_	_	_	_	
124-34	16333-16334	.	_	_	_	_	

#Text=The third parameter being false tells pg_start_backup to initiate a non-exclusive base backup.
125-1	16335-16338	The	_	_	_	_	
125-2	16339-16344	third	_	_	_	_	
125-3	16345-16354	parameter	_	_	_	_	
125-4	16355-16360	being	_	_	_	_	
125-5	16361-16366	false	_	_	_	_	
125-6	16367-16372	tells	_	_	_	_	
125-7	16373-16388	pg_start_backup	_	_	_	_	
125-8	16389-16391	to	_	_	_	_	
125-9	16392-16400	initiate	_	_	_	_	
125-10	16401-16402	a	_	_	_	_	
125-11	16403-16416	non-exclusive	_	_	_	_	
125-12	16417-16421	base	_	_	_	_	
125-13	16422-16428	backup	_	_	_	_	
125-14	16428-16429	.	_	_	_	_	

#Text=Perform the backup, using any convenient file-system-backup tool such as tar or cpio (not pg_dump or pg_dumpall).
126-1	16430-16437	Perform	_	_	_	_	
126-2	16438-16441	the	_	_	_	_	
126-3	16442-16448	backup	_	_	_	_	
126-4	16448-16449	,	_	_	_	_	
126-5	16450-16455	using	_	_	_	_	
126-6	16456-16459	any	_	_	_	_	
126-7	16460-16470	convenient	_	_	_	_	
126-8	16471-16489	file-system-backup	_	_	_	_	
126-9	16490-16494	tool	_	_	_	_	
126-10	16495-16499	such	_	_	_	_	
126-11	16500-16502	as	_	_	_	_	
126-12	16503-16506	tar	_	_	_	_	
126-13	16507-16509	or	_	_	_	_	
126-14	16510-16514	cpio	_	_	_	_	
126-15	16515-16516	(	_	_	_	_	
126-16	16516-16519	not	_	_	_	_	
126-17	16520-16527	pg_dump	_	_	_	_	
126-18	16528-16530	or	_	_	_	_	
126-19	16531-16541	pg_dumpall	_	_	_	_	
126-20	16541-16542	)	_	_	_	_	
126-21	16542-16543	.	_	_	_	_	

#Text=It is neither necessary nor desirable to stop normal operation of the database while you do this.
127-1	16544-16546	It	_	_	_	_	
127-2	16547-16549	is	_	_	_	_	
127-3	16550-16557	neither	_	_	_	_	
127-4	16558-16567	necessary	_	_	_	_	
127-5	16568-16571	nor	_	_	_	_	
127-6	16572-16581	desirable	_	_	_	_	
127-7	16582-16584	to	_	_	_	_	
127-8	16585-16589	stop	_	_	_	_	
127-9	16590-16596	normal	_	_	_	_	
127-10	16597-16606	operation	_	_	_	_	
127-11	16607-16609	of	_	_	_	_	
127-12	16610-16613	the	_	_	_	_	
127-13	16614-16622	database	_	_	_	_	
127-14	16623-16628	while	_	_	_	_	
127-15	16629-16632	you	_	_	_	_	
127-16	16633-16635	do	_	_	_	_	
127-17	16636-16640	this	_	_	_	_	
127-18	16640-16641	.	_	_	_	_	

#Text=See Section 25.3.3.3 for things to consider during this backup.
128-1	16642-16645	See	_	_	_	_	
128-2	16646-16653	Section	_	_	_	_	
128-3	16653-16654	 	_	_	_	_	
128-4	16654-16662	25.3.3.3	_	_	_	_	
128-5	16663-16666	for	_	_	_	_	
128-6	16667-16673	things	_	_	_	_	
128-7	16674-16676	to	_	_	_	_	
128-8	16677-16685	consider	_	_	_	_	
128-9	16686-16692	during	_	_	_	_	
128-10	16693-16697	this	_	_	_	_	
128-11	16698-16704	backup	_	_	_	_	
128-12	16704-16705	.	_	_	_	_	

#Text=In the same connection as before, issue the command:
#Text=SELECT * FROM pg_stop_backup(false, true);
#Text=This terminates backup mode.
129-1	16706-16708	In	_	_	_	_	
129-2	16709-16712	the	_	_	_	_	
129-3	16713-16717	same	_	_	_	_	
129-4	16718-16728	connection	_	_	_	_	
129-5	16729-16731	as	_	_	_	_	
129-6	16732-16738	before	_	_	_	_	
129-7	16738-16739	,	_	_	_	_	
129-8	16740-16745	issue	_	_	_	_	
129-9	16746-16749	the	_	_	_	_	
129-10	16750-16757	command	_	_	_	_	
129-11	16757-16758	:	_	_	_	_	
129-12	16759-16765	SELECT	_	_	_	_	
129-13	16766-16767	*	_	_	_	_	
129-14	16768-16772	FROM	_	_	_	_	
129-15	16773-16787	pg_stop_backup	_	_	_	_	
129-16	16787-16788	(	_	_	_	_	
129-17	16788-16793	false	_	_	_	_	
129-18	16793-16794	,	_	_	_	_	
129-19	16795-16799	true	_	_	_	_	
129-20	16799-16800	)	_	_	_	_	
129-21	16800-16801	;	_	_	_	_	
129-22	16802-16806	This	_	_	_	_	
129-23	16807-16817	terminates	_	_	_	_	
129-24	16818-16824	backup	_	_	_	_	
129-25	16825-16829	mode	_	_	_	_	
129-26	16829-16830	.	_	_	_	_	

#Text=On a primary, it also performs an automatic switch to the next WAL segment.
130-1	16831-16833	On	_	_	_	_	
130-2	16834-16835	a	_	_	_	_	
130-3	16836-16843	primary	_	_	_	_	
130-4	16843-16844	,	_	_	_	_	
130-5	16845-16847	it	_	_	_	_	
130-6	16848-16852	also	_	_	_	_	
130-7	16853-16861	performs	_	_	_	_	
130-8	16862-16864	an	_	_	_	_	
130-9	16865-16874	automatic	_	_	_	_	
130-10	16875-16881	switch	_	_	_	_	
130-11	16882-16884	to	_	_	_	_	
130-12	16885-16888	the	_	_	_	_	
130-13	16889-16893	next	_	_	_	_	
130-14	16894-16897	WAL	_	_	_	_	
130-15	16898-16905	segment	_	_	_	_	
130-16	16905-16906	.	_	_	_	_	

#Text=On a standby, it is not possible to automatically switch WAL segments, so you may wish to run pg_switch_wal on the primary to perform a manual switch.
131-1	16907-16909	On	_	_	_	_	
131-2	16910-16911	a	_	_	_	_	
131-3	16912-16919	standby	_	_	_	_	
131-4	16919-16920	,	_	_	_	_	
131-5	16921-16923	it	_	_	_	_	
131-6	16924-16926	is	_	_	_	_	
131-7	16927-16930	not	_	_	_	_	
131-8	16931-16939	possible	_	_	_	_	
131-9	16940-16942	to	_	_	_	_	
131-10	16943-16956	automatically	_	_	_	_	
131-11	16957-16963	switch	_	_	_	_	
131-12	16964-16967	WAL	_	_	_	_	
131-13	16968-16976	segments	_	_	_	_	
131-14	16976-16977	,	_	_	_	_	
131-15	16978-16980	so	_	_	_	_	
131-16	16981-16984	you	_	_	_	_	
131-17	16985-16988	may	_	_	_	_	
131-18	16989-16993	wish	_	_	_	_	
131-19	16994-16996	to	_	_	_	_	
131-20	16997-17000	run	_	_	_	_	
131-21	17001-17014	pg_switch_wal	_	_	_	_	
131-22	17015-17017	on	_	_	_	_	
131-23	17018-17021	the	_	_	_	_	
131-24	17022-17029	primary	_	_	_	_	
131-25	17030-17032	to	_	_	_	_	
131-26	17033-17040	perform	_	_	_	_	
131-27	17041-17042	a	_	_	_	_	
131-28	17043-17049	manual	_	_	_	_	
131-29	17050-17056	switch	_	_	_	_	
131-30	17056-17057	.	_	_	_	_	

#Text=The reason for the switch is to arrange for the last WAL segment file written during the backup interval to be ready to archive.
132-1	17058-17061	The	_	_	_	_	
132-2	17062-17068	reason	_	_	_	_	
132-3	17069-17072	for	_	_	_	_	
132-4	17073-17076	the	_	_	_	_	
132-5	17077-17083	switch	_	_	_	_	
132-6	17084-17086	is	_	_	_	_	
132-7	17087-17089	to	_	_	_	_	
132-8	17090-17097	arrange	_	_	_	_	
132-9	17098-17101	for	_	_	_	_	
132-10	17102-17105	the	_	_	_	_	
132-11	17106-17110	last	_	_	_	_	
132-12	17111-17114	WAL	_	_	_	_	
132-13	17115-17122	segment	_	_	_	_	
132-14	17123-17127	file	_	_	_	_	
132-15	17128-17135	written	_	_	_	_	
132-16	17136-17142	during	_	_	_	_	
132-17	17143-17146	the	_	_	_	_	
132-18	17147-17153	backup	_	_	_	_	
132-19	17154-17162	interval	_	_	_	_	
132-20	17163-17165	to	_	_	_	_	
132-21	17166-17168	be	_	_	_	_	
132-22	17169-17174	ready	_	_	_	_	
132-23	17175-17177	to	_	_	_	_	
132-24	17178-17185	archive	_	_	_	_	
132-25	17185-17186	.	_	_	_	_	

#Text=The pg_stop_backup will return one row with three values.
133-1	17187-17190	The	_	_	_	_	
133-2	17191-17205	pg_stop_backup	_	_	_	_	
133-3	17206-17210	will	_	_	_	_	
133-4	17211-17217	return	_	_	_	_	
133-5	17218-17221	one	_	_	_	_	
133-6	17222-17225	row	_	_	_	_	
133-7	17226-17230	with	_	_	_	_	
133-8	17231-17236	three	_	_	_	_	
133-9	17237-17243	values	_	_	_	_	
133-10	17243-17244	.	_	_	_	_	

#Text=The second of these fields should be written to a file named backup_label in the root directory of the backup.
134-1	17245-17248	The	_	_	_	_	
134-2	17249-17255	second	_	_	_	_	
134-3	17256-17258	of	_	_	_	_	
134-4	17259-17264	these	_	_	_	_	
134-5	17265-17271	fields	_	_	_	_	
134-6	17272-17278	should	_	_	_	_	
134-7	17279-17281	be	_	_	_	_	
134-8	17282-17289	written	_	_	_	_	
134-9	17290-17292	to	_	_	_	_	
134-10	17293-17294	a	_	_	_	_	
134-11	17295-17299	file	_	_	_	_	
134-12	17300-17305	named	_	_	_	_	
134-13	17306-17318	backup_label	_	_	_	_	
134-14	17319-17321	in	_	_	_	_	
134-15	17322-17325	the	_	_	_	_	
134-16	17326-17330	root	_	_	_	_	
134-17	17331-17340	directory	_	_	_	_	
134-18	17341-17343	of	_	_	_	_	
134-19	17344-17347	the	_	_	_	_	
134-20	17348-17354	backup	_	_	_	_	
134-21	17354-17355	.	_	_	_	_	

#Text=The third field should be written to a file named tablespace_map unless the field is empty.
135-1	17356-17359	The	_	_	_	_	
135-2	17360-17365	third	_	_	_	_	
135-3	17366-17371	field	_	_	_	_	
135-4	17372-17378	should	_	_	_	_	
135-5	17379-17381	be	_	_	_	_	
135-6	17382-17389	written	_	_	_	_	
135-7	17390-17392	to	_	_	_	_	
135-8	17393-17394	a	_	_	_	_	
135-9	17395-17399	file	_	_	_	_	
135-10	17400-17405	named	_	_	_	_	
135-11	17406-17420	tablespace_map	_	_	_	_	
135-12	17421-17427	unless	_	_	_	_	
135-13	17428-17431	the	_	_	_	_	
135-14	17432-17437	field	_	_	_	_	
135-15	17438-17440	is	_	_	_	_	
135-16	17441-17446	empty	_	_	_	_	
135-17	17446-17447	.	_	_	_	_	

#Text=These files are vital to the backup working, and must be written without modification.
136-1	17448-17453	These	_	_	_	_	
136-2	17454-17459	files	_	_	_	_	
136-3	17460-17463	are	_	_	_	_	
136-4	17464-17469	vital	_	_	_	_	
136-5	17470-17472	to	_	_	_	_	
136-6	17473-17476	the	_	_	_	_	
136-7	17477-17483	backup	_	_	_	_	
136-8	17484-17491	working	_	_	_	_	
136-9	17491-17492	,	_	_	_	_	
136-10	17493-17496	and	_	_	_	_	
136-11	17497-17501	must	_	_	_	_	
136-12	17502-17504	be	_	_	_	_	
136-13	17505-17512	written	_	_	_	_	
136-14	17513-17520	without	_	_	_	_	
136-15	17521-17533	modification	_	_	_	_	
136-16	17533-17534	.	_	_	_	_	

#Text=Once the WAL segment files active during the backup are archived, you are done.
137-1	17535-17539	Once	_	_	_	_	
137-2	17540-17543	the	_	_	_	_	
137-3	17544-17547	WAL	_	_	_	_	
137-4	17548-17555	segment	_	_	_	_	
137-5	17556-17561	files	_	_	_	_	
137-6	17562-17568	active	_	_	_	_	
137-7	17569-17575	during	_	_	_	_	
137-8	17576-17579	the	_	_	_	_	
137-9	17580-17586	backup	_	_	_	_	
137-10	17587-17590	are	_	_	_	_	
137-11	17591-17599	archived	_	_	_	_	
137-12	17599-17600	,	_	_	_	_	
137-13	17601-17604	you	_	_	_	_	
137-14	17605-17608	are	_	_	_	_	
137-15	17609-17613	done	_	_	_	_	
137-16	17613-17614	.	_	_	_	_	

#Text=The file identified by pg_stop_backup's first return value is the last segment that is required to form a complete set of backup files.
138-1	17615-17618	The	_	_	_	_	
138-2	17619-17623	file	_	_	_	_	
138-3	17624-17634	identified	_	_	_	_	
138-4	17635-17637	by	_	_	_	_	
138-5	17638-17654	pg_stop_backup's	_	_	_	_	
138-6	17655-17660	first	_	_	_	_	
138-7	17661-17667	return	_	_	_	_	
138-8	17668-17673	value	_	_	_	_	
138-9	17674-17676	is	_	_	_	_	
138-10	17677-17680	the	_	_	_	_	
138-11	17681-17685	last	_	_	_	_	
138-12	17686-17693	segment	_	_	_	_	
138-13	17694-17698	that	_	_	_	_	
138-14	17699-17701	is	_	_	_	_	
138-15	17702-17710	required	_	_	_	_	
138-16	17711-17713	to	_	_	_	_	
138-17	17714-17718	form	_	_	_	_	
138-18	17719-17720	a	_	_	_	_	
138-19	17721-17729	complete	_	_	_	_	
138-20	17730-17733	set	_	_	_	_	
138-21	17734-17736	of	_	_	_	_	
138-22	17737-17743	backup	_	_	_	_	
138-23	17744-17749	files	_	_	_	_	
138-24	17749-17750	.	_	_	_	_	

#Text=On a primary, if archive_mode is enabled and the wait_for_archive parameter is true, pg_stop_backup does not return until the last segment has been archived.
139-1	17751-17753	On	_	_	_	_	
139-2	17754-17755	a	_	_	_	_	
139-3	17756-17763	primary	_	_	_	_	
139-4	17763-17764	,	_	_	_	_	
139-5	17765-17767	if	_	_	_	_	
139-6	17768-17780	archive_mode	*	parameter	_	_	
139-7	17781-17783	is	_	_	_	_	
139-8	17784-17791	enabled	*	value	Associated-With	139-6	
139-9	17792-17795	and	_	_	_	_	
139-10	17796-17799	the	_	_	_	_	
139-11	17800-17816	wait_for_archive	*	parameter	_	_	
139-12	17817-17826	parameter	_	_	_	_	
139-13	17827-17829	is	_	_	_	_	
139-14	17830-17834	true	*	value	Associated-With	139-11	
139-15	17834-17835	,	_	_	_	_	
139-16	17836-17850	pg_stop_backup	_	_	_	_	
139-17	17851-17855	does	_	_	_	_	
139-18	17856-17859	not	_	_	_	_	
139-19	17860-17866	return	_	_	_	_	
139-20	17867-17872	until	_	_	_	_	
139-21	17873-17876	the	_	_	_	_	
139-22	17877-17881	last	_	_	_	_	
139-23	17882-17889	segment	_	_	_	_	
139-24	17890-17893	has	_	_	_	_	
139-25	17894-17898	been	_	_	_	_	
139-26	17899-17907	archived	_	_	_	_	
139-27	17907-17908	.	_	_	_	_	

#Text=On a standby, archive_mode must be always in order for pg_stop_backup to wait.
140-1	17909-17911	On	_	_	_	_	
140-2	17912-17913	a	_	_	_	_	
140-3	17914-17921	standby	_	_	_	_	
140-4	17921-17922	,	_	_	_	_	
140-5	17923-17935	archive_mode	_	_	_	_	
140-6	17936-17940	must	_	_	_	_	
140-7	17941-17943	be	_	_	_	_	
140-8	17944-17950	always	_	_	_	_	
140-9	17951-17953	in	_	_	_	_	
140-10	17954-17959	order	_	_	_	_	
140-11	17960-17963	for	_	_	_	_	
140-12	17964-17978	pg_stop_backup	_	_	_	_	
140-13	17979-17981	to	_	_	_	_	
140-14	17982-17986	wait	_	_	_	_	
140-15	17986-17987	.	_	_	_	_	

#Text=Archiving of these files happens automatically since you have already configured archive_command.
141-1	17988-17997	Archiving	_	_	_	_	
141-2	17998-18000	of	_	_	_	_	
141-3	18001-18006	these	_	_	_	_	
141-4	18007-18012	files	_	_	_	_	
141-5	18013-18020	happens	_	_	_	_	
141-6	18021-18034	automatically	_	_	_	_	
141-7	18035-18040	since	_	_	_	_	
141-8	18041-18044	you	_	_	_	_	
141-9	18045-18049	have	_	_	_	_	
141-10	18050-18057	already	_	_	_	_	
141-11	18058-18068	configured	_	_	_	_	
141-12	18069-18084	archive_command	_	_	_	_	
141-13	18084-18085	.	_	_	_	_	

#Text=In most cases this happens quickly, but you are advised to monitor your archive system to ensure there are no delays.
142-1	18086-18088	In	_	_	_	_	
142-2	18089-18093	most	_	_	_	_	
142-3	18094-18099	cases	_	_	_	_	
142-4	18100-18104	this	_	_	_	_	
142-5	18105-18112	happens	_	_	_	_	
142-6	18113-18120	quickly	_	_	_	_	
142-7	18120-18121	,	_	_	_	_	
142-8	18122-18125	but	_	_	_	_	
142-9	18126-18129	you	_	_	_	_	
142-10	18130-18133	are	_	_	_	_	
142-11	18134-18141	advised	_	_	_	_	
142-12	18142-18144	to	_	_	_	_	
142-13	18145-18152	monitor	_	_	_	_	
142-14	18153-18157	your	_	_	_	_	
142-15	18158-18165	archive	_	_	_	_	
142-16	18166-18172	system	_	_	_	_	
142-17	18173-18175	to	_	_	_	_	
142-18	18176-18182	ensure	_	_	_	_	
142-19	18183-18188	there	_	_	_	_	
142-20	18189-18192	are	_	_	_	_	
142-21	18193-18195	no	_	_	_	_	
142-22	18196-18202	delays	_	_	_	_	
142-23	18202-18203	.	_	_	_	_	

#Text=If the archive process has fallen behind because of failures of the archive command, it will keep retrying until the archive succeeds and the backup is complete.
143-1	18204-18206	If	_	_	_	_	
143-2	18207-18210	the	_	_	_	_	
143-3	18211-18218	archive	_	_	_	_	
143-4	18219-18226	process	_	_	_	_	
143-5	18227-18230	has	_	_	_	_	
143-6	18231-18237	fallen	_	_	_	_	
143-7	18238-18244	behind	_	_	_	_	
143-8	18245-18252	because	_	_	_	_	
143-9	18253-18255	of	_	_	_	_	
143-10	18256-18264	failures	_	_	_	_	
143-11	18265-18267	of	_	_	_	_	
143-12	18268-18271	the	_	_	_	_	
143-13	18272-18279	archive	_	_	_	_	
143-14	18280-18287	command	_	_	_	_	
143-15	18287-18288	,	_	_	_	_	
143-16	18289-18291	it	_	_	_	_	
143-17	18292-18296	will	_	_	_	_	
143-18	18297-18301	keep	_	_	_	_	
143-19	18302-18310	retrying	_	_	_	_	
143-20	18311-18316	until	_	_	_	_	
143-21	18317-18320	the	_	_	_	_	
143-22	18321-18328	archive	_	_	_	_	
143-23	18329-18337	succeeds	_	_	_	_	
143-24	18338-18341	and	_	_	_	_	
143-25	18342-18345	the	_	_	_	_	
143-26	18346-18352	backup	_	_	_	_	
143-27	18353-18355	is	_	_	_	_	
143-28	18356-18364	complete	_	_	_	_	
143-29	18364-18365	.	_	_	_	_	

#Text=If you wish to place a time limit on the execution of pg_stop_backup, set an appropriate statement_timeout value, but make note that if pg_stop_backup terminates because of this your backup may not be valid.
144-1	18366-18368	If	_	_	_	_	
144-2	18369-18372	you	_	_	_	_	
144-3	18373-18377	wish	_	_	_	_	
144-4	18378-18380	to	_	_	_	_	
144-5	18381-18386	place	_	_	_	_	
144-6	18387-18388	a	_	_	_	_	
144-7	18389-18393	time	_	_	_	_	
144-8	18394-18399	limit	_	_	_	_	
144-9	18400-18402	on	_	_	_	_	
144-10	18403-18406	the	_	_	_	_	
144-11	18407-18416	execution	_	_	_	_	
144-12	18417-18419	of	_	_	_	_	
144-13	18420-18434	pg_stop_backup	_	_	_	_	
144-14	18434-18435	,	_	_	_	_	
144-15	18436-18439	set	_	_	_	_	
144-16	18440-18442	an	_	_	_	_	
144-17	18443-18454	appropriate	_	_	_	_	
144-18	18455-18472	statement_timeout	_	_	_	_	
144-19	18473-18478	value	_	_	_	_	
144-20	18478-18479	,	_	_	_	_	
144-21	18480-18483	but	_	_	_	_	
144-22	18484-18488	make	_	_	_	_	
144-23	18489-18493	note	_	_	_	_	
144-24	18494-18498	that	_	_	_	_	
144-25	18499-18501	if	_	_	_	_	
144-26	18502-18516	pg_stop_backup	_	_	_	_	
144-27	18517-18527	terminates	_	_	_	_	
144-28	18528-18535	because	_	_	_	_	
144-29	18536-18538	of	_	_	_	_	
144-30	18539-18543	this	_	_	_	_	
144-31	18544-18548	your	_	_	_	_	
144-32	18549-18555	backup	_	_	_	_	
144-33	18556-18559	may	_	_	_	_	
144-34	18560-18563	not	_	_	_	_	
144-35	18564-18566	be	_	_	_	_	
144-36	18567-18572	valid	_	_	_	_	
144-37	18572-18573	.	_	_	_	_	

#Text=If the backup process monitors and ensures that all WAL segment files required for the backup are successfully archived then the wait_for_archive parameter (which defaults to true) can be set to false to have pg_stop_backup return as soon as the stop backup record is written to the WAL.
145-1	18574-18576	If	_	_	_	_	
145-2	18577-18580	the	_	_	_	_	
145-3	18581-18587	backup	_	_	_	_	
145-4	18588-18595	process	_	_	_	_	
145-5	18596-18604	monitors	_	_	_	_	
145-6	18605-18608	and	_	_	_	_	
145-7	18609-18616	ensures	_	_	_	_	
145-8	18617-18621	that	_	_	_	_	
145-9	18622-18625	all	_	_	_	_	
145-10	18626-18629	WAL	_	_	_	_	
145-11	18630-18637	segment	_	_	_	_	
145-12	18638-18643	files	_	_	_	_	
145-13	18644-18652	required	_	_	_	_	
145-14	18653-18656	for	_	_	_	_	
145-15	18657-18660	the	_	_	_	_	
145-16	18661-18667	backup	_	_	_	_	
145-17	18668-18671	are	_	_	_	_	
145-18	18672-18684	successfully	_	_	_	_	
145-19	18685-18693	archived	_	_	_	_	
145-20	18694-18698	then	_	_	_	_	
145-21	18699-18702	the	_	_	_	_	
145-22	18703-18719	wait_for_archive	*	parameter	_	_	
145-23	18720-18729	parameter	_	_	_	_	
145-24	18730-18731	(	_	_	_	_	
145-25	18731-18736	which	_	_	_	_	
145-26	18737-18745	defaults	_	_	_	_	
145-27	18746-18748	to	_	_	_	_	
145-28	18749-18753	true	_	_	_	_	
145-29	18753-18754	)	_	_	_	_	
145-30	18755-18758	can	_	_	_	_	
145-31	18759-18761	be	_	_	_	_	
145-32	18762-18765	set	_	_	_	_	
145-33	18766-18768	to	_	_	_	_	
145-34	18769-18774	false	*	value	Associated-With	145-22	
145-35	18775-18777	to	_	_	_	_	
145-36	18778-18782	have	_	_	_	_	
145-37	18783-18797	pg_stop_backup	_	_	_	_	
145-38	18798-18804	return	_	_	_	_	
145-39	18805-18807	as	_	_	_	_	
145-40	18808-18812	soon	_	_	_	_	
145-41	18813-18815	as	_	_	_	_	
145-42	18816-18819	the	_	_	_	_	
145-43	18820-18824	stop	_	_	_	_	
145-44	18825-18831	backup	_	_	_	_	
145-45	18832-18838	record	_	_	_	_	
145-46	18839-18841	is	_	_	_	_	
145-47	18842-18849	written	_	_	_	_	
145-48	18850-18852	to	_	_	_	_	
145-49	18853-18856	the	_	_	_	_	
145-50	18857-18860	WAL	_	_	_	_	
145-51	18860-18861	.	_	_	_	_	

#Text=By default, pg_stop_backup will wait until all WAL has been archived, which can take some time.
146-1	18862-18864	By	_	_	_	_	
146-2	18865-18872	default	_	_	_	_	
146-3	18872-18873	,	_	_	_	_	
146-4	18874-18888	pg_stop_backup	_	_	_	_	
146-5	18889-18893	will	_	_	_	_	
146-6	18894-18898	wait	_	_	_	_	
146-7	18899-18904	until	_	_	_	_	
146-8	18905-18908	all	_	_	_	_	
146-9	18909-18912	WAL	_	_	_	_	
146-10	18913-18916	has	_	_	_	_	
146-11	18917-18921	been	_	_	_	_	
146-12	18922-18930	archived	_	_	_	_	
146-13	18930-18931	,	_	_	_	_	
146-14	18932-18937	which	_	_	_	_	
146-15	18938-18941	can	_	_	_	_	
146-16	18942-18946	take	_	_	_	_	
146-17	18947-18951	some	_	_	_	_	
146-18	18952-18956	time	_	_	_	_	
146-19	18956-18957	.	_	_	_	_	

#Text=This option must be used with caution: if WAL archiving is not monitored correctly then the backup might not include all of the WAL files and will therefore be incomplete and not able to be restored.
#Text=25.3.3.2. 
147-1	18958-18962	This	_	_	_	_	
147-2	18963-18969	option	_	_	_	_	
147-3	18970-18974	must	_	_	_	_	
147-4	18975-18977	be	_	_	_	_	
147-5	18978-18982	used	_	_	_	_	
147-6	18983-18987	with	_	_	_	_	
147-7	18988-18995	caution	_	_	_	_	
147-8	18995-18996	:	_	_	_	_	
147-9	18997-18999	if	_	_	_	_	
147-10	19000-19003	WAL	_	_	_	_	
147-11	19004-19013	archiving	_	_	_	_	
147-12	19014-19016	is	_	_	_	_	
147-13	19017-19020	not	_	_	_	_	
147-14	19021-19030	monitored	_	_	_	_	
147-15	19031-19040	correctly	_	_	_	_	
147-16	19041-19045	then	_	_	_	_	
147-17	19046-19049	the	_	_	_	_	
147-18	19050-19056	backup	_	_	_	_	
147-19	19057-19062	might	_	_	_	_	
147-20	19063-19066	not	_	_	_	_	
147-21	19067-19074	include	_	_	_	_	
147-22	19075-19078	all	_	_	_	_	
147-23	19079-19081	of	_	_	_	_	
147-24	19082-19085	the	_	_	_	_	
147-25	19086-19089	WAL	_	_	_	_	
147-26	19090-19095	files	_	_	_	_	
147-27	19096-19099	and	_	_	_	_	
147-28	19100-19104	will	_	_	_	_	
147-29	19105-19114	therefore	_	_	_	_	
147-30	19115-19117	be	_	_	_	_	
147-31	19118-19128	incomplete	_	_	_	_	
147-32	19129-19132	and	_	_	_	_	
147-33	19133-19136	not	_	_	_	_	
147-34	19137-19141	able	_	_	_	_	
147-35	19142-19144	to	_	_	_	_	
147-36	19145-19147	be	_	_	_	_	
147-37	19148-19156	restored	_	_	_	_	
147-38	19156-19157	.	_	_	_	_	
147-39	19158-19166	25.3.3.2	_	_	_	_	
147-40	19166-19167	.	_	_	_	_	
147-41	19167-19168	 	_	_	_	_	

#Text=Making an Exclusive Low-Level Backup
#Text=Note
#Text=The exclusive backup method is deprecated and should be avoided.
148-1	19168-19174	Making	_	_	_	_	
148-2	19175-19177	an	_	_	_	_	
148-3	19178-19187	Exclusive	_	_	_	_	
148-4	19188-19197	Low-Level	_	_	_	_	
148-5	19198-19204	Backup	_	_	_	_	
148-6	19205-19209	Note	_	_	_	_	
148-7	19210-19213	The	_	_	_	_	
148-8	19214-19223	exclusive	_	_	_	_	
148-9	19224-19230	backup	_	_	_	_	
148-10	19231-19237	method	_	_	_	_	
148-11	19238-19240	is	_	_	_	_	
148-12	19241-19251	deprecated	_	_	_	_	
148-13	19252-19255	and	_	_	_	_	
148-14	19256-19262	should	_	_	_	_	
148-15	19263-19265	be	_	_	_	_	
148-16	19266-19273	avoided	_	_	_	_	
148-17	19273-19274	.	_	_	_	_	

#Text=Prior to PostgreSQL 9.6, this was the only low-level method available, but it is now recommended that all users upgrade their scripts to use non-exclusive backups.
149-1	19275-19280	Prior	_	_	_	_	
149-2	19281-19283	to	_	_	_	_	
149-3	19284-19294	PostgreSQL	_	_	_	_	
149-4	19295-19298	9.6	_	_	_	_	
149-5	19298-19299	,	_	_	_	_	
149-6	19300-19304	this	_	_	_	_	
149-7	19305-19308	was	_	_	_	_	
149-8	19309-19312	the	_	_	_	_	
149-9	19313-19317	only	_	_	_	_	
149-10	19318-19327	low-level	_	_	_	_	
149-11	19328-19334	method	_	_	_	_	
149-12	19335-19344	available	_	_	_	_	
149-13	19344-19345	,	_	_	_	_	
149-14	19346-19349	but	_	_	_	_	
149-15	19350-19352	it	_	_	_	_	
149-16	19353-19355	is	_	_	_	_	
149-17	19356-19359	now	_	_	_	_	
149-18	19360-19371	recommended	_	_	_	_	
149-19	19372-19376	that	_	_	_	_	
149-20	19377-19380	all	_	_	_	_	
149-21	19381-19386	users	_	_	_	_	
149-22	19387-19394	upgrade	_	_	_	_	
149-23	19395-19400	their	_	_	_	_	
149-24	19401-19408	scripts	_	_	_	_	
149-25	19409-19411	to	_	_	_	_	
149-26	19412-19415	use	_	_	_	_	
149-27	19416-19429	non-exclusive	_	_	_	_	
149-28	19430-19437	backups	_	_	_	_	
149-29	19437-19438	.	_	_	_	_	

#Text=The process for an exclusive backup is mostly the same as for a non-exclusive one, but it differs in a few key steps.
150-1	19439-19442	The	_	_	_	_	
150-2	19443-19450	process	_	_	_	_	
150-3	19451-19454	for	_	_	_	_	
150-4	19455-19457	an	_	_	_	_	
150-5	19458-19467	exclusive	_	_	_	_	
150-6	19468-19474	backup	_	_	_	_	
150-7	19475-19477	is	_	_	_	_	
150-8	19478-19484	mostly	_	_	_	_	
150-9	19485-19488	the	_	_	_	_	
150-10	19489-19493	same	_	_	_	_	
150-11	19494-19496	as	_	_	_	_	
150-12	19497-19500	for	_	_	_	_	
150-13	19501-19502	a	_	_	_	_	
150-14	19503-19516	non-exclusive	_	_	_	_	
150-15	19517-19520	one	_	_	_	_	
150-16	19520-19521	,	_	_	_	_	
150-17	19522-19525	but	_	_	_	_	
150-18	19526-19528	it	_	_	_	_	
150-19	19529-19536	differs	_	_	_	_	
150-20	19537-19539	in	_	_	_	_	
150-21	19540-19541	a	_	_	_	_	
150-22	19542-19545	few	_	_	_	_	
150-23	19546-19549	key	_	_	_	_	
150-24	19550-19555	steps	_	_	_	_	
150-25	19555-19556	.	_	_	_	_	

#Text=This type of backup can only be taken on a primary and does not allow concurrent backups.
151-1	19557-19561	This	_	_	_	_	
151-2	19562-19566	type	_	_	_	_	
151-3	19567-19569	of	_	_	_	_	
151-4	19570-19576	backup	_	_	_	_	
151-5	19577-19580	can	_	_	_	_	
151-6	19581-19585	only	_	_	_	_	
151-7	19586-19588	be	_	_	_	_	
151-8	19589-19594	taken	_	_	_	_	
151-9	19595-19597	on	_	_	_	_	
151-10	19598-19599	a	_	_	_	_	
151-11	19600-19607	primary	_	_	_	_	
151-12	19608-19611	and	_	_	_	_	
151-13	19612-19616	does	_	_	_	_	
151-14	19617-19620	not	_	_	_	_	
151-15	19621-19626	allow	_	_	_	_	
151-16	19627-19637	concurrent	_	_	_	_	
151-17	19638-19645	backups	_	_	_	_	
151-18	19645-19646	.	_	_	_	_	

#Text=Moreover, because it creates a backup label file, as described below, it can block automatic restart of the master server after a crash.
152-1	19647-19655	Moreover	_	_	_	_	
152-2	19655-19656	,	_	_	_	_	
152-3	19657-19664	because	_	_	_	_	
152-4	19665-19667	it	_	_	_	_	
152-5	19668-19675	creates	_	_	_	_	
152-6	19676-19677	a	_	_	_	_	
152-7	19678-19684	backup	_	_	_	_	
152-8	19685-19690	label	_	_	_	_	
152-9	19691-19695	file	_	_	_	_	
152-10	19695-19696	,	_	_	_	_	
152-11	19697-19699	as	_	_	_	_	
152-12	19700-19709	described	_	_	_	_	
152-13	19710-19715	below	_	_	_	_	
152-14	19715-19716	,	_	_	_	_	
152-15	19717-19719	it	_	_	_	_	
152-16	19720-19723	can	_	_	_	_	
152-17	19724-19729	block	_	_	_	_	
152-18	19730-19739	automatic	_	_	_	_	
152-19	19740-19747	restart	_	_	_	_	
152-20	19748-19750	of	_	_	_	_	
152-21	19751-19754	the	_	_	_	_	
152-22	19755-19761	master	_	_	_	_	
152-23	19762-19768	server	_	_	_	_	
152-24	19769-19774	after	_	_	_	_	
152-25	19775-19776	a	_	_	_	_	
152-26	19777-19782	crash	_	_	_	_	
152-27	19782-19783	.	_	_	_	_	

#Text=On the other hand, the erroneous removal of this file from a backup or standby is a common mistake, which can result in serious data corruption.
153-1	19784-19786	On	_	_	_	_	
153-2	19787-19790	the	_	_	_	_	
153-3	19791-19796	other	_	_	_	_	
153-4	19797-19801	hand	_	_	_	_	
153-5	19801-19802	,	_	_	_	_	
153-6	19803-19806	the	_	_	_	_	
153-7	19807-19816	erroneous	_	_	_	_	
153-8	19817-19824	removal	_	_	_	_	
153-9	19825-19827	of	_	_	_	_	
153-10	19828-19832	this	_	_	_	_	
153-11	19833-19837	file	_	_	_	_	
153-12	19838-19842	from	_	_	_	_	
153-13	19843-19844	a	_	_	_	_	
153-14	19845-19851	backup	_	_	_	_	
153-15	19852-19854	or	_	_	_	_	
153-16	19855-19862	standby	_	_	_	_	
153-17	19863-19865	is	_	_	_	_	
153-18	19866-19867	a	_	_	_	_	
153-19	19868-19874	common	_	_	_	_	
153-20	19875-19882	mistake	_	_	_	_	
153-21	19882-19883	,	_	_	_	_	
153-22	19884-19889	which	_	_	_	_	
153-23	19890-19893	can	_	_	_	_	
153-24	19894-19900	result	_	_	_	_	
153-25	19901-19903	in	_	_	_	_	
153-26	19904-19911	serious	_	_	_	_	
153-27	19912-19916	data	_	_	_	_	
153-28	19917-19927	corruption	_	_	_	_	
153-29	19927-19928	.	_	_	_	_	

#Text=If it is necessary to use this method, the following steps may be used.
154-1	19929-19931	If	_	_	_	_	
154-2	19932-19934	it	_	_	_	_	
154-3	19935-19937	is	_	_	_	_	
154-4	19938-19947	necessary	_	_	_	_	
154-5	19948-19950	to	_	_	_	_	
154-6	19951-19954	use	_	_	_	_	
154-7	19955-19959	this	_	_	_	_	
154-8	19960-19966	method	_	_	_	_	
154-9	19966-19967	,	_	_	_	_	
154-10	19968-19971	the	_	_	_	_	
154-11	19972-19981	following	_	_	_	_	
154-12	19982-19987	steps	_	_	_	_	
154-13	19988-19991	may	_	_	_	_	
154-14	19992-19994	be	_	_	_	_	
154-15	19995-19999	used	_	_	_	_	
154-16	19999-20000	.	_	_	_	_	

#Text=Ensure that WAL archiving is enabled and working.
155-1	20001-20007	Ensure	_	_	_	_	
155-2	20008-20012	that	_	_	_	_	
155-3	20013-20016	WAL	_	_	_	_	
155-4	20017-20026	archiving	_	_	_	_	
155-5	20027-20029	is	_	_	_	_	
155-6	20030-20037	enabled	_	_	_	_	
155-7	20038-20041	and	_	_	_	_	
155-8	20042-20049	working	_	_	_	_	
155-9	20049-20050	.	_	_	_	_	

#Text=Connect to the server (it does not matter which database) as a user with rights to run pg_start_backup (superuser, or a user who has been granted EXECUTE on the function) and issue the command:
#Text=SELECT pg_start_backup('label');
#Text=where label is any string you want to use to uniquely identify this backup operation. pg_start_backup creates a backup label file, called backup_label, in the cluster directory with information about your backup, including the start time and label string.
156-1	20051-20058	Connect	_	_	_	_	
156-2	20059-20061	to	_	_	_	_	
156-3	20062-20065	the	_	_	_	_	
156-4	20066-20072	server	_	_	_	_	
156-5	20073-20074	(	_	_	_	_	
156-6	20074-20076	it	_	_	_	_	
156-7	20077-20081	does	_	_	_	_	
156-8	20082-20085	not	_	_	_	_	
156-9	20086-20092	matter	_	_	_	_	
156-10	20093-20098	which	_	_	_	_	
156-11	20099-20107	database	_	_	_	_	
156-12	20107-20108	)	_	_	_	_	
156-13	20109-20111	as	_	_	_	_	
156-14	20112-20113	a	_	_	_	_	
156-15	20114-20118	user	_	_	_	_	
156-16	20119-20123	with	_	_	_	_	
156-17	20124-20130	rights	_	_	_	_	
156-18	20131-20133	to	_	_	_	_	
156-19	20134-20137	run	_	_	_	_	
156-20	20138-20153	pg_start_backup	_	_	_	_	
156-21	20154-20155	(	_	_	_	_	
156-22	20155-20164	superuser	_	_	_	_	
156-23	20164-20165	,	_	_	_	_	
156-24	20166-20168	or	_	_	_	_	
156-25	20169-20170	a	_	_	_	_	
156-26	20171-20175	user	_	_	_	_	
156-27	20176-20179	who	_	_	_	_	
156-28	20180-20183	has	_	_	_	_	
156-29	20184-20188	been	_	_	_	_	
156-30	20189-20196	granted	_	_	_	_	
156-31	20197-20204	EXECUTE	_	_	_	_	
156-32	20205-20207	on	_	_	_	_	
156-33	20208-20211	the	_	_	_	_	
156-34	20212-20220	function	_	_	_	_	
156-35	20220-20221	)	_	_	_	_	
156-36	20222-20225	and	_	_	_	_	
156-37	20226-20231	issue	_	_	_	_	
156-38	20232-20235	the	_	_	_	_	
156-39	20236-20243	command	_	_	_	_	
156-40	20243-20244	:	_	_	_	_	
156-41	20245-20251	SELECT	_	_	_	_	
156-42	20252-20267	pg_start_backup	_	_	_	_	
156-43	20267-20268	(	_	_	_	_	
156-44	20268-20269	'	_	_	_	_	
156-45	20269-20274	label	_	_	_	_	
156-46	20274-20275	'	_	_	_	_	
156-47	20275-20276	)	_	_	_	_	
156-48	20276-20277	;	_	_	_	_	
156-49	20278-20283	where	_	_	_	_	
156-50	20284-20289	label	_	_	_	_	
156-51	20290-20292	is	_	_	_	_	
156-52	20293-20296	any	_	_	_	_	
156-53	20297-20303	string	_	_	_	_	
156-54	20304-20307	you	_	_	_	_	
156-55	20308-20312	want	_	_	_	_	
156-56	20313-20315	to	_	_	_	_	
156-57	20316-20319	use	_	_	_	_	
156-58	20320-20322	to	_	_	_	_	
156-59	20323-20331	uniquely	_	_	_	_	
156-60	20332-20340	identify	_	_	_	_	
156-61	20341-20345	this	_	_	_	_	
156-62	20346-20352	backup	_	_	_	_	
156-63	20353-20362	operation	_	_	_	_	
156-64	20362-20363	.	_	_	_	_	
156-65	20364-20379	pg_start_backup	_	_	_	_	
156-66	20380-20387	creates	_	_	_	_	
156-67	20388-20389	a	_	_	_	_	
156-68	20390-20396	backup	_	_	_	_	
156-69	20397-20402	label	_	_	_	_	
156-70	20403-20407	file	_	_	_	_	
156-71	20407-20408	,	_	_	_	_	
156-72	20409-20415	called	_	_	_	_	
156-73	20416-20428	backup_label	_	_	_	_	
156-74	20428-20429	,	_	_	_	_	
156-75	20430-20432	in	_	_	_	_	
156-76	20433-20436	the	_	_	_	_	
156-77	20437-20444	cluster	_	_	_	_	
156-78	20445-20454	directory	_	_	_	_	
156-79	20455-20459	with	_	_	_	_	
156-80	20460-20471	information	_	_	_	_	
156-81	20472-20477	about	_	_	_	_	
156-82	20478-20482	your	_	_	_	_	
156-83	20483-20489	backup	_	_	_	_	
156-84	20489-20490	,	_	_	_	_	
156-85	20491-20500	including	_	_	_	_	
156-86	20501-20504	the	_	_	_	_	
156-87	20505-20510	start	_	_	_	_	
156-88	20511-20515	time	_	_	_	_	
156-89	20516-20519	and	_	_	_	_	
156-90	20520-20525	label	_	_	_	_	
156-91	20526-20532	string	_	_	_	_	
156-92	20532-20533	.	_	_	_	_	

#Text=The function also creates a tablespace map file, called tablespace_map, in the cluster directory with information about tablespace symbolic links in pg_tblspc/ if one or more such link is present.
157-1	20534-20537	The	_	_	_	_	
157-2	20538-20546	function	_	_	_	_	
157-3	20547-20551	also	_	_	_	_	
157-4	20552-20559	creates	_	_	_	_	
157-5	20560-20561	a	_	_	_	_	
157-6	20562-20572	tablespace	_	_	_	_	
157-7	20573-20576	map	_	_	_	_	
157-8	20577-20581	file	_	_	_	_	
157-9	20581-20582	,	_	_	_	_	
157-10	20583-20589	called	_	_	_	_	
157-11	20590-20604	tablespace_map	_	_	_	_	
157-12	20604-20605	,	_	_	_	_	
157-13	20606-20608	in	_	_	_	_	
157-14	20609-20612	the	_	_	_	_	
157-15	20613-20620	cluster	_	_	_	_	
157-16	20621-20630	directory	_	_	_	_	
157-17	20631-20635	with	_	_	_	_	
157-18	20636-20647	information	_	_	_	_	
157-19	20648-20653	about	_	_	_	_	
157-20	20654-20664	tablespace	_	_	_	_	
157-21	20665-20673	symbolic	_	_	_	_	
157-22	20674-20679	links	_	_	_	_	
157-23	20680-20682	in	_	_	_	_	
157-24	20683-20692	pg_tblspc	_	_	_	_	
157-25	20692-20693	/	_	_	_	_	
157-26	20694-20696	if	_	_	_	_	
157-27	20697-20700	one	_	_	_	_	
157-28	20701-20703	or	_	_	_	_	
157-29	20704-20708	more	_	_	_	_	
157-30	20709-20713	such	_	_	_	_	
157-31	20714-20718	link	_	_	_	_	
157-32	20719-20721	is	_	_	_	_	
157-33	20722-20729	present	_	_	_	_	
157-34	20729-20730	.	_	_	_	_	

#Text=Both files are critical to the integrity of the backup, should you need to restore from it.
158-1	20731-20735	Both	_	_	_	_	
158-2	20736-20741	files	_	_	_	_	
158-3	20742-20745	are	_	_	_	_	
158-4	20746-20754	critical	_	_	_	_	
158-5	20755-20757	to	_	_	_	_	
158-6	20758-20761	the	_	_	_	_	
158-7	20762-20771	integrity	_	_	_	_	
158-8	20772-20774	of	_	_	_	_	
158-9	20775-20778	the	_	_	_	_	
158-10	20779-20785	backup	_	_	_	_	
158-11	20785-20786	,	_	_	_	_	
158-12	20787-20793	should	_	_	_	_	
158-13	20794-20797	you	_	_	_	_	
158-14	20798-20802	need	_	_	_	_	
158-15	20803-20805	to	_	_	_	_	
158-16	20806-20813	restore	_	_	_	_	
158-17	20814-20818	from	_	_	_	_	
158-18	20819-20821	it	_	_	_	_	
158-19	20821-20822	.	_	_	_	_	

#Text=By default, pg_start_backup can take a long time to finish.
159-1	20823-20825	By	_	_	_	_	
159-2	20826-20833	default	_	_	_	_	
159-3	20833-20834	,	_	_	_	_	
159-4	20835-20850	pg_start_backup	_	_	_	_	
159-5	20851-20854	can	_	_	_	_	
159-6	20855-20859	take	_	_	_	_	
159-7	20860-20861	a	_	_	_	_	
159-8	20862-20866	long	_	_	_	_	
159-9	20867-20871	time	_	_	_	_	
159-10	20872-20874	to	_	_	_	_	
159-11	20875-20881	finish	_	_	_	_	
159-12	20881-20882	.	_	_	_	_	

#Text=This is because it performs a checkpoint, and the I/O required for the checkpoint will be spread out over a significant period of time, by default half your inter-checkpoint interval (see the configuration parameter checkpoint_completion_target).
160-1	20883-20887	This	_	_	_	_	
160-2	20888-20890	is	_	_	_	_	
160-3	20891-20898	because	_	_	_	_	
160-4	20899-20901	it	_	_	_	_	
160-5	20902-20910	performs	_	_	_	_	
160-6	20911-20912	a	_	_	_	_	
160-7	20913-20923	checkpoint	_	_	_	_	
160-8	20923-20924	,	_	_	_	_	
160-9	20925-20928	and	_	_	_	_	
160-10	20929-20932	the	_	_	_	_	
160-11	20933-20934	I	_	_	_	_	
160-12	20934-20935	/	_	_	_	_	
160-13	20935-20936	O	_	_	_	_	
160-14	20937-20945	required	_	_	_	_	
160-15	20946-20949	for	_	_	_	_	
160-16	20950-20953	the	_	_	_	_	
160-17	20954-20964	checkpoint	_	_	_	_	
160-18	20965-20969	will	_	_	_	_	
160-19	20970-20972	be	_	_	_	_	
160-20	20973-20979	spread	_	_	_	_	
160-21	20980-20983	out	_	_	_	_	
160-22	20984-20988	over	_	_	_	_	
160-23	20989-20990	a	_	_	_	_	
160-24	20991-21002	significant	_	_	_	_	
160-25	21003-21009	period	_	_	_	_	
160-26	21010-21012	of	_	_	_	_	
160-27	21013-21017	time	_	_	_	_	
160-28	21017-21018	,	_	_	_	_	
160-29	21019-21021	by	_	_	_	_	
160-30	21022-21029	default	_	_	_	_	
160-31	21030-21034	half	_	_	_	_	
160-32	21035-21039	your	_	_	_	_	
160-33	21040-21056	inter-checkpoint	_	_	_	_	
160-34	21057-21065	interval	_	_	_	_	
160-35	21066-21067	(	_	_	_	_	
160-36	21067-21070	see	_	_	_	_	
160-37	21071-21074	the	_	_	_	_	
160-38	21075-21088	configuration	_	_	_	_	
160-39	21089-21098	parameter	_	_	_	_	
160-40	21099-21127	checkpoint_completion_target	_	_	_	_	
160-41	21127-21128	)	_	_	_	_	
160-42	21128-21129	.	_	_	_	_	

#Text=This is usually what you want, because it minimizes the impact on query processing.
161-1	21130-21134	This	_	_	_	_	
161-2	21135-21137	is	_	_	_	_	
161-3	21138-21145	usually	_	_	_	_	
161-4	21146-21150	what	_	_	_	_	
161-5	21151-21154	you	_	_	_	_	
161-6	21155-21159	want	_	_	_	_	
161-7	21159-21160	,	_	_	_	_	
161-8	21161-21168	because	_	_	_	_	
161-9	21169-21171	it	_	_	_	_	
161-10	21172-21181	minimizes	_	_	_	_	
161-11	21182-21185	the	_	_	_	_	
161-12	21186-21192	impact	_	_	_	_	
161-13	21193-21195	on	_	_	_	_	
161-14	21196-21201	query	_	_	_	_	
161-15	21202-21212	processing	_	_	_	_	
161-16	21212-21213	.	_	_	_	_	

#Text=If you want to start the backup as soon as possible, use:
#Text=SELECT pg_start_backup('label', true);
#Text=This forces the checkpoint to be done as quickly as possible.
162-1	21214-21216	If	_	_	_	_	
162-2	21217-21220	you	_	_	_	_	
162-3	21221-21225	want	_	_	_	_	
162-4	21226-21228	to	_	_	_	_	
162-5	21229-21234	start	_	_	_	_	
162-6	21235-21238	the	_	_	_	_	
162-7	21239-21245	backup	_	_	_	_	
162-8	21246-21248	as	_	_	_	_	
162-9	21249-21253	soon	_	_	_	_	
162-10	21254-21256	as	_	_	_	_	
162-11	21257-21265	possible	_	_	_	_	
162-12	21265-21266	,	_	_	_	_	
162-13	21267-21270	use	_	_	_	_	
162-14	21270-21271	:	_	_	_	_	
162-15	21272-21278	SELECT	_	_	_	_	
162-16	21279-21294	pg_start_backup	_	_	_	_	
162-17	21294-21295	(	_	_	_	_	
162-18	21295-21296	'	_	_	_	_	
162-19	21296-21301	label	_	_	_	_	
162-20	21301-21302	'	_	_	_	_	
162-21	21302-21303	,	_	_	_	_	
162-22	21304-21308	true	_	_	_	_	
162-23	21308-21309	)	_	_	_	_	
162-24	21309-21310	;	_	_	_	_	
162-25	21311-21315	This	_	_	_	_	
162-26	21316-21322	forces	_	_	_	_	
162-27	21323-21326	the	_	_	_	_	
162-28	21327-21337	checkpoint	_	_	_	_	
162-29	21338-21340	to	_	_	_	_	
162-30	21341-21343	be	_	_	_	_	
162-31	21344-21348	done	_	_	_	_	
162-32	21349-21351	as	_	_	_	_	
162-33	21352-21359	quickly	_	_	_	_	
162-34	21360-21362	as	_	_	_	_	
162-35	21363-21371	possible	_	_	_	_	
162-36	21371-21372	.	_	_	_	_	

#Text=Perform the backup, using any convenient file-system-backup tool such as tar or cpio (not pg_dump or pg_dumpall).
163-1	21373-21380	Perform	_	_	_	_	
163-2	21381-21384	the	_	_	_	_	
163-3	21385-21391	backup	_	_	_	_	
163-4	21391-21392	,	_	_	_	_	
163-5	21393-21398	using	_	_	_	_	
163-6	21399-21402	any	_	_	_	_	
163-7	21403-21413	convenient	_	_	_	_	
163-8	21414-21432	file-system-backup	_	_	_	_	
163-9	21433-21437	tool	_	_	_	_	
163-10	21438-21442	such	_	_	_	_	
163-11	21443-21445	as	_	_	_	_	
163-12	21446-21449	tar	_	_	_	_	
163-13	21450-21452	or	_	_	_	_	
163-14	21453-21457	cpio	_	_	_	_	
163-15	21458-21459	(	_	_	_	_	
163-16	21459-21462	not	_	_	_	_	
163-17	21463-21470	pg_dump	_	_	_	_	
163-18	21471-21473	or	_	_	_	_	
163-19	21474-21484	pg_dumpall	_	_	_	_	
163-20	21484-21485	)	_	_	_	_	
163-21	21485-21486	.	_	_	_	_	

#Text=It is neither necessary nor desirable to stop normal operation of the database while you do this.
164-1	21487-21489	It	_	_	_	_	
164-2	21490-21492	is	_	_	_	_	
164-3	21493-21500	neither	_	_	_	_	
164-4	21501-21510	necessary	_	_	_	_	
164-5	21511-21514	nor	_	_	_	_	
164-6	21515-21524	desirable	_	_	_	_	
164-7	21525-21527	to	_	_	_	_	
164-8	21528-21532	stop	_	_	_	_	
164-9	21533-21539	normal	_	_	_	_	
164-10	21540-21549	operation	_	_	_	_	
164-11	21550-21552	of	_	_	_	_	
164-12	21553-21556	the	_	_	_	_	
164-13	21557-21565	database	_	_	_	_	
164-14	21566-21571	while	_	_	_	_	
164-15	21572-21575	you	_	_	_	_	
164-16	21576-21578	do	_	_	_	_	
164-17	21579-21583	this	_	_	_	_	
164-18	21583-21584	.	_	_	_	_	

#Text=See Section 25.3.3.3 for things to consider during this backup.
165-1	21585-21588	See	_	_	_	_	
165-2	21589-21596	Section	_	_	_	_	
165-3	21596-21597	 	_	_	_	_	
165-4	21597-21605	25.3.3.3	_	_	_	_	
165-5	21606-21609	for	_	_	_	_	
165-6	21610-21616	things	_	_	_	_	
165-7	21617-21619	to	_	_	_	_	
165-8	21620-21628	consider	_	_	_	_	
165-9	21629-21635	during	_	_	_	_	
165-10	21636-21640	this	_	_	_	_	
165-11	21641-21647	backup	_	_	_	_	
165-12	21647-21648	.	_	_	_	_	

#Text=As noted above, if the server crashes during the backup it may not be possible to restart until the backup_label file has been manually deleted from the PGDATA directory.
166-1	21649-21651	As	_	_	_	_	
166-2	21652-21657	noted	_	_	_	_	
166-3	21658-21663	above	_	_	_	_	
166-4	21663-21664	,	_	_	_	_	
166-5	21665-21667	if	_	_	_	_	
166-6	21668-21671	the	_	_	_	_	
166-7	21672-21678	server	_	_	_	_	
166-8	21679-21686	crashes	_	_	_	_	
166-9	21687-21693	during	_	_	_	_	
166-10	21694-21697	the	_	_	_	_	
166-11	21698-21704	backup	_	_	_	_	
166-12	21705-21707	it	_	_	_	_	
166-13	21708-21711	may	_	_	_	_	
166-14	21712-21715	not	_	_	_	_	
166-15	21716-21718	be	_	_	_	_	
166-16	21719-21727	possible	_	_	_	_	
166-17	21728-21730	to	_	_	_	_	
166-18	21731-21738	restart	_	_	_	_	
166-19	21739-21744	until	_	_	_	_	
166-20	21745-21748	the	_	_	_	_	
166-21	21749-21761	backup_label	_	_	_	_	
166-22	21762-21766	file	_	_	_	_	
166-23	21767-21770	has	_	_	_	_	
166-24	21771-21775	been	_	_	_	_	
166-25	21776-21784	manually	_	_	_	_	
166-26	21785-21792	deleted	_	_	_	_	
166-27	21793-21797	from	_	_	_	_	
166-28	21798-21801	the	_	_	_	_	
166-29	21802-21808	PGDATA	_	_	_	_	
166-30	21809-21818	directory	_	_	_	_	
166-31	21818-21819	.	_	_	_	_	

#Text=Note that it is very important to never remove the backup_label file when restoring a backup, because this will result in corruption.
167-1	21820-21824	Note	_	_	_	_	
167-2	21825-21829	that	_	_	_	_	
167-3	21830-21832	it	_	_	_	_	
167-4	21833-21835	is	_	_	_	_	
167-5	21836-21840	very	_	_	_	_	
167-6	21841-21850	important	_	_	_	_	
167-7	21851-21853	to	_	_	_	_	
167-8	21854-21859	never	_	_	_	_	
167-9	21860-21866	remove	_	_	_	_	
167-10	21867-21870	the	_	_	_	_	
167-11	21871-21883	backup_label	_	_	_	_	
167-12	21884-21888	file	_	_	_	_	
167-13	21889-21893	when	_	_	_	_	
167-14	21894-21903	restoring	_	_	_	_	
167-15	21904-21905	a	_	_	_	_	
167-16	21906-21912	backup	_	_	_	_	
167-17	21912-21913	,	_	_	_	_	
167-18	21914-21921	because	_	_	_	_	
167-19	21922-21926	this	_	_	_	_	
167-20	21927-21931	will	_	_	_	_	
167-21	21932-21938	result	_	_	_	_	
167-22	21939-21941	in	_	_	_	_	
167-23	21942-21952	corruption	_	_	_	_	
167-24	21952-21953	.	_	_	_	_	

#Text=Confusion about when it is appropriate to remove this file is a common cause of data corruption when using this method; be very certain that you remove the file only on an existing master and never when building a standby or restoring a backup, even if you are building a standby that will subsequently be promoted to a new master.
168-1	21954-21963	Confusion	_	_	_	_	
168-2	21964-21969	about	_	_	_	_	
168-3	21970-21974	when	_	_	_	_	
168-4	21975-21977	it	_	_	_	_	
168-5	21978-21980	is	_	_	_	_	
168-6	21981-21992	appropriate	_	_	_	_	
168-7	21993-21995	to	_	_	_	_	
168-8	21996-22002	remove	_	_	_	_	
168-9	22003-22007	this	_	_	_	_	
168-10	22008-22012	file	_	_	_	_	
168-11	22013-22015	is	_	_	_	_	
168-12	22016-22017	a	_	_	_	_	
168-13	22018-22024	common	_	_	_	_	
168-14	22025-22030	cause	_	_	_	_	
168-15	22031-22033	of	_	_	_	_	
168-16	22034-22038	data	_	_	_	_	
168-17	22039-22049	corruption	_	_	_	_	
168-18	22050-22054	when	_	_	_	_	
168-19	22055-22060	using	_	_	_	_	
168-20	22061-22065	this	_	_	_	_	
168-21	22066-22072	method	_	_	_	_	
168-22	22072-22073	;	_	_	_	_	
168-23	22074-22076	be	_	_	_	_	
168-24	22077-22081	very	_	_	_	_	
168-25	22082-22089	certain	_	_	_	_	
168-26	22090-22094	that	_	_	_	_	
168-27	22095-22098	you	_	_	_	_	
168-28	22099-22105	remove	_	_	_	_	
168-29	22106-22109	the	_	_	_	_	
168-30	22110-22114	file	_	_	_	_	
168-31	22115-22119	only	_	_	_	_	
168-32	22120-22122	on	_	_	_	_	
168-33	22123-22125	an	_	_	_	_	
168-34	22126-22134	existing	_	_	_	_	
168-35	22135-22141	master	_	_	_	_	
168-36	22142-22145	and	_	_	_	_	
168-37	22146-22151	never	_	_	_	_	
168-38	22152-22156	when	_	_	_	_	
168-39	22157-22165	building	_	_	_	_	
168-40	22166-22167	a	_	_	_	_	
168-41	22168-22175	standby	_	_	_	_	
168-42	22176-22178	or	_	_	_	_	
168-43	22179-22188	restoring	_	_	_	_	
168-44	22189-22190	a	_	_	_	_	
168-45	22191-22197	backup	_	_	_	_	
168-46	22197-22198	,	_	_	_	_	
168-47	22199-22203	even	_	_	_	_	
168-48	22204-22206	if	_	_	_	_	
168-49	22207-22210	you	_	_	_	_	
168-50	22211-22214	are	_	_	_	_	
168-51	22215-22223	building	_	_	_	_	
168-52	22224-22225	a	_	_	_	_	
168-53	22226-22233	standby	_	_	_	_	
168-54	22234-22238	that	_	_	_	_	
168-55	22239-22243	will	_	_	_	_	
168-56	22244-22256	subsequently	_	_	_	_	
168-57	22257-22259	be	_	_	_	_	
168-58	22260-22268	promoted	_	_	_	_	
168-59	22269-22271	to	_	_	_	_	
168-60	22272-22273	a	_	_	_	_	
168-61	22274-22277	new	_	_	_	_	
168-62	22278-22284	master	_	_	_	_	
168-63	22284-22285	.	_	_	_	_	

#Text=Again connect to the database as a user with rights to run pg_stop_backup (superuser, or a user who has been granted EXECUTE on the function), and issue the command:
#Text=SELECT pg_stop_backup();
#Text=This function terminates backup mode and performs an automatic switch to the next WAL segment.
169-1	22286-22291	Again	_	_	_	_	
169-2	22292-22299	connect	_	_	_	_	
169-3	22300-22302	to	_	_	_	_	
169-4	22303-22306	the	_	_	_	_	
169-5	22307-22315	database	_	_	_	_	
169-6	22316-22318	as	_	_	_	_	
169-7	22319-22320	a	_	_	_	_	
169-8	22321-22325	user	_	_	_	_	
169-9	22326-22330	with	_	_	_	_	
169-10	22331-22337	rights	_	_	_	_	
169-11	22338-22340	to	_	_	_	_	
169-12	22341-22344	run	_	_	_	_	
169-13	22345-22359	pg_stop_backup	_	_	_	_	
169-14	22360-22361	(	_	_	_	_	
169-15	22361-22370	superuser	_	_	_	_	
169-16	22370-22371	,	_	_	_	_	
169-17	22372-22374	or	_	_	_	_	
169-18	22375-22376	a	_	_	_	_	
169-19	22377-22381	user	_	_	_	_	
169-20	22382-22385	who	_	_	_	_	
169-21	22386-22389	has	_	_	_	_	
169-22	22390-22394	been	_	_	_	_	
169-23	22395-22402	granted	_	_	_	_	
169-24	22403-22410	EXECUTE	_	_	_	_	
169-25	22411-22413	on	_	_	_	_	
169-26	22414-22417	the	_	_	_	_	
169-27	22418-22426	function	_	_	_	_	
169-28	22426-22427	)	_	_	_	_	
169-29	22427-22428	,	_	_	_	_	
169-30	22429-22432	and	_	_	_	_	
169-31	22433-22438	issue	_	_	_	_	
169-32	22439-22442	the	_	_	_	_	
169-33	22443-22450	command	_	_	_	_	
169-34	22450-22451	:	_	_	_	_	
169-35	22452-22458	SELECT	_	_	_	_	
169-36	22459-22473	pg_stop_backup	_	_	_	_	
169-37	22473-22474	(	_	_	_	_	
169-38	22474-22475	)	_	_	_	_	
169-39	22475-22476	;	_	_	_	_	
169-40	22477-22481	This	_	_	_	_	
169-41	22482-22490	function	_	_	_	_	
169-42	22491-22501	terminates	_	_	_	_	
169-43	22502-22508	backup	_	_	_	_	
169-44	22509-22513	mode	_	_	_	_	
169-45	22514-22517	and	_	_	_	_	
169-46	22518-22526	performs	_	_	_	_	
169-47	22527-22529	an	_	_	_	_	
169-48	22530-22539	automatic	_	_	_	_	
169-49	22540-22546	switch	_	_	_	_	
169-50	22547-22549	to	_	_	_	_	
169-51	22550-22553	the	_	_	_	_	
169-52	22554-22558	next	_	_	_	_	
169-53	22559-22562	WAL	_	_	_	_	
169-54	22563-22570	segment	_	_	_	_	
169-55	22570-22571	.	_	_	_	_	

#Text=The reason for the switch is to arrange for the last WAL segment written during the backup interval to be ready to archive.
170-1	22572-22575	The	_	_	_	_	
170-2	22576-22582	reason	_	_	_	_	
170-3	22583-22586	for	_	_	_	_	
170-4	22587-22590	the	_	_	_	_	
170-5	22591-22597	switch	_	_	_	_	
170-6	22598-22600	is	_	_	_	_	
170-7	22601-22603	to	_	_	_	_	
170-8	22604-22611	arrange	_	_	_	_	
170-9	22612-22615	for	_	_	_	_	
170-10	22616-22619	the	_	_	_	_	
170-11	22620-22624	last	_	_	_	_	
170-12	22625-22628	WAL	_	_	_	_	
170-13	22629-22636	segment	_	_	_	_	
170-14	22637-22644	written	_	_	_	_	
170-15	22645-22651	during	_	_	_	_	
170-16	22652-22655	the	_	_	_	_	
170-17	22656-22662	backup	_	_	_	_	
170-18	22663-22671	interval	_	_	_	_	
170-19	22672-22674	to	_	_	_	_	
170-20	22675-22677	be	_	_	_	_	
170-21	22678-22683	ready	_	_	_	_	
170-22	22684-22686	to	_	_	_	_	
170-23	22687-22694	archive	_	_	_	_	
170-24	22694-22695	.	_	_	_	_	

#Text=Once the WAL segment files active during the backup are archived, you are done.
171-1	22696-22700	Once	_	_	_	_	
171-2	22701-22704	the	_	_	_	_	
171-3	22705-22708	WAL	_	_	_	_	
171-4	22709-22716	segment	_	_	_	_	
171-5	22717-22722	files	_	_	_	_	
171-6	22723-22729	active	_	_	_	_	
171-7	22730-22736	during	_	_	_	_	
171-8	22737-22740	the	_	_	_	_	
171-9	22741-22747	backup	_	_	_	_	
171-10	22748-22751	are	_	_	_	_	
171-11	22752-22760	archived	_	_	_	_	
171-12	22760-22761	,	_	_	_	_	
171-13	22762-22765	you	_	_	_	_	
171-14	22766-22769	are	_	_	_	_	
171-15	22770-22774	done	_	_	_	_	
171-16	22774-22775	.	_	_	_	_	

#Text=The file identified by pg_stop_backup's result is the last segment that is required to form a complete set of backup files.
172-1	22776-22779	The	_	_	_	_	
172-2	22780-22784	file	_	_	_	_	
172-3	22785-22795	identified	_	_	_	_	
172-4	22796-22798	by	_	_	_	_	
172-5	22799-22815	pg_stop_backup's	_	_	_	_	
172-6	22816-22822	result	_	_	_	_	
172-7	22823-22825	is	_	_	_	_	
172-8	22826-22829	the	_	_	_	_	
172-9	22830-22834	last	_	_	_	_	
172-10	22835-22842	segment	_	_	_	_	
172-11	22843-22847	that	_	_	_	_	
172-12	22848-22850	is	_	_	_	_	
172-13	22851-22859	required	_	_	_	_	
172-14	22860-22862	to	_	_	_	_	
172-15	22863-22867	form	_	_	_	_	
172-16	22868-22869	a	_	_	_	_	
172-17	22870-22878	complete	_	_	_	_	
172-18	22879-22882	set	_	_	_	_	
172-19	22883-22885	of	_	_	_	_	
172-20	22886-22892	backup	_	_	_	_	
172-21	22893-22898	files	_	_	_	_	
172-22	22898-22899	.	_	_	_	_	

#Text=If archive_mode is enabled, pg_stop_backup does not return until the last segment has been archived.
173-1	22900-22902	If	_	_	_	_	
173-2	22903-22915	archive_mode	*	parameter	_	_	
173-3	22916-22918	is	_	_	_	_	
173-4	22919-22926	enabled	*	value	Associated-With	173-2	
173-5	22926-22927	,	_	_	_	_	
173-6	22928-22942	pg_stop_backup	_	_	_	_	
173-7	22943-22947	does	_	_	_	_	
173-8	22948-22951	not	_	_	_	_	
173-9	22952-22958	return	_	_	_	_	
173-10	22959-22964	until	_	_	_	_	
173-11	22965-22968	the	_	_	_	_	
173-12	22969-22973	last	_	_	_	_	
173-13	22974-22981	segment	_	_	_	_	
173-14	22982-22985	has	_	_	_	_	
173-15	22986-22990	been	_	_	_	_	
173-16	22991-22999	archived	_	_	_	_	
173-17	22999-23000	.	_	_	_	_	

#Text=Archiving of these files happens automatically since you have already configured archive_command.
174-1	23001-23010	Archiving	_	_	_	_	
174-2	23011-23013	of	_	_	_	_	
174-3	23014-23019	these	_	_	_	_	
174-4	23020-23025	files	_	_	_	_	
174-5	23026-23033	happens	_	_	_	_	
174-6	23034-23047	automatically	_	_	_	_	
174-7	23048-23053	since	_	_	_	_	
174-8	23054-23057	you	_	_	_	_	
174-9	23058-23062	have	_	_	_	_	
174-10	23063-23070	already	_	_	_	_	
174-11	23071-23081	configured	_	_	_	_	
174-12	23082-23097	archive_command	_	_	_	_	
174-13	23097-23098	.	_	_	_	_	

#Text=In most cases this happens quickly, but you are advised to monitor your archive system to ensure there are no delays.
175-1	23099-23101	In	_	_	_	_	
175-2	23102-23106	most	_	_	_	_	
175-3	23107-23112	cases	_	_	_	_	
175-4	23113-23117	this	_	_	_	_	
175-5	23118-23125	happens	_	_	_	_	
175-6	23126-23133	quickly	_	_	_	_	
175-7	23133-23134	,	_	_	_	_	
175-8	23135-23138	but	_	_	_	_	
175-9	23139-23142	you	_	_	_	_	
175-10	23143-23146	are	_	_	_	_	
175-11	23147-23154	advised	_	_	_	_	
175-12	23155-23157	to	_	_	_	_	
175-13	23158-23165	monitor	_	_	_	_	
175-14	23166-23170	your	_	_	_	_	
175-15	23171-23178	archive	_	_	_	_	
175-16	23179-23185	system	_	_	_	_	
175-17	23186-23188	to	_	_	_	_	
175-18	23189-23195	ensure	_	_	_	_	
175-19	23196-23201	there	_	_	_	_	
175-20	23202-23205	are	_	_	_	_	
175-21	23206-23208	no	_	_	_	_	
175-22	23209-23215	delays	_	_	_	_	
175-23	23215-23216	.	_	_	_	_	

#Text=If the archive process has fallen behind because of failures of the archive command, it will keep retrying until the archive succeeds and the backup is complete.
176-1	23217-23219	If	_	_	_	_	
176-2	23220-23223	the	_	_	_	_	
176-3	23224-23231	archive	_	_	_	_	
176-4	23232-23239	process	_	_	_	_	
176-5	23240-23243	has	_	_	_	_	
176-6	23244-23250	fallen	_	_	_	_	
176-7	23251-23257	behind	_	_	_	_	
176-8	23258-23265	because	_	_	_	_	
176-9	23266-23268	of	_	_	_	_	
176-10	23269-23277	failures	_	_	_	_	
176-11	23278-23280	of	_	_	_	_	
176-12	23281-23284	the	_	_	_	_	
176-13	23285-23292	archive	_	_	_	_	
176-14	23293-23300	command	_	_	_	_	
176-15	23300-23301	,	_	_	_	_	
176-16	23302-23304	it	_	_	_	_	
176-17	23305-23309	will	_	_	_	_	
176-18	23310-23314	keep	_	_	_	_	
176-19	23315-23323	retrying	_	_	_	_	
176-20	23324-23329	until	_	_	_	_	
176-21	23330-23333	the	_	_	_	_	
176-22	23334-23341	archive	_	_	_	_	
176-23	23342-23350	succeeds	_	_	_	_	
176-24	23351-23354	and	_	_	_	_	
176-25	23355-23358	the	_	_	_	_	
176-26	23359-23365	backup	_	_	_	_	
176-27	23366-23368	is	_	_	_	_	
176-28	23369-23377	complete	_	_	_	_	
176-29	23377-23378	.	_	_	_	_	

#Text=When using exclusive backup mode, it is absolutely imperative to ensure that pg_stop_backup completes successfully at the end of the backup.
177-1	23379-23383	When	_	_	_	_	
177-2	23384-23389	using	_	_	_	_	
177-3	23390-23399	exclusive	_	_	_	_	
177-4	23400-23406	backup	_	_	_	_	
177-5	23407-23411	mode	_	_	_	_	
177-6	23411-23412	,	_	_	_	_	
177-7	23413-23415	it	_	_	_	_	
177-8	23416-23418	is	_	_	_	_	
177-9	23419-23429	absolutely	_	_	_	_	
177-10	23430-23440	imperative	_	_	_	_	
177-11	23441-23443	to	_	_	_	_	
177-12	23444-23450	ensure	_	_	_	_	
177-13	23451-23455	that	_	_	_	_	
177-14	23456-23470	pg_stop_backup	_	_	_	_	
177-15	23471-23480	completes	_	_	_	_	
177-16	23481-23493	successfully	_	_	_	_	
177-17	23494-23496	at	_	_	_	_	
177-18	23497-23500	the	_	_	_	_	
177-19	23501-23504	end	_	_	_	_	
177-20	23505-23507	of	_	_	_	_	
177-21	23508-23511	the	_	_	_	_	
177-22	23512-23518	backup	_	_	_	_	
177-23	23518-23519	.	_	_	_	_	

#Text=Even if the backup itself fails, for example due to lack of disk space, failure to call pg_stop_backup will leave the server in backup mode indefinitely, causing future backups to fail and increasing the risk of a restart failure during the time that backup_label exists.
#Text=25.3.3.3. 
178-1	23520-23524	Even	_	_	_	_	
178-2	23525-23527	if	_	_	_	_	
178-3	23528-23531	the	_	_	_	_	
178-4	23532-23538	backup	_	_	_	_	
178-5	23539-23545	itself	_	_	_	_	
178-6	23546-23551	fails	_	_	_	_	
178-7	23551-23552	,	_	_	_	_	
178-8	23553-23556	for	_	_	_	_	
178-9	23557-23564	example	_	_	_	_	
178-10	23565-23568	due	_	_	_	_	
178-11	23569-23571	to	_	_	_	_	
178-12	23572-23576	lack	_	_	_	_	
178-13	23577-23579	of	_	_	_	_	
178-14	23580-23584	disk	_	_	_	_	
178-15	23585-23590	space	_	_	_	_	
178-16	23590-23591	,	_	_	_	_	
178-17	23592-23599	failure	_	_	_	_	
178-18	23600-23602	to	_	_	_	_	
178-19	23603-23607	call	_	_	_	_	
178-20	23608-23622	pg_stop_backup	_	_	_	_	
178-21	23623-23627	will	_	_	_	_	
178-22	23628-23633	leave	_	_	_	_	
178-23	23634-23637	the	_	_	_	_	
178-24	23638-23644	server	_	_	_	_	
178-25	23645-23647	in	_	_	_	_	
178-26	23648-23654	backup	_	_	_	_	
178-27	23655-23659	mode	_	_	_	_	
178-28	23660-23672	indefinitely	_	_	_	_	
178-29	23672-23673	,	_	_	_	_	
178-30	23674-23681	causing	_	_	_	_	
178-31	23682-23688	future	_	_	_	_	
178-32	23689-23696	backups	_	_	_	_	
178-33	23697-23699	to	_	_	_	_	
178-34	23700-23704	fail	_	_	_	_	
178-35	23705-23708	and	_	_	_	_	
178-36	23709-23719	increasing	_	_	_	_	
178-37	23720-23723	the	_	_	_	_	
178-38	23724-23728	risk	_	_	_	_	
178-39	23729-23731	of	_	_	_	_	
178-40	23732-23733	a	_	_	_	_	
178-41	23734-23741	restart	_	_	_	_	
178-42	23742-23749	failure	_	_	_	_	
178-43	23750-23756	during	_	_	_	_	
178-44	23757-23760	the	_	_	_	_	
178-45	23761-23765	time	_	_	_	_	
178-46	23766-23770	that	_	_	_	_	
178-47	23771-23783	backup_label	_	_	_	_	
178-48	23784-23790	exists	_	_	_	_	
178-49	23790-23791	.	_	_	_	_	
178-50	23792-23800	25.3.3.3	_	_	_	_	
178-51	23800-23801	.	_	_	_	_	
178-52	23801-23802	 	_	_	_	_	

#Text=Backing Up the Data Directory
#Text=Some file system backup tools emit warnings or errors if the files they are trying to copy change while the copy proceeds.
179-1	23802-23809	Backing	_	_	_	_	
179-2	23810-23812	Up	_	_	_	_	
179-3	23813-23816	the	_	_	_	_	
179-4	23817-23821	Data	_	_	_	_	
179-5	23822-23831	Directory	_	_	_	_	
179-6	23832-23836	Some	_	_	_	_	
179-7	23837-23841	file	_	_	_	_	
179-8	23842-23848	system	_	_	_	_	
179-9	23849-23855	backup	_	_	_	_	
179-10	23856-23861	tools	_	_	_	_	
179-11	23862-23866	emit	_	_	_	_	
179-12	23867-23875	warnings	_	_	_	_	
179-13	23876-23878	or	_	_	_	_	
179-14	23879-23885	errors	_	_	_	_	
179-15	23886-23888	if	_	_	_	_	
179-16	23889-23892	the	_	_	_	_	
179-17	23893-23898	files	_	_	_	_	
179-18	23899-23903	they	_	_	_	_	
179-19	23904-23907	are	_	_	_	_	
179-20	23908-23914	trying	_	_	_	_	
179-21	23915-23917	to	_	_	_	_	
179-22	23918-23922	copy	_	_	_	_	
179-23	23923-23929	change	_	_	_	_	
179-24	23930-23935	while	_	_	_	_	
179-25	23936-23939	the	_	_	_	_	
179-26	23940-23944	copy	_	_	_	_	
179-27	23945-23953	proceeds	_	_	_	_	
179-28	23953-23954	.	_	_	_	_	

#Text=When taking a base backup of an active database, this situation is normal and not an error.
180-1	23955-23959	When	_	_	_	_	
180-2	23960-23966	taking	_	_	_	_	
180-3	23967-23968	a	_	_	_	_	
180-4	23969-23973	base	_	_	_	_	
180-5	23974-23980	backup	_	_	_	_	
180-6	23981-23983	of	_	_	_	_	
180-7	23984-23986	an	_	_	_	_	
180-8	23987-23993	active	_	_	_	_	
180-9	23994-24002	database	_	_	_	_	
180-10	24002-24003	,	_	_	_	_	
180-11	24004-24008	this	_	_	_	_	
180-12	24009-24018	situation	_	_	_	_	
180-13	24019-24021	is	_	_	_	_	
180-14	24022-24028	normal	_	_	_	_	
180-15	24029-24032	and	_	_	_	_	
180-16	24033-24036	not	_	_	_	_	
180-17	24037-24039	an	_	_	_	_	
180-18	24040-24045	error	_	_	_	_	
180-19	24045-24046	.	_	_	_	_	

#Text=However, you need to ensure that you can distinguish complaints of this sort from real errors.
181-1	24047-24054	However	_	_	_	_	
181-2	24054-24055	,	_	_	_	_	
181-3	24056-24059	you	_	_	_	_	
181-4	24060-24064	need	_	_	_	_	
181-5	24065-24067	to	_	_	_	_	
181-6	24068-24074	ensure	_	_	_	_	
181-7	24075-24079	that	_	_	_	_	
181-8	24080-24083	you	_	_	_	_	
181-9	24084-24087	can	_	_	_	_	
181-10	24088-24099	distinguish	_	_	_	_	
181-11	24100-24110	complaints	_	_	_	_	
181-12	24111-24113	of	_	_	_	_	
181-13	24114-24118	this	_	_	_	_	
181-14	24119-24123	sort	_	_	_	_	
181-15	24124-24128	from	_	_	_	_	
181-16	24129-24133	real	_	_	_	_	
181-17	24134-24140	errors	_	_	_	_	
181-18	24140-24141	.	_	_	_	_	

#Text=For example, some versions of rsync return a separate exit code for “vanished source files”, and you can write a driver script to accept this exit code as a non-error case.
182-1	24142-24145	For	_	_	_	_	
182-2	24146-24153	example	_	_	_	_	
182-3	24153-24154	,	_	_	_	_	
182-4	24155-24159	some	_	_	_	_	
182-5	24160-24168	versions	_	_	_	_	
182-6	24169-24171	of	_	_	_	_	
182-7	24172-24177	rsync	_	_	_	_	
182-8	24178-24184	return	_	_	_	_	
182-9	24185-24186	a	_	_	_	_	
182-10	24187-24195	separate	_	_	_	_	
182-11	24196-24200	exit	_	_	_	_	
182-12	24201-24205	code	_	_	_	_	
182-13	24206-24209	for	_	_	_	_	
182-14	24210-24211	“	_	_	_	_	
182-15	24211-24219	vanished	_	_	_	_	
182-16	24220-24226	source	_	_	_	_	
182-17	24227-24232	files	_	_	_	_	
182-18	24232-24233	”	_	_	_	_	
182-19	24233-24234	,	_	_	_	_	
182-20	24235-24238	and	_	_	_	_	
182-21	24239-24242	you	_	_	_	_	
182-22	24243-24246	can	_	_	_	_	
182-23	24247-24252	write	_	_	_	_	
182-24	24253-24254	a	_	_	_	_	
182-25	24255-24261	driver	_	_	_	_	
182-26	24262-24268	script	_	_	_	_	
182-27	24269-24271	to	_	_	_	_	
182-28	24272-24278	accept	_	_	_	_	
182-29	24279-24283	this	_	_	_	_	
182-30	24284-24288	exit	_	_	_	_	
182-31	24289-24293	code	_	_	_	_	
182-32	24294-24296	as	_	_	_	_	
182-33	24297-24298	a	_	_	_	_	
182-34	24299-24308	non-error	_	_	_	_	
182-35	24309-24313	case	_	_	_	_	
182-36	24313-24314	.	_	_	_	_	

#Text=Also, some versions of GNU tar return an error code indistinguishable from a fatal error if a file was truncated while tar was copying it.
183-1	24315-24319	Also	_	_	_	_	
183-2	24319-24320	,	_	_	_	_	
183-3	24321-24325	some	_	_	_	_	
183-4	24326-24334	versions	_	_	_	_	
183-5	24335-24337	of	_	_	_	_	
183-6	24338-24341	GNU	_	_	_	_	
183-7	24342-24345	tar	_	_	_	_	
183-8	24346-24352	return	_	_	_	_	
183-9	24353-24355	an	_	_	_	_	
183-10	24356-24361	error	_	_	_	_	
183-11	24362-24366	code	_	_	_	_	
183-12	24367-24384	indistinguishable	_	_	_	_	
183-13	24385-24389	from	_	_	_	_	
183-14	24390-24391	a	_	_	_	_	
183-15	24392-24397	fatal	_	_	_	_	
183-16	24398-24403	error	_	_	_	_	
183-17	24404-24406	if	_	_	_	_	
183-18	24407-24408	a	_	_	_	_	
183-19	24409-24413	file	_	_	_	_	
183-20	24414-24417	was	_	_	_	_	
183-21	24418-24427	truncated	_	_	_	_	
183-22	24428-24433	while	_	_	_	_	
183-23	24434-24437	tar	_	_	_	_	
183-24	24438-24441	was	_	_	_	_	
183-25	24442-24449	copying	_	_	_	_	
183-26	24450-24452	it	_	_	_	_	
183-27	24452-24453	.	_	_	_	_	

#Text=Fortunately, GNU tar versions 1.16 and later exit with 1 if a file was changed during the backup, and 2 for other errors.
184-1	24454-24465	Fortunately	_	_	_	_	
184-2	24465-24466	,	_	_	_	_	
184-3	24467-24470	GNU	_	_	_	_	
184-4	24471-24474	tar	_	_	_	_	
184-5	24475-24483	versions	_	_	_	_	
184-6	24484-24488	1.16	_	_	_	_	
184-7	24489-24492	and	_	_	_	_	
184-8	24493-24498	later	_	_	_	_	
184-9	24499-24503	exit	_	_	_	_	
184-10	24504-24508	with	_	_	_	_	
184-11	24509-24510	1	_	_	_	_	
184-12	24511-24513	if	_	_	_	_	
184-13	24514-24515	a	_	_	_	_	
184-14	24516-24520	file	_	_	_	_	
184-15	24521-24524	was	_	_	_	_	
184-16	24525-24532	changed	_	_	_	_	
184-17	24533-24539	during	_	_	_	_	
184-18	24540-24543	the	_	_	_	_	
184-19	24544-24550	backup	_	_	_	_	
184-20	24550-24551	,	_	_	_	_	
184-21	24552-24555	and	_	_	_	_	
184-22	24556-24557	2	_	_	_	_	
184-23	24558-24561	for	_	_	_	_	
184-24	24562-24567	other	_	_	_	_	
184-25	24568-24574	errors	_	_	_	_	
184-26	24574-24575	.	_	_	_	_	

#Text=With GNU tar version 1.23 and later, you can use the warning options --warning=no-file-changed --warning=no-file-removed to hide the related warning messages.
185-1	24576-24580	With	_	_	_	_	
185-2	24581-24584	GNU	_	_	_	_	
185-3	24585-24588	tar	_	_	_	_	
185-4	24589-24596	version	_	_	_	_	
185-5	24597-24601	1.23	_	_	_	_	
185-6	24602-24605	and	_	_	_	_	
185-7	24606-24611	later	_	_	_	_	
185-8	24611-24612	,	_	_	_	_	
185-9	24613-24616	you	_	_	_	_	
185-10	24617-24620	can	_	_	_	_	
185-11	24621-24624	use	_	_	_	_	
185-12	24625-24628	the	_	_	_	_	
185-13	24629-24636	warning	_	_	_	_	
185-14	24637-24644	options	_	_	_	_	
185-15	24645-24646	-	_	_	_	_	
185-16	24646-24647	-	_	_	_	_	
185-17	24647-24654	warning	_	_	_	_	
185-18	24654-24655	=	_	_	_	_	
185-19	24655-24670	no-file-changed	_	_	_	_	
185-20	24671-24672	-	_	_	_	_	
185-21	24672-24673	-	_	_	_	_	
185-22	24673-24680	warning	_	_	_	_	
185-23	24680-24681	=	_	_	_	_	
185-24	24681-24696	no-file-removed	_	_	_	_	
185-25	24697-24699	to	_	_	_	_	
185-26	24700-24704	hide	_	_	_	_	
185-27	24705-24708	the	_	_	_	_	
185-28	24709-24716	related	_	_	_	_	
185-29	24717-24724	warning	_	_	_	_	
185-30	24725-24733	messages	_	_	_	_	
185-31	24733-24734	.	_	_	_	_	

#Text=Be certain that your backup includes all of the files under the database cluster directory (e.g., /usr/local/pgsql/data).
186-1	24735-24737	Be	_	_	_	_	
186-2	24738-24745	certain	_	_	_	_	
186-3	24746-24750	that	_	_	_	_	
186-4	24751-24755	your	_	_	_	_	
186-5	24756-24762	backup	_	_	_	_	
186-6	24763-24771	includes	_	_	_	_	
186-7	24772-24775	all	_	_	_	_	
186-8	24776-24778	of	_	_	_	_	
186-9	24779-24782	the	_	_	_	_	
186-10	24783-24788	files	_	_	_	_	
186-11	24789-24794	under	_	_	_	_	
186-12	24795-24798	the	_	_	_	_	
186-13	24799-24807	database	_	_	_	_	
186-14	24808-24815	cluster	_	_	_	_	
186-15	24816-24825	directory	_	_	_	_	
186-16	24826-24827	(	_	_	_	_	
186-17	24827-24830	e.g	_	_	_	_	
186-18	24830-24831	.	_	_	_	_	
186-19	24831-24832	,	_	_	_	_	
186-20	24833-24834	/	_	_	_	_	
186-21	24834-24837	usr	_	_	_	_	
186-22	24837-24838	/	_	_	_	_	
186-23	24838-24843	local	_	_	_	_	
186-24	24843-24844	/	_	_	_	_	
186-25	24844-24849	pgsql	_	_	_	_	
186-26	24849-24850	/	_	_	_	_	
186-27	24850-24854	data	_	_	_	_	
186-28	24854-24855	)	_	_	_	_	
186-29	24855-24856	.	_	_	_	_	

#Text=If you are using tablespaces that do not reside underneath this directory, be careful to include them as well (and be sure that your backup archives symbolic links as links, otherwise the restore will corrupt your tablespaces).
187-1	24857-24859	If	_	_	_	_	
187-2	24860-24863	you	_	_	_	_	
187-3	24864-24867	are	_	_	_	_	
187-4	24868-24873	using	_	_	_	_	
187-5	24874-24885	tablespaces	_	_	_	_	
187-6	24886-24890	that	_	_	_	_	
187-7	24891-24893	do	_	_	_	_	
187-8	24894-24897	not	_	_	_	_	
187-9	24898-24904	reside	_	_	_	_	
187-10	24905-24915	underneath	_	_	_	_	
187-11	24916-24920	this	_	_	_	_	
187-12	24921-24930	directory	_	_	_	_	
187-13	24930-24931	,	_	_	_	_	
187-14	24932-24934	be	_	_	_	_	
187-15	24935-24942	careful	_	_	_	_	
187-16	24943-24945	to	_	_	_	_	
187-17	24946-24953	include	_	_	_	_	
187-18	24954-24958	them	_	_	_	_	
187-19	24959-24961	as	_	_	_	_	
187-20	24962-24966	well	_	_	_	_	
187-21	24967-24968	(	_	_	_	_	
187-22	24968-24971	and	_	_	_	_	
187-23	24972-24974	be	_	_	_	_	
187-24	24975-24979	sure	_	_	_	_	
187-25	24980-24984	that	_	_	_	_	
187-26	24985-24989	your	_	_	_	_	
187-27	24990-24996	backup	_	_	_	_	
187-28	24997-25005	archives	_	_	_	_	
187-29	25006-25014	symbolic	_	_	_	_	
187-30	25015-25020	links	_	_	_	_	
187-31	25021-25023	as	_	_	_	_	
187-32	25024-25029	links	_	_	_	_	
187-33	25029-25030	,	_	_	_	_	
187-34	25031-25040	otherwise	_	_	_	_	
187-35	25041-25044	the	_	_	_	_	
187-36	25045-25052	restore	_	_	_	_	
187-37	25053-25057	will	_	_	_	_	
187-38	25058-25065	corrupt	_	_	_	_	
187-39	25066-25070	your	_	_	_	_	
187-40	25071-25082	tablespaces	_	_	_	_	
187-41	25082-25083	)	_	_	_	_	
187-42	25083-25084	.	_	_	_	_	

#Text=You should, however, omit from the backup the files within the cluster's pg_wal/ subdirectory.
188-1	25085-25088	You	_	_	_	_	
188-2	25089-25095	should	_	_	_	_	
188-3	25095-25096	,	_	_	_	_	
188-4	25097-25104	however	_	_	_	_	
188-5	25104-25105	,	_	_	_	_	
188-6	25106-25110	omit	_	_	_	_	
188-7	25111-25115	from	_	_	_	_	
188-8	25116-25119	the	_	_	_	_	
188-9	25120-25126	backup	_	_	_	_	
188-10	25127-25130	the	_	_	_	_	
188-11	25131-25136	files	_	_	_	_	
188-12	25137-25143	within	_	_	_	_	
188-13	25144-25147	the	_	_	_	_	
188-14	25148-25157	cluster's	_	_	_	_	
188-15	25158-25164	pg_wal	_	_	_	_	
188-16	25164-25165	/	_	_	_	_	
188-17	25166-25178	subdirectory	_	_	_	_	
188-18	25178-25179	.	_	_	_	_	

#Text=This slight adjustment is worthwhile because it reduces the risk of mistakes when restoring.
189-1	25180-25184	This	_	_	_	_	
189-2	25185-25191	slight	_	_	_	_	
189-3	25192-25202	adjustment	_	_	_	_	
189-4	25203-25205	is	_	_	_	_	
189-5	25206-25216	worthwhile	_	_	_	_	
189-6	25217-25224	because	_	_	_	_	
189-7	25225-25227	it	_	_	_	_	
189-8	25228-25235	reduces	_	_	_	_	
189-9	25236-25239	the	_	_	_	_	
189-10	25240-25244	risk	_	_	_	_	
189-11	25245-25247	of	_	_	_	_	
189-12	25248-25256	mistakes	_	_	_	_	
189-13	25257-25261	when	_	_	_	_	
189-14	25262-25271	restoring	_	_	_	_	
189-15	25271-25272	.	_	_	_	_	

#Text=This is easy to arrange if pg_wal/ is a symbolic link pointing to someplace outside the cluster directory, which is a common setup anyway for performance reasons.
190-1	25273-25277	This	_	_	_	_	
190-2	25278-25280	is	_	_	_	_	
190-3	25281-25285	easy	_	_	_	_	
190-4	25286-25288	to	_	_	_	_	
190-5	25289-25296	arrange	_	_	_	_	
190-6	25297-25299	if	_	_	_	_	
190-7	25300-25306	pg_wal	_	_	_	_	
190-8	25306-25307	/	_	_	_	_	
190-9	25308-25310	is	_	_	_	_	
190-10	25311-25312	a	_	_	_	_	
190-11	25313-25321	symbolic	_	_	_	_	
190-12	25322-25326	link	_	_	_	_	
190-13	25327-25335	pointing	_	_	_	_	
190-14	25336-25338	to	_	_	_	_	
190-15	25339-25348	someplace	_	_	_	_	
190-16	25349-25356	outside	_	_	_	_	
190-17	25357-25360	the	_	_	_	_	
190-18	25361-25368	cluster	_	_	_	_	
190-19	25369-25378	directory	_	_	_	_	
190-20	25378-25379	,	_	_	_	_	
190-21	25380-25385	which	_	_	_	_	
190-22	25386-25388	is	_	_	_	_	
190-23	25389-25390	a	_	_	_	_	
190-24	25391-25397	common	_	_	_	_	
190-25	25398-25403	setup	_	_	_	_	
190-26	25404-25410	anyway	_	_	_	_	
190-27	25411-25414	for	_	_	_	_	
190-28	25415-25426	performance	_	_	_	_	
190-29	25427-25434	reasons	_	_	_	_	
190-30	25434-25435	.	_	_	_	_	

#Text=You might also want to exclude postmaster.pid and postmaster.opts, which record information about the running postmaster, not about the postmaster which will eventually use this backup.
191-1	25436-25439	You	_	_	_	_	
191-2	25440-25445	might	_	_	_	_	
191-3	25446-25450	also	_	_	_	_	
191-4	25451-25455	want	_	_	_	_	
191-5	25456-25458	to	_	_	_	_	
191-6	25459-25466	exclude	_	_	_	_	
191-7	25467-25481	postmaster.pid	_	_	_	_	
191-8	25482-25485	and	_	_	_	_	
191-9	25486-25501	postmaster.opts	_	_	_	_	
191-10	25501-25502	,	_	_	_	_	
191-11	25503-25508	which	_	_	_	_	
191-12	25509-25515	record	_	_	_	_	
191-13	25516-25527	information	_	_	_	_	
191-14	25528-25533	about	_	_	_	_	
191-15	25534-25537	the	_	_	_	_	
191-16	25538-25545	running	_	_	_	_	
191-17	25546-25556	postmaster	_	_	_	_	
191-18	25556-25557	,	_	_	_	_	
191-19	25558-25561	not	_	_	_	_	
191-20	25562-25567	about	_	_	_	_	
191-21	25568-25571	the	_	_	_	_	
191-22	25572-25582	postmaster	_	_	_	_	
191-23	25583-25588	which	_	_	_	_	
191-24	25589-25593	will	_	_	_	_	
191-25	25594-25604	eventually	_	_	_	_	
191-26	25605-25608	use	_	_	_	_	
191-27	25609-25613	this	_	_	_	_	
191-28	25614-25620	backup	_	_	_	_	
191-29	25620-25621	.	_	_	_	_	

#Text=(These files can confuse pg_ctl.)
192-1	25622-25623	(	_	_	_	_	
192-2	25623-25628	These	_	_	_	_	
192-3	25629-25634	files	_	_	_	_	
192-4	25635-25638	can	_	_	_	_	
192-5	25639-25646	confuse	_	_	_	_	
192-6	25647-25653	pg_ctl	_	_	_	_	
192-7	25653-25654	.	_	_	_	_	
192-8	25654-25655	)	_	_	_	_	

#Text=It is often a good idea to also omit from the backup the files within the cluster's pg_replslot/ directory, so that replication slots that exist on the master do not become part of the backup.
193-1	25656-25658	It	_	_	_	_	
193-2	25659-25661	is	_	_	_	_	
193-3	25662-25667	often	_	_	_	_	
193-4	25668-25669	a	_	_	_	_	
193-5	25670-25674	good	_	_	_	_	
193-6	25675-25679	idea	_	_	_	_	
193-7	25680-25682	to	_	_	_	_	
193-8	25683-25687	also	_	_	_	_	
193-9	25688-25692	omit	_	_	_	_	
193-10	25693-25697	from	_	_	_	_	
193-11	25698-25701	the	_	_	_	_	
193-12	25702-25708	backup	_	_	_	_	
193-13	25709-25712	the	_	_	_	_	
193-14	25713-25718	files	_	_	_	_	
193-15	25719-25725	within	_	_	_	_	
193-16	25726-25729	the	_	_	_	_	
193-17	25730-25739	cluster's	_	_	_	_	
193-18	25740-25751	pg_replslot	_	_	_	_	
193-19	25751-25752	/	_	_	_	_	
193-20	25753-25762	directory	_	_	_	_	
193-21	25762-25763	,	_	_	_	_	
193-22	25764-25766	so	_	_	_	_	
193-23	25767-25771	that	_	_	_	_	
193-24	25772-25783	replication	_	_	_	_	
193-25	25784-25789	slots	_	_	_	_	
193-26	25790-25794	that	_	_	_	_	
193-27	25795-25800	exist	_	_	_	_	
193-28	25801-25803	on	_	_	_	_	
193-29	25804-25807	the	_	_	_	_	
193-30	25808-25814	master	_	_	_	_	
193-31	25815-25817	do	_	_	_	_	
193-32	25818-25821	not	_	_	_	_	
193-33	25822-25828	become	_	_	_	_	
193-34	25829-25833	part	_	_	_	_	
193-35	25834-25836	of	_	_	_	_	
193-36	25837-25840	the	_	_	_	_	
193-37	25841-25847	backup	_	_	_	_	
193-38	25847-25848	.	_	_	_	_	

#Text=Otherwise, the subsequent use of the backup to create a standby may result in indefinite retention of WAL files on the standby, and possibly bloat on the master if hot standby feedback is enabled, because the clients that are using those replication slots will still be connecting to and updating the slots on the master, not the standby.
194-1	25849-25858	Otherwise	_	_	_	_	
194-2	25858-25859	,	_	_	_	_	
194-3	25860-25863	the	_	_	_	_	
194-4	25864-25874	subsequent	_	_	_	_	
194-5	25875-25878	use	_	_	_	_	
194-6	25879-25881	of	_	_	_	_	
194-7	25882-25885	the	_	_	_	_	
194-8	25886-25892	backup	_	_	_	_	
194-9	25893-25895	to	_	_	_	_	
194-10	25896-25902	create	_	_	_	_	
194-11	25903-25904	a	_	_	_	_	
194-12	25905-25912	standby	_	_	_	_	
194-13	25913-25916	may	_	_	_	_	
194-14	25917-25923	result	_	_	_	_	
194-15	25924-25926	in	_	_	_	_	
194-16	25927-25937	indefinite	_	_	_	_	
194-17	25938-25947	retention	_	_	_	_	
194-18	25948-25950	of	_	_	_	_	
194-19	25951-25954	WAL	_	_	_	_	
194-20	25955-25960	files	_	_	_	_	
194-21	25961-25963	on	_	_	_	_	
194-22	25964-25967	the	_	_	_	_	
194-23	25968-25975	standby	_	_	_	_	
194-24	25975-25976	,	_	_	_	_	
194-25	25977-25980	and	_	_	_	_	
194-26	25981-25989	possibly	_	_	_	_	
194-27	25990-25995	bloat	_	_	_	_	
194-28	25996-25998	on	_	_	_	_	
194-29	25999-26002	the	_	_	_	_	
194-30	26003-26009	master	_	_	_	_	
194-31	26010-26012	if	_	_	_	_	
194-32	26013-26016	hot	_	_	_	_	
194-33	26017-26024	standby	_	_	_	_	
194-34	26025-26033	feedback	_	_	_	_	
194-35	26034-26036	is	_	_	_	_	
194-36	26037-26044	enabled	_	_	_	_	
194-37	26044-26045	,	_	_	_	_	
194-38	26046-26053	because	_	_	_	_	
194-39	26054-26057	the	_	_	_	_	
194-40	26058-26065	clients	_	_	_	_	
194-41	26066-26070	that	_	_	_	_	
194-42	26071-26074	are	_	_	_	_	
194-43	26075-26080	using	_	_	_	_	
194-44	26081-26086	those	_	_	_	_	
194-45	26087-26098	replication	_	_	_	_	
194-46	26099-26104	slots	_	_	_	_	
194-47	26105-26109	will	_	_	_	_	
194-48	26110-26115	still	_	_	_	_	
194-49	26116-26118	be	_	_	_	_	
194-50	26119-26129	connecting	_	_	_	_	
194-51	26130-26132	to	_	_	_	_	
194-52	26133-26136	and	_	_	_	_	
194-53	26137-26145	updating	_	_	_	_	
194-54	26146-26149	the	_	_	_	_	
194-55	26150-26155	slots	_	_	_	_	
194-56	26156-26158	on	_	_	_	_	
194-57	26159-26162	the	_	_	_	_	
194-58	26163-26169	master	_	_	_	_	
194-59	26169-26170	,	_	_	_	_	
194-60	26171-26174	not	_	_	_	_	
194-61	26175-26178	the	_	_	_	_	
194-62	26179-26186	standby	_	_	_	_	
194-63	26186-26187	.	_	_	_	_	

#Text=Even if the backup is only intended for use in creating a new master, copying the replication slots isn't expected to be particularly useful, since the contents of those slots will likely be badly out of date by the time the new master comes on line.
195-1	26188-26192	Even	_	_	_	_	
195-2	26193-26195	if	_	_	_	_	
195-3	26196-26199	the	_	_	_	_	
195-4	26200-26206	backup	_	_	_	_	
195-5	26207-26209	is	_	_	_	_	
195-6	26210-26214	only	_	_	_	_	
195-7	26215-26223	intended	_	_	_	_	
195-8	26224-26227	for	_	_	_	_	
195-9	26228-26231	use	_	_	_	_	
195-10	26232-26234	in	_	_	_	_	
195-11	26235-26243	creating	_	_	_	_	
195-12	26244-26245	a	_	_	_	_	
195-13	26246-26249	new	_	_	_	_	
195-14	26250-26256	master	_	_	_	_	
195-15	26256-26257	,	_	_	_	_	
195-16	26258-26265	copying	_	_	_	_	
195-17	26266-26269	the	_	_	_	_	
195-18	26270-26281	replication	_	_	_	_	
195-19	26282-26287	slots	_	_	_	_	
195-20	26288-26293	isn't	_	_	_	_	
195-21	26294-26302	expected	_	_	_	_	
195-22	26303-26305	to	_	_	_	_	
195-23	26306-26308	be	_	_	_	_	
195-24	26309-26321	particularly	_	_	_	_	
195-25	26322-26328	useful	_	_	_	_	
195-26	26328-26329	,	_	_	_	_	
195-27	26330-26335	since	_	_	_	_	
195-28	26336-26339	the	_	_	_	_	
195-29	26340-26348	contents	_	_	_	_	
195-30	26349-26351	of	_	_	_	_	
195-31	26352-26357	those	_	_	_	_	
195-32	26358-26363	slots	_	_	_	_	
195-33	26364-26368	will	_	_	_	_	
195-34	26369-26375	likely	_	_	_	_	
195-35	26376-26378	be	_	_	_	_	
195-36	26379-26384	badly	_	_	_	_	
195-37	26385-26388	out	_	_	_	_	
195-38	26389-26391	of	_	_	_	_	
195-39	26392-26396	date	_	_	_	_	
195-40	26397-26399	by	_	_	_	_	
195-41	26400-26403	the	_	_	_	_	
195-42	26404-26408	time	_	_	_	_	
195-43	26409-26412	the	_	_	_	_	
195-44	26413-26416	new	_	_	_	_	
195-45	26417-26423	master	_	_	_	_	
195-46	26424-26429	comes	_	_	_	_	
195-47	26430-26432	on	_	_	_	_	
195-48	26433-26437	line	_	_	_	_	
195-49	26437-26438	.	_	_	_	_	

#Text=The contents of the directories pg_dynshmem/, pg_notify/, pg_serial/, pg_snapshots/, pg_stat_tmp/, and pg_subtrans/ (but not the directories themselves) can be omitted from the backup as they will be initialized on postmaster startup.
196-1	26439-26442	The	_	_	_	_	
196-2	26443-26451	contents	_	_	_	_	
196-3	26452-26454	of	_	_	_	_	
196-4	26455-26458	the	_	_	_	_	
196-5	26459-26470	directories	_	_	_	_	
196-6	26471-26482	pg_dynshmem	_	_	_	_	
196-7	26482-26483	/	_	_	_	_	
196-8	26483-26484	,	_	_	_	_	
196-9	26485-26494	pg_notify	_	_	_	_	
196-10	26494-26495	/	_	_	_	_	
196-11	26495-26496	,	_	_	_	_	
196-12	26497-26506	pg_serial	_	_	_	_	
196-13	26506-26507	/	_	_	_	_	
196-14	26507-26508	,	_	_	_	_	
196-15	26509-26521	pg_snapshots	_	_	_	_	
196-16	26521-26522	/	_	_	_	_	
196-17	26522-26523	,	_	_	_	_	
196-18	26524-26535	pg_stat_tmp	_	_	_	_	
196-19	26535-26536	/	_	_	_	_	
196-20	26536-26537	,	_	_	_	_	
196-21	26538-26541	and	_	_	_	_	
196-22	26542-26553	pg_subtrans	_	_	_	_	
196-23	26553-26554	/	_	_	_	_	
196-24	26555-26556	(	_	_	_	_	
196-25	26556-26559	but	_	_	_	_	
196-26	26560-26563	not	_	_	_	_	
196-27	26564-26567	the	_	_	_	_	
196-28	26568-26579	directories	_	_	_	_	
196-29	26580-26590	themselves	_	_	_	_	
196-30	26590-26591	)	_	_	_	_	
196-31	26592-26595	can	_	_	_	_	
196-32	26596-26598	be	_	_	_	_	
196-33	26599-26606	omitted	_	_	_	_	
196-34	26607-26611	from	_	_	_	_	
196-35	26612-26615	the	_	_	_	_	
196-36	26616-26622	backup	_	_	_	_	
196-37	26623-26625	as	_	_	_	_	
196-38	26626-26630	they	_	_	_	_	
196-39	26631-26635	will	_	_	_	_	
196-40	26636-26638	be	_	_	_	_	
196-41	26639-26650	initialized	_	_	_	_	
196-42	26651-26653	on	_	_	_	_	
196-43	26654-26664	postmaster	_	_	_	_	
196-44	26665-26672	startup	_	_	_	_	
196-45	26672-26673	.	_	_	_	_	

#Text=If stats_temp_directory is set and is under the data directory then the contents of that directory can also be omitted.
197-1	26674-26676	If	_	_	_	_	
197-2	26677-26697	stats_temp_directory	_	_	_	_	
197-3	26698-26700	is	_	_	_	_	
197-4	26701-26704	set	_	_	_	_	
197-5	26705-26708	and	_	_	_	_	
197-6	26709-26711	is	_	_	_	_	
197-7	26712-26717	under	_	_	_	_	
197-8	26718-26721	the	_	_	_	_	
197-9	26722-26726	data	_	_	_	_	
197-10	26727-26736	directory	_	_	_	_	
197-11	26737-26741	then	_	_	_	_	
197-12	26742-26745	the	_	_	_	_	
197-13	26746-26754	contents	_	_	_	_	
197-14	26755-26757	of	_	_	_	_	
197-15	26758-26762	that	_	_	_	_	
197-16	26763-26772	directory	_	_	_	_	
197-17	26773-26776	can	_	_	_	_	
197-18	26777-26781	also	_	_	_	_	
197-19	26782-26784	be	_	_	_	_	
197-20	26785-26792	omitted	_	_	_	_	
197-21	26792-26793	.	_	_	_	_	

#Text=Any file or directory beginning with pgsql_tmp can be omitted from the backup.
198-1	26794-26797	Any	_	_	_	_	
198-2	26798-26802	file	_	_	_	_	
198-3	26803-26805	or	_	_	_	_	
198-4	26806-26815	directory	_	_	_	_	
198-5	26816-26825	beginning	_	_	_	_	
198-6	26826-26830	with	_	_	_	_	
198-7	26831-26840	pgsql_tmp	_	_	_	_	
198-8	26841-26844	can	_	_	_	_	
198-9	26845-26847	be	_	_	_	_	
198-10	26848-26855	omitted	_	_	_	_	
198-11	26856-26860	from	_	_	_	_	
198-12	26861-26864	the	_	_	_	_	
198-13	26865-26871	backup	_	_	_	_	
198-14	26871-26872	.	_	_	_	_	

#Text=These files are removed on postmaster start and the directories will be recreated as needed.
#Text=pg_internal.init files can be omitted from the backup whenever a file of that name is found.
199-1	26873-26878	These	_	_	_	_	
199-2	26879-26884	files	_	_	_	_	
199-3	26885-26888	are	_	_	_	_	
199-4	26889-26896	removed	_	_	_	_	
199-5	26897-26899	on	_	_	_	_	
199-6	26900-26910	postmaster	_	_	_	_	
199-7	26911-26916	start	_	_	_	_	
199-8	26917-26920	and	_	_	_	_	
199-9	26921-26924	the	_	_	_	_	
199-10	26925-26936	directories	_	_	_	_	
199-11	26937-26941	will	_	_	_	_	
199-12	26942-26944	be	_	_	_	_	
199-13	26945-26954	recreated	_	_	_	_	
199-14	26955-26957	as	_	_	_	_	
199-15	26958-26964	needed	_	_	_	_	
199-16	26964-26965	.	_	_	_	_	
199-17	26966-26982	pg_internal.init	_	_	_	_	
199-18	26983-26988	files	_	_	_	_	
199-19	26989-26992	can	_	_	_	_	
199-20	26993-26995	be	_	_	_	_	
199-21	26996-27003	omitted	_	_	_	_	
199-22	27004-27008	from	_	_	_	_	
199-23	27009-27012	the	_	_	_	_	
199-24	27013-27019	backup	_	_	_	_	
199-25	27020-27028	whenever	_	_	_	_	
199-26	27029-27030	a	_	_	_	_	
199-27	27031-27035	file	_	_	_	_	
199-28	27036-27038	of	_	_	_	_	
199-29	27039-27043	that	_	_	_	_	
199-30	27044-27048	name	_	_	_	_	
199-31	27049-27051	is	_	_	_	_	
199-32	27052-27057	found	_	_	_	_	
199-33	27057-27058	.	_	_	_	_	

#Text=These files contain relation cache data that is always rebuilt when recovering.
200-1	27059-27064	These	_	_	_	_	
200-2	27065-27070	files	_	_	_	_	
200-3	27071-27078	contain	_	_	_	_	
200-4	27079-27087	relation	_	_	_	_	
200-5	27088-27093	cache	_	_	_	_	
200-6	27094-27098	data	_	_	_	_	
200-7	27099-27103	that	_	_	_	_	
200-8	27104-27106	is	_	_	_	_	
200-9	27107-27113	always	_	_	_	_	
200-10	27114-27121	rebuilt	_	_	_	_	
200-11	27122-27126	when	_	_	_	_	
200-12	27127-27137	recovering	_	_	_	_	
200-13	27137-27138	.	_	_	_	_	

#Text=The backup label file includes the label string you gave to pg_start_backup, as well as the time at which pg_start_backup was run, and the name of the starting WAL file.
201-1	27139-27142	The	_	_	_	_	
201-2	27143-27149	backup	_	_	_	_	
201-3	27150-27155	label	_	_	_	_	
201-4	27156-27160	file	_	_	_	_	
201-5	27161-27169	includes	_	_	_	_	
201-6	27170-27173	the	_	_	_	_	
201-7	27174-27179	label	_	_	_	_	
201-8	27180-27186	string	_	_	_	_	
201-9	27187-27190	you	_	_	_	_	
201-10	27191-27195	gave	_	_	_	_	
201-11	27196-27198	to	_	_	_	_	
201-12	27199-27214	pg_start_backup	_	_	_	_	
201-13	27214-27215	,	_	_	_	_	
201-14	27216-27218	as	_	_	_	_	
201-15	27219-27223	well	_	_	_	_	
201-16	27224-27226	as	_	_	_	_	
201-17	27227-27230	the	_	_	_	_	
201-18	27231-27235	time	_	_	_	_	
201-19	27236-27238	at	_	_	_	_	
201-20	27239-27244	which	_	_	_	_	
201-21	27245-27260	pg_start_backup	_	_	_	_	
201-22	27261-27264	was	_	_	_	_	
201-23	27265-27268	run	_	_	_	_	
201-24	27268-27269	,	_	_	_	_	
201-25	27270-27273	and	_	_	_	_	
201-26	27274-27277	the	_	_	_	_	
201-27	27278-27282	name	_	_	_	_	
201-28	27283-27285	of	_	_	_	_	
201-29	27286-27289	the	_	_	_	_	
201-30	27290-27298	starting	_	_	_	_	
201-31	27299-27302	WAL	_	_	_	_	
201-32	27303-27307	file	_	_	_	_	
201-33	27307-27308	.	_	_	_	_	

#Text=In case of confusion it is therefore possible to look inside a backup file and determine exactly which backup session the dump file came from.
202-1	27309-27311	In	_	_	_	_	
202-2	27312-27316	case	_	_	_	_	
202-3	27317-27319	of	_	_	_	_	
202-4	27320-27329	confusion	_	_	_	_	
202-5	27330-27332	it	_	_	_	_	
202-6	27333-27335	is	_	_	_	_	
202-7	27336-27345	therefore	_	_	_	_	
202-8	27346-27354	possible	_	_	_	_	
202-9	27355-27357	to	_	_	_	_	
202-10	27358-27362	look	_	_	_	_	
202-11	27363-27369	inside	_	_	_	_	
202-12	27370-27371	a	_	_	_	_	
202-13	27372-27378	backup	_	_	_	_	
202-14	27379-27383	file	_	_	_	_	
202-15	27384-27387	and	_	_	_	_	
202-16	27388-27397	determine	_	_	_	_	
202-17	27398-27405	exactly	_	_	_	_	
202-18	27406-27411	which	_	_	_	_	
202-19	27412-27418	backup	_	_	_	_	
202-20	27419-27426	session	_	_	_	_	
202-21	27427-27430	the	_	_	_	_	
202-22	27431-27435	dump	_	_	_	_	
202-23	27436-27440	file	_	_	_	_	
202-24	27441-27445	came	_	_	_	_	
202-25	27446-27450	from	_	_	_	_	
202-26	27450-27451	.	_	_	_	_	

#Text=The tablespace map file includes the symbolic link names as they exist in the directory pg_tblspc/ and the full path of each symbolic link.
203-1	27452-27455	The	_	_	_	_	
203-2	27456-27466	tablespace	_	_	_	_	
203-3	27467-27470	map	_	_	_	_	
203-4	27471-27475	file	_	_	_	_	
203-5	27476-27484	includes	_	_	_	_	
203-6	27485-27488	the	_	_	_	_	
203-7	27489-27497	symbolic	_	_	_	_	
203-8	27498-27502	link	_	_	_	_	
203-9	27503-27508	names	_	_	_	_	
203-10	27509-27511	as	_	_	_	_	
203-11	27512-27516	they	_	_	_	_	
203-12	27517-27522	exist	_	_	_	_	
203-13	27523-27525	in	_	_	_	_	
203-14	27526-27529	the	_	_	_	_	
203-15	27530-27539	directory	_	_	_	_	
203-16	27540-27549	pg_tblspc	_	_	_	_	
203-17	27549-27550	/	_	_	_	_	
203-18	27551-27554	and	_	_	_	_	
203-19	27555-27558	the	_	_	_	_	
203-20	27559-27563	full	_	_	_	_	
203-21	27564-27568	path	_	_	_	_	
203-22	27569-27571	of	_	_	_	_	
203-23	27572-27576	each	_	_	_	_	
203-24	27577-27585	symbolic	_	_	_	_	
203-25	27586-27590	link	_	_	_	_	
203-26	27590-27591	.	_	_	_	_	

#Text=These files are not merely for your information; their presence and contents are critical to the proper operation of the system's recovery process.
204-1	27592-27597	These	_	_	_	_	
204-2	27598-27603	files	_	_	_	_	
204-3	27604-27607	are	_	_	_	_	
204-4	27608-27611	not	_	_	_	_	
204-5	27612-27618	merely	_	_	_	_	
204-6	27619-27622	for	_	_	_	_	
204-7	27623-27627	your	_	_	_	_	
204-8	27628-27639	information	_	_	_	_	
204-9	27639-27640	;	_	_	_	_	
204-10	27641-27646	their	_	_	_	_	
204-11	27647-27655	presence	_	_	_	_	
204-12	27656-27659	and	_	_	_	_	
204-13	27660-27668	contents	_	_	_	_	
204-14	27669-27672	are	_	_	_	_	
204-15	27673-27681	critical	_	_	_	_	
204-16	27682-27684	to	_	_	_	_	
204-17	27685-27688	the	_	_	_	_	
204-18	27689-27695	proper	_	_	_	_	
204-19	27696-27705	operation	_	_	_	_	
204-20	27706-27708	of	_	_	_	_	
204-21	27709-27712	the	_	_	_	_	
204-22	27713-27721	system's	_	_	_	_	
204-23	27722-27730	recovery	_	_	_	_	
204-24	27731-27738	process	_	_	_	_	
204-25	27738-27739	.	_	_	_	_	

#Text=It is also possible to make a backup while the server is stopped.
205-1	27740-27742	It	_	_	_	_	
205-2	27743-27745	is	_	_	_	_	
205-3	27746-27750	also	_	_	_	_	
205-4	27751-27759	possible	_	_	_	_	
205-5	27760-27762	to	_	_	_	_	
205-6	27763-27767	make	_	_	_	_	
205-7	27768-27769	a	_	_	_	_	
205-8	27770-27776	backup	_	_	_	_	
205-9	27777-27782	while	_	_	_	_	
205-10	27783-27786	the	_	_	_	_	
205-11	27787-27793	server	_	_	_	_	
205-12	27794-27796	is	_	_	_	_	
205-13	27797-27804	stopped	_	_	_	_	
205-14	27804-27805	.	_	_	_	_	

#Text=In this case, you obviously cannot use pg_start_backup or pg_stop_backup, and you will therefore be left to your own devices to keep track of which backup is which and how far back the associated WAL files go.
206-1	27806-27808	In	_	_	_	_	
206-2	27809-27813	this	_	_	_	_	
206-3	27814-27818	case	_	_	_	_	
206-4	27818-27819	,	_	_	_	_	
206-5	27820-27823	you	_	_	_	_	
206-6	27824-27833	obviously	_	_	_	_	
206-7	27834-27840	cannot	_	_	_	_	
206-8	27841-27844	use	_	_	_	_	
206-9	27845-27860	pg_start_backup	_	_	_	_	
206-10	27861-27863	or	_	_	_	_	
206-11	27864-27878	pg_stop_backup	_	_	_	_	
206-12	27878-27879	,	_	_	_	_	
206-13	27880-27883	and	_	_	_	_	
206-14	27884-27887	you	_	_	_	_	
206-15	27888-27892	will	_	_	_	_	
206-16	27893-27902	therefore	_	_	_	_	
206-17	27903-27905	be	_	_	_	_	
206-18	27906-27910	left	_	_	_	_	
206-19	27911-27913	to	_	_	_	_	
206-20	27914-27918	your	_	_	_	_	
206-21	27919-27922	own	_	_	_	_	
206-22	27923-27930	devices	_	_	_	_	
206-23	27931-27933	to	_	_	_	_	
206-24	27934-27938	keep	_	_	_	_	
206-25	27939-27944	track	_	_	_	_	
206-26	27945-27947	of	_	_	_	_	
206-27	27948-27953	which	_	_	_	_	
206-28	27954-27960	backup	_	_	_	_	
206-29	27961-27963	is	_	_	_	_	
206-30	27964-27969	which	_	_	_	_	
206-31	27970-27973	and	_	_	_	_	
206-32	27974-27977	how	_	_	_	_	
206-33	27978-27981	far	_	_	_	_	
206-34	27982-27986	back	_	_	_	_	
206-35	27987-27990	the	_	_	_	_	
206-36	27991-28001	associated	_	_	_	_	
206-37	28002-28005	WAL	_	_	_	_	
206-38	28006-28011	files	_	_	_	_	
206-39	28012-28014	go	_	_	_	_	
206-40	28014-28015	.	_	_	_	_	

#Text=It is generally better to follow the continuous archiving procedure above.
#Text=25.3.4. 
207-1	28016-28018	It	_	_	_	_	
207-2	28019-28021	is	_	_	_	_	
207-3	28022-28031	generally	_	_	_	_	
207-4	28032-28038	better	_	_	_	_	
207-5	28039-28041	to	_	_	_	_	
207-6	28042-28048	follow	_	_	_	_	
207-7	28049-28052	the	_	_	_	_	
207-8	28053-28063	continuous	_	_	_	_	
207-9	28064-28073	archiving	_	_	_	_	
207-10	28074-28083	procedure	_	_	_	_	
207-11	28084-28089	above	_	_	_	_	
207-12	28089-28090	.	_	_	_	_	
207-13	28091-28097	25.3.4	_	_	_	_	
207-14	28097-28098	.	_	_	_	_	
207-15	28098-28099	 	_	_	_	_	

#Text=Recovering Using a Continuous Archive Backup
#Text=Okay, the worst has happened and you need to recover from your backup.
208-1	28099-28109	Recovering	_	_	_	_	
208-2	28110-28115	Using	_	_	_	_	
208-3	28116-28117	a	_	_	_	_	
208-4	28118-28128	Continuous	_	_	_	_	
208-5	28129-28136	Archive	_	_	_	_	
208-6	28137-28143	Backup	_	_	_	_	
208-7	28144-28148	Okay	_	_	_	_	
208-8	28148-28149	,	_	_	_	_	
208-9	28150-28153	the	_	_	_	_	
208-10	28154-28159	worst	_	_	_	_	
208-11	28160-28163	has	_	_	_	_	
208-12	28164-28172	happened	_	_	_	_	
208-13	28173-28176	and	_	_	_	_	
208-14	28177-28180	you	_	_	_	_	
208-15	28181-28185	need	_	_	_	_	
208-16	28186-28188	to	_	_	_	_	
208-17	28189-28196	recover	_	_	_	_	
208-18	28197-28201	from	_	_	_	_	
208-19	28202-28206	your	_	_	_	_	
208-20	28207-28213	backup	_	_	_	_	
208-21	28213-28214	.	_	_	_	_	

#Text=Here is the procedure:
#Text=Stop the server, if it's running.
209-1	28215-28219	Here	_	_	_	_	
209-2	28220-28222	is	_	_	_	_	
209-3	28223-28226	the	_	_	_	_	
209-4	28227-28236	procedure	_	_	_	_	
209-5	28236-28237	:	_	_	_	_	
209-6	28238-28242	Stop	_	_	_	_	
209-7	28243-28246	the	_	_	_	_	
209-8	28247-28253	server	_	_	_	_	
209-9	28253-28254	,	_	_	_	_	
209-10	28255-28257	if	_	_	_	_	
209-11	28258-28262	it's	_	_	_	_	
209-12	28263-28270	running	_	_	_	_	
209-13	28270-28271	.	_	_	_	_	

#Text=If you have the space to do so, copy the whole cluster data directory and any tablespaces to a temporary location in case you need them later.
210-1	28272-28274	If	_	_	_	_	
210-2	28275-28278	you	_	_	_	_	
210-3	28279-28283	have	_	_	_	_	
210-4	28284-28287	the	_	_	_	_	
210-5	28288-28293	space	_	_	_	_	
210-6	28294-28296	to	_	_	_	_	
210-7	28297-28299	do	_	_	_	_	
210-8	28300-28302	so	_	_	_	_	
210-9	28302-28303	,	_	_	_	_	
210-10	28304-28308	copy	_	_	_	_	
210-11	28309-28312	the	_	_	_	_	
210-12	28313-28318	whole	_	_	_	_	
210-13	28319-28326	cluster	_	_	_	_	
210-14	28327-28331	data	_	_	_	_	
210-15	28332-28341	directory	_	_	_	_	
210-16	28342-28345	and	_	_	_	_	
210-17	28346-28349	any	_	_	_	_	
210-18	28350-28361	tablespaces	_	_	_	_	
210-19	28362-28364	to	_	_	_	_	
210-20	28365-28366	a	_	_	_	_	
210-21	28367-28376	temporary	_	_	_	_	
210-22	28377-28385	location	_	_	_	_	
210-23	28386-28388	in	_	_	_	_	
210-24	28389-28393	case	_	_	_	_	
210-25	28394-28397	you	_	_	_	_	
210-26	28398-28402	need	_	_	_	_	
210-27	28403-28407	them	_	_	_	_	
210-28	28408-28413	later	_	_	_	_	
210-29	28413-28414	.	_	_	_	_	

#Text=Note that this precaution will require that you have enough free space on your system to hold two copies of your existing database.
211-1	28415-28419	Note	_	_	_	_	
211-2	28420-28424	that	_	_	_	_	
211-3	28425-28429	this	_	_	_	_	
211-4	28430-28440	precaution	_	_	_	_	
211-5	28441-28445	will	_	_	_	_	
211-6	28446-28453	require	_	_	_	_	
211-7	28454-28458	that	_	_	_	_	
211-8	28459-28462	you	_	_	_	_	
211-9	28463-28467	have	_	_	_	_	
211-10	28468-28474	enough	_	_	_	_	
211-11	28475-28479	free	_	_	_	_	
211-12	28480-28485	space	_	_	_	_	
211-13	28486-28488	on	_	_	_	_	
211-14	28489-28493	your	_	_	_	_	
211-15	28494-28500	system	_	_	_	_	
211-16	28501-28503	to	_	_	_	_	
211-17	28504-28508	hold	_	_	_	_	
211-18	28509-28512	two	_	_	_	_	
211-19	28513-28519	copies	_	_	_	_	
211-20	28520-28522	of	_	_	_	_	
211-21	28523-28527	your	_	_	_	_	
211-22	28528-28536	existing	_	_	_	_	
211-23	28537-28545	database	_	_	_	_	
211-24	28545-28546	.	_	_	_	_	

#Text=If you do not have enough space, you should at least save the contents of the cluster's pg_wal subdirectory, as it might contain logs which were not archived before the system went down.
212-1	28547-28549	If	_	_	_	_	
212-2	28550-28553	you	_	_	_	_	
212-3	28554-28556	do	_	_	_	_	
212-4	28557-28560	not	_	_	_	_	
212-5	28561-28565	have	_	_	_	_	
212-6	28566-28572	enough	_	_	_	_	
212-7	28573-28578	space	_	_	_	_	
212-8	28578-28579	,	_	_	_	_	
212-9	28580-28583	you	_	_	_	_	
212-10	28584-28590	should	_	_	_	_	
212-11	28591-28593	at	_	_	_	_	
212-12	28594-28599	least	_	_	_	_	
212-13	28600-28604	save	_	_	_	_	
212-14	28605-28608	the	_	_	_	_	
212-15	28609-28617	contents	_	_	_	_	
212-16	28618-28620	of	_	_	_	_	
212-17	28621-28624	the	_	_	_	_	
212-18	28625-28634	cluster's	_	_	_	_	
212-19	28635-28641	pg_wal	_	_	_	_	
212-20	28642-28654	subdirectory	_	_	_	_	
212-21	28654-28655	,	_	_	_	_	
212-22	28656-28658	as	_	_	_	_	
212-23	28659-28661	it	_	_	_	_	
212-24	28662-28667	might	_	_	_	_	
212-25	28668-28675	contain	_	_	_	_	
212-26	28676-28680	logs	_	_	_	_	
212-27	28681-28686	which	_	_	_	_	
212-28	28687-28691	were	_	_	_	_	
212-29	28692-28695	not	_	_	_	_	
212-30	28696-28704	archived	_	_	_	_	
212-31	28705-28711	before	_	_	_	_	
212-32	28712-28715	the	_	_	_	_	
212-33	28716-28722	system	_	_	_	_	
212-34	28723-28727	went	_	_	_	_	
212-35	28728-28732	down	_	_	_	_	
212-36	28732-28733	.	_	_	_	_	

#Text=Remove all existing files and subdirectories under the cluster data directory and under the root directories of any tablespaces you are using.
213-1	28734-28740	Remove	_	_	_	_	
213-2	28741-28744	all	_	_	_	_	
213-3	28745-28753	existing	_	_	_	_	
213-4	28754-28759	files	_	_	_	_	
213-5	28760-28763	and	_	_	_	_	
213-6	28764-28778	subdirectories	_	_	_	_	
213-7	28779-28784	under	_	_	_	_	
213-8	28785-28788	the	_	_	_	_	
213-9	28789-28796	cluster	_	_	_	_	
213-10	28797-28801	data	_	_	_	_	
213-11	28802-28811	directory	_	_	_	_	
213-12	28812-28815	and	_	_	_	_	
213-13	28816-28821	under	_	_	_	_	
213-14	28822-28825	the	_	_	_	_	
213-15	28826-28830	root	_	_	_	_	
213-16	28831-28842	directories	_	_	_	_	
213-17	28843-28845	of	_	_	_	_	
213-18	28846-28849	any	_	_	_	_	
213-19	28850-28861	tablespaces	_	_	_	_	
213-20	28862-28865	you	_	_	_	_	
213-21	28866-28869	are	_	_	_	_	
213-22	28870-28875	using	_	_	_	_	
213-23	28875-28876	.	_	_	_	_	

#Text=Restore the database files from your file system backup.
214-1	28877-28884	Restore	_	_	_	_	
214-2	28885-28888	the	_	_	_	_	
214-3	28889-28897	database	_	_	_	_	
214-4	28898-28903	files	_	_	_	_	
214-5	28904-28908	from	_	_	_	_	
214-6	28909-28913	your	_	_	_	_	
214-7	28914-28918	file	_	_	_	_	
214-8	28919-28925	system	_	_	_	_	
214-9	28926-28932	backup	_	_	_	_	
214-10	28932-28933	.	_	_	_	_	

#Text=Be sure that they are restored with the right ownership (the database system user, not root!)
215-1	28934-28936	Be	_	_	_	_	
215-2	28937-28941	sure	_	_	_	_	
215-3	28942-28946	that	_	_	_	_	
215-4	28947-28951	they	_	_	_	_	
215-5	28952-28955	are	_	_	_	_	
215-6	28956-28964	restored	_	_	_	_	
215-7	28965-28969	with	_	_	_	_	
215-8	28970-28973	the	_	_	_	_	
215-9	28974-28979	right	_	_	_	_	
215-10	28980-28989	ownership	_	_	_	_	
215-11	28990-28991	(	_	_	_	_	
215-12	28991-28994	the	_	_	_	_	
215-13	28995-29003	database	_	_	_	_	
215-14	29004-29010	system	_	_	_	_	
215-15	29011-29015	user	_	_	_	_	
215-16	29015-29016	,	_	_	_	_	
215-17	29017-29020	not	_	_	_	_	
215-18	29021-29025	root	_	_	_	_	
215-19	29025-29026	!	_	_	_	_	
215-20	29026-29027	)	_	_	_	_	

#Text=and with the right permissions.
216-1	29028-29031	and	_	_	_	_	
216-2	29032-29036	with	_	_	_	_	
216-3	29037-29040	the	_	_	_	_	
216-4	29041-29046	right	_	_	_	_	
216-5	29047-29058	permissions	_	_	_	_	
216-6	29058-29059	.	_	_	_	_	

#Text=If you are using tablespaces, you should verify that the symbolic links in pg_tblspc/ were correctly restored.
217-1	29060-29062	If	_	_	_	_	
217-2	29063-29066	you	_	_	_	_	
217-3	29067-29070	are	_	_	_	_	
217-4	29071-29076	using	_	_	_	_	
217-5	29077-29088	tablespaces	_	_	_	_	
217-6	29088-29089	,	_	_	_	_	
217-7	29090-29093	you	_	_	_	_	
217-8	29094-29100	should	_	_	_	_	
217-9	29101-29107	verify	_	_	_	_	
217-10	29108-29112	that	_	_	_	_	
217-11	29113-29116	the	_	_	_	_	
217-12	29117-29125	symbolic	_	_	_	_	
217-13	29126-29131	links	_	_	_	_	
217-14	29132-29134	in	_	_	_	_	
217-15	29135-29144	pg_tblspc	_	_	_	_	
217-16	29144-29145	/	_	_	_	_	
217-17	29146-29150	were	_	_	_	_	
217-18	29151-29160	correctly	_	_	_	_	
217-19	29161-29169	restored	_	_	_	_	
217-20	29169-29170	.	_	_	_	_	

#Text=Remove any files present in pg_wal/; these came from the file system backup and are therefore probably obsolete rather than current.
218-1	29171-29177	Remove	_	_	_	_	
218-2	29178-29181	any	_	_	_	_	
218-3	29182-29187	files	_	_	_	_	
218-4	29188-29195	present	_	_	_	_	
218-5	29196-29198	in	_	_	_	_	
218-6	29199-29205	pg_wal	_	_	_	_	
218-7	29205-29206	/	_	_	_	_	
218-8	29206-29207	;	_	_	_	_	
218-9	29208-29213	these	_	_	_	_	
218-10	29214-29218	came	_	_	_	_	
218-11	29219-29223	from	_	_	_	_	
218-12	29224-29227	the	_	_	_	_	
218-13	29228-29232	file	_	_	_	_	
218-14	29233-29239	system	_	_	_	_	
218-15	29240-29246	backup	_	_	_	_	
218-16	29247-29250	and	_	_	_	_	
218-17	29251-29254	are	_	_	_	_	
218-18	29255-29264	therefore	_	_	_	_	
218-19	29265-29273	probably	_	_	_	_	
218-20	29274-29282	obsolete	_	_	_	_	
218-21	29283-29289	rather	_	_	_	_	
218-22	29290-29294	than	_	_	_	_	
218-23	29295-29302	current	_	_	_	_	
218-24	29302-29303	.	_	_	_	_	

#Text=If you didn't archive pg_wal/ at all, then recreate it with proper permissions, being careful to ensure that you re-establish it as a symbolic link if you had it set up that way before.
219-1	29304-29306	If	_	_	_	_	
219-2	29307-29310	you	_	_	_	_	
219-3	29311-29317	didn't	_	_	_	_	
219-4	29318-29325	archive	_	_	_	_	
219-5	29326-29332	pg_wal	_	_	_	_	
219-6	29332-29333	/	_	_	_	_	
219-7	29334-29336	at	_	_	_	_	
219-8	29337-29340	all	_	_	_	_	
219-9	29340-29341	,	_	_	_	_	
219-10	29342-29346	then	_	_	_	_	
219-11	29347-29355	recreate	_	_	_	_	
219-12	29356-29358	it	_	_	_	_	
219-13	29359-29363	with	_	_	_	_	
219-14	29364-29370	proper	_	_	_	_	
219-15	29371-29382	permissions	_	_	_	_	
219-16	29382-29383	,	_	_	_	_	
219-17	29384-29389	being	_	_	_	_	
219-18	29390-29397	careful	_	_	_	_	
219-19	29398-29400	to	_	_	_	_	
219-20	29401-29407	ensure	_	_	_	_	
219-21	29408-29412	that	_	_	_	_	
219-22	29413-29416	you	_	_	_	_	
219-23	29417-29429	re-establish	_	_	_	_	
219-24	29430-29432	it	_	_	_	_	
219-25	29433-29435	as	_	_	_	_	
219-26	29436-29437	a	_	_	_	_	
219-27	29438-29446	symbolic	_	_	_	_	
219-28	29447-29451	link	_	_	_	_	
219-29	29452-29454	if	_	_	_	_	
219-30	29455-29458	you	_	_	_	_	
219-31	29459-29462	had	_	_	_	_	
219-32	29463-29465	it	_	_	_	_	
219-33	29466-29469	set	_	_	_	_	
219-34	29470-29472	up	_	_	_	_	
219-35	29473-29477	that	_	_	_	_	
219-36	29478-29481	way	_	_	_	_	
219-37	29482-29488	before	_	_	_	_	
219-38	29488-29489	.	_	_	_	_	

#Text=If you have unarchived WAL segment files that you saved in step 2, copy them into pg_wal/.
220-1	29490-29492	If	_	_	_	_	
220-2	29493-29496	you	_	_	_	_	
220-3	29497-29501	have	_	_	_	_	
220-4	29502-29512	unarchived	_	_	_	_	
220-5	29513-29516	WAL	_	_	_	_	
220-6	29517-29524	segment	_	_	_	_	
220-7	29525-29530	files	_	_	_	_	
220-8	29531-29535	that	_	_	_	_	
220-9	29536-29539	you	_	_	_	_	
220-10	29540-29545	saved	_	_	_	_	
220-11	29546-29548	in	_	_	_	_	
220-12	29549-29553	step	_	_	_	_	
220-13	29554-29555	2	_	_	_	_	
220-14	29555-29556	,	_	_	_	_	
220-15	29557-29561	copy	_	_	_	_	
220-16	29562-29566	them	_	_	_	_	
220-17	29567-29571	into	_	_	_	_	
220-18	29572-29578	pg_wal	_	_	_	_	
220-19	29578-29579	/	_	_	_	_	
220-20	29579-29580	.	_	_	_	_	

#Text=(It is best to copy them, not move them, so you still have the unmodified files if a problem occurs and you have to start over.)
221-1	29581-29582	(	_	_	_	_	
221-2	29582-29584	It	_	_	_	_	
221-3	29585-29587	is	_	_	_	_	
221-4	29588-29592	best	_	_	_	_	
221-5	29593-29595	to	_	_	_	_	
221-6	29596-29600	copy	_	_	_	_	
221-7	29601-29605	them	_	_	_	_	
221-8	29605-29606	,	_	_	_	_	
221-9	29607-29610	not	_	_	_	_	
221-10	29611-29615	move	_	_	_	_	
221-11	29616-29620	them	_	_	_	_	
221-12	29620-29621	,	_	_	_	_	
221-13	29622-29624	so	_	_	_	_	
221-14	29625-29628	you	_	_	_	_	
221-15	29629-29634	still	_	_	_	_	
221-16	29635-29639	have	_	_	_	_	
221-17	29640-29643	the	_	_	_	_	
221-18	29644-29654	unmodified	_	_	_	_	
221-19	29655-29660	files	_	_	_	_	
221-20	29661-29663	if	_	_	_	_	
221-21	29664-29665	a	_	_	_	_	
221-22	29666-29673	problem	_	_	_	_	
221-23	29674-29680	occurs	_	_	_	_	
221-24	29681-29684	and	_	_	_	_	
221-25	29685-29688	you	_	_	_	_	
221-26	29689-29693	have	_	_	_	_	
221-27	29694-29696	to	_	_	_	_	
221-28	29697-29702	start	_	_	_	_	
221-29	29703-29707	over	_	_	_	_	
221-30	29707-29708	.	_	_	_	_	
221-31	29708-29709	)	_	_	_	_	

#Text=Set recovery configuration settings in postgresql.conf (see Section 19.5.4) and create a file recovery.signal in the cluster data directory.
222-1	29710-29713	Set	_	_	_	_	
222-2	29714-29722	recovery	_	_	_	_	
222-3	29723-29736	configuration	_	_	_	_	
222-4	29737-29745	settings	_	_	_	_	
222-5	29746-29748	in	_	_	_	_	
222-6	29749-29764	postgresql.conf	_	_	_	_	
222-7	29765-29766	(	_	_	_	_	
222-8	29766-29769	see	_	_	_	_	
222-9	29770-29777	Section	_	_	_	_	
222-10	29777-29778	 	_	_	_	_	
222-11	29778-29784	19.5.4	_	_	_	_	
222-12	29784-29785	)	_	_	_	_	
222-13	29786-29789	and	_	_	_	_	
222-14	29790-29796	create	_	_	_	_	
222-15	29797-29798	a	_	_	_	_	
222-16	29799-29803	file	_	_	_	_	
222-17	29804-29819	recovery.signal	_	_	_	_	
222-18	29820-29822	in	_	_	_	_	
222-19	29823-29826	the	_	_	_	_	
222-20	29827-29834	cluster	_	_	_	_	
222-21	29835-29839	data	_	_	_	_	
222-22	29840-29849	directory	_	_	_	_	
222-23	29849-29850	.	_	_	_	_	

#Text=You might also want to temporarily modify pg_hba.conf to prevent ordinary users from connecting until you are sure the recovery was successful.
223-1	29851-29854	You	_	_	_	_	
223-2	29855-29860	might	_	_	_	_	
223-3	29861-29865	also	_	_	_	_	
223-4	29866-29870	want	_	_	_	_	
223-5	29871-29873	to	_	_	_	_	
223-6	29874-29885	temporarily	_	_	_	_	
223-7	29886-29892	modify	_	_	_	_	
223-8	29893-29904	pg_hba.conf	_	_	_	_	
223-9	29905-29907	to	_	_	_	_	
223-10	29908-29915	prevent	_	_	_	_	
223-11	29916-29924	ordinary	_	_	_	_	
223-12	29925-29930	users	_	_	_	_	
223-13	29931-29935	from	_	_	_	_	
223-14	29936-29946	connecting	_	_	_	_	
223-15	29947-29952	until	_	_	_	_	
223-16	29953-29956	you	_	_	_	_	
223-17	29957-29960	are	_	_	_	_	
223-18	29961-29965	sure	_	_	_	_	
223-19	29966-29969	the	_	_	_	_	
223-20	29970-29978	recovery	_	_	_	_	
223-21	29979-29982	was	_	_	_	_	
223-22	29983-29993	successful	_	_	_	_	
223-23	29993-29994	.	_	_	_	_	

#Text=Start the server.
224-1	29995-30000	Start	_	_	_	_	
224-2	30001-30004	the	_	_	_	_	
224-3	30005-30011	server	_	_	_	_	
224-4	30011-30012	.	_	_	_	_	

#Text=The server will go into recovery mode and proceed to read through the archived WAL files it needs.
225-1	30013-30016	The	_	_	_	_	
225-2	30017-30023	server	_	_	_	_	
225-3	30024-30028	will	_	_	_	_	
225-4	30029-30031	go	_	_	_	_	
225-5	30032-30036	into	_	_	_	_	
225-6	30037-30045	recovery	_	_	_	_	
225-7	30046-30050	mode	_	_	_	_	
225-8	30051-30054	and	_	_	_	_	
225-9	30055-30062	proceed	_	_	_	_	
225-10	30063-30065	to	_	_	_	_	
225-11	30066-30070	read	_	_	_	_	
225-12	30071-30078	through	_	_	_	_	
225-13	30079-30082	the	_	_	_	_	
225-14	30083-30091	archived	_	_	_	_	
225-15	30092-30095	WAL	_	_	_	_	
225-16	30096-30101	files	_	_	_	_	
225-17	30102-30104	it	_	_	_	_	
225-18	30105-30110	needs	_	_	_	_	
225-19	30110-30111	.	_	_	_	_	

#Text=Should the recovery be terminated because of an external error, the server can simply be restarted and it will continue recovery.
226-1	30112-30118	Should	_	_	_	_	
226-2	30119-30122	the	_	_	_	_	
226-3	30123-30131	recovery	_	_	_	_	
226-4	30132-30134	be	_	_	_	_	
226-5	30135-30145	terminated	_	_	_	_	
226-6	30146-30153	because	_	_	_	_	
226-7	30154-30156	of	_	_	_	_	
226-8	30157-30159	an	_	_	_	_	
226-9	30160-30168	external	_	_	_	_	
226-10	30169-30174	error	_	_	_	_	
226-11	30174-30175	,	_	_	_	_	
226-12	30176-30179	the	_	_	_	_	
226-13	30180-30186	server	_	_	_	_	
226-14	30187-30190	can	_	_	_	_	
226-15	30191-30197	simply	_	_	_	_	
226-16	30198-30200	be	_	_	_	_	
226-17	30201-30210	restarted	_	_	_	_	
226-18	30211-30214	and	_	_	_	_	
226-19	30215-30217	it	_	_	_	_	
226-20	30218-30222	will	_	_	_	_	
226-21	30223-30231	continue	_	_	_	_	
226-22	30232-30240	recovery	_	_	_	_	
226-23	30240-30241	.	_	_	_	_	

#Text=Upon completion of the recovery process, the server will remove recovery.signal (to prevent accidentally re-entering recovery mode later) and then commence normal database operations.
227-1	30242-30246	Upon	_	_	_	_	
227-2	30247-30257	completion	_	_	_	_	
227-3	30258-30260	of	_	_	_	_	
227-4	30261-30264	the	_	_	_	_	
227-5	30265-30273	recovery	_	_	_	_	
227-6	30274-30281	process	_	_	_	_	
227-7	30281-30282	,	_	_	_	_	
227-8	30283-30286	the	_	_	_	_	
227-9	30287-30293	server	_	_	_	_	
227-10	30294-30298	will	_	_	_	_	
227-11	30299-30305	remove	_	_	_	_	
227-12	30306-30321	recovery.signal	_	_	_	_	
227-13	30322-30323	(	_	_	_	_	
227-14	30323-30325	to	_	_	_	_	
227-15	30326-30333	prevent	_	_	_	_	
227-16	30334-30346	accidentally	_	_	_	_	
227-17	30347-30358	re-entering	_	_	_	_	
227-18	30359-30367	recovery	_	_	_	_	
227-19	30368-30372	mode	_	_	_	_	
227-20	30373-30378	later	_	_	_	_	
227-21	30378-30379	)	_	_	_	_	
227-22	30380-30383	and	_	_	_	_	
227-23	30384-30388	then	_	_	_	_	
227-24	30389-30397	commence	_	_	_	_	
227-25	30398-30404	normal	_	_	_	_	
227-26	30405-30413	database	_	_	_	_	
227-27	30414-30424	operations	_	_	_	_	
227-28	30424-30425	.	_	_	_	_	

#Text=Inspect the contents of the database to ensure you have recovered to the desired state.
228-1	30426-30433	Inspect	_	_	_	_	
228-2	30434-30437	the	_	_	_	_	
228-3	30438-30446	contents	_	_	_	_	
228-4	30447-30449	of	_	_	_	_	
228-5	30450-30453	the	_	_	_	_	
228-6	30454-30462	database	_	_	_	_	
228-7	30463-30465	to	_	_	_	_	
228-8	30466-30472	ensure	_	_	_	_	
228-9	30473-30476	you	_	_	_	_	
228-10	30477-30481	have	_	_	_	_	
228-11	30482-30491	recovered	_	_	_	_	
228-12	30492-30494	to	_	_	_	_	
228-13	30495-30498	the	_	_	_	_	
228-14	30499-30506	desired	_	_	_	_	
228-15	30507-30512	state	_	_	_	_	
228-16	30512-30513	.	_	_	_	_	

#Text=If not, return to step 1.
229-1	30514-30516	If	_	_	_	_	
229-2	30517-30520	not	_	_	_	_	
229-3	30520-30521	,	_	_	_	_	
229-4	30522-30528	return	_	_	_	_	
229-5	30529-30531	to	_	_	_	_	
229-6	30532-30536	step	_	_	_	_	
229-7	30537-30538	1	_	_	_	_	
229-8	30538-30539	.	_	_	_	_	

#Text=If all is well, allow your users to connect by restoring pg_hba.conf to normal.
230-1	30540-30542	If	_	_	_	_	
230-2	30543-30546	all	_	_	_	_	
230-3	30547-30549	is	_	_	_	_	
230-4	30550-30554	well	_	_	_	_	
230-5	30554-30555	,	_	_	_	_	
230-6	30556-30561	allow	_	_	_	_	
230-7	30562-30566	your	_	_	_	_	
230-8	30567-30572	users	_	_	_	_	
230-9	30573-30575	to	_	_	_	_	
230-10	30576-30583	connect	_	_	_	_	
230-11	30584-30586	by	_	_	_	_	
230-12	30587-30596	restoring	_	_	_	_	
230-13	30597-30608	pg_hba.conf	_	_	_	_	
230-14	30609-30611	to	_	_	_	_	
230-15	30612-30618	normal	_	_	_	_	
230-16	30618-30619	.	_	_	_	_	

#Text=The key part of all this is to set up a recovery configuration that describes how you want to recover and how far the recovery should run.
231-1	30620-30623	The	_	_	_	_	
231-2	30624-30627	key	_	_	_	_	
231-3	30628-30632	part	_	_	_	_	
231-4	30633-30635	of	_	_	_	_	
231-5	30636-30639	all	_	_	_	_	
231-6	30640-30644	this	_	_	_	_	
231-7	30645-30647	is	_	_	_	_	
231-8	30648-30650	to	_	_	_	_	
231-9	30651-30654	set	_	_	_	_	
231-10	30655-30657	up	_	_	_	_	
231-11	30658-30659	a	_	_	_	_	
231-12	30660-30668	recovery	_	_	_	_	
231-13	30669-30682	configuration	_	_	_	_	
231-14	30683-30687	that	_	_	_	_	
231-15	30688-30697	describes	_	_	_	_	
231-16	30698-30701	how	_	_	_	_	
231-17	30702-30705	you	_	_	_	_	
231-18	30706-30710	want	_	_	_	_	
231-19	30711-30713	to	_	_	_	_	
231-20	30714-30721	recover	_	_	_	_	
231-21	30722-30725	and	_	_	_	_	
231-22	30726-30729	how	_	_	_	_	
231-23	30730-30733	far	_	_	_	_	
231-24	30734-30737	the	_	_	_	_	
231-25	30738-30746	recovery	_	_	_	_	
231-26	30747-30753	should	_	_	_	_	
231-27	30754-30757	run	_	_	_	_	
231-28	30757-30758	.	_	_	_	_	

#Text=The one thing that you absolutely must specify is the restore_command, which tells PostgreSQL how to retrieve archived WAL file segments.
232-1	30759-30762	The	_	_	_	_	
232-2	30763-30766	one	_	_	_	_	
232-3	30767-30772	thing	_	_	_	_	
232-4	30773-30777	that	_	_	_	_	
232-5	30778-30781	you	_	_	_	_	
232-6	30782-30792	absolutely	_	_	_	_	
232-7	30793-30797	must	_	_	_	_	
232-8	30798-30805	specify	_	_	_	_	
232-9	30806-30808	is	_	_	_	_	
232-10	30809-30812	the	_	_	_	_	
232-11	30813-30828	restore_command	_	_	_	_	
232-12	30828-30829	,	_	_	_	_	
232-13	30830-30835	which	_	_	_	_	
232-14	30836-30841	tells	_	_	_	_	
232-15	30842-30852	PostgreSQL	_	_	_	_	
232-16	30853-30856	how	_	_	_	_	
232-17	30857-30859	to	_	_	_	_	
232-18	30860-30868	retrieve	_	_	_	_	
232-19	30869-30877	archived	_	_	_	_	
232-20	30878-30881	WAL	_	_	_	_	
232-21	30882-30886	file	_	_	_	_	
232-22	30887-30895	segments	_	_	_	_	
232-23	30895-30896	.	_	_	_	_	

#Text=Like the archive_command, this is a shell command string.
233-1	30897-30901	Like	_	_	_	_	
233-2	30902-30905	the	_	_	_	_	
233-3	30906-30921	archive_command	_	_	_	_	
233-4	30921-30922	,	_	_	_	_	
233-5	30923-30927	this	_	_	_	_	
233-6	30928-30930	is	_	_	_	_	
233-7	30931-30932	a	_	_	_	_	
233-8	30933-30938	shell	_	_	_	_	
233-9	30939-30946	command	_	_	_	_	
233-10	30947-30953	string	_	_	_	_	
233-11	30953-30954	.	_	_	_	_	

#Text=It can contain %f, which is replaced by the name of the desired log file, and %p, which is replaced by the path name to copy the log file to.
234-1	30955-30957	It	_	_	_	_	
234-2	30958-30961	can	_	_	_	_	
234-3	30962-30969	contain	_	_	_	_	
234-4	30970-30971	%	_	_	_	_	
234-5	30971-30972	f	_	_	_	_	
234-6	30972-30973	,	_	_	_	_	
234-7	30974-30979	which	_	_	_	_	
234-8	30980-30982	is	_	_	_	_	
234-9	30983-30991	replaced	_	_	_	_	
234-10	30992-30994	by	_	_	_	_	
234-11	30995-30998	the	_	_	_	_	
234-12	30999-31003	name	_	_	_	_	
234-13	31004-31006	of	_	_	_	_	
234-14	31007-31010	the	_	_	_	_	
234-15	31011-31018	desired	_	_	_	_	
234-16	31019-31022	log	_	_	_	_	
234-17	31023-31027	file	_	_	_	_	
234-18	31027-31028	,	_	_	_	_	
234-19	31029-31032	and	_	_	_	_	
234-20	31033-31034	%	_	_	_	_	
234-21	31034-31035	p	_	_	_	_	
234-22	31035-31036	,	_	_	_	_	
234-23	31037-31042	which	_	_	_	_	
234-24	31043-31045	is	_	_	_	_	
234-25	31046-31054	replaced	_	_	_	_	
234-26	31055-31057	by	_	_	_	_	
234-27	31058-31061	the	_	_	_	_	
234-28	31062-31066	path	_	_	_	_	
234-29	31067-31071	name	_	_	_	_	
234-30	31072-31074	to	_	_	_	_	
234-31	31075-31079	copy	_	_	_	_	
234-32	31080-31083	the	_	_	_	_	
234-33	31084-31087	log	_	_	_	_	
234-34	31088-31092	file	_	_	_	_	
234-35	31093-31095	to	_	_	_	_	
234-36	31095-31096	.	_	_	_	_	

#Text=(The path name is relative to the current working directory, i.e., the cluster's data directory.)
235-1	31097-31098	(	_	_	_	_	
235-2	31098-31101	The	_	_	_	_	
235-3	31102-31106	path	_	_	_	_	
235-4	31107-31111	name	_	_	_	_	
235-5	31112-31114	is	_	_	_	_	
235-6	31115-31123	relative	_	_	_	_	
235-7	31124-31126	to	_	_	_	_	
235-8	31127-31130	the	_	_	_	_	
235-9	31131-31138	current	_	_	_	_	
235-10	31139-31146	working	_	_	_	_	
235-11	31147-31156	directory	_	_	_	_	
235-12	31156-31157	,	_	_	_	_	
235-13	31158-31161	i.e	_	_	_	_	
235-14	31161-31162	.	_	_	_	_	
235-15	31162-31163	,	_	_	_	_	
235-16	31164-31167	the	_	_	_	_	
235-17	31168-31177	cluster's	_	_	_	_	
235-18	31178-31182	data	_	_	_	_	
235-19	31183-31192	directory	_	_	_	_	
235-20	31192-31193	.	_	_	_	_	
235-21	31193-31194	)	_	_	_	_	

#Text=Write %% if you need to embed an actual % character in the command.
236-1	31195-31200	Write	_	_	_	_	
236-2	31201-31202	%	_	_	_	_	
236-3	31202-31203	%	_	_	_	_	
236-4	31204-31206	if	_	_	_	_	
236-5	31207-31210	you	_	_	_	_	
236-6	31211-31215	need	_	_	_	_	
236-7	31216-31218	to	_	_	_	_	
236-8	31219-31224	embed	_	_	_	_	
236-9	31225-31227	an	_	_	_	_	
236-10	31228-31234	actual	_	_	_	_	
236-11	31235-31236	%	_	_	_	_	
236-12	31237-31246	character	_	_	_	_	
236-13	31247-31249	in	_	_	_	_	
236-14	31250-31253	the	_	_	_	_	
236-15	31254-31261	command	_	_	_	_	
236-16	31261-31262	.	_	_	_	_	

#Text=The simplest useful command is something like:
#Text=restore_command = 'cp /mnt/server/archivedir/%f %p'
#Text=which will copy previously archived WAL segments from the directory /mnt/server/archivedir.
237-1	31263-31266	The	_	_	_	_	
237-2	31267-31275	simplest	_	_	_	_	
237-3	31276-31282	useful	_	_	_	_	
237-4	31283-31290	command	_	_	_	_	
237-5	31291-31293	is	_	_	_	_	
237-6	31294-31303	something	_	_	_	_	
237-7	31304-31308	like	_	_	_	_	
237-8	31308-31309	:	_	_	_	_	
237-9	31310-31325	restore_command	_	_	_	_	
237-10	31326-31327	=	_	_	_	_	
237-11	31328-31329	'	_	_	_	_	
237-12	31329-31331	cp	_	_	_	_	
237-13	31332-31333	/	_	_	_	_	
237-14	31333-31336	mnt	_	_	_	_	
237-15	31336-31337	/	_	_	_	_	
237-16	31337-31343	server	_	_	_	_	
237-17	31343-31344	/	_	_	_	_	
237-18	31344-31354	archivedir	_	_	_	_	
237-19	31354-31355	/	_	_	_	_	
237-20	31355-31356	%	_	_	_	_	
237-21	31356-31357	f	_	_	_	_	
237-22	31358-31359	%	_	_	_	_	
237-23	31359-31360	p	_	_	_	_	
237-24	31360-31361	'	_	_	_	_	
237-25	31362-31367	which	_	_	_	_	
237-26	31368-31372	will	_	_	_	_	
237-27	31373-31377	copy	_	_	_	_	
237-28	31378-31388	previously	_	_	_	_	
237-29	31389-31397	archived	_	_	_	_	
237-30	31398-31401	WAL	_	_	_	_	
237-31	31402-31410	segments	_	_	_	_	
237-32	31411-31415	from	_	_	_	_	
237-33	31416-31419	the	_	_	_	_	
237-34	31420-31429	directory	_	_	_	_	
237-35	31430-31431	/	_	_	_	_	
237-36	31431-31434	mnt	_	_	_	_	
237-37	31434-31435	/	_	_	_	_	
237-38	31435-31441	server	_	_	_	_	
237-39	31441-31442	/	_	_	_	_	
237-40	31442-31452	archivedir	_	_	_	_	
237-41	31452-31453	.	_	_	_	_	

#Text=Of course, you can use something much more complicated, perhaps even a shell script that requests the operator to mount an appropriate tape.
238-1	31454-31456	Of	_	_	_	_	
238-2	31457-31463	course	_	_	_	_	
238-3	31463-31464	,	_	_	_	_	
238-4	31465-31468	you	_	_	_	_	
238-5	31469-31472	can	_	_	_	_	
238-6	31473-31476	use	_	_	_	_	
238-7	31477-31486	something	_	_	_	_	
238-8	31487-31491	much	_	_	_	_	
238-9	31492-31496	more	_	_	_	_	
238-10	31497-31508	complicated	_	_	_	_	
238-11	31508-31509	,	_	_	_	_	
238-12	31510-31517	perhaps	_	_	_	_	
238-13	31518-31522	even	_	_	_	_	
238-14	31523-31524	a	_	_	_	_	
238-15	31525-31530	shell	_	_	_	_	
238-16	31531-31537	script	_	_	_	_	
238-17	31538-31542	that	_	_	_	_	
238-18	31543-31551	requests	_	_	_	_	
238-19	31552-31555	the	_	_	_	_	
238-20	31556-31564	operator	_	_	_	_	
238-21	31565-31567	to	_	_	_	_	
238-22	31568-31573	mount	_	_	_	_	
238-23	31574-31576	an	_	_	_	_	
238-24	31577-31588	appropriate	_	_	_	_	
238-25	31589-31593	tape	_	_	_	_	
238-26	31593-31594	.	_	_	_	_	

#Text=It is important that the command return nonzero exit status on failure.
239-1	31595-31597	It	_	_	_	_	
239-2	31598-31600	is	_	_	_	_	
239-3	31601-31610	important	_	_	_	_	
239-4	31611-31615	that	_	_	_	_	
239-5	31616-31619	the	_	_	_	_	
239-6	31620-31627	command	_	_	_	_	
239-7	31628-31634	return	_	_	_	_	
239-8	31635-31642	nonzero	_	_	_	_	
239-9	31643-31647	exit	_	_	_	_	
239-10	31648-31654	status	_	_	_	_	
239-11	31655-31657	on	_	_	_	_	
239-12	31658-31665	failure	_	_	_	_	
239-13	31665-31666	.	_	_	_	_	

#Text=The command will be called requesting files that are not present in the archive; it must return nonzero when so asked.
240-1	31667-31670	The	_	_	_	_	
240-2	31671-31678	command	_	_	_	_	
240-3	31679-31683	will	_	_	_	_	
240-4	31684-31686	be	_	_	_	_	
240-5	31687-31693	called	_	_	_	_	
240-6	31694-31704	requesting	_	_	_	_	
240-7	31705-31710	files	_	_	_	_	
240-8	31711-31715	that	_	_	_	_	
240-9	31716-31719	are	_	_	_	_	
240-10	31720-31723	not	_	_	_	_	
240-11	31724-31731	present	_	_	_	_	
240-12	31732-31734	in	_	_	_	_	
240-13	31735-31738	the	_	_	_	_	
240-14	31739-31746	archive	_	_	_	_	
240-15	31746-31747	;	_	_	_	_	
240-16	31748-31750	it	_	_	_	_	
240-17	31751-31755	must	_	_	_	_	
240-18	31756-31762	return	_	_	_	_	
240-19	31763-31770	nonzero	_	_	_	_	
240-20	31771-31775	when	_	_	_	_	
240-21	31776-31778	so	_	_	_	_	
240-22	31779-31784	asked	_	_	_	_	
240-23	31784-31785	.	_	_	_	_	

#Text=This is not an error condition.
241-1	31786-31790	This	_	_	_	_	
241-2	31791-31793	is	_	_	_	_	
241-3	31794-31797	not	_	_	_	_	
241-4	31798-31800	an	_	_	_	_	
241-5	31801-31806	error	_	_	_	_	
241-6	31807-31816	condition	_	_	_	_	
241-7	31816-31817	.	_	_	_	_	

#Text=An exception is that if the command was terminated by a signal (other than SIGTERM, which is used as part of a database server shutdown) or an error by the shell (such as command not found), then recovery will abort and the server will not start up.
242-1	31818-31820	An	_	_	_	_	
242-2	31821-31830	exception	_	_	_	_	
242-3	31831-31833	is	_	_	_	_	
242-4	31834-31838	that	_	_	_	_	
242-5	31839-31841	if	_	_	_	_	
242-6	31842-31845	the	_	_	_	_	
242-7	31846-31853	command	_	_	_	_	
242-8	31854-31857	was	_	_	_	_	
242-9	31858-31868	terminated	_	_	_	_	
242-10	31869-31871	by	_	_	_	_	
242-11	31872-31873	a	_	_	_	_	
242-12	31874-31880	signal	_	_	_	_	
242-13	31881-31882	(	_	_	_	_	
242-14	31882-31887	other	_	_	_	_	
242-15	31888-31892	than	_	_	_	_	
242-16	31893-31900	SIGTERM	_	_	_	_	
242-17	31900-31901	,	_	_	_	_	
242-18	31902-31907	which	_	_	_	_	
242-19	31908-31910	is	_	_	_	_	
242-20	31911-31915	used	_	_	_	_	
242-21	31916-31918	as	_	_	_	_	
242-22	31919-31923	part	_	_	_	_	
242-23	31924-31926	of	_	_	_	_	
242-24	31927-31928	a	_	_	_	_	
242-25	31929-31937	database	_	_	_	_	
242-26	31938-31944	server	_	_	_	_	
242-27	31945-31953	shutdown	_	_	_	_	
242-28	31953-31954	)	_	_	_	_	
242-29	31955-31957	or	_	_	_	_	
242-30	31958-31960	an	_	_	_	_	
242-31	31961-31966	error	_	_	_	_	
242-32	31967-31969	by	_	_	_	_	
242-33	31970-31973	the	_	_	_	_	
242-34	31974-31979	shell	_	_	_	_	
242-35	31980-31981	(	_	_	_	_	
242-36	31981-31985	such	_	_	_	_	
242-37	31986-31988	as	_	_	_	_	
242-38	31989-31996	command	_	_	_	_	
242-39	31997-32000	not	_	_	_	_	
242-40	32001-32006	found	_	_	_	_	
242-41	32006-32007	)	_	_	_	_	
242-42	32007-32008	,	_	_	_	_	
242-43	32009-32013	then	_	_	_	_	
242-44	32014-32022	recovery	_	_	_	_	
242-45	32023-32027	will	_	_	_	_	
242-46	32028-32033	abort	_	_	_	_	
242-47	32034-32037	and	_	_	_	_	
242-48	32038-32041	the	_	_	_	_	
242-49	32042-32048	server	_	_	_	_	
242-50	32049-32053	will	_	_	_	_	
242-51	32054-32057	not	_	_	_	_	
242-52	32058-32063	start	_	_	_	_	
242-53	32064-32066	up	_	_	_	_	
242-54	32066-32067	.	_	_	_	_	

#Text=Not all of the requested files will be WAL segment files; you should also expect requests for files with a suffix of .history.
243-1	32068-32071	Not	_	_	_	_	
243-2	32072-32075	all	_	_	_	_	
243-3	32076-32078	of	_	_	_	_	
243-4	32079-32082	the	_	_	_	_	
243-5	32083-32092	requested	_	_	_	_	
243-6	32093-32098	files	_	_	_	_	
243-7	32099-32103	will	_	_	_	_	
243-8	32104-32106	be	_	_	_	_	
243-9	32107-32110	WAL	_	_	_	_	
243-10	32111-32118	segment	_	_	_	_	
243-11	32119-32124	files	_	_	_	_	
243-12	32124-32125	;	_	_	_	_	
243-13	32126-32129	you	_	_	_	_	
243-14	32130-32136	should	_	_	_	_	
243-15	32137-32141	also	_	_	_	_	
243-16	32142-32148	expect	_	_	_	_	
243-17	32149-32157	requests	_	_	_	_	
243-18	32158-32161	for	_	_	_	_	
243-19	32162-32167	files	_	_	_	_	
243-20	32168-32172	with	_	_	_	_	
243-21	32173-32174	a	_	_	_	_	
243-22	32175-32181	suffix	_	_	_	_	
243-23	32182-32184	of	_	_	_	_	
243-24	32185-32186	.	_	_	_	_	
243-25	32186-32193	history	_	_	_	_	
243-26	32193-32194	.	_	_	_	_	

#Text=Also be aware that the base name of the %p path will be different from %f; do not expect them to be interchangeable.
244-1	32195-32199	Also	_	_	_	_	
244-2	32200-32202	be	_	_	_	_	
244-3	32203-32208	aware	_	_	_	_	
244-4	32209-32213	that	_	_	_	_	
244-5	32214-32217	the	_	_	_	_	
244-6	32218-32222	base	_	_	_	_	
244-7	32223-32227	name	_	_	_	_	
244-8	32228-32230	of	_	_	_	_	
244-9	32231-32234	the	_	_	_	_	
244-10	32235-32236	%	_	_	_	_	
244-11	32236-32237	p	_	_	_	_	
244-12	32238-32242	path	_	_	_	_	
244-13	32243-32247	will	_	_	_	_	
244-14	32248-32250	be	_	_	_	_	
244-15	32251-32260	different	_	_	_	_	
244-16	32261-32265	from	_	_	_	_	
244-17	32266-32267	%	_	_	_	_	
244-18	32267-32268	f	_	_	_	_	
244-19	32268-32269	;	_	_	_	_	
244-20	32270-32272	do	_	_	_	_	
244-21	32273-32276	not	_	_	_	_	
244-22	32277-32283	expect	_	_	_	_	
244-23	32284-32288	them	_	_	_	_	
244-24	32289-32291	to	_	_	_	_	
244-25	32292-32294	be	_	_	_	_	
244-26	32295-32310	interchangeable	_	_	_	_	
244-27	32310-32311	.	_	_	_	_	

#Text=WAL segments that cannot be found in the archive will be sought in pg_wal/; this allows use of recent un-archived segments.
245-1	32312-32315	WAL	_	_	_	_	
245-2	32316-32324	segments	_	_	_	_	
245-3	32325-32329	that	_	_	_	_	
245-4	32330-32336	cannot	_	_	_	_	
245-5	32337-32339	be	_	_	_	_	
245-6	32340-32345	found	_	_	_	_	
245-7	32346-32348	in	_	_	_	_	
245-8	32349-32352	the	_	_	_	_	
245-9	32353-32360	archive	_	_	_	_	
245-10	32361-32365	will	_	_	_	_	
245-11	32366-32368	be	_	_	_	_	
245-12	32369-32375	sought	_	_	_	_	
245-13	32376-32378	in	_	_	_	_	
245-14	32379-32385	pg_wal	_	_	_	_	
245-15	32385-32386	/	_	_	_	_	
245-16	32386-32387	;	_	_	_	_	
245-17	32388-32392	this	_	_	_	_	
245-18	32393-32399	allows	_	_	_	_	
245-19	32400-32403	use	_	_	_	_	
245-20	32404-32406	of	_	_	_	_	
245-21	32407-32413	recent	_	_	_	_	
245-22	32414-32425	un-archived	_	_	_	_	
245-23	32426-32434	segments	_	_	_	_	
245-24	32434-32435	.	_	_	_	_	

#Text=However, segments that are available from the archive will be used in preference to files in pg_wal/.
246-1	32436-32443	However	_	_	_	_	
246-2	32443-32444	,	_	_	_	_	
246-3	32445-32453	segments	_	_	_	_	
246-4	32454-32458	that	_	_	_	_	
246-5	32459-32462	are	_	_	_	_	
246-6	32463-32472	available	_	_	_	_	
246-7	32473-32477	from	_	_	_	_	
246-8	32478-32481	the	_	_	_	_	
246-9	32482-32489	archive	_	_	_	_	
246-10	32490-32494	will	_	_	_	_	
246-11	32495-32497	be	_	_	_	_	
246-12	32498-32502	used	_	_	_	_	
246-13	32503-32505	in	_	_	_	_	
246-14	32506-32516	preference	_	_	_	_	
246-15	32517-32519	to	_	_	_	_	
246-16	32520-32525	files	_	_	_	_	
246-17	32526-32528	in	_	_	_	_	
246-18	32529-32535	pg_wal	_	_	_	_	
246-19	32535-32536	/	_	_	_	_	
246-20	32536-32537	.	_	_	_	_	

#Text=Normally, recovery will proceed through all available WAL segments, thereby restoring the database to the current point in time (or as close as possible given the available WAL segments).
247-1	32538-32546	Normally	_	_	_	_	
247-2	32546-32547	,	_	_	_	_	
247-3	32548-32556	recovery	_	_	_	_	
247-4	32557-32561	will	_	_	_	_	
247-5	32562-32569	proceed	_	_	_	_	
247-6	32570-32577	through	_	_	_	_	
247-7	32578-32581	all	_	_	_	_	
247-8	32582-32591	available	_	_	_	_	
247-9	32592-32595	WAL	_	_	_	_	
247-10	32596-32604	segments	_	_	_	_	
247-11	32604-32605	,	_	_	_	_	
247-12	32606-32613	thereby	_	_	_	_	
247-13	32614-32623	restoring	_	_	_	_	
247-14	32624-32627	the	_	_	_	_	
247-15	32628-32636	database	_	_	_	_	
247-16	32637-32639	to	_	_	_	_	
247-17	32640-32643	the	_	_	_	_	
247-18	32644-32651	current	_	_	_	_	
247-19	32652-32657	point	_	_	_	_	
247-20	32658-32660	in	_	_	_	_	
247-21	32661-32665	time	_	_	_	_	
247-22	32666-32667	(	_	_	_	_	
247-23	32667-32669	or	_	_	_	_	
247-24	32670-32672	as	_	_	_	_	
247-25	32673-32678	close	_	_	_	_	
247-26	32679-32681	as	_	_	_	_	
247-27	32682-32690	possible	_	_	_	_	
247-28	32691-32696	given	_	_	_	_	
247-29	32697-32700	the	_	_	_	_	
247-30	32701-32710	available	_	_	_	_	
247-31	32711-32714	WAL	_	_	_	_	
247-32	32715-32723	segments	_	_	_	_	
247-33	32723-32724	)	_	_	_	_	
247-34	32724-32725	.	_	_	_	_	

#Text=Therefore, a normal recovery will end with a “file not found” message, the exact text of the error message depending upon your choice of restore_command.
248-1	32726-32735	Therefore	_	_	_	_	
248-2	32735-32736	,	_	_	_	_	
248-3	32737-32738	a	_	_	_	_	
248-4	32739-32745	normal	_	_	_	_	
248-5	32746-32754	recovery	_	_	_	_	
248-6	32755-32759	will	_	_	_	_	
248-7	32760-32763	end	_	_	_	_	
248-8	32764-32768	with	_	_	_	_	
248-9	32769-32770	a	_	_	_	_	
248-10	32771-32772	“	_	_	_	_	
248-11	32772-32776	file	_	_	_	_	
248-12	32777-32780	not	_	_	_	_	
248-13	32781-32786	found	_	_	_	_	
248-14	32786-32787	”	_	_	_	_	
248-15	32788-32795	message	_	_	_	_	
248-16	32795-32796	,	_	_	_	_	
248-17	32797-32800	the	_	_	_	_	
248-18	32801-32806	exact	_	_	_	_	
248-19	32807-32811	text	_	_	_	_	
248-20	32812-32814	of	_	_	_	_	
248-21	32815-32818	the	_	_	_	_	
248-22	32819-32824	error	_	_	_	_	
248-23	32825-32832	message	_	_	_	_	
248-24	32833-32842	depending	_	_	_	_	
248-25	32843-32847	upon	_	_	_	_	
248-26	32848-32852	your	_	_	_	_	
248-27	32853-32859	choice	_	_	_	_	
248-28	32860-32862	of	_	_	_	_	
248-29	32863-32878	restore_command	_	_	_	_	
248-30	32878-32879	.	_	_	_	_	

#Text=You may also see an error message at the start of recovery for a file named something like 00000001.history.
249-1	32880-32883	You	_	_	_	_	
249-2	32884-32887	may	_	_	_	_	
249-3	32888-32892	also	_	_	_	_	
249-4	32893-32896	see	_	_	_	_	
249-5	32897-32899	an	_	_	_	_	
249-6	32900-32905	error	_	_	_	_	
249-7	32906-32913	message	_	_	_	_	
249-8	32914-32916	at	_	_	_	_	
249-9	32917-32920	the	_	_	_	_	
249-10	32921-32926	start	_	_	_	_	
249-11	32927-32929	of	_	_	_	_	
249-12	32930-32938	recovery	_	_	_	_	
249-13	32939-32942	for	_	_	_	_	
249-14	32943-32944	a	_	_	_	_	
249-15	32945-32949	file	_	_	_	_	
249-16	32950-32955	named	_	_	_	_	
249-17	32956-32965	something	_	_	_	_	
249-18	32966-32970	like	_	_	_	_	
249-19	32971-32979	00000001	_	_	_	_	
249-20	32979-32980	.	_	_	_	_	
249-21	32980-32987	history	_	_	_	_	
249-22	32987-32988	.	_	_	_	_	

#Text=This is also normal and does not indicate a problem in simple recovery situations; see Section 25.3.5 for discussion.
250-1	32989-32993	This	_	_	_	_	
250-2	32994-32996	is	_	_	_	_	
250-3	32997-33001	also	_	_	_	_	
250-4	33002-33008	normal	_	_	_	_	
250-5	33009-33012	and	_	_	_	_	
250-6	33013-33017	does	_	_	_	_	
250-7	33018-33021	not	_	_	_	_	
250-8	33022-33030	indicate	_	_	_	_	
250-9	33031-33032	a	_	_	_	_	
250-10	33033-33040	problem	_	_	_	_	
250-11	33041-33043	in	_	_	_	_	
250-12	33044-33050	simple	_	_	_	_	
250-13	33051-33059	recovery	_	_	_	_	
250-14	33060-33070	situations	_	_	_	_	
250-15	33070-33071	;	_	_	_	_	
250-16	33072-33075	see	_	_	_	_	
250-17	33076-33083	Section	_	_	_	_	
250-18	33083-33084	 	_	_	_	_	
250-19	33084-33090	25.3.5	_	_	_	_	
250-20	33091-33094	for	_	_	_	_	
250-21	33095-33105	discussion	_	_	_	_	
250-22	33105-33106	.	_	_	_	_	

#Text=If you want to recover to some previous point in time (say, right before the junior DBA dropped your main transaction table), just specify the required stopping point.
251-1	33107-33109	If	_	_	_	_	
251-2	33110-33113	you	_	_	_	_	
251-3	33114-33118	want	_	_	_	_	
251-4	33119-33121	to	_	_	_	_	
251-5	33122-33129	recover	_	_	_	_	
251-6	33130-33132	to	_	_	_	_	
251-7	33133-33137	some	_	_	_	_	
251-8	33138-33146	previous	_	_	_	_	
251-9	33147-33152	point	_	_	_	_	
251-10	33153-33155	in	_	_	_	_	
251-11	33156-33160	time	_	_	_	_	
251-12	33161-33162	(	_	_	_	_	
251-13	33162-33165	say	_	_	_	_	
251-14	33165-33166	,	_	_	_	_	
251-15	33167-33172	right	_	_	_	_	
251-16	33173-33179	before	_	_	_	_	
251-17	33180-33183	the	_	_	_	_	
251-18	33184-33190	junior	_	_	_	_	
251-19	33191-33194	DBA	_	_	_	_	
251-20	33195-33202	dropped	_	_	_	_	
251-21	33203-33207	your	_	_	_	_	
251-22	33208-33212	main	_	_	_	_	
251-23	33213-33224	transaction	_	_	_	_	
251-24	33225-33230	table	_	_	_	_	
251-25	33230-33231	)	_	_	_	_	
251-26	33231-33232	,	_	_	_	_	
251-27	33233-33237	just	_	_	_	_	
251-28	33238-33245	specify	_	_	_	_	
251-29	33246-33249	the	_	_	_	_	
251-30	33250-33258	required	_	_	_	_	
251-31	33259-33267	stopping	_	_	_	_	
251-32	33268-33273	point	_	_	_	_	
251-33	33273-33274	.	_	_	_	_	

#Text=You can specify the stop point, known as the “recovery target”, either by date/time, named restore point or by completion of a specific transaction ID.
252-1	33275-33278	You	_	_	_	_	
252-2	33279-33282	can	_	_	_	_	
252-3	33283-33290	specify	_	_	_	_	
252-4	33291-33294	the	_	_	_	_	
252-5	33295-33299	stop	_	_	_	_	
252-6	33300-33305	point	_	_	_	_	
252-7	33305-33306	,	_	_	_	_	
252-8	33307-33312	known	_	_	_	_	
252-9	33313-33315	as	_	_	_	_	
252-10	33316-33319	the	_	_	_	_	
252-11	33320-33321	“	_	_	_	_	
252-12	33321-33329	recovery	_	_	_	_	
252-13	33330-33336	target	_	_	_	_	
252-14	33336-33337	”	_	_	_	_	
252-15	33337-33338	,	_	_	_	_	
252-16	33339-33345	either	_	_	_	_	
252-17	33346-33348	by	_	_	_	_	
252-18	33349-33353	date	_	_	_	_	
252-19	33353-33354	/	_	_	_	_	
252-20	33354-33358	time	_	_	_	_	
252-21	33358-33359	,	_	_	_	_	
252-22	33360-33365	named	_	_	_	_	
252-23	33366-33373	restore	_	_	_	_	
252-24	33374-33379	point	_	_	_	_	
252-25	33380-33382	or	_	_	_	_	
252-26	33383-33385	by	_	_	_	_	
252-27	33386-33396	completion	_	_	_	_	
252-28	33397-33399	of	_	_	_	_	
252-29	33400-33401	a	_	_	_	_	
252-30	33402-33410	specific	_	_	_	_	
252-31	33411-33422	transaction	_	_	_	_	
252-32	33423-33425	ID	_	_	_	_	
252-33	33425-33426	.	_	_	_	_	

#Text=As of this writing only the date/time and named restore point options are very usable, since there are no tools to help you identify with any accuracy which transaction ID to use.
253-1	33427-33429	As	_	_	_	_	
253-2	33430-33432	of	_	_	_	_	
253-3	33433-33437	this	_	_	_	_	
253-4	33438-33445	writing	_	_	_	_	
253-5	33446-33450	only	_	_	_	_	
253-6	33451-33454	the	_	_	_	_	
253-7	33455-33459	date	_	_	_	_	
253-8	33459-33460	/	_	_	_	_	
253-9	33460-33464	time	_	_	_	_	
253-10	33465-33468	and	_	_	_	_	
253-11	33469-33474	named	_	_	_	_	
253-12	33475-33482	restore	_	_	_	_	
253-13	33483-33488	point	_	_	_	_	
253-14	33489-33496	options	_	_	_	_	
253-15	33497-33500	are	_	_	_	_	
253-16	33501-33505	very	_	_	_	_	
253-17	33506-33512	usable	_	_	_	_	
253-18	33512-33513	,	_	_	_	_	
253-19	33514-33519	since	_	_	_	_	
253-20	33520-33525	there	_	_	_	_	
253-21	33526-33529	are	_	_	_	_	
253-22	33530-33532	no	_	_	_	_	
253-23	33533-33538	tools	_	_	_	_	
253-24	33539-33541	to	_	_	_	_	
253-25	33542-33546	help	_	_	_	_	
253-26	33547-33550	you	_	_	_	_	
253-27	33551-33559	identify	_	_	_	_	
253-28	33560-33564	with	_	_	_	_	
253-29	33565-33568	any	_	_	_	_	
253-30	33569-33577	accuracy	_	_	_	_	
253-31	33578-33583	which	_	_	_	_	
253-32	33584-33595	transaction	_	_	_	_	
253-33	33596-33598	ID	_	_	_	_	
253-34	33599-33601	to	_	_	_	_	
253-35	33602-33605	use	_	_	_	_	
253-36	33605-33606	.	_	_	_	_	

#Text=Note
#Text=The stop point must be after the ending time of the base backup, i.e., the end time of pg_stop_backup.
254-1	33607-33611	Note	_	_	_	_	
254-2	33612-33615	The	_	_	_	_	
254-3	33616-33620	stop	_	_	_	_	
254-4	33621-33626	point	_	_	_	_	
254-5	33627-33631	must	_	_	_	_	
254-6	33632-33634	be	_	_	_	_	
254-7	33635-33640	after	_	_	_	_	
254-8	33641-33644	the	_	_	_	_	
254-9	33645-33651	ending	_	_	_	_	
254-10	33652-33656	time	_	_	_	_	
254-11	33657-33659	of	_	_	_	_	
254-12	33660-33663	the	_	_	_	_	
254-13	33664-33668	base	_	_	_	_	
254-14	33669-33675	backup	_	_	_	_	
254-15	33675-33676	,	_	_	_	_	
254-16	33677-33680	i.e	_	_	_	_	
254-17	33680-33681	.	_	_	_	_	
254-18	33681-33682	,	_	_	_	_	
254-19	33683-33686	the	_	_	_	_	
254-20	33687-33690	end	_	_	_	_	
254-21	33691-33695	time	_	_	_	_	
254-22	33696-33698	of	_	_	_	_	
254-23	33699-33713	pg_stop_backup	_	_	_	_	
254-24	33713-33714	.	_	_	_	_	

#Text=You cannot use a base backup to recover to a time when that backup was in progress.
255-1	33715-33718	You	_	_	_	_	
255-2	33719-33725	cannot	_	_	_	_	
255-3	33726-33729	use	_	_	_	_	
255-4	33730-33731	a	_	_	_	_	
255-5	33732-33736	base	_	_	_	_	
255-6	33737-33743	backup	_	_	_	_	
255-7	33744-33746	to	_	_	_	_	
255-8	33747-33754	recover	_	_	_	_	
255-9	33755-33757	to	_	_	_	_	
255-10	33758-33759	a	_	_	_	_	
255-11	33760-33764	time	_	_	_	_	
255-12	33765-33769	when	_	_	_	_	
255-13	33770-33774	that	_	_	_	_	
255-14	33775-33781	backup	_	_	_	_	
255-15	33782-33785	was	_	_	_	_	
255-16	33786-33788	in	_	_	_	_	
255-17	33789-33797	progress	_	_	_	_	
255-18	33797-33798	.	_	_	_	_	

#Text=(To recover to such a time, you must go back to your previous base backup and roll forward from there.)
256-1	33799-33800	(	_	_	_	_	
256-2	33800-33802	To	_	_	_	_	
256-3	33803-33810	recover	_	_	_	_	
256-4	33811-33813	to	_	_	_	_	
256-5	33814-33818	such	_	_	_	_	
256-6	33819-33820	a	_	_	_	_	
256-7	33821-33825	time	_	_	_	_	
256-8	33825-33826	,	_	_	_	_	
256-9	33827-33830	you	_	_	_	_	
256-10	33831-33835	must	_	_	_	_	
256-11	33836-33838	go	_	_	_	_	
256-12	33839-33843	back	_	_	_	_	
256-13	33844-33846	to	_	_	_	_	
256-14	33847-33851	your	_	_	_	_	
256-15	33852-33860	previous	_	_	_	_	
256-16	33861-33865	base	_	_	_	_	
256-17	33866-33872	backup	_	_	_	_	
256-18	33873-33876	and	_	_	_	_	
256-19	33877-33881	roll	_	_	_	_	
256-20	33882-33889	forward	_	_	_	_	
256-21	33890-33894	from	_	_	_	_	
256-22	33895-33900	there	_	_	_	_	
256-23	33900-33901	.	_	_	_	_	
256-24	33901-33902	)	_	_	_	_	

#Text=If recovery finds corrupted WAL data, recovery will halt at that point and the server will not start.
257-1	33903-33905	If	_	_	_	_	
257-2	33906-33914	recovery	_	_	_	_	
257-3	33915-33920	finds	_	_	_	_	
257-4	33921-33930	corrupted	_	_	_	_	
257-5	33931-33934	WAL	_	_	_	_	
257-6	33935-33939	data	_	_	_	_	
257-7	33939-33940	,	_	_	_	_	
257-8	33941-33949	recovery	_	_	_	_	
257-9	33950-33954	will	_	_	_	_	
257-10	33955-33959	halt	_	_	_	_	
257-11	33960-33962	at	_	_	_	_	
257-12	33963-33967	that	_	_	_	_	
257-13	33968-33973	point	_	_	_	_	
257-14	33974-33977	and	_	_	_	_	
257-15	33978-33981	the	_	_	_	_	
257-16	33982-33988	server	_	_	_	_	
257-17	33989-33993	will	_	_	_	_	
257-18	33994-33997	not	_	_	_	_	
257-19	33998-34003	start	_	_	_	_	
257-20	34003-34004	.	_	_	_	_	

#Text=In such a case the recovery process could be re-run from the beginning, specifying a “recovery target” before the point of corruption so that recovery can complete normally.
258-1	34005-34007	In	_	_	_	_	
258-2	34008-34012	such	_	_	_	_	
258-3	34013-34014	a	_	_	_	_	
258-4	34015-34019	case	_	_	_	_	
258-5	34020-34023	the	_	_	_	_	
258-6	34024-34032	recovery	_	_	_	_	
258-7	34033-34040	process	_	_	_	_	
258-8	34041-34046	could	_	_	_	_	
258-9	34047-34049	be	_	_	_	_	
258-10	34050-34056	re-run	_	_	_	_	
258-11	34057-34061	from	_	_	_	_	
258-12	34062-34065	the	_	_	_	_	
258-13	34066-34075	beginning	_	_	_	_	
258-14	34075-34076	,	_	_	_	_	
258-15	34077-34087	specifying	_	_	_	_	
258-16	34088-34089	a	_	_	_	_	
258-17	34090-34091	“	_	_	_	_	
258-18	34091-34099	recovery	_	_	_	_	
258-19	34100-34106	target	_	_	_	_	
258-20	34106-34107	”	_	_	_	_	
258-21	34108-34114	before	_	_	_	_	
258-22	34115-34118	the	_	_	_	_	
258-23	34119-34124	point	_	_	_	_	
258-24	34125-34127	of	_	_	_	_	
258-25	34128-34138	corruption	_	_	_	_	
258-26	34139-34141	so	_	_	_	_	
258-27	34142-34146	that	_	_	_	_	
258-28	34147-34155	recovery	_	_	_	_	
258-29	34156-34159	can	_	_	_	_	
258-30	34160-34168	complete	_	_	_	_	
258-31	34169-34177	normally	_	_	_	_	
258-32	34177-34178	.	_	_	_	_	

#Text=If recovery fails for an external reason, such as a system crash or if the WAL archive has become inaccessible, then the recovery can simply be restarted and it will restart almost from where it failed.
259-1	34179-34181	If	_	_	_	_	
259-2	34182-34190	recovery	_	_	_	_	
259-3	34191-34196	fails	_	_	_	_	
259-4	34197-34200	for	_	_	_	_	
259-5	34201-34203	an	_	_	_	_	
259-6	34204-34212	external	_	_	_	_	
259-7	34213-34219	reason	_	_	_	_	
259-8	34219-34220	,	_	_	_	_	
259-9	34221-34225	such	_	_	_	_	
259-10	34226-34228	as	_	_	_	_	
259-11	34229-34230	a	_	_	_	_	
259-12	34231-34237	system	_	_	_	_	
259-13	34238-34243	crash	_	_	_	_	
259-14	34244-34246	or	_	_	_	_	
259-15	34247-34249	if	_	_	_	_	
259-16	34250-34253	the	_	_	_	_	
259-17	34254-34257	WAL	_	_	_	_	
259-18	34258-34265	archive	_	_	_	_	
259-19	34266-34269	has	_	_	_	_	
259-20	34270-34276	become	_	_	_	_	
259-21	34277-34289	inaccessible	_	_	_	_	
259-22	34289-34290	,	_	_	_	_	
259-23	34291-34295	then	_	_	_	_	
259-24	34296-34299	the	_	_	_	_	
259-25	34300-34308	recovery	_	_	_	_	
259-26	34309-34312	can	_	_	_	_	
259-27	34313-34319	simply	_	_	_	_	
259-28	34320-34322	be	_	_	_	_	
259-29	34323-34332	restarted	_	_	_	_	
259-30	34333-34336	and	_	_	_	_	
259-31	34337-34339	it	_	_	_	_	
259-32	34340-34344	will	_	_	_	_	
259-33	34345-34352	restart	_	_	_	_	
259-34	34353-34359	almost	_	_	_	_	
259-35	34360-34364	from	_	_	_	_	
259-36	34365-34370	where	_	_	_	_	
259-37	34371-34373	it	_	_	_	_	
259-38	34374-34380	failed	_	_	_	_	
259-39	34380-34381	.	_	_	_	_	

#Text=Recovery restart works much like checkpointing in normal operation: the server periodically forces all its state to disk, and then updates the pg_control file to indicate that the already-processed WAL data need not be scanned again.
#Text=25.3.5. 
260-1	34382-34390	Recovery	_	_	_	_	
260-2	34391-34398	restart	_	_	_	_	
260-3	34399-34404	works	_	_	_	_	
260-4	34405-34409	much	_	_	_	_	
260-5	34410-34414	like	_	_	_	_	
260-6	34415-34428	checkpointing	_	_	_	_	
260-7	34429-34431	in	_	_	_	_	
260-8	34432-34438	normal	_	_	_	_	
260-9	34439-34448	operation	_	_	_	_	
260-10	34448-34449	:	_	_	_	_	
260-11	34450-34453	the	_	_	_	_	
260-12	34454-34460	server	_	_	_	_	
260-13	34461-34473	periodically	_	_	_	_	
260-14	34474-34480	forces	_	_	_	_	
260-15	34481-34484	all	_	_	_	_	
260-16	34485-34488	its	_	_	_	_	
260-17	34489-34494	state	_	_	_	_	
260-18	34495-34497	to	_	_	_	_	
260-19	34498-34502	disk	_	_	_	_	
260-20	34502-34503	,	_	_	_	_	
260-21	34504-34507	and	_	_	_	_	
260-22	34508-34512	then	_	_	_	_	
260-23	34513-34520	updates	_	_	_	_	
260-24	34521-34524	the	_	_	_	_	
260-25	34525-34535	pg_control	_	_	_	_	
260-26	34536-34540	file	_	_	_	_	
260-27	34541-34543	to	_	_	_	_	
260-28	34544-34552	indicate	_	_	_	_	
260-29	34553-34557	that	_	_	_	_	
260-30	34558-34561	the	_	_	_	_	
260-31	34562-34579	already-processed	_	_	_	_	
260-32	34580-34583	WAL	_	_	_	_	
260-33	34584-34588	data	_	_	_	_	
260-34	34589-34593	need	_	_	_	_	
260-35	34594-34597	not	_	_	_	_	
260-36	34598-34600	be	_	_	_	_	
260-37	34601-34608	scanned	_	_	_	_	
260-38	34609-34614	again	_	_	_	_	
260-39	34614-34615	.	_	_	_	_	
260-40	34616-34622	25.3.5	_	_	_	_	
260-41	34622-34623	.	_	_	_	_	
260-42	34623-34624	 	_	_	_	_	

#Text=Timelines
#Text=The ability to restore the database to a previous point in time creates some complexities that are akin to science-fiction stories about time travel and parallel universes.
261-1	34624-34633	Timelines	_	_	_	_	
261-2	34634-34637	The	_	_	_	_	
261-3	34638-34645	ability	_	_	_	_	
261-4	34646-34648	to	_	_	_	_	
261-5	34649-34656	restore	_	_	_	_	
261-6	34657-34660	the	_	_	_	_	
261-7	34661-34669	database	_	_	_	_	
261-8	34670-34672	to	_	_	_	_	
261-9	34673-34674	a	_	_	_	_	
261-10	34675-34683	previous	_	_	_	_	
261-11	34684-34689	point	_	_	_	_	
261-12	34690-34692	in	_	_	_	_	
261-13	34693-34697	time	_	_	_	_	
261-14	34698-34705	creates	_	_	_	_	
261-15	34706-34710	some	_	_	_	_	
261-16	34711-34723	complexities	_	_	_	_	
261-17	34724-34728	that	_	_	_	_	
261-18	34729-34732	are	_	_	_	_	
261-19	34733-34737	akin	_	_	_	_	
261-20	34738-34740	to	_	_	_	_	
261-21	34741-34756	science-fiction	_	_	_	_	
261-22	34757-34764	stories	_	_	_	_	
261-23	34765-34770	about	_	_	_	_	
261-24	34771-34775	time	_	_	_	_	
261-25	34776-34782	travel	_	_	_	_	
261-26	34783-34786	and	_	_	_	_	
261-27	34787-34795	parallel	_	_	_	_	
261-28	34796-34805	universes	_	_	_	_	
261-29	34805-34806	.	_	_	_	_	

#Text=For example, in the original history of the database, suppose you dropped a critical table at 5:15PM on Tuesday evening, but didn't realize your mistake until Wednesday noon.
262-1	34807-34810	For	_	_	_	_	
262-2	34811-34818	example	_	_	_	_	
262-3	34818-34819	,	_	_	_	_	
262-4	34820-34822	in	_	_	_	_	
262-5	34823-34826	the	_	_	_	_	
262-6	34827-34835	original	_	_	_	_	
262-7	34836-34843	history	_	_	_	_	
262-8	34844-34846	of	_	_	_	_	
262-9	34847-34850	the	_	_	_	_	
262-10	34851-34859	database	_	_	_	_	
262-11	34859-34860	,	_	_	_	_	
262-12	34861-34868	suppose	_	_	_	_	
262-13	34869-34872	you	_	_	_	_	
262-14	34873-34880	dropped	_	_	_	_	
262-15	34881-34882	a	_	_	_	_	
262-16	34883-34891	critical	_	_	_	_	
262-17	34892-34897	table	_	_	_	_	
262-18	34898-34900	at	_	_	_	_	
262-19	34901-34902	5	_	_	_	_	
262-20	34902-34903	:	_	_	_	_	
262-21	34903-34907	15PM	_	_	_	_	
262-22	34908-34910	on	_	_	_	_	
262-23	34911-34918	Tuesday	_	_	_	_	
262-24	34919-34926	evening	_	_	_	_	
262-25	34926-34927	,	_	_	_	_	
262-26	34928-34931	but	_	_	_	_	
262-27	34932-34938	didn't	_	_	_	_	
262-28	34939-34946	realize	_	_	_	_	
262-29	34947-34951	your	_	_	_	_	
262-30	34952-34959	mistake	_	_	_	_	
262-31	34960-34965	until	_	_	_	_	
262-32	34966-34975	Wednesday	_	_	_	_	
262-33	34976-34980	noon	_	_	_	_	
262-34	34980-34981	.	_	_	_	_	

#Text=Unfazed, you get out your backup, restore to the point-in-time 5:14PM Tuesday evening, and are up and running.
263-1	34982-34989	Unfazed	_	_	_	_	
263-2	34989-34990	,	_	_	_	_	
263-3	34991-34994	you	_	_	_	_	
263-4	34995-34998	get	_	_	_	_	
263-5	34999-35002	out	_	_	_	_	
263-6	35003-35007	your	_	_	_	_	
263-7	35008-35014	backup	_	_	_	_	
263-8	35014-35015	,	_	_	_	_	
263-9	35016-35023	restore	_	_	_	_	
263-10	35024-35026	to	_	_	_	_	
263-11	35027-35030	the	_	_	_	_	
263-12	35031-35044	point-in-time	_	_	_	_	
263-13	35045-35046	5	_	_	_	_	
263-14	35046-35047	:	_	_	_	_	
263-15	35047-35051	14PM	_	_	_	_	
263-16	35052-35059	Tuesday	_	_	_	_	
263-17	35060-35067	evening	_	_	_	_	
263-18	35067-35068	,	_	_	_	_	
263-19	35069-35072	and	_	_	_	_	
263-20	35073-35076	are	_	_	_	_	
263-21	35077-35079	up	_	_	_	_	
263-22	35080-35083	and	_	_	_	_	
263-23	35084-35091	running	_	_	_	_	
263-24	35091-35092	.	_	_	_	_	

#Text=In this history of the database universe, you never dropped the table.
264-1	35093-35095	In	_	_	_	_	
264-2	35096-35100	this	_	_	_	_	
264-3	35101-35108	history	_	_	_	_	
264-4	35109-35111	of	_	_	_	_	
264-5	35112-35115	the	_	_	_	_	
264-6	35116-35124	database	_	_	_	_	
264-7	35125-35133	universe	_	_	_	_	
264-8	35133-35134	,	_	_	_	_	
264-9	35135-35138	you	_	_	_	_	
264-10	35139-35144	never	_	_	_	_	
264-11	35145-35152	dropped	_	_	_	_	
264-12	35153-35156	the	_	_	_	_	
264-13	35157-35162	table	_	_	_	_	
264-14	35162-35163	.	_	_	_	_	

#Text=But suppose you later realize this wasn't such a great idea, and would like to return to sometime Wednesday morning in the original history.
265-1	35164-35167	But	_	_	_	_	
265-2	35168-35175	suppose	_	_	_	_	
265-3	35176-35179	you	_	_	_	_	
265-4	35180-35185	later	_	_	_	_	
265-5	35186-35193	realize	_	_	_	_	
265-6	35194-35198	this	_	_	_	_	
265-7	35199-35205	wasn't	_	_	_	_	
265-8	35206-35210	such	_	_	_	_	
265-9	35211-35212	a	_	_	_	_	
265-10	35213-35218	great	_	_	_	_	
265-11	35219-35223	idea	_	_	_	_	
265-12	35223-35224	,	_	_	_	_	
265-13	35225-35228	and	_	_	_	_	
265-14	35229-35234	would	_	_	_	_	
265-15	35235-35239	like	_	_	_	_	
265-16	35240-35242	to	_	_	_	_	
265-17	35243-35249	return	_	_	_	_	
265-18	35250-35252	to	_	_	_	_	
265-19	35253-35261	sometime	_	_	_	_	
265-20	35262-35271	Wednesday	_	_	_	_	
265-21	35272-35279	morning	_	_	_	_	
265-22	35280-35282	in	_	_	_	_	
265-23	35283-35286	the	_	_	_	_	
265-24	35287-35295	original	_	_	_	_	
265-25	35296-35303	history	_	_	_	_	
265-26	35303-35304	.	_	_	_	_	

#Text=You won't be able to if, while your database was up-and-running, it overwrote some of the WAL segment files that led up to the time you now wish you could get back to.
266-1	35305-35308	You	_	_	_	_	
266-2	35309-35314	won't	_	_	_	_	
266-3	35315-35317	be	_	_	_	_	
266-4	35318-35322	able	_	_	_	_	
266-5	35323-35325	to	_	_	_	_	
266-6	35326-35328	if	_	_	_	_	
266-7	35328-35329	,	_	_	_	_	
266-8	35330-35335	while	_	_	_	_	
266-9	35336-35340	your	_	_	_	_	
266-10	35341-35349	database	_	_	_	_	
266-11	35350-35353	was	_	_	_	_	
266-12	35354-35368	up-and-running	_	_	_	_	
266-13	35368-35369	,	_	_	_	_	
266-14	35370-35372	it	_	_	_	_	
266-15	35373-35382	overwrote	_	_	_	_	
266-16	35383-35387	some	_	_	_	_	
266-17	35388-35390	of	_	_	_	_	
266-18	35391-35394	the	_	_	_	_	
266-19	35395-35398	WAL	_	_	_	_	
266-20	35399-35406	segment	_	_	_	_	
266-21	35407-35412	files	_	_	_	_	
266-22	35413-35417	that	_	_	_	_	
266-23	35418-35421	led	_	_	_	_	
266-24	35422-35424	up	_	_	_	_	
266-25	35425-35427	to	_	_	_	_	
266-26	35428-35431	the	_	_	_	_	
266-27	35432-35436	time	_	_	_	_	
266-28	35437-35440	you	_	_	_	_	
266-29	35441-35444	now	_	_	_	_	
266-30	35445-35449	wish	_	_	_	_	
266-31	35450-35453	you	_	_	_	_	
266-32	35454-35459	could	_	_	_	_	
266-33	35460-35463	get	_	_	_	_	
266-34	35464-35468	back	_	_	_	_	
266-35	35469-35471	to	_	_	_	_	
266-36	35471-35472	.	_	_	_	_	

#Text=Thus, to avoid this, you need to distinguish the series of WAL records generated after you've done a point-in-time recovery from those that were generated in the original database history.
267-1	35473-35477	Thus	_	_	_	_	
267-2	35477-35478	,	_	_	_	_	
267-3	35479-35481	to	_	_	_	_	
267-4	35482-35487	avoid	_	_	_	_	
267-5	35488-35492	this	_	_	_	_	
267-6	35492-35493	,	_	_	_	_	
267-7	35494-35497	you	_	_	_	_	
267-8	35498-35502	need	_	_	_	_	
267-9	35503-35505	to	_	_	_	_	
267-10	35506-35517	distinguish	_	_	_	_	
267-11	35518-35521	the	_	_	_	_	
267-12	35522-35528	series	_	_	_	_	
267-13	35529-35531	of	_	_	_	_	
267-14	35532-35535	WAL	_	_	_	_	
267-15	35536-35543	records	_	_	_	_	
267-16	35544-35553	generated	_	_	_	_	
267-17	35554-35559	after	_	_	_	_	
267-18	35560-35566	you've	_	_	_	_	
267-19	35567-35571	done	_	_	_	_	
267-20	35572-35573	a	_	_	_	_	
267-21	35574-35587	point-in-time	_	_	_	_	
267-22	35588-35596	recovery	_	_	_	_	
267-23	35597-35601	from	_	_	_	_	
267-24	35602-35607	those	_	_	_	_	
267-25	35608-35612	that	_	_	_	_	
267-26	35613-35617	were	_	_	_	_	
267-27	35618-35627	generated	_	_	_	_	
267-28	35628-35630	in	_	_	_	_	
267-29	35631-35634	the	_	_	_	_	
267-30	35635-35643	original	_	_	_	_	
267-31	35644-35652	database	_	_	_	_	
267-32	35653-35660	history	_	_	_	_	
267-33	35660-35661	.	_	_	_	_	

#Text=To deal with this problem, PostgreSQL has a notion of timelines.
268-1	35662-35664	To	_	_	_	_	
268-2	35665-35669	deal	_	_	_	_	
268-3	35670-35674	with	_	_	_	_	
268-4	35675-35679	this	_	_	_	_	
268-5	35680-35687	problem	_	_	_	_	
268-6	35687-35688	,	_	_	_	_	
268-7	35689-35699	PostgreSQL	_	_	_	_	
268-8	35700-35703	has	_	_	_	_	
268-9	35704-35705	a	_	_	_	_	
268-10	35706-35712	notion	_	_	_	_	
268-11	35713-35715	of	_	_	_	_	
268-12	35716-35725	timelines	_	_	_	_	
268-13	35725-35726	.	_	_	_	_	

#Text=Whenever an archive recovery completes, a new timeline is created to identify the series of WAL records generated after that recovery.
269-1	35727-35735	Whenever	_	_	_	_	
269-2	35736-35738	an	_	_	_	_	
269-3	35739-35746	archive	_	_	_	_	
269-4	35747-35755	recovery	_	_	_	_	
269-5	35756-35765	completes	_	_	_	_	
269-6	35765-35766	,	_	_	_	_	
269-7	35767-35768	a	_	_	_	_	
269-8	35769-35772	new	_	_	_	_	
269-9	35773-35781	timeline	_	_	_	_	
269-10	35782-35784	is	_	_	_	_	
269-11	35785-35792	created	_	_	_	_	
269-12	35793-35795	to	_	_	_	_	
269-13	35796-35804	identify	_	_	_	_	
269-14	35805-35808	the	_	_	_	_	
269-15	35809-35815	series	_	_	_	_	
269-16	35816-35818	of	_	_	_	_	
269-17	35819-35822	WAL	_	_	_	_	
269-18	35823-35830	records	_	_	_	_	
269-19	35831-35840	generated	_	_	_	_	
269-20	35841-35846	after	_	_	_	_	
269-21	35847-35851	that	_	_	_	_	
269-22	35852-35860	recovery	_	_	_	_	
269-23	35860-35861	.	_	_	_	_	

#Text=The timeline ID number is part of WAL segment file names so a new timeline does not overwrite the WAL data generated by previous timelines.
270-1	35862-35865	The	_	_	_	_	
270-2	35866-35874	timeline	_	_	_	_	
270-3	35875-35877	ID	_	_	_	_	
270-4	35878-35884	number	_	_	_	_	
270-5	35885-35887	is	_	_	_	_	
270-6	35888-35892	part	_	_	_	_	
270-7	35893-35895	of	_	_	_	_	
270-8	35896-35899	WAL	_	_	_	_	
270-9	35900-35907	segment	_	_	_	_	
270-10	35908-35912	file	_	_	_	_	
270-11	35913-35918	names	_	_	_	_	
270-12	35919-35921	so	_	_	_	_	
270-13	35922-35923	a	_	_	_	_	
270-14	35924-35927	new	_	_	_	_	
270-15	35928-35936	timeline	_	_	_	_	
270-16	35937-35941	does	_	_	_	_	
270-17	35942-35945	not	_	_	_	_	
270-18	35946-35955	overwrite	_	_	_	_	
270-19	35956-35959	the	_	_	_	_	
270-20	35960-35963	WAL	_	_	_	_	
270-21	35964-35968	data	_	_	_	_	
270-22	35969-35978	generated	_	_	_	_	
270-23	35979-35981	by	_	_	_	_	
270-24	35982-35990	previous	_	_	_	_	
270-25	35991-36000	timelines	_	_	_	_	
270-26	36000-36001	.	_	_	_	_	

#Text=It is in fact possible to archive many different timelines.
271-1	36002-36004	It	_	_	_	_	
271-2	36005-36007	is	_	_	_	_	
271-3	36008-36010	in	_	_	_	_	
271-4	36011-36015	fact	_	_	_	_	
271-5	36016-36024	possible	_	_	_	_	
271-6	36025-36027	to	_	_	_	_	
271-7	36028-36035	archive	_	_	_	_	
271-8	36036-36040	many	_	_	_	_	
271-9	36041-36050	different	_	_	_	_	
271-10	36051-36060	timelines	_	_	_	_	
271-11	36060-36061	.	_	_	_	_	

#Text=While that might seem like a useless feature, it's often a lifesaver.
272-1	36062-36067	While	_	_	_	_	
272-2	36068-36072	that	_	_	_	_	
272-3	36073-36078	might	_	_	_	_	
272-4	36079-36083	seem	_	_	_	_	
272-5	36084-36088	like	_	_	_	_	
272-6	36089-36090	a	_	_	_	_	
272-7	36091-36098	useless	_	_	_	_	
272-8	36099-36106	feature	_	_	_	_	
272-9	36106-36107	,	_	_	_	_	
272-10	36108-36112	it's	_	_	_	_	
272-11	36113-36118	often	_	_	_	_	
272-12	36119-36120	a	_	_	_	_	
272-13	36121-36130	lifesaver	_	_	_	_	
272-14	36130-36131	.	_	_	_	_	

#Text=Consider the situation where you aren't quite sure what point-in-time to recover to, and so have to do several point-in-time recoveries by trial and error until you find the best place to branch off from the old history.
273-1	36132-36140	Consider	_	_	_	_	
273-2	36141-36144	the	_	_	_	_	
273-3	36145-36154	situation	_	_	_	_	
273-4	36155-36160	where	_	_	_	_	
273-5	36161-36164	you	_	_	_	_	
273-6	36165-36171	aren't	_	_	_	_	
273-7	36172-36177	quite	_	_	_	_	
273-8	36178-36182	sure	_	_	_	_	
273-9	36183-36187	what	_	_	_	_	
273-10	36188-36201	point-in-time	_	_	_	_	
273-11	36202-36204	to	_	_	_	_	
273-12	36205-36212	recover	_	_	_	_	
273-13	36213-36215	to	_	_	_	_	
273-14	36215-36216	,	_	_	_	_	
273-15	36217-36220	and	_	_	_	_	
273-16	36221-36223	so	_	_	_	_	
273-17	36224-36228	have	_	_	_	_	
273-18	36229-36231	to	_	_	_	_	
273-19	36232-36234	do	_	_	_	_	
273-20	36235-36242	several	_	_	_	_	
273-21	36243-36256	point-in-time	_	_	_	_	
273-22	36257-36267	recoveries	_	_	_	_	
273-23	36268-36270	by	_	_	_	_	
273-24	36271-36276	trial	_	_	_	_	
273-25	36277-36280	and	_	_	_	_	
273-26	36281-36286	error	_	_	_	_	
273-27	36287-36292	until	_	_	_	_	
273-28	36293-36296	you	_	_	_	_	
273-29	36297-36301	find	_	_	_	_	
273-30	36302-36305	the	_	_	_	_	
273-31	36306-36310	best	_	_	_	_	
273-32	36311-36316	place	_	_	_	_	
273-33	36317-36319	to	_	_	_	_	
273-34	36320-36326	branch	_	_	_	_	
273-35	36327-36330	off	_	_	_	_	
273-36	36331-36335	from	_	_	_	_	
273-37	36336-36339	the	_	_	_	_	
273-38	36340-36343	old	_	_	_	_	
273-39	36344-36351	history	_	_	_	_	
273-40	36351-36352	.	_	_	_	_	

#Text=Without timelines this process would soon generate an unmanageable mess.
274-1	36353-36360	Without	_	_	_	_	
274-2	36361-36370	timelines	_	_	_	_	
274-3	36371-36375	this	_	_	_	_	
274-4	36376-36383	process	_	_	_	_	
274-5	36384-36389	would	_	_	_	_	
274-6	36390-36394	soon	_	_	_	_	
274-7	36395-36403	generate	_	_	_	_	
274-8	36404-36406	an	_	_	_	_	
274-9	36407-36419	unmanageable	_	_	_	_	
274-10	36420-36424	mess	_	_	_	_	
274-11	36424-36425	.	_	_	_	_	

#Text=With timelines, you can recover to any prior state, including states in timeline branches that you abandoned earlier.
275-1	36426-36430	With	_	_	_	_	
275-2	36431-36440	timelines	_	_	_	_	
275-3	36440-36441	,	_	_	_	_	
275-4	36442-36445	you	_	_	_	_	
275-5	36446-36449	can	_	_	_	_	
275-6	36450-36457	recover	_	_	_	_	
275-7	36458-36460	to	_	_	_	_	
275-8	36461-36464	any	_	_	_	_	
275-9	36465-36470	prior	_	_	_	_	
275-10	36471-36476	state	_	_	_	_	
275-11	36476-36477	,	_	_	_	_	
275-12	36478-36487	including	_	_	_	_	
275-13	36488-36494	states	_	_	_	_	
275-14	36495-36497	in	_	_	_	_	
275-15	36498-36506	timeline	_	_	_	_	
275-16	36507-36515	branches	_	_	_	_	
275-17	36516-36520	that	_	_	_	_	
275-18	36521-36524	you	_	_	_	_	
275-19	36525-36534	abandoned	_	_	_	_	
275-20	36535-36542	earlier	_	_	_	_	
275-21	36542-36543	.	_	_	_	_	

#Text=Every time a new timeline is created, PostgreSQL creates a “timeline history” file that shows which timeline it branched off from and when.
276-1	36544-36549	Every	_	_	_	_	
276-2	36550-36554	time	_	_	_	_	
276-3	36555-36556	a	_	_	_	_	
276-4	36557-36560	new	_	_	_	_	
276-5	36561-36569	timeline	_	_	_	_	
276-6	36570-36572	is	_	_	_	_	
276-7	36573-36580	created	_	_	_	_	
276-8	36580-36581	,	_	_	_	_	
276-9	36582-36592	PostgreSQL	_	_	_	_	
276-10	36593-36600	creates	_	_	_	_	
276-11	36601-36602	a	_	_	_	_	
276-12	36603-36604	“	_	_	_	_	
276-13	36604-36612	timeline	_	_	_	_	
276-14	36613-36620	history	_	_	_	_	
276-15	36620-36621	”	_	_	_	_	
276-16	36622-36626	file	_	_	_	_	
276-17	36627-36631	that	_	_	_	_	
276-18	36632-36637	shows	_	_	_	_	
276-19	36638-36643	which	_	_	_	_	
276-20	36644-36652	timeline	_	_	_	_	
276-21	36653-36655	it	_	_	_	_	
276-22	36656-36664	branched	_	_	_	_	
276-23	36665-36668	off	_	_	_	_	
276-24	36669-36673	from	_	_	_	_	
276-25	36674-36677	and	_	_	_	_	
276-26	36678-36682	when	_	_	_	_	
276-27	36682-36683	.	_	_	_	_	

#Text=These history files are necessary to allow the system to pick the right WAL segment files when recovering from an archive that contains multiple timelines.
277-1	36684-36689	These	_	_	_	_	
277-2	36690-36697	history	_	_	_	_	
277-3	36698-36703	files	_	_	_	_	
277-4	36704-36707	are	_	_	_	_	
277-5	36708-36717	necessary	_	_	_	_	
277-6	36718-36720	to	_	_	_	_	
277-7	36721-36726	allow	_	_	_	_	
277-8	36727-36730	the	_	_	_	_	
277-9	36731-36737	system	_	_	_	_	
277-10	36738-36740	to	_	_	_	_	
277-11	36741-36745	pick	_	_	_	_	
277-12	36746-36749	the	_	_	_	_	
277-13	36750-36755	right	_	_	_	_	
277-14	36756-36759	WAL	_	_	_	_	
277-15	36760-36767	segment	_	_	_	_	
277-16	36768-36773	files	_	_	_	_	
277-17	36774-36778	when	_	_	_	_	
277-18	36779-36789	recovering	_	_	_	_	
277-19	36790-36794	from	_	_	_	_	
277-20	36795-36797	an	_	_	_	_	
277-21	36798-36805	archive	_	_	_	_	
277-22	36806-36810	that	_	_	_	_	
277-23	36811-36819	contains	_	_	_	_	
277-24	36820-36828	multiple	_	_	_	_	
277-25	36829-36838	timelines	_	_	_	_	
277-26	36838-36839	.	_	_	_	_	

#Text=Therefore, they are archived into the WAL archive area just like WAL segment files.
278-1	36840-36849	Therefore	_	_	_	_	
278-2	36849-36850	,	_	_	_	_	
278-3	36851-36855	they	_	_	_	_	
278-4	36856-36859	are	_	_	_	_	
278-5	36860-36868	archived	_	_	_	_	
278-6	36869-36873	into	_	_	_	_	
278-7	36874-36877	the	_	_	_	_	
278-8	36878-36881	WAL	_	_	_	_	
278-9	36882-36889	archive	_	_	_	_	
278-10	36890-36894	area	_	_	_	_	
278-11	36895-36899	just	_	_	_	_	
278-12	36900-36904	like	_	_	_	_	
278-13	36905-36908	WAL	_	_	_	_	
278-14	36909-36916	segment	_	_	_	_	
278-15	36917-36922	files	_	_	_	_	
278-16	36922-36923	.	_	_	_	_	

#Text=The history files are just small text files, so it's cheap and appropriate to keep them around indefinitely (unlike the segment files which are large).
279-1	36924-36927	The	_	_	_	_	
279-2	36928-36935	history	_	_	_	_	
279-3	36936-36941	files	_	_	_	_	
279-4	36942-36945	are	_	_	_	_	
279-5	36946-36950	just	_	_	_	_	
279-6	36951-36956	small	_	_	_	_	
279-7	36957-36961	text	_	_	_	_	
279-8	36962-36967	files	_	_	_	_	
279-9	36967-36968	,	_	_	_	_	
279-10	36969-36971	so	_	_	_	_	
279-11	36972-36976	it's	_	_	_	_	
279-12	36977-36982	cheap	_	_	_	_	
279-13	36983-36986	and	_	_	_	_	
279-14	36987-36998	appropriate	_	_	_	_	
279-15	36999-37001	to	_	_	_	_	
279-16	37002-37006	keep	_	_	_	_	
279-17	37007-37011	them	_	_	_	_	
279-18	37012-37018	around	_	_	_	_	
279-19	37019-37031	indefinitely	_	_	_	_	
279-20	37032-37033	(	_	_	_	_	
279-21	37033-37039	unlike	_	_	_	_	
279-22	37040-37043	the	_	_	_	_	
279-23	37044-37051	segment	_	_	_	_	
279-24	37052-37057	files	_	_	_	_	
279-25	37058-37063	which	_	_	_	_	
279-26	37064-37067	are	_	_	_	_	
279-27	37068-37073	large	_	_	_	_	
279-28	37073-37074	)	_	_	_	_	
279-29	37074-37075	.	_	_	_	_	

#Text=You can, if you like, add comments to a history file to record your own notes about how and why this particular timeline was created.
280-1	37076-37079	You	_	_	_	_	
280-2	37080-37083	can	_	_	_	_	
280-3	37083-37084	,	_	_	_	_	
280-4	37085-37087	if	_	_	_	_	
280-5	37088-37091	you	_	_	_	_	
280-6	37092-37096	like	_	_	_	_	
280-7	37096-37097	,	_	_	_	_	
280-8	37098-37101	add	_	_	_	_	
280-9	37102-37110	comments	_	_	_	_	
280-10	37111-37113	to	_	_	_	_	
280-11	37114-37115	a	_	_	_	_	
280-12	37116-37123	history	_	_	_	_	
280-13	37124-37128	file	_	_	_	_	
280-14	37129-37131	to	_	_	_	_	
280-15	37132-37138	record	_	_	_	_	
280-16	37139-37143	your	_	_	_	_	
280-17	37144-37147	own	_	_	_	_	
280-18	37148-37153	notes	_	_	_	_	
280-19	37154-37159	about	_	_	_	_	
280-20	37160-37163	how	_	_	_	_	
280-21	37164-37167	and	_	_	_	_	
280-22	37168-37171	why	_	_	_	_	
280-23	37172-37176	this	_	_	_	_	
280-24	37177-37187	particular	_	_	_	_	
280-25	37188-37196	timeline	_	_	_	_	
280-26	37197-37200	was	_	_	_	_	
280-27	37201-37208	created	_	_	_	_	
280-28	37208-37209	.	_	_	_	_	

#Text=Such comments will be especially valuable when you have a thicket of different timelines as a result of experimentation.
281-1	37210-37214	Such	_	_	_	_	
281-2	37215-37223	comments	_	_	_	_	
281-3	37224-37228	will	_	_	_	_	
281-4	37229-37231	be	_	_	_	_	
281-5	37232-37242	especially	_	_	_	_	
281-6	37243-37251	valuable	_	_	_	_	
281-7	37252-37256	when	_	_	_	_	
281-8	37257-37260	you	_	_	_	_	
281-9	37261-37265	have	_	_	_	_	
281-10	37266-37267	a	_	_	_	_	
281-11	37268-37275	thicket	_	_	_	_	
281-12	37276-37278	of	_	_	_	_	
281-13	37279-37288	different	_	_	_	_	
281-14	37289-37298	timelines	_	_	_	_	
281-15	37299-37301	as	_	_	_	_	
281-16	37302-37303	a	_	_	_	_	
281-17	37304-37310	result	_	_	_	_	
281-18	37311-37313	of	_	_	_	_	
281-19	37314-37329	experimentation	_	_	_	_	
281-20	37329-37330	.	_	_	_	_	

#Text=The default behavior of recovery is to recover to the latest timeline found in the archive.
282-1	37331-37334	The	_	_	_	_	
282-2	37335-37342	default	_	_	_	_	
282-3	37343-37351	behavior	_	_	_	_	
282-4	37352-37354	of	_	_	_	_	
282-5	37355-37363	recovery	_	_	_	_	
282-6	37364-37366	is	_	_	_	_	
282-7	37367-37369	to	_	_	_	_	
282-8	37370-37377	recover	_	_	_	_	
282-9	37378-37380	to	_	_	_	_	
282-10	37381-37384	the	_	_	_	_	
282-11	37385-37391	latest	_	_	_	_	
282-12	37392-37400	timeline	_	_	_	_	
282-13	37401-37406	found	_	_	_	_	
282-14	37407-37409	in	_	_	_	_	
282-15	37410-37413	the	_	_	_	_	
282-16	37414-37421	archive	_	_	_	_	
282-17	37421-37422	.	_	_	_	_	

#Text=If you wish to recover to the timeline that was current when the base backup was taken or into a specific child timeline (that is, you want to return to some state that was itself generated after a recovery attempt), you need to specify current or the target timeline ID in recovery_target_timeline.
283-1	37423-37425	If	_	_	_	_	
283-2	37426-37429	you	_	_	_	_	
283-3	37430-37434	wish	_	_	_	_	
283-4	37435-37437	to	_	_	_	_	
283-5	37438-37445	recover	_	_	_	_	
283-6	37446-37448	to	_	_	_	_	
283-7	37449-37452	the	_	_	_	_	
283-8	37453-37461	timeline	_	_	_	_	
283-9	37462-37466	that	_	_	_	_	
283-10	37467-37470	was	_	_	_	_	
283-11	37471-37478	current	_	_	_	_	
283-12	37479-37483	when	_	_	_	_	
283-13	37484-37487	the	_	_	_	_	
283-14	37488-37492	base	_	_	_	_	
283-15	37493-37499	backup	_	_	_	_	
283-16	37500-37503	was	_	_	_	_	
283-17	37504-37509	taken	_	_	_	_	
283-18	37510-37512	or	_	_	_	_	
283-19	37513-37517	into	_	_	_	_	
283-20	37518-37519	a	_	_	_	_	
283-21	37520-37528	specific	_	_	_	_	
283-22	37529-37534	child	_	_	_	_	
283-23	37535-37543	timeline	_	_	_	_	
283-24	37544-37545	(	_	_	_	_	
283-25	37545-37549	that	_	_	_	_	
283-26	37550-37552	is	_	_	_	_	
283-27	37552-37553	,	_	_	_	_	
283-28	37554-37557	you	_	_	_	_	
283-29	37558-37562	want	_	_	_	_	
283-30	37563-37565	to	_	_	_	_	
283-31	37566-37572	return	_	_	_	_	
283-32	37573-37575	to	_	_	_	_	
283-33	37576-37580	some	_	_	_	_	
283-34	37581-37586	state	_	_	_	_	
283-35	37587-37591	that	_	_	_	_	
283-36	37592-37595	was	_	_	_	_	
283-37	37596-37602	itself	_	_	_	_	
283-38	37603-37612	generated	_	_	_	_	
283-39	37613-37618	after	_	_	_	_	
283-40	37619-37620	a	_	_	_	_	
283-41	37621-37629	recovery	_	_	_	_	
283-42	37630-37637	attempt	_	_	_	_	
283-43	37637-37638	)	_	_	_	_	
283-44	37638-37639	,	_	_	_	_	
283-45	37640-37643	you	_	_	_	_	
283-46	37644-37648	need	_	_	_	_	
283-47	37649-37651	to	_	_	_	_	
283-48	37652-37659	specify	_	_	_	_	
283-49	37660-37667	current	_	_	_	_	
283-50	37668-37670	or	_	_	_	_	
283-51	37671-37674	the	_	_	_	_	
283-52	37675-37681	target	_	_	_	_	
283-53	37682-37690	timeline	_	_	_	_	
283-54	37691-37693	ID	_	_	_	_	
283-55	37694-37696	in	_	_	_	_	
283-56	37697-37721	recovery_target_timeline	_	_	_	_	
283-57	37721-37722	.	_	_	_	_	

#Text=You cannot recover into timelines that branched off earlier than the base backup.
#Text=25.3.6. 
284-1	37723-37726	You	_	_	_	_	
284-2	37727-37733	cannot	_	_	_	_	
284-3	37734-37741	recover	_	_	_	_	
284-4	37742-37746	into	_	_	_	_	
284-5	37747-37756	timelines	_	_	_	_	
284-6	37757-37761	that	_	_	_	_	
284-7	37762-37770	branched	_	_	_	_	
284-8	37771-37774	off	_	_	_	_	
284-9	37775-37782	earlier	_	_	_	_	
284-10	37783-37787	than	_	_	_	_	
284-11	37788-37791	the	_	_	_	_	
284-12	37792-37796	base	_	_	_	_	
284-13	37797-37803	backup	_	_	_	_	
284-14	37803-37804	.	_	_	_	_	
284-15	37805-37811	25.3.6	_	_	_	_	
284-16	37811-37812	.	_	_	_	_	
284-17	37812-37813	 	_	_	_	_	

#Text=Tips and Examples
#Text=Some tips for configuring continuous archiving are given here.
#Text=25.3.6.1. 
285-1	37813-37817	Tips	_	_	_	_	
285-2	37818-37821	and	_	_	_	_	
285-3	37822-37830	Examples	_	_	_	_	
285-4	37831-37835	Some	_	_	_	_	
285-5	37836-37840	tips	_	_	_	_	
285-6	37841-37844	for	_	_	_	_	
285-7	37845-37856	configuring	_	_	_	_	
285-8	37857-37867	continuous	_	_	_	_	
285-9	37868-37877	archiving	_	_	_	_	
285-10	37878-37881	are	_	_	_	_	
285-11	37882-37887	given	_	_	_	_	
285-12	37888-37892	here	_	_	_	_	
285-13	37892-37893	.	_	_	_	_	
285-14	37894-37902	25.3.6.1	_	_	_	_	
285-15	37902-37903	.	_	_	_	_	
285-16	37903-37904	 	_	_	_	_	

#Text=Standalone Hot Backups
#Text=It is possible to use PostgreSQL's backup facilities to produce standalone hot backups.
286-1	37904-37914	Standalone	_	_	_	_	
286-2	37915-37918	Hot	_	_	_	_	
286-3	37919-37926	Backups	_	_	_	_	
286-4	37927-37929	It	_	_	_	_	
286-5	37930-37932	is	_	_	_	_	
286-6	37933-37941	possible	_	_	_	_	
286-7	37942-37944	to	_	_	_	_	
286-8	37945-37948	use	_	_	_	_	
286-9	37949-37961	PostgreSQL's	_	_	_	_	
286-10	37962-37968	backup	_	_	_	_	
286-11	37969-37979	facilities	_	_	_	_	
286-12	37980-37982	to	_	_	_	_	
286-13	37983-37990	produce	_	_	_	_	
286-14	37991-38001	standalone	_	_	_	_	
286-15	38002-38005	hot	_	_	_	_	
286-16	38006-38013	backups	_	_	_	_	
286-17	38013-38014	.	_	_	_	_	

#Text=These are backups that cannot be used for point-in-time recovery, yet are typically much faster to backup and restore than pg_dump dumps.
287-1	38015-38020	These	_	_	_	_	
287-2	38021-38024	are	_	_	_	_	
287-3	38025-38032	backups	_	_	_	_	
287-4	38033-38037	that	_	_	_	_	
287-5	38038-38044	cannot	_	_	_	_	
287-6	38045-38047	be	_	_	_	_	
287-7	38048-38052	used	_	_	_	_	
287-8	38053-38056	for	_	_	_	_	
287-9	38057-38070	point-in-time	_	_	_	_	
287-10	38071-38079	recovery	_	_	_	_	
287-11	38079-38080	,	_	_	_	_	
287-12	38081-38084	yet	_	_	_	_	
287-13	38085-38088	are	_	_	_	_	
287-14	38089-38098	typically	_	_	_	_	
287-15	38099-38103	much	_	_	_	_	
287-16	38104-38110	faster	_	_	_	_	
287-17	38111-38113	to	_	_	_	_	
287-18	38114-38120	backup	_	_	_	_	
287-19	38121-38124	and	_	_	_	_	
287-20	38125-38132	restore	_	_	_	_	
287-21	38133-38137	than	_	_	_	_	
287-22	38138-38145	pg_dump	_	_	_	_	
287-23	38146-38151	dumps	_	_	_	_	
287-24	38151-38152	.	_	_	_	_	

#Text=(They are also much larger than pg_dump dumps, so in some cases the speed advantage might be negated.)
288-1	38153-38154	(	_	_	_	_	
288-2	38154-38158	They	_	_	_	_	
288-3	38159-38162	are	_	_	_	_	
288-4	38163-38167	also	_	_	_	_	
288-5	38168-38172	much	_	_	_	_	
288-6	38173-38179	larger	_	_	_	_	
288-7	38180-38184	than	_	_	_	_	
288-8	38185-38192	pg_dump	_	_	_	_	
288-9	38193-38198	dumps	_	_	_	_	
288-10	38198-38199	,	_	_	_	_	
288-11	38200-38202	so	_	_	_	_	
288-12	38203-38205	in	_	_	_	_	
288-13	38206-38210	some	_	_	_	_	
288-14	38211-38216	cases	_	_	_	_	
288-15	38217-38220	the	_	_	_	_	
288-16	38221-38226	speed	_	_	_	_	
288-17	38227-38236	advantage	_	_	_	_	
288-18	38237-38242	might	_	_	_	_	
288-19	38243-38245	be	_	_	_	_	
288-20	38246-38253	negated	_	_	_	_	
288-21	38253-38254	.	_	_	_	_	
288-22	38254-38255	)	_	_	_	_	

#Text=As with base backups, the easiest way to produce a standalone hot backup is to use the pg_basebackup tool.
289-1	38256-38258	As	_	_	_	_	
289-2	38259-38263	with	_	_	_	_	
289-3	38264-38268	base	_	_	_	_	
289-4	38269-38276	backups	_	_	_	_	
289-5	38276-38277	,	_	_	_	_	
289-6	38278-38281	the	_	_	_	_	
289-7	38282-38289	easiest	_	_	_	_	
289-8	38290-38293	way	_	_	_	_	
289-9	38294-38296	to	_	_	_	_	
289-10	38297-38304	produce	_	_	_	_	
289-11	38305-38306	a	_	_	_	_	
289-12	38307-38317	standalone	_	_	_	_	
289-13	38318-38321	hot	_	_	_	_	
289-14	38322-38328	backup	_	_	_	_	
289-15	38329-38331	is	_	_	_	_	
289-16	38332-38334	to	_	_	_	_	
289-17	38335-38338	use	_	_	_	_	
289-18	38339-38342	the	_	_	_	_	
289-19	38343-38356	pg_basebackup	_	_	_	_	
289-20	38357-38361	tool	_	_	_	_	
289-21	38361-38362	.	_	_	_	_	

#Text=If you include the -X parameter when calling it, all the write-ahead log required to use the backup will be included in the backup automatically, and no special action is required to restore the backup.
290-1	38363-38365	If	_	_	_	_	
290-2	38366-38369	you	_	_	_	_	
290-3	38370-38377	include	_	_	_	_	
290-4	38378-38381	the	_	_	_	_	
290-5	38382-38383	-	_	_	_	_	
290-6	38383-38384	X	_	_	_	_	
290-7	38385-38394	parameter	_	_	_	_	
290-8	38395-38399	when	_	_	_	_	
290-9	38400-38407	calling	_	_	_	_	
290-10	38408-38410	it	_	_	_	_	
290-11	38410-38411	,	_	_	_	_	
290-12	38412-38415	all	_	_	_	_	
290-13	38416-38419	the	_	_	_	_	
290-14	38420-38431	write-ahead	_	_	_	_	
290-15	38432-38435	log	_	_	_	_	
290-16	38436-38444	required	_	_	_	_	
290-17	38445-38447	to	_	_	_	_	
290-18	38448-38451	use	_	_	_	_	
290-19	38452-38455	the	_	_	_	_	
290-20	38456-38462	backup	_	_	_	_	
290-21	38463-38467	will	_	_	_	_	
290-22	38468-38470	be	_	_	_	_	
290-23	38471-38479	included	_	_	_	_	
290-24	38480-38482	in	_	_	_	_	
290-25	38483-38486	the	_	_	_	_	
290-26	38487-38493	backup	_	_	_	_	
290-27	38494-38507	automatically	_	_	_	_	
290-28	38507-38508	,	_	_	_	_	
290-29	38509-38512	and	_	_	_	_	
290-30	38513-38515	no	_	_	_	_	
290-31	38516-38523	special	_	_	_	_	
290-32	38524-38530	action	_	_	_	_	
290-33	38531-38533	is	_	_	_	_	
290-34	38534-38542	required	_	_	_	_	
290-35	38543-38545	to	_	_	_	_	
290-36	38546-38553	restore	_	_	_	_	
290-37	38554-38557	the	_	_	_	_	
290-38	38558-38564	backup	_	_	_	_	
290-39	38564-38565	.	_	_	_	_	

#Text=If more flexibility in copying the backup files is needed, a lower level process can be used for standalone hot backups as well.
291-1	38566-38568	If	_	_	_	_	
291-2	38569-38573	more	_	_	_	_	
291-3	38574-38585	flexibility	_	_	_	_	
291-4	38586-38588	in	_	_	_	_	
291-5	38589-38596	copying	_	_	_	_	
291-6	38597-38600	the	_	_	_	_	
291-7	38601-38607	backup	_	_	_	_	
291-8	38608-38613	files	_	_	_	_	
291-9	38614-38616	is	_	_	_	_	
291-10	38617-38623	needed	_	_	_	_	
291-11	38623-38624	,	_	_	_	_	
291-12	38625-38626	a	_	_	_	_	
291-13	38627-38632	lower	_	_	_	_	
291-14	38633-38638	level	_	_	_	_	
291-15	38639-38646	process	_	_	_	_	
291-16	38647-38650	can	_	_	_	_	
291-17	38651-38653	be	_	_	_	_	
291-18	38654-38658	used	_	_	_	_	
291-19	38659-38662	for	_	_	_	_	
291-20	38663-38673	standalone	_	_	_	_	
291-21	38674-38677	hot	_	_	_	_	
291-22	38678-38685	backups	_	_	_	_	
291-23	38686-38688	as	_	_	_	_	
291-24	38689-38693	well	_	_	_	_	
291-25	38693-38694	.	_	_	_	_	

#Text=To prepare for low level standalone hot backups, make sure wal_level is set to replica or higher, archive_mode to on, and set up an archive_command that performs archiving only when a switch file exists.
292-1	38695-38697	To	_	_	_	_	
292-2	38698-38705	prepare	_	_	_	_	
292-3	38706-38709	for	_	_	_	_	
292-4	38710-38713	low	_	_	_	_	
292-5	38714-38719	level	_	_	_	_	
292-6	38720-38730	standalone	_	_	_	_	
292-7	38731-38734	hot	_	_	_	_	
292-8	38735-38742	backups	_	_	_	_	
292-9	38742-38743	,	_	_	_	_	
292-10	38744-38748	make	_	_	_	_	
292-11	38749-38753	sure	_	_	_	_	
292-12	38754-38763	wal_level	_	_	_	_	
292-13	38764-38766	is	_	_	_	_	
292-14	38767-38770	set	_	_	_	_	
292-15	38771-38773	to	_	_	_	_	
292-16	38774-38781	replica	_	_	_	_	
292-17	38782-38784	or	_	_	_	_	
292-18	38785-38791	higher	_	_	_	_	
292-19	38791-38792	,	_	_	_	_	
292-20	38793-38805	archive_mode	_	_	_	_	
292-21	38806-38808	to	_	_	_	_	
292-22	38809-38811	on	_	_	_	_	
292-23	38811-38812	,	_	_	_	_	
292-24	38813-38816	and	_	_	_	_	
292-25	38817-38820	set	_	_	_	_	
292-26	38821-38823	up	_	_	_	_	
292-27	38824-38826	an	_	_	_	_	
292-28	38827-38842	archive_command	_	_	_	_	
292-29	38843-38847	that	_	_	_	_	
292-30	38848-38856	performs	_	_	_	_	
292-31	38857-38866	archiving	_	_	_	_	
292-32	38867-38871	only	_	_	_	_	
292-33	38872-38876	when	_	_	_	_	
292-34	38877-38878	a	_	_	_	_	
292-35	38879-38885	switch	_	_	_	_	
292-36	38886-38890	file	_	_	_	_	
292-37	38891-38897	exists	_	_	_	_	
292-38	38897-38898	.	_	_	_	_	

#Text=For example:
#Text=archive_command = 'test !
293-1	38899-38902	For	_	_	_	_	
293-2	38903-38910	example	_	_	_	_	
293-3	38910-38911	:	_	_	_	_	
293-4	38912-38927	archive_command	_	_	_	_	
293-5	38928-38929	=	_	_	_	_	
293-6	38930-38931	'	_	_	_	_	
293-7	38931-38935	test	_	_	_	_	
293-8	38936-38937	!	_	_	_	_	

#Text=-f /var/lib/pgsql/backup_in_progress || (test !
294-1	38938-38939	-	_	_	_	_	
294-2	38939-38940	f	_	_	_	_	
294-3	38941-38942	/	_	_	_	_	
294-4	38942-38945	var	_	_	_	_	
294-5	38945-38946	/	_	_	_	_	
294-6	38946-38949	lib	_	_	_	_	
294-7	38949-38950	/	_	_	_	_	
294-8	38950-38955	pgsql	_	_	_	_	
294-9	38955-38956	/	_	_	_	_	
294-10	38956-38974	backup_in_progress	_	_	_	_	
294-11	38975-38976	|	_	_	_	_	
294-12	38976-38977	|	_	_	_	_	
294-13	38978-38979	(	_	_	_	_	
294-14	38979-38983	test	_	_	_	_	
294-15	38984-38985	!	_	_	_	_	

#Text=-f /var/lib/pgsql/archive/%f && cp %p /var/lib/pgsql/archive/%f)'
#Text=This command will perform archiving when /var/lib/pgsql/backup_in_progress exists, and otherwise silently return zero exit status (allowing PostgreSQL to recycle the unwanted WAL file).
295-1	38986-38987	-	_	_	_	_	
295-2	38987-38988	f	_	_	_	_	
295-3	38989-38990	/	_	_	_	_	
295-4	38990-38993	var	_	_	_	_	
295-5	38993-38994	/	_	_	_	_	
295-6	38994-38997	lib	_	_	_	_	
295-7	38997-38998	/	_	_	_	_	
295-8	38998-39003	pgsql	_	_	_	_	
295-9	39003-39004	/	_	_	_	_	
295-10	39004-39011	archive	_	_	_	_	
295-11	39011-39012	/	_	_	_	_	
295-12	39012-39013	%	_	_	_	_	
295-13	39013-39014	f	_	_	_	_	
295-14	39015-39016	&	_	_	_	_	
295-15	39016-39017	&	_	_	_	_	
295-16	39018-39020	cp	_	_	_	_	
295-17	39021-39022	%	_	_	_	_	
295-18	39022-39023	p	_	_	_	_	
295-19	39024-39025	/	_	_	_	_	
295-20	39025-39028	var	_	_	_	_	
295-21	39028-39029	/	_	_	_	_	
295-22	39029-39032	lib	_	_	_	_	
295-23	39032-39033	/	_	_	_	_	
295-24	39033-39038	pgsql	_	_	_	_	
295-25	39038-39039	/	_	_	_	_	
295-26	39039-39046	archive	_	_	_	_	
295-27	39046-39047	/	_	_	_	_	
295-28	39047-39048	%	_	_	_	_	
295-29	39048-39049	f	_	_	_	_	
295-30	39049-39050	)	_	_	_	_	
295-31	39050-39051	'	_	_	_	_	
295-32	39052-39056	This	_	_	_	_	
295-33	39057-39064	command	_	_	_	_	
295-34	39065-39069	will	_	_	_	_	
295-35	39070-39077	perform	_	_	_	_	
295-36	39078-39087	archiving	_	_	_	_	
295-37	39088-39092	when	_	_	_	_	
295-38	39093-39094	/	_	_	_	_	
295-39	39094-39097	var	_	_	_	_	
295-40	39097-39098	/	_	_	_	_	
295-41	39098-39101	lib	_	_	_	_	
295-42	39101-39102	/	_	_	_	_	
295-43	39102-39107	pgsql	_	_	_	_	
295-44	39107-39108	/	_	_	_	_	
295-45	39108-39126	backup_in_progress	_	_	_	_	
295-46	39127-39133	exists	_	_	_	_	
295-47	39133-39134	,	_	_	_	_	
295-48	39135-39138	and	_	_	_	_	
295-49	39139-39148	otherwise	_	_	_	_	
295-50	39149-39157	silently	_	_	_	_	
295-51	39158-39164	return	_	_	_	_	
295-52	39165-39169	zero	_	_	_	_	
295-53	39170-39174	exit	_	_	_	_	
295-54	39175-39181	status	_	_	_	_	
295-55	39182-39183	(	_	_	_	_	
295-56	39183-39191	allowing	_	_	_	_	
295-57	39192-39202	PostgreSQL	_	_	_	_	
295-58	39203-39205	to	_	_	_	_	
295-59	39206-39213	recycle	_	_	_	_	
295-60	39214-39217	the	_	_	_	_	
295-61	39218-39226	unwanted	_	_	_	_	
295-62	39227-39230	WAL	_	_	_	_	
295-63	39231-39235	file	_	_	_	_	
295-64	39235-39236	)	_	_	_	_	
295-65	39236-39237	.	_	_	_	_	

#Text=With this preparation, a backup can be taken using a script like the following:
#Text=touch /var/lib/pgsql/backup_in_progress
#Text=psql -c "select pg_start_backup('hot_backup');"
#Text=tar -cf /var/lib/pgsql/backup.tar /var/lib/pgsql/data/
#Text=psql -c "select pg_stop_backup();"
#Text=rm /var/lib/pgsql/backup_in_progress
#Text=tar -rf /var/lib/pgsql/backup.tar /var/lib/pgsql/archive/
#Text=The switch file /var/lib/pgsql/backup_in_progress is created first, enabling archiving of completed WAL files to occur.
296-1	39238-39242	With	_	_	_	_	
296-2	39243-39247	this	_	_	_	_	
296-3	39248-39259	preparation	_	_	_	_	
296-4	39259-39260	,	_	_	_	_	
296-5	39261-39262	a	_	_	_	_	
296-6	39263-39269	backup	_	_	_	_	
296-7	39270-39273	can	_	_	_	_	
296-8	39274-39276	be	_	_	_	_	
296-9	39277-39282	taken	_	_	_	_	
296-10	39283-39288	using	_	_	_	_	
296-11	39289-39290	a	_	_	_	_	
296-12	39291-39297	script	_	_	_	_	
296-13	39298-39302	like	_	_	_	_	
296-14	39303-39306	the	_	_	_	_	
296-15	39307-39316	following	_	_	_	_	
296-16	39316-39317	:	_	_	_	_	
296-17	39318-39323	touch	_	_	_	_	
296-18	39324-39325	/	_	_	_	_	
296-19	39325-39328	var	_	_	_	_	
296-20	39328-39329	/	_	_	_	_	
296-21	39329-39332	lib	_	_	_	_	
296-22	39332-39333	/	_	_	_	_	
296-23	39333-39338	pgsql	_	_	_	_	
296-24	39338-39339	/	_	_	_	_	
296-25	39339-39357	backup_in_progress	_	_	_	_	
296-26	39358-39362	psql	_	_	_	_	
296-27	39363-39364	-	_	_	_	_	
296-28	39364-39365	c	_	_	_	_	
296-29	39366-39367	"	_	_	_	_	
296-30	39367-39373	select	_	_	_	_	
296-31	39374-39389	pg_start_backup	_	_	_	_	
296-32	39389-39390	(	_	_	_	_	
296-33	39390-39391	'	_	_	_	_	
296-34	39391-39401	hot_backup	_	_	_	_	
296-35	39401-39402	'	_	_	_	_	
296-36	39402-39403	)	_	_	_	_	
296-37	39403-39404	;	_	_	_	_	
296-38	39404-39405	"	_	_	_	_	
296-39	39406-39409	tar	_	_	_	_	
296-40	39410-39411	-	_	_	_	_	
296-41	39411-39413	cf	_	_	_	_	
296-42	39414-39415	/	_	_	_	_	
296-43	39415-39418	var	_	_	_	_	
296-44	39418-39419	/	_	_	_	_	
296-45	39419-39422	lib	_	_	_	_	
296-46	39422-39423	/	_	_	_	_	
296-47	39423-39428	pgsql	_	_	_	_	
296-48	39428-39429	/	_	_	_	_	
296-49	39429-39439	backup.tar	_	_	_	_	
296-50	39440-39441	/	_	_	_	_	
296-51	39441-39444	var	_	_	_	_	
296-52	39444-39445	/	_	_	_	_	
296-53	39445-39448	lib	_	_	_	_	
296-54	39448-39449	/	_	_	_	_	
296-55	39449-39454	pgsql	_	_	_	_	
296-56	39454-39455	/	_	_	_	_	
296-57	39455-39459	data	_	_	_	_	
296-58	39459-39460	/	_	_	_	_	
296-59	39461-39465	psql	_	_	_	_	
296-60	39466-39467	-	_	_	_	_	
296-61	39467-39468	c	_	_	_	_	
296-62	39469-39470	"	_	_	_	_	
296-63	39470-39476	select	_	_	_	_	
296-64	39477-39491	pg_stop_backup	_	_	_	_	
296-65	39491-39492	(	_	_	_	_	
296-66	39492-39493	)	_	_	_	_	
296-67	39493-39494	;	_	_	_	_	
296-68	39494-39495	"	_	_	_	_	
296-69	39496-39498	rm	_	_	_	_	
296-70	39499-39500	/	_	_	_	_	
296-71	39500-39503	var	_	_	_	_	
296-72	39503-39504	/	_	_	_	_	
296-73	39504-39507	lib	_	_	_	_	
296-74	39507-39508	/	_	_	_	_	
296-75	39508-39513	pgsql	_	_	_	_	
296-76	39513-39514	/	_	_	_	_	
296-77	39514-39532	backup_in_progress	_	_	_	_	
296-78	39533-39536	tar	_	_	_	_	
296-79	39537-39538	-	_	_	_	_	
296-80	39538-39540	rf	_	_	_	_	
296-81	39541-39542	/	_	_	_	_	
296-82	39542-39545	var	_	_	_	_	
296-83	39545-39546	/	_	_	_	_	
296-84	39546-39549	lib	_	_	_	_	
296-85	39549-39550	/	_	_	_	_	
296-86	39550-39555	pgsql	_	_	_	_	
296-87	39555-39556	/	_	_	_	_	
296-88	39556-39566	backup.tar	_	_	_	_	
296-89	39567-39568	/	_	_	_	_	
296-90	39568-39571	var	_	_	_	_	
296-91	39571-39572	/	_	_	_	_	
296-92	39572-39575	lib	_	_	_	_	
296-93	39575-39576	/	_	_	_	_	
296-94	39576-39581	pgsql	_	_	_	_	
296-95	39581-39582	/	_	_	_	_	
296-96	39582-39589	archive	_	_	_	_	
296-97	39589-39590	/	_	_	_	_	
296-98	39591-39594	The	_	_	_	_	
296-99	39595-39601	switch	_	_	_	_	
296-100	39602-39606	file	_	_	_	_	
296-101	39607-39608	/	_	_	_	_	
296-102	39608-39611	var	_	_	_	_	
296-103	39611-39612	/	_	_	_	_	
296-104	39612-39615	lib	_	_	_	_	
296-105	39615-39616	/	_	_	_	_	
296-106	39616-39621	pgsql	_	_	_	_	
296-107	39621-39622	/	_	_	_	_	
296-108	39622-39640	backup_in_progress	_	_	_	_	
296-109	39641-39643	is	_	_	_	_	
296-110	39644-39651	created	_	_	_	_	
296-111	39652-39657	first	_	_	_	_	
296-112	39657-39658	,	_	_	_	_	
296-113	39659-39667	enabling	_	_	_	_	
296-114	39668-39677	archiving	_	_	_	_	
296-115	39678-39680	of	_	_	_	_	
296-116	39681-39690	completed	_	_	_	_	
296-117	39691-39694	WAL	_	_	_	_	
296-118	39695-39700	files	_	_	_	_	
296-119	39701-39703	to	_	_	_	_	
296-120	39704-39709	occur	_	_	_	_	
296-121	39709-39710	.	_	_	_	_	

#Text=After the backup the switch file is removed.
297-1	39711-39716	After	_	_	_	_	
297-2	39717-39720	the	_	_	_	_	
297-3	39721-39727	backup	_	_	_	_	
297-4	39728-39731	the	_	_	_	_	
297-5	39732-39738	switch	_	_	_	_	
297-6	39739-39743	file	_	_	_	_	
297-7	39744-39746	is	_	_	_	_	
297-8	39747-39754	removed	_	_	_	_	
297-9	39754-39755	.	_	_	_	_	

#Text=Archived WAL files are then added to the backup so that both base backup and all required WAL files are part of the same tar file.
298-1	39756-39764	Archived	_	_	_	_	
298-2	39765-39768	WAL	_	_	_	_	
298-3	39769-39774	files	_	_	_	_	
298-4	39775-39778	are	_	_	_	_	
298-5	39779-39783	then	_	_	_	_	
298-6	39784-39789	added	_	_	_	_	
298-7	39790-39792	to	_	_	_	_	
298-8	39793-39796	the	_	_	_	_	
298-9	39797-39803	backup	_	_	_	_	
298-10	39804-39806	so	_	_	_	_	
298-11	39807-39811	that	_	_	_	_	
298-12	39812-39816	both	_	_	_	_	
298-13	39817-39821	base	_	_	_	_	
298-14	39822-39828	backup	_	_	_	_	
298-15	39829-39832	and	_	_	_	_	
298-16	39833-39836	all	_	_	_	_	
298-17	39837-39845	required	_	_	_	_	
298-18	39846-39849	WAL	_	_	_	_	
298-19	39850-39855	files	_	_	_	_	
298-20	39856-39859	are	_	_	_	_	
298-21	39860-39864	part	_	_	_	_	
298-22	39865-39867	of	_	_	_	_	
298-23	39868-39871	the	_	_	_	_	
298-24	39872-39876	same	_	_	_	_	
298-25	39877-39880	tar	_	_	_	_	
298-26	39881-39885	file	_	_	_	_	
298-27	39885-39886	.	_	_	_	_	

#Text=Please remember to add error handling to your backup scripts.
#Text=25.3.6.2. 
299-1	39887-39893	Please	_	_	_	_	
299-2	39894-39902	remember	_	_	_	_	
299-3	39903-39905	to	_	_	_	_	
299-4	39906-39909	add	_	_	_	_	
299-5	39910-39915	error	_	_	_	_	
299-6	39916-39924	handling	_	_	_	_	
299-7	39925-39927	to	_	_	_	_	
299-8	39928-39932	your	_	_	_	_	
299-9	39933-39939	backup	_	_	_	_	
299-10	39940-39947	scripts	_	_	_	_	
299-11	39947-39948	.	_	_	_	_	
299-12	39949-39957	25.3.6.2	_	_	_	_	
299-13	39957-39958	.	_	_	_	_	
299-14	39958-39959	 	_	_	_	_	

#Text=Compressed Archive Logs
#Text=If archive storage size is a concern, you can use gzip to compress the archive files:
#Text=archive_command = 'gzip < %p > /var/lib/pgsql/archive/%f'
#Text=You will then need to use gunzip during recovery:
#Text=restore_command = 'gunzip < /mnt/server/archivedir/%f > %p'
#Text=25.3.6.3. archive_command Scripts
#Text=Many people choose to use scripts to define their archive_command, so that their postgresql.conf entry looks very simple:
#Text=archive_command = 'local_backup_script.sh "%p" "%f"'
#Text=Using a separate script file is advisable any time you want to use more than a single command in the archiving process.
300-1	39959-39969	Compressed	_	_	_	_	
300-2	39970-39977	Archive	_	_	_	_	
300-3	39978-39982	Logs	_	_	_	_	
300-4	39983-39985	If	_	_	_	_	
300-5	39986-39993	archive	_	_	_	_	
300-6	39994-40001	storage	_	_	_	_	
300-7	40002-40006	size	_	_	_	_	
300-8	40007-40009	is	_	_	_	_	
300-9	40010-40011	a	_	_	_	_	
300-10	40012-40019	concern	_	_	_	_	
300-11	40019-40020	,	_	_	_	_	
300-12	40021-40024	you	_	_	_	_	
300-13	40025-40028	can	_	_	_	_	
300-14	40029-40032	use	_	_	_	_	
300-15	40033-40037	gzip	_	_	_	_	
300-16	40038-40040	to	_	_	_	_	
300-17	40041-40049	compress	_	_	_	_	
300-18	40050-40053	the	_	_	_	_	
300-19	40054-40061	archive	_	_	_	_	
300-20	40062-40067	files	_	_	_	_	
300-21	40067-40068	:	_	_	_	_	
300-22	40069-40084	archive_command	_	_	_	_	
300-23	40085-40086	=	_	_	_	_	
300-24	40087-40088	'	_	_	_	_	
300-25	40088-40092	gzip	_	_	_	_	
300-26	40093-40094	<	_	_	_	_	
300-27	40095-40096	%	_	_	_	_	
300-28	40096-40097	p	_	_	_	_	
300-29	40098-40099	>	_	_	_	_	
300-30	40100-40101	/	_	_	_	_	
300-31	40101-40104	var	_	_	_	_	
300-32	40104-40105	/	_	_	_	_	
300-33	40105-40108	lib	_	_	_	_	
300-34	40108-40109	/	_	_	_	_	
300-35	40109-40114	pgsql	_	_	_	_	
300-36	40114-40115	/	_	_	_	_	
300-37	40115-40122	archive	_	_	_	_	
300-38	40122-40123	/	_	_	_	_	
300-39	40123-40124	%	_	_	_	_	
300-40	40124-40125	f	_	_	_	_	
300-41	40125-40126	'	_	_	_	_	
300-42	40127-40130	You	_	_	_	_	
300-43	40131-40135	will	_	_	_	_	
300-44	40136-40140	then	_	_	_	_	
300-45	40141-40145	need	_	_	_	_	
300-46	40146-40148	to	_	_	_	_	
300-47	40149-40152	use	_	_	_	_	
300-48	40153-40159	gunzip	_	_	_	_	
300-49	40160-40166	during	_	_	_	_	
300-50	40167-40175	recovery	_	_	_	_	
300-51	40175-40176	:	_	_	_	_	
300-52	40177-40192	restore_command	_	_	_	_	
300-53	40193-40194	=	_	_	_	_	
300-54	40195-40196	'	_	_	_	_	
300-55	40196-40202	gunzip	_	_	_	_	
300-56	40203-40204	<	_	_	_	_	
300-57	40205-40206	/	_	_	_	_	
300-58	40206-40209	mnt	_	_	_	_	
300-59	40209-40210	/	_	_	_	_	
300-60	40210-40216	server	_	_	_	_	
300-61	40216-40217	/	_	_	_	_	
300-62	40217-40227	archivedir	_	_	_	_	
300-63	40227-40228	/	_	_	_	_	
300-64	40228-40229	%	_	_	_	_	
300-65	40229-40230	f	_	_	_	_	
300-66	40231-40232	>	_	_	_	_	
300-67	40233-40234	%	_	_	_	_	
300-68	40234-40235	p	_	_	_	_	
300-69	40235-40236	'	_	_	_	_	
300-70	40237-40245	25.3.6.3	_	_	_	_	
300-71	40245-40246	.	_	_	_	_	
300-72	40246-40247	 	_	_	_	_	
300-73	40247-40262	archive_command	_	_	_	_	
300-74	40263-40270	Scripts	_	_	_	_	
300-75	40271-40275	Many	_	_	_	_	
300-76	40276-40282	people	_	_	_	_	
300-77	40283-40289	choose	_	_	_	_	
300-78	40290-40292	to	_	_	_	_	
300-79	40293-40296	use	_	_	_	_	
300-80	40297-40304	scripts	_	_	_	_	
300-81	40305-40307	to	_	_	_	_	
300-82	40308-40314	define	_	_	_	_	
300-83	40315-40320	their	_	_	_	_	
300-84	40321-40336	archive_command	_	_	_	_	
300-85	40336-40337	,	_	_	_	_	
300-86	40338-40340	so	_	_	_	_	
300-87	40341-40345	that	_	_	_	_	
300-88	40346-40351	their	_	_	_	_	
300-89	40352-40367	postgresql.conf	_	_	_	_	
300-90	40368-40373	entry	_	_	_	_	
300-91	40374-40379	looks	_	_	_	_	
300-92	40380-40384	very	_	_	_	_	
300-93	40385-40391	simple	_	_	_	_	
300-94	40391-40392	:	_	_	_	_	
300-95	40393-40408	archive_command	_	_	_	_	
300-96	40409-40410	=	_	_	_	_	
300-97	40411-40412	'	_	_	_	_	
300-98	40412-40434	local_backup_script.sh	_	_	_	_	
300-99	40435-40436	"	_	_	_	_	
300-100	40436-40437	%	_	_	_	_	
300-101	40437-40438	p	_	_	_	_	
300-102	40438-40439	"	_	_	_	_	
300-103	40440-40441	"	_	_	_	_	
300-104	40441-40442	%	_	_	_	_	
300-105	40442-40443	f	_	_	_	_	
300-106	40443-40444	"	_	_	_	_	
300-107	40444-40445	'	_	_	_	_	
300-108	40446-40451	Using	_	_	_	_	
300-109	40452-40453	a	_	_	_	_	
300-110	40454-40462	separate	_	_	_	_	
300-111	40463-40469	script	_	_	_	_	
300-112	40470-40474	file	_	_	_	_	
300-113	40475-40477	is	_	_	_	_	
300-114	40478-40487	advisable	_	_	_	_	
300-115	40488-40491	any	_	_	_	_	
300-116	40492-40496	time	_	_	_	_	
300-117	40497-40500	you	_	_	_	_	
300-118	40501-40505	want	_	_	_	_	
300-119	40506-40508	to	_	_	_	_	
300-120	40509-40512	use	_	_	_	_	
300-121	40513-40517	more	_	_	_	_	
300-122	40518-40522	than	_	_	_	_	
300-123	40523-40524	a	_	_	_	_	
300-124	40525-40531	single	_	_	_	_	
300-125	40532-40539	command	_	_	_	_	
300-126	40540-40542	in	_	_	_	_	
300-127	40543-40546	the	_	_	_	_	
300-128	40547-40556	archiving	_	_	_	_	
300-129	40557-40564	process	_	_	_	_	
300-130	40564-40565	.	_	_	_	_	

#Text=This allows all complexity to be managed within the script, which can be written in a popular scripting language such as bash or perl.
301-1	40566-40570	This	_	_	_	_	
301-2	40571-40577	allows	_	_	_	_	
301-3	40578-40581	all	_	_	_	_	
301-4	40582-40592	complexity	_	_	_	_	
301-5	40593-40595	to	_	_	_	_	
301-6	40596-40598	be	_	_	_	_	
301-7	40599-40606	managed	_	_	_	_	
301-8	40607-40613	within	_	_	_	_	
301-9	40614-40617	the	_	_	_	_	
301-10	40618-40624	script	_	_	_	_	
301-11	40624-40625	,	_	_	_	_	
301-12	40626-40631	which	_	_	_	_	
301-13	40632-40635	can	_	_	_	_	
301-14	40636-40638	be	_	_	_	_	
301-15	40639-40646	written	_	_	_	_	
301-16	40647-40649	in	_	_	_	_	
301-17	40650-40651	a	_	_	_	_	
301-18	40652-40659	popular	_	_	_	_	
301-19	40660-40669	scripting	_	_	_	_	
301-20	40670-40678	language	_	_	_	_	
301-21	40679-40683	such	_	_	_	_	
301-22	40684-40686	as	_	_	_	_	
301-23	40687-40691	bash	_	_	_	_	
301-24	40692-40694	or	_	_	_	_	
301-25	40695-40699	perl	_	_	_	_	
301-26	40699-40700	.	_	_	_	_	

#Text=Examples of requirements that might be solved within a script include:
#Text=Copying data to secure off-site data storage
#Text=Batching WAL files so that they are transferred every three hours, rather than one at a time
#Text=Interfacing with other backup and recovery software
#Text=Interfacing with monitoring software to report errors
#Text=Tip
#Text=When using an archive_command script, it's desirable to enable logging_collector.
302-1	40701-40709	Examples	_	_	_	_	
302-2	40710-40712	of	_	_	_	_	
302-3	40713-40725	requirements	_	_	_	_	
302-4	40726-40730	that	_	_	_	_	
302-5	40731-40736	might	_	_	_	_	
302-6	40737-40739	be	_	_	_	_	
302-7	40740-40746	solved	_	_	_	_	
302-8	40747-40753	within	_	_	_	_	
302-9	40754-40755	a	_	_	_	_	
302-10	40756-40762	script	_	_	_	_	
302-11	40763-40770	include	_	_	_	_	
302-12	40770-40771	:	_	_	_	_	
302-13	40772-40779	Copying	_	_	_	_	
302-14	40780-40784	data	_	_	_	_	
302-15	40785-40787	to	_	_	_	_	
302-16	40788-40794	secure	_	_	_	_	
302-17	40795-40803	off-site	_	_	_	_	
302-18	40804-40808	data	_	_	_	_	
302-19	40809-40816	storage	_	_	_	_	
302-20	40817-40825	Batching	_	_	_	_	
302-21	40826-40829	WAL	_	_	_	_	
302-22	40830-40835	files	_	_	_	_	
302-23	40836-40838	so	_	_	_	_	
302-24	40839-40843	that	_	_	_	_	
302-25	40844-40848	they	_	_	_	_	
302-26	40849-40852	are	_	_	_	_	
302-27	40853-40864	transferred	_	_	_	_	
302-28	40865-40870	every	_	_	_	_	
302-29	40871-40876	three	_	_	_	_	
302-30	40877-40882	hours	_	_	_	_	
302-31	40882-40883	,	_	_	_	_	
302-32	40884-40890	rather	_	_	_	_	
302-33	40891-40895	than	_	_	_	_	
302-34	40896-40899	one	_	_	_	_	
302-35	40900-40902	at	_	_	_	_	
302-36	40903-40904	a	_	_	_	_	
302-37	40905-40909	time	_	_	_	_	
302-38	40910-40921	Interfacing	_	_	_	_	
302-39	40922-40926	with	_	_	_	_	
302-40	40927-40932	other	_	_	_	_	
302-41	40933-40939	backup	_	_	_	_	
302-42	40940-40943	and	_	_	_	_	
302-43	40944-40952	recovery	_	_	_	_	
302-44	40953-40961	software	_	_	_	_	
302-45	40962-40973	Interfacing	_	_	_	_	
302-46	40974-40978	with	_	_	_	_	
302-47	40979-40989	monitoring	_	_	_	_	
302-48	40990-40998	software	_	_	_	_	
302-49	40999-41001	to	_	_	_	_	
302-50	41002-41008	report	_	_	_	_	
302-51	41009-41015	errors	_	_	_	_	
302-52	41016-41019	Tip	_	_	_	_	
302-53	41020-41024	When	_	_	_	_	
302-54	41025-41030	using	_	_	_	_	
302-55	41031-41033	an	_	_	_	_	
302-56	41034-41049	archive_command	_	_	_	_	
302-57	41050-41056	script	_	_	_	_	
302-58	41056-41057	,	_	_	_	_	
302-59	41058-41062	it's	_	_	_	_	
302-60	41063-41072	desirable	_	_	_	_	
302-61	41073-41075	to	_	_	_	_	
302-62	41076-41082	enable	_	_	_	_	
302-63	41083-41100	logging_collector	_	_	_	_	
302-64	41100-41101	.	_	_	_	_	

#Text=Any messages written to stderr from the script will then appear in the database server log, allowing complex configurations to be diagnosed easily if they fail.
#Text=25.3.7. 
303-1	41102-41105	Any	_	_	_	_	
303-2	41106-41114	messages	_	_	_	_	
303-3	41115-41122	written	_	_	_	_	
303-4	41123-41125	to	_	_	_	_	
303-5	41126-41132	stderr	_	_	_	_	
303-6	41133-41137	from	_	_	_	_	
303-7	41138-41141	the	_	_	_	_	
303-8	41142-41148	script	_	_	_	_	
303-9	41149-41153	will	_	_	_	_	
303-10	41154-41158	then	_	_	_	_	
303-11	41159-41165	appear	_	_	_	_	
303-12	41166-41168	in	_	_	_	_	
303-13	41169-41172	the	_	_	_	_	
303-14	41173-41181	database	_	_	_	_	
303-15	41182-41188	server	_	_	_	_	
303-16	41189-41192	log	_	_	_	_	
303-17	41192-41193	,	_	_	_	_	
303-18	41194-41202	allowing	_	_	_	_	
303-19	41203-41210	complex	_	_	_	_	
303-20	41211-41225	configurations	_	_	_	_	
303-21	41226-41228	to	_	_	_	_	
303-22	41229-41231	be	_	_	_	_	
303-23	41232-41241	diagnosed	_	_	_	_	
303-24	41242-41248	easily	_	_	_	_	
303-25	41249-41251	if	_	_	_	_	
303-26	41252-41256	they	_	_	_	_	
303-27	41257-41261	fail	_	_	_	_	
303-28	41261-41262	.	_	_	_	_	
303-29	41263-41269	25.3.7	_	_	_	_	
303-30	41269-41270	.	_	_	_	_	
303-31	41270-41271	 	_	_	_	_	

#Text=Caveats
#Text=At this writing, there are several limitations of the continuous archiving technique.
304-1	41271-41278	Caveats	_	_	_	_	
304-2	41279-41281	At	_	_	_	_	
304-3	41282-41286	this	_	_	_	_	
304-4	41287-41294	writing	_	_	_	_	
304-5	41294-41295	,	_	_	_	_	
304-6	41296-41301	there	_	_	_	_	
304-7	41302-41305	are	_	_	_	_	
304-8	41306-41313	several	_	_	_	_	
304-9	41314-41325	limitations	_	_	_	_	
304-10	41326-41328	of	_	_	_	_	
304-11	41329-41332	the	_	_	_	_	
304-12	41333-41343	continuous	_	_	_	_	
304-13	41344-41353	archiving	_	_	_	_	
304-14	41354-41363	technique	_	_	_	_	
304-15	41363-41364	.	_	_	_	_	

#Text=These will probably be fixed in future releases:
#Text=If a CREATE DATABASE command is executed while a base backup is being taken, and then the template database that the CREATE DATABASE copied is modified while the base backup is still in progress, it is possible that recovery will cause those modifications to be propagated into the created database as well.
305-1	41365-41370	These	_	_	_	_	
305-2	41371-41375	will	_	_	_	_	
305-3	41376-41384	probably	_	_	_	_	
305-4	41385-41387	be	_	_	_	_	
305-5	41388-41393	fixed	_	_	_	_	
305-6	41394-41396	in	_	_	_	_	
305-7	41397-41403	future	_	_	_	_	
305-8	41404-41412	releases	_	_	_	_	
305-9	41412-41413	:	_	_	_	_	
305-10	41414-41416	If	_	_	_	_	
305-11	41417-41418	a	_	_	_	_	
305-12	41419-41425	CREATE	_	_	_	_	
305-13	41426-41434	DATABASE	_	_	_	_	
305-14	41435-41442	command	_	_	_	_	
305-15	41443-41445	is	_	_	_	_	
305-16	41446-41454	executed	_	_	_	_	
305-17	41455-41460	while	_	_	_	_	
305-18	41461-41462	a	_	_	_	_	
305-19	41463-41467	base	_	_	_	_	
305-20	41468-41474	backup	_	_	_	_	
305-21	41475-41477	is	_	_	_	_	
305-22	41478-41483	being	_	_	_	_	
305-23	41484-41489	taken	_	_	_	_	
305-24	41489-41490	,	_	_	_	_	
305-25	41491-41494	and	_	_	_	_	
305-26	41495-41499	then	_	_	_	_	
305-27	41500-41503	the	_	_	_	_	
305-28	41504-41512	template	_	_	_	_	
305-29	41513-41521	database	_	_	_	_	
305-30	41522-41526	that	_	_	_	_	
305-31	41527-41530	the	_	_	_	_	
305-32	41531-41537	CREATE	_	_	_	_	
305-33	41538-41546	DATABASE	_	_	_	_	
305-34	41547-41553	copied	_	_	_	_	
305-35	41554-41556	is	_	_	_	_	
305-36	41557-41565	modified	_	_	_	_	
305-37	41566-41571	while	_	_	_	_	
305-38	41572-41575	the	_	_	_	_	
305-39	41576-41580	base	_	_	_	_	
305-40	41581-41587	backup	_	_	_	_	
305-41	41588-41590	is	_	_	_	_	
305-42	41591-41596	still	_	_	_	_	
305-43	41597-41599	in	_	_	_	_	
305-44	41600-41608	progress	_	_	_	_	
305-45	41608-41609	,	_	_	_	_	
305-46	41610-41612	it	_	_	_	_	
305-47	41613-41615	is	_	_	_	_	
305-48	41616-41624	possible	_	_	_	_	
305-49	41625-41629	that	_	_	_	_	
305-50	41630-41638	recovery	_	_	_	_	
305-51	41639-41643	will	_	_	_	_	
305-52	41644-41649	cause	_	_	_	_	
305-53	41650-41655	those	_	_	_	_	
305-54	41656-41669	modifications	_	_	_	_	
305-55	41670-41672	to	_	_	_	_	
305-56	41673-41675	be	_	_	_	_	
305-57	41676-41686	propagated	_	_	_	_	
305-58	41687-41691	into	_	_	_	_	
305-59	41692-41695	the	_	_	_	_	
305-60	41696-41703	created	_	_	_	_	
305-61	41704-41712	database	_	_	_	_	
305-62	41713-41715	as	_	_	_	_	
305-63	41716-41720	well	_	_	_	_	
305-64	41720-41721	.	_	_	_	_	

#Text=This is of course undesirable.
306-1	41722-41726	This	_	_	_	_	
306-2	41727-41729	is	_	_	_	_	
306-3	41730-41732	of	_	_	_	_	
306-4	41733-41739	course	_	_	_	_	
306-5	41740-41751	undesirable	_	_	_	_	
306-6	41751-41752	.	_	_	_	_	

#Text=To avoid this risk, it is best not to modify any template databases while taking a base backup.
307-1	41753-41755	To	_	_	_	_	
307-2	41756-41761	avoid	_	_	_	_	
307-3	41762-41766	this	_	_	_	_	
307-4	41767-41771	risk	_	_	_	_	
307-5	41771-41772	,	_	_	_	_	
307-6	41773-41775	it	_	_	_	_	
307-7	41776-41778	is	_	_	_	_	
307-8	41779-41783	best	_	_	_	_	
307-9	41784-41787	not	_	_	_	_	
307-10	41788-41790	to	_	_	_	_	
307-11	41791-41797	modify	_	_	_	_	
307-12	41798-41801	any	_	_	_	_	
307-13	41802-41810	template	_	_	_	_	
307-14	41811-41820	databases	_	_	_	_	
307-15	41821-41826	while	_	_	_	_	
307-16	41827-41833	taking	_	_	_	_	
307-17	41834-41835	a	_	_	_	_	
307-18	41836-41840	base	_	_	_	_	
307-19	41841-41847	backup	_	_	_	_	
307-20	41847-41848	.	_	_	_	_	

#Text=CREATE TABLESPACE commands are WAL-logged with the literal absolute path, and will therefore be replayed as tablespace creations with the same absolute path.
308-1	41849-41855	CREATE	_	_	_	_	
308-2	41856-41866	TABLESPACE	_	_	_	_	
308-3	41867-41875	commands	_	_	_	_	
308-4	41876-41879	are	_	_	_	_	
308-5	41880-41890	WAL-logged	_	_	_	_	
308-6	41891-41895	with	_	_	_	_	
308-7	41896-41899	the	_	_	_	_	
308-8	41900-41907	literal	_	_	_	_	
308-9	41908-41916	absolute	_	_	_	_	
308-10	41917-41921	path	_	_	_	_	
308-11	41921-41922	,	_	_	_	_	
308-12	41923-41926	and	_	_	_	_	
308-13	41927-41931	will	_	_	_	_	
308-14	41932-41941	therefore	_	_	_	_	
308-15	41942-41944	be	_	_	_	_	
308-16	41945-41953	replayed	_	_	_	_	
308-17	41954-41956	as	_	_	_	_	
308-18	41957-41967	tablespace	_	_	_	_	
308-19	41968-41977	creations	_	_	_	_	
308-20	41978-41982	with	_	_	_	_	
308-21	41983-41986	the	_	_	_	_	
308-22	41987-41991	same	_	_	_	_	
308-23	41992-42000	absolute	_	_	_	_	
308-24	42001-42005	path	_	_	_	_	
308-25	42005-42006	.	_	_	_	_	

#Text=This might be undesirable if the log is being replayed on a different machine.
309-1	42007-42011	This	_	_	_	_	
309-2	42012-42017	might	_	_	_	_	
309-3	42018-42020	be	_	_	_	_	
309-4	42021-42032	undesirable	_	_	_	_	
309-5	42033-42035	if	_	_	_	_	
309-6	42036-42039	the	_	_	_	_	
309-7	42040-42043	log	_	_	_	_	
309-8	42044-42046	is	_	_	_	_	
309-9	42047-42052	being	_	_	_	_	
309-10	42053-42061	replayed	_	_	_	_	
309-11	42062-42064	on	_	_	_	_	
309-12	42065-42066	a	_	_	_	_	
309-13	42067-42076	different	_	_	_	_	
309-14	42077-42084	machine	_	_	_	_	
309-15	42084-42085	.	_	_	_	_	

#Text=It can be dangerous even if the log is being replayed on the same machine, but into a new data directory: the replay will still overwrite the contents of the original tablespace.
310-1	42086-42088	It	_	_	_	_	
310-2	42089-42092	can	_	_	_	_	
310-3	42093-42095	be	_	_	_	_	
310-4	42096-42105	dangerous	_	_	_	_	
310-5	42106-42110	even	_	_	_	_	
310-6	42111-42113	if	_	_	_	_	
310-7	42114-42117	the	_	_	_	_	
310-8	42118-42121	log	_	_	_	_	
310-9	42122-42124	is	_	_	_	_	
310-10	42125-42130	being	_	_	_	_	
310-11	42131-42139	replayed	_	_	_	_	
310-12	42140-42142	on	_	_	_	_	
310-13	42143-42146	the	_	_	_	_	
310-14	42147-42151	same	_	_	_	_	
310-15	42152-42159	machine	_	_	_	_	
310-16	42159-42160	,	_	_	_	_	
310-17	42161-42164	but	_	_	_	_	
310-18	42165-42169	into	_	_	_	_	
310-19	42170-42171	a	_	_	_	_	
310-20	42172-42175	new	_	_	_	_	
310-21	42176-42180	data	_	_	_	_	
310-22	42181-42190	directory	_	_	_	_	
310-23	42190-42191	:	_	_	_	_	
310-24	42192-42195	the	_	_	_	_	
310-25	42196-42202	replay	_	_	_	_	
310-26	42203-42207	will	_	_	_	_	
310-27	42208-42213	still	_	_	_	_	
310-28	42214-42223	overwrite	_	_	_	_	
310-29	42224-42227	the	_	_	_	_	
310-30	42228-42236	contents	_	_	_	_	
310-31	42237-42239	of	_	_	_	_	
310-32	42240-42243	the	_	_	_	_	
310-33	42244-42252	original	_	_	_	_	
310-34	42253-42263	tablespace	_	_	_	_	
310-35	42263-42264	.	_	_	_	_	

#Text=To avoid potential gotchas of this sort, the best practice is to take a new base backup after creating or dropping tablespaces.
311-1	42265-42267	To	_	_	_	_	
311-2	42268-42273	avoid	_	_	_	_	
311-3	42274-42283	potential	_	_	_	_	
311-4	42284-42291	gotchas	_	_	_	_	
311-5	42292-42294	of	_	_	_	_	
311-6	42295-42299	this	_	_	_	_	
311-7	42300-42304	sort	_	_	_	_	
311-8	42304-42305	,	_	_	_	_	
311-9	42306-42309	the	_	_	_	_	
311-10	42310-42314	best	_	_	_	_	
311-11	42315-42323	practice	_	_	_	_	
311-12	42324-42326	is	_	_	_	_	
311-13	42327-42329	to	_	_	_	_	
311-14	42330-42334	take	_	_	_	_	
311-15	42335-42336	a	_	_	_	_	
311-16	42337-42340	new	_	_	_	_	
311-17	42341-42345	base	_	_	_	_	
311-18	42346-42352	backup	_	_	_	_	
311-19	42353-42358	after	_	_	_	_	
311-20	42359-42367	creating	_	_	_	_	
311-21	42368-42370	or	_	_	_	_	
311-22	42371-42379	dropping	_	_	_	_	
311-23	42380-42391	tablespaces	_	_	_	_	
311-24	42391-42392	.	_	_	_	_	

#Text=It should also be noted that the default WAL format is fairly bulky since it includes many disk page snapshots.
312-1	42393-42395	It	_	_	_	_	
312-2	42396-42402	should	_	_	_	_	
312-3	42403-42407	also	_	_	_	_	
312-4	42408-42410	be	_	_	_	_	
312-5	42411-42416	noted	_	_	_	_	
312-6	42417-42421	that	_	_	_	_	
312-7	42422-42425	the	_	_	_	_	
312-8	42426-42433	default	_	_	_	_	
312-9	42434-42437	WAL	_	_	_	_	
312-10	42438-42444	format	_	_	_	_	
312-11	42445-42447	is	_	_	_	_	
312-12	42448-42454	fairly	_	_	_	_	
312-13	42455-42460	bulky	_	_	_	_	
312-14	42461-42466	since	_	_	_	_	
312-15	42467-42469	it	_	_	_	_	
312-16	42470-42478	includes	_	_	_	_	
312-17	42479-42483	many	_	_	_	_	
312-18	42484-42488	disk	_	_	_	_	
312-19	42489-42493	page	_	_	_	_	
312-20	42494-42503	snapshots	_	_	_	_	
312-21	42503-42504	.	_	_	_	_	

#Text=These page snapshots are designed to support crash recovery, since we might need to fix partially-written disk pages.
313-1	42505-42510	These	_	_	_	_	
313-2	42511-42515	page	_	_	_	_	
313-3	42516-42525	snapshots	_	_	_	_	
313-4	42526-42529	are	_	_	_	_	
313-5	42530-42538	designed	_	_	_	_	
313-6	42539-42541	to	_	_	_	_	
313-7	42542-42549	support	_	_	_	_	
313-8	42550-42555	crash	_	_	_	_	
313-9	42556-42564	recovery	_	_	_	_	
313-10	42564-42565	,	_	_	_	_	
313-11	42566-42571	since	_	_	_	_	
313-12	42572-42574	we	_	_	_	_	
313-13	42575-42580	might	_	_	_	_	
313-14	42581-42585	need	_	_	_	_	
313-15	42586-42588	to	_	_	_	_	
313-16	42589-42592	fix	_	_	_	_	
313-17	42593-42610	partially-written	_	_	_	_	
313-18	42611-42615	disk	_	_	_	_	
313-19	42616-42621	pages	_	_	_	_	
313-20	42621-42622	.	_	_	_	_	

#Text=Depending on your system hardware and software, the risk of partial writes might be small enough to ignore, in which case you can significantly reduce the total volume of archived logs by turning off page snapshots using the full_page_writes parameter.
314-1	42623-42632	Depending	_	_	_	_	
314-2	42633-42635	on	_	_	_	_	
314-3	42636-42640	your	_	_	_	_	
314-4	42641-42647	system	_	_	_	_	
314-5	42648-42656	hardware	_	_	_	_	
314-6	42657-42660	and	_	_	_	_	
314-7	42661-42669	software	_	_	_	_	
314-8	42669-42670	,	_	_	_	_	
314-9	42671-42674	the	_	_	_	_	
314-10	42675-42679	risk	_	_	_	_	
314-11	42680-42682	of	_	_	_	_	
314-12	42683-42690	partial	_	_	_	_	
314-13	42691-42697	writes	_	_	_	_	
314-14	42698-42703	might	_	_	_	_	
314-15	42704-42706	be	_	_	_	_	
314-16	42707-42712	small	_	_	_	_	
314-17	42713-42719	enough	_	_	_	_	
314-18	42720-42722	to	_	_	_	_	
314-19	42723-42729	ignore	_	_	_	_	
314-20	42729-42730	,	_	_	_	_	
314-21	42731-42733	in	_	_	_	_	
314-22	42734-42739	which	_	_	_	_	
314-23	42740-42744	case	_	_	_	_	
314-24	42745-42748	you	_	_	_	_	
314-25	42749-42752	can	_	_	_	_	
314-26	42753-42766	significantly	_	_	_	_	
314-27	42767-42773	reduce	_	_	_	_	
314-28	42774-42777	the	_	_	_	_	
314-29	42778-42783	total	_	_	_	_	
314-30	42784-42790	volume	_	_	_	_	
314-31	42791-42793	of	_	_	_	_	
314-32	42794-42802	archived	_	_	_	_	
314-33	42803-42807	logs	_	_	_	_	
314-34	42808-42810	by	_	_	_	_	
314-35	42811-42818	turning	_	_	_	_	
314-36	42819-42822	off	_	_	_	_	
314-37	42823-42827	page	_	_	_	_	
314-38	42828-42837	snapshots	_	_	_	_	
314-39	42838-42843	using	_	_	_	_	
314-40	42844-42847	the	_	_	_	_	
314-41	42848-42864	full_page_writes	_	_	_	_	
314-42	42865-42874	parameter	_	_	_	_	
314-43	42874-42875	.	_	_	_	_	

#Text=(Read the notes and warnings in Chapter 29 before you do so.)
315-1	42876-42877	(	_	_	_	_	
315-2	42877-42881	Read	_	_	_	_	
315-3	42882-42885	the	_	_	_	_	
315-4	42886-42891	notes	_	_	_	_	
315-5	42892-42895	and	_	_	_	_	
315-6	42896-42904	warnings	_	_	_	_	
315-7	42905-42907	in	_	_	_	_	
315-8	42908-42915	Chapter	_	_	_	_	
315-9	42915-42916	 	_	_	_	_	
315-10	42916-42918	29	_	_	_	_	
315-11	42919-42925	before	_	_	_	_	
315-12	42926-42929	you	_	_	_	_	
315-13	42930-42932	do	_	_	_	_	
315-14	42933-42935	so	_	_	_	_	
315-15	42935-42936	.	_	_	_	_	
315-16	42936-42937	)	_	_	_	_	

#Text=Turning off page snapshots does not prevent use of the logs for PITR operations.
316-1	42938-42945	Turning	_	_	_	_	
316-2	42946-42949	off	_	_	_	_	
316-3	42950-42954	page	_	_	_	_	
316-4	42955-42964	snapshots	_	_	_	_	
316-5	42965-42969	does	_	_	_	_	
316-6	42970-42973	not	_	_	_	_	
316-7	42974-42981	prevent	_	_	_	_	
316-8	42982-42985	use	_	_	_	_	
316-9	42986-42988	of	_	_	_	_	
316-10	42989-42992	the	_	_	_	_	
316-11	42993-42997	logs	_	_	_	_	
316-12	42998-43001	for	_	_	_	_	
316-13	43002-43006	PITR	_	_	_	_	
316-14	43007-43017	operations	_	_	_	_	
316-15	43017-43018	.	_	_	_	_	

#Text=An area for future development is to compress archived WAL data by removing unnecessary page copies even when full_page_writes is on.
317-1	43019-43021	An	_	_	_	_	
317-2	43022-43026	area	_	_	_	_	
317-3	43027-43030	for	_	_	_	_	
317-4	43031-43037	future	_	_	_	_	
317-5	43038-43049	development	_	_	_	_	
317-6	43050-43052	is	_	_	_	_	
317-7	43053-43055	to	_	_	_	_	
317-8	43056-43064	compress	_	_	_	_	
317-9	43065-43073	archived	_	_	_	_	
317-10	43074-43077	WAL	_	_	_	_	
317-11	43078-43082	data	_	_	_	_	
317-12	43083-43085	by	_	_	_	_	
317-13	43086-43094	removing	_	_	_	_	
317-14	43095-43106	unnecessary	_	_	_	_	
317-15	43107-43111	page	_	_	_	_	
317-16	43112-43118	copies	_	_	_	_	
317-17	43119-43123	even	_	_	_	_	
317-18	43124-43128	when	_	_	_	_	
317-19	43129-43145	full_page_writes	*	parameter	_	_	
317-20	43146-43148	is	_	_	_	_	
317-21	43149-43151	on	*	value	Associated-With	317-19	
317-22	43151-43152	.	_	_	_	_	

#Text=In the meantime, administrators might wish to reduce the number of page snapshots included in WAL by increasing the checkpoint interval parameters as much as feasible.
318-1	43153-43155	In	_	_	_	_	
318-2	43156-43159	the	_	_	_	_	
318-3	43160-43168	meantime	_	_	_	_	
318-4	43168-43169	,	_	_	_	_	
318-5	43170-43184	administrators	_	_	_	_	
318-6	43185-43190	might	_	_	_	_	
318-7	43191-43195	wish	_	_	_	_	
318-8	43196-43198	to	_	_	_	_	
318-9	43199-43205	reduce	_	_	_	_	
318-10	43206-43209	the	_	_	_	_	
318-11	43210-43216	number	_	_	_	_	
318-12	43217-43219	of	_	_	_	_	
318-13	43220-43224	page	_	_	_	_	
318-14	43225-43234	snapshots	_	_	_	_	
318-15	43235-43243	included	_	_	_	_	
318-16	43244-43246	in	_	_	_	_	
318-17	43247-43250	WAL	_	_	_	_	
318-18	43251-43253	by	_	_	_	_	
318-19	43254-43264	increasing	_	_	_	_	
318-20	43265-43268	the	_	_	_	_	
318-21	43269-43279	checkpoint	_	_	_	_	
318-22	43280-43288	interval	_	_	_	_	
318-23	43289-43299	parameters	_	_	_	_	
318-24	43300-43302	as	_	_	_	_	
318-25	43303-43307	much	_	_	_	_	
318-26	43308-43310	as	_	_	_	_	
318-27	43311-43319	feasible	_	_	_	_	
318-28	43319-43320	.	_	_	_	_	

#Text=Prev
#Text=Next
#Text=25.2. 
319-1	43321-43325	Prev	_	_	_	_	
319-2	43326-43330	Next	_	_	_	_	
319-3	43331-43335	25.2	_	_	_	_	
319-4	43335-43336	.	_	_	_	_	
319-5	43336-43337	 	_	_	_	_	

#Text=File System Level Backup
#Text=Home
#Text=Chapter 26. 
320-1	43337-43341	File	_	_	_	_	
320-2	43342-43348	System	_	_	_	_	
320-3	43349-43354	Level	_	_	_	_	
320-4	43355-43361	Backup	_	_	_	_	
320-5	43362-43366	Home	_	_	_	_	
320-6	43367-43374	Chapter	_	_	_	_	
320-7	43374-43375	 	_	_	_	_	
320-8	43375-43377	26	_	_	_	_	
320-9	43377-43378	.	_	_	_	_	
320-10	43378-43379	 	_	_	_	_	

#Text=High Availability, Load Balancing, and Replication
#Text=Submit correction
#Text=If you see anything in the documentation that is not correct, does not match
#Text=your experience with the particular feature or requires further clarification,
#Text=please use
#Text=this form
#Text=to report a documentation issue.
321-1	43379-43383	High	_	_	_	_	
321-2	43384-43396	Availability	_	_	_	_	
321-3	43396-43397	,	_	_	_	_	
321-4	43398-43402	Load	_	_	_	_	
321-5	43403-43412	Balancing	_	_	_	_	
321-6	43412-43413	,	_	_	_	_	
321-7	43414-43417	and	_	_	_	_	
321-8	43418-43429	Replication	_	_	_	_	
321-9	43430-43436	Submit	_	_	_	_	
321-10	43437-43447	correction	_	_	_	_	
321-11	43448-43450	If	_	_	_	_	
321-12	43451-43454	you	_	_	_	_	
321-13	43455-43458	see	_	_	_	_	
321-14	43459-43467	anything	_	_	_	_	
321-15	43468-43470	in	_	_	_	_	
321-16	43471-43474	the	_	_	_	_	
321-17	43475-43488	documentation	_	_	_	_	
321-18	43489-43493	that	_	_	_	_	
321-19	43494-43496	is	_	_	_	_	
321-20	43497-43500	not	_	_	_	_	
321-21	43501-43508	correct	_	_	_	_	
321-22	43508-43509	,	_	_	_	_	
321-23	43510-43514	does	_	_	_	_	
321-24	43515-43518	not	_	_	_	_	
321-25	43519-43524	match	_	_	_	_	
321-26	43525-43529	your	_	_	_	_	
321-27	43530-43540	experience	_	_	_	_	
321-28	43541-43545	with	_	_	_	_	
321-29	43546-43549	the	_	_	_	_	
321-30	43550-43560	particular	_	_	_	_	
321-31	43561-43568	feature	_	_	_	_	
321-32	43569-43571	or	_	_	_	_	
321-33	43572-43580	requires	_	_	_	_	
321-34	43581-43588	further	_	_	_	_	
321-35	43589-43602	clarification	_	_	_	_	
321-36	43602-43603	,	_	_	_	_	
321-37	43604-43610	please	_	_	_	_	
321-38	43611-43614	use	_	_	_	_	
321-39	43615-43619	this	_	_	_	_	
321-40	43620-43624	form	_	_	_	_	
321-41	43625-43627	to	_	_	_	_	
321-42	43628-43634	report	_	_	_	_	
321-43	43635-43636	a	_	_	_	_	
321-44	43637-43650	documentation	_	_	_	_	
321-45	43651-43656	issue	_	_	_	_	
321-46	43656-43657	.	_	_	_	_	

#Text=Privacy Policy |
#Text=Code of Conduct |
#Text=About PostgreSQL |
#Text=Contact
#Text=Copyright © 1996-2021 The PostgreSQL Global Development Group
322-1	43658-43665	Privacy	_	_	_	_	
322-2	43666-43672	Policy	_	_	_	_	
322-3	43673-43674	|	_	_	_	_	
322-4	43675-43679	Code	_	_	_	_	
322-5	43680-43682	of	_	_	_	_	
322-6	43683-43690	Conduct	_	_	_	_	
322-7	43691-43692	|	_	_	_	_	
322-8	43693-43698	About	_	_	_	_	
322-9	43699-43709	PostgreSQL	_	_	_	_	
322-10	43710-43711	|	_	_	_	_	
322-11	43712-43719	Contact	_	_	_	_	
322-12	43720-43729	Copyright	_	_	_	_	
322-13	43730-43731	©	_	_	_	_	
322-14	43732-43736	1996	_	_	_	_	
322-15	43736-43737	-	_	_	_	_	
322-16	43737-43741	2021	_	_	_	_	
322-17	43742-43745	The	_	_	_	_	
322-18	43746-43756	PostgreSQL	_	_	_	_	
322-19	43757-43763	Global	_	_	_	_	
322-20	43764-43775	Development	_	_	_	_	
322-21	43776-43781	Group	_	_	_	_	
