#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value
#T_RL=webanno.custom.Relation|relation|BT_de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity


#Text=JSONB PostgreSQL: How to Store & Index JSON Data in Postgres
#Text=Toggle navigation
#Text=Products
#Text=Managed MySQL
#Text=Overview
#Text=AWS
#Text=Azure
#Text=DigitalOcean
#Text=Google Cloud
#Text=Managed PostgreSQL
#Text=Overview
#Text=AWS
#Text=Azure
#Text=DigitalOcean
#Text=Google Cloud
#Text=Managed Redis™
#Text=Overview
#Text=AWS
#Text=Azure
#Text=DigitalOcean
#Text=Google Cloud
#Text=Managed MongoDB®
#Text=Overview
#Text=AWS
#Text=Azure
#Text=DigitalOcean
#Text=Private/On-Prem
#Text=Pricing
#Text=Enterprise
#Text=Blog
#Text=Login
#Text=Sign Up
#Text=Using JSONB in PostgreSQL: How to Effectively Store & Index JSON Data in PostgreSQL
#Text=Posted:
#Text=July 17, 2020
#Text=+1 Tweet Share Share PinShares 0JSON stands for JavaScript Object Notation.
1-1	0-5	JSONB	_	_	_	_	
1-2	6-16	PostgreSQL	_	_	_	_	
1-3	16-17	:	_	_	_	_	
1-4	18-21	How	_	_	_	_	
1-5	22-24	to	_	_	_	_	
1-6	25-30	Store	_	_	_	_	
1-7	31-32	&	_	_	_	_	
1-8	33-38	Index	_	_	_	_	
1-9	39-43	JSON	_	_	_	_	
1-10	44-48	Data	_	_	_	_	
1-11	49-51	in	_	_	_	_	
1-12	52-60	Postgres	_	_	_	_	
1-13	61-67	Toggle	_	_	_	_	
1-14	68-78	navigation	_	_	_	_	
1-15	79-87	Products	_	_	_	_	
1-16	88-95	Managed	_	_	_	_	
1-17	96-101	MySQL	_	_	_	_	
1-18	102-110	Overview	_	_	_	_	
1-19	111-114	AWS	_	_	_	_	
1-20	115-120	Azure	_	_	_	_	
1-21	121-133	DigitalOcean	_	_	_	_	
1-22	134-140	Google	_	_	_	_	
1-23	141-146	Cloud	_	_	_	_	
1-24	147-154	Managed	_	_	_	_	
1-25	155-165	PostgreSQL	_	_	_	_	
1-26	166-174	Overview	_	_	_	_	
1-27	175-178	AWS	_	_	_	_	
1-28	179-184	Azure	_	_	_	_	
1-29	185-197	DigitalOcean	_	_	_	_	
1-30	198-204	Google	_	_	_	_	
1-31	205-210	Cloud	_	_	_	_	
1-32	211-218	Managed	_	_	_	_	
1-33	219-224	Redis	_	_	_	_	
1-34	224-225	™	_	_	_	_	
1-35	226-234	Overview	_	_	_	_	
1-36	235-238	AWS	_	_	_	_	
1-37	239-244	Azure	_	_	_	_	
1-38	245-257	DigitalOcean	_	_	_	_	
1-39	258-264	Google	_	_	_	_	
1-40	265-270	Cloud	_	_	_	_	
1-41	271-278	Managed	_	_	_	_	
1-42	279-286	MongoDB	_	_	_	_	
1-43	286-287	®	_	_	_	_	
1-44	288-296	Overview	_	_	_	_	
1-45	297-300	AWS	_	_	_	_	
1-46	301-306	Azure	_	_	_	_	
1-47	307-319	DigitalOcean	_	_	_	_	
1-48	320-327	Private	_	_	_	_	
1-49	327-328	/	_	_	_	_	
1-50	328-335	On-Prem	_	_	_	_	
1-51	336-343	Pricing	_	_	_	_	
1-52	344-354	Enterprise	_	_	_	_	
1-53	355-359	Blog	_	_	_	_	
1-54	360-365	Login	_	_	_	_	
1-55	366-370	Sign	_	_	_	_	
1-56	371-373	Up	_	_	_	_	
1-57	374-379	Using	_	_	_	_	
1-58	380-385	JSONB	_	_	_	_	
1-59	386-388	in	_	_	_	_	
1-60	389-399	PostgreSQL	_	_	_	_	
1-61	399-400	:	_	_	_	_	
1-62	401-404	How	_	_	_	_	
1-63	405-407	to	_	_	_	_	
1-64	408-419	Effectively	_	_	_	_	
1-65	420-425	Store	_	_	_	_	
1-66	426-427	&	_	_	_	_	
1-67	428-433	Index	_	_	_	_	
1-68	434-438	JSON	_	_	_	_	
1-69	439-443	Data	_	_	_	_	
1-70	444-446	in	_	_	_	_	
1-71	447-457	PostgreSQL	_	_	_	_	
1-72	458-464	Posted	_	_	_	_	
1-73	464-465	:	_	_	_	_	
1-74	466-470	July	_	_	_	_	
1-75	471-473	17	_	_	_	_	
1-76	473-474	,	_	_	_	_	
1-77	475-479	2020	_	_	_	_	
1-78	480-481	+	_	_	_	_	
1-79	481-482	1	_	_	_	_	
1-80	483-488	Tweet	_	_	_	_	
1-81	489-494	Share	_	_	_	_	
1-82	495-500	Share	_	_	_	_	
1-83	501-510	PinShares	_	_	_	_	
1-84	511-516	0JSON	_	_	_	_	
1-85	517-523	stands	_	_	_	_	
1-86	524-527	for	_	_	_	_	
1-87	528-538	JavaScript	_	_	_	_	
1-88	539-545	Object	_	_	_	_	
1-89	546-554	Notation	_	_	_	_	
1-90	554-555	.	_	_	_	_	

#Text=It is an open standard format which organizes data into key/value pairs and arrays detailed in RFC 7159.
2-1	556-558	It	_	_	_	_	
2-2	559-561	is	_	_	_	_	
2-3	562-564	an	_	_	_	_	
2-4	565-569	open	_	_	_	_	
2-5	570-578	standard	_	_	_	_	
2-6	579-585	format	_	_	_	_	
2-7	586-591	which	_	_	_	_	
2-8	592-601	organizes	_	_	_	_	
2-9	602-606	data	_	_	_	_	
2-10	607-611	into	_	_	_	_	
2-11	612-615	key	_	_	_	_	
2-12	615-616	/	_	_	_	_	
2-13	616-621	value	_	_	_	_	
2-14	622-627	pairs	_	_	_	_	
2-15	628-631	and	_	_	_	_	
2-16	632-638	arrays	_	_	_	_	
2-17	639-647	detailed	_	_	_	_	
2-18	648-650	in	_	_	_	_	
2-19	651-654	RFC	_	_	_	_	
2-20	655-659	7159	_	_	_	_	
2-21	659-660	.	_	_	_	_	

#Text=JSON is the most common format used by web services to exchange data, store documents, unstructured data, etc.
3-1	661-665	JSON	_	_	_	_	
3-2	666-668	is	_	_	_	_	
3-3	669-672	the	_	_	_	_	
3-4	673-677	most	_	_	_	_	
3-5	678-684	common	_	_	_	_	
3-6	685-691	format	_	_	_	_	
3-7	692-696	used	_	_	_	_	
3-8	697-699	by	_	_	_	_	
3-9	700-703	web	_	_	_	_	
3-10	704-712	services	_	_	_	_	
3-11	713-715	to	_	_	_	_	
3-12	716-724	exchange	_	_	_	_	
3-13	725-729	data	_	_	_	_	
3-14	729-730	,	_	_	_	_	
3-15	731-736	store	_	_	_	_	
3-16	737-746	documents	_	_	_	_	
3-17	746-747	,	_	_	_	_	
3-18	748-760	unstructured	_	_	_	_	
3-19	761-765	data	_	_	_	_	
3-20	765-766	,	_	_	_	_	
3-21	767-770	etc	_	_	_	_	
3-22	770-771	.	_	_	_	_	

#Text=In this post, we are going to show you tips and techniques on how to effectively store and index JSON data in PostgreSQL.
4-1	772-774	In	_	_	_	_	
4-2	775-779	this	_	_	_	_	
4-3	780-784	post	_	_	_	_	
4-4	784-785	,	_	_	_	_	
4-5	786-788	we	_	_	_	_	
4-6	789-792	are	_	_	_	_	
4-7	793-798	going	_	_	_	_	
4-8	799-801	to	_	_	_	_	
4-9	802-806	show	_	_	_	_	
4-10	807-810	you	_	_	_	_	
4-11	811-815	tips	_	_	_	_	
4-12	816-819	and	_	_	_	_	
4-13	820-830	techniques	_	_	_	_	
4-14	831-833	on	_	_	_	_	
4-15	834-837	how	_	_	_	_	
4-16	838-840	to	_	_	_	_	
4-17	841-852	effectively	_	_	_	_	
4-18	853-858	store	_	_	_	_	
4-19	859-862	and	_	_	_	_	
4-20	863-868	index	_	_	_	_	
4-21	869-873	JSON	_	_	_	_	
4-22	874-878	data	_	_	_	_	
4-23	879-881	in	_	_	_	_	
4-24	882-892	PostgreSQL	_	_	_	_	
4-25	892-893	.	_	_	_	_	

#Text=You can also check out our Working with JSON Data in PostgreSQL vs.
5-1	894-897	You	_	_	_	_	
5-2	898-901	can	_	_	_	_	
5-3	902-906	also	_	_	_	_	
5-4	907-912	check	_	_	_	_	
5-5	913-916	out	_	_	_	_	
5-6	917-920	our	_	_	_	_	
5-7	921-928	Working	_	_	_	_	
5-8	929-933	with	_	_	_	_	
5-9	934-938	JSON	_	_	_	_	
5-10	939-943	Data	_	_	_	_	
5-11	944-946	in	_	_	_	_	
5-12	947-957	PostgreSQL	_	_	_	_	
5-13	958-960	vs	_	_	_	_	
5-14	960-961	.	_	_	_	_	

#Text=MongoDB webinar in partnership with PostgresConf to learn more on the topic, and check out our SlideShare page to download the slides.
6-1	962-969	MongoDB	_	_	_	_	
6-2	970-977	webinar	_	_	_	_	
6-3	978-980	in	_	_	_	_	
6-4	981-992	partnership	_	_	_	_	
6-5	993-997	with	_	_	_	_	
6-6	998-1010	PostgresConf	_	_	_	_	
6-7	1011-1013	to	_	_	_	_	
6-8	1014-1019	learn	_	_	_	_	
6-9	1020-1024	more	_	_	_	_	
6-10	1025-1027	on	_	_	_	_	
6-11	1028-1031	the	_	_	_	_	
6-12	1032-1037	topic	_	_	_	_	
6-13	1037-1038	,	_	_	_	_	
6-14	1039-1042	and	_	_	_	_	
6-15	1043-1048	check	_	_	_	_	
6-16	1049-1052	out	_	_	_	_	
6-17	1053-1056	our	_	_	_	_	
6-18	1057-1067	SlideShare	_	_	_	_	
6-19	1068-1072	page	_	_	_	_	
6-20	1073-1075	to	_	_	_	_	
6-21	1076-1084	download	_	_	_	_	
6-22	1085-1088	the	_	_	_	_	
6-23	1089-1095	slides	_	_	_	_	
6-24	1095-1096	.	_	_	_	_	

#Text=What’s in this article?
7-1	1097-1101	What	_	_	_	_	
7-2	1101-1102	’	_	_	_	_	
7-3	1102-1103	s	_	_	_	_	
7-4	1104-1106	in	_	_	_	_	
7-5	1107-1111	this	_	_	_	_	
7-6	1112-1119	article	_	_	_	_	
7-7	1119-1120	?	_	_	_	_	

#Text=Why Store JSON in PostgreSQL?
8-1	1121-1124	Why	_	_	_	_	
8-2	1125-1130	Store	_	_	_	_	
8-3	1131-1135	JSON	_	_	_	_	
8-4	1136-1138	in	_	_	_	_	
8-5	1139-1149	PostgreSQL	_	_	_	_	
8-6	1149-1150	?	_	_	_	_	

#Text=Timeline of JSON Support in PostgreSQL
#Text=JSONB Patterns & Antipatterns
#Text=JSONB Data Structures
#Text=JSONB Operators & Functions
#Text=JSONB Indexes
#Text=SQL/JSON & JSONPath
#Text=Why Store JSON in PostgreSQL?
9-1	1151-1159	Timeline	_	_	_	_	
9-2	1160-1162	of	_	_	_	_	
9-3	1163-1167	JSON	_	_	_	_	
9-4	1168-1175	Support	_	_	_	_	
9-5	1176-1178	in	_	_	_	_	
9-6	1179-1189	PostgreSQL	_	_	_	_	
9-7	1190-1195	JSONB	_	_	_	_	
9-8	1196-1204	Patterns	_	_	_	_	
9-9	1205-1206	&	_	_	_	_	
9-10	1207-1219	Antipatterns	_	_	_	_	
9-11	1220-1225	JSONB	_	_	_	_	
9-12	1226-1230	Data	_	_	_	_	
9-13	1231-1241	Structures	_	_	_	_	
9-14	1242-1247	JSONB	_	_	_	_	
9-15	1248-1257	Operators	_	_	_	_	
9-16	1258-1259	&	_	_	_	_	
9-17	1260-1269	Functions	_	_	_	_	
9-18	1270-1275	JSONB	_	_	_	_	
9-19	1276-1283	Indexes	_	_	_	_	
9-20	1284-1287	SQL	_	_	_	_	
9-21	1287-1288	/	_	_	_	_	
9-22	1288-1292	JSON	_	_	_	_	
9-23	1293-1294	&	_	_	_	_	
9-24	1295-1303	JSONPath	_	_	_	_	
9-25	1304-1307	Why	_	_	_	_	
9-26	1308-1313	Store	_	_	_	_	
9-27	1314-1318	JSON	_	_	_	_	
9-28	1319-1321	in	_	_	_	_	
9-29	1322-1332	PostgreSQL	_	_	_	_	
9-30	1332-1333	?	_	_	_	_	

#Text=Why should a relational database even care about unstructured data?
10-1	1334-1337	Why	_	_	_	_	
10-2	1338-1344	should	_	_	_	_	
10-3	1345-1346	a	_	_	_	_	
10-4	1347-1357	relational	_	_	_	_	
10-5	1358-1366	database	_	_	_	_	
10-6	1367-1371	even	_	_	_	_	
10-7	1372-1376	care	_	_	_	_	
10-8	1377-1382	about	_	_	_	_	
10-9	1383-1395	unstructured	_	_	_	_	
10-10	1396-1400	data	_	_	_	_	
10-11	1400-1401	?	_	_	_	_	

#Text=It turns out that there are a few scenarios where it is useful.
11-1	1402-1404	It	_	_	_	_	
11-2	1405-1410	turns	_	_	_	_	
11-3	1411-1414	out	_	_	_	_	
11-4	1415-1419	that	_	_	_	_	
11-5	1420-1425	there	_	_	_	_	
11-6	1426-1429	are	_	_	_	_	
11-7	1430-1431	a	_	_	_	_	
11-8	1432-1435	few	_	_	_	_	
11-9	1436-1445	scenarios	_	_	_	_	
11-10	1446-1451	where	_	_	_	_	
11-11	1452-1454	it	_	_	_	_	
11-12	1455-1457	is	_	_	_	_	
11-13	1458-1464	useful	_	_	_	_	
11-14	1464-1465	.	_	_	_	_	

#Text=Schema flexibility
#Text=One of the main reasons to store data using the JSON format is schema flexibility.
12-1	1466-1472	Schema	_	_	_	_	
12-2	1473-1484	flexibility	_	_	_	_	
12-3	1485-1488	One	_	_	_	_	
12-4	1489-1491	of	_	_	_	_	
12-5	1492-1495	the	_	_	_	_	
12-6	1496-1500	main	_	_	_	_	
12-7	1501-1508	reasons	_	_	_	_	
12-8	1509-1511	to	_	_	_	_	
12-9	1512-1517	store	_	_	_	_	
12-10	1518-1522	data	_	_	_	_	
12-11	1523-1528	using	_	_	_	_	
12-12	1529-1532	the	_	_	_	_	
12-13	1533-1537	JSON	_	_	_	_	
12-14	1538-1544	format	_	_	_	_	
12-15	1545-1547	is	_	_	_	_	
12-16	1548-1554	schema	_	_	_	_	
12-17	1555-1566	flexibility	_	_	_	_	
12-18	1566-1567	.	_	_	_	_	

#Text=Storing your data in JSON is useful when your schema is fluid and is changing frequently.
13-1	1568-1575	Storing	_	_	_	_	
13-2	1576-1580	your	_	_	_	_	
13-3	1581-1585	data	_	_	_	_	
13-4	1586-1588	in	_	_	_	_	
13-5	1589-1593	JSON	_	_	_	_	
13-6	1594-1596	is	_	_	_	_	
13-7	1597-1603	useful	_	_	_	_	
13-8	1604-1608	when	_	_	_	_	
13-9	1609-1613	your	_	_	_	_	
13-10	1614-1620	schema	_	_	_	_	
13-11	1621-1623	is	_	_	_	_	
13-12	1624-1629	fluid	_	_	_	_	
13-13	1630-1633	and	_	_	_	_	
13-14	1634-1636	is	_	_	_	_	
13-15	1637-1645	changing	_	_	_	_	
13-16	1646-1656	frequently	_	_	_	_	
13-17	1656-1657	.	_	_	_	_	

#Text=If you store each of the keys as columns, it will result in frequent DML operations – this can be difficult when your data set is large - for example, event tracking, analytics, tags, etc.
14-1	1658-1660	If	_	_	_	_	
14-2	1661-1664	you	_	_	_	_	
14-3	1665-1670	store	_	_	_	_	
14-4	1671-1675	each	_	_	_	_	
14-5	1676-1678	of	_	_	_	_	
14-6	1679-1682	the	_	_	_	_	
14-7	1683-1687	keys	_	_	_	_	
14-8	1688-1690	as	_	_	_	_	
14-9	1691-1698	columns	_	_	_	_	
14-10	1698-1699	,	_	_	_	_	
14-11	1700-1702	it	_	_	_	_	
14-12	1703-1707	will	_	_	_	_	
14-13	1708-1714	result	_	_	_	_	
14-14	1715-1717	in	_	_	_	_	
14-15	1718-1726	frequent	_	_	_	_	
14-16	1727-1730	DML	_	_	_	_	
14-17	1731-1741	operations	_	_	_	_	
14-18	1742-1743	–	_	_	_	_	
14-19	1744-1748	this	_	_	_	_	
14-20	1749-1752	can	_	_	_	_	
14-21	1753-1755	be	_	_	_	_	
14-22	1756-1765	difficult	_	_	_	_	
14-23	1766-1770	when	_	_	_	_	
14-24	1771-1775	your	_	_	_	_	
14-25	1776-1780	data	_	_	_	_	
14-26	1781-1784	set	_	_	_	_	
14-27	1785-1787	is	_	_	_	_	
14-28	1788-1793	large	_	_	_	_	
14-29	1793-1794	 	_	_	_	_	
14-30	1794-1795	-	_	_	_	_	
14-31	1796-1799	for	_	_	_	_	
14-32	1800-1807	example	_	_	_	_	
14-33	1807-1808	,	_	_	_	_	
14-34	1809-1814	event	_	_	_	_	
14-35	1815-1823	tracking	_	_	_	_	
14-36	1823-1824	,	_	_	_	_	
14-37	1825-1834	analytics	_	_	_	_	
14-38	1834-1835	,	_	_	_	_	
14-39	1836-1840	tags	_	_	_	_	
14-40	1840-1841	,	_	_	_	_	
14-41	1842-1845	etc	_	_	_	_	
14-42	1845-1846	.	_	_	_	_	

#Text=Note: If a particular key is always present in your document, it might make sense to store it as a first class column.
15-1	1847-1851	Note	_	_	_	_	
15-2	1851-1852	:	_	_	_	_	
15-3	1853-1855	If	_	_	_	_	
15-4	1856-1857	a	_	_	_	_	
15-5	1858-1868	particular	_	_	_	_	
15-6	1869-1872	key	_	_	_	_	
15-7	1873-1875	is	_	_	_	_	
15-8	1876-1882	always	_	_	_	_	
15-9	1883-1890	present	_	_	_	_	
15-10	1891-1893	in	_	_	_	_	
15-11	1894-1898	your	_	_	_	_	
15-12	1899-1907	document	_	_	_	_	
15-13	1907-1908	,	_	_	_	_	
15-14	1909-1911	it	_	_	_	_	
15-15	1912-1917	might	_	_	_	_	
15-16	1918-1922	make	_	_	_	_	
15-17	1923-1928	sense	_	_	_	_	
15-18	1929-1931	to	_	_	_	_	
15-19	1932-1937	store	_	_	_	_	
15-20	1938-1940	it	_	_	_	_	
15-21	1941-1943	as	_	_	_	_	
15-22	1944-1945	a	_	_	_	_	
15-23	1946-1951	first	_	_	_	_	
15-24	1952-1957	class	_	_	_	_	
15-25	1958-1964	column	_	_	_	_	
15-26	1964-1965	.	_	_	_	_	

#Text=We discuss more about this approach in section “JSON Patterns & Antipatterns” below.
16-1	1966-1968	We	_	_	_	_	
16-2	1969-1976	discuss	_	_	_	_	
16-3	1977-1981	more	_	_	_	_	
16-4	1982-1987	about	_	_	_	_	
16-5	1988-1992	this	_	_	_	_	
16-6	1993-2001	approach	_	_	_	_	
16-7	2002-2004	in	_	_	_	_	
16-8	2005-2012	section	_	_	_	_	
16-9	2013-2014	“	_	_	_	_	
16-10	2014-2018	JSON	_	_	_	_	
16-11	2019-2027	Patterns	_	_	_	_	
16-12	2028-2029	&	_	_	_	_	
16-13	2030-2042	Antipatterns	_	_	_	_	
16-14	2042-2043	”	_	_	_	_	
16-15	2044-2049	below	_	_	_	_	
16-16	2049-2050	.	_	_	_	_	

#Text=Nested objects
#Text=If your data set has nested objects (single or multi-level), in some cases, it is easier to handle them in JSON instead of denormalizing the data into columns or multiple tables.
17-1	2051-2057	Nested	_	_	_	_	
17-2	2058-2065	objects	_	_	_	_	
17-3	2066-2068	If	_	_	_	_	
17-4	2069-2073	your	_	_	_	_	
17-5	2074-2078	data	_	_	_	_	
17-6	2079-2082	set	_	_	_	_	
17-7	2083-2086	has	_	_	_	_	
17-8	2087-2093	nested	_	_	_	_	
17-9	2094-2101	objects	_	_	_	_	
17-10	2102-2103	(	_	_	_	_	
17-11	2103-2109	single	_	_	_	_	
17-12	2110-2112	or	_	_	_	_	
17-13	2113-2124	multi-level	_	_	_	_	
17-14	2124-2125	)	_	_	_	_	
17-15	2125-2126	,	_	_	_	_	
17-16	2127-2129	in	_	_	_	_	
17-17	2130-2134	some	_	_	_	_	
17-18	2135-2140	cases	_	_	_	_	
17-19	2140-2141	,	_	_	_	_	
17-20	2142-2144	it	_	_	_	_	
17-21	2145-2147	is	_	_	_	_	
17-22	2148-2154	easier	_	_	_	_	
17-23	2155-2157	to	_	_	_	_	
17-24	2158-2164	handle	_	_	_	_	
17-25	2165-2169	them	_	_	_	_	
17-26	2170-2172	in	_	_	_	_	
17-27	2173-2177	JSON	_	_	_	_	
17-28	2178-2185	instead	_	_	_	_	
17-29	2186-2188	of	_	_	_	_	
17-30	2189-2202	denormalizing	_	_	_	_	
17-31	2203-2206	the	_	_	_	_	
17-32	2207-2211	data	_	_	_	_	
17-33	2212-2216	into	_	_	_	_	
17-34	2217-2224	columns	_	_	_	_	
17-35	2225-2227	or	_	_	_	_	
17-36	2228-2236	multiple	_	_	_	_	
17-37	2237-2243	tables	_	_	_	_	
17-38	2243-2244	.	_	_	_	_	

#Text=Syncing with external data sources
#Text=Often times an external system is providing data as JSON, so it might be a temporary store before data is ingested into other parts of the system. 
18-1	2245-2252	Syncing	_	_	_	_	
18-2	2253-2257	with	_	_	_	_	
18-3	2258-2266	external	_	_	_	_	
18-4	2267-2271	data	_	_	_	_	
18-5	2272-2279	sources	_	_	_	_	
18-6	2280-2285	Often	_	_	_	_	
18-7	2286-2291	times	_	_	_	_	
18-8	2292-2294	an	_	_	_	_	
18-9	2295-2303	external	_	_	_	_	
18-10	2304-2310	system	_	_	_	_	
18-11	2311-2313	is	_	_	_	_	
18-12	2314-2323	providing	_	_	_	_	
18-13	2324-2328	data	_	_	_	_	
18-14	2329-2331	as	_	_	_	_	
18-15	2332-2336	JSON	_	_	_	_	
18-16	2336-2337	,	_	_	_	_	
18-17	2338-2340	so	_	_	_	_	
18-18	2341-2343	it	_	_	_	_	
18-19	2344-2349	might	_	_	_	_	
18-20	2350-2352	be	_	_	_	_	
18-21	2353-2354	a	_	_	_	_	
18-22	2355-2364	temporary	_	_	_	_	
18-23	2365-2370	store	_	_	_	_	
18-24	2371-2377	before	_	_	_	_	
18-25	2378-2382	data	_	_	_	_	
18-26	2383-2385	is	_	_	_	_	
18-27	2386-2394	ingested	_	_	_	_	
18-28	2395-2399	into	_	_	_	_	
18-29	2400-2405	other	_	_	_	_	
18-30	2406-2411	parts	_	_	_	_	
18-31	2412-2414	of	_	_	_	_	
18-32	2415-2418	the	_	_	_	_	
18-33	2419-2425	system	_	_	_	_	
18-34	2425-2426	.	_	_	_	_	
18-35	2426-2427	 	_	_	_	_	

#Text=For example, Stripe transactions.
19-1	2427-2430	For	_	_	_	_	
19-2	2431-2438	example	_	_	_	_	
19-3	2438-2439	,	_	_	_	_	
19-4	2440-2446	Stripe	_	_	_	_	
19-5	2447-2459	transactions	_	_	_	_	
19-6	2459-2460	.	_	_	_	_	

#Text=Timeline of JSON Support in PostgreSQL
#Text=JSON support in PostgreSQL was introduced in 9.2 and has steadily improved in every release going forward.
20-1	2461-2469	Timeline	_	_	_	_	
20-2	2470-2472	of	_	_	_	_	
20-3	2473-2477	JSON	_	_	_	_	
20-4	2478-2485	Support	_	_	_	_	
20-5	2486-2488	in	_	_	_	_	
20-6	2489-2499	PostgreSQL	_	_	_	_	
20-7	2500-2504	JSON	_	_	_	_	
20-8	2505-2512	support	_	_	_	_	
20-9	2513-2515	in	_	_	_	_	
20-10	2516-2526	PostgreSQL	_	_	_	_	
20-11	2527-2530	was	_	_	_	_	
20-12	2531-2541	introduced	_	_	_	_	
20-13	2542-2544	in	_	_	_	_	
20-14	2545-2548	9.2	_	_	_	_	
20-15	2549-2552	and	_	_	_	_	
20-16	2553-2556	has	_	_	_	_	
20-17	2557-2565	steadily	_	_	_	_	
20-18	2566-2574	improved	_	_	_	_	
20-19	2575-2577	in	_	_	_	_	
20-20	2578-2583	every	_	_	_	_	
20-21	2584-2591	release	_	_	_	_	
20-22	2592-2597	going	_	_	_	_	
20-23	2598-2605	forward	_	_	_	_	
20-24	2605-2606	.	_	_	_	_	

#Text=Wave 1: PostgreSQL 9.2  (2012) added support for JSON data type
#Text=JSON database in 9.2 was fairly limited (and probably overhyped at that point) – basically a glorified string with some JSON validation thrown in.
21-1	2607-2611	Wave	_	_	_	_	
21-2	2612-2613	1	_	_	_	_	
21-3	2613-2614	:	_	_	_	_	
21-4	2615-2625	PostgreSQL	_	_	_	_	
21-5	2626-2629	9.2	_	_	_	_	
21-6	2629-2630	 	_	_	_	_	
21-7	2631-2632	(	_	_	_	_	
21-8	2632-2636	2012	_	_	_	_	
21-9	2636-2637	)	_	_	_	_	
21-10	2638-2643	added	_	_	_	_	
21-11	2644-2651	support	_	_	_	_	
21-12	2652-2655	for	_	_	_	_	
21-13	2656-2660	JSON	_	_	_	_	
21-14	2661-2665	data	_	_	_	_	
21-15	2666-2670	type	_	_	_	_	
21-16	2671-2675	JSON	_	_	_	_	
21-17	2675-2676	 	_	_	_	_	
21-18	2676-2684	database	_	_	_	_	
21-19	2685-2687	in	_	_	_	_	
21-20	2688-2691	9.2	_	_	_	_	
21-21	2692-2695	was	_	_	_	_	
21-22	2696-2702	fairly	_	_	_	_	
21-23	2703-2710	limited	_	_	_	_	
21-24	2711-2712	(	_	_	_	_	
21-25	2712-2715	and	_	_	_	_	
21-26	2716-2724	probably	_	_	_	_	
21-27	2725-2734	overhyped	_	_	_	_	
21-28	2735-2737	at	_	_	_	_	
21-29	2738-2742	that	_	_	_	_	
21-30	2743-2748	point	_	_	_	_	
21-31	2748-2749	)	_	_	_	_	
21-32	2750-2751	–	_	_	_	_	
21-33	2752-2761	basically	_	_	_	_	
21-34	2762-2763	a	_	_	_	_	
21-35	2764-2773	glorified	_	_	_	_	
21-36	2774-2780	string	_	_	_	_	
21-37	2781-2785	with	_	_	_	_	
21-38	2786-2790	some	_	_	_	_	
21-39	2791-2795	JSON	_	_	_	_	
21-40	2796-2806	validation	_	_	_	_	
21-41	2807-2813	thrown	_	_	_	_	
21-42	2814-2816	in	_	_	_	_	
21-43	2816-2817	.	_	_	_	_	

#Text=It is useful to validate incoming JSON and store in the database.
22-1	2818-2820	It	_	_	_	_	
22-2	2821-2823	is	_	_	_	_	
22-3	2824-2830	useful	_	_	_	_	
22-4	2831-2833	to	_	_	_	_	
22-5	2834-2842	validate	_	_	_	_	
22-6	2843-2851	incoming	_	_	_	_	
22-7	2852-2856	JSON	_	_	_	_	
22-8	2857-2860	and	_	_	_	_	
22-9	2861-2866	store	_	_	_	_	
22-10	2867-2869	in	_	_	_	_	
22-11	2870-2873	the	_	_	_	_	
22-12	2874-2882	database	_	_	_	_	
22-13	2882-2883	.	_	_	_	_	

#Text=More details are provided below.
23-1	2884-2888	More	_	_	_	_	
23-2	2889-2896	details	_	_	_	_	
23-3	2897-2900	are	_	_	_	_	
23-4	2901-2909	provided	_	_	_	_	
23-5	2910-2915	below	_	_	_	_	
23-6	2915-2916	.	_	_	_	_	

#Text=Wave 2: PostgreSQL 9.4 (2014) added support for JSONB data type
#Text=JSONB stands for “JSON Binary” or “JSON better” depending on whom you ask.
24-1	2917-2921	Wave	_	_	_	_	
24-2	2922-2923	2	_	_	_	_	
24-3	2923-2924	:	_	_	_	_	
24-4	2925-2935	PostgreSQL	_	_	_	_	
24-5	2936-2939	9.4	_	_	_	_	
24-6	2940-2941	(	_	_	_	_	
24-7	2941-2945	2014	_	_	_	_	
24-8	2945-2946	)	_	_	_	_	
24-9	2947-2952	added	_	_	_	_	
24-10	2953-2960	support	_	_	_	_	
24-11	2961-2964	for	_	_	_	_	
24-12	2965-2970	JSONB	_	_	_	_	
24-13	2971-2975	data	_	_	_	_	
24-14	2976-2980	type	_	_	_	_	
24-15	2981-2986	JSONB	_	_	_	_	
24-16	2987-2993	stands	_	_	_	_	
24-17	2994-2997	for	_	_	_	_	
24-18	2998-2999	“	_	_	_	_	
24-19	2999-3003	JSON	_	_	_	_	
24-20	3004-3010	Binary	_	_	_	_	
24-21	3010-3011	”	_	_	_	_	
24-22	3012-3014	or	_	_	_	_	
24-23	3015-3016	“	_	_	_	_	
24-24	3016-3020	JSON	_	_	_	_	
24-25	3021-3027	better	_	_	_	_	
24-26	3027-3028	”	_	_	_	_	
24-27	3029-3038	depending	_	_	_	_	
24-28	3039-3041	on	_	_	_	_	
24-29	3042-3046	whom	_	_	_	_	
24-30	3047-3050	you	_	_	_	_	
24-31	3051-3054	ask	_	_	_	_	
24-32	3054-3055	.	_	_	_	_	

#Text=It is a decomposed binary format to store JSON. 
25-1	3056-3058	It	_	_	_	_	
25-2	3059-3061	is	_	_	_	_	
25-3	3062-3063	a	_	_	_	_	
25-4	3064-3074	decomposed	_	_	_	_	
25-5	3075-3081	binary	_	_	_	_	
25-6	3082-3088	format	_	_	_	_	
25-7	3089-3091	to	_	_	_	_	
25-8	3092-3097	store	_	_	_	_	
25-9	3098-3102	JSON	_	_	_	_	
25-10	3102-3103	.	_	_	_	_	
25-11	3103-3104	 	_	_	_	_	

#Text=JSONB supports indexing the JSON data, and is very efficient at parsing and querying the JSON data.
26-1	3104-3109	JSONB	_	_	_	_	
26-2	3110-3118	supports	_	_	_	_	
26-3	3119-3127	indexing	_	_	_	_	
26-4	3128-3131	the	_	_	_	_	
26-5	3132-3136	JSON	_	_	_	_	
26-6	3137-3141	data	_	_	_	_	
26-7	3141-3142	,	_	_	_	_	
26-8	3143-3146	and	_	_	_	_	
26-9	3147-3149	is	_	_	_	_	
26-10	3150-3154	very	_	_	_	_	
26-11	3155-3164	efficient	_	_	_	_	
26-12	3165-3167	at	_	_	_	_	
26-13	3168-3175	parsing	_	_	_	_	
26-14	3176-3179	and	_	_	_	_	
26-15	3180-3188	querying	_	_	_	_	
26-16	3189-3192	the	_	_	_	_	
26-17	3193-3197	JSON	_	_	_	_	
26-18	3198-3202	data	_	_	_	_	
26-19	3202-3203	.	_	_	_	_	

#Text=In most cases, when you work with JSON in PostgreSQL, you should be using JSONB.
27-1	3204-3206	In	_	_	_	_	
27-2	3207-3211	most	_	_	_	_	
27-3	3212-3217	cases	_	_	_	_	
27-4	3217-3218	,	_	_	_	_	
27-5	3219-3223	when	_	_	_	_	
27-6	3224-3227	you	_	_	_	_	
27-7	3228-3232	work	_	_	_	_	
27-8	3233-3237	with	_	_	_	_	
27-9	3238-3242	JSON	_	_	_	_	
27-10	3243-3245	in	_	_	_	_	
27-11	3246-3256	PostgreSQL	_	_	_	_	
27-12	3256-3257	,	_	_	_	_	
27-13	3258-3261	you	_	_	_	_	
27-14	3262-3268	should	_	_	_	_	
27-15	3269-3271	be	_	_	_	_	
27-16	3272-3277	using	_	_	_	_	
27-17	3278-3283	JSONB	_	_	_	_	
27-18	3283-3284	.	_	_	_	_	

#Text=Wave 3: PostgreSQL 12 (2019) added support for SQL/JSON standard and JSONPATH queries
#Text=JSONPath brings a powerful JSON query engine to PostgreSQL.
28-1	3285-3289	Wave	_	_	_	_	
28-2	3290-3291	3	_	_	_	_	
28-3	3291-3292	:	_	_	_	_	
28-4	3293-3303	PostgreSQL	_	_	_	_	
28-5	3304-3306	12	_	_	_	_	
28-6	3307-3308	(	_	_	_	_	
28-7	3308-3312	2019	_	_	_	_	
28-8	3312-3313	)	_	_	_	_	
28-9	3314-3319	added	_	_	_	_	
28-10	3320-3327	support	_	_	_	_	
28-11	3328-3331	for	_	_	_	_	
28-12	3332-3335	SQL	_	_	_	_	
28-13	3335-3336	/	_	_	_	_	
28-14	3336-3340	JSON	_	_	_	_	
28-15	3341-3349	standard	_	_	_	_	
28-16	3350-3353	and	_	_	_	_	
28-17	3354-3362	JSONPATH	_	_	_	_	
28-18	3363-3370	queries	_	_	_	_	
28-19	3371-3379	JSONPath	_	_	_	_	
28-20	3380-3386	brings	_	_	_	_	
28-21	3387-3388	a	_	_	_	_	
28-22	3389-3397	powerful	_	_	_	_	
28-23	3398-3402	JSON	_	_	_	_	
28-24	3403-3408	query	_	_	_	_	
28-25	3409-3415	engine	_	_	_	_	
28-26	3416-3418	to	_	_	_	_	
28-27	3419-3429	PostgreSQL	_	_	_	_	
28-28	3429-3430	.	_	_	_	_	

#Text=When Should You Use JSON vs.
29-1	3431-3435	When	_	_	_	_	
29-2	3436-3442	Should	_	_	_	_	
29-3	3443-3446	You	_	_	_	_	
29-4	3447-3450	Use	_	_	_	_	
29-5	3451-3455	JSON	_	_	_	_	
29-6	3456-3458	vs	_	_	_	_	
29-7	3458-3459	.	_	_	_	_	

#Text=JSONB?
30-1	3460-3465	JSONB	_	_	_	_	
30-2	3465-3466	?	_	_	_	_	

#Text=In most cases, JSONB is what you should be using.
31-1	3467-3469	In	_	_	_	_	
31-2	3470-3474	most	_	_	_	_	
31-3	3475-3480	cases	_	_	_	_	
31-4	3480-3481	,	_	_	_	_	
31-5	3482-3487	JSONB	_	_	_	_	
31-6	3488-3490	is	_	_	_	_	
31-7	3491-3495	what	_	_	_	_	
31-8	3496-3499	you	_	_	_	_	
31-9	3500-3506	should	_	_	_	_	
31-10	3507-3509	be	_	_	_	_	
31-11	3510-3515	using	_	_	_	_	
31-12	3515-3516	.	_	_	_	_	

#Text=However, there are some specific cases where JSON works better:
#Text=JSON preserves the original formatting (a.k.a whitespace) and ordering of the keys.
32-1	3517-3524	However	_	_	_	_	
32-2	3524-3525	,	_	_	_	_	
32-3	3526-3531	there	_	_	_	_	
32-4	3532-3535	are	_	_	_	_	
32-5	3536-3540	some	_	_	_	_	
32-6	3541-3549	specific	_	_	_	_	
32-7	3550-3555	cases	_	_	_	_	
32-8	3556-3561	where	_	_	_	_	
32-9	3562-3566	JSON	_	_	_	_	
32-10	3567-3572	works	_	_	_	_	
32-11	3573-3579	better	_	_	_	_	
32-12	3579-3580	:	_	_	_	_	
32-13	3581-3585	JSON	_	_	_	_	
32-14	3586-3595	preserves	_	_	_	_	
32-15	3596-3599	the	_	_	_	_	
32-16	3600-3608	original	_	_	_	_	
32-17	3609-3619	formatting	_	_	_	_	
32-18	3620-3621	(	_	_	_	_	
32-19	3621-3626	a.k.a	_	_	_	_	
32-20	3627-3637	whitespace	_	_	_	_	
32-21	3637-3638	)	_	_	_	_	
32-22	3639-3642	and	_	_	_	_	
32-23	3643-3651	ordering	_	_	_	_	
32-24	3652-3654	of	_	_	_	_	
32-25	3655-3658	the	_	_	_	_	
32-26	3659-3663	keys	_	_	_	_	
32-27	3663-3664	.	_	_	_	_	

#Text=JSON preserves duplicate keys.
33-1	3665-3669	JSON	_	_	_	_	
33-2	3670-3679	preserves	_	_	_	_	
33-3	3680-3689	duplicate	_	_	_	_	
33-4	3690-3694	keys	_	_	_	_	
33-5	3694-3695	.	_	_	_	_	

#Text=JSON is faster to ingest vs.
34-1	3696-3700	JSON	_	_	_	_	
34-2	3701-3703	is	_	_	_	_	
34-3	3704-3710	faster	_	_	_	_	
34-4	3711-3713	to	_	_	_	_	
34-5	3714-3720	ingest	_	_	_	_	
34-6	3721-3723	vs	_	_	_	_	
34-7	3723-3724	.	_	_	_	_	

#Text=JSONB – however, if you do any further processing, JSONB will be faster.
35-1	3725-3730	JSONB	_	_	_	_	
35-2	3731-3732	–	_	_	_	_	
35-3	3733-3740	however	_	_	_	_	
35-4	3740-3741	,	_	_	_	_	
35-5	3742-3744	if	_	_	_	_	
35-6	3745-3748	you	_	_	_	_	
35-7	3749-3751	do	_	_	_	_	
35-8	3752-3755	any	_	_	_	_	
35-9	3756-3763	further	_	_	_	_	
35-10	3764-3774	processing	_	_	_	_	
35-11	3774-3775	,	_	_	_	_	
35-12	3776-3781	JSONB	_	_	_	_	
35-13	3782-3786	will	_	_	_	_	
35-14	3787-3789	be	_	_	_	_	
35-15	3790-3796	faster	_	_	_	_	
35-16	3796-3797	.	_	_	_	_	

#Text=For example, if you’re just ingesting JSON logs and not querying them in any way, then JSON might be a better option for you.
36-1	3798-3801	For	_	_	_	_	
36-2	3802-3809	example	_	_	_	_	
36-3	3809-3810	,	_	_	_	_	
36-4	3811-3813	if	_	_	_	_	
36-5	3814-3817	you	_	_	_	_	
36-6	3817-3818	’	_	_	_	_	
36-7	3818-3820	re	_	_	_	_	
36-8	3821-3825	just	_	_	_	_	
36-9	3826-3835	ingesting	_	_	_	_	
36-10	3836-3840	JSON	_	_	_	_	
36-11	3841-3845	logs	_	_	_	_	
36-12	3846-3849	and	_	_	_	_	
36-13	3850-3853	not	_	_	_	_	
36-14	3854-3862	querying	_	_	_	_	
36-15	3863-3867	them	_	_	_	_	
36-16	3868-3870	in	_	_	_	_	
36-17	3871-3874	any	_	_	_	_	
36-18	3875-3878	way	_	_	_	_	
36-19	3878-3879	,	_	_	_	_	
36-20	3880-3884	then	_	_	_	_	
36-21	3885-3889	JSON	_	_	_	_	
36-22	3890-3895	might	_	_	_	_	
36-23	3896-3898	be	_	_	_	_	
36-24	3899-3900	a	_	_	_	_	
36-25	3901-3907	better	_	_	_	_	
36-26	3908-3914	option	_	_	_	_	
36-27	3915-3918	for	_	_	_	_	
36-28	3919-3922	you	_	_	_	_	
36-29	3922-3923	.	_	_	_	_	

#Text=For the purposes of this blog, when we refer to JSON support in PostgreSQL, we will refer to JSONB going forward.
37-1	3924-3927	For	_	_	_	_	
37-2	3928-3931	the	_	_	_	_	
37-3	3932-3940	purposes	_	_	_	_	
37-4	3941-3943	of	_	_	_	_	
37-5	3944-3948	this	_	_	_	_	
37-6	3949-3953	blog	_	_	_	_	
37-7	3953-3954	,	_	_	_	_	
37-8	3955-3959	when	_	_	_	_	
37-9	3960-3962	we	_	_	_	_	
37-10	3963-3968	refer	_	_	_	_	
37-11	3969-3971	to	_	_	_	_	
37-12	3972-3976	JSON	_	_	_	_	
37-13	3977-3984	support	_	_	_	_	
37-14	3985-3987	in	_	_	_	_	
37-15	3988-3998	PostgreSQL	_	_	_	_	
37-16	3998-3999	,	_	_	_	_	
37-17	4000-4002	we	_	_	_	_	
37-18	4003-4007	will	_	_	_	_	
37-19	4008-4013	refer	_	_	_	_	
37-20	4014-4016	to	_	_	_	_	
37-21	4017-4022	JSONB	_	_	_	_	
37-22	4023-4028	going	_	_	_	_	
37-23	4029-4036	forward	_	_	_	_	
37-24	4036-4037	.	_	_	_	_	

#Text=Using JSONB in PostgreSQL: How to Effectively Store & Index JSON Data in PostgreSQLClick To Tweet
#Text=JSONB Patterns & Antipatterns
#Text=If PostgreSQL has great support for JSONB, why do we need columns anymore?
38-1	4038-4043	Using	_	_	_	_	
38-2	4044-4049	JSONB	_	_	_	_	
38-3	4050-4052	in	_	_	_	_	
38-4	4053-4063	PostgreSQL	_	_	_	_	
38-5	4063-4064	:	_	_	_	_	
38-6	4065-4068	How	_	_	_	_	
38-7	4069-4071	to	_	_	_	_	
38-8	4072-4083	Effectively	_	_	_	_	
38-9	4084-4089	Store	_	_	_	_	
38-10	4090-4091	&	_	_	_	_	
38-11	4092-4097	Index	_	_	_	_	
38-12	4098-4102	JSON	_	_	_	_	
38-13	4103-4107	Data	_	_	_	_	
38-14	4108-4110	in	_	_	_	_	
38-15	4111-4126	PostgreSQLClick	_	_	_	_	
38-16	4127-4129	To	_	_	_	_	
38-17	4130-4135	Tweet	_	_	_	_	
38-18	4136-4141	JSONB	_	_	_	_	
38-19	4142-4150	Patterns	_	_	_	_	
38-20	4151-4152	&	_	_	_	_	
38-21	4153-4165	Antipatterns	_	_	_	_	
38-22	4166-4168	If	_	_	_	_	
38-23	4169-4179	PostgreSQL	_	_	_	_	
38-24	4180-4183	has	_	_	_	_	
38-25	4184-4189	great	_	_	_	_	
38-26	4190-4197	support	_	_	_	_	
38-27	4198-4201	for	_	_	_	_	
38-28	4202-4207	JSONB	_	_	_	_	
38-29	4207-4208	,	_	_	_	_	
38-30	4209-4212	why	_	_	_	_	
38-31	4213-4215	do	_	_	_	_	
38-32	4216-4218	we	_	_	_	_	
38-33	4219-4223	need	_	_	_	_	
38-34	4224-4231	columns	_	_	_	_	
38-35	4232-4239	anymore	_	_	_	_	
38-36	4239-4240	?	_	_	_	_	

#Text=Why not just create a table with a JSONB blob and get rid of all columns like the schema below:
#Text=CREATE TABLE test(id int, data JSONB, PRIMARY KEY (id));
#Text=At the end of the day, columns are still the most efficient technique to work with your data.
39-1	4241-4244	Why	_	_	_	_	
39-2	4245-4248	not	_	_	_	_	
39-3	4249-4253	just	_	_	_	_	
39-4	4254-4260	create	_	_	_	_	
39-5	4261-4262	a	_	_	_	_	
39-6	4263-4268	table	_	_	_	_	
39-7	4269-4273	with	_	_	_	_	
39-8	4274-4275	a	_	_	_	_	
39-9	4276-4281	JSONB	_	_	_	_	
39-10	4282-4286	blob	_	_	_	_	
39-11	4287-4290	and	_	_	_	_	
39-12	4291-4294	get	_	_	_	_	
39-13	4295-4298	rid	_	_	_	_	
39-14	4299-4301	of	_	_	_	_	
39-15	4302-4305	all	_	_	_	_	
39-16	4306-4313	columns	_	_	_	_	
39-17	4314-4318	like	_	_	_	_	
39-18	4319-4322	the	_	_	_	_	
39-19	4323-4329	schema	_	_	_	_	
39-20	4330-4335	below	_	_	_	_	
39-21	4335-4336	:	_	_	_	_	
39-22	4337-4343	CREATE	_	_	_	_	
39-23	4344-4349	TABLE	_	_	_	_	
39-24	4350-4354	test	_	_	_	_	
39-25	4354-4355	(	_	_	_	_	
39-26	4355-4357	id	_	_	_	_	
39-27	4358-4361	int	_	_	_	_	
39-28	4361-4362	,	_	_	_	_	
39-29	4363-4367	data	_	_	_	_	
39-30	4368-4373	JSONB	_	_	_	_	
39-31	4373-4374	,	_	_	_	_	
39-32	4375-4382	PRIMARY	_	_	_	_	
39-33	4383-4386	KEY	_	_	_	_	
39-34	4387-4388	(	_	_	_	_	
39-35	4388-4390	id	_	_	_	_	
39-36	4390-4391	)	_	_	_	_	
39-37	4391-4392	)	_	_	_	_	
39-38	4392-4393	;	_	_	_	_	
39-39	4394-4396	At	_	_	_	_	
39-40	4397-4400	the	_	_	_	_	
39-41	4401-4404	end	_	_	_	_	
39-42	4405-4407	of	_	_	_	_	
39-43	4408-4411	the	_	_	_	_	
39-44	4412-4415	day	_	_	_	_	
39-45	4415-4416	,	_	_	_	_	
39-46	4417-4424	columns	_	_	_	_	
39-47	4425-4428	are	_	_	_	_	
39-48	4429-4434	still	_	_	_	_	
39-49	4435-4438	the	_	_	_	_	
39-50	4439-4443	most	_	_	_	_	
39-51	4444-4453	efficient	_	_	_	_	
39-52	4454-4463	technique	_	_	_	_	
39-53	4464-4466	to	_	_	_	_	
39-54	4467-4471	work	_	_	_	_	
39-55	4472-4476	with	_	_	_	_	
39-56	4477-4481	your	_	_	_	_	
39-57	4482-4486	data	_	_	_	_	
39-58	4486-4487	.	_	_	_	_	

#Text=JSONB storage has some drawbacks vs. traditional columns:
#Text=PostreSQL does not store column statistics for JSONB columns
#Text=PostgreSQL maintains statistics about the distributions of values in each column of the table - most common values (MCV), NULL entries, histogram of distribution.
40-1	4488-4493	JSONB	_	_	_	_	
40-2	4494-4501	storage	_	_	_	_	
40-3	4502-4505	has	_	_	_	_	
40-4	4506-4510	some	_	_	_	_	
40-5	4511-4520	drawbacks	_	_	_	_	
40-6	4521-4523	vs	_	_	_	_	
40-7	4523-4524	.	_	_	_	_	
40-8	4525-4536	traditional	_	_	_	_	
40-9	4537-4544	columns	_	_	_	_	
40-10	4544-4545	:	_	_	_	_	
40-11	4546-4555	PostreSQL	_	_	_	_	
40-12	4556-4560	does	_	_	_	_	
40-13	4561-4564	not	_	_	_	_	
40-14	4565-4570	store	_	_	_	_	
40-15	4571-4577	column	_	_	_	_	
40-16	4578-4588	statistics	_	_	_	_	
40-17	4589-4592	for	_	_	_	_	
40-18	4593-4598	JSONB	_	_	_	_	
40-19	4599-4606	columns	_	_	_	_	
40-20	4607-4617	PostgreSQL	_	_	_	_	
40-21	4618-4627	maintains	_	_	_	_	
40-22	4628-4638	statistics	_	_	_	_	
40-23	4639-4644	about	_	_	_	_	
40-24	4645-4648	the	_	_	_	_	
40-25	4649-4662	distributions	_	_	_	_	
40-26	4663-4665	of	_	_	_	_	
40-27	4666-4672	values	_	_	_	_	
40-28	4673-4675	in	_	_	_	_	
40-29	4676-4680	each	_	_	_	_	
40-30	4681-4687	column	_	_	_	_	
40-31	4688-4690	of	_	_	_	_	
40-32	4691-4694	the	_	_	_	_	
40-33	4695-4700	table	_	_	_	_	
40-34	4701-4702	-	_	_	_	_	
40-35	4702-4703	 	_	_	_	_	
40-36	4703-4707	most	_	_	_	_	
40-37	4708-4714	common	_	_	_	_	
40-38	4715-4721	values	_	_	_	_	
40-39	4722-4723	(	_	_	_	_	
40-40	4723-4726	MCV	_	_	_	_	
40-41	4726-4727	)	_	_	_	_	
40-42	4727-4728	,	_	_	_	_	
40-43	4729-4733	NULL	_	_	_	_	
40-44	4734-4741	entries	_	_	_	_	
40-45	4741-4742	,	_	_	_	_	
40-46	4743-4752	histogram	_	_	_	_	
40-47	4753-4755	of	_	_	_	_	
40-48	4756-4768	distribution	_	_	_	_	
40-49	4768-4769	.	_	_	_	_	

#Text=Based on this data, the PostgreSQL query planner makes smart decisions on the plan to use for the query.
41-1	4770-4775	Based	_	_	_	_	
41-2	4776-4778	on	_	_	_	_	
41-3	4779-4783	this	_	_	_	_	
41-4	4784-4788	data	_	_	_	_	
41-5	4788-4789	,	_	_	_	_	
41-6	4790-4793	the	_	_	_	_	
41-7	4794-4804	PostgreSQL	_	_	_	_	
41-8	4805-4810	query	_	_	_	_	
41-9	4811-4818	planner	_	_	_	_	
41-10	4819-4824	makes	_	_	_	_	
41-11	4825-4830	smart	_	_	_	_	
41-12	4831-4840	decisions	_	_	_	_	
41-13	4841-4843	on	_	_	_	_	
41-14	4844-4847	the	_	_	_	_	
41-15	4848-4852	plan	_	_	_	_	
41-16	4853-4855	to	_	_	_	_	
41-17	4856-4859	use	_	_	_	_	
41-18	4860-4863	for	_	_	_	_	
41-19	4864-4867	the	_	_	_	_	
41-20	4868-4873	query	_	_	_	_	
41-21	4873-4874	.	_	_	_	_	

#Text=At this point, PostgreSQL does not store any stats for JSONB columns or keys.
42-1	4875-4877	At	_	_	_	_	
42-2	4878-4882	this	_	_	_	_	
42-3	4883-4888	point	_	_	_	_	
42-4	4888-4889	,	_	_	_	_	
42-5	4890-4900	PostgreSQL	_	_	_	_	
42-6	4901-4905	does	_	_	_	_	
42-7	4906-4909	not	_	_	_	_	
42-8	4910-4915	store	_	_	_	_	
42-9	4916-4919	any	_	_	_	_	
42-10	4920-4925	stats	_	_	_	_	
42-11	4926-4929	for	_	_	_	_	
42-12	4930-4935	JSONB	_	_	_	_	
42-13	4936-4943	columns	_	_	_	_	
42-14	4944-4946	or	_	_	_	_	
42-15	4947-4951	keys	_	_	_	_	
42-16	4951-4952	.	_	_	_	_	

#Text=This can sometimes result in poor choices like using nested loop joins vs. hash joins, etc.
43-1	4953-4957	This	_	_	_	_	
43-2	4958-4961	can	_	_	_	_	
43-3	4962-4971	sometimes	_	_	_	_	
43-4	4972-4978	result	_	_	_	_	
43-5	4979-4981	in	_	_	_	_	
43-6	4982-4986	poor	_	_	_	_	
43-7	4987-4994	choices	_	_	_	_	
43-8	4995-4999	like	_	_	_	_	
43-9	5000-5005	using	_	_	_	_	
43-10	5006-5012	nested	_	_	_	_	
43-11	5013-5017	loop	_	_	_	_	
43-12	5018-5023	joins	_	_	_	_	
43-13	5024-5026	vs	_	_	_	_	
43-14	5026-5027	.	_	_	_	_	
43-15	5028-5032	hash	_	_	_	_	
43-16	5033-5038	joins	_	_	_	_	
43-17	5038-5039	,	_	_	_	_	
43-18	5040-5043	etc	_	_	_	_	
43-19	5043-5044	.	_	_	_	_	

#Text=A more detailed example of this is provided in this blog post – When To Avoid JSONB In A PostgreSQL Schema.
44-1	5045-5046	A	_	_	_	_	
44-2	5047-5051	more	_	_	_	_	
44-3	5052-5060	detailed	_	_	_	_	
44-4	5061-5068	example	_	_	_	_	
44-5	5069-5071	of	_	_	_	_	
44-6	5072-5076	this	_	_	_	_	
44-7	5077-5079	is	_	_	_	_	
44-8	5080-5088	provided	_	_	_	_	
44-9	5089-5091	in	_	_	_	_	
44-10	5092-5096	this	_	_	_	_	
44-11	5097-5101	blog	_	_	_	_	
44-12	5102-5106	post	_	_	_	_	
44-13	5107-5108	–	_	_	_	_	
44-14	5109-5113	When	_	_	_	_	
44-15	5114-5116	To	_	_	_	_	
44-16	5117-5122	Avoid	_	_	_	_	
44-17	5123-5128	JSONB	_	_	_	_	
44-18	5129-5131	In	_	_	_	_	
44-19	5132-5133	A	_	_	_	_	
44-20	5134-5144	PostgreSQL	_	_	_	_	
44-21	5145-5151	Schema	_	_	_	_	
44-22	5151-5152	.	_	_	_	_	

#Text=JSONB storage results in a larger storage footprint
#Text=JSONB storage does not deduplicate the key names in the JSON.
45-1	5153-5158	JSONB	_	_	_	_	
45-2	5159-5166	storage	_	_	_	_	
45-3	5167-5174	results	_	_	_	_	
45-4	5175-5177	in	_	_	_	_	
45-5	5178-5179	a	_	_	_	_	
45-6	5180-5186	larger	_	_	_	_	
45-7	5187-5194	storage	_	_	_	_	
45-8	5195-5204	footprint	_	_	_	_	
45-9	5205-5210	JSONB	_	_	_	_	
45-10	5211-5218	storage	_	_	_	_	
45-11	5219-5223	does	_	_	_	_	
45-12	5224-5227	not	_	_	_	_	
45-13	5228-5239	deduplicate	_	_	_	_	
45-14	5240-5243	the	_	_	_	_	
45-15	5244-5247	key	_	_	_	_	
45-16	5248-5253	names	_	_	_	_	
45-17	5254-5256	in	_	_	_	_	
45-18	5257-5260	the	_	_	_	_	
45-19	5261-5265	JSON	_	_	_	_	
45-20	5265-5266	.	_	_	_	_	

#Text=This can result in considerably larger storage footprint compared to MongoDB BSON on WiredTiger or traditional column storage.
46-1	5267-5271	This	_	_	_	_	
46-2	5272-5275	can	_	_	_	_	
46-3	5276-5282	result	_	_	_	_	
46-4	5283-5285	in	_	_	_	_	
46-5	5286-5298	considerably	_	_	_	_	
46-6	5299-5305	larger	_	_	_	_	
46-7	5306-5313	storage	_	_	_	_	
46-8	5314-5323	footprint	_	_	_	_	
46-9	5324-5332	compared	_	_	_	_	
46-10	5333-5335	to	_	_	_	_	
46-11	5336-5343	MongoDB	_	_	_	_	
46-12	5344-5348	BSON	_	_	_	_	
46-13	5349-5351	on	_	_	_	_	
46-14	5352-5362	WiredTiger	_	_	_	_	
46-15	5363-5365	or	_	_	_	_	
46-16	5366-5377	traditional	_	_	_	_	
46-17	5378-5384	column	_	_	_	_	
46-18	5385-5392	storage	_	_	_	_	
46-19	5392-5393	.	_	_	_	_	

#Text=I ran a simple test with the below JSONB model storing about 10 million rows of data, and here are the results – In some ways this is similar to the MongoDB MMAPV1 storage model where the keys in JSONB were stored as-is without any compression.
47-1	5394-5395	I	_	_	_	_	
47-2	5396-5399	ran	_	_	_	_	
47-3	5400-5401	a	_	_	_	_	
47-4	5402-5408	simple	_	_	_	_	
47-5	5409-5413	test	_	_	_	_	
47-6	5414-5418	with	_	_	_	_	
47-7	5419-5422	the	_	_	_	_	
47-8	5423-5428	below	_	_	_	_	
47-9	5429-5434	JSONB	_	_	_	_	
47-10	5435-5440	model	_	_	_	_	
47-11	5441-5448	storing	_	_	_	_	
47-12	5449-5454	about	_	_	_	_	
47-13	5455-5457	10	_	_	_	_	
47-14	5458-5465	million	_	_	_	_	
47-15	5466-5470	rows	_	_	_	_	
47-16	5471-5473	of	_	_	_	_	
47-17	5474-5478	data	_	_	_	_	
47-18	5478-5479	,	_	_	_	_	
47-19	5480-5483	and	_	_	_	_	
47-20	5484-5488	here	_	_	_	_	
47-21	5489-5492	are	_	_	_	_	
47-22	5493-5496	the	_	_	_	_	
47-23	5497-5504	results	_	_	_	_	
47-24	5505-5506	–	_	_	_	_	
47-25	5507-5509	In	_	_	_	_	
47-26	5510-5514	some	_	_	_	_	
47-27	5515-5519	ways	_	_	_	_	
47-28	5520-5524	this	_	_	_	_	
47-29	5525-5527	is	_	_	_	_	
47-30	5528-5535	similar	_	_	_	_	
47-31	5536-5538	to	_	_	_	_	
47-32	5539-5542	the	_	_	_	_	
47-33	5543-5550	MongoDB	_	_	_	_	
47-34	5551-5557	MMAPV1	_	_	_	_	
47-35	5558-5565	storage	_	_	_	_	
47-36	5566-5571	model	_	_	_	_	
47-37	5572-5577	where	_	_	_	_	
47-38	5578-5581	the	_	_	_	_	
47-39	5582-5586	keys	_	_	_	_	
47-40	5587-5589	in	_	_	_	_	
47-41	5590-5595	JSONB	_	_	_	_	
47-42	5596-5600	were	_	_	_	_	
47-43	5601-5607	stored	_	_	_	_	
47-44	5608-5613	as-is	_	_	_	_	
47-45	5614-5621	without	_	_	_	_	
47-46	5622-5625	any	_	_	_	_	
47-47	5626-5637	compression	_	_	_	_	
47-48	5637-5638	.	_	_	_	_	

#Text=One long-term fix is to move the key names to a table level dictionary and refer this dictionary instead of storing the key names repeatedly. 
48-1	5639-5642	One	_	_	_	_	
48-2	5643-5652	long-term	_	_	_	_	
48-3	5653-5656	fix	_	_	_	_	
48-4	5657-5659	is	_	_	_	_	
48-5	5660-5662	to	_	_	_	_	
48-6	5663-5667	move	_	_	_	_	
48-7	5668-5671	the	_	_	_	_	
48-8	5672-5675	key	_	_	_	_	
48-9	5676-5681	names	_	_	_	_	
48-10	5682-5684	to	_	_	_	_	
48-11	5685-5686	a	_	_	_	_	
48-12	5687-5692	table	_	_	_	_	
48-13	5693-5698	level	_	_	_	_	
48-14	5699-5709	dictionary	_	_	_	_	
48-15	5710-5713	and	_	_	_	_	
48-16	5714-5719	refer	_	_	_	_	
48-17	5720-5724	this	_	_	_	_	
48-18	5725-5735	dictionary	_	_	_	_	
48-19	5736-5743	instead	_	_	_	_	
48-20	5744-5746	of	_	_	_	_	
48-21	5747-5754	storing	_	_	_	_	
48-22	5755-5758	the	_	_	_	_	
48-23	5759-5762	key	_	_	_	_	
48-24	5763-5768	names	_	_	_	_	
48-25	5769-5779	repeatedly	_	_	_	_	
48-26	5779-5780	.	_	_	_	_	
48-27	5780-5781	 	_	_	_	_	

#Text=Until then, the workaround might be to use more compact names (unix-style) instead of more descriptive names. 
49-1	5781-5786	Until	_	_	_	_	
49-2	5787-5791	then	_	_	_	_	
49-3	5791-5792	,	_	_	_	_	
49-4	5793-5796	the	_	_	_	_	
49-5	5797-5807	workaround	_	_	_	_	
49-6	5808-5813	might	_	_	_	_	
49-7	5814-5816	be	_	_	_	_	
49-8	5817-5819	to	_	_	_	_	
49-9	5820-5823	use	_	_	_	_	
49-10	5824-5828	more	_	_	_	_	
49-11	5829-5836	compact	_	_	_	_	
49-12	5837-5842	names	_	_	_	_	
49-13	5843-5844	(	_	_	_	_	
49-14	5844-5854	unix-style	_	_	_	_	
49-15	5854-5855	)	_	_	_	_	
49-16	5856-5863	instead	_	_	_	_	
49-17	5864-5866	of	_	_	_	_	
49-18	5867-5871	more	_	_	_	_	
49-19	5872-5883	descriptive	_	_	_	_	
49-20	5884-5889	names	_	_	_	_	
49-21	5889-5890	.	_	_	_	_	
49-22	5890-5891	 	_	_	_	_	

#Text=For example, if you’re storing millions of instances of a particular key, it would be better storage-wise to name it “pb” instead of “publisherName”.
50-1	5891-5894	For	_	_	_	_	
50-2	5895-5902	example	_	_	_	_	
50-3	5902-5903	,	_	_	_	_	
50-4	5903-5904	 	_	_	_	_	
50-5	5904-5906	if	_	_	_	_	
50-6	5907-5910	you	_	_	_	_	
50-7	5910-5911	’	_	_	_	_	
50-8	5911-5913	re	_	_	_	_	
50-9	5914-5921	storing	_	_	_	_	
50-10	5922-5930	millions	_	_	_	_	
50-11	5931-5933	of	_	_	_	_	
50-12	5934-5943	instances	_	_	_	_	
50-13	5944-5946	of	_	_	_	_	
50-14	5947-5948	a	_	_	_	_	
50-15	5949-5959	particular	_	_	_	_	
50-16	5960-5963	key	_	_	_	_	
50-17	5963-5964	,	_	_	_	_	
50-18	5965-5967	it	_	_	_	_	
50-19	5968-5973	would	_	_	_	_	
50-20	5974-5976	be	_	_	_	_	
50-21	5977-5983	better	_	_	_	_	
50-22	5984-5996	storage-wise	_	_	_	_	
50-23	5997-5999	to	_	_	_	_	
50-24	6000-6004	name	_	_	_	_	
50-25	6005-6007	it	_	_	_	_	
50-26	6008-6009	“	_	_	_	_	
50-27	6009-6011	pb	_	_	_	_	
50-28	6011-6012	”	_	_	_	_	
50-29	6013-6020	instead	_	_	_	_	
50-30	6021-6023	of	_	_	_	_	
50-31	6024-6025	“	_	_	_	_	
50-32	6025-6038	publisherName	_	_	_	_	
50-33	6038-6039	”	_	_	_	_	
50-34	6039-6040	.	_	_	_	_	

#Text=The most efficient way to leverage JSONB in PostgreSQL is to combine columns and JSONB.
51-1	6041-6044	The	_	_	_	_	
51-2	6045-6049	most	_	_	_	_	
51-3	6050-6059	efficient	_	_	_	_	
51-4	6060-6063	way	_	_	_	_	
51-5	6064-6066	to	_	_	_	_	
51-6	6067-6075	leverage	_	_	_	_	
51-7	6076-6081	JSONB	_	_	_	_	
51-8	6082-6084	in	_	_	_	_	
51-9	6085-6095	PostgreSQL	_	_	_	_	
51-10	6096-6098	is	_	_	_	_	
51-11	6099-6101	to	_	_	_	_	
51-12	6102-6109	combine	_	_	_	_	
51-13	6110-6117	columns	_	_	_	_	
51-14	6118-6121	and	_	_	_	_	
51-15	6122-6127	JSONB	_	_	_	_	
51-16	6127-6128	.	_	_	_	_	

#Text=If a key appears very frequently in your JSONB blobs, it is probably better off being stored as a column.
52-1	6129-6131	If	_	_	_	_	
52-2	6132-6133	a	_	_	_	_	
52-3	6134-6137	key	_	_	_	_	
52-4	6138-6145	appears	_	_	_	_	
52-5	6145-6146	 	_	_	_	_	
52-6	6146-6150	very	_	_	_	_	
52-7	6151-6161	frequently	_	_	_	_	
52-8	6162-6164	in	_	_	_	_	
52-9	6165-6169	your	_	_	_	_	
52-10	6170-6175	JSONB	_	_	_	_	
52-11	6176-6181	blobs	_	_	_	_	
52-12	6181-6182	,	_	_	_	_	
52-13	6183-6185	it	_	_	_	_	
52-14	6186-6188	is	_	_	_	_	
52-15	6189-6197	probably	_	_	_	_	
52-16	6198-6204	better	_	_	_	_	
52-17	6205-6208	off	_	_	_	_	
52-18	6209-6214	being	_	_	_	_	
52-19	6215-6221	stored	_	_	_	_	
52-20	6222-6224	as	_	_	_	_	
52-21	6225-6226	a	_	_	_	_	
52-22	6227-6233	column	_	_	_	_	
52-23	6233-6234	.	_	_	_	_	

#Text=Use JSONB as a “catch all” to handle the variable parts of your schema while leveraging traditional columns for fields that are more stable.
53-1	6235-6238	Use	_	_	_	_	
53-2	6239-6244	JSONB	_	_	_	_	
53-3	6245-6247	as	_	_	_	_	
53-4	6248-6249	a	_	_	_	_	
53-5	6250-6251	“	_	_	_	_	
53-6	6251-6256	catch	_	_	_	_	
53-7	6257-6260	all	_	_	_	_	
53-8	6260-6261	”	_	_	_	_	
53-9	6262-6264	to	_	_	_	_	
53-10	6265-6271	handle	_	_	_	_	
53-11	6272-6275	the	_	_	_	_	
53-12	6276-6284	variable	_	_	_	_	
53-13	6285-6290	parts	_	_	_	_	
53-14	6291-6293	of	_	_	_	_	
53-15	6294-6298	your	_	_	_	_	
53-16	6299-6305	schema	_	_	_	_	
53-17	6306-6311	while	_	_	_	_	
53-18	6312-6322	leveraging	_	_	_	_	
53-19	6323-6334	traditional	_	_	_	_	
53-20	6335-6342	columns	_	_	_	_	
53-21	6343-6346	for	_	_	_	_	
53-22	6347-6353	fields	_	_	_	_	
53-23	6354-6358	that	_	_	_	_	
53-24	6359-6362	are	_	_	_	_	
53-25	6363-6367	more	_	_	_	_	
53-26	6368-6374	stable	_	_	_	_	
53-27	6374-6375	.	_	_	_	_	

#Text=JSONB Data Structures
#Text=Both JSONB and MongoDB BSON are essentially tree structures, using multi-level nodes to store the parsed JSONB data.
54-1	6376-6381	JSONB	_	_	_	_	
54-2	6382-6386	Data	_	_	_	_	
54-3	6387-6397	Structures	_	_	_	_	
54-4	6398-6402	Both	_	_	_	_	
54-5	6403-6408	JSONB	_	_	_	_	
54-6	6408-6409	 	_	_	_	_	
54-7	6409-6412	and	_	_	_	_	
54-8	6413-6420	MongoDB	_	_	_	_	
54-9	6421-6425	BSON	_	_	_	_	
54-10	6426-6429	are	_	_	_	_	
54-11	6430-6441	essentially	_	_	_	_	
54-12	6442-6446	tree	_	_	_	_	
54-13	6447-6457	structures	_	_	_	_	
54-14	6457-6458	,	_	_	_	_	
54-15	6459-6464	using	_	_	_	_	
54-16	6465-6476	multi-level	_	_	_	_	
54-17	6477-6482	nodes	_	_	_	_	
54-18	6483-6485	to	_	_	_	_	
54-19	6486-6491	store	_	_	_	_	
54-20	6492-6495	the	_	_	_	_	
54-21	6496-6502	parsed	_	_	_	_	
54-22	6503-6508	JSONB	_	_	_	_	
54-23	6509-6513	data	_	_	_	_	
54-24	6513-6514	.	_	_	_	_	

#Text=MongoDB BSON has a very similar structure.
55-1	6515-6522	MongoDB	_	_	_	_	
55-2	6523-6527	BSON	_	_	_	_	
55-3	6528-6531	has	_	_	_	_	
55-4	6532-6533	a	_	_	_	_	
55-5	6534-6538	very	_	_	_	_	
55-6	6539-6546	similar	_	_	_	_	
55-7	6547-6556	structure	_	_	_	_	
55-8	6556-6557	.	_	_	_	_	

#Text=Images source
#Text=JSONB & TOAST
#Text=Another important consideration for storage is how JSONB interacts with TOAST (The Oversize Attribute Storage Technique).
56-1	6558-6564	Images	_	_	_	_	
56-2	6565-6571	source	_	_	_	_	
56-3	6572-6577	JSONB	_	_	_	_	
56-4	6578-6579	&	_	_	_	_	
56-5	6580-6585	TOAST	_	_	_	_	
56-6	6586-6593	Another	_	_	_	_	
56-7	6594-6603	important	_	_	_	_	
56-8	6604-6617	consideration	_	_	_	_	
56-9	6618-6621	for	_	_	_	_	
56-10	6622-6629	storage	_	_	_	_	
56-11	6630-6632	is	_	_	_	_	
56-12	6633-6636	how	_	_	_	_	
56-13	6637-6642	JSONB	_	_	_	_	
56-14	6643-6652	interacts	_	_	_	_	
56-15	6653-6657	with	_	_	_	_	
56-16	6658-6663	TOAST	_	_	_	_	
56-17	6664-6665	(	_	_	_	_	
56-18	6665-6668	The	_	_	_	_	
56-19	6669-6677	Oversize	_	_	_	_	
56-20	6678-6687	Attribute	_	_	_	_	
56-21	6688-6695	Storage	_	_	_	_	
56-22	6696-6705	Technique	_	_	_	_	
56-23	6705-6706	)	_	_	_	_	
56-24	6706-6707	.	_	_	_	_	

#Text=Typically, when the size of your column exceeds the TOAST_TUPLE_THRESHOLD (2kb default), PostgreSQL will attempt to compress the data and fit in 2kb.
57-1	6708-6717	Typically	_	_	_	_	
57-2	6717-6718	,	_	_	_	_	
57-3	6719-6723	when	_	_	_	_	
57-4	6724-6727	the	_	_	_	_	
57-5	6728-6732	size	_	_	_	_	
57-6	6733-6735	of	_	_	_	_	
57-7	6736-6740	your	_	_	_	_	
57-8	6741-6747	column	_	_	_	_	
57-9	6748-6755	exceeds	_	_	_	_	
57-10	6756-6759	the	_	_	_	_	
57-11	6760-6781	TOAST_TUPLE_THRESHOLD	*	parameter	_	_	
57-12	6782-6783	(	_	_	_	_	
57-13	6783-6786	2kb	*	value	Associated-With	57-11	
57-14	6787-6794	default	_	_	_	_	
57-15	6794-6795	)	_	_	_	_	
57-16	6795-6796	,	_	_	_	_	
57-17	6797-6807	PostgreSQL	_	_	_	_	
57-18	6808-6812	will	_	_	_	_	
57-19	6813-6820	attempt	_	_	_	_	
57-20	6821-6823	to	_	_	_	_	
57-21	6824-6832	compress	_	_	_	_	
57-22	6833-6836	the	_	_	_	_	
57-23	6837-6841	data	_	_	_	_	
57-24	6842-6845	and	_	_	_	_	
57-25	6846-6849	fit	_	_	_	_	
57-26	6850-6852	in	_	_	_	_	
57-27	6853-6856	2kb	_	_	_	_	
57-28	6856-6857	.	_	_	_	_	

#Text=If that doesn’t work, the data is moved to out-of-line storage.
58-1	6858-6860	If	_	_	_	_	
58-2	6861-6865	that	_	_	_	_	
58-3	6866-6871	doesn	_	_	_	_	
58-4	6871-6872	’	_	_	_	_	
58-5	6872-6873	t	_	_	_	_	
58-6	6874-6878	work	_	_	_	_	
58-7	6878-6879	,	_	_	_	_	
58-8	6880-6883	the	_	_	_	_	
58-9	6884-6888	data	_	_	_	_	
58-10	6889-6891	is	_	_	_	_	
58-11	6892-6897	moved	_	_	_	_	
58-12	6898-6900	to	_	_	_	_	
58-13	6901-6912	out-of-line	_	_	_	_	
58-14	6913-6920	storage	_	_	_	_	
58-15	6920-6921	.	_	_	_	_	

#Text=This is what they call “TOASTing” the data.
59-1	6922-6926	This	_	_	_	_	
59-2	6927-6929	is	_	_	_	_	
59-3	6930-6934	what	_	_	_	_	
59-4	6934-6935	 	_	_	_	_	
59-5	6935-6939	they	_	_	_	_	
59-6	6940-6944	call	_	_	_	_	
59-7	6945-6946	“	_	_	_	_	
59-8	6946-6954	TOASTing	_	_	_	_	
59-9	6954-6955	”	_	_	_	_	
59-10	6956-6959	the	_	_	_	_	
59-11	6960-6964	data	_	_	_	_	
59-12	6964-6965	.	_	_	_	_	

#Text=When the data is fetched, the reverse process “deTOASTting” needs to happen.
60-1	6966-6970	When	_	_	_	_	
60-2	6971-6974	the	_	_	_	_	
60-3	6975-6979	data	_	_	_	_	
60-4	6980-6982	is	_	_	_	_	
60-5	6983-6990	fetched	_	_	_	_	
60-6	6990-6991	,	_	_	_	_	
60-7	6992-6995	the	_	_	_	_	
60-8	6996-7003	reverse	_	_	_	_	
60-9	7004-7011	process	_	_	_	_	
60-10	7012-7013	“	_	_	_	_	
60-11	7013-7024	deTOASTting	_	_	_	_	
60-12	7024-7025	”	_	_	_	_	
60-13	7026-7031	needs	_	_	_	_	
60-14	7032-7034	to	_	_	_	_	
60-15	7035-7041	happen	_	_	_	_	
60-16	7041-7042	.	_	_	_	_	

#Text=You can also control the TOAST storage strategy:
#Text=Extended – Allows for out-of-line storage and compression (using pglz).
61-1	7043-7046	You	_	_	_	_	
61-2	7047-7050	can	_	_	_	_	
61-3	7051-7055	also	_	_	_	_	
61-4	7056-7063	control	_	_	_	_	
61-5	7064-7067	the	_	_	_	_	
61-6	7068-7073	TOAST	_	_	_	_	
61-7	7074-7081	storage	_	_	_	_	
61-8	7082-7090	strategy	_	_	_	_	
61-9	7090-7091	:	_	_	_	_	
61-10	7092-7100	Extended	_	_	_	_	
61-11	7101-7102	–	_	_	_	_	
61-12	7103-7109	Allows	_	_	_	_	
61-13	7110-7113	for	_	_	_	_	
61-14	7114-7125	out-of-line	_	_	_	_	
61-15	7126-7133	storage	_	_	_	_	
61-16	7134-7137	and	_	_	_	_	
61-17	7138-7149	compression	_	_	_	_	
61-18	7150-7151	(	_	_	_	_	
61-19	7151-7156	using	_	_	_	_	
61-20	7157-7161	pglz	_	_	_	_	
61-21	7161-7162	)	_	_	_	_	
61-22	7162-7163	.	_	_	_	_	

#Text=This is the default option.
62-1	7164-7168	This	_	_	_	_	
62-2	7169-7171	is	_	_	_	_	
62-3	7172-7175	the	_	_	_	_	
62-4	7176-7183	default	_	_	_	_	
62-5	7184-7190	option	_	_	_	_	
62-6	7190-7191	.	_	_	_	_	

#Text=External – Allows for out-of-line storage, but not compression.
63-1	7192-7200	External	_	_	_	_	
63-2	7201-7202	–	_	_	_	_	
63-3	7203-7209	Allows	_	_	_	_	
63-4	7210-7213	for	_	_	_	_	
63-5	7214-7225	out-of-line	_	_	_	_	
63-6	7226-7233	storage	_	_	_	_	
63-7	7233-7234	,	_	_	_	_	
63-8	7235-7238	but	_	_	_	_	
63-9	7239-7242	not	_	_	_	_	
63-10	7243-7254	compression	_	_	_	_	
63-11	7254-7255	.	_	_	_	_	

#Text=If you’re experiencing delays due to the TOAST compression or decompression, one option is to proactively set the column storage to ‘EXTENDED’.
64-1	7256-7258	If	_	_	_	_	
64-2	7259-7262	you	_	_	_	_	
64-3	7262-7263	’	_	_	_	_	
64-4	7263-7265	re	_	_	_	_	
64-5	7266-7278	experiencing	_	_	_	_	
64-6	7279-7285	delays	_	_	_	_	
64-7	7286-7289	due	_	_	_	_	
64-8	7290-7292	to	_	_	_	_	
64-9	7293-7296	the	_	_	_	_	
64-10	7297-7302	TOAST	_	_	_	_	
64-11	7303-7314	compression	_	_	_	_	
64-12	7314-7315	 	_	_	_	_	
64-13	7315-7317	or	_	_	_	_	
64-14	7318-7331	decompression	_	_	_	_	
64-15	7331-7332	,	_	_	_	_	
64-16	7333-7336	one	_	_	_	_	
64-17	7337-7343	option	_	_	_	_	
64-18	7344-7346	is	_	_	_	_	
64-19	7347-7349	to	_	_	_	_	
64-20	7350-7361	proactively	_	_	_	_	
64-21	7362-7365	set	_	_	_	_	
64-22	7366-7369	the	_	_	_	_	
64-23	7370-7376	column	_	_	_	_	
64-24	7377-7384	storage	_	_	_	_	
64-25	7385-7387	to	_	_	_	_	
64-26	7388-7389	‘	_	_	_	_	
64-27	7389-7397	EXTENDED	_	_	_	_	
64-28	7397-7398	’	_	_	_	_	
64-29	7398-7399	.	_	_	_	_	

#Text=For all of the details, please refer to this PostgreSQL doc.
65-1	7400-7403	For	_	_	_	_	
65-2	7404-7407	all	_	_	_	_	
65-3	7408-7410	of	_	_	_	_	
65-4	7411-7414	the	_	_	_	_	
65-5	7415-7422	details	_	_	_	_	
65-6	7422-7423	,	_	_	_	_	
65-7	7424-7430	please	_	_	_	_	
65-8	7431-7436	refer	_	_	_	_	
65-9	7437-7439	to	_	_	_	_	
65-10	7440-7444	this	_	_	_	_	
65-11	7444-7445	 	_	_	_	_	
65-12	7445-7455	PostgreSQL	_	_	_	_	
65-13	7456-7459	doc	_	_	_	_	
65-14	7459-7460	.	_	_	_	_	

#Text=JSONB Operators & Functions
#Text=PostgreSQL provides a variety of operators to work on JSONB.
66-1	7461-7466	JSONB	_	_	_	_	
66-2	7467-7476	Operators	_	_	_	_	
66-3	7477-7478	&	_	_	_	_	
66-4	7479-7488	Functions	_	_	_	_	
66-5	7489-7499	PostgreSQL	_	_	_	_	
66-6	7500-7508	provides	_	_	_	_	
66-7	7509-7510	a	_	_	_	_	
66-8	7511-7518	variety	_	_	_	_	
66-9	7519-7521	of	_	_	_	_	
66-10	7522-7531	operators	_	_	_	_	
66-11	7532-7534	to	_	_	_	_	
66-12	7535-7539	work	_	_	_	_	
66-13	7540-7542	on	_	_	_	_	
66-14	7543-7548	JSONB	_	_	_	_	
66-15	7548-7549	.	_	_	_	_	

#Text=From the docs:
#Text=Operator
#Text=Description
#Text=Get JSON array element (indexed from zero, negative integers count from the end)
#Text=Get JSON object field by key
#Text=->>
#Text=Get JSON array element as text
#Text=->>
#Text=Get JSON object field as text
#Text=Get JSON object at the specified path
#Text=#>>
#Text=Get JSON object at the specified path as text
#Text=Does the left JSON value contain the right JSON path/value entries at the top level?
67-1	7550-7554	From	_	_	_	_	
67-2	7555-7558	the	_	_	_	_	
67-3	7559-7563	docs	_	_	_	_	
67-4	7563-7564	:	_	_	_	_	
67-5	7565-7573	Operator	_	_	_	_	
67-6	7574-7585	Description	_	_	_	_	
67-7	7586-7589	Get	_	_	_	_	
67-8	7590-7594	JSON	_	_	_	_	
67-9	7595-7600	array	_	_	_	_	
67-10	7601-7608	element	_	_	_	_	
67-11	7609-7610	(	_	_	_	_	
67-12	7610-7617	indexed	_	_	_	_	
67-13	7618-7622	from	_	_	_	_	
67-14	7623-7627	zero	_	_	_	_	
67-15	7627-7628	,	_	_	_	_	
67-16	7629-7637	negative	_	_	_	_	
67-17	7638-7646	integers	_	_	_	_	
67-18	7647-7652	count	_	_	_	_	
67-19	7653-7657	from	_	_	_	_	
67-20	7658-7661	the	_	_	_	_	
67-21	7662-7665	end	_	_	_	_	
67-22	7665-7666	)	_	_	_	_	
67-23	7667-7670	Get	_	_	_	_	
67-24	7671-7675	JSON	_	_	_	_	
67-25	7676-7682	object	_	_	_	_	
67-26	7683-7688	field	_	_	_	_	
67-27	7689-7691	by	_	_	_	_	
67-28	7692-7695	key	_	_	_	_	
67-29	7696-7697	-	_	_	_	_	
67-30	7697-7698	>	_	_	_	_	
67-31	7698-7699	>	_	_	_	_	
67-32	7700-7703	Get	_	_	_	_	
67-33	7704-7708	JSON	_	_	_	_	
67-34	7709-7714	array	_	_	_	_	
67-35	7715-7722	element	_	_	_	_	
67-36	7723-7725	as	_	_	_	_	
67-37	7726-7730	text	_	_	_	_	
67-38	7731-7732	-	_	_	_	_	
67-39	7732-7733	>	_	_	_	_	
67-40	7733-7734	>	_	_	_	_	
67-41	7735-7738	Get	_	_	_	_	
67-42	7739-7743	JSON	_	_	_	_	
67-43	7744-7750	object	_	_	_	_	
67-44	7751-7756	field	_	_	_	_	
67-45	7757-7759	as	_	_	_	_	
67-46	7760-7764	text	_	_	_	_	
67-47	7765-7768	Get	_	_	_	_	
67-48	7769-7773	JSON	_	_	_	_	
67-49	7774-7780	object	_	_	_	_	
67-50	7781-7783	at	_	_	_	_	
67-51	7784-7787	the	_	_	_	_	
67-52	7788-7797	specified	_	_	_	_	
67-53	7798-7802	path	_	_	_	_	
67-54	7803-7804	#	_	_	_	_	
67-55	7804-7805	>	_	_	_	_	
67-56	7805-7806	>	_	_	_	_	
67-57	7807-7810	Get	_	_	_	_	
67-58	7811-7815	JSON	_	_	_	_	
67-59	7816-7822	object	_	_	_	_	
67-60	7823-7825	at	_	_	_	_	
67-61	7826-7829	the	_	_	_	_	
67-62	7830-7839	specified	_	_	_	_	
67-63	7840-7844	path	_	_	_	_	
67-64	7845-7847	as	_	_	_	_	
67-65	7848-7852	text	_	_	_	_	
67-66	7853-7857	Does	_	_	_	_	
67-67	7858-7861	the	_	_	_	_	
67-68	7862-7866	left	_	_	_	_	
67-69	7867-7871	JSON	_	_	_	_	
67-70	7872-7877	value	_	_	_	_	
67-71	7878-7885	contain	_	_	_	_	
67-72	7886-7889	the	_	_	_	_	
67-73	7890-7895	right	_	_	_	_	
67-74	7896-7900	JSON	_	_	_	_	
67-75	7901-7905	path	_	_	_	_	
67-76	7905-7906	/	_	_	_	_	
67-77	7906-7911	value	_	_	_	_	
67-78	7912-7919	entries	_	_	_	_	
67-79	7920-7922	at	_	_	_	_	
67-80	7923-7926	the	_	_	_	_	
67-81	7927-7930	top	_	_	_	_	
67-82	7931-7936	level	_	_	_	_	
67-83	7936-7937	?	_	_	_	_	

#Text=Are the left JSON path/value entries contained at the top level within the right JSON value?
68-1	7938-7941	Are	_	_	_	_	
68-2	7942-7945	the	_	_	_	_	
68-3	7946-7950	left	_	_	_	_	
68-4	7951-7955	JSON	_	_	_	_	
68-5	7956-7960	path	_	_	_	_	
68-6	7960-7961	/	_	_	_	_	
68-7	7961-7966	value	_	_	_	_	
68-8	7967-7974	entries	_	_	_	_	
68-9	7975-7984	contained	_	_	_	_	
68-10	7985-7987	at	_	_	_	_	
68-11	7988-7991	the	_	_	_	_	
68-12	7992-7995	top	_	_	_	_	
68-13	7996-8001	level	_	_	_	_	
68-14	8002-8008	within	_	_	_	_	
68-15	8009-8012	the	_	_	_	_	
68-16	8013-8018	right	_	_	_	_	
68-17	8019-8023	JSON	_	_	_	_	
68-18	8024-8029	value	_	_	_	_	
68-19	8029-8030	?	_	_	_	_	

#Text=Does the string exist as a top-level key within the JSON value?
69-1	8031-8035	Does	_	_	_	_	
69-2	8036-8039	the	_	_	_	_	
69-3	8040-8046	string	_	_	_	_	
69-4	8047-8052	exist	_	_	_	_	
69-5	8053-8055	as	_	_	_	_	
69-6	8056-8057	a	_	_	_	_	
69-7	8058-8067	top-level	_	_	_	_	
69-8	8068-8071	key	_	_	_	_	
69-9	8072-8078	within	_	_	_	_	
69-10	8079-8082	the	_	_	_	_	
69-11	8083-8087	JSON	_	_	_	_	
69-12	8088-8093	value	_	_	_	_	
69-13	8093-8094	?	_	_	_	_	

#Text=Do any of these array strings exist as top-level keys?
70-1	8095-8097	Do	_	_	_	_	
70-2	8098-8101	any	_	_	_	_	
70-3	8102-8104	of	_	_	_	_	
70-4	8105-8110	these	_	_	_	_	
70-5	8111-8116	array	_	_	_	_	
70-6	8117-8124	strings	_	_	_	_	
70-7	8125-8130	exist	_	_	_	_	
70-8	8131-8133	as	_	_	_	_	
70-9	8134-8143	top-level	_	_	_	_	
70-10	8144-8148	keys	_	_	_	_	
70-11	8148-8149	?	_	_	_	_	

#Text=Do all of these array strings exist as top-level keys?
71-1	8150-8152	Do	_	_	_	_	
71-2	8153-8156	all	_	_	_	_	
71-3	8157-8159	of	_	_	_	_	
71-4	8160-8165	these	_	_	_	_	
71-5	8166-8171	array	_	_	_	_	
71-6	8172-8179	strings	_	_	_	_	
71-7	8180-8185	exist	_	_	_	_	
71-8	8186-8188	as	_	_	_	_	
71-9	8189-8198	top-level	_	_	_	_	
71-10	8199-8203	keys	_	_	_	_	
71-11	8203-8204	?	_	_	_	_	

#Text=Concatenate two jsonb values into a new jsonb value
#Text=Delete key/value pair or string element from left operand.
72-1	8205-8216	Concatenate	_	_	_	_	
72-2	8217-8220	two	_	_	_	_	
72-3	8221-8226	jsonb	_	_	_	_	
72-4	8227-8233	values	_	_	_	_	
72-5	8234-8238	into	_	_	_	_	
72-6	8239-8240	a	_	_	_	_	
72-7	8241-8244	new	_	_	_	_	
72-8	8245-8250	jsonb	_	_	_	_	
72-9	8251-8256	value	_	_	_	_	
72-10	8257-8263	Delete	_	_	_	_	
72-11	8264-8267	key	_	_	_	_	
72-12	8267-8268	/	_	_	_	_	
72-13	8268-8273	value	_	_	_	_	
72-14	8274-8278	pair	_	_	_	_	
72-15	8279-8281	or	_	_	_	_	
72-16	8282-8288	string	_	_	_	_	
72-17	8289-8296	element	_	_	_	_	
72-18	8297-8301	from	_	_	_	_	
72-19	8302-8306	left	_	_	_	_	
72-20	8307-8314	operand	_	_	_	_	
72-21	8314-8315	.	_	_	_	_	

#Text=Key/value pairs are matched based on their key value.
73-1	8316-8319	Key	_	_	_	_	
73-2	8319-8320	/	_	_	_	_	
73-3	8320-8325	value	_	_	_	_	
73-4	8326-8331	pairs	_	_	_	_	
73-5	8332-8335	are	_	_	_	_	
73-6	8336-8343	matched	_	_	_	_	
73-7	8344-8349	based	_	_	_	_	
73-8	8350-8352	on	_	_	_	_	
73-9	8353-8358	their	_	_	_	_	
73-10	8359-8362	key	_	_	_	_	
73-11	8363-8368	value	_	_	_	_	
73-12	8368-8369	.	_	_	_	_	

#Text=Delete multiple key/value pairs or string elements from left operand.
74-1	8370-8376	Delete	_	_	_	_	
74-2	8377-8385	multiple	_	_	_	_	
74-3	8386-8389	key	_	_	_	_	
74-4	8389-8390	/	_	_	_	_	
74-5	8390-8395	value	_	_	_	_	
74-6	8396-8401	pairs	_	_	_	_	
74-7	8402-8404	or	_	_	_	_	
74-8	8405-8411	string	_	_	_	_	
74-9	8412-8420	elements	_	_	_	_	
74-10	8421-8425	from	_	_	_	_	
74-11	8426-8430	left	_	_	_	_	
74-12	8431-8438	operand	_	_	_	_	
74-13	8438-8439	.	_	_	_	_	

#Text=Key/value pairs are matched based on their key value.
75-1	8440-8443	Key	_	_	_	_	
75-2	8443-8444	/	_	_	_	_	
75-3	8444-8449	value	_	_	_	_	
75-4	8450-8455	pairs	_	_	_	_	
75-5	8456-8459	are	_	_	_	_	
75-6	8460-8467	matched	_	_	_	_	
75-7	8468-8473	based	_	_	_	_	
75-8	8474-8476	on	_	_	_	_	
75-9	8477-8482	their	_	_	_	_	
75-10	8483-8486	key	_	_	_	_	
75-11	8487-8492	value	_	_	_	_	
75-12	8492-8493	.	_	_	_	_	

#Text=Delete the array element with specified index (Negative integers count from the end).
76-1	8494-8500	Delete	_	_	_	_	
76-2	8501-8504	the	_	_	_	_	
76-3	8505-8510	array	_	_	_	_	
76-4	8511-8518	element	_	_	_	_	
76-5	8519-8523	with	_	_	_	_	
76-6	8524-8533	specified	_	_	_	_	
76-7	8534-8539	index	_	_	_	_	
76-8	8540-8541	(	_	_	_	_	
76-9	8541-8549	Negative	_	_	_	_	
76-10	8550-8558	integers	_	_	_	_	
76-11	8559-8564	count	_	_	_	_	
76-12	8565-8569	from	_	_	_	_	
76-13	8570-8573	the	_	_	_	_	
76-14	8574-8577	end	_	_	_	_	
76-15	8577-8578	)	_	_	_	_	
76-16	8578-8579	.	_	_	_	_	

#Text=Throws an error if top level container is not an array.
77-1	8580-8586	Throws	_	_	_	_	
77-2	8587-8589	an	_	_	_	_	
77-3	8590-8595	error	_	_	_	_	
77-4	8596-8598	if	_	_	_	_	
77-5	8599-8602	top	_	_	_	_	
77-6	8603-8608	level	_	_	_	_	
77-7	8609-8618	container	_	_	_	_	
77-8	8619-8621	is	_	_	_	_	
77-9	8622-8625	not	_	_	_	_	
77-10	8626-8628	an	_	_	_	_	
77-11	8629-8634	array	_	_	_	_	
77-12	8634-8635	.	_	_	_	_	

#Text=Delete the field or element with specified path (for JSON arrays, negative integers count from the end)
#Text=Does JSON path return any item for the specified JSON value?
78-1	8636-8642	Delete	_	_	_	_	
78-2	8643-8646	the	_	_	_	_	
78-3	8647-8652	field	_	_	_	_	
78-4	8653-8655	or	_	_	_	_	
78-5	8656-8663	element	_	_	_	_	
78-6	8664-8668	with	_	_	_	_	
78-7	8669-8678	specified	_	_	_	_	
78-8	8679-8683	path	_	_	_	_	
78-9	8684-8685	(	_	_	_	_	
78-10	8685-8688	for	_	_	_	_	
78-11	8689-8693	JSON	_	_	_	_	
78-12	8694-8700	arrays	_	_	_	_	
78-13	8700-8701	,	_	_	_	_	
78-14	8702-8710	negative	_	_	_	_	
78-15	8711-8719	integers	_	_	_	_	
78-16	8720-8725	count	_	_	_	_	
78-17	8726-8730	from	_	_	_	_	
78-18	8731-8734	the	_	_	_	_	
78-19	8735-8738	end	_	_	_	_	
78-20	8738-8739	)	_	_	_	_	
78-21	8740-8744	Does	_	_	_	_	
78-22	8745-8749	JSON	_	_	_	_	
78-23	8750-8754	path	_	_	_	_	
78-24	8755-8761	return	_	_	_	_	
78-25	8762-8765	any	_	_	_	_	
78-26	8766-8770	item	_	_	_	_	
78-27	8771-8774	for	_	_	_	_	
78-28	8775-8778	the	_	_	_	_	
78-29	8779-8788	specified	_	_	_	_	
78-30	8789-8793	JSON	_	_	_	_	
78-31	8794-8799	value	_	_	_	_	
78-32	8799-8800	?	_	_	_	_	

#Text=Returns the result of JSON path predicate check for the specified JSON value.
79-1	8801-8808	Returns	_	_	_	_	
79-2	8809-8812	the	_	_	_	_	
79-3	8813-8819	result	_	_	_	_	
79-4	8820-8822	of	_	_	_	_	
79-5	8823-8827	JSON	_	_	_	_	
79-6	8828-8832	path	_	_	_	_	
79-7	8833-8842	predicate	_	_	_	_	
79-8	8843-8848	check	_	_	_	_	
79-9	8849-8852	for	_	_	_	_	
79-10	8853-8856	the	_	_	_	_	
79-11	8857-8866	specified	_	_	_	_	
79-12	8867-8871	JSON	_	_	_	_	
79-13	8872-8877	value	_	_	_	_	
79-14	8877-8878	.	_	_	_	_	

#Text=Only the first item of the result is taken into account.
80-1	8879-8883	Only	_	_	_	_	
80-2	8884-8887	the	_	_	_	_	
80-3	8888-8893	first	_	_	_	_	
80-4	8894-8898	item	_	_	_	_	
80-5	8899-8901	of	_	_	_	_	
80-6	8902-8905	the	_	_	_	_	
80-7	8906-8912	result	_	_	_	_	
80-8	8913-8915	is	_	_	_	_	
80-9	8916-8921	taken	_	_	_	_	
80-10	8922-8926	into	_	_	_	_	
80-11	8927-8934	account	_	_	_	_	
80-12	8934-8935	.	_	_	_	_	

#Text=If the result is not Boolean, then null is returned.
81-1	8936-8938	If	_	_	_	_	
81-2	8939-8942	the	_	_	_	_	
81-3	8943-8949	result	_	_	_	_	
81-4	8950-8952	is	_	_	_	_	
81-5	8953-8956	not	_	_	_	_	
81-6	8957-8964	Boolean	_	_	_	_	
81-7	8964-8965	,	_	_	_	_	
81-8	8966-8970	then	_	_	_	_	
81-9	8971-8975	null	_	_	_	_	
81-10	8976-8978	is	_	_	_	_	
81-11	8979-8987	returned	_	_	_	_	
81-12	8987-8988	.	_	_	_	_	

#Text=PostgreSQL also provides a variety of Creation Functions and Processing Functions to work with the JSONB data.
82-1	8989-8999	PostgreSQL	_	_	_	_	
82-2	9000-9004	also	_	_	_	_	
82-3	9005-9013	provides	_	_	_	_	
82-4	9014-9015	a	_	_	_	_	
82-5	9016-9023	variety	_	_	_	_	
82-6	9024-9026	of	_	_	_	_	
82-7	9027-9035	Creation	_	_	_	_	
82-8	9036-9045	Functions	_	_	_	_	
82-9	9046-9049	and	_	_	_	_	
82-10	9050-9060	Processing	_	_	_	_	
82-11	9061-9070	Functions	_	_	_	_	
82-12	9071-9073	to	_	_	_	_	
82-13	9074-9078	work	_	_	_	_	
82-14	9079-9083	with	_	_	_	_	
82-15	9084-9087	the	_	_	_	_	
82-16	9088-9093	JSONB	_	_	_	_	
82-17	9094-9098	data	_	_	_	_	
82-18	9098-9099	.	_	_	_	_	

#Text=JSONB Indexes
#Text=JSONB provides a wide array of options to index your JSON data.
83-1	9100-9105	JSONB	_	_	_	_	
83-2	9106-9113	Indexes	_	_	_	_	
83-3	9114-9119	JSONB	_	_	_	_	
83-4	9120-9128	provides	_	_	_	_	
83-5	9129-9130	a	_	_	_	_	
83-6	9131-9135	wide	_	_	_	_	
83-7	9136-9141	array	_	_	_	_	
83-8	9142-9144	of	_	_	_	_	
83-9	9145-9152	options	_	_	_	_	
83-10	9153-9155	to	_	_	_	_	
83-11	9156-9161	index	_	_	_	_	
83-12	9162-9166	your	_	_	_	_	
83-13	9167-9171	JSON	_	_	_	_	
83-14	9172-9176	data	_	_	_	_	
83-15	9176-9177	.	_	_	_	_	

#Text=At a high-level, we are going to dig into 3 different types of indexes – GIN, BTREE and HASH.
84-1	9178-9180	At	_	_	_	_	
84-2	9181-9182	a	_	_	_	_	
84-3	9183-9193	high-level	_	_	_	_	
84-4	9193-9194	,	_	_	_	_	
84-5	9195-9197	we	_	_	_	_	
84-6	9198-9201	are	_	_	_	_	
84-7	9202-9207	going	_	_	_	_	
84-8	9208-9210	to	_	_	_	_	
84-9	9211-9214	dig	_	_	_	_	
84-10	9215-9219	into	_	_	_	_	
84-11	9220-9221	3	_	_	_	_	
84-12	9222-9231	different	_	_	_	_	
84-13	9232-9237	types	_	_	_	_	
84-14	9238-9240	of	_	_	_	_	
84-15	9241-9248	indexes	_	_	_	_	
84-16	9249-9250	–	_	_	_	_	
84-17	9251-9254	GIN	_	_	_	_	
84-18	9254-9255	,	_	_	_	_	
84-19	9256-9261	BTREE	_	_	_	_	
84-20	9261-9262	 	_	_	_	_	
84-21	9262-9265	and	_	_	_	_	
84-22	9266-9270	HASH	_	_	_	_	
84-23	9270-9271	.	_	_	_	_	

#Text=Not all index types support all operator classes, so planning is needed to design your indexes based on the type of operators and queries that you plan on using.
85-1	9272-9275	Not	_	_	_	_	
85-2	9276-9279	all	_	_	_	_	
85-3	9280-9285	index	_	_	_	_	
85-4	9286-9291	types	_	_	_	_	
85-5	9292-9299	support	_	_	_	_	
85-6	9300-9303	all	_	_	_	_	
85-7	9304-9312	operator	_	_	_	_	
85-8	9313-9320	classes	_	_	_	_	
85-9	9320-9321	,	_	_	_	_	
85-10	9322-9324	so	_	_	_	_	
85-11	9325-9333	planning	_	_	_	_	
85-12	9334-9336	is	_	_	_	_	
85-13	9337-9343	needed	_	_	_	_	
85-14	9344-9346	to	_	_	_	_	
85-15	9347-9353	design	_	_	_	_	
85-16	9354-9358	your	_	_	_	_	
85-17	9359-9366	indexes	_	_	_	_	
85-18	9367-9372	based	_	_	_	_	
85-19	9373-9375	on	_	_	_	_	
85-20	9376-9379	the	_	_	_	_	
85-21	9380-9384	type	_	_	_	_	
85-22	9385-9387	of	_	_	_	_	
85-23	9388-9397	operators	_	_	_	_	
85-24	9398-9401	and	_	_	_	_	
85-25	9402-9409	queries	_	_	_	_	
85-26	9410-9414	that	_	_	_	_	
85-27	9415-9418	you	_	_	_	_	
85-28	9419-9423	plan	_	_	_	_	
85-29	9424-9426	on	_	_	_	_	
85-30	9427-9432	using	_	_	_	_	
85-31	9432-9433	.	_	_	_	_	

#Text=GIN Indexes
#Text=GIN stands for “Generalized Inverted indexes”.
86-1	9434-9437	GIN	_	_	_	_	
86-2	9438-9445	Indexes	_	_	_	_	
86-3	9446-9449	GIN	_	_	_	_	
86-4	9450-9456	stands	_	_	_	_	
86-5	9457-9460	for	_	_	_	_	
86-6	9461-9462	“	_	_	_	_	
86-7	9462-9473	Generalized	_	_	_	_	
86-8	9474-9482	Inverted	_	_	_	_	
86-9	9483-9490	indexes	_	_	_	_	
86-10	9490-9491	”	_	_	_	_	
86-11	9491-9492	.	_	_	_	_	

#Text=From the docs:
#Text=“GIN is designed for handling cases where the items to be indexed are composite values, and the queries to be handled by the index need to search for element values that appear within the composite items.
87-1	9493-9497	From	_	_	_	_	
87-2	9498-9501	the	_	_	_	_	
87-3	9502-9506	docs	_	_	_	_	
87-4	9506-9507	:	_	_	_	_	
87-5	9508-9509	“	_	_	_	_	
87-6	9509-9512	GIN	_	_	_	_	
87-7	9513-9515	is	_	_	_	_	
87-8	9516-9524	designed	_	_	_	_	
87-9	9525-9528	for	_	_	_	_	
87-10	9529-9537	handling	_	_	_	_	
87-11	9538-9543	cases	_	_	_	_	
87-12	9544-9549	where	_	_	_	_	
87-13	9550-9553	the	_	_	_	_	
87-14	9554-9559	items	_	_	_	_	
87-15	9560-9562	to	_	_	_	_	
87-16	9563-9565	be	_	_	_	_	
87-17	9566-9573	indexed	_	_	_	_	
87-18	9574-9577	are	_	_	_	_	
87-19	9578-9587	composite	_	_	_	_	
87-20	9588-9594	values	_	_	_	_	
87-21	9594-9595	,	_	_	_	_	
87-22	9596-9599	and	_	_	_	_	
87-23	9600-9603	the	_	_	_	_	
87-24	9604-9611	queries	_	_	_	_	
87-25	9612-9614	to	_	_	_	_	
87-26	9615-9617	be	_	_	_	_	
87-27	9618-9625	handled	_	_	_	_	
87-28	9626-9628	by	_	_	_	_	
87-29	9629-9632	the	_	_	_	_	
87-30	9633-9638	index	_	_	_	_	
87-31	9639-9643	need	_	_	_	_	
87-32	9644-9646	to	_	_	_	_	
87-33	9647-9653	search	_	_	_	_	
87-34	9654-9657	for	_	_	_	_	
87-35	9658-9665	element	_	_	_	_	
87-36	9666-9672	values	_	_	_	_	
87-37	9673-9677	that	_	_	_	_	
87-38	9678-9684	appear	_	_	_	_	
87-39	9685-9691	within	_	_	_	_	
87-40	9692-9695	the	_	_	_	_	
87-41	9696-9705	composite	_	_	_	_	
87-42	9706-9711	items	_	_	_	_	
87-43	9711-9712	.	_	_	_	_	

#Text=For example, the items could be documents, and the queries could be searches for documents containing specific words.”
88-1	9713-9716	For	_	_	_	_	
88-2	9717-9724	example	_	_	_	_	
88-3	9724-9725	,	_	_	_	_	
88-4	9726-9729	the	_	_	_	_	
88-5	9730-9735	items	_	_	_	_	
88-6	9736-9741	could	_	_	_	_	
88-7	9742-9744	be	_	_	_	_	
88-8	9745-9754	documents	_	_	_	_	
88-9	9754-9755	,	_	_	_	_	
88-10	9756-9759	and	_	_	_	_	
88-11	9760-9763	the	_	_	_	_	
88-12	9764-9771	queries	_	_	_	_	
88-13	9772-9777	could	_	_	_	_	
88-14	9778-9780	be	_	_	_	_	
88-15	9781-9789	searches	_	_	_	_	
88-16	9790-9793	for	_	_	_	_	
88-17	9794-9803	documents	_	_	_	_	
88-18	9804-9814	containing	_	_	_	_	
88-19	9815-9823	specific	_	_	_	_	
88-20	9824-9829	words	_	_	_	_	
88-21	9829-9830	.	_	_	_	_	
88-22	9830-9831	”	_	_	_	_	

#Text=GIN supports two operator classes:
#Text=jsonb_ops (default) – ?
89-1	9832-9835	GIN	_	_	_	_	
89-2	9836-9844	supports	_	_	_	_	
89-3	9845-9848	two	_	_	_	_	
89-4	9849-9857	operator	_	_	_	_	
89-5	9858-9865	classes	_	_	_	_	
89-6	9865-9866	:	_	_	_	_	
89-7	9867-9876	jsonb_ops	_	_	_	_	
89-8	9877-9878	(	_	_	_	_	
89-9	9878-9885	default	_	_	_	_	
89-10	9885-9886	)	_	_	_	_	
89-11	9887-9888	–	_	_	_	_	
89-12	9889-9890	?	_	_	_	_	

#Text=, ?
90-1	9890-9891	,	_	_	_	_	
90-2	9892-9893	?	_	_	_	_	

#Text=|, ?
91-1	9893-9894	|	_	_	_	_	
91-2	9894-9895	,	_	_	_	_	
91-3	9896-9897	?	_	_	_	_	

#Text=&, @>, @@, @?
92-1	9897-9898	&	_	_	_	_	
92-2	9898-9899	,	_	_	_	_	
92-3	9900-9901	@	_	_	_	_	
92-4	9901-9902	>	_	_	_	_	
92-5	9902-9903	,	_	_	_	_	
92-6	9904-9905	@	_	_	_	_	
92-7	9905-9906	@	_	_	_	_	
92-8	9906-9907	,	_	_	_	_	
92-9	9908-9909	@	_	_	_	_	
92-10	9909-9910	?	_	_	_	_	

#Text=[Index each key and value in the JSONB element]
#Text=jsonb_pathops – @>, @@, @?
93-1	9911-9912	[	_	_	_	_	
93-2	9912-9917	Index	_	_	_	_	
93-3	9918-9922	each	_	_	_	_	
93-4	9923-9926	key	_	_	_	_	
93-5	9927-9930	and	_	_	_	_	
93-6	9931-9936	value	_	_	_	_	
93-7	9937-9939	in	_	_	_	_	
93-8	9940-9943	the	_	_	_	_	
93-9	9944-9949	JSONB	_	_	_	_	
93-10	9950-9957	element	_	_	_	_	
93-11	9957-9958	]	_	_	_	_	
93-12	9959-9972	jsonb_pathops	_	_	_	_	
93-13	9973-9974	–	_	_	_	_	
93-14	9975-9976	@	_	_	_	_	
93-15	9976-9977	>	_	_	_	_	
93-16	9977-9978	,	_	_	_	_	
93-17	9979-9980	@	_	_	_	_	
93-18	9980-9981	@	_	_	_	_	
93-19	9981-9982	,	_	_	_	_	
93-20	9983-9984	@	_	_	_	_	
93-21	9984-9985	?	_	_	_	_	

#Text=[Index only the values in the JSONB element]
#Text=CREATE INDEX datagin ON books USING gin (data);
#Text=Existence Operators (?
94-1	9986-9987	[	_	_	_	_	
94-2	9987-9992	Index	_	_	_	_	
94-3	9993-9997	only	_	_	_	_	
94-4	9998-10001	the	_	_	_	_	
94-5	10002-10008	values	_	_	_	_	
94-6	10009-10011	in	_	_	_	_	
94-7	10012-10015	the	_	_	_	_	
94-8	10016-10021	JSONB	_	_	_	_	
94-9	10022-10029	element	_	_	_	_	
94-10	10029-10030	]	_	_	_	_	
94-11	10031-10037	CREATE	_	_	_	_	
94-12	10038-10043	INDEX	_	_	_	_	
94-13	10044-10051	datagin	_	_	_	_	
94-14	10052-10054	ON	_	_	_	_	
94-15	10055-10060	books	_	_	_	_	
94-16	10061-10066	USING	_	_	_	_	
94-17	10067-10070	gin	_	_	_	_	
94-18	10071-10072	(	_	_	_	_	
94-19	10072-10076	data	_	_	_	_	
94-20	10076-10077	)	_	_	_	_	
94-21	10077-10078	;	_	_	_	_	
94-22	10079-10088	Existence	_	_	_	_	
94-23	10089-10098	Operators	_	_	_	_	
94-24	10099-10100	(	_	_	_	_	
94-25	10100-10101	?	_	_	_	_	

#Text=, ?
95-1	10101-10102	,	_	_	_	_	
95-2	10103-10104	?	_	_	_	_	

#Text=|, ?
96-1	10104-10105	|	_	_	_	_	
96-2	10105-10106	,	_	_	_	_	
96-3	10107-10108	?	_	_	_	_	

#Text=& )
#Text=These operators can be used to check for the existence of top-level keys in the JSONB.
97-1	10108-10109	&	_	_	_	_	
97-2	10110-10111	)	_	_	_	_	
97-3	10112-10117	These	_	_	_	_	
97-4	10118-10127	operators	_	_	_	_	
97-5	10128-10131	can	_	_	_	_	
97-6	10132-10134	be	_	_	_	_	
97-7	10135-10139	used	_	_	_	_	
97-8	10140-10142	to	_	_	_	_	
97-9	10143-10148	check	_	_	_	_	
97-10	10149-10152	for	_	_	_	_	
97-11	10153-10156	the	_	_	_	_	
97-12	10157-10166	existence	_	_	_	_	
97-13	10167-10169	of	_	_	_	_	
97-14	10170-10179	top-level	_	_	_	_	
97-15	10180-10184	keys	_	_	_	_	
97-16	10185-10187	in	_	_	_	_	
97-17	10188-10191	the	_	_	_	_	
97-18	10192-10197	JSONB	_	_	_	_	
97-19	10197-10198	.	_	_	_	_	

#Text=Let’s create a GIN index on the data JSONB column.
98-1	10199-10202	Let	_	_	_	_	
98-2	10202-10203	’	_	_	_	_	
98-3	10203-10204	s	_	_	_	_	
98-4	10205-10211	create	_	_	_	_	
98-5	10212-10213	a	_	_	_	_	
98-6	10214-10217	GIN	_	_	_	_	
98-7	10218-10223	index	_	_	_	_	
98-8	10224-10226	on	_	_	_	_	
98-9	10227-10230	the	_	_	_	_	
98-10	10231-10235	data	_	_	_	_	
98-11	10236-10241	JSONB	_	_	_	_	
98-12	10242-10248	column	_	_	_	_	
98-13	10248-10249	.	_	_	_	_	

#Text=For example, find all books that are available in braille.
99-1	10250-10253	For	_	_	_	_	
99-2	10254-10261	example	_	_	_	_	
99-3	10261-10262	,	_	_	_	_	
99-4	10263-10267	find	_	_	_	_	
99-5	10268-10271	all	_	_	_	_	
99-6	10272-10277	books	_	_	_	_	
99-7	10278-10282	that	_	_	_	_	
99-8	10283-10286	are	_	_	_	_	
99-9	10287-10296	available	_	_	_	_	
99-10	10297-10299	in	_	_	_	_	
99-11	10300-10307	braille	_	_	_	_	
99-12	10307-10308	.	_	_	_	_	

#Text=The JSON looks something like this:
#Text="{"tags": {"nk594127": {"ik71786": "iv678771"}}, "braille": false, "keywords": ["abc", "kef", "keh"], "hardcover": true, "publisher": "EfgdxUdvB0", "criticrating": 1}
#Text=demo=# select * from books where data ?
100-1	10309-10312	The	_	_	_	_	
100-2	10313-10317	JSON	_	_	_	_	
100-3	10318-10323	looks	_	_	_	_	
100-4	10324-10333	something	_	_	_	_	
100-5	10334-10338	like	_	_	_	_	
100-6	10339-10343	this	_	_	_	_	
100-7	10343-10344	:	_	_	_	_	
100-8	10345-10346	"	_	_	_	_	
100-9	10346-10347	{	_	_	_	_	
100-10	10347-10348	"	_	_	_	_	
100-11	10348-10352	tags	_	_	_	_	
100-12	10352-10353	"	_	_	_	_	
100-13	10353-10354	:	_	_	_	_	
100-14	10355-10356	{	_	_	_	_	
100-15	10356-10357	"	_	_	_	_	
100-16	10357-10365	nk594127	_	_	_	_	
100-17	10365-10366	"	_	_	_	_	
100-18	10366-10367	:	_	_	_	_	
100-19	10368-10369	{	_	_	_	_	
100-20	10369-10370	"	_	_	_	_	
100-21	10370-10377	ik71786	_	_	_	_	
100-22	10377-10378	"	_	_	_	_	
100-23	10378-10379	:	_	_	_	_	
100-24	10380-10381	"	_	_	_	_	
100-25	10381-10389	iv678771	_	_	_	_	
100-26	10389-10390	"	_	_	_	_	
100-27	10390-10391	}	_	_	_	_	
100-28	10391-10392	}	_	_	_	_	
100-29	10392-10393	,	_	_	_	_	
100-30	10394-10395	"	_	_	_	_	
100-31	10395-10402	braille	_	_	_	_	
100-32	10402-10403	"	_	_	_	_	
100-33	10403-10404	:	_	_	_	_	
100-34	10405-10410	false	_	_	_	_	
100-35	10410-10411	,	_	_	_	_	
100-36	10412-10413	"	_	_	_	_	
100-37	10413-10421	keywords	_	_	_	_	
100-38	10421-10422	"	_	_	_	_	
100-39	10422-10423	:	_	_	_	_	
100-40	10424-10425	[	_	_	_	_	
100-41	10425-10426	"	_	_	_	_	
100-42	10426-10429	abc	_	_	_	_	
100-43	10429-10430	"	_	_	_	_	
100-44	10430-10431	,	_	_	_	_	
100-45	10432-10433	"	_	_	_	_	
100-46	10433-10436	kef	_	_	_	_	
100-47	10436-10437	"	_	_	_	_	
100-48	10437-10438	,	_	_	_	_	
100-49	10439-10440	"	_	_	_	_	
100-50	10440-10443	keh	_	_	_	_	
100-51	10443-10444	"	_	_	_	_	
100-52	10444-10445	]	_	_	_	_	
100-53	10445-10446	,	_	_	_	_	
100-54	10447-10448	"	_	_	_	_	
100-55	10448-10457	hardcover	_	_	_	_	
100-56	10457-10458	"	_	_	_	_	
100-57	10458-10459	:	_	_	_	_	
100-58	10460-10464	true	_	_	_	_	
100-59	10464-10465	,	_	_	_	_	
100-60	10466-10467	"	_	_	_	_	
100-61	10467-10476	publisher	_	_	_	_	
100-62	10476-10477	"	_	_	_	_	
100-63	10477-10478	:	_	_	_	_	
100-64	10479-10480	"	_	_	_	_	
100-65	10480-10490	EfgdxUdvB0	_	_	_	_	
100-66	10490-10491	"	_	_	_	_	
100-67	10491-10492	,	_	_	_	_	
100-68	10493-10494	"	_	_	_	_	
100-69	10494-10506	criticrating	_	_	_	_	
100-70	10506-10507	"	_	_	_	_	
100-71	10507-10508	:	_	_	_	_	
100-72	10509-10510	1	_	_	_	_	
100-73	10510-10511	}	_	_	_	_	
100-74	10512-10516	demo	_	_	_	_	
100-75	10516-10517	=	_	_	_	_	
100-76	10517-10518	#	_	_	_	_	
100-77	10519-10525	select	_	_	_	_	
100-78	10526-10527	*	_	_	_	_	
100-79	10528-10532	from	_	_	_	_	
100-80	10533-10538	books	_	_	_	_	
100-81	10539-10544	where	_	_	_	_	
100-82	10545-10549	data	_	_	_	_	
100-83	10550-10551	?	_	_	_	_	

#Text='braille';
#Text=id | author | isbn | rating | data
#Text=---------+-----------------+------------+--------+------------------------------------------------------------------------------------------------------------------------------------------------------
#Text=------------------
#Text=1000005 | XEI7xShT8bPu6H7 | 2kD5XJDZUF | 0 | {"tags": {"nk455671": {"ik937456": "iv506075"}}, "braille": true, "keywords": ["abc", "kef", "keh"], "hardcover": false, "publisher": "zSfZIAjGGs", "
#Text=criticrating": 4}
#Text=.....
#Text=demo=# explain analyze select * from books where data ?
101-1	10552-10553	'	_	_	_	_	
101-2	10553-10560	braille	_	_	_	_	
101-3	10560-10561	'	_	_	_	_	
101-4	10561-10562	;	_	_	_	_	
101-5	10563-10565	id	_	_	_	_	
101-6	10566-10567	|	_	_	_	_	
101-7	10568-10574	author	_	_	_	_	
101-8	10575-10576	|	_	_	_	_	
101-9	10577-10581	isbn	_	_	_	_	
101-10	10582-10583	|	_	_	_	_	
101-11	10584-10590	rating	_	_	_	_	
101-12	10591-10592	|	_	_	_	_	
101-13	10593-10597	data	_	_	_	_	
101-14	10598-10599	-	_	_	_	_	
101-15	10599-10600	-	_	_	_	_	
101-16	10600-10601	-	_	_	_	_	
101-17	10601-10602	-	_	_	_	_	
101-18	10602-10603	-	_	_	_	_	
101-19	10603-10604	-	_	_	_	_	
101-20	10604-10605	-	_	_	_	_	
101-21	10605-10606	-	_	_	_	_	
101-22	10606-10607	-	_	_	_	_	
101-23	10607-10608	+	_	_	_	_	
101-24	10608-10609	-	_	_	_	_	
101-25	10609-10610	-	_	_	_	_	
101-26	10610-10611	-	_	_	_	_	
101-27	10611-10612	-	_	_	_	_	
101-28	10612-10613	-	_	_	_	_	
101-29	10613-10614	-	_	_	_	_	
101-30	10614-10615	-	_	_	_	_	
101-31	10615-10616	-	_	_	_	_	
101-32	10616-10617	-	_	_	_	_	
101-33	10617-10618	-	_	_	_	_	
101-34	10618-10619	-	_	_	_	_	
101-35	10619-10620	-	_	_	_	_	
101-36	10620-10621	-	_	_	_	_	
101-37	10621-10622	-	_	_	_	_	
101-38	10622-10623	-	_	_	_	_	
101-39	10623-10624	-	_	_	_	_	
101-40	10624-10625	-	_	_	_	_	
101-41	10625-10626	+	_	_	_	_	
101-42	10626-10627	-	_	_	_	_	
101-43	10627-10628	-	_	_	_	_	
101-44	10628-10629	-	_	_	_	_	
101-45	10629-10630	-	_	_	_	_	
101-46	10630-10631	-	_	_	_	_	
101-47	10631-10632	-	_	_	_	_	
101-48	10632-10633	-	_	_	_	_	
101-49	10633-10634	-	_	_	_	_	
101-50	10634-10635	-	_	_	_	_	
101-51	10635-10636	-	_	_	_	_	
101-52	10636-10637	-	_	_	_	_	
101-53	10637-10638	-	_	_	_	_	
101-54	10638-10639	+	_	_	_	_	
101-55	10639-10640	-	_	_	_	_	
101-56	10640-10641	-	_	_	_	_	
101-57	10641-10642	-	_	_	_	_	
101-58	10642-10643	-	_	_	_	_	
101-59	10643-10644	-	_	_	_	_	
101-60	10644-10645	-	_	_	_	_	
101-61	10645-10646	-	_	_	_	_	
101-62	10646-10647	-	_	_	_	_	
101-63	10647-10648	+	_	_	_	_	
101-64	10648-10649	-	_	_	_	_	
101-65	10649-10650	-	_	_	_	_	
101-66	10650-10651	-	_	_	_	_	
101-67	10651-10652	-	_	_	_	_	
101-68	10652-10653	-	_	_	_	_	
101-69	10653-10654	-	_	_	_	_	
101-70	10654-10655	-	_	_	_	_	
101-71	10655-10656	-	_	_	_	_	
101-72	10656-10657	-	_	_	_	_	
101-73	10657-10658	-	_	_	_	_	
101-74	10658-10659	-	_	_	_	_	
101-75	10659-10660	-	_	_	_	_	
101-76	10660-10661	-	_	_	_	_	
101-77	10661-10662	-	_	_	_	_	
101-78	10662-10663	-	_	_	_	_	
101-79	10663-10664	-	_	_	_	_	
101-80	10664-10665	-	_	_	_	_	
101-81	10665-10666	-	_	_	_	_	
101-82	10666-10667	-	_	_	_	_	
101-83	10667-10668	-	_	_	_	_	
101-84	10668-10669	-	_	_	_	_	
101-85	10669-10670	-	_	_	_	_	
101-86	10670-10671	-	_	_	_	_	
101-87	10671-10672	-	_	_	_	_	
101-88	10672-10673	-	_	_	_	_	
101-89	10673-10674	-	_	_	_	_	
101-90	10674-10675	-	_	_	_	_	
101-91	10675-10676	-	_	_	_	_	
101-92	10676-10677	-	_	_	_	_	
101-93	10677-10678	-	_	_	_	_	
101-94	10678-10679	-	_	_	_	_	
101-95	10679-10680	-	_	_	_	_	
101-96	10680-10681	-	_	_	_	_	
101-97	10681-10682	-	_	_	_	_	
101-98	10682-10683	-	_	_	_	_	
101-99	10683-10684	-	_	_	_	_	
101-100	10684-10685	-	_	_	_	_	
101-101	10685-10686	-	_	_	_	_	
101-102	10686-10687	-	_	_	_	_	
101-103	10687-10688	-	_	_	_	_	
101-104	10688-10689	-	_	_	_	_	
101-105	10689-10690	-	_	_	_	_	
101-106	10690-10691	-	_	_	_	_	
101-107	10691-10692	-	_	_	_	_	
101-108	10692-10693	-	_	_	_	_	
101-109	10693-10694	-	_	_	_	_	
101-110	10694-10695	-	_	_	_	_	
101-111	10695-10696	-	_	_	_	_	
101-112	10696-10697	-	_	_	_	_	
101-113	10697-10698	-	_	_	_	_	
101-114	10698-10699	-	_	_	_	_	
101-115	10699-10700	-	_	_	_	_	
101-116	10700-10701	-	_	_	_	_	
101-117	10701-10702	-	_	_	_	_	
101-118	10702-10703	-	_	_	_	_	
101-119	10703-10704	-	_	_	_	_	
101-120	10704-10705	-	_	_	_	_	
101-121	10705-10706	-	_	_	_	_	
101-122	10706-10707	-	_	_	_	_	
101-123	10707-10708	-	_	_	_	_	
101-124	10708-10709	-	_	_	_	_	
101-125	10709-10710	-	_	_	_	_	
101-126	10710-10711	-	_	_	_	_	
101-127	10711-10712	-	_	_	_	_	
101-128	10712-10713	-	_	_	_	_	
101-129	10713-10714	-	_	_	_	_	
101-130	10714-10715	-	_	_	_	_	
101-131	10715-10716	-	_	_	_	_	
101-132	10716-10717	-	_	_	_	_	
101-133	10717-10718	-	_	_	_	_	
101-134	10718-10719	-	_	_	_	_	
101-135	10719-10720	-	_	_	_	_	
101-136	10720-10721	-	_	_	_	_	
101-137	10721-10722	-	_	_	_	_	
101-138	10722-10723	-	_	_	_	_	
101-139	10723-10724	-	_	_	_	_	
101-140	10724-10725	-	_	_	_	_	
101-141	10725-10726	-	_	_	_	_	
101-142	10726-10727	-	_	_	_	_	
101-143	10727-10728	-	_	_	_	_	
101-144	10728-10729	-	_	_	_	_	
101-145	10729-10730	-	_	_	_	_	
101-146	10730-10731	-	_	_	_	_	
101-147	10731-10732	-	_	_	_	_	
101-148	10732-10733	-	_	_	_	_	
101-149	10733-10734	-	_	_	_	_	
101-150	10734-10735	-	_	_	_	_	
101-151	10735-10736	-	_	_	_	_	
101-152	10736-10737	-	_	_	_	_	
101-153	10737-10738	-	_	_	_	_	
101-154	10738-10739	-	_	_	_	_	
101-155	10739-10740	-	_	_	_	_	
101-156	10740-10741	-	_	_	_	_	
101-157	10741-10742	-	_	_	_	_	
101-158	10742-10743	-	_	_	_	_	
101-159	10743-10744	-	_	_	_	_	
101-160	10744-10745	-	_	_	_	_	
101-161	10745-10746	-	_	_	_	_	
101-162	10746-10747	-	_	_	_	_	
101-163	10747-10748	-	_	_	_	_	
101-164	10748-10749	-	_	_	_	_	
101-165	10749-10750	-	_	_	_	_	
101-166	10750-10751	-	_	_	_	_	
101-167	10751-10752	-	_	_	_	_	
101-168	10752-10753	-	_	_	_	_	
101-169	10753-10754	-	_	_	_	_	
101-170	10754-10755	-	_	_	_	_	
101-171	10755-10756	-	_	_	_	_	
101-172	10756-10757	-	_	_	_	_	
101-173	10757-10758	-	_	_	_	_	
101-174	10758-10759	-	_	_	_	_	
101-175	10759-10760	-	_	_	_	_	
101-176	10760-10761	-	_	_	_	_	
101-177	10761-10762	-	_	_	_	_	
101-178	10762-10763	-	_	_	_	_	
101-179	10763-10764	-	_	_	_	_	
101-180	10764-10765	-	_	_	_	_	
101-181	10765-10766	-	_	_	_	_	
101-182	10766-10767	-	_	_	_	_	
101-183	10767-10768	-	_	_	_	_	
101-184	10768-10769	-	_	_	_	_	
101-185	10769-10770	-	_	_	_	_	
101-186	10770-10771	-	_	_	_	_	
101-187	10771-10772	-	_	_	_	_	
101-188	10772-10773	-	_	_	_	_	
101-189	10773-10774	-	_	_	_	_	
101-190	10774-10775	-	_	_	_	_	
101-191	10775-10776	-	_	_	_	_	
101-192	10776-10777	-	_	_	_	_	
101-193	10777-10778	-	_	_	_	_	
101-194	10778-10779	-	_	_	_	_	
101-195	10779-10780	-	_	_	_	_	
101-196	10780-10781	-	_	_	_	_	
101-197	10781-10782	-	_	_	_	_	
101-198	10782-10783	-	_	_	_	_	
101-199	10783-10784	-	_	_	_	_	
101-200	10784-10785	-	_	_	_	_	
101-201	10785-10786	-	_	_	_	_	
101-202	10786-10787	-	_	_	_	_	
101-203	10787-10788	-	_	_	_	_	
101-204	10788-10789	-	_	_	_	_	
101-205	10789-10790	-	_	_	_	_	
101-206	10790-10791	-	_	_	_	_	
101-207	10791-10792	-	_	_	_	_	
101-208	10792-10793	-	_	_	_	_	
101-209	10793-10794	-	_	_	_	_	
101-210	10794-10795	-	_	_	_	_	
101-211	10795-10796	-	_	_	_	_	
101-212	10796-10797	-	_	_	_	_	
101-213	10797-10798	-	_	_	_	_	
101-214	10799-10800	-	_	_	_	_	
101-215	10800-10801	-	_	_	_	_	
101-216	10801-10802	-	_	_	_	_	
101-217	10802-10803	-	_	_	_	_	
101-218	10803-10804	-	_	_	_	_	
101-219	10804-10805	-	_	_	_	_	
101-220	10805-10806	-	_	_	_	_	
101-221	10806-10807	-	_	_	_	_	
101-222	10807-10808	-	_	_	_	_	
101-223	10808-10809	-	_	_	_	_	
101-224	10809-10810	-	_	_	_	_	
101-225	10810-10811	-	_	_	_	_	
101-226	10811-10812	-	_	_	_	_	
101-227	10812-10813	-	_	_	_	_	
101-228	10813-10814	-	_	_	_	_	
101-229	10814-10815	-	_	_	_	_	
101-230	10815-10816	-	_	_	_	_	
101-231	10816-10817	-	_	_	_	_	
101-232	10818-10825	1000005	_	_	_	_	
101-233	10826-10827	|	_	_	_	_	
101-234	10828-10843	XEI7xShT8bPu6H7	_	_	_	_	
101-235	10844-10845	|	_	_	_	_	
101-236	10846-10856	2kD5XJDZUF	_	_	_	_	
101-237	10857-10858	|	_	_	_	_	
101-238	10859-10860	0	_	_	_	_	
101-239	10861-10862	|	_	_	_	_	
101-240	10863-10864	{	_	_	_	_	
101-241	10864-10865	"	_	_	_	_	
101-242	10865-10869	tags	_	_	_	_	
101-243	10869-10870	"	_	_	_	_	
101-244	10870-10871	:	_	_	_	_	
101-245	10872-10873	{	_	_	_	_	
101-246	10873-10874	"	_	_	_	_	
101-247	10874-10882	nk455671	_	_	_	_	
101-248	10882-10883	"	_	_	_	_	
101-249	10883-10884	:	_	_	_	_	
101-250	10885-10886	{	_	_	_	_	
101-251	10886-10887	"	_	_	_	_	
101-252	10887-10895	ik937456	_	_	_	_	
101-253	10895-10896	"	_	_	_	_	
101-254	10896-10897	:	_	_	_	_	
101-255	10898-10899	"	_	_	_	_	
101-256	10899-10907	iv506075	_	_	_	_	
101-257	10907-10908	"	_	_	_	_	
101-258	10908-10909	}	_	_	_	_	
101-259	10909-10910	}	_	_	_	_	
101-260	10910-10911	,	_	_	_	_	
101-261	10912-10913	"	_	_	_	_	
101-262	10913-10920	braille	_	_	_	_	
101-263	10920-10921	"	_	_	_	_	
101-264	10921-10922	:	_	_	_	_	
101-265	10923-10927	true	_	_	_	_	
101-266	10927-10928	,	_	_	_	_	
101-267	10929-10930	"	_	_	_	_	
101-268	10930-10938	keywords	_	_	_	_	
101-269	10938-10939	"	_	_	_	_	
101-270	10939-10940	:	_	_	_	_	
101-271	10941-10942	[	_	_	_	_	
101-272	10942-10943	"	_	_	_	_	
101-273	10943-10946	abc	_	_	_	_	
101-274	10946-10947	"	_	_	_	_	
101-275	10947-10948	,	_	_	_	_	
101-276	10949-10950	"	_	_	_	_	
101-277	10950-10953	kef	_	_	_	_	
101-278	10953-10954	"	_	_	_	_	
101-279	10954-10955	,	_	_	_	_	
101-280	10956-10957	"	_	_	_	_	
101-281	10957-10960	keh	_	_	_	_	
101-282	10960-10961	"	_	_	_	_	
101-283	10961-10962	]	_	_	_	_	
101-284	10962-10963	,	_	_	_	_	
101-285	10964-10965	"	_	_	_	_	
101-286	10965-10974	hardcover	_	_	_	_	
101-287	10974-10975	"	_	_	_	_	
101-288	10975-10976	:	_	_	_	_	
101-289	10977-10982	false	_	_	_	_	
101-290	10982-10983	,	_	_	_	_	
101-291	10984-10985	"	_	_	_	_	
101-292	10985-10994	publisher	_	_	_	_	
101-293	10994-10995	"	_	_	_	_	
101-294	10995-10996	:	_	_	_	_	
101-295	10997-10998	"	_	_	_	_	
101-296	10998-11008	zSfZIAjGGs	_	_	_	_	
101-297	11008-11009	"	_	_	_	_	
101-298	11009-11010	,	_	_	_	_	
101-299	11011-11012	"	_	_	_	_	
101-300	11013-11025	criticrating	_	_	_	_	
101-301	11025-11026	"	_	_	_	_	
101-302	11026-11027	:	_	_	_	_	
101-303	11028-11029	4	_	_	_	_	
101-304	11029-11030	}	_	_	_	_	
101-305	11031-11032	.	_	_	_	_	
101-306	11032-11033	.	_	_	_	_	
101-307	11033-11034	.	_	_	_	_	
101-308	11034-11035	.	_	_	_	_	
101-309	11035-11036	.	_	_	_	_	
101-310	11037-11041	demo	_	_	_	_	
101-311	11041-11042	=	_	_	_	_	
101-312	11042-11043	#	_	_	_	_	
101-313	11044-11051	explain	_	_	_	_	
101-314	11052-11059	analyze	_	_	_	_	
101-315	11060-11066	select	_	_	_	_	
101-316	11067-11068	*	_	_	_	_	
101-317	11069-11073	from	_	_	_	_	
101-318	11074-11079	books	_	_	_	_	
101-319	11080-11085	where	_	_	_	_	
101-320	11086-11090	data	_	_	_	_	
101-321	11091-11092	?	_	_	_	_	

#Text='braille';
#Text=QUERY PLAN
#Text=---------------------------------------------------------------------------------------------------------------------
#Text=Bitmap Heap Scan on books (cost=12.75..1005.25 rows=1000 width=158) (actual time=0.033..0.039 rows=15 loops=1)
#Text=Recheck Cond: (data ?
102-1	11093-11094	'	_	_	_	_	
102-2	11094-11101	braille	_	_	_	_	
102-3	11101-11102	'	_	_	_	_	
102-4	11102-11103	;	_	_	_	_	
102-5	11104-11109	QUERY	_	_	_	_	
102-6	11110-11114	PLAN	_	_	_	_	
102-7	11115-11116	-	_	_	_	_	
102-8	11116-11117	-	_	_	_	_	
102-9	11117-11118	-	_	_	_	_	
102-10	11118-11119	-	_	_	_	_	
102-11	11119-11120	-	_	_	_	_	
102-12	11120-11121	-	_	_	_	_	
102-13	11121-11122	-	_	_	_	_	
102-14	11122-11123	-	_	_	_	_	
102-15	11123-11124	-	_	_	_	_	
102-16	11124-11125	-	_	_	_	_	
102-17	11125-11126	-	_	_	_	_	
102-18	11126-11127	-	_	_	_	_	
102-19	11127-11128	-	_	_	_	_	
102-20	11128-11129	-	_	_	_	_	
102-21	11129-11130	-	_	_	_	_	
102-22	11130-11131	-	_	_	_	_	
102-23	11131-11132	-	_	_	_	_	
102-24	11132-11133	-	_	_	_	_	
102-25	11133-11134	-	_	_	_	_	
102-26	11134-11135	-	_	_	_	_	
102-27	11135-11136	-	_	_	_	_	
102-28	11136-11137	-	_	_	_	_	
102-29	11137-11138	-	_	_	_	_	
102-30	11138-11139	-	_	_	_	_	
102-31	11139-11140	-	_	_	_	_	
102-32	11140-11141	-	_	_	_	_	
102-33	11141-11142	-	_	_	_	_	
102-34	11142-11143	-	_	_	_	_	
102-35	11143-11144	-	_	_	_	_	
102-36	11144-11145	-	_	_	_	_	
102-37	11145-11146	-	_	_	_	_	
102-38	11146-11147	-	_	_	_	_	
102-39	11147-11148	-	_	_	_	_	
102-40	11148-11149	-	_	_	_	_	
102-41	11149-11150	-	_	_	_	_	
102-42	11150-11151	-	_	_	_	_	
102-43	11151-11152	-	_	_	_	_	
102-44	11152-11153	-	_	_	_	_	
102-45	11153-11154	-	_	_	_	_	
102-46	11154-11155	-	_	_	_	_	
102-47	11155-11156	-	_	_	_	_	
102-48	11156-11157	-	_	_	_	_	
102-49	11157-11158	-	_	_	_	_	
102-50	11158-11159	-	_	_	_	_	
102-51	11159-11160	-	_	_	_	_	
102-52	11160-11161	-	_	_	_	_	
102-53	11161-11162	-	_	_	_	_	
102-54	11162-11163	-	_	_	_	_	
102-55	11163-11164	-	_	_	_	_	
102-56	11164-11165	-	_	_	_	_	
102-57	11165-11166	-	_	_	_	_	
102-58	11166-11167	-	_	_	_	_	
102-59	11167-11168	-	_	_	_	_	
102-60	11168-11169	-	_	_	_	_	
102-61	11169-11170	-	_	_	_	_	
102-62	11170-11171	-	_	_	_	_	
102-63	11171-11172	-	_	_	_	_	
102-64	11172-11173	-	_	_	_	_	
102-65	11173-11174	-	_	_	_	_	
102-66	11174-11175	-	_	_	_	_	
102-67	11175-11176	-	_	_	_	_	
102-68	11176-11177	-	_	_	_	_	
102-69	11177-11178	-	_	_	_	_	
102-70	11178-11179	-	_	_	_	_	
102-71	11179-11180	-	_	_	_	_	
102-72	11180-11181	-	_	_	_	_	
102-73	11181-11182	-	_	_	_	_	
102-74	11182-11183	-	_	_	_	_	
102-75	11183-11184	-	_	_	_	_	
102-76	11184-11185	-	_	_	_	_	
102-77	11185-11186	-	_	_	_	_	
102-78	11186-11187	-	_	_	_	_	
102-79	11187-11188	-	_	_	_	_	
102-80	11188-11189	-	_	_	_	_	
102-81	11189-11190	-	_	_	_	_	
102-82	11190-11191	-	_	_	_	_	
102-83	11191-11192	-	_	_	_	_	
102-84	11192-11193	-	_	_	_	_	
102-85	11193-11194	-	_	_	_	_	
102-86	11194-11195	-	_	_	_	_	
102-87	11195-11196	-	_	_	_	_	
102-88	11196-11197	-	_	_	_	_	
102-89	11197-11198	-	_	_	_	_	
102-90	11198-11199	-	_	_	_	_	
102-91	11199-11200	-	_	_	_	_	
102-92	11200-11201	-	_	_	_	_	
102-93	11201-11202	-	_	_	_	_	
102-94	11202-11203	-	_	_	_	_	
102-95	11203-11204	-	_	_	_	_	
102-96	11204-11205	-	_	_	_	_	
102-97	11205-11206	-	_	_	_	_	
102-98	11206-11207	-	_	_	_	_	
102-99	11207-11208	-	_	_	_	_	
102-100	11208-11209	-	_	_	_	_	
102-101	11209-11210	-	_	_	_	_	
102-102	11210-11211	-	_	_	_	_	
102-103	11211-11212	-	_	_	_	_	
102-104	11212-11213	-	_	_	_	_	
102-105	11213-11214	-	_	_	_	_	
102-106	11214-11215	-	_	_	_	_	
102-107	11215-11216	-	_	_	_	_	
102-108	11216-11217	-	_	_	_	_	
102-109	11217-11218	-	_	_	_	_	
102-110	11218-11219	-	_	_	_	_	
102-111	11219-11220	-	_	_	_	_	
102-112	11220-11221	-	_	_	_	_	
102-113	11221-11222	-	_	_	_	_	
102-114	11222-11223	-	_	_	_	_	
102-115	11223-11224	-	_	_	_	_	
102-116	11224-11225	-	_	_	_	_	
102-117	11225-11226	-	_	_	_	_	
102-118	11226-11227	-	_	_	_	_	
102-119	11227-11228	-	_	_	_	_	
102-120	11228-11229	-	_	_	_	_	
102-121	11229-11230	-	_	_	_	_	
102-122	11230-11231	-	_	_	_	_	
102-123	11231-11232	-	_	_	_	_	
102-124	11233-11239	Bitmap	_	_	_	_	
102-125	11240-11244	Heap	_	_	_	_	
102-126	11245-11249	Scan	_	_	_	_	
102-127	11250-11252	on	_	_	_	_	
102-128	11253-11258	books	_	_	_	_	
102-129	11259-11260	(	_	_	_	_	
102-130	11260-11264	cost	_	_	_	_	
102-131	11264-11265	=	_	_	_	_	
102-132	11265-11270	12.75	_	_	_	_	
102-133	11270-11271	.	_	_	_	_	
102-134	11271-11279	.1005.25	_	_	_	_	
102-135	11280-11284	rows	_	_	_	_	
102-136	11284-11285	=	_	_	_	_	
102-137	11285-11289	1000	_	_	_	_	
102-138	11290-11295	width	_	_	_	_	
102-139	11295-11296	=	_	_	_	_	
102-140	11296-11299	158	_	_	_	_	
102-141	11299-11300	)	_	_	_	_	
102-142	11301-11302	(	_	_	_	_	
102-143	11302-11308	actual	_	_	_	_	
102-144	11309-11313	time	_	_	_	_	
102-145	11313-11314	=	_	_	_	_	
102-146	11314-11319	0.033	_	_	_	_	
102-147	11319-11320	.	_	_	_	_	
102-148	11320-11326	.0.039	_	_	_	_	
102-149	11327-11331	rows	_	_	_	_	
102-150	11331-11332	=	_	_	_	_	
102-151	11332-11334	15	_	_	_	_	
102-152	11335-11340	loops	_	_	_	_	
102-153	11340-11341	=	_	_	_	_	
102-154	11341-11342	1	_	_	_	_	
102-155	11342-11343	)	_	_	_	_	
102-156	11344-11351	Recheck	_	_	_	_	
102-157	11352-11356	Cond	_	_	_	_	
102-158	11356-11357	:	_	_	_	_	
102-159	11358-11359	(	_	_	_	_	
102-160	11359-11363	data	_	_	_	_	
102-161	11364-11365	?	_	_	_	_	

#Text='braille'::text)
#Text=Heap Blocks: exact=2
#Text=-> Bitmap Index Scan on datagin (cost=0.00..12.50 rows=1000 width=0) (actual time=0.022..0.022 rows=15 loops=1)
#Text=Index Cond: (data ?
103-1	11366-11367	'	_	_	_	_	
103-2	11367-11374	braille	_	_	_	_	
103-3	11374-11375	'	_	_	_	_	
103-4	11375-11376	:	_	_	_	_	
103-5	11376-11377	:	_	_	_	_	
103-6	11377-11381	text	_	_	_	_	
103-7	11381-11382	)	_	_	_	_	
103-8	11383-11387	Heap	_	_	_	_	
103-9	11388-11394	Blocks	_	_	_	_	
103-10	11394-11395	:	_	_	_	_	
103-11	11396-11401	exact	_	_	_	_	
103-12	11401-11402	=	_	_	_	_	
103-13	11402-11403	2	_	_	_	_	
103-14	11404-11405	-	_	_	_	_	
103-15	11405-11406	>	_	_	_	_	
103-16	11407-11413	Bitmap	_	_	_	_	
103-17	11414-11419	Index	_	_	_	_	
103-18	11420-11424	Scan	_	_	_	_	
103-19	11425-11427	on	_	_	_	_	
103-20	11428-11435	datagin	_	_	_	_	
103-21	11436-11437	(	_	_	_	_	
103-22	11437-11441	cost	_	_	_	_	
103-23	11441-11442	=	_	_	_	_	
103-24	11442-11446	0.00	_	_	_	_	
103-25	11446-11447	.	_	_	_	_	
103-26	11447-11453	.12.50	_	_	_	_	
103-27	11454-11458	rows	_	_	_	_	
103-28	11458-11459	=	_	_	_	_	
103-29	11459-11463	1000	_	_	_	_	
103-30	11464-11469	width	_	_	_	_	
103-31	11469-11470	=	_	_	_	_	
103-32	11470-11471	0	_	_	_	_	
103-33	11471-11472	)	_	_	_	_	
103-34	11473-11474	(	_	_	_	_	
103-35	11474-11480	actual	_	_	_	_	
103-36	11481-11485	time	_	_	_	_	
103-37	11485-11486	=	_	_	_	_	
103-38	11486-11491	0.022	_	_	_	_	
103-39	11491-11492	.	_	_	_	_	
103-40	11492-11498	.0.022	_	_	_	_	
103-41	11499-11503	rows	_	_	_	_	
103-42	11503-11504	=	_	_	_	_	
103-43	11504-11506	15	_	_	_	_	
103-44	11507-11512	loops	_	_	_	_	
103-45	11512-11513	=	_	_	_	_	
103-46	11513-11514	1	_	_	_	_	
103-47	11514-11515	)	_	_	_	_	
103-48	11516-11521	Index	_	_	_	_	
103-49	11522-11526	Cond	_	_	_	_	
103-50	11526-11527	:	_	_	_	_	
103-51	11528-11529	(	_	_	_	_	
103-52	11529-11533	data	_	_	_	_	
103-53	11534-11535	?	_	_	_	_	

#Text='braille'::text)
#Text=Planning Time: 0.102 ms
#Text=Execution Time: 0.067 ms
#Text=(7 rows)
#Text=As you can see from the explain output, the GIN index that we created is being used for the search.
104-1	11536-11537	'	_	_	_	_	
104-2	11537-11544	braille	_	_	_	_	
104-3	11544-11545	'	_	_	_	_	
104-4	11545-11546	:	_	_	_	_	
104-5	11546-11547	:	_	_	_	_	
104-6	11547-11551	text	_	_	_	_	
104-7	11551-11552	)	_	_	_	_	
104-8	11553-11561	Planning	_	_	_	_	
104-9	11562-11566	Time	_	_	_	_	
104-10	11566-11567	:	_	_	_	_	
104-11	11568-11573	0.102	_	_	_	_	
104-12	11574-11576	ms	_	_	_	_	
104-13	11577-11586	Execution	_	_	_	_	
104-14	11587-11591	Time	_	_	_	_	
104-15	11591-11592	:	_	_	_	_	
104-16	11593-11598	0.067	_	_	_	_	
104-17	11599-11601	ms	_	_	_	_	
104-18	11602-11603	(	_	_	_	_	
104-19	11603-11604	7	_	_	_	_	
104-20	11605-11609	rows	_	_	_	_	
104-21	11609-11610	)	_	_	_	_	
104-22	11611-11613	As	_	_	_	_	
104-23	11614-11617	you	_	_	_	_	
104-24	11618-11621	can	_	_	_	_	
104-25	11622-11625	see	_	_	_	_	
104-26	11626-11630	from	_	_	_	_	
104-27	11631-11634	the	_	_	_	_	
104-28	11635-11642	explain	_	_	_	_	
104-29	11643-11649	output	_	_	_	_	
104-30	11649-11650	,	_	_	_	_	
104-31	11651-11654	the	_	_	_	_	
104-32	11655-11658	GIN	_	_	_	_	
104-33	11659-11664	index	_	_	_	_	
104-34	11665-11669	that	_	_	_	_	
104-35	11670-11672	we	_	_	_	_	
104-36	11673-11680	created	_	_	_	_	
104-37	11681-11683	is	_	_	_	_	
104-38	11684-11689	being	_	_	_	_	
104-39	11690-11694	used	_	_	_	_	
104-40	11695-11698	for	_	_	_	_	
104-41	11699-11702	the	_	_	_	_	
104-42	11703-11709	search	_	_	_	_	
104-43	11709-11710	.	_	_	_	_	

#Text=What if we wanted to find books that were in braille or in hardcover?
105-1	11711-11715	What	_	_	_	_	
105-2	11716-11718	if	_	_	_	_	
105-3	11719-11721	we	_	_	_	_	
105-4	11722-11728	wanted	_	_	_	_	
105-5	11729-11731	to	_	_	_	_	
105-6	11732-11736	find	_	_	_	_	
105-7	11737-11742	books	_	_	_	_	
105-8	11743-11747	that	_	_	_	_	
105-9	11748-11752	were	_	_	_	_	
105-10	11753-11755	in	_	_	_	_	
105-11	11756-11763	braille	_	_	_	_	
105-12	11764-11766	or	_	_	_	_	
105-13	11767-11769	in	_	_	_	_	
105-14	11770-11779	hardcover	_	_	_	_	
105-15	11779-11780	?	_	_	_	_	

#Text=demo=# explain analyze select * from books where data ?
106-1	11781-11785	demo	_	_	_	_	
106-2	11785-11786	=	_	_	_	_	
106-3	11786-11787	#	_	_	_	_	
106-4	11788-11795	explain	_	_	_	_	
106-5	11796-11803	analyze	_	_	_	_	
106-6	11804-11810	select	_	_	_	_	
106-7	11811-11812	*	_	_	_	_	
106-8	11813-11817	from	_	_	_	_	
106-9	11818-11823	books	_	_	_	_	
106-10	11824-11829	where	_	_	_	_	
106-11	11830-11834	data	_	_	_	_	
106-12	11835-11836	?	_	_	_	_	

#Text=| array['braille','hardcover'];
#Text=QUERY PLAN
#Text=---------------------------------------------------------------------------------------------------------------------
#Text=Bitmap Heap Scan on books (cost=16.75..1009.25 rows=1000 width=158) (actual time=0.029..0.035 rows=15 loops=1)
#Text=Recheck Cond: (data ?
107-1	11836-11837	|	_	_	_	_	
107-2	11838-11843	array	_	_	_	_	
107-3	11843-11844	[	_	_	_	_	
107-4	11844-11845	'	_	_	_	_	
107-5	11845-11852	braille	_	_	_	_	
107-6	11852-11853	'	_	_	_	_	
107-7	11853-11854	,	_	_	_	_	
107-8	11854-11855	'	_	_	_	_	
107-9	11855-11864	hardcover	_	_	_	_	
107-10	11864-11865	'	_	_	_	_	
107-11	11865-11866	]	_	_	_	_	
107-12	11866-11867	;	_	_	_	_	
107-13	11868-11873	QUERY	_	_	_	_	
107-14	11874-11878	PLAN	_	_	_	_	
107-15	11879-11880	-	_	_	_	_	
107-16	11880-11881	-	_	_	_	_	
107-17	11881-11882	-	_	_	_	_	
107-18	11882-11883	-	_	_	_	_	
107-19	11883-11884	-	_	_	_	_	
107-20	11884-11885	-	_	_	_	_	
107-21	11885-11886	-	_	_	_	_	
107-22	11886-11887	-	_	_	_	_	
107-23	11887-11888	-	_	_	_	_	
107-24	11888-11889	-	_	_	_	_	
107-25	11889-11890	-	_	_	_	_	
107-26	11890-11891	-	_	_	_	_	
107-27	11891-11892	-	_	_	_	_	
107-28	11892-11893	-	_	_	_	_	
107-29	11893-11894	-	_	_	_	_	
107-30	11894-11895	-	_	_	_	_	
107-31	11895-11896	-	_	_	_	_	
107-32	11896-11897	-	_	_	_	_	
107-33	11897-11898	-	_	_	_	_	
107-34	11898-11899	-	_	_	_	_	
107-35	11899-11900	-	_	_	_	_	
107-36	11900-11901	-	_	_	_	_	
107-37	11901-11902	-	_	_	_	_	
107-38	11902-11903	-	_	_	_	_	
107-39	11903-11904	-	_	_	_	_	
107-40	11904-11905	-	_	_	_	_	
107-41	11905-11906	-	_	_	_	_	
107-42	11906-11907	-	_	_	_	_	
107-43	11907-11908	-	_	_	_	_	
107-44	11908-11909	-	_	_	_	_	
107-45	11909-11910	-	_	_	_	_	
107-46	11910-11911	-	_	_	_	_	
107-47	11911-11912	-	_	_	_	_	
107-48	11912-11913	-	_	_	_	_	
107-49	11913-11914	-	_	_	_	_	
107-50	11914-11915	-	_	_	_	_	
107-51	11915-11916	-	_	_	_	_	
107-52	11916-11917	-	_	_	_	_	
107-53	11917-11918	-	_	_	_	_	
107-54	11918-11919	-	_	_	_	_	
107-55	11919-11920	-	_	_	_	_	
107-56	11920-11921	-	_	_	_	_	
107-57	11921-11922	-	_	_	_	_	
107-58	11922-11923	-	_	_	_	_	
107-59	11923-11924	-	_	_	_	_	
107-60	11924-11925	-	_	_	_	_	
107-61	11925-11926	-	_	_	_	_	
107-62	11926-11927	-	_	_	_	_	
107-63	11927-11928	-	_	_	_	_	
107-64	11928-11929	-	_	_	_	_	
107-65	11929-11930	-	_	_	_	_	
107-66	11930-11931	-	_	_	_	_	
107-67	11931-11932	-	_	_	_	_	
107-68	11932-11933	-	_	_	_	_	
107-69	11933-11934	-	_	_	_	_	
107-70	11934-11935	-	_	_	_	_	
107-71	11935-11936	-	_	_	_	_	
107-72	11936-11937	-	_	_	_	_	
107-73	11937-11938	-	_	_	_	_	
107-74	11938-11939	-	_	_	_	_	
107-75	11939-11940	-	_	_	_	_	
107-76	11940-11941	-	_	_	_	_	
107-77	11941-11942	-	_	_	_	_	
107-78	11942-11943	-	_	_	_	_	
107-79	11943-11944	-	_	_	_	_	
107-80	11944-11945	-	_	_	_	_	
107-81	11945-11946	-	_	_	_	_	
107-82	11946-11947	-	_	_	_	_	
107-83	11947-11948	-	_	_	_	_	
107-84	11948-11949	-	_	_	_	_	
107-85	11949-11950	-	_	_	_	_	
107-86	11950-11951	-	_	_	_	_	
107-87	11951-11952	-	_	_	_	_	
107-88	11952-11953	-	_	_	_	_	
107-89	11953-11954	-	_	_	_	_	
107-90	11954-11955	-	_	_	_	_	
107-91	11955-11956	-	_	_	_	_	
107-92	11956-11957	-	_	_	_	_	
107-93	11957-11958	-	_	_	_	_	
107-94	11958-11959	-	_	_	_	_	
107-95	11959-11960	-	_	_	_	_	
107-96	11960-11961	-	_	_	_	_	
107-97	11961-11962	-	_	_	_	_	
107-98	11962-11963	-	_	_	_	_	
107-99	11963-11964	-	_	_	_	_	
107-100	11964-11965	-	_	_	_	_	
107-101	11965-11966	-	_	_	_	_	
107-102	11966-11967	-	_	_	_	_	
107-103	11967-11968	-	_	_	_	_	
107-104	11968-11969	-	_	_	_	_	
107-105	11969-11970	-	_	_	_	_	
107-106	11970-11971	-	_	_	_	_	
107-107	11971-11972	-	_	_	_	_	
107-108	11972-11973	-	_	_	_	_	
107-109	11973-11974	-	_	_	_	_	
107-110	11974-11975	-	_	_	_	_	
107-111	11975-11976	-	_	_	_	_	
107-112	11976-11977	-	_	_	_	_	
107-113	11977-11978	-	_	_	_	_	
107-114	11978-11979	-	_	_	_	_	
107-115	11979-11980	-	_	_	_	_	
107-116	11980-11981	-	_	_	_	_	
107-117	11981-11982	-	_	_	_	_	
107-118	11982-11983	-	_	_	_	_	
107-119	11983-11984	-	_	_	_	_	
107-120	11984-11985	-	_	_	_	_	
107-121	11985-11986	-	_	_	_	_	
107-122	11986-11987	-	_	_	_	_	
107-123	11987-11988	-	_	_	_	_	
107-124	11988-11989	-	_	_	_	_	
107-125	11989-11990	-	_	_	_	_	
107-126	11990-11991	-	_	_	_	_	
107-127	11991-11992	-	_	_	_	_	
107-128	11992-11993	-	_	_	_	_	
107-129	11993-11994	-	_	_	_	_	
107-130	11994-11995	-	_	_	_	_	
107-131	11995-11996	-	_	_	_	_	
107-132	11997-12003	Bitmap	_	_	_	_	
107-133	12004-12008	Heap	_	_	_	_	
107-134	12009-12013	Scan	_	_	_	_	
107-135	12014-12016	on	_	_	_	_	
107-136	12017-12022	books	_	_	_	_	
107-137	12023-12024	(	_	_	_	_	
107-138	12024-12028	cost	_	_	_	_	
107-139	12028-12029	=	_	_	_	_	
107-140	12029-12034	16.75	_	_	_	_	
107-141	12034-12035	.	_	_	_	_	
107-142	12035-12043	.1009.25	_	_	_	_	
107-143	12044-12048	rows	_	_	_	_	
107-144	12048-12049	=	_	_	_	_	
107-145	12049-12053	1000	_	_	_	_	
107-146	12054-12059	width	_	_	_	_	
107-147	12059-12060	=	_	_	_	_	
107-148	12060-12063	158	_	_	_	_	
107-149	12063-12064	)	_	_	_	_	
107-150	12065-12066	(	_	_	_	_	
107-151	12066-12072	actual	_	_	_	_	
107-152	12073-12077	time	_	_	_	_	
107-153	12077-12078	=	_	_	_	_	
107-154	12078-12083	0.029	_	_	_	_	
107-155	12083-12084	.	_	_	_	_	
107-156	12084-12090	.0.035	_	_	_	_	
107-157	12091-12095	rows	_	_	_	_	
107-158	12095-12096	=	_	_	_	_	
107-159	12096-12098	15	_	_	_	_	
107-160	12099-12104	loops	_	_	_	_	
107-161	12104-12105	=	_	_	_	_	
107-162	12105-12106	1	_	_	_	_	
107-163	12106-12107	)	_	_	_	_	
107-164	12108-12115	Recheck	_	_	_	_	
107-165	12116-12120	Cond	_	_	_	_	
107-166	12120-12121	:	_	_	_	_	
107-167	12122-12123	(	_	_	_	_	
107-168	12123-12127	data	_	_	_	_	
107-169	12128-12129	?	_	_	_	_	

#Text=| '{braille,hardcover}'::text[])
#Text=Heap Blocks: exact=2
#Text=-> Bitmap Index Scan on datagin (cost=0.00..16.50 rows=1000 width=0) (actual time=0.023..0.023 rows=15 loops=1)
#Text=Index Cond: (data ?
108-1	12129-12130	|	_	_	_	_	
108-2	12131-12132	'	_	_	_	_	
108-3	12132-12133	{	_	_	_	_	
108-4	12133-12140	braille	_	_	_	_	
108-5	12140-12141	,	_	_	_	_	
108-6	12141-12150	hardcover	_	_	_	_	
108-7	12150-12151	}	_	_	_	_	
108-8	12151-12152	'	_	_	_	_	
108-9	12152-12153	:	_	_	_	_	
108-10	12153-12154	:	_	_	_	_	
108-11	12154-12158	text	_	_	_	_	
108-12	12158-12159	[	_	_	_	_	
108-13	12159-12160	]	_	_	_	_	
108-14	12160-12161	)	_	_	_	_	
108-15	12162-12166	Heap	_	_	_	_	
108-16	12167-12173	Blocks	_	_	_	_	
108-17	12173-12174	:	_	_	_	_	
108-18	12175-12180	exact	_	_	_	_	
108-19	12180-12181	=	_	_	_	_	
108-20	12181-12182	2	_	_	_	_	
108-21	12183-12184	-	_	_	_	_	
108-22	12184-12185	>	_	_	_	_	
108-23	12186-12192	Bitmap	_	_	_	_	
108-24	12193-12198	Index	_	_	_	_	
108-25	12199-12203	Scan	_	_	_	_	
108-26	12204-12206	on	_	_	_	_	
108-27	12207-12214	datagin	_	_	_	_	
108-28	12215-12216	(	_	_	_	_	
108-29	12216-12220	cost	_	_	_	_	
108-30	12220-12221	=	_	_	_	_	
108-31	12221-12225	0.00	_	_	_	_	
108-32	12225-12226	.	_	_	_	_	
108-33	12226-12232	.16.50	_	_	_	_	
108-34	12233-12237	rows	_	_	_	_	
108-35	12237-12238	=	_	_	_	_	
108-36	12238-12242	1000	_	_	_	_	
108-37	12243-12248	width	_	_	_	_	
108-38	12248-12249	=	_	_	_	_	
108-39	12249-12250	0	_	_	_	_	
108-40	12250-12251	)	_	_	_	_	
108-41	12252-12253	(	_	_	_	_	
108-42	12253-12259	actual	_	_	_	_	
108-43	12260-12264	time	_	_	_	_	
108-44	12264-12265	=	_	_	_	_	
108-45	12265-12270	0.023	_	_	_	_	
108-46	12270-12271	.	_	_	_	_	
108-47	12271-12277	.0.023	_	_	_	_	
108-48	12278-12282	rows	_	_	_	_	
108-49	12282-12283	=	_	_	_	_	
108-50	12283-12285	15	_	_	_	_	
108-51	12286-12291	loops	_	_	_	_	
108-52	12291-12292	=	_	_	_	_	
108-53	12292-12293	1	_	_	_	_	
108-54	12293-12294	)	_	_	_	_	
108-55	12295-12300	Index	_	_	_	_	
108-56	12301-12305	Cond	_	_	_	_	
108-57	12305-12306	:	_	_	_	_	
108-58	12307-12308	(	_	_	_	_	
108-59	12308-12312	data	_	_	_	_	
108-60	12313-12314	?	_	_	_	_	

#Text=| '{braille,hardcover}'::text[])
#Text=Planning Time: 0.138 ms
#Text=Execution Time: 0.057 ms
#Text=(7 rows)
#Text=The GIN index supports the “existence” operators only on “top-level” keys.
109-1	12314-12315	|	_	_	_	_	
109-2	12316-12317	'	_	_	_	_	
109-3	12317-12318	{	_	_	_	_	
109-4	12318-12325	braille	_	_	_	_	
109-5	12325-12326	,	_	_	_	_	
109-6	12326-12335	hardcover	_	_	_	_	
109-7	12335-12336	}	_	_	_	_	
109-8	12336-12337	'	_	_	_	_	
109-9	12337-12338	:	_	_	_	_	
109-10	12338-12339	:	_	_	_	_	
109-11	12339-12343	text	_	_	_	_	
109-12	12343-12344	[	_	_	_	_	
109-13	12344-12345	]	_	_	_	_	
109-14	12345-12346	)	_	_	_	_	
109-15	12347-12355	Planning	_	_	_	_	
109-16	12356-12360	Time	_	_	_	_	
109-17	12360-12361	:	_	_	_	_	
109-18	12362-12367	0.138	_	_	_	_	
109-19	12368-12370	ms	_	_	_	_	
109-20	12371-12380	Execution	_	_	_	_	
109-21	12381-12385	Time	_	_	_	_	
109-22	12385-12386	:	_	_	_	_	
109-23	12387-12392	0.057	_	_	_	_	
109-24	12393-12395	ms	_	_	_	_	
109-25	12396-12397	(	_	_	_	_	
109-26	12397-12398	7	_	_	_	_	
109-27	12399-12403	rows	_	_	_	_	
109-28	12403-12404	)	_	_	_	_	
109-29	12405-12408	The	_	_	_	_	
109-30	12409-12412	GIN	_	_	_	_	
109-31	12413-12418	index	_	_	_	_	
109-32	12419-12427	supports	_	_	_	_	
109-33	12428-12431	the	_	_	_	_	
109-34	12432-12433	“	_	_	_	_	
109-35	12433-12442	existence	_	_	_	_	
109-36	12442-12443	”	_	_	_	_	
109-37	12444-12453	operators	_	_	_	_	
109-38	12454-12458	only	_	_	_	_	
109-39	12459-12461	on	_	_	_	_	
109-40	12462-12463	“	_	_	_	_	
109-41	12463-12472	top-level	_	_	_	_	
109-42	12472-12473	”	_	_	_	_	
109-43	12474-12478	keys	_	_	_	_	
109-44	12478-12479	.	_	_	_	_	

#Text=If the key is not at the top level, then the index will not be used.
110-1	12480-12482	If	_	_	_	_	
110-2	12483-12486	the	_	_	_	_	
110-3	12487-12490	key	_	_	_	_	
110-4	12491-12493	is	_	_	_	_	
110-5	12494-12497	not	_	_	_	_	
110-6	12498-12500	at	_	_	_	_	
110-7	12501-12504	the	_	_	_	_	
110-8	12505-12508	top	_	_	_	_	
110-9	12509-12514	level	_	_	_	_	
110-10	12514-12515	,	_	_	_	_	
110-11	12516-12520	then	_	_	_	_	
110-12	12521-12524	the	_	_	_	_	
110-13	12525-12530	index	_	_	_	_	
110-14	12531-12535	will	_	_	_	_	
110-15	12536-12539	not	_	_	_	_	
110-16	12540-12542	be	_	_	_	_	
110-17	12543-12547	used	_	_	_	_	
110-18	12547-12548	.	_	_	_	_	

#Text=It will result in a sequential scan:
#Text=demo=# select * from books where data->'tags' ?
111-1	12549-12551	It	_	_	_	_	
111-2	12552-12556	will	_	_	_	_	
111-3	12557-12563	result	_	_	_	_	
111-4	12564-12566	in	_	_	_	_	
111-5	12567-12568	a	_	_	_	_	
111-6	12569-12579	sequential	_	_	_	_	
111-7	12580-12584	scan	_	_	_	_	
111-8	12584-12585	:	_	_	_	_	
111-9	12586-12590	demo	_	_	_	_	
111-10	12590-12591	=	_	_	_	_	
111-11	12591-12592	#	_	_	_	_	
111-12	12593-12599	select	_	_	_	_	
111-13	12600-12601	*	_	_	_	_	
111-14	12602-12606	from	_	_	_	_	
111-15	12607-12612	books	_	_	_	_	
111-16	12613-12618	where	_	_	_	_	
111-17	12619-12623	data	_	_	_	_	
111-18	12623-12624	-	_	_	_	_	
111-19	12624-12625	>	_	_	_	_	
111-20	12625-12626	'	_	_	_	_	
111-21	12626-12630	tags	_	_	_	_	
111-22	12630-12631	'	_	_	_	_	
111-23	12632-12633	?	_	_	_	_	

#Text='nk455671';
#Text=id | author | isbn | rating | data
#Text=---------+-----------------+------------+--------+------------------------------------------------------------------------------------------------------------------------------------------------------
#Text=------------------
#Text=1000005 | XEI7xShT8bPu6H7 | 2kD5XJDZUF | 0 | {"tags": {"nk455671": {"ik937456": "iv506075"}}, "braille": true, "keywords": ["abc", "kef", "keh"], "hardcover": false, "publisher": "zSfZIAjGGs", "
#Text=criticrating": 4}
#Text=685122 | GWfuvKfQ1PCe1IL | jnyhYYcF66 | 3 | {"tags": {"nk455671": {"ik615925": "iv253423"}}, "publisher": "b2NwVg7VY3", "criticrating": 0}
#Text=(2 rows)
#Text=demo=# explain analyze select * from books where data->'tags' ?
112-1	12634-12635	'	_	_	_	_	
112-2	12635-12643	nk455671	_	_	_	_	
112-3	12643-12644	'	_	_	_	_	
112-4	12644-12645	;	_	_	_	_	
112-5	12646-12648	id	_	_	_	_	
112-6	12649-12650	|	_	_	_	_	
112-7	12651-12657	author	_	_	_	_	
112-8	12658-12659	|	_	_	_	_	
112-9	12660-12664	isbn	_	_	_	_	
112-10	12665-12666	|	_	_	_	_	
112-11	12667-12673	rating	_	_	_	_	
112-12	12674-12675	|	_	_	_	_	
112-13	12676-12680	data	_	_	_	_	
112-14	12681-12682	-	_	_	_	_	
112-15	12682-12683	-	_	_	_	_	
112-16	12683-12684	-	_	_	_	_	
112-17	12684-12685	-	_	_	_	_	
112-18	12685-12686	-	_	_	_	_	
112-19	12686-12687	-	_	_	_	_	
112-20	12687-12688	-	_	_	_	_	
112-21	12688-12689	-	_	_	_	_	
112-22	12689-12690	-	_	_	_	_	
112-23	12690-12691	+	_	_	_	_	
112-24	12691-12692	-	_	_	_	_	
112-25	12692-12693	-	_	_	_	_	
112-26	12693-12694	-	_	_	_	_	
112-27	12694-12695	-	_	_	_	_	
112-28	12695-12696	-	_	_	_	_	
112-29	12696-12697	-	_	_	_	_	
112-30	12697-12698	-	_	_	_	_	
112-31	12698-12699	-	_	_	_	_	
112-32	12699-12700	-	_	_	_	_	
112-33	12700-12701	-	_	_	_	_	
112-34	12701-12702	-	_	_	_	_	
112-35	12702-12703	-	_	_	_	_	
112-36	12703-12704	-	_	_	_	_	
112-37	12704-12705	-	_	_	_	_	
112-38	12705-12706	-	_	_	_	_	
112-39	12706-12707	-	_	_	_	_	
112-40	12707-12708	-	_	_	_	_	
112-41	12708-12709	+	_	_	_	_	
112-42	12709-12710	-	_	_	_	_	
112-43	12710-12711	-	_	_	_	_	
112-44	12711-12712	-	_	_	_	_	
112-45	12712-12713	-	_	_	_	_	
112-46	12713-12714	-	_	_	_	_	
112-47	12714-12715	-	_	_	_	_	
112-48	12715-12716	-	_	_	_	_	
112-49	12716-12717	-	_	_	_	_	
112-50	12717-12718	-	_	_	_	_	
112-51	12718-12719	-	_	_	_	_	
112-52	12719-12720	-	_	_	_	_	
112-53	12720-12721	-	_	_	_	_	
112-54	12721-12722	+	_	_	_	_	
112-55	12722-12723	-	_	_	_	_	
112-56	12723-12724	-	_	_	_	_	
112-57	12724-12725	-	_	_	_	_	
112-58	12725-12726	-	_	_	_	_	
112-59	12726-12727	-	_	_	_	_	
112-60	12727-12728	-	_	_	_	_	
112-61	12728-12729	-	_	_	_	_	
112-62	12729-12730	-	_	_	_	_	
112-63	12730-12731	+	_	_	_	_	
112-64	12731-12732	-	_	_	_	_	
112-65	12732-12733	-	_	_	_	_	
112-66	12733-12734	-	_	_	_	_	
112-67	12734-12735	-	_	_	_	_	
112-68	12735-12736	-	_	_	_	_	
112-69	12736-12737	-	_	_	_	_	
112-70	12737-12738	-	_	_	_	_	
112-71	12738-12739	-	_	_	_	_	
112-72	12739-12740	-	_	_	_	_	
112-73	12740-12741	-	_	_	_	_	
112-74	12741-12742	-	_	_	_	_	
112-75	12742-12743	-	_	_	_	_	
112-76	12743-12744	-	_	_	_	_	
112-77	12744-12745	-	_	_	_	_	
112-78	12745-12746	-	_	_	_	_	
112-79	12746-12747	-	_	_	_	_	
112-80	12747-12748	-	_	_	_	_	
112-81	12748-12749	-	_	_	_	_	
112-82	12749-12750	-	_	_	_	_	
112-83	12750-12751	-	_	_	_	_	
112-84	12751-12752	-	_	_	_	_	
112-85	12752-12753	-	_	_	_	_	
112-86	12753-12754	-	_	_	_	_	
112-87	12754-12755	-	_	_	_	_	
112-88	12755-12756	-	_	_	_	_	
112-89	12756-12757	-	_	_	_	_	
112-90	12757-12758	-	_	_	_	_	
112-91	12758-12759	-	_	_	_	_	
112-92	12759-12760	-	_	_	_	_	
112-93	12760-12761	-	_	_	_	_	
112-94	12761-12762	-	_	_	_	_	
112-95	12762-12763	-	_	_	_	_	
112-96	12763-12764	-	_	_	_	_	
112-97	12764-12765	-	_	_	_	_	
112-98	12765-12766	-	_	_	_	_	
112-99	12766-12767	-	_	_	_	_	
112-100	12767-12768	-	_	_	_	_	
112-101	12768-12769	-	_	_	_	_	
112-102	12769-12770	-	_	_	_	_	
112-103	12770-12771	-	_	_	_	_	
112-104	12771-12772	-	_	_	_	_	
112-105	12772-12773	-	_	_	_	_	
112-106	12773-12774	-	_	_	_	_	
112-107	12774-12775	-	_	_	_	_	
112-108	12775-12776	-	_	_	_	_	
112-109	12776-12777	-	_	_	_	_	
112-110	12777-12778	-	_	_	_	_	
112-111	12778-12779	-	_	_	_	_	
112-112	12779-12780	-	_	_	_	_	
112-113	12780-12781	-	_	_	_	_	
112-114	12781-12782	-	_	_	_	_	
112-115	12782-12783	-	_	_	_	_	
112-116	12783-12784	-	_	_	_	_	
112-117	12784-12785	-	_	_	_	_	
112-118	12785-12786	-	_	_	_	_	
112-119	12786-12787	-	_	_	_	_	
112-120	12787-12788	-	_	_	_	_	
112-121	12788-12789	-	_	_	_	_	
112-122	12789-12790	-	_	_	_	_	
112-123	12790-12791	-	_	_	_	_	
112-124	12791-12792	-	_	_	_	_	
112-125	12792-12793	-	_	_	_	_	
112-126	12793-12794	-	_	_	_	_	
112-127	12794-12795	-	_	_	_	_	
112-128	12795-12796	-	_	_	_	_	
112-129	12796-12797	-	_	_	_	_	
112-130	12797-12798	-	_	_	_	_	
112-131	12798-12799	-	_	_	_	_	
112-132	12799-12800	-	_	_	_	_	
112-133	12800-12801	-	_	_	_	_	
112-134	12801-12802	-	_	_	_	_	
112-135	12802-12803	-	_	_	_	_	
112-136	12803-12804	-	_	_	_	_	
112-137	12804-12805	-	_	_	_	_	
112-138	12805-12806	-	_	_	_	_	
112-139	12806-12807	-	_	_	_	_	
112-140	12807-12808	-	_	_	_	_	
112-141	12808-12809	-	_	_	_	_	
112-142	12809-12810	-	_	_	_	_	
112-143	12810-12811	-	_	_	_	_	
112-144	12811-12812	-	_	_	_	_	
112-145	12812-12813	-	_	_	_	_	
112-146	12813-12814	-	_	_	_	_	
112-147	12814-12815	-	_	_	_	_	
112-148	12815-12816	-	_	_	_	_	
112-149	12816-12817	-	_	_	_	_	
112-150	12817-12818	-	_	_	_	_	
112-151	12818-12819	-	_	_	_	_	
112-152	12819-12820	-	_	_	_	_	
112-153	12820-12821	-	_	_	_	_	
112-154	12821-12822	-	_	_	_	_	
112-155	12822-12823	-	_	_	_	_	
112-156	12823-12824	-	_	_	_	_	
112-157	12824-12825	-	_	_	_	_	
112-158	12825-12826	-	_	_	_	_	
112-159	12826-12827	-	_	_	_	_	
112-160	12827-12828	-	_	_	_	_	
112-161	12828-12829	-	_	_	_	_	
112-162	12829-12830	-	_	_	_	_	
112-163	12830-12831	-	_	_	_	_	
112-164	12831-12832	-	_	_	_	_	
112-165	12832-12833	-	_	_	_	_	
112-166	12833-12834	-	_	_	_	_	
112-167	12834-12835	-	_	_	_	_	
112-168	12835-12836	-	_	_	_	_	
112-169	12836-12837	-	_	_	_	_	
112-170	12837-12838	-	_	_	_	_	
112-171	12838-12839	-	_	_	_	_	
112-172	12839-12840	-	_	_	_	_	
112-173	12840-12841	-	_	_	_	_	
112-174	12841-12842	-	_	_	_	_	
112-175	12842-12843	-	_	_	_	_	
112-176	12843-12844	-	_	_	_	_	
112-177	12844-12845	-	_	_	_	_	
112-178	12845-12846	-	_	_	_	_	
112-179	12846-12847	-	_	_	_	_	
112-180	12847-12848	-	_	_	_	_	
112-181	12848-12849	-	_	_	_	_	
112-182	12849-12850	-	_	_	_	_	
112-183	12850-12851	-	_	_	_	_	
112-184	12851-12852	-	_	_	_	_	
112-185	12852-12853	-	_	_	_	_	
112-186	12853-12854	-	_	_	_	_	
112-187	12854-12855	-	_	_	_	_	
112-188	12855-12856	-	_	_	_	_	
112-189	12856-12857	-	_	_	_	_	
112-190	12857-12858	-	_	_	_	_	
112-191	12858-12859	-	_	_	_	_	
112-192	12859-12860	-	_	_	_	_	
112-193	12860-12861	-	_	_	_	_	
112-194	12861-12862	-	_	_	_	_	
112-195	12862-12863	-	_	_	_	_	
112-196	12863-12864	-	_	_	_	_	
112-197	12864-12865	-	_	_	_	_	
112-198	12865-12866	-	_	_	_	_	
112-199	12866-12867	-	_	_	_	_	
112-200	12867-12868	-	_	_	_	_	
112-201	12868-12869	-	_	_	_	_	
112-202	12869-12870	-	_	_	_	_	
112-203	12870-12871	-	_	_	_	_	
112-204	12871-12872	-	_	_	_	_	
112-205	12872-12873	-	_	_	_	_	
112-206	12873-12874	-	_	_	_	_	
112-207	12874-12875	-	_	_	_	_	
112-208	12875-12876	-	_	_	_	_	
112-209	12876-12877	-	_	_	_	_	
112-210	12877-12878	-	_	_	_	_	
112-211	12878-12879	-	_	_	_	_	
112-212	12879-12880	-	_	_	_	_	
112-213	12880-12881	-	_	_	_	_	
112-214	12882-12883	-	_	_	_	_	
112-215	12883-12884	-	_	_	_	_	
112-216	12884-12885	-	_	_	_	_	
112-217	12885-12886	-	_	_	_	_	
112-218	12886-12887	-	_	_	_	_	
112-219	12887-12888	-	_	_	_	_	
112-220	12888-12889	-	_	_	_	_	
112-221	12889-12890	-	_	_	_	_	
112-222	12890-12891	-	_	_	_	_	
112-223	12891-12892	-	_	_	_	_	
112-224	12892-12893	-	_	_	_	_	
112-225	12893-12894	-	_	_	_	_	
112-226	12894-12895	-	_	_	_	_	
112-227	12895-12896	-	_	_	_	_	
112-228	12896-12897	-	_	_	_	_	
112-229	12897-12898	-	_	_	_	_	
112-230	12898-12899	-	_	_	_	_	
112-231	12899-12900	-	_	_	_	_	
112-232	12901-12908	1000005	_	_	_	_	
112-233	12909-12910	|	_	_	_	_	
112-234	12911-12926	XEI7xShT8bPu6H7	_	_	_	_	
112-235	12927-12928	|	_	_	_	_	
112-236	12929-12939	2kD5XJDZUF	_	_	_	_	
112-237	12940-12941	|	_	_	_	_	
112-238	12942-12943	0	_	_	_	_	
112-239	12944-12945	|	_	_	_	_	
112-240	12946-12947	{	_	_	_	_	
112-241	12947-12948	"	_	_	_	_	
112-242	12948-12952	tags	_	_	_	_	
112-243	12952-12953	"	_	_	_	_	
112-244	12953-12954	:	_	_	_	_	
112-245	12955-12956	{	_	_	_	_	
112-246	12956-12957	"	_	_	_	_	
112-247	12957-12965	nk455671	_	_	_	_	
112-248	12965-12966	"	_	_	_	_	
112-249	12966-12967	:	_	_	_	_	
112-250	12968-12969	{	_	_	_	_	
112-251	12969-12970	"	_	_	_	_	
112-252	12970-12978	ik937456	_	_	_	_	
112-253	12978-12979	"	_	_	_	_	
112-254	12979-12980	:	_	_	_	_	
112-255	12981-12982	"	_	_	_	_	
112-256	12982-12990	iv506075	_	_	_	_	
112-257	12990-12991	"	_	_	_	_	
112-258	12991-12992	}	_	_	_	_	
112-259	12992-12993	}	_	_	_	_	
112-260	12993-12994	,	_	_	_	_	
112-261	12995-12996	"	_	_	_	_	
112-262	12996-13003	braille	_	_	_	_	
112-263	13003-13004	"	_	_	_	_	
112-264	13004-13005	:	_	_	_	_	
112-265	13006-13010	true	_	_	_	_	
112-266	13010-13011	,	_	_	_	_	
112-267	13012-13013	"	_	_	_	_	
112-268	13013-13021	keywords	_	_	_	_	
112-269	13021-13022	"	_	_	_	_	
112-270	13022-13023	:	_	_	_	_	
112-271	13024-13025	[	_	_	_	_	
112-272	13025-13026	"	_	_	_	_	
112-273	13026-13029	abc	_	_	_	_	
112-274	13029-13030	"	_	_	_	_	
112-275	13030-13031	,	_	_	_	_	
112-276	13032-13033	"	_	_	_	_	
112-277	13033-13036	kef	_	_	_	_	
112-278	13036-13037	"	_	_	_	_	
112-279	13037-13038	,	_	_	_	_	
112-280	13039-13040	"	_	_	_	_	
112-281	13040-13043	keh	_	_	_	_	
112-282	13043-13044	"	_	_	_	_	
112-283	13044-13045	]	_	_	_	_	
112-284	13045-13046	,	_	_	_	_	
112-285	13047-13048	"	_	_	_	_	
112-286	13048-13057	hardcover	_	_	_	_	
112-287	13057-13058	"	_	_	_	_	
112-288	13058-13059	:	_	_	_	_	
112-289	13060-13065	false	_	_	_	_	
112-290	13065-13066	,	_	_	_	_	
112-291	13067-13068	"	_	_	_	_	
112-292	13068-13077	publisher	_	_	_	_	
112-293	13077-13078	"	_	_	_	_	
112-294	13078-13079	:	_	_	_	_	
112-295	13080-13081	"	_	_	_	_	
112-296	13081-13091	zSfZIAjGGs	_	_	_	_	
112-297	13091-13092	"	_	_	_	_	
112-298	13092-13093	,	_	_	_	_	
112-299	13094-13095	"	_	_	_	_	
112-300	13096-13108	criticrating	_	_	_	_	
112-301	13108-13109	"	_	_	_	_	
112-302	13109-13110	:	_	_	_	_	
112-303	13111-13112	4	_	_	_	_	
112-304	13112-13113	}	_	_	_	_	
112-305	13114-13120	685122	_	_	_	_	
112-306	13121-13122	|	_	_	_	_	
112-307	13123-13138	GWfuvKfQ1PCe1IL	_	_	_	_	
112-308	13139-13140	|	_	_	_	_	
112-309	13141-13151	jnyhYYcF66	_	_	_	_	
112-310	13152-13153	|	_	_	_	_	
112-311	13154-13155	3	_	_	_	_	
112-312	13156-13157	|	_	_	_	_	
112-313	13158-13159	{	_	_	_	_	
112-314	13159-13160	"	_	_	_	_	
112-315	13160-13164	tags	_	_	_	_	
112-316	13164-13165	"	_	_	_	_	
112-317	13165-13166	:	_	_	_	_	
112-318	13167-13168	{	_	_	_	_	
112-319	13168-13169	"	_	_	_	_	
112-320	13169-13177	nk455671	_	_	_	_	
112-321	13177-13178	"	_	_	_	_	
112-322	13178-13179	:	_	_	_	_	
112-323	13180-13181	{	_	_	_	_	
112-324	13181-13182	"	_	_	_	_	
112-325	13182-13190	ik615925	_	_	_	_	
112-326	13190-13191	"	_	_	_	_	
112-327	13191-13192	:	_	_	_	_	
112-328	13193-13194	"	_	_	_	_	
112-329	13194-13202	iv253423	_	_	_	_	
112-330	13202-13203	"	_	_	_	_	
112-331	13203-13204	}	_	_	_	_	
112-332	13204-13205	}	_	_	_	_	
112-333	13205-13206	,	_	_	_	_	
112-334	13207-13208	"	_	_	_	_	
112-335	13208-13217	publisher	_	_	_	_	
112-336	13217-13218	"	_	_	_	_	
112-337	13218-13219	:	_	_	_	_	
112-338	13220-13221	"	_	_	_	_	
112-339	13221-13231	b2NwVg7VY3	_	_	_	_	
112-340	13231-13232	"	_	_	_	_	
112-341	13232-13233	,	_	_	_	_	
112-342	13234-13235	"	_	_	_	_	
112-343	13235-13247	criticrating	_	_	_	_	
112-344	13247-13248	"	_	_	_	_	
112-345	13248-13249	:	_	_	_	_	
112-346	13250-13251	0	_	_	_	_	
112-347	13251-13252	}	_	_	_	_	
112-348	13253-13254	(	_	_	_	_	
112-349	13254-13255	2	_	_	_	_	
112-350	13256-13260	rows	_	_	_	_	
112-351	13260-13261	)	_	_	_	_	
112-352	13262-13266	demo	_	_	_	_	
112-353	13266-13267	=	_	_	_	_	
112-354	13267-13268	#	_	_	_	_	
112-355	13269-13276	explain	_	_	_	_	
112-356	13277-13284	analyze	_	_	_	_	
112-357	13285-13291	select	_	_	_	_	
112-358	13292-13293	*	_	_	_	_	
112-359	13294-13298	from	_	_	_	_	
112-360	13299-13304	books	_	_	_	_	
112-361	13305-13310	where	_	_	_	_	
112-362	13311-13315	data	_	_	_	_	
112-363	13315-13316	-	_	_	_	_	
112-364	13316-13317	>	_	_	_	_	
112-365	13317-13318	'	_	_	_	_	
112-366	13318-13322	tags	_	_	_	_	
112-367	13322-13323	'	_	_	_	_	
112-368	13324-13325	?	_	_	_	_	

#Text='nk455671';
#Text=QUERY PLAN
#Text=----------------------------------------------------------------------------------------------------------
#Text=Seq Scan on books (cost=0.00..38807.29 rows=1000 width=158) (actual time=0.018..270.641 rows=2 loops=1)
#Text=Filter: ((data -> 'tags'::text) ?
113-1	13326-13327	'	_	_	_	_	
113-2	13327-13335	nk455671	_	_	_	_	
113-3	13335-13336	'	_	_	_	_	
113-4	13336-13337	;	_	_	_	_	
113-5	13338-13343	QUERY	_	_	_	_	
113-6	13344-13348	PLAN	_	_	_	_	
113-7	13349-13350	-	_	_	_	_	
113-8	13350-13351	-	_	_	_	_	
113-9	13351-13352	-	_	_	_	_	
113-10	13352-13353	-	_	_	_	_	
113-11	13353-13354	-	_	_	_	_	
113-12	13354-13355	-	_	_	_	_	
113-13	13355-13356	-	_	_	_	_	
113-14	13356-13357	-	_	_	_	_	
113-15	13357-13358	-	_	_	_	_	
113-16	13358-13359	-	_	_	_	_	
113-17	13359-13360	-	_	_	_	_	
113-18	13360-13361	-	_	_	_	_	
113-19	13361-13362	-	_	_	_	_	
113-20	13362-13363	-	_	_	_	_	
113-21	13363-13364	-	_	_	_	_	
113-22	13364-13365	-	_	_	_	_	
113-23	13365-13366	-	_	_	_	_	
113-24	13366-13367	-	_	_	_	_	
113-25	13367-13368	-	_	_	_	_	
113-26	13368-13369	-	_	_	_	_	
113-27	13369-13370	-	_	_	_	_	
113-28	13370-13371	-	_	_	_	_	
113-29	13371-13372	-	_	_	_	_	
113-30	13372-13373	-	_	_	_	_	
113-31	13373-13374	-	_	_	_	_	
113-32	13374-13375	-	_	_	_	_	
113-33	13375-13376	-	_	_	_	_	
113-34	13376-13377	-	_	_	_	_	
113-35	13377-13378	-	_	_	_	_	
113-36	13378-13379	-	_	_	_	_	
113-37	13379-13380	-	_	_	_	_	
113-38	13380-13381	-	_	_	_	_	
113-39	13381-13382	-	_	_	_	_	
113-40	13382-13383	-	_	_	_	_	
113-41	13383-13384	-	_	_	_	_	
113-42	13384-13385	-	_	_	_	_	
113-43	13385-13386	-	_	_	_	_	
113-44	13386-13387	-	_	_	_	_	
113-45	13387-13388	-	_	_	_	_	
113-46	13388-13389	-	_	_	_	_	
113-47	13389-13390	-	_	_	_	_	
113-48	13390-13391	-	_	_	_	_	
113-49	13391-13392	-	_	_	_	_	
113-50	13392-13393	-	_	_	_	_	
113-51	13393-13394	-	_	_	_	_	
113-52	13394-13395	-	_	_	_	_	
113-53	13395-13396	-	_	_	_	_	
113-54	13396-13397	-	_	_	_	_	
113-55	13397-13398	-	_	_	_	_	
113-56	13398-13399	-	_	_	_	_	
113-57	13399-13400	-	_	_	_	_	
113-58	13400-13401	-	_	_	_	_	
113-59	13401-13402	-	_	_	_	_	
113-60	13402-13403	-	_	_	_	_	
113-61	13403-13404	-	_	_	_	_	
113-62	13404-13405	-	_	_	_	_	
113-63	13405-13406	-	_	_	_	_	
113-64	13406-13407	-	_	_	_	_	
113-65	13407-13408	-	_	_	_	_	
113-66	13408-13409	-	_	_	_	_	
113-67	13409-13410	-	_	_	_	_	
113-68	13410-13411	-	_	_	_	_	
113-69	13411-13412	-	_	_	_	_	
113-70	13412-13413	-	_	_	_	_	
113-71	13413-13414	-	_	_	_	_	
113-72	13414-13415	-	_	_	_	_	
113-73	13415-13416	-	_	_	_	_	
113-74	13416-13417	-	_	_	_	_	
113-75	13417-13418	-	_	_	_	_	
113-76	13418-13419	-	_	_	_	_	
113-77	13419-13420	-	_	_	_	_	
113-78	13420-13421	-	_	_	_	_	
113-79	13421-13422	-	_	_	_	_	
113-80	13422-13423	-	_	_	_	_	
113-81	13423-13424	-	_	_	_	_	
113-82	13424-13425	-	_	_	_	_	
113-83	13425-13426	-	_	_	_	_	
113-84	13426-13427	-	_	_	_	_	
113-85	13427-13428	-	_	_	_	_	
113-86	13428-13429	-	_	_	_	_	
113-87	13429-13430	-	_	_	_	_	
113-88	13430-13431	-	_	_	_	_	
113-89	13431-13432	-	_	_	_	_	
113-90	13432-13433	-	_	_	_	_	
113-91	13433-13434	-	_	_	_	_	
113-92	13434-13435	-	_	_	_	_	
113-93	13435-13436	-	_	_	_	_	
113-94	13436-13437	-	_	_	_	_	
113-95	13437-13438	-	_	_	_	_	
113-96	13438-13439	-	_	_	_	_	
113-97	13439-13440	-	_	_	_	_	
113-98	13440-13441	-	_	_	_	_	
113-99	13441-13442	-	_	_	_	_	
113-100	13442-13443	-	_	_	_	_	
113-101	13443-13444	-	_	_	_	_	
113-102	13444-13445	-	_	_	_	_	
113-103	13445-13446	-	_	_	_	_	
113-104	13446-13447	-	_	_	_	_	
113-105	13447-13448	-	_	_	_	_	
113-106	13448-13449	-	_	_	_	_	
113-107	13449-13450	-	_	_	_	_	
113-108	13450-13451	-	_	_	_	_	
113-109	13451-13452	-	_	_	_	_	
113-110	13452-13453	-	_	_	_	_	
113-111	13453-13454	-	_	_	_	_	
113-112	13454-13455	-	_	_	_	_	
113-113	13456-13459	Seq	_	_	_	_	
113-114	13460-13464	Scan	_	_	_	_	
113-115	13465-13467	on	_	_	_	_	
113-116	13468-13473	books	_	_	_	_	
113-117	13474-13475	(	_	_	_	_	
113-118	13475-13479	cost	_	_	_	_	
113-119	13479-13480	=	_	_	_	_	
113-120	13480-13484	0.00	_	_	_	_	
113-121	13484-13485	.	_	_	_	_	
113-122	13485-13494	.38807.29	_	_	_	_	
113-123	13495-13499	rows	_	_	_	_	
113-124	13499-13500	=	_	_	_	_	
113-125	13500-13504	1000	_	_	_	_	
113-126	13505-13510	width	_	_	_	_	
113-127	13510-13511	=	_	_	_	_	
113-128	13511-13514	158	_	_	_	_	
113-129	13514-13515	)	_	_	_	_	
113-130	13516-13517	(	_	_	_	_	
113-131	13517-13523	actual	_	_	_	_	
113-132	13524-13528	time	_	_	_	_	
113-133	13528-13529	=	_	_	_	_	
113-134	13529-13534	0.018	_	_	_	_	
113-135	13534-13535	.	_	_	_	_	
113-136	13535-13543	.270.641	_	_	_	_	
113-137	13544-13548	rows	_	_	_	_	
113-138	13548-13549	=	_	_	_	_	
113-139	13549-13550	2	_	_	_	_	
113-140	13551-13556	loops	_	_	_	_	
113-141	13556-13557	=	_	_	_	_	
113-142	13557-13558	1	_	_	_	_	
113-143	13558-13559	)	_	_	_	_	
113-144	13560-13566	Filter	_	_	_	_	
113-145	13566-13567	:	_	_	_	_	
113-146	13568-13569	(	_	_	_	_	
113-147	13569-13570	(	_	_	_	_	
113-148	13570-13574	data	_	_	_	_	
113-149	13575-13576	-	_	_	_	_	
113-150	13576-13577	>	_	_	_	_	
113-151	13578-13579	'	_	_	_	_	
113-152	13579-13583	tags	_	_	_	_	
113-153	13583-13584	'	_	_	_	_	
113-154	13584-13585	:	_	_	_	_	
113-155	13585-13586	:	_	_	_	_	
113-156	13586-13590	text	_	_	_	_	
113-157	13590-13591	)	_	_	_	_	
113-158	13592-13593	?	_	_	_	_	

#Text='nk455671'::text)
#Text=Rows Removed by Filter: 1000017
#Text=Planning Time: 0.078 ms
#Text=Execution Time: 270.728 ms
#Text=(5 rows)
#Text=The way to check for existence in nested docs is to use “expression indexes”.
114-1	13594-13595	'	_	_	_	_	
114-2	13595-13603	nk455671	_	_	_	_	
114-3	13603-13604	'	_	_	_	_	
114-4	13604-13605	:	_	_	_	_	
114-5	13605-13606	:	_	_	_	_	
114-6	13606-13610	text	_	_	_	_	
114-7	13610-13611	)	_	_	_	_	
114-8	13612-13616	Rows	_	_	_	_	
114-9	13617-13624	Removed	_	_	_	_	
114-10	13625-13627	by	_	_	_	_	
114-11	13628-13634	Filter	_	_	_	_	
114-12	13634-13635	:	_	_	_	_	
114-13	13636-13643	1000017	_	_	_	_	
114-14	13644-13652	Planning	_	_	_	_	
114-15	13653-13657	Time	_	_	_	_	
114-16	13657-13658	:	_	_	_	_	
114-17	13659-13664	0.078	_	_	_	_	
114-18	13665-13667	ms	_	_	_	_	
114-19	13668-13677	Execution	_	_	_	_	
114-20	13678-13682	Time	_	_	_	_	
114-21	13682-13683	:	_	_	_	_	
114-22	13684-13691	270.728	_	_	_	_	
114-23	13692-13694	ms	_	_	_	_	
114-24	13695-13696	(	_	_	_	_	
114-25	13696-13697	5	_	_	_	_	
114-26	13698-13702	rows	_	_	_	_	
114-27	13702-13703	)	_	_	_	_	
114-28	13704-13707	The	_	_	_	_	
114-29	13708-13711	way	_	_	_	_	
114-30	13712-13714	to	_	_	_	_	
114-31	13715-13720	check	_	_	_	_	
114-32	13721-13724	for	_	_	_	_	
114-33	13725-13734	existence	_	_	_	_	
114-34	13735-13737	in	_	_	_	_	
114-35	13738-13744	nested	_	_	_	_	
114-36	13745-13749	docs	_	_	_	_	
114-37	13750-13752	is	_	_	_	_	
114-38	13753-13755	to	_	_	_	_	
114-39	13756-13759	use	_	_	_	_	
114-40	13760-13761	“	_	_	_	_	
114-41	13761-13771	expression	_	_	_	_	
114-42	13772-13779	indexes	_	_	_	_	
114-43	13779-13780	”	_	_	_	_	
114-44	13780-13781	.	_	_	_	_	

#Text=Let’s create an index on data->tags:
#Text=CREATE INDEX datatagsgin ON books USING gin (data->'tags');
#Text=demo=# select * from books where data->'tags' ?
115-1	13782-13785	Let	_	_	_	_	
115-2	13785-13786	’	_	_	_	_	
115-3	13786-13787	s	_	_	_	_	
115-4	13788-13794	create	_	_	_	_	
115-5	13795-13797	an	_	_	_	_	
115-6	13798-13803	index	_	_	_	_	
115-7	13804-13806	on	_	_	_	_	
115-8	13807-13811	data	_	_	_	_	
115-9	13811-13812	-	_	_	_	_	
115-10	13812-13813	>	_	_	_	_	
115-11	13813-13817	tags	_	_	_	_	
115-12	13817-13818	:	_	_	_	_	
115-13	13819-13825	CREATE	_	_	_	_	
115-14	13826-13831	INDEX	_	_	_	_	
115-15	13832-13843	datatagsgin	_	_	_	_	
115-16	13844-13846	ON	_	_	_	_	
115-17	13847-13852	books	_	_	_	_	
115-18	13853-13858	USING	_	_	_	_	
115-19	13859-13862	gin	_	_	_	_	
115-20	13863-13864	(	_	_	_	_	
115-21	13864-13868	data	_	_	_	_	
115-22	13868-13869	-	_	_	_	_	
115-23	13869-13870	>	_	_	_	_	
115-24	13870-13871	'	_	_	_	_	
115-25	13871-13875	tags	_	_	_	_	
115-26	13875-13876	'	_	_	_	_	
115-27	13876-13877	)	_	_	_	_	
115-28	13877-13878	;	_	_	_	_	
115-29	13879-13883	demo	_	_	_	_	
115-30	13883-13884	=	_	_	_	_	
115-31	13884-13885	#	_	_	_	_	
115-32	13886-13892	select	_	_	_	_	
115-33	13893-13894	*	_	_	_	_	
115-34	13895-13899	from	_	_	_	_	
115-35	13900-13905	books	_	_	_	_	
115-36	13906-13911	where	_	_	_	_	
115-37	13912-13916	data	_	_	_	_	
115-38	13916-13917	-	_	_	_	_	
115-39	13917-13918	>	_	_	_	_	
115-40	13918-13919	'	_	_	_	_	
115-41	13919-13923	tags	_	_	_	_	
115-42	13923-13924	'	_	_	_	_	
115-43	13925-13926	?	_	_	_	_	

#Text='nk455671';
#Text=id | author | isbn | rating | data
#Text=---------+-----------------+------------+--------+------------------------------------------------------------------------------------------------------------------------------------------------------
#Text=------------------
#Text=1000005 | XEI7xShT8bPu6H7 | 2kD5XJDZUF | 0 | {"tags": {"nk455671": {"ik937456": "iv506075"}}, "braille": true, "keywords": ["abc", "kef", "keh"], "hardcover": false, "publisher": "zSfZIAjGGs", "
#Text=criticrating": 4}
#Text=685122 | GWfuvKfQ1PCe1IL | jnyhYYcF66 | 3 | {"tags": {"nk455671": {"ik615925": "iv253423"}}, "publisher": "b2NwVg7VY3", "criticrating": 0}
#Text=(2 rows)
#Text=demo=# explain analyze select * from books where data->'tags' ?
116-1	13927-13928	'	_	_	_	_	
116-2	13928-13936	nk455671	_	_	_	_	
116-3	13936-13937	'	_	_	_	_	
116-4	13937-13938	;	_	_	_	_	
116-5	13939-13941	id	_	_	_	_	
116-6	13942-13943	|	_	_	_	_	
116-7	13944-13950	author	_	_	_	_	
116-8	13951-13952	|	_	_	_	_	
116-9	13953-13957	isbn	_	_	_	_	
116-10	13958-13959	|	_	_	_	_	
116-11	13960-13966	rating	_	_	_	_	
116-12	13967-13968	|	_	_	_	_	
116-13	13969-13973	data	_	_	_	_	
116-14	13974-13975	-	_	_	_	_	
116-15	13975-13976	-	_	_	_	_	
116-16	13976-13977	-	_	_	_	_	
116-17	13977-13978	-	_	_	_	_	
116-18	13978-13979	-	_	_	_	_	
116-19	13979-13980	-	_	_	_	_	
116-20	13980-13981	-	_	_	_	_	
116-21	13981-13982	-	_	_	_	_	
116-22	13982-13983	-	_	_	_	_	
116-23	13983-13984	+	_	_	_	_	
116-24	13984-13985	-	_	_	_	_	
116-25	13985-13986	-	_	_	_	_	
116-26	13986-13987	-	_	_	_	_	
116-27	13987-13988	-	_	_	_	_	
116-28	13988-13989	-	_	_	_	_	
116-29	13989-13990	-	_	_	_	_	
116-30	13990-13991	-	_	_	_	_	
116-31	13991-13992	-	_	_	_	_	
116-32	13992-13993	-	_	_	_	_	
116-33	13993-13994	-	_	_	_	_	
116-34	13994-13995	-	_	_	_	_	
116-35	13995-13996	-	_	_	_	_	
116-36	13996-13997	-	_	_	_	_	
116-37	13997-13998	-	_	_	_	_	
116-38	13998-13999	-	_	_	_	_	
116-39	13999-14000	-	_	_	_	_	
116-40	14000-14001	-	_	_	_	_	
116-41	14001-14002	+	_	_	_	_	
116-42	14002-14003	-	_	_	_	_	
116-43	14003-14004	-	_	_	_	_	
116-44	14004-14005	-	_	_	_	_	
116-45	14005-14006	-	_	_	_	_	
116-46	14006-14007	-	_	_	_	_	
116-47	14007-14008	-	_	_	_	_	
116-48	14008-14009	-	_	_	_	_	
116-49	14009-14010	-	_	_	_	_	
116-50	14010-14011	-	_	_	_	_	
116-51	14011-14012	-	_	_	_	_	
116-52	14012-14013	-	_	_	_	_	
116-53	14013-14014	-	_	_	_	_	
116-54	14014-14015	+	_	_	_	_	
116-55	14015-14016	-	_	_	_	_	
116-56	14016-14017	-	_	_	_	_	
116-57	14017-14018	-	_	_	_	_	
116-58	14018-14019	-	_	_	_	_	
116-59	14019-14020	-	_	_	_	_	
116-60	14020-14021	-	_	_	_	_	
116-61	14021-14022	-	_	_	_	_	
116-62	14022-14023	-	_	_	_	_	
116-63	14023-14024	+	_	_	_	_	
116-64	14024-14025	-	_	_	_	_	
116-65	14025-14026	-	_	_	_	_	
116-66	14026-14027	-	_	_	_	_	
116-67	14027-14028	-	_	_	_	_	
116-68	14028-14029	-	_	_	_	_	
116-69	14029-14030	-	_	_	_	_	
116-70	14030-14031	-	_	_	_	_	
116-71	14031-14032	-	_	_	_	_	
116-72	14032-14033	-	_	_	_	_	
116-73	14033-14034	-	_	_	_	_	
116-74	14034-14035	-	_	_	_	_	
116-75	14035-14036	-	_	_	_	_	
116-76	14036-14037	-	_	_	_	_	
116-77	14037-14038	-	_	_	_	_	
116-78	14038-14039	-	_	_	_	_	
116-79	14039-14040	-	_	_	_	_	
116-80	14040-14041	-	_	_	_	_	
116-81	14041-14042	-	_	_	_	_	
116-82	14042-14043	-	_	_	_	_	
116-83	14043-14044	-	_	_	_	_	
116-84	14044-14045	-	_	_	_	_	
116-85	14045-14046	-	_	_	_	_	
116-86	14046-14047	-	_	_	_	_	
116-87	14047-14048	-	_	_	_	_	
116-88	14048-14049	-	_	_	_	_	
116-89	14049-14050	-	_	_	_	_	
116-90	14050-14051	-	_	_	_	_	
116-91	14051-14052	-	_	_	_	_	
116-92	14052-14053	-	_	_	_	_	
116-93	14053-14054	-	_	_	_	_	
116-94	14054-14055	-	_	_	_	_	
116-95	14055-14056	-	_	_	_	_	
116-96	14056-14057	-	_	_	_	_	
116-97	14057-14058	-	_	_	_	_	
116-98	14058-14059	-	_	_	_	_	
116-99	14059-14060	-	_	_	_	_	
116-100	14060-14061	-	_	_	_	_	
116-101	14061-14062	-	_	_	_	_	
116-102	14062-14063	-	_	_	_	_	
116-103	14063-14064	-	_	_	_	_	
116-104	14064-14065	-	_	_	_	_	
116-105	14065-14066	-	_	_	_	_	
116-106	14066-14067	-	_	_	_	_	
116-107	14067-14068	-	_	_	_	_	
116-108	14068-14069	-	_	_	_	_	
116-109	14069-14070	-	_	_	_	_	
116-110	14070-14071	-	_	_	_	_	
116-111	14071-14072	-	_	_	_	_	
116-112	14072-14073	-	_	_	_	_	
116-113	14073-14074	-	_	_	_	_	
116-114	14074-14075	-	_	_	_	_	
116-115	14075-14076	-	_	_	_	_	
116-116	14076-14077	-	_	_	_	_	
116-117	14077-14078	-	_	_	_	_	
116-118	14078-14079	-	_	_	_	_	
116-119	14079-14080	-	_	_	_	_	
116-120	14080-14081	-	_	_	_	_	
116-121	14081-14082	-	_	_	_	_	
116-122	14082-14083	-	_	_	_	_	
116-123	14083-14084	-	_	_	_	_	
116-124	14084-14085	-	_	_	_	_	
116-125	14085-14086	-	_	_	_	_	
116-126	14086-14087	-	_	_	_	_	
116-127	14087-14088	-	_	_	_	_	
116-128	14088-14089	-	_	_	_	_	
116-129	14089-14090	-	_	_	_	_	
116-130	14090-14091	-	_	_	_	_	
116-131	14091-14092	-	_	_	_	_	
116-132	14092-14093	-	_	_	_	_	
116-133	14093-14094	-	_	_	_	_	
116-134	14094-14095	-	_	_	_	_	
116-135	14095-14096	-	_	_	_	_	
116-136	14096-14097	-	_	_	_	_	
116-137	14097-14098	-	_	_	_	_	
116-138	14098-14099	-	_	_	_	_	
116-139	14099-14100	-	_	_	_	_	
116-140	14100-14101	-	_	_	_	_	
116-141	14101-14102	-	_	_	_	_	
116-142	14102-14103	-	_	_	_	_	
116-143	14103-14104	-	_	_	_	_	
116-144	14104-14105	-	_	_	_	_	
116-145	14105-14106	-	_	_	_	_	
116-146	14106-14107	-	_	_	_	_	
116-147	14107-14108	-	_	_	_	_	
116-148	14108-14109	-	_	_	_	_	
116-149	14109-14110	-	_	_	_	_	
116-150	14110-14111	-	_	_	_	_	
116-151	14111-14112	-	_	_	_	_	
116-152	14112-14113	-	_	_	_	_	
116-153	14113-14114	-	_	_	_	_	
116-154	14114-14115	-	_	_	_	_	
116-155	14115-14116	-	_	_	_	_	
116-156	14116-14117	-	_	_	_	_	
116-157	14117-14118	-	_	_	_	_	
116-158	14118-14119	-	_	_	_	_	
116-159	14119-14120	-	_	_	_	_	
116-160	14120-14121	-	_	_	_	_	
116-161	14121-14122	-	_	_	_	_	
116-162	14122-14123	-	_	_	_	_	
116-163	14123-14124	-	_	_	_	_	
116-164	14124-14125	-	_	_	_	_	
116-165	14125-14126	-	_	_	_	_	
116-166	14126-14127	-	_	_	_	_	
116-167	14127-14128	-	_	_	_	_	
116-168	14128-14129	-	_	_	_	_	
116-169	14129-14130	-	_	_	_	_	
116-170	14130-14131	-	_	_	_	_	
116-171	14131-14132	-	_	_	_	_	
116-172	14132-14133	-	_	_	_	_	
116-173	14133-14134	-	_	_	_	_	
116-174	14134-14135	-	_	_	_	_	
116-175	14135-14136	-	_	_	_	_	
116-176	14136-14137	-	_	_	_	_	
116-177	14137-14138	-	_	_	_	_	
116-178	14138-14139	-	_	_	_	_	
116-179	14139-14140	-	_	_	_	_	
116-180	14140-14141	-	_	_	_	_	
116-181	14141-14142	-	_	_	_	_	
116-182	14142-14143	-	_	_	_	_	
116-183	14143-14144	-	_	_	_	_	
116-184	14144-14145	-	_	_	_	_	
116-185	14145-14146	-	_	_	_	_	
116-186	14146-14147	-	_	_	_	_	
116-187	14147-14148	-	_	_	_	_	
116-188	14148-14149	-	_	_	_	_	
116-189	14149-14150	-	_	_	_	_	
116-190	14150-14151	-	_	_	_	_	
116-191	14151-14152	-	_	_	_	_	
116-192	14152-14153	-	_	_	_	_	
116-193	14153-14154	-	_	_	_	_	
116-194	14154-14155	-	_	_	_	_	
116-195	14155-14156	-	_	_	_	_	
116-196	14156-14157	-	_	_	_	_	
116-197	14157-14158	-	_	_	_	_	
116-198	14158-14159	-	_	_	_	_	
116-199	14159-14160	-	_	_	_	_	
116-200	14160-14161	-	_	_	_	_	
116-201	14161-14162	-	_	_	_	_	
116-202	14162-14163	-	_	_	_	_	
116-203	14163-14164	-	_	_	_	_	
116-204	14164-14165	-	_	_	_	_	
116-205	14165-14166	-	_	_	_	_	
116-206	14166-14167	-	_	_	_	_	
116-207	14167-14168	-	_	_	_	_	
116-208	14168-14169	-	_	_	_	_	
116-209	14169-14170	-	_	_	_	_	
116-210	14170-14171	-	_	_	_	_	
116-211	14171-14172	-	_	_	_	_	
116-212	14172-14173	-	_	_	_	_	
116-213	14173-14174	-	_	_	_	_	
116-214	14175-14176	-	_	_	_	_	
116-215	14176-14177	-	_	_	_	_	
116-216	14177-14178	-	_	_	_	_	
116-217	14178-14179	-	_	_	_	_	
116-218	14179-14180	-	_	_	_	_	
116-219	14180-14181	-	_	_	_	_	
116-220	14181-14182	-	_	_	_	_	
116-221	14182-14183	-	_	_	_	_	
116-222	14183-14184	-	_	_	_	_	
116-223	14184-14185	-	_	_	_	_	
116-224	14185-14186	-	_	_	_	_	
116-225	14186-14187	-	_	_	_	_	
116-226	14187-14188	-	_	_	_	_	
116-227	14188-14189	-	_	_	_	_	
116-228	14189-14190	-	_	_	_	_	
116-229	14190-14191	-	_	_	_	_	
116-230	14191-14192	-	_	_	_	_	
116-231	14192-14193	-	_	_	_	_	
116-232	14194-14201	1000005	_	_	_	_	
116-233	14202-14203	|	_	_	_	_	
116-234	14204-14219	XEI7xShT8bPu6H7	_	_	_	_	
116-235	14220-14221	|	_	_	_	_	
116-236	14222-14232	2kD5XJDZUF	_	_	_	_	
116-237	14233-14234	|	_	_	_	_	
116-238	14235-14236	0	_	_	_	_	
116-239	14237-14238	|	_	_	_	_	
116-240	14239-14240	{	_	_	_	_	
116-241	14240-14241	"	_	_	_	_	
116-242	14241-14245	tags	_	_	_	_	
116-243	14245-14246	"	_	_	_	_	
116-244	14246-14247	:	_	_	_	_	
116-245	14248-14249	{	_	_	_	_	
116-246	14249-14250	"	_	_	_	_	
116-247	14250-14258	nk455671	_	_	_	_	
116-248	14258-14259	"	_	_	_	_	
116-249	14259-14260	:	_	_	_	_	
116-250	14261-14262	{	_	_	_	_	
116-251	14262-14263	"	_	_	_	_	
116-252	14263-14271	ik937456	_	_	_	_	
116-253	14271-14272	"	_	_	_	_	
116-254	14272-14273	:	_	_	_	_	
116-255	14274-14275	"	_	_	_	_	
116-256	14275-14283	iv506075	_	_	_	_	
116-257	14283-14284	"	_	_	_	_	
116-258	14284-14285	}	_	_	_	_	
116-259	14285-14286	}	_	_	_	_	
116-260	14286-14287	,	_	_	_	_	
116-261	14288-14289	"	_	_	_	_	
116-262	14289-14296	braille	_	_	_	_	
116-263	14296-14297	"	_	_	_	_	
116-264	14297-14298	:	_	_	_	_	
116-265	14299-14303	true	_	_	_	_	
116-266	14303-14304	,	_	_	_	_	
116-267	14305-14306	"	_	_	_	_	
116-268	14306-14314	keywords	_	_	_	_	
116-269	14314-14315	"	_	_	_	_	
116-270	14315-14316	:	_	_	_	_	
116-271	14317-14318	[	_	_	_	_	
116-272	14318-14319	"	_	_	_	_	
116-273	14319-14322	abc	_	_	_	_	
116-274	14322-14323	"	_	_	_	_	
116-275	14323-14324	,	_	_	_	_	
116-276	14325-14326	"	_	_	_	_	
116-277	14326-14329	kef	_	_	_	_	
116-278	14329-14330	"	_	_	_	_	
116-279	14330-14331	,	_	_	_	_	
116-280	14332-14333	"	_	_	_	_	
116-281	14333-14336	keh	_	_	_	_	
116-282	14336-14337	"	_	_	_	_	
116-283	14337-14338	]	_	_	_	_	
116-284	14338-14339	,	_	_	_	_	
116-285	14340-14341	"	_	_	_	_	
116-286	14341-14350	hardcover	_	_	_	_	
116-287	14350-14351	"	_	_	_	_	
116-288	14351-14352	:	_	_	_	_	
116-289	14353-14358	false	_	_	_	_	
116-290	14358-14359	,	_	_	_	_	
116-291	14360-14361	"	_	_	_	_	
116-292	14361-14370	publisher	_	_	_	_	
116-293	14370-14371	"	_	_	_	_	
116-294	14371-14372	:	_	_	_	_	
116-295	14373-14374	"	_	_	_	_	
116-296	14374-14384	zSfZIAjGGs	_	_	_	_	
116-297	14384-14385	"	_	_	_	_	
116-298	14385-14386	,	_	_	_	_	
116-299	14387-14388	"	_	_	_	_	
116-300	14389-14401	criticrating	_	_	_	_	
116-301	14401-14402	"	_	_	_	_	
116-302	14402-14403	:	_	_	_	_	
116-303	14404-14405	4	_	_	_	_	
116-304	14405-14406	}	_	_	_	_	
116-305	14407-14413	685122	_	_	_	_	
116-306	14414-14415	|	_	_	_	_	
116-307	14416-14431	GWfuvKfQ1PCe1IL	_	_	_	_	
116-308	14432-14433	|	_	_	_	_	
116-309	14434-14444	jnyhYYcF66	_	_	_	_	
116-310	14445-14446	|	_	_	_	_	
116-311	14447-14448	3	_	_	_	_	
116-312	14449-14450	|	_	_	_	_	
116-313	14451-14452	{	_	_	_	_	
116-314	14452-14453	"	_	_	_	_	
116-315	14453-14457	tags	_	_	_	_	
116-316	14457-14458	"	_	_	_	_	
116-317	14458-14459	:	_	_	_	_	
116-318	14460-14461	{	_	_	_	_	
116-319	14461-14462	"	_	_	_	_	
116-320	14462-14470	nk455671	_	_	_	_	
116-321	14470-14471	"	_	_	_	_	
116-322	14471-14472	:	_	_	_	_	
116-323	14473-14474	{	_	_	_	_	
116-324	14474-14475	"	_	_	_	_	
116-325	14475-14483	ik615925	_	_	_	_	
116-326	14483-14484	"	_	_	_	_	
116-327	14484-14485	:	_	_	_	_	
116-328	14486-14487	"	_	_	_	_	
116-329	14487-14495	iv253423	_	_	_	_	
116-330	14495-14496	"	_	_	_	_	
116-331	14496-14497	}	_	_	_	_	
116-332	14497-14498	}	_	_	_	_	
116-333	14498-14499	,	_	_	_	_	
116-334	14500-14501	"	_	_	_	_	
116-335	14501-14510	publisher	_	_	_	_	
116-336	14510-14511	"	_	_	_	_	
116-337	14511-14512	:	_	_	_	_	
116-338	14513-14514	"	_	_	_	_	
116-339	14514-14524	b2NwVg7VY3	_	_	_	_	
116-340	14524-14525	"	_	_	_	_	
116-341	14525-14526	,	_	_	_	_	
116-342	14527-14528	"	_	_	_	_	
116-343	14528-14540	criticrating	_	_	_	_	
116-344	14540-14541	"	_	_	_	_	
116-345	14541-14542	:	_	_	_	_	
116-346	14543-14544	0	_	_	_	_	
116-347	14544-14545	}	_	_	_	_	
116-348	14546-14547	(	_	_	_	_	
116-349	14547-14548	2	_	_	_	_	
116-350	14549-14553	rows	_	_	_	_	
116-351	14553-14554	)	_	_	_	_	
116-352	14555-14559	demo	_	_	_	_	
116-353	14559-14560	=	_	_	_	_	
116-354	14560-14561	#	_	_	_	_	
116-355	14562-14569	explain	_	_	_	_	
116-356	14570-14577	analyze	_	_	_	_	
116-357	14578-14584	select	_	_	_	_	
116-358	14585-14586	*	_	_	_	_	
116-359	14587-14591	from	_	_	_	_	
116-360	14592-14597	books	_	_	_	_	
116-361	14598-14603	where	_	_	_	_	
116-362	14604-14608	data	_	_	_	_	
116-363	14608-14609	-	_	_	_	_	
116-364	14609-14610	>	_	_	_	_	
116-365	14610-14611	'	_	_	_	_	
116-366	14611-14615	tags	_	_	_	_	
116-367	14615-14616	'	_	_	_	_	
116-368	14617-14618	?	_	_	_	_	

#Text='nk455671';
#Text=QUERY PLAN
#Text=------------------------------------------------------------------------------------------------------------------------
#Text=Bitmap Heap Scan on books (cost=12.75..1007.75 rows=1000 width=158) (actual time=0.031..0.035 rows=2 loops=1)
#Text=Recheck Cond: ((data ->'tags'::text) ?
117-1	14619-14620	'	_	_	_	_	
117-2	14620-14628	nk455671	_	_	_	_	
117-3	14628-14629	'	_	_	_	_	
117-4	14629-14630	;	_	_	_	_	
117-5	14631-14636	QUERY	_	_	_	_	
117-6	14637-14641	PLAN	_	_	_	_	
117-7	14642-14643	-	_	_	_	_	
117-8	14643-14644	-	_	_	_	_	
117-9	14644-14645	-	_	_	_	_	
117-10	14645-14646	-	_	_	_	_	
117-11	14646-14647	-	_	_	_	_	
117-12	14647-14648	-	_	_	_	_	
117-13	14648-14649	-	_	_	_	_	
117-14	14649-14650	-	_	_	_	_	
117-15	14650-14651	-	_	_	_	_	
117-16	14651-14652	-	_	_	_	_	
117-17	14652-14653	-	_	_	_	_	
117-18	14653-14654	-	_	_	_	_	
117-19	14654-14655	-	_	_	_	_	
117-20	14655-14656	-	_	_	_	_	
117-21	14656-14657	-	_	_	_	_	
117-22	14657-14658	-	_	_	_	_	
117-23	14658-14659	-	_	_	_	_	
117-24	14659-14660	-	_	_	_	_	
117-25	14660-14661	-	_	_	_	_	
117-26	14661-14662	-	_	_	_	_	
117-27	14662-14663	-	_	_	_	_	
117-28	14663-14664	-	_	_	_	_	
117-29	14664-14665	-	_	_	_	_	
117-30	14665-14666	-	_	_	_	_	
117-31	14666-14667	-	_	_	_	_	
117-32	14667-14668	-	_	_	_	_	
117-33	14668-14669	-	_	_	_	_	
117-34	14669-14670	-	_	_	_	_	
117-35	14670-14671	-	_	_	_	_	
117-36	14671-14672	-	_	_	_	_	
117-37	14672-14673	-	_	_	_	_	
117-38	14673-14674	-	_	_	_	_	
117-39	14674-14675	-	_	_	_	_	
117-40	14675-14676	-	_	_	_	_	
117-41	14676-14677	-	_	_	_	_	
117-42	14677-14678	-	_	_	_	_	
117-43	14678-14679	-	_	_	_	_	
117-44	14679-14680	-	_	_	_	_	
117-45	14680-14681	-	_	_	_	_	
117-46	14681-14682	-	_	_	_	_	
117-47	14682-14683	-	_	_	_	_	
117-48	14683-14684	-	_	_	_	_	
117-49	14684-14685	-	_	_	_	_	
117-50	14685-14686	-	_	_	_	_	
117-51	14686-14687	-	_	_	_	_	
117-52	14687-14688	-	_	_	_	_	
117-53	14688-14689	-	_	_	_	_	
117-54	14689-14690	-	_	_	_	_	
117-55	14690-14691	-	_	_	_	_	
117-56	14691-14692	-	_	_	_	_	
117-57	14692-14693	-	_	_	_	_	
117-58	14693-14694	-	_	_	_	_	
117-59	14694-14695	-	_	_	_	_	
117-60	14695-14696	-	_	_	_	_	
117-61	14696-14697	-	_	_	_	_	
117-62	14697-14698	-	_	_	_	_	
117-63	14698-14699	-	_	_	_	_	
117-64	14699-14700	-	_	_	_	_	
117-65	14700-14701	-	_	_	_	_	
117-66	14701-14702	-	_	_	_	_	
117-67	14702-14703	-	_	_	_	_	
117-68	14703-14704	-	_	_	_	_	
117-69	14704-14705	-	_	_	_	_	
117-70	14705-14706	-	_	_	_	_	
117-71	14706-14707	-	_	_	_	_	
117-72	14707-14708	-	_	_	_	_	
117-73	14708-14709	-	_	_	_	_	
117-74	14709-14710	-	_	_	_	_	
117-75	14710-14711	-	_	_	_	_	
117-76	14711-14712	-	_	_	_	_	
117-77	14712-14713	-	_	_	_	_	
117-78	14713-14714	-	_	_	_	_	
117-79	14714-14715	-	_	_	_	_	
117-80	14715-14716	-	_	_	_	_	
117-81	14716-14717	-	_	_	_	_	
117-82	14717-14718	-	_	_	_	_	
117-83	14718-14719	-	_	_	_	_	
117-84	14719-14720	-	_	_	_	_	
117-85	14720-14721	-	_	_	_	_	
117-86	14721-14722	-	_	_	_	_	
117-87	14722-14723	-	_	_	_	_	
117-88	14723-14724	-	_	_	_	_	
117-89	14724-14725	-	_	_	_	_	
117-90	14725-14726	-	_	_	_	_	
117-91	14726-14727	-	_	_	_	_	
117-92	14727-14728	-	_	_	_	_	
117-93	14728-14729	-	_	_	_	_	
117-94	14729-14730	-	_	_	_	_	
117-95	14730-14731	-	_	_	_	_	
117-96	14731-14732	-	_	_	_	_	
117-97	14732-14733	-	_	_	_	_	
117-98	14733-14734	-	_	_	_	_	
117-99	14734-14735	-	_	_	_	_	
117-100	14735-14736	-	_	_	_	_	
117-101	14736-14737	-	_	_	_	_	
117-102	14737-14738	-	_	_	_	_	
117-103	14738-14739	-	_	_	_	_	
117-104	14739-14740	-	_	_	_	_	
117-105	14740-14741	-	_	_	_	_	
117-106	14741-14742	-	_	_	_	_	
117-107	14742-14743	-	_	_	_	_	
117-108	14743-14744	-	_	_	_	_	
117-109	14744-14745	-	_	_	_	_	
117-110	14745-14746	-	_	_	_	_	
117-111	14746-14747	-	_	_	_	_	
117-112	14747-14748	-	_	_	_	_	
117-113	14748-14749	-	_	_	_	_	
117-114	14749-14750	-	_	_	_	_	
117-115	14750-14751	-	_	_	_	_	
117-116	14751-14752	-	_	_	_	_	
117-117	14752-14753	-	_	_	_	_	
117-118	14753-14754	-	_	_	_	_	
117-119	14754-14755	-	_	_	_	_	
117-120	14755-14756	-	_	_	_	_	
117-121	14756-14757	-	_	_	_	_	
117-122	14757-14758	-	_	_	_	_	
117-123	14758-14759	-	_	_	_	_	
117-124	14759-14760	-	_	_	_	_	
117-125	14760-14761	-	_	_	_	_	
117-126	14761-14762	-	_	_	_	_	
117-127	14763-14769	Bitmap	_	_	_	_	
117-128	14770-14774	Heap	_	_	_	_	
117-129	14775-14779	Scan	_	_	_	_	
117-130	14780-14782	on	_	_	_	_	
117-131	14783-14788	books	_	_	_	_	
117-132	14789-14790	(	_	_	_	_	
117-133	14790-14794	cost	_	_	_	_	
117-134	14794-14795	=	_	_	_	_	
117-135	14795-14800	12.75	_	_	_	_	
117-136	14800-14801	.	_	_	_	_	
117-137	14801-14809	.1007.75	_	_	_	_	
117-138	14810-14814	rows	_	_	_	_	
117-139	14814-14815	=	_	_	_	_	
117-140	14815-14819	1000	_	_	_	_	
117-141	14820-14825	width	_	_	_	_	
117-142	14825-14826	=	_	_	_	_	
117-143	14826-14829	158	_	_	_	_	
117-144	14829-14830	)	_	_	_	_	
117-145	14831-14832	(	_	_	_	_	
117-146	14832-14838	actual	_	_	_	_	
117-147	14839-14843	time	_	_	_	_	
117-148	14843-14844	=	_	_	_	_	
117-149	14844-14849	0.031	_	_	_	_	
117-150	14849-14850	.	_	_	_	_	
117-151	14850-14856	.0.035	_	_	_	_	
117-152	14857-14861	rows	_	_	_	_	
117-153	14861-14862	=	_	_	_	_	
117-154	14862-14863	2	_	_	_	_	
117-155	14864-14869	loops	_	_	_	_	
117-156	14869-14870	=	_	_	_	_	
117-157	14870-14871	1	_	_	_	_	
117-158	14871-14872	)	_	_	_	_	
117-159	14873-14880	Recheck	_	_	_	_	
117-160	14881-14885	Cond	_	_	_	_	
117-161	14885-14886	:	_	_	_	_	
117-162	14887-14888	(	_	_	_	_	
117-163	14888-14889	(	_	_	_	_	
117-164	14889-14893	data	_	_	_	_	
117-165	14894-14895	-	_	_	_	_	
117-166	14895-14896	>	_	_	_	_	
117-167	14896-14897	'	_	_	_	_	
117-168	14897-14901	tags	_	_	_	_	
117-169	14901-14902	'	_	_	_	_	
117-170	14902-14903	:	_	_	_	_	
117-171	14903-14904	:	_	_	_	_	
117-172	14904-14908	text	_	_	_	_	
117-173	14908-14909	)	_	_	_	_	
117-174	14910-14911	?	_	_	_	_	

#Text='nk455671'::text)
#Text=Heap Blocks: exact=2
#Text=-> Bitmap Index Scan on datatagsgin (cost=0.00..12.50 rows=1000 width=0) (actual time=0.021..0.021 rows=2 loops=1)
#Text=Index Cond: ((data ->'tags'::text) ?
118-1	14912-14913	'	_	_	_	_	
118-2	14913-14921	nk455671	_	_	_	_	
118-3	14921-14922	'	_	_	_	_	
118-4	14922-14923	:	_	_	_	_	
118-5	14923-14924	:	_	_	_	_	
118-6	14924-14928	text	_	_	_	_	
118-7	14928-14929	)	_	_	_	_	
118-8	14930-14934	Heap	_	_	_	_	
118-9	14935-14941	Blocks	_	_	_	_	
118-10	14941-14942	:	_	_	_	_	
118-11	14943-14948	exact	_	_	_	_	
118-12	14948-14949	=	_	_	_	_	
118-13	14949-14950	2	_	_	_	_	
118-14	14951-14952	-	_	_	_	_	
118-15	14952-14953	>	_	_	_	_	
118-16	14954-14960	Bitmap	_	_	_	_	
118-17	14961-14966	Index	_	_	_	_	
118-18	14967-14971	Scan	_	_	_	_	
118-19	14972-14974	on	_	_	_	_	
118-20	14975-14986	datatagsgin	_	_	_	_	
118-21	14987-14988	(	_	_	_	_	
118-22	14988-14992	cost	_	_	_	_	
118-23	14992-14993	=	_	_	_	_	
118-24	14993-14997	0.00	_	_	_	_	
118-25	14997-14998	.	_	_	_	_	
118-26	14998-15004	.12.50	_	_	_	_	
118-27	15005-15009	rows	_	_	_	_	
118-28	15009-15010	=	_	_	_	_	
118-29	15010-15014	1000	_	_	_	_	
118-30	15015-15020	width	_	_	_	_	
118-31	15020-15021	=	_	_	_	_	
118-32	15021-15022	0	_	_	_	_	
118-33	15022-15023	)	_	_	_	_	
118-34	15024-15025	(	_	_	_	_	
118-35	15025-15031	actual	_	_	_	_	
118-36	15032-15036	time	_	_	_	_	
118-37	15036-15037	=	_	_	_	_	
118-38	15037-15042	0.021	_	_	_	_	
118-39	15042-15043	.	_	_	_	_	
118-40	15043-15049	.0.021	_	_	_	_	
118-41	15050-15054	rows	_	_	_	_	
118-42	15054-15055	=	_	_	_	_	
118-43	15055-15056	2	_	_	_	_	
118-44	15057-15062	loops	_	_	_	_	
118-45	15062-15063	=	_	_	_	_	
118-46	15063-15064	1	_	_	_	_	
118-47	15064-15065	)	_	_	_	_	
118-48	15066-15071	Index	_	_	_	_	
118-49	15072-15076	Cond	_	_	_	_	
118-50	15076-15077	:	_	_	_	_	
118-51	15078-15079	(	_	_	_	_	
118-52	15079-15080	(	_	_	_	_	
118-53	15080-15084	data	_	_	_	_	
118-54	15085-15086	-	_	_	_	_	
118-55	15086-15087	>	_	_	_	_	
118-56	15087-15088	'	_	_	_	_	
118-57	15088-15092	tags	_	_	_	_	
118-58	15092-15093	'	_	_	_	_	
118-59	15093-15094	:	_	_	_	_	
118-60	15094-15095	:	_	_	_	_	
118-61	15095-15099	text	_	_	_	_	
118-62	15099-15100	)	_	_	_	_	
118-63	15101-15102	?	_	_	_	_	

#Text='nk455671'::text)
#Text=Planning Time: 0.098 ms
#Text=Execution Time: 0.061 ms
#Text=(7 rows)
#Text=Note: An alternative here is to use the @> operator:
#Text=select * from books where data @> '{"tags":{"nk455671":{}}}'::jsonb;
#Text=However, this only works if the value is an object.
119-1	15103-15104	'	_	_	_	_	
119-2	15104-15112	nk455671	_	_	_	_	
119-3	15112-15113	'	_	_	_	_	
119-4	15113-15114	:	_	_	_	_	
119-5	15114-15115	:	_	_	_	_	
119-6	15115-15119	text	_	_	_	_	
119-7	15119-15120	)	_	_	_	_	
119-8	15121-15129	Planning	_	_	_	_	
119-9	15130-15134	Time	_	_	_	_	
119-10	15134-15135	:	_	_	_	_	
119-11	15136-15141	0.098	_	_	_	_	
119-12	15142-15144	ms	_	_	_	_	
119-13	15145-15154	Execution	_	_	_	_	
119-14	15155-15159	Time	_	_	_	_	
119-15	15159-15160	:	_	_	_	_	
119-16	15161-15166	0.061	_	_	_	_	
119-17	15167-15169	ms	_	_	_	_	
119-18	15170-15171	(	_	_	_	_	
119-19	15171-15172	7	_	_	_	_	
119-20	15173-15177	rows	_	_	_	_	
119-21	15177-15178	)	_	_	_	_	
119-22	15179-15183	Note	_	_	_	_	
119-23	15183-15184	:	_	_	_	_	
119-24	15185-15187	An	_	_	_	_	
119-25	15188-15199	alternative	_	_	_	_	
119-26	15200-15204	here	_	_	_	_	
119-27	15205-15207	is	_	_	_	_	
119-28	15208-15210	to	_	_	_	_	
119-29	15211-15214	use	_	_	_	_	
119-30	15215-15218	the	_	_	_	_	
119-31	15219-15220	@	_	_	_	_	
119-32	15220-15221	>	_	_	_	_	
119-33	15222-15230	operator	_	_	_	_	
119-34	15230-15231	:	_	_	_	_	
119-35	15232-15238	select	_	_	_	_	
119-36	15239-15240	*	_	_	_	_	
119-37	15241-15245	from	_	_	_	_	
119-38	15246-15251	books	_	_	_	_	
119-39	15252-15257	where	_	_	_	_	
119-40	15258-15262	data	_	_	_	_	
119-41	15263-15264	@	_	_	_	_	
119-42	15264-15265	>	_	_	_	_	
119-43	15266-15267	'	_	_	_	_	
119-44	15267-15268	{	_	_	_	_	
119-45	15268-15269	"	_	_	_	_	
119-46	15269-15273	tags	_	_	_	_	
119-47	15273-15274	"	_	_	_	_	
119-48	15274-15275	:	_	_	_	_	
119-49	15275-15276	{	_	_	_	_	
119-50	15276-15277	"	_	_	_	_	
119-51	15277-15285	nk455671	_	_	_	_	
119-52	15285-15286	"	_	_	_	_	
119-53	15286-15287	:	_	_	_	_	
119-54	15287-15288	{	_	_	_	_	
119-55	15288-15289	}	_	_	_	_	
119-56	15289-15290	}	_	_	_	_	
119-57	15290-15291	}	_	_	_	_	
119-58	15291-15292	'	_	_	_	_	
119-59	15292-15293	:	_	_	_	_	
119-60	15293-15294	:	_	_	_	_	
119-61	15294-15299	jsonb	_	_	_	_	
119-62	15299-15300	;	_	_	_	_	
119-63	15301-15308	However	_	_	_	_	
119-64	15308-15309	,	_	_	_	_	
119-65	15310-15314	this	_	_	_	_	
119-66	15315-15319	only	_	_	_	_	
119-67	15320-15325	works	_	_	_	_	
119-68	15326-15328	if	_	_	_	_	
119-69	15329-15332	the	_	_	_	_	
119-70	15333-15338	value	_	_	_	_	
119-71	15339-15341	is	_	_	_	_	
119-72	15342-15344	an	_	_	_	_	
119-73	15345-15351	object	_	_	_	_	
119-74	15351-15352	.	_	_	_	_	

#Text=So, if you’re unsure if the value is an object or a primitive value, it could lead to incorrect results.
120-1	15353-15355	So	_	_	_	_	
120-2	15355-15356	,	_	_	_	_	
120-3	15357-15359	if	_	_	_	_	
120-4	15360-15363	you	_	_	_	_	
120-5	15363-15364	’	_	_	_	_	
120-6	15364-15366	re	_	_	_	_	
120-7	15367-15373	unsure	_	_	_	_	
120-8	15374-15376	if	_	_	_	_	
120-9	15377-15380	the	_	_	_	_	
120-10	15381-15386	value	_	_	_	_	
120-11	15387-15389	is	_	_	_	_	
120-12	15390-15392	an	_	_	_	_	
120-13	15393-15399	object	_	_	_	_	
120-14	15400-15402	or	_	_	_	_	
120-15	15403-15404	a	_	_	_	_	
120-16	15405-15414	primitive	_	_	_	_	
120-17	15415-15420	value	_	_	_	_	
120-18	15420-15421	,	_	_	_	_	
120-19	15422-15424	it	_	_	_	_	
120-20	15425-15430	could	_	_	_	_	
120-21	15431-15435	lead	_	_	_	_	
120-22	15436-15438	to	_	_	_	_	
120-23	15439-15448	incorrect	_	_	_	_	
120-24	15449-15456	results	_	_	_	_	
120-25	15456-15457	.	_	_	_	_	

#Text=Path Operators @>, <@
#Text=The “path” operator can be used for multi-level queries of your JSONB data.
121-1	15458-15462	Path	_	_	_	_	
121-2	15463-15472	Operators	_	_	_	_	
121-3	15473-15474	@	_	_	_	_	
121-4	15474-15475	>	_	_	_	_	
121-5	15475-15476	,	_	_	_	_	
121-6	15477-15478	<	_	_	_	_	
121-7	15478-15479	@	_	_	_	_	
121-8	15480-15483	The	_	_	_	_	
121-9	15484-15485	“	_	_	_	_	
121-10	15485-15489	path	_	_	_	_	
121-11	15489-15490	”	_	_	_	_	
121-12	15491-15499	operator	_	_	_	_	
121-13	15500-15503	can	_	_	_	_	
121-14	15504-15506	be	_	_	_	_	
121-15	15507-15511	used	_	_	_	_	
121-16	15512-15515	for	_	_	_	_	
121-17	15516-15527	multi-level	_	_	_	_	
121-18	15528-15535	queries	_	_	_	_	
121-19	15536-15538	of	_	_	_	_	
121-20	15539-15543	your	_	_	_	_	
121-21	15544-15549	JSONB	_	_	_	_	
121-22	15550-15554	data	_	_	_	_	
121-23	15554-15555	.	_	_	_	_	

#Text=Let’s use it similar to the ?
122-1	15556-15559	Let	_	_	_	_	
122-2	15559-15560	’	_	_	_	_	
122-3	15560-15561	s	_	_	_	_	
122-4	15562-15565	use	_	_	_	_	
122-5	15566-15568	it	_	_	_	_	
122-6	15569-15576	similar	_	_	_	_	
122-7	15577-15579	to	_	_	_	_	
122-8	15580-15583	the	_	_	_	_	
122-9	15584-15585	?	_	_	_	_	

#Text=operator above:
#Text=select * from books where data @> '{"braille":true}'::jsonb;
#Text=demo=# explain analyze select * from books where data @> '{"braille":true}'::jsonb;
#Text=QUERY PLAN
#Text=---------------------------------------------------------------------------------------------------------------------
#Text=Bitmap Heap Scan on books (cost=16.75..1009.25 rows=1000 width=158) (actual time=0.040..0.048 rows=6 loops=1)
#Text=Recheck Cond: (data @> '{"braille": true}'::jsonb)
#Text=Rows Removed by Index Recheck: 9
#Text=Heap Blocks: exact=2
#Text=-> Bitmap Index Scan on datagin (cost=0.00..16.50 rows=1000 width=0) (actual time=0.030..0.030 rows=15 loops=1)
#Text=Index Cond: (data @> '{"braille": true}'::jsonb)
#Text=Planning Time: 0.100 ms
#Text=Execution Time: 0.076 ms
#Text=(8 rows)
#Text=The path operators support querying nested objects or top-level objects:
#Text=demo=# select * from books where data @> '{"publisher":"XlekfkLOtL"}'::jsonb;
#Text=id | author | isbn | rating | data
#Text=-----+-----------------+------------+--------+-------------------------------------------------------------------------------------
#Text=346 | uD3QOvHfJdxq2ez | KiAaIRu8QE | 1 | {"tags": {"nk88": {"ik37": "iv161"}}, "publisher": "XlekfkLOtL", "criticrating": 3}
#Text=(1 row)
#Text=demo=# explain analyze select * from books where data @> '{"publisher":"XlekfkLOtL"}'::jsonb;
#Text=QUERY PLAN
#Text=--------------------------------------------------------------------------------------------------------------------
#Text=Bitmap Heap Scan on books (cost=16.75..1009.25 rows=1000 width=158) (actual time=0.491..0.492 rows=1 loops=1)
#Text=Recheck Cond: (data @> '{"publisher": "XlekfkLOtL"}'::jsonb)
#Text=Heap Blocks: exact=1
#Text=-> Bitmap Index Scan on datagin (cost=0.00..16.50 rows=1000 width=0) (actual time=0.092..0.092 rows=1 loops=1)
#Text=Index Cond: (data @> '{"publisher": "XlekfkLOtL"}'::jsonb)
#Text=Planning Time: 0.090 ms
#Text=Execution Time: 0.523 ms
#Text=The queries can be multi-level as well:
#Text=demo=# select * from books where data @> '{"tags":{"nk455671":{"ik937456":"iv506075"}}}'::jsonb;
#Text=id | author | isbn | rating | data
#Text=---------+-----------------+------------+--------+------------------------------------------------------------------------------------------------------------------------------------------------------
#Text=------------------
#Text=1000005 | XEI7xShT8bPu6H7 | 2kD5XJDZUF | 0 | {"tags": {"nk455671": {"ik937456": "iv506075"}}, "braille": true, "keywords": ["abc", "kef", "keh"], "hardcover": false, "publisher": "zSfZIAjGGs", "
#Text=criticrating": 4}
#Text=(1 row)
#Text=GIN Index “pathops” Operator Class
#Text=GIN also supports a “pathops” option to reduce the size of the GIN index.
123-1	15586-15594	operator	_	_	_	_	
123-2	15595-15600	above	_	_	_	_	
123-3	15600-15601	:	_	_	_	_	
123-4	15602-15608	select	_	_	_	_	
123-5	15609-15610	*	_	_	_	_	
123-6	15611-15615	from	_	_	_	_	
123-7	15616-15621	books	_	_	_	_	
123-8	15622-15627	where	_	_	_	_	
123-9	15628-15632	data	_	_	_	_	
123-10	15633-15634	@	_	_	_	_	
123-11	15634-15635	>	_	_	_	_	
123-12	15636-15637	'	_	_	_	_	
123-13	15637-15638	{	_	_	_	_	
123-14	15638-15639	"	_	_	_	_	
123-15	15639-15646	braille	_	_	_	_	
123-16	15646-15647	"	_	_	_	_	
123-17	15647-15648	:	_	_	_	_	
123-18	15648-15652	true	_	_	_	_	
123-19	15652-15653	}	_	_	_	_	
123-20	15653-15654	'	_	_	_	_	
123-21	15654-15655	:	_	_	_	_	
123-22	15655-15656	:	_	_	_	_	
123-23	15656-15661	jsonb	_	_	_	_	
123-24	15661-15662	;	_	_	_	_	
123-25	15663-15667	demo	_	_	_	_	
123-26	15667-15668	=	_	_	_	_	
123-27	15668-15669	#	_	_	_	_	
123-28	15670-15677	explain	_	_	_	_	
123-29	15678-15685	analyze	_	_	_	_	
123-30	15686-15692	select	_	_	_	_	
123-31	15693-15694	*	_	_	_	_	
123-32	15695-15699	from	_	_	_	_	
123-33	15700-15705	books	_	_	_	_	
123-34	15706-15711	where	_	_	_	_	
123-35	15712-15716	data	_	_	_	_	
123-36	15717-15718	@	_	_	_	_	
123-37	15718-15719	>	_	_	_	_	
123-38	15720-15721	'	_	_	_	_	
123-39	15721-15722	{	_	_	_	_	
123-40	15722-15723	"	_	_	_	_	
123-41	15723-15730	braille	_	_	_	_	
123-42	15730-15731	"	_	_	_	_	
123-43	15731-15732	:	_	_	_	_	
123-44	15732-15736	true	_	_	_	_	
123-45	15736-15737	}	_	_	_	_	
123-46	15737-15738	'	_	_	_	_	
123-47	15738-15739	:	_	_	_	_	
123-48	15739-15740	:	_	_	_	_	
123-49	15740-15745	jsonb	_	_	_	_	
123-50	15745-15746	;	_	_	_	_	
123-51	15747-15752	QUERY	_	_	_	_	
123-52	15753-15757	PLAN	_	_	_	_	
123-53	15758-15759	-	_	_	_	_	
123-54	15759-15760	-	_	_	_	_	
123-55	15760-15761	-	_	_	_	_	
123-56	15761-15762	-	_	_	_	_	
123-57	15762-15763	-	_	_	_	_	
123-58	15763-15764	-	_	_	_	_	
123-59	15764-15765	-	_	_	_	_	
123-60	15765-15766	-	_	_	_	_	
123-61	15766-15767	-	_	_	_	_	
123-62	15767-15768	-	_	_	_	_	
123-63	15768-15769	-	_	_	_	_	
123-64	15769-15770	-	_	_	_	_	
123-65	15770-15771	-	_	_	_	_	
123-66	15771-15772	-	_	_	_	_	
123-67	15772-15773	-	_	_	_	_	
123-68	15773-15774	-	_	_	_	_	
123-69	15774-15775	-	_	_	_	_	
123-70	15775-15776	-	_	_	_	_	
123-71	15776-15777	-	_	_	_	_	
123-72	15777-15778	-	_	_	_	_	
123-73	15778-15779	-	_	_	_	_	
123-74	15779-15780	-	_	_	_	_	
123-75	15780-15781	-	_	_	_	_	
123-76	15781-15782	-	_	_	_	_	
123-77	15782-15783	-	_	_	_	_	
123-78	15783-15784	-	_	_	_	_	
123-79	15784-15785	-	_	_	_	_	
123-80	15785-15786	-	_	_	_	_	
123-81	15786-15787	-	_	_	_	_	
123-82	15787-15788	-	_	_	_	_	
123-83	15788-15789	-	_	_	_	_	
123-84	15789-15790	-	_	_	_	_	
123-85	15790-15791	-	_	_	_	_	
123-86	15791-15792	-	_	_	_	_	
123-87	15792-15793	-	_	_	_	_	
123-88	15793-15794	-	_	_	_	_	
123-89	15794-15795	-	_	_	_	_	
123-90	15795-15796	-	_	_	_	_	
123-91	15796-15797	-	_	_	_	_	
123-92	15797-15798	-	_	_	_	_	
123-93	15798-15799	-	_	_	_	_	
123-94	15799-15800	-	_	_	_	_	
123-95	15800-15801	-	_	_	_	_	
123-96	15801-15802	-	_	_	_	_	
123-97	15802-15803	-	_	_	_	_	
123-98	15803-15804	-	_	_	_	_	
123-99	15804-15805	-	_	_	_	_	
123-100	15805-15806	-	_	_	_	_	
123-101	15806-15807	-	_	_	_	_	
123-102	15807-15808	-	_	_	_	_	
123-103	15808-15809	-	_	_	_	_	
123-104	15809-15810	-	_	_	_	_	
123-105	15810-15811	-	_	_	_	_	
123-106	15811-15812	-	_	_	_	_	
123-107	15812-15813	-	_	_	_	_	
123-108	15813-15814	-	_	_	_	_	
123-109	15814-15815	-	_	_	_	_	
123-110	15815-15816	-	_	_	_	_	
123-111	15816-15817	-	_	_	_	_	
123-112	15817-15818	-	_	_	_	_	
123-113	15818-15819	-	_	_	_	_	
123-114	15819-15820	-	_	_	_	_	
123-115	15820-15821	-	_	_	_	_	
123-116	15821-15822	-	_	_	_	_	
123-117	15822-15823	-	_	_	_	_	
123-118	15823-15824	-	_	_	_	_	
123-119	15824-15825	-	_	_	_	_	
123-120	15825-15826	-	_	_	_	_	
123-121	15826-15827	-	_	_	_	_	
123-122	15827-15828	-	_	_	_	_	
123-123	15828-15829	-	_	_	_	_	
123-124	15829-15830	-	_	_	_	_	
123-125	15830-15831	-	_	_	_	_	
123-126	15831-15832	-	_	_	_	_	
123-127	15832-15833	-	_	_	_	_	
123-128	15833-15834	-	_	_	_	_	
123-129	15834-15835	-	_	_	_	_	
123-130	15835-15836	-	_	_	_	_	
123-131	15836-15837	-	_	_	_	_	
123-132	15837-15838	-	_	_	_	_	
123-133	15838-15839	-	_	_	_	_	
123-134	15839-15840	-	_	_	_	_	
123-135	15840-15841	-	_	_	_	_	
123-136	15841-15842	-	_	_	_	_	
123-137	15842-15843	-	_	_	_	_	
123-138	15843-15844	-	_	_	_	_	
123-139	15844-15845	-	_	_	_	_	
123-140	15845-15846	-	_	_	_	_	
123-141	15846-15847	-	_	_	_	_	
123-142	15847-15848	-	_	_	_	_	
123-143	15848-15849	-	_	_	_	_	
123-144	15849-15850	-	_	_	_	_	
123-145	15850-15851	-	_	_	_	_	
123-146	15851-15852	-	_	_	_	_	
123-147	15852-15853	-	_	_	_	_	
123-148	15853-15854	-	_	_	_	_	
123-149	15854-15855	-	_	_	_	_	
123-150	15855-15856	-	_	_	_	_	
123-151	15856-15857	-	_	_	_	_	
123-152	15857-15858	-	_	_	_	_	
123-153	15858-15859	-	_	_	_	_	
123-154	15859-15860	-	_	_	_	_	
123-155	15860-15861	-	_	_	_	_	
123-156	15861-15862	-	_	_	_	_	
123-157	15862-15863	-	_	_	_	_	
123-158	15863-15864	-	_	_	_	_	
123-159	15864-15865	-	_	_	_	_	
123-160	15865-15866	-	_	_	_	_	
123-161	15866-15867	-	_	_	_	_	
123-162	15867-15868	-	_	_	_	_	
123-163	15868-15869	-	_	_	_	_	
123-164	15869-15870	-	_	_	_	_	
123-165	15870-15871	-	_	_	_	_	
123-166	15871-15872	-	_	_	_	_	
123-167	15872-15873	-	_	_	_	_	
123-168	15873-15874	-	_	_	_	_	
123-169	15874-15875	-	_	_	_	_	
123-170	15876-15882	Bitmap	_	_	_	_	
123-171	15883-15887	Heap	_	_	_	_	
123-172	15888-15892	Scan	_	_	_	_	
123-173	15893-15895	on	_	_	_	_	
123-174	15896-15901	books	_	_	_	_	
123-175	15902-15903	(	_	_	_	_	
123-176	15903-15907	cost	_	_	_	_	
123-177	15907-15908	=	_	_	_	_	
123-178	15908-15913	16.75	_	_	_	_	
123-179	15913-15914	.	_	_	_	_	
123-180	15914-15922	.1009.25	_	_	_	_	
123-181	15923-15927	rows	_	_	_	_	
123-182	15927-15928	=	_	_	_	_	
123-183	15928-15932	1000	_	_	_	_	
123-184	15933-15938	width	_	_	_	_	
123-185	15938-15939	=	_	_	_	_	
123-186	15939-15942	158	_	_	_	_	
123-187	15942-15943	)	_	_	_	_	
123-188	15944-15945	(	_	_	_	_	
123-189	15945-15951	actual	_	_	_	_	
123-190	15952-15956	time	_	_	_	_	
123-191	15956-15957	=	_	_	_	_	
123-192	15957-15962	0.040	_	_	_	_	
123-193	15962-15963	.	_	_	_	_	
123-194	15963-15969	.0.048	_	_	_	_	
123-195	15970-15974	rows	_	_	_	_	
123-196	15974-15975	=	_	_	_	_	
123-197	15975-15976	6	_	_	_	_	
123-198	15977-15982	loops	_	_	_	_	
123-199	15982-15983	=	_	_	_	_	
123-200	15983-15984	1	_	_	_	_	
123-201	15984-15985	)	_	_	_	_	
123-202	15986-15993	Recheck	_	_	_	_	
123-203	15994-15998	Cond	_	_	_	_	
123-204	15998-15999	:	_	_	_	_	
123-205	16000-16001	(	_	_	_	_	
123-206	16001-16005	data	_	_	_	_	
123-207	16006-16007	@	_	_	_	_	
123-208	16007-16008	>	_	_	_	_	
123-209	16009-16010	'	_	_	_	_	
123-210	16010-16011	{	_	_	_	_	
123-211	16011-16012	"	_	_	_	_	
123-212	16012-16019	braille	_	_	_	_	
123-213	16019-16020	"	_	_	_	_	
123-214	16020-16021	:	_	_	_	_	
123-215	16022-16026	true	_	_	_	_	
123-216	16026-16027	}	_	_	_	_	
123-217	16027-16028	'	_	_	_	_	
123-218	16028-16029	:	_	_	_	_	
123-219	16029-16030	:	_	_	_	_	
123-220	16030-16035	jsonb	_	_	_	_	
123-221	16035-16036	)	_	_	_	_	
123-222	16037-16041	Rows	_	_	_	_	
123-223	16042-16049	Removed	_	_	_	_	
123-224	16050-16052	by	_	_	_	_	
123-225	16053-16058	Index	_	_	_	_	
123-226	16059-16066	Recheck	_	_	_	_	
123-227	16066-16067	:	_	_	_	_	
123-228	16068-16069	9	_	_	_	_	
123-229	16070-16074	Heap	_	_	_	_	
123-230	16075-16081	Blocks	_	_	_	_	
123-231	16081-16082	:	_	_	_	_	
123-232	16083-16088	exact	_	_	_	_	
123-233	16088-16089	=	_	_	_	_	
123-234	16089-16090	2	_	_	_	_	
123-235	16091-16092	-	_	_	_	_	
123-236	16092-16093	>	_	_	_	_	
123-237	16094-16100	Bitmap	_	_	_	_	
123-238	16101-16106	Index	_	_	_	_	
123-239	16107-16111	Scan	_	_	_	_	
123-240	16112-16114	on	_	_	_	_	
123-241	16115-16122	datagin	_	_	_	_	
123-242	16123-16124	(	_	_	_	_	
123-243	16124-16128	cost	_	_	_	_	
123-244	16128-16129	=	_	_	_	_	
123-245	16129-16133	0.00	_	_	_	_	
123-246	16133-16134	.	_	_	_	_	
123-247	16134-16140	.16.50	_	_	_	_	
123-248	16141-16145	rows	_	_	_	_	
123-249	16145-16146	=	_	_	_	_	
123-250	16146-16150	1000	_	_	_	_	
123-251	16151-16156	width	_	_	_	_	
123-252	16156-16157	=	_	_	_	_	
123-253	16157-16158	0	_	_	_	_	
123-254	16158-16159	)	_	_	_	_	
123-255	16160-16161	(	_	_	_	_	
123-256	16161-16167	actual	_	_	_	_	
123-257	16168-16172	time	_	_	_	_	
123-258	16172-16173	=	_	_	_	_	
123-259	16173-16178	0.030	_	_	_	_	
123-260	16178-16179	.	_	_	_	_	
123-261	16179-16185	.0.030	_	_	_	_	
123-262	16186-16190	rows	_	_	_	_	
123-263	16190-16191	=	_	_	_	_	
123-264	16191-16193	15	_	_	_	_	
123-265	16194-16199	loops	_	_	_	_	
123-266	16199-16200	=	_	_	_	_	
123-267	16200-16201	1	_	_	_	_	
123-268	16201-16202	)	_	_	_	_	
123-269	16203-16208	Index	_	_	_	_	
123-270	16209-16213	Cond	_	_	_	_	
123-271	16213-16214	:	_	_	_	_	
123-272	16215-16216	(	_	_	_	_	
123-273	16216-16220	data	_	_	_	_	
123-274	16221-16222	@	_	_	_	_	
123-275	16222-16223	>	_	_	_	_	
123-276	16224-16225	'	_	_	_	_	
123-277	16225-16226	{	_	_	_	_	
123-278	16226-16227	"	_	_	_	_	
123-279	16227-16234	braille	_	_	_	_	
123-280	16234-16235	"	_	_	_	_	
123-281	16235-16236	:	_	_	_	_	
123-282	16237-16241	true	_	_	_	_	
123-283	16241-16242	}	_	_	_	_	
123-284	16242-16243	'	_	_	_	_	
123-285	16243-16244	:	_	_	_	_	
123-286	16244-16245	:	_	_	_	_	
123-287	16245-16250	jsonb	_	_	_	_	
123-288	16250-16251	)	_	_	_	_	
123-289	16252-16260	Planning	_	_	_	_	
123-290	16261-16265	Time	_	_	_	_	
123-291	16265-16266	:	_	_	_	_	
123-292	16267-16272	0.100	_	_	_	_	
123-293	16273-16275	ms	_	_	_	_	
123-294	16276-16285	Execution	_	_	_	_	
123-295	16286-16290	Time	_	_	_	_	
123-296	16290-16291	:	_	_	_	_	
123-297	16292-16297	0.076	_	_	_	_	
123-298	16298-16300	ms	_	_	_	_	
123-299	16301-16302	(	_	_	_	_	
123-300	16302-16303	8	_	_	_	_	
123-301	16304-16308	rows	_	_	_	_	
123-302	16308-16309	)	_	_	_	_	
123-303	16310-16313	The	_	_	_	_	
123-304	16314-16318	path	_	_	_	_	
123-305	16319-16328	operators	_	_	_	_	
123-306	16329-16336	support	_	_	_	_	
123-307	16337-16345	querying	_	_	_	_	
123-308	16346-16352	nested	_	_	_	_	
123-309	16353-16360	objects	_	_	_	_	
123-310	16361-16363	or	_	_	_	_	
123-311	16364-16373	top-level	_	_	_	_	
123-312	16374-16381	objects	_	_	_	_	
123-313	16381-16382	:	_	_	_	_	
123-314	16383-16387	demo	_	_	_	_	
123-315	16387-16388	=	_	_	_	_	
123-316	16388-16389	#	_	_	_	_	
123-317	16390-16396	select	_	_	_	_	
123-318	16397-16398	*	_	_	_	_	
123-319	16399-16403	from	_	_	_	_	
123-320	16404-16409	books	_	_	_	_	
123-321	16410-16415	where	_	_	_	_	
123-322	16416-16420	data	_	_	_	_	
123-323	16421-16422	@	_	_	_	_	
123-324	16422-16423	>	_	_	_	_	
123-325	16424-16425	'	_	_	_	_	
123-326	16425-16426	{	_	_	_	_	
123-327	16426-16427	"	_	_	_	_	
123-328	16427-16436	publisher	_	_	_	_	
123-329	16436-16437	"	_	_	_	_	
123-330	16437-16438	:	_	_	_	_	
123-331	16438-16439	"	_	_	_	_	
123-332	16439-16449	XlekfkLOtL	_	_	_	_	
123-333	16449-16450	"	_	_	_	_	
123-334	16450-16451	}	_	_	_	_	
123-335	16451-16452	'	_	_	_	_	
123-336	16452-16453	:	_	_	_	_	
123-337	16453-16454	:	_	_	_	_	
123-338	16454-16459	jsonb	_	_	_	_	
123-339	16459-16460	;	_	_	_	_	
123-340	16461-16463	id	_	_	_	_	
123-341	16464-16465	|	_	_	_	_	
123-342	16466-16472	author	_	_	_	_	
123-343	16473-16474	|	_	_	_	_	
123-344	16475-16479	isbn	_	_	_	_	
123-345	16480-16481	|	_	_	_	_	
123-346	16482-16488	rating	_	_	_	_	
123-347	16489-16490	|	_	_	_	_	
123-348	16491-16495	data	_	_	_	_	
123-349	16496-16497	-	_	_	_	_	
123-350	16497-16498	-	_	_	_	_	
123-351	16498-16499	-	_	_	_	_	
123-352	16499-16500	-	_	_	_	_	
123-353	16500-16501	-	_	_	_	_	
123-354	16501-16502	+	_	_	_	_	
123-355	16502-16503	-	_	_	_	_	
123-356	16503-16504	-	_	_	_	_	
123-357	16504-16505	-	_	_	_	_	
123-358	16505-16506	-	_	_	_	_	
123-359	16506-16507	-	_	_	_	_	
123-360	16507-16508	-	_	_	_	_	
123-361	16508-16509	-	_	_	_	_	
123-362	16509-16510	-	_	_	_	_	
123-363	16510-16511	-	_	_	_	_	
123-364	16511-16512	-	_	_	_	_	
123-365	16512-16513	-	_	_	_	_	
123-366	16513-16514	-	_	_	_	_	
123-367	16514-16515	-	_	_	_	_	
123-368	16515-16516	-	_	_	_	_	
123-369	16516-16517	-	_	_	_	_	
123-370	16517-16518	-	_	_	_	_	
123-371	16518-16519	-	_	_	_	_	
123-372	16519-16520	+	_	_	_	_	
123-373	16520-16521	-	_	_	_	_	
123-374	16521-16522	-	_	_	_	_	
123-375	16522-16523	-	_	_	_	_	
123-376	16523-16524	-	_	_	_	_	
123-377	16524-16525	-	_	_	_	_	
123-378	16525-16526	-	_	_	_	_	
123-379	16526-16527	-	_	_	_	_	
123-380	16527-16528	-	_	_	_	_	
123-381	16528-16529	-	_	_	_	_	
123-382	16529-16530	-	_	_	_	_	
123-383	16530-16531	-	_	_	_	_	
123-384	16531-16532	-	_	_	_	_	
123-385	16532-16533	+	_	_	_	_	
123-386	16533-16534	-	_	_	_	_	
123-387	16534-16535	-	_	_	_	_	
123-388	16535-16536	-	_	_	_	_	
123-389	16536-16537	-	_	_	_	_	
123-390	16537-16538	-	_	_	_	_	
123-391	16538-16539	-	_	_	_	_	
123-392	16539-16540	-	_	_	_	_	
123-393	16540-16541	-	_	_	_	_	
123-394	16541-16542	+	_	_	_	_	
123-395	16542-16543	-	_	_	_	_	
123-396	16543-16544	-	_	_	_	_	
123-397	16544-16545	-	_	_	_	_	
123-398	16545-16546	-	_	_	_	_	
123-399	16546-16547	-	_	_	_	_	
123-400	16547-16548	-	_	_	_	_	
123-401	16548-16549	-	_	_	_	_	
123-402	16549-16550	-	_	_	_	_	
123-403	16550-16551	-	_	_	_	_	
123-404	16551-16552	-	_	_	_	_	
123-405	16552-16553	-	_	_	_	_	
123-406	16553-16554	-	_	_	_	_	
123-407	16554-16555	-	_	_	_	_	
123-408	16555-16556	-	_	_	_	_	
123-409	16556-16557	-	_	_	_	_	
123-410	16557-16558	-	_	_	_	_	
123-411	16558-16559	-	_	_	_	_	
123-412	16559-16560	-	_	_	_	_	
123-413	16560-16561	-	_	_	_	_	
123-414	16561-16562	-	_	_	_	_	
123-415	16562-16563	-	_	_	_	_	
123-416	16563-16564	-	_	_	_	_	
123-417	16564-16565	-	_	_	_	_	
123-418	16565-16566	-	_	_	_	_	
123-419	16566-16567	-	_	_	_	_	
123-420	16567-16568	-	_	_	_	_	
123-421	16568-16569	-	_	_	_	_	
123-422	16569-16570	-	_	_	_	_	
123-423	16570-16571	-	_	_	_	_	
123-424	16571-16572	-	_	_	_	_	
123-425	16572-16573	-	_	_	_	_	
123-426	16573-16574	-	_	_	_	_	
123-427	16574-16575	-	_	_	_	_	
123-428	16575-16576	-	_	_	_	_	
123-429	16576-16577	-	_	_	_	_	
123-430	16577-16578	-	_	_	_	_	
123-431	16578-16579	-	_	_	_	_	
123-432	16579-16580	-	_	_	_	_	
123-433	16580-16581	-	_	_	_	_	
123-434	16581-16582	-	_	_	_	_	
123-435	16582-16583	-	_	_	_	_	
123-436	16583-16584	-	_	_	_	_	
123-437	16584-16585	-	_	_	_	_	
123-438	16585-16586	-	_	_	_	_	
123-439	16586-16587	-	_	_	_	_	
123-440	16587-16588	-	_	_	_	_	
123-441	16588-16589	-	_	_	_	_	
123-442	16589-16590	-	_	_	_	_	
123-443	16590-16591	-	_	_	_	_	
123-444	16591-16592	-	_	_	_	_	
123-445	16592-16593	-	_	_	_	_	
123-446	16593-16594	-	_	_	_	_	
123-447	16594-16595	-	_	_	_	_	
123-448	16595-16596	-	_	_	_	_	
123-449	16596-16597	-	_	_	_	_	
123-450	16597-16598	-	_	_	_	_	
123-451	16598-16599	-	_	_	_	_	
123-452	16599-16600	-	_	_	_	_	
123-453	16600-16601	-	_	_	_	_	
123-454	16601-16602	-	_	_	_	_	
123-455	16602-16603	-	_	_	_	_	
123-456	16603-16604	-	_	_	_	_	
123-457	16604-16605	-	_	_	_	_	
123-458	16605-16606	-	_	_	_	_	
123-459	16606-16607	-	_	_	_	_	
123-460	16607-16608	-	_	_	_	_	
123-461	16608-16609	-	_	_	_	_	
123-462	16609-16610	-	_	_	_	_	
123-463	16610-16611	-	_	_	_	_	
123-464	16611-16612	-	_	_	_	_	
123-465	16612-16613	-	_	_	_	_	
123-466	16613-16614	-	_	_	_	_	
123-467	16614-16615	-	_	_	_	_	
123-468	16615-16616	-	_	_	_	_	
123-469	16616-16617	-	_	_	_	_	
123-470	16617-16618	-	_	_	_	_	
123-471	16618-16619	-	_	_	_	_	
123-472	16619-16620	-	_	_	_	_	
123-473	16620-16621	-	_	_	_	_	
123-474	16621-16622	-	_	_	_	_	
123-475	16622-16623	-	_	_	_	_	
123-476	16623-16624	-	_	_	_	_	
123-477	16624-16625	-	_	_	_	_	
123-478	16625-16626	-	_	_	_	_	
123-479	16626-16627	-	_	_	_	_	
123-480	16628-16631	346	_	_	_	_	
123-481	16632-16633	|	_	_	_	_	
123-482	16634-16649	uD3QOvHfJdxq2ez	_	_	_	_	
123-483	16650-16651	|	_	_	_	_	
123-484	16652-16662	KiAaIRu8QE	_	_	_	_	
123-485	16663-16664	|	_	_	_	_	
123-486	16665-16666	1	_	_	_	_	
123-487	16667-16668	|	_	_	_	_	
123-488	16669-16670	{	_	_	_	_	
123-489	16670-16671	"	_	_	_	_	
123-490	16671-16675	tags	_	_	_	_	
123-491	16675-16676	"	_	_	_	_	
123-492	16676-16677	:	_	_	_	_	
123-493	16678-16679	{	_	_	_	_	
123-494	16679-16680	"	_	_	_	_	
123-495	16680-16684	nk88	_	_	_	_	
123-496	16684-16685	"	_	_	_	_	
123-497	16685-16686	:	_	_	_	_	
123-498	16687-16688	{	_	_	_	_	
123-499	16688-16689	"	_	_	_	_	
123-500	16689-16693	ik37	_	_	_	_	
123-501	16693-16694	"	_	_	_	_	
123-502	16694-16695	:	_	_	_	_	
123-503	16696-16697	"	_	_	_	_	
123-504	16697-16702	iv161	_	_	_	_	
123-505	16702-16703	"	_	_	_	_	
123-506	16703-16704	}	_	_	_	_	
123-507	16704-16705	}	_	_	_	_	
123-508	16705-16706	,	_	_	_	_	
123-509	16707-16708	"	_	_	_	_	
123-510	16708-16717	publisher	_	_	_	_	
123-511	16717-16718	"	_	_	_	_	
123-512	16718-16719	:	_	_	_	_	
123-513	16720-16721	"	_	_	_	_	
123-514	16721-16731	XlekfkLOtL	_	_	_	_	
123-515	16731-16732	"	_	_	_	_	
123-516	16732-16733	,	_	_	_	_	
123-517	16734-16735	"	_	_	_	_	
123-518	16735-16747	criticrating	_	_	_	_	
123-519	16747-16748	"	_	_	_	_	
123-520	16748-16749	:	_	_	_	_	
123-521	16750-16751	3	_	_	_	_	
123-522	16751-16752	}	_	_	_	_	
123-523	16753-16754	(	_	_	_	_	
123-524	16754-16755	1	_	_	_	_	
123-525	16756-16759	row	_	_	_	_	
123-526	16759-16760	)	_	_	_	_	
123-527	16761-16765	demo	_	_	_	_	
123-528	16765-16766	=	_	_	_	_	
123-529	16766-16767	#	_	_	_	_	
123-530	16768-16775	explain	_	_	_	_	
123-531	16776-16783	analyze	_	_	_	_	
123-532	16784-16790	select	_	_	_	_	
123-533	16791-16792	*	_	_	_	_	
123-534	16793-16797	from	_	_	_	_	
123-535	16798-16803	books	_	_	_	_	
123-536	16804-16809	where	_	_	_	_	
123-537	16810-16814	data	_	_	_	_	
123-538	16815-16816	@	_	_	_	_	
123-539	16816-16817	>	_	_	_	_	
123-540	16818-16819	'	_	_	_	_	
123-541	16819-16820	{	_	_	_	_	
123-542	16820-16821	"	_	_	_	_	
123-543	16821-16830	publisher	_	_	_	_	
123-544	16830-16831	"	_	_	_	_	
123-545	16831-16832	:	_	_	_	_	
123-546	16832-16833	"	_	_	_	_	
123-547	16833-16843	XlekfkLOtL	_	_	_	_	
123-548	16843-16844	"	_	_	_	_	
123-549	16844-16845	}	_	_	_	_	
123-550	16845-16846	'	_	_	_	_	
123-551	16846-16847	:	_	_	_	_	
123-552	16847-16848	:	_	_	_	_	
123-553	16848-16853	jsonb	_	_	_	_	
123-554	16853-16854	;	_	_	_	_	
123-555	16855-16860	QUERY	_	_	_	_	
123-556	16861-16865	PLAN	_	_	_	_	
123-557	16866-16867	-	_	_	_	_	
123-558	16867-16868	-	_	_	_	_	
123-559	16868-16869	-	_	_	_	_	
123-560	16869-16870	-	_	_	_	_	
123-561	16870-16871	-	_	_	_	_	
123-562	16871-16872	-	_	_	_	_	
123-563	16872-16873	-	_	_	_	_	
123-564	16873-16874	-	_	_	_	_	
123-565	16874-16875	-	_	_	_	_	
123-566	16875-16876	-	_	_	_	_	
123-567	16876-16877	-	_	_	_	_	
123-568	16877-16878	-	_	_	_	_	
123-569	16878-16879	-	_	_	_	_	
123-570	16879-16880	-	_	_	_	_	
123-571	16880-16881	-	_	_	_	_	
123-572	16881-16882	-	_	_	_	_	
123-573	16882-16883	-	_	_	_	_	
123-574	16883-16884	-	_	_	_	_	
123-575	16884-16885	-	_	_	_	_	
123-576	16885-16886	-	_	_	_	_	
123-577	16886-16887	-	_	_	_	_	
123-578	16887-16888	-	_	_	_	_	
123-579	16888-16889	-	_	_	_	_	
123-580	16889-16890	-	_	_	_	_	
123-581	16890-16891	-	_	_	_	_	
123-582	16891-16892	-	_	_	_	_	
123-583	16892-16893	-	_	_	_	_	
123-584	16893-16894	-	_	_	_	_	
123-585	16894-16895	-	_	_	_	_	
123-586	16895-16896	-	_	_	_	_	
123-587	16896-16897	-	_	_	_	_	
123-588	16897-16898	-	_	_	_	_	
123-589	16898-16899	-	_	_	_	_	
123-590	16899-16900	-	_	_	_	_	
123-591	16900-16901	-	_	_	_	_	
123-592	16901-16902	-	_	_	_	_	
123-593	16902-16903	-	_	_	_	_	
123-594	16903-16904	-	_	_	_	_	
123-595	16904-16905	-	_	_	_	_	
123-596	16905-16906	-	_	_	_	_	
123-597	16906-16907	-	_	_	_	_	
123-598	16907-16908	-	_	_	_	_	
123-599	16908-16909	-	_	_	_	_	
123-600	16909-16910	-	_	_	_	_	
123-601	16910-16911	-	_	_	_	_	
123-602	16911-16912	-	_	_	_	_	
123-603	16912-16913	-	_	_	_	_	
123-604	16913-16914	-	_	_	_	_	
123-605	16914-16915	-	_	_	_	_	
123-606	16915-16916	-	_	_	_	_	
123-607	16916-16917	-	_	_	_	_	
123-608	16917-16918	-	_	_	_	_	
123-609	16918-16919	-	_	_	_	_	
123-610	16919-16920	-	_	_	_	_	
123-611	16920-16921	-	_	_	_	_	
123-612	16921-16922	-	_	_	_	_	
123-613	16922-16923	-	_	_	_	_	
123-614	16923-16924	-	_	_	_	_	
123-615	16924-16925	-	_	_	_	_	
123-616	16925-16926	-	_	_	_	_	
123-617	16926-16927	-	_	_	_	_	
123-618	16927-16928	-	_	_	_	_	
123-619	16928-16929	-	_	_	_	_	
123-620	16929-16930	-	_	_	_	_	
123-621	16930-16931	-	_	_	_	_	
123-622	16931-16932	-	_	_	_	_	
123-623	16932-16933	-	_	_	_	_	
123-624	16933-16934	-	_	_	_	_	
123-625	16934-16935	-	_	_	_	_	
123-626	16935-16936	-	_	_	_	_	
123-627	16936-16937	-	_	_	_	_	
123-628	16937-16938	-	_	_	_	_	
123-629	16938-16939	-	_	_	_	_	
123-630	16939-16940	-	_	_	_	_	
123-631	16940-16941	-	_	_	_	_	
123-632	16941-16942	-	_	_	_	_	
123-633	16942-16943	-	_	_	_	_	
123-634	16943-16944	-	_	_	_	_	
123-635	16944-16945	-	_	_	_	_	
123-636	16945-16946	-	_	_	_	_	
123-637	16946-16947	-	_	_	_	_	
123-638	16947-16948	-	_	_	_	_	
123-639	16948-16949	-	_	_	_	_	
123-640	16949-16950	-	_	_	_	_	
123-641	16950-16951	-	_	_	_	_	
123-642	16951-16952	-	_	_	_	_	
123-643	16952-16953	-	_	_	_	_	
123-644	16953-16954	-	_	_	_	_	
123-645	16954-16955	-	_	_	_	_	
123-646	16955-16956	-	_	_	_	_	
123-647	16956-16957	-	_	_	_	_	
123-648	16957-16958	-	_	_	_	_	
123-649	16958-16959	-	_	_	_	_	
123-650	16959-16960	-	_	_	_	_	
123-651	16960-16961	-	_	_	_	_	
123-652	16961-16962	-	_	_	_	_	
123-653	16962-16963	-	_	_	_	_	
123-654	16963-16964	-	_	_	_	_	
123-655	16964-16965	-	_	_	_	_	
123-656	16965-16966	-	_	_	_	_	
123-657	16966-16967	-	_	_	_	_	
123-658	16967-16968	-	_	_	_	_	
123-659	16968-16969	-	_	_	_	_	
123-660	16969-16970	-	_	_	_	_	
123-661	16970-16971	-	_	_	_	_	
123-662	16971-16972	-	_	_	_	_	
123-663	16972-16973	-	_	_	_	_	
123-664	16973-16974	-	_	_	_	_	
123-665	16974-16975	-	_	_	_	_	
123-666	16975-16976	-	_	_	_	_	
123-667	16976-16977	-	_	_	_	_	
123-668	16977-16978	-	_	_	_	_	
123-669	16978-16979	-	_	_	_	_	
123-670	16979-16980	-	_	_	_	_	
123-671	16980-16981	-	_	_	_	_	
123-672	16981-16982	-	_	_	_	_	
123-673	16983-16989	Bitmap	_	_	_	_	
123-674	16990-16994	Heap	_	_	_	_	
123-675	16995-16999	Scan	_	_	_	_	
123-676	17000-17002	on	_	_	_	_	
123-677	17003-17008	books	_	_	_	_	
123-678	17009-17010	(	_	_	_	_	
123-679	17010-17014	cost	_	_	_	_	
123-680	17014-17015	=	_	_	_	_	
123-681	17015-17020	16.75	_	_	_	_	
123-682	17020-17021	.	_	_	_	_	
123-683	17021-17029	.1009.25	_	_	_	_	
123-684	17030-17034	rows	_	_	_	_	
123-685	17034-17035	=	_	_	_	_	
123-686	17035-17039	1000	_	_	_	_	
123-687	17040-17045	width	_	_	_	_	
123-688	17045-17046	=	_	_	_	_	
123-689	17046-17049	158	_	_	_	_	
123-690	17049-17050	)	_	_	_	_	
123-691	17051-17052	(	_	_	_	_	
123-692	17052-17058	actual	_	_	_	_	
123-693	17059-17063	time	_	_	_	_	
123-694	17063-17064	=	_	_	_	_	
123-695	17064-17069	0.491	_	_	_	_	
123-696	17069-17070	.	_	_	_	_	
123-697	17070-17076	.0.492	_	_	_	_	
123-698	17077-17081	rows	_	_	_	_	
123-699	17081-17082	=	_	_	_	_	
123-700	17082-17083	1	_	_	_	_	
123-701	17084-17089	loops	_	_	_	_	
123-702	17089-17090	=	_	_	_	_	
123-703	17090-17091	1	_	_	_	_	
123-704	17091-17092	)	_	_	_	_	
123-705	17093-17100	Recheck	_	_	_	_	
123-706	17101-17105	Cond	_	_	_	_	
123-707	17105-17106	:	_	_	_	_	
123-708	17107-17108	(	_	_	_	_	
123-709	17108-17112	data	_	_	_	_	
123-710	17113-17114	@	_	_	_	_	
123-711	17114-17115	>	_	_	_	_	
123-712	17116-17117	'	_	_	_	_	
123-713	17117-17118	{	_	_	_	_	
123-714	17118-17119	"	_	_	_	_	
123-715	17119-17128	publisher	_	_	_	_	
123-716	17128-17129	"	_	_	_	_	
123-717	17129-17130	:	_	_	_	_	
123-718	17131-17132	"	_	_	_	_	
123-719	17132-17142	XlekfkLOtL	_	_	_	_	
123-720	17142-17143	"	_	_	_	_	
123-721	17143-17144	}	_	_	_	_	
123-722	17144-17145	'	_	_	_	_	
123-723	17145-17146	:	_	_	_	_	
123-724	17146-17147	:	_	_	_	_	
123-725	17147-17152	jsonb	_	_	_	_	
123-726	17152-17153	)	_	_	_	_	
123-727	17154-17158	Heap	_	_	_	_	
123-728	17159-17165	Blocks	_	_	_	_	
123-729	17165-17166	:	_	_	_	_	
123-730	17167-17172	exact	_	_	_	_	
123-731	17172-17173	=	_	_	_	_	
123-732	17173-17174	1	_	_	_	_	
123-733	17175-17176	-	_	_	_	_	
123-734	17176-17177	>	_	_	_	_	
123-735	17178-17184	Bitmap	_	_	_	_	
123-736	17185-17190	Index	_	_	_	_	
123-737	17191-17195	Scan	_	_	_	_	
123-738	17196-17198	on	_	_	_	_	
123-739	17199-17206	datagin	_	_	_	_	
123-740	17207-17208	(	_	_	_	_	
123-741	17208-17212	cost	_	_	_	_	
123-742	17212-17213	=	_	_	_	_	
123-743	17213-17217	0.00	_	_	_	_	
123-744	17217-17218	.	_	_	_	_	
123-745	17218-17224	.16.50	_	_	_	_	
123-746	17225-17229	rows	_	_	_	_	
123-747	17229-17230	=	_	_	_	_	
123-748	17230-17234	1000	_	_	_	_	
123-749	17235-17240	width	_	_	_	_	
123-750	17240-17241	=	_	_	_	_	
123-751	17241-17242	0	_	_	_	_	
123-752	17242-17243	)	_	_	_	_	
123-753	17244-17245	(	_	_	_	_	
123-754	17245-17251	actual	_	_	_	_	
123-755	17252-17256	time	_	_	_	_	
123-756	17256-17257	=	_	_	_	_	
123-757	17257-17262	0.092	_	_	_	_	
123-758	17262-17263	.	_	_	_	_	
123-759	17263-17269	.0.092	_	_	_	_	
123-760	17270-17274	rows	_	_	_	_	
123-761	17274-17275	=	_	_	_	_	
123-762	17275-17276	1	_	_	_	_	
123-763	17277-17282	loops	_	_	_	_	
123-764	17282-17283	=	_	_	_	_	
123-765	17283-17284	1	_	_	_	_	
123-766	17284-17285	)	_	_	_	_	
123-767	17286-17291	Index	_	_	_	_	
123-768	17292-17296	Cond	_	_	_	_	
123-769	17296-17297	:	_	_	_	_	
123-770	17298-17299	(	_	_	_	_	
123-771	17299-17303	data	_	_	_	_	
123-772	17304-17305	@	_	_	_	_	
123-773	17305-17306	>	_	_	_	_	
123-774	17307-17308	'	_	_	_	_	
123-775	17308-17309	{	_	_	_	_	
123-776	17309-17310	"	_	_	_	_	
123-777	17310-17319	publisher	_	_	_	_	
123-778	17319-17320	"	_	_	_	_	
123-779	17320-17321	:	_	_	_	_	
123-780	17322-17323	"	_	_	_	_	
123-781	17323-17333	XlekfkLOtL	_	_	_	_	
123-782	17333-17334	"	_	_	_	_	
123-783	17334-17335	}	_	_	_	_	
123-784	17335-17336	'	_	_	_	_	
123-785	17336-17337	:	_	_	_	_	
123-786	17337-17338	:	_	_	_	_	
123-787	17338-17343	jsonb	_	_	_	_	
123-788	17343-17344	)	_	_	_	_	
123-789	17345-17353	Planning	_	_	_	_	
123-790	17354-17358	Time	_	_	_	_	
123-791	17358-17359	:	_	_	_	_	
123-792	17360-17365	0.090	_	_	_	_	
123-793	17366-17368	ms	_	_	_	_	
123-794	17369-17378	Execution	_	_	_	_	
123-795	17379-17383	Time	_	_	_	_	
123-796	17383-17384	:	_	_	_	_	
123-797	17385-17390	0.523	_	_	_	_	
123-798	17391-17393	ms	_	_	_	_	
123-799	17394-17397	The	_	_	_	_	
123-800	17398-17405	queries	_	_	_	_	
123-801	17406-17409	can	_	_	_	_	
123-802	17410-17412	be	_	_	_	_	
123-803	17413-17424	multi-level	_	_	_	_	
123-804	17425-17427	as	_	_	_	_	
123-805	17428-17432	well	_	_	_	_	
123-806	17432-17433	:	_	_	_	_	
123-807	17434-17438	demo	_	_	_	_	
123-808	17438-17439	=	_	_	_	_	
123-809	17439-17440	#	_	_	_	_	
123-810	17441-17447	select	_	_	_	_	
123-811	17448-17449	*	_	_	_	_	
123-812	17450-17454	from	_	_	_	_	
123-813	17455-17460	books	_	_	_	_	
123-814	17461-17466	where	_	_	_	_	
123-815	17467-17471	data	_	_	_	_	
123-816	17472-17473	@	_	_	_	_	
123-817	17473-17474	>	_	_	_	_	
123-818	17475-17476	'	_	_	_	_	
123-819	17476-17477	{	_	_	_	_	
123-820	17477-17478	"	_	_	_	_	
123-821	17478-17482	tags	_	_	_	_	
123-822	17482-17483	"	_	_	_	_	
123-823	17483-17484	:	_	_	_	_	
123-824	17484-17485	{	_	_	_	_	
123-825	17485-17486	"	_	_	_	_	
123-826	17486-17494	nk455671	_	_	_	_	
123-827	17494-17495	"	_	_	_	_	
123-828	17495-17496	:	_	_	_	_	
123-829	17496-17497	{	_	_	_	_	
123-830	17497-17498	"	_	_	_	_	
123-831	17498-17506	ik937456	_	_	_	_	
123-832	17506-17507	"	_	_	_	_	
123-833	17507-17508	:	_	_	_	_	
123-834	17508-17509	"	_	_	_	_	
123-835	17509-17517	iv506075	_	_	_	_	
123-836	17517-17518	"	_	_	_	_	
123-837	17518-17519	}	_	_	_	_	
123-838	17519-17520	}	_	_	_	_	
123-839	17520-17521	}	_	_	_	_	
123-840	17521-17522	'	_	_	_	_	
123-841	17522-17523	:	_	_	_	_	
123-842	17523-17524	:	_	_	_	_	
123-843	17524-17529	jsonb	_	_	_	_	
123-844	17529-17530	;	_	_	_	_	
123-845	17531-17533	id	_	_	_	_	
123-846	17534-17535	|	_	_	_	_	
123-847	17536-17542	author	_	_	_	_	
123-848	17543-17544	|	_	_	_	_	
123-849	17545-17549	isbn	_	_	_	_	
123-850	17550-17551	|	_	_	_	_	
123-851	17552-17558	rating	_	_	_	_	
123-852	17559-17560	|	_	_	_	_	
123-853	17561-17565	data	_	_	_	_	
123-854	17566-17567	-	_	_	_	_	
123-855	17567-17568	-	_	_	_	_	
123-856	17568-17569	-	_	_	_	_	
123-857	17569-17570	-	_	_	_	_	
123-858	17570-17571	-	_	_	_	_	
123-859	17571-17572	-	_	_	_	_	
123-860	17572-17573	-	_	_	_	_	
123-861	17573-17574	-	_	_	_	_	
123-862	17574-17575	-	_	_	_	_	
123-863	17575-17576	+	_	_	_	_	
123-864	17576-17577	-	_	_	_	_	
123-865	17577-17578	-	_	_	_	_	
123-866	17578-17579	-	_	_	_	_	
123-867	17579-17580	-	_	_	_	_	
123-868	17580-17581	-	_	_	_	_	
123-869	17581-17582	-	_	_	_	_	
123-870	17582-17583	-	_	_	_	_	
123-871	17583-17584	-	_	_	_	_	
123-872	17584-17585	-	_	_	_	_	
123-873	17585-17586	-	_	_	_	_	
123-874	17586-17587	-	_	_	_	_	
123-875	17587-17588	-	_	_	_	_	
123-876	17588-17589	-	_	_	_	_	
123-877	17589-17590	-	_	_	_	_	
123-878	17590-17591	-	_	_	_	_	
123-879	17591-17592	-	_	_	_	_	
123-880	17592-17593	-	_	_	_	_	
123-881	17593-17594	+	_	_	_	_	
123-882	17594-17595	-	_	_	_	_	
123-883	17595-17596	-	_	_	_	_	
123-884	17596-17597	-	_	_	_	_	
123-885	17597-17598	-	_	_	_	_	
123-886	17598-17599	-	_	_	_	_	
123-887	17599-17600	-	_	_	_	_	
123-888	17600-17601	-	_	_	_	_	
123-889	17601-17602	-	_	_	_	_	
123-890	17602-17603	-	_	_	_	_	
123-891	17603-17604	-	_	_	_	_	
123-892	17604-17605	-	_	_	_	_	
123-893	17605-17606	-	_	_	_	_	
123-894	17606-17607	+	_	_	_	_	
123-895	17607-17608	-	_	_	_	_	
123-896	17608-17609	-	_	_	_	_	
123-897	17609-17610	-	_	_	_	_	
123-898	17610-17611	-	_	_	_	_	
123-899	17611-17612	-	_	_	_	_	
123-900	17612-17613	-	_	_	_	_	
123-901	17613-17614	-	_	_	_	_	
123-902	17614-17615	-	_	_	_	_	
123-903	17615-17616	+	_	_	_	_	
123-904	17616-17617	-	_	_	_	_	
123-905	17617-17618	-	_	_	_	_	
123-906	17618-17619	-	_	_	_	_	
123-907	17619-17620	-	_	_	_	_	
123-908	17620-17621	-	_	_	_	_	
123-909	17621-17622	-	_	_	_	_	
123-910	17622-17623	-	_	_	_	_	
123-911	17623-17624	-	_	_	_	_	
123-912	17624-17625	-	_	_	_	_	
123-913	17625-17626	-	_	_	_	_	
123-914	17626-17627	-	_	_	_	_	
123-915	17627-17628	-	_	_	_	_	
123-916	17628-17629	-	_	_	_	_	
123-917	17629-17630	-	_	_	_	_	
123-918	17630-17631	-	_	_	_	_	
123-919	17631-17632	-	_	_	_	_	
123-920	17632-17633	-	_	_	_	_	
123-921	17633-17634	-	_	_	_	_	
123-922	17634-17635	-	_	_	_	_	
123-923	17635-17636	-	_	_	_	_	
123-924	17636-17637	-	_	_	_	_	
123-925	17637-17638	-	_	_	_	_	
123-926	17638-17639	-	_	_	_	_	
123-927	17639-17640	-	_	_	_	_	
123-928	17640-17641	-	_	_	_	_	
123-929	17641-17642	-	_	_	_	_	
123-930	17642-17643	-	_	_	_	_	
123-931	17643-17644	-	_	_	_	_	
123-932	17644-17645	-	_	_	_	_	
123-933	17645-17646	-	_	_	_	_	
123-934	17646-17647	-	_	_	_	_	
123-935	17647-17648	-	_	_	_	_	
123-936	17648-17649	-	_	_	_	_	
123-937	17649-17650	-	_	_	_	_	
123-938	17650-17651	-	_	_	_	_	
123-939	17651-17652	-	_	_	_	_	
123-940	17652-17653	-	_	_	_	_	
123-941	17653-17654	-	_	_	_	_	
123-942	17654-17655	-	_	_	_	_	
123-943	17655-17656	-	_	_	_	_	
123-944	17656-17657	-	_	_	_	_	
123-945	17657-17658	-	_	_	_	_	
123-946	17658-17659	-	_	_	_	_	
123-947	17659-17660	-	_	_	_	_	
123-948	17660-17661	-	_	_	_	_	
123-949	17661-17662	-	_	_	_	_	
123-950	17662-17663	-	_	_	_	_	
123-951	17663-17664	-	_	_	_	_	
123-952	17664-17665	-	_	_	_	_	
123-953	17665-17666	-	_	_	_	_	
123-954	17666-17667	-	_	_	_	_	
123-955	17667-17668	-	_	_	_	_	
123-956	17668-17669	-	_	_	_	_	
123-957	17669-17670	-	_	_	_	_	
123-958	17670-17671	-	_	_	_	_	
123-959	17671-17672	-	_	_	_	_	
123-960	17672-17673	-	_	_	_	_	
123-961	17673-17674	-	_	_	_	_	
123-962	17674-17675	-	_	_	_	_	
123-963	17675-17676	-	_	_	_	_	
123-964	17676-17677	-	_	_	_	_	
123-965	17677-17678	-	_	_	_	_	
123-966	17678-17679	-	_	_	_	_	
123-967	17679-17680	-	_	_	_	_	
123-968	17680-17681	-	_	_	_	_	
123-969	17681-17682	-	_	_	_	_	
123-970	17682-17683	-	_	_	_	_	
123-971	17683-17684	-	_	_	_	_	
123-972	17684-17685	-	_	_	_	_	
123-973	17685-17686	-	_	_	_	_	
123-974	17686-17687	-	_	_	_	_	
123-975	17687-17688	-	_	_	_	_	
123-976	17688-17689	-	_	_	_	_	
123-977	17689-17690	-	_	_	_	_	
123-978	17690-17691	-	_	_	_	_	
123-979	17691-17692	-	_	_	_	_	
123-980	17692-17693	-	_	_	_	_	
123-981	17693-17694	-	_	_	_	_	
123-982	17694-17695	-	_	_	_	_	
123-983	17695-17696	-	_	_	_	_	
123-984	17696-17697	-	_	_	_	_	
123-985	17697-17698	-	_	_	_	_	
123-986	17698-17699	-	_	_	_	_	
123-987	17699-17700	-	_	_	_	_	
123-988	17700-17701	-	_	_	_	_	
123-989	17701-17702	-	_	_	_	_	
123-990	17702-17703	-	_	_	_	_	
123-991	17703-17704	-	_	_	_	_	
123-992	17704-17705	-	_	_	_	_	
123-993	17705-17706	-	_	_	_	_	
123-994	17706-17707	-	_	_	_	_	
123-995	17707-17708	-	_	_	_	_	
123-996	17708-17709	-	_	_	_	_	
123-997	17709-17710	-	_	_	_	_	
123-998	17710-17711	-	_	_	_	_	
123-999	17711-17712	-	_	_	_	_	
123-1000	17712-17713	-	_	_	_	_	
123-1001	17713-17714	-	_	_	_	_	
123-1002	17714-17715	-	_	_	_	_	
123-1003	17715-17716	-	_	_	_	_	
123-1004	17716-17717	-	_	_	_	_	
123-1005	17717-17718	-	_	_	_	_	
123-1006	17718-17719	-	_	_	_	_	
123-1007	17719-17720	-	_	_	_	_	
123-1008	17720-17721	-	_	_	_	_	
123-1009	17721-17722	-	_	_	_	_	
123-1010	17722-17723	-	_	_	_	_	
123-1011	17723-17724	-	_	_	_	_	
123-1012	17724-17725	-	_	_	_	_	
123-1013	17725-17726	-	_	_	_	_	
123-1014	17726-17727	-	_	_	_	_	
123-1015	17727-17728	-	_	_	_	_	
123-1016	17728-17729	-	_	_	_	_	
123-1017	17729-17730	-	_	_	_	_	
123-1018	17730-17731	-	_	_	_	_	
123-1019	17731-17732	-	_	_	_	_	
123-1020	17732-17733	-	_	_	_	_	
123-1021	17733-17734	-	_	_	_	_	
123-1022	17734-17735	-	_	_	_	_	
123-1023	17735-17736	-	_	_	_	_	
123-1024	17736-17737	-	_	_	_	_	
123-1025	17737-17738	-	_	_	_	_	
123-1026	17738-17739	-	_	_	_	_	
123-1027	17739-17740	-	_	_	_	_	
123-1028	17740-17741	-	_	_	_	_	
123-1029	17741-17742	-	_	_	_	_	
123-1030	17742-17743	-	_	_	_	_	
123-1031	17743-17744	-	_	_	_	_	
123-1032	17744-17745	-	_	_	_	_	
123-1033	17745-17746	-	_	_	_	_	
123-1034	17746-17747	-	_	_	_	_	
123-1035	17747-17748	-	_	_	_	_	
123-1036	17748-17749	-	_	_	_	_	
123-1037	17749-17750	-	_	_	_	_	
123-1038	17750-17751	-	_	_	_	_	
123-1039	17751-17752	-	_	_	_	_	
123-1040	17752-17753	-	_	_	_	_	
123-1041	17753-17754	-	_	_	_	_	
123-1042	17754-17755	-	_	_	_	_	
123-1043	17755-17756	-	_	_	_	_	
123-1044	17756-17757	-	_	_	_	_	
123-1045	17757-17758	-	_	_	_	_	
123-1046	17758-17759	-	_	_	_	_	
123-1047	17759-17760	-	_	_	_	_	
123-1048	17760-17761	-	_	_	_	_	
123-1049	17761-17762	-	_	_	_	_	
123-1050	17762-17763	-	_	_	_	_	
123-1051	17763-17764	-	_	_	_	_	
123-1052	17764-17765	-	_	_	_	_	
123-1053	17765-17766	-	_	_	_	_	
123-1054	17767-17768	-	_	_	_	_	
123-1055	17768-17769	-	_	_	_	_	
123-1056	17769-17770	-	_	_	_	_	
123-1057	17770-17771	-	_	_	_	_	
123-1058	17771-17772	-	_	_	_	_	
123-1059	17772-17773	-	_	_	_	_	
123-1060	17773-17774	-	_	_	_	_	
123-1061	17774-17775	-	_	_	_	_	
123-1062	17775-17776	-	_	_	_	_	
123-1063	17776-17777	-	_	_	_	_	
123-1064	17777-17778	-	_	_	_	_	
123-1065	17778-17779	-	_	_	_	_	
123-1066	17779-17780	-	_	_	_	_	
123-1067	17780-17781	-	_	_	_	_	
123-1068	17781-17782	-	_	_	_	_	
123-1069	17782-17783	-	_	_	_	_	
123-1070	17783-17784	-	_	_	_	_	
123-1071	17784-17785	-	_	_	_	_	
123-1072	17786-17793	1000005	_	_	_	_	
123-1073	17794-17795	|	_	_	_	_	
123-1074	17796-17811	XEI7xShT8bPu6H7	_	_	_	_	
123-1075	17812-17813	|	_	_	_	_	
123-1076	17814-17824	2kD5XJDZUF	_	_	_	_	
123-1077	17825-17826	|	_	_	_	_	
123-1078	17827-17828	0	_	_	_	_	
123-1079	17829-17830	|	_	_	_	_	
123-1080	17831-17832	{	_	_	_	_	
123-1081	17832-17833	"	_	_	_	_	
123-1082	17833-17837	tags	_	_	_	_	
123-1083	17837-17838	"	_	_	_	_	
123-1084	17838-17839	:	_	_	_	_	
123-1085	17840-17841	{	_	_	_	_	
123-1086	17841-17842	"	_	_	_	_	
123-1087	17842-17850	nk455671	_	_	_	_	
123-1088	17850-17851	"	_	_	_	_	
123-1089	17851-17852	:	_	_	_	_	
123-1090	17853-17854	{	_	_	_	_	
123-1091	17854-17855	"	_	_	_	_	
123-1092	17855-17863	ik937456	_	_	_	_	
123-1093	17863-17864	"	_	_	_	_	
123-1094	17864-17865	:	_	_	_	_	
123-1095	17866-17867	"	_	_	_	_	
123-1096	17867-17875	iv506075	_	_	_	_	
123-1097	17875-17876	"	_	_	_	_	
123-1098	17876-17877	}	_	_	_	_	
123-1099	17877-17878	}	_	_	_	_	
123-1100	17878-17879	,	_	_	_	_	
123-1101	17880-17881	"	_	_	_	_	
123-1102	17881-17888	braille	_	_	_	_	
123-1103	17888-17889	"	_	_	_	_	
123-1104	17889-17890	:	_	_	_	_	
123-1105	17891-17895	true	_	_	_	_	
123-1106	17895-17896	,	_	_	_	_	
123-1107	17897-17898	"	_	_	_	_	
123-1108	17898-17906	keywords	_	_	_	_	
123-1109	17906-17907	"	_	_	_	_	
123-1110	17907-17908	:	_	_	_	_	
123-1111	17909-17910	[	_	_	_	_	
123-1112	17910-17911	"	_	_	_	_	
123-1113	17911-17914	abc	_	_	_	_	
123-1114	17914-17915	"	_	_	_	_	
123-1115	17915-17916	,	_	_	_	_	
123-1116	17917-17918	"	_	_	_	_	
123-1117	17918-17921	kef	_	_	_	_	
123-1118	17921-17922	"	_	_	_	_	
123-1119	17922-17923	,	_	_	_	_	
123-1120	17924-17925	"	_	_	_	_	
123-1121	17925-17928	keh	_	_	_	_	
123-1122	17928-17929	"	_	_	_	_	
123-1123	17929-17930	]	_	_	_	_	
123-1124	17930-17931	,	_	_	_	_	
123-1125	17932-17933	"	_	_	_	_	
123-1126	17933-17942	hardcover	_	_	_	_	
123-1127	17942-17943	"	_	_	_	_	
123-1128	17943-17944	:	_	_	_	_	
123-1129	17945-17950	false	_	_	_	_	
123-1130	17950-17951	,	_	_	_	_	
123-1131	17952-17953	"	_	_	_	_	
123-1132	17953-17962	publisher	_	_	_	_	
123-1133	17962-17963	"	_	_	_	_	
123-1134	17963-17964	:	_	_	_	_	
123-1135	17965-17966	"	_	_	_	_	
123-1136	17966-17976	zSfZIAjGGs	_	_	_	_	
123-1137	17976-17977	"	_	_	_	_	
123-1138	17977-17978	,	_	_	_	_	
123-1139	17979-17980	"	_	_	_	_	
123-1140	17981-17993	criticrating	_	_	_	_	
123-1141	17993-17994	"	_	_	_	_	
123-1142	17994-17995	:	_	_	_	_	
123-1143	17996-17997	4	_	_	_	_	
123-1144	17997-17998	}	_	_	_	_	
123-1145	17999-18000	(	_	_	_	_	
123-1146	18000-18001	1	_	_	_	_	
123-1147	18002-18005	row	_	_	_	_	
123-1148	18005-18006	)	_	_	_	_	
123-1149	18007-18010	GIN	_	_	_	_	
123-1150	18010-18011	 	_	_	_	_	
123-1151	18011-18016	Index	_	_	_	_	
123-1152	18017-18018	“	_	_	_	_	
123-1153	18018-18025	pathops	_	_	_	_	
123-1154	18025-18026	”	_	_	_	_	
123-1155	18027-18035	Operator	_	_	_	_	
123-1156	18036-18041	Class	_	_	_	_	
123-1157	18042-18045	GIN	_	_	_	_	
123-1158	18046-18050	also	_	_	_	_	
123-1159	18051-18059	supports	_	_	_	_	
123-1160	18060-18061	a	_	_	_	_	
123-1161	18062-18063	“	_	_	_	_	
123-1162	18063-18070	pathops	_	_	_	_	
123-1163	18070-18071	”	_	_	_	_	
123-1164	18072-18078	option	_	_	_	_	
123-1165	18079-18081	to	_	_	_	_	
123-1166	18082-18088	reduce	_	_	_	_	
123-1167	18089-18092	the	_	_	_	_	
123-1168	18093-18097	size	_	_	_	_	
123-1169	18098-18100	of	_	_	_	_	
123-1170	18101-18104	the	_	_	_	_	
123-1171	18105-18108	GIN	_	_	_	_	
123-1172	18109-18114	index	_	_	_	_	
123-1173	18114-18115	.	_	_	_	_	

#Text=When you use the pathops option, the only operator support is the “@>” so you need to be careful with your queries.
124-1	18116-18120	When	_	_	_	_	
124-2	18121-18124	you	_	_	_	_	
124-3	18125-18128	use	_	_	_	_	
124-4	18129-18132	the	_	_	_	_	
124-5	18133-18140	pathops	_	_	_	_	
124-6	18141-18147	option	_	_	_	_	
124-7	18147-18148	,	_	_	_	_	
124-8	18149-18152	the	_	_	_	_	
124-9	18153-18157	only	_	_	_	_	
124-10	18158-18166	operator	_	_	_	_	
124-11	18167-18174	support	_	_	_	_	
124-12	18175-18177	is	_	_	_	_	
124-13	18178-18181	the	_	_	_	_	
124-14	18182-18183	“	_	_	_	_	
124-15	18183-18184	@	_	_	_	_	
124-16	18184-18185	>	_	_	_	_	
124-17	18185-18186	”	_	_	_	_	
124-18	18187-18189	so	_	_	_	_	
124-19	18190-18193	you	_	_	_	_	
124-20	18194-18198	need	_	_	_	_	
124-21	18199-18201	to	_	_	_	_	
124-22	18202-18204	be	_	_	_	_	
124-23	18205-18212	careful	_	_	_	_	
124-24	18213-18217	with	_	_	_	_	
124-25	18218-18222	your	_	_	_	_	
124-26	18223-18230	queries	_	_	_	_	
124-27	18230-18231	.	_	_	_	_	

#Text=From the docs:
#Text=“The technical difference between a jsonb_ops and a jsonb_path_ops GIN index is that the former creates independent index items for each key and value in the data, while the latter creates index items only for each value in the data”
#Text=You can create a GIN pathops index as follows:
#Text=CREATE INDEX dataginpathops ON books USING gin (data jsonb_path_ops);
#Text=On my small dataset of 1 million books, you can see that the pathops GIN index is smaller – you should test with your dataset to understand the savings:
#Text=public | dataginpathops | index | sgpostgres | books | 67 MB |
#Text=public | datatagsgin | index | sgpostgres | books | 84 MB |
#Text=Let’s rerun our query from before with the pathops index:
#Text=demo=# select * from books where data @> '{"tags":{"nk455671":{"ik937456":"iv506075"}}}'::jsonb;
#Text=id | author | isbn | rating | data
#Text=---------+-----------------+------------+--------+------------------------------------------------------------------------------------------------------------------------------------------------------
#Text=------------------
#Text=1000005 | XEI7xShT8bPu6H7 | 2kD5XJDZUF | 0 | {"tags": {"nk455671": {"ik937456": "iv506075"}}, "braille": true, "keywords": ["abc", "kef", "keh"], "hardcover": false, "publisher": "zSfZIAjGGs", "
#Text=criticrating": 4}
#Text=(1 row)
#Text=demo=# explain select * from books where data @> '{"tags":{"nk455671":{"ik937456":"iv506075"}}}'::jsonb;
#Text=QUERY PLAN
#Text=-----------------------------------------------------------------------------------------
#Text=Bitmap Heap Scan on books (cost=12.75..1005.25 rows=1000 width=158)
#Text=Recheck Cond: (data @> '{"tags": {"nk455671": {"ik937456": "iv506075"}}}'::jsonb)
#Text=-> Bitmap Index Scan on dataginpathops (cost=0.00..12.50 rows=1000 width=0)
#Text=Index Cond: (data @> '{"tags": {"nk455671": {"ik937456": "iv506075"}}}'::jsonb)
#Text=(4 rows)
#Text=However, as mentioned above, the “pathops” option does not support all of the scenarios that the default operator class supports.
125-1	18232-18236	From	_	_	_	_	
125-2	18237-18240	the	_	_	_	_	
125-3	18241-18245	docs	_	_	_	_	
125-4	18245-18246	:	_	_	_	_	
125-5	18247-18248	“	_	_	_	_	
125-6	18248-18251	The	_	_	_	_	
125-7	18252-18261	technical	_	_	_	_	
125-8	18262-18272	difference	_	_	_	_	
125-9	18273-18280	between	_	_	_	_	
125-10	18281-18282	a	_	_	_	_	
125-11	18283-18292	jsonb_ops	_	_	_	_	
125-12	18293-18296	and	_	_	_	_	
125-13	18297-18298	a	_	_	_	_	
125-14	18299-18313	jsonb_path_ops	_	_	_	_	
125-15	18314-18317	GIN	_	_	_	_	
125-16	18318-18323	index	_	_	_	_	
125-17	18324-18326	is	_	_	_	_	
125-18	18327-18331	that	_	_	_	_	
125-19	18332-18335	the	_	_	_	_	
125-20	18336-18342	former	_	_	_	_	
125-21	18343-18350	creates	_	_	_	_	
125-22	18351-18362	independent	_	_	_	_	
125-23	18363-18368	index	_	_	_	_	
125-24	18369-18374	items	_	_	_	_	
125-25	18375-18378	for	_	_	_	_	
125-26	18379-18383	each	_	_	_	_	
125-27	18384-18387	key	_	_	_	_	
125-28	18388-18391	and	_	_	_	_	
125-29	18392-18397	value	_	_	_	_	
125-30	18398-18400	in	_	_	_	_	
125-31	18401-18404	the	_	_	_	_	
125-32	18405-18409	data	_	_	_	_	
125-33	18409-18410	,	_	_	_	_	
125-34	18411-18416	while	_	_	_	_	
125-35	18417-18420	the	_	_	_	_	
125-36	18421-18427	latter	_	_	_	_	
125-37	18428-18435	creates	_	_	_	_	
125-38	18436-18441	index	_	_	_	_	
125-39	18442-18447	items	_	_	_	_	
125-40	18448-18452	only	_	_	_	_	
125-41	18453-18456	for	_	_	_	_	
125-42	18457-18461	each	_	_	_	_	
125-43	18462-18467	value	_	_	_	_	
125-44	18468-18470	in	_	_	_	_	
125-45	18471-18474	the	_	_	_	_	
125-46	18475-18479	data	_	_	_	_	
125-47	18479-18480	”	_	_	_	_	
125-48	18481-18484	You	_	_	_	_	
125-49	18485-18488	can	_	_	_	_	
125-50	18489-18495	create	_	_	_	_	
125-51	18496-18497	a	_	_	_	_	
125-52	18498-18501	GIN	_	_	_	_	
125-53	18502-18509	pathops	_	_	_	_	
125-54	18510-18515	index	_	_	_	_	
125-55	18516-18518	as	_	_	_	_	
125-56	18519-18526	follows	_	_	_	_	
125-57	18526-18527	:	_	_	_	_	
125-58	18528-18534	CREATE	_	_	_	_	
125-59	18535-18540	INDEX	_	_	_	_	
125-60	18541-18555	dataginpathops	_	_	_	_	
125-61	18556-18558	ON	_	_	_	_	
125-62	18559-18564	books	_	_	_	_	
125-63	18565-18570	USING	_	_	_	_	
125-64	18571-18574	gin	_	_	_	_	
125-65	18575-18576	(	_	_	_	_	
125-66	18576-18580	data	_	_	_	_	
125-67	18581-18595	jsonb_path_ops	_	_	_	_	
125-68	18595-18596	)	_	_	_	_	
125-69	18596-18597	;	_	_	_	_	
125-70	18598-18600	On	_	_	_	_	
125-71	18601-18603	my	_	_	_	_	
125-72	18604-18609	small	_	_	_	_	
125-73	18610-18617	dataset	_	_	_	_	
125-74	18618-18620	of	_	_	_	_	
125-75	18621-18622	1	_	_	_	_	
125-76	18622-18623	 	_	_	_	_	
125-77	18623-18630	million	_	_	_	_	
125-78	18631-18636	books	_	_	_	_	
125-79	18636-18637	,	_	_	_	_	
125-80	18638-18641	you	_	_	_	_	
125-81	18642-18645	can	_	_	_	_	
125-82	18646-18649	see	_	_	_	_	
125-83	18650-18654	that	_	_	_	_	
125-84	18655-18658	the	_	_	_	_	
125-85	18659-18666	pathops	_	_	_	_	
125-86	18667-18670	GIN	_	_	_	_	
125-87	18671-18676	index	_	_	_	_	
125-88	18677-18679	is	_	_	_	_	
125-89	18680-18687	smaller	_	_	_	_	
125-90	18688-18689	–	_	_	_	_	
125-91	18690-18693	you	_	_	_	_	
125-92	18694-18700	should	_	_	_	_	
125-93	18701-18705	test	_	_	_	_	
125-94	18706-18710	with	_	_	_	_	
125-95	18711-18715	your	_	_	_	_	
125-96	18716-18723	dataset	_	_	_	_	
125-97	18724-18726	to	_	_	_	_	
125-98	18727-18737	understand	_	_	_	_	
125-99	18738-18741	the	_	_	_	_	
125-100	18742-18749	savings	_	_	_	_	
125-101	18749-18750	:	_	_	_	_	
125-102	18751-18757	public	_	_	_	_	
125-103	18758-18759	|	_	_	_	_	
125-104	18760-18774	dataginpathops	_	_	_	_	
125-105	18775-18776	|	_	_	_	_	
125-106	18777-18782	index	_	_	_	_	
125-107	18783-18784	|	_	_	_	_	
125-108	18785-18795	sgpostgres	_	_	_	_	
125-109	18796-18797	|	_	_	_	_	
125-110	18798-18803	books	_	_	_	_	
125-111	18804-18805	|	_	_	_	_	
125-112	18806-18808	67	_	_	_	_	
125-113	18809-18811	MB	_	_	_	_	
125-114	18812-18813	|	_	_	_	_	
125-115	18814-18820	public	_	_	_	_	
125-116	18821-18822	|	_	_	_	_	
125-117	18823-18834	datatagsgin	_	_	_	_	
125-118	18835-18836	|	_	_	_	_	
125-119	18837-18842	index	_	_	_	_	
125-120	18843-18844	|	_	_	_	_	
125-121	18845-18855	sgpostgres	_	_	_	_	
125-122	18856-18857	|	_	_	_	_	
125-123	18858-18863	books	_	_	_	_	
125-124	18864-18865	|	_	_	_	_	
125-125	18866-18868	84	_	_	_	_	
125-126	18869-18871	MB	_	_	_	_	
125-127	18872-18873	|	_	_	_	_	
125-128	18874-18877	Let	_	_	_	_	
125-129	18877-18878	’	_	_	_	_	
125-130	18878-18879	s	_	_	_	_	
125-131	18880-18885	rerun	_	_	_	_	
125-132	18886-18889	our	_	_	_	_	
125-133	18890-18895	query	_	_	_	_	
125-134	18896-18900	from	_	_	_	_	
125-135	18901-18907	before	_	_	_	_	
125-136	18908-18912	with	_	_	_	_	
125-137	18913-18916	the	_	_	_	_	
125-138	18917-18924	pathops	_	_	_	_	
125-139	18925-18930	index	_	_	_	_	
125-140	18930-18931	:	_	_	_	_	
125-141	18932-18936	demo	_	_	_	_	
125-142	18936-18937	=	_	_	_	_	
125-143	18937-18938	#	_	_	_	_	
125-144	18939-18945	select	_	_	_	_	
125-145	18946-18947	*	_	_	_	_	
125-146	18948-18952	from	_	_	_	_	
125-147	18953-18958	books	_	_	_	_	
125-148	18959-18964	where	_	_	_	_	
125-149	18965-18969	data	_	_	_	_	
125-150	18970-18971	@	_	_	_	_	
125-151	18971-18972	>	_	_	_	_	
125-152	18973-18974	'	_	_	_	_	
125-153	18974-18975	{	_	_	_	_	
125-154	18975-18976	"	_	_	_	_	
125-155	18976-18980	tags	_	_	_	_	
125-156	18980-18981	"	_	_	_	_	
125-157	18981-18982	:	_	_	_	_	
125-158	18982-18983	{	_	_	_	_	
125-159	18983-18984	"	_	_	_	_	
125-160	18984-18992	nk455671	_	_	_	_	
125-161	18992-18993	"	_	_	_	_	
125-162	18993-18994	:	_	_	_	_	
125-163	18994-18995	{	_	_	_	_	
125-164	18995-18996	"	_	_	_	_	
125-165	18996-19004	ik937456	_	_	_	_	
125-166	19004-19005	"	_	_	_	_	
125-167	19005-19006	:	_	_	_	_	
125-168	19006-19007	"	_	_	_	_	
125-169	19007-19015	iv506075	_	_	_	_	
125-170	19015-19016	"	_	_	_	_	
125-171	19016-19017	}	_	_	_	_	
125-172	19017-19018	}	_	_	_	_	
125-173	19018-19019	}	_	_	_	_	
125-174	19019-19020	'	_	_	_	_	
125-175	19020-19021	:	_	_	_	_	
125-176	19021-19022	:	_	_	_	_	
125-177	19022-19027	jsonb	_	_	_	_	
125-178	19027-19028	;	_	_	_	_	
125-179	19029-19031	id	_	_	_	_	
125-180	19032-19033	|	_	_	_	_	
125-181	19034-19040	author	_	_	_	_	
125-182	19041-19042	|	_	_	_	_	
125-183	19043-19047	isbn	_	_	_	_	
125-184	19048-19049	|	_	_	_	_	
125-185	19050-19056	rating	_	_	_	_	
125-186	19057-19058	|	_	_	_	_	
125-187	19059-19063	data	_	_	_	_	
125-188	19064-19065	-	_	_	_	_	
125-189	19065-19066	-	_	_	_	_	
125-190	19066-19067	-	_	_	_	_	
125-191	19067-19068	-	_	_	_	_	
125-192	19068-19069	-	_	_	_	_	
125-193	19069-19070	-	_	_	_	_	
125-194	19070-19071	-	_	_	_	_	
125-195	19071-19072	-	_	_	_	_	
125-196	19072-19073	-	_	_	_	_	
125-197	19073-19074	+	_	_	_	_	
125-198	19074-19075	-	_	_	_	_	
125-199	19075-19076	-	_	_	_	_	
125-200	19076-19077	-	_	_	_	_	
125-201	19077-19078	-	_	_	_	_	
125-202	19078-19079	-	_	_	_	_	
125-203	19079-19080	-	_	_	_	_	
125-204	19080-19081	-	_	_	_	_	
125-205	19081-19082	-	_	_	_	_	
125-206	19082-19083	-	_	_	_	_	
125-207	19083-19084	-	_	_	_	_	
125-208	19084-19085	-	_	_	_	_	
125-209	19085-19086	-	_	_	_	_	
125-210	19086-19087	-	_	_	_	_	
125-211	19087-19088	-	_	_	_	_	
125-212	19088-19089	-	_	_	_	_	
125-213	19089-19090	-	_	_	_	_	
125-214	19090-19091	-	_	_	_	_	
125-215	19091-19092	+	_	_	_	_	
125-216	19092-19093	-	_	_	_	_	
125-217	19093-19094	-	_	_	_	_	
125-218	19094-19095	-	_	_	_	_	
125-219	19095-19096	-	_	_	_	_	
125-220	19096-19097	-	_	_	_	_	
125-221	19097-19098	-	_	_	_	_	
125-222	19098-19099	-	_	_	_	_	
125-223	19099-19100	-	_	_	_	_	
125-224	19100-19101	-	_	_	_	_	
125-225	19101-19102	-	_	_	_	_	
125-226	19102-19103	-	_	_	_	_	
125-227	19103-19104	-	_	_	_	_	
125-228	19104-19105	+	_	_	_	_	
125-229	19105-19106	-	_	_	_	_	
125-230	19106-19107	-	_	_	_	_	
125-231	19107-19108	-	_	_	_	_	
125-232	19108-19109	-	_	_	_	_	
125-233	19109-19110	-	_	_	_	_	
125-234	19110-19111	-	_	_	_	_	
125-235	19111-19112	-	_	_	_	_	
125-236	19112-19113	-	_	_	_	_	
125-237	19113-19114	+	_	_	_	_	
125-238	19114-19115	-	_	_	_	_	
125-239	19115-19116	-	_	_	_	_	
125-240	19116-19117	-	_	_	_	_	
125-241	19117-19118	-	_	_	_	_	
125-242	19118-19119	-	_	_	_	_	
125-243	19119-19120	-	_	_	_	_	
125-244	19120-19121	-	_	_	_	_	
125-245	19121-19122	-	_	_	_	_	
125-246	19122-19123	-	_	_	_	_	
125-247	19123-19124	-	_	_	_	_	
125-248	19124-19125	-	_	_	_	_	
125-249	19125-19126	-	_	_	_	_	
125-250	19126-19127	-	_	_	_	_	
125-251	19127-19128	-	_	_	_	_	
125-252	19128-19129	-	_	_	_	_	
125-253	19129-19130	-	_	_	_	_	
125-254	19130-19131	-	_	_	_	_	
125-255	19131-19132	-	_	_	_	_	
125-256	19132-19133	-	_	_	_	_	
125-257	19133-19134	-	_	_	_	_	
125-258	19134-19135	-	_	_	_	_	
125-259	19135-19136	-	_	_	_	_	
125-260	19136-19137	-	_	_	_	_	
125-261	19137-19138	-	_	_	_	_	
125-262	19138-19139	-	_	_	_	_	
125-263	19139-19140	-	_	_	_	_	
125-264	19140-19141	-	_	_	_	_	
125-265	19141-19142	-	_	_	_	_	
125-266	19142-19143	-	_	_	_	_	
125-267	19143-19144	-	_	_	_	_	
125-268	19144-19145	-	_	_	_	_	
125-269	19145-19146	-	_	_	_	_	
125-270	19146-19147	-	_	_	_	_	
125-271	19147-19148	-	_	_	_	_	
125-272	19148-19149	-	_	_	_	_	
125-273	19149-19150	-	_	_	_	_	
125-274	19150-19151	-	_	_	_	_	
125-275	19151-19152	-	_	_	_	_	
125-276	19152-19153	-	_	_	_	_	
125-277	19153-19154	-	_	_	_	_	
125-278	19154-19155	-	_	_	_	_	
125-279	19155-19156	-	_	_	_	_	
125-280	19156-19157	-	_	_	_	_	
125-281	19157-19158	-	_	_	_	_	
125-282	19158-19159	-	_	_	_	_	
125-283	19159-19160	-	_	_	_	_	
125-284	19160-19161	-	_	_	_	_	
125-285	19161-19162	-	_	_	_	_	
125-286	19162-19163	-	_	_	_	_	
125-287	19163-19164	-	_	_	_	_	
125-288	19164-19165	-	_	_	_	_	
125-289	19165-19166	-	_	_	_	_	
125-290	19166-19167	-	_	_	_	_	
125-291	19167-19168	-	_	_	_	_	
125-292	19168-19169	-	_	_	_	_	
125-293	19169-19170	-	_	_	_	_	
125-294	19170-19171	-	_	_	_	_	
125-295	19171-19172	-	_	_	_	_	
125-296	19172-19173	-	_	_	_	_	
125-297	19173-19174	-	_	_	_	_	
125-298	19174-19175	-	_	_	_	_	
125-299	19175-19176	-	_	_	_	_	
125-300	19176-19177	-	_	_	_	_	
125-301	19177-19178	-	_	_	_	_	
125-302	19178-19179	-	_	_	_	_	
125-303	19179-19180	-	_	_	_	_	
125-304	19180-19181	-	_	_	_	_	
125-305	19181-19182	-	_	_	_	_	
125-306	19182-19183	-	_	_	_	_	
125-307	19183-19184	-	_	_	_	_	
125-308	19184-19185	-	_	_	_	_	
125-309	19185-19186	-	_	_	_	_	
125-310	19186-19187	-	_	_	_	_	
125-311	19187-19188	-	_	_	_	_	
125-312	19188-19189	-	_	_	_	_	
125-313	19189-19190	-	_	_	_	_	
125-314	19190-19191	-	_	_	_	_	
125-315	19191-19192	-	_	_	_	_	
125-316	19192-19193	-	_	_	_	_	
125-317	19193-19194	-	_	_	_	_	
125-318	19194-19195	-	_	_	_	_	
125-319	19195-19196	-	_	_	_	_	
125-320	19196-19197	-	_	_	_	_	
125-321	19197-19198	-	_	_	_	_	
125-322	19198-19199	-	_	_	_	_	
125-323	19199-19200	-	_	_	_	_	
125-324	19200-19201	-	_	_	_	_	
125-325	19201-19202	-	_	_	_	_	
125-326	19202-19203	-	_	_	_	_	
125-327	19203-19204	-	_	_	_	_	
125-328	19204-19205	-	_	_	_	_	
125-329	19205-19206	-	_	_	_	_	
125-330	19206-19207	-	_	_	_	_	
125-331	19207-19208	-	_	_	_	_	
125-332	19208-19209	-	_	_	_	_	
125-333	19209-19210	-	_	_	_	_	
125-334	19210-19211	-	_	_	_	_	
125-335	19211-19212	-	_	_	_	_	
125-336	19212-19213	-	_	_	_	_	
125-337	19213-19214	-	_	_	_	_	
125-338	19214-19215	-	_	_	_	_	
125-339	19215-19216	-	_	_	_	_	
125-340	19216-19217	-	_	_	_	_	
125-341	19217-19218	-	_	_	_	_	
125-342	19218-19219	-	_	_	_	_	
125-343	19219-19220	-	_	_	_	_	
125-344	19220-19221	-	_	_	_	_	
125-345	19221-19222	-	_	_	_	_	
125-346	19222-19223	-	_	_	_	_	
125-347	19223-19224	-	_	_	_	_	
125-348	19224-19225	-	_	_	_	_	
125-349	19225-19226	-	_	_	_	_	
125-350	19226-19227	-	_	_	_	_	
125-351	19227-19228	-	_	_	_	_	
125-352	19228-19229	-	_	_	_	_	
125-353	19229-19230	-	_	_	_	_	
125-354	19230-19231	-	_	_	_	_	
125-355	19231-19232	-	_	_	_	_	
125-356	19232-19233	-	_	_	_	_	
125-357	19233-19234	-	_	_	_	_	
125-358	19234-19235	-	_	_	_	_	
125-359	19235-19236	-	_	_	_	_	
125-360	19236-19237	-	_	_	_	_	
125-361	19237-19238	-	_	_	_	_	
125-362	19238-19239	-	_	_	_	_	
125-363	19239-19240	-	_	_	_	_	
125-364	19240-19241	-	_	_	_	_	
125-365	19241-19242	-	_	_	_	_	
125-366	19242-19243	-	_	_	_	_	
125-367	19243-19244	-	_	_	_	_	
125-368	19244-19245	-	_	_	_	_	
125-369	19245-19246	-	_	_	_	_	
125-370	19246-19247	-	_	_	_	_	
125-371	19247-19248	-	_	_	_	_	
125-372	19248-19249	-	_	_	_	_	
125-373	19249-19250	-	_	_	_	_	
125-374	19250-19251	-	_	_	_	_	
125-375	19251-19252	-	_	_	_	_	
125-376	19252-19253	-	_	_	_	_	
125-377	19253-19254	-	_	_	_	_	
125-378	19254-19255	-	_	_	_	_	
125-379	19255-19256	-	_	_	_	_	
125-380	19256-19257	-	_	_	_	_	
125-381	19257-19258	-	_	_	_	_	
125-382	19258-19259	-	_	_	_	_	
125-383	19259-19260	-	_	_	_	_	
125-384	19260-19261	-	_	_	_	_	
125-385	19261-19262	-	_	_	_	_	
125-386	19262-19263	-	_	_	_	_	
125-387	19263-19264	-	_	_	_	_	
125-388	19265-19266	-	_	_	_	_	
125-389	19266-19267	-	_	_	_	_	
125-390	19267-19268	-	_	_	_	_	
125-391	19268-19269	-	_	_	_	_	
125-392	19269-19270	-	_	_	_	_	
125-393	19270-19271	-	_	_	_	_	
125-394	19271-19272	-	_	_	_	_	
125-395	19272-19273	-	_	_	_	_	
125-396	19273-19274	-	_	_	_	_	
125-397	19274-19275	-	_	_	_	_	
125-398	19275-19276	-	_	_	_	_	
125-399	19276-19277	-	_	_	_	_	
125-400	19277-19278	-	_	_	_	_	
125-401	19278-19279	-	_	_	_	_	
125-402	19279-19280	-	_	_	_	_	
125-403	19280-19281	-	_	_	_	_	
125-404	19281-19282	-	_	_	_	_	
125-405	19282-19283	-	_	_	_	_	
125-406	19284-19291	1000005	_	_	_	_	
125-407	19292-19293	|	_	_	_	_	
125-408	19294-19309	XEI7xShT8bPu6H7	_	_	_	_	
125-409	19310-19311	|	_	_	_	_	
125-410	19312-19322	2kD5XJDZUF	_	_	_	_	
125-411	19323-19324	|	_	_	_	_	
125-412	19325-19326	0	_	_	_	_	
125-413	19327-19328	|	_	_	_	_	
125-414	19329-19330	{	_	_	_	_	
125-415	19330-19331	"	_	_	_	_	
125-416	19331-19335	tags	_	_	_	_	
125-417	19335-19336	"	_	_	_	_	
125-418	19336-19337	:	_	_	_	_	
125-419	19338-19339	{	_	_	_	_	
125-420	19339-19340	"	_	_	_	_	
125-421	19340-19348	nk455671	_	_	_	_	
125-422	19348-19349	"	_	_	_	_	
125-423	19349-19350	:	_	_	_	_	
125-424	19351-19352	{	_	_	_	_	
125-425	19352-19353	"	_	_	_	_	
125-426	19353-19361	ik937456	_	_	_	_	
125-427	19361-19362	"	_	_	_	_	
125-428	19362-19363	:	_	_	_	_	
125-429	19364-19365	"	_	_	_	_	
125-430	19365-19373	iv506075	_	_	_	_	
125-431	19373-19374	"	_	_	_	_	
125-432	19374-19375	}	_	_	_	_	
125-433	19375-19376	}	_	_	_	_	
125-434	19376-19377	,	_	_	_	_	
125-435	19378-19379	"	_	_	_	_	
125-436	19379-19386	braille	_	_	_	_	
125-437	19386-19387	"	_	_	_	_	
125-438	19387-19388	:	_	_	_	_	
125-439	19389-19393	true	_	_	_	_	
125-440	19393-19394	,	_	_	_	_	
125-441	19395-19396	"	_	_	_	_	
125-442	19396-19404	keywords	_	_	_	_	
125-443	19404-19405	"	_	_	_	_	
125-444	19405-19406	:	_	_	_	_	
125-445	19407-19408	[	_	_	_	_	
125-446	19408-19409	"	_	_	_	_	
125-447	19409-19412	abc	_	_	_	_	
125-448	19412-19413	"	_	_	_	_	
125-449	19413-19414	,	_	_	_	_	
125-450	19415-19416	"	_	_	_	_	
125-451	19416-19419	kef	_	_	_	_	
125-452	19419-19420	"	_	_	_	_	
125-453	19420-19421	,	_	_	_	_	
125-454	19422-19423	"	_	_	_	_	
125-455	19423-19426	keh	_	_	_	_	
125-456	19426-19427	"	_	_	_	_	
125-457	19427-19428	]	_	_	_	_	
125-458	19428-19429	,	_	_	_	_	
125-459	19430-19431	"	_	_	_	_	
125-460	19431-19440	hardcover	_	_	_	_	
125-461	19440-19441	"	_	_	_	_	
125-462	19441-19442	:	_	_	_	_	
125-463	19443-19448	false	_	_	_	_	
125-464	19448-19449	,	_	_	_	_	
125-465	19450-19451	"	_	_	_	_	
125-466	19451-19460	publisher	_	_	_	_	
125-467	19460-19461	"	_	_	_	_	
125-468	19461-19462	:	_	_	_	_	
125-469	19463-19464	"	_	_	_	_	
125-470	19464-19474	zSfZIAjGGs	_	_	_	_	
125-471	19474-19475	"	_	_	_	_	
125-472	19475-19476	,	_	_	_	_	
125-473	19477-19478	"	_	_	_	_	
125-474	19479-19491	criticrating	_	_	_	_	
125-475	19491-19492	"	_	_	_	_	
125-476	19492-19493	:	_	_	_	_	
125-477	19494-19495	4	_	_	_	_	
125-478	19495-19496	}	_	_	_	_	
125-479	19497-19498	(	_	_	_	_	
125-480	19498-19499	1	_	_	_	_	
125-481	19500-19503	row	_	_	_	_	
125-482	19503-19504	)	_	_	_	_	
125-483	19505-19509	demo	_	_	_	_	
125-484	19509-19510	=	_	_	_	_	
125-485	19510-19511	#	_	_	_	_	
125-486	19512-19519	explain	_	_	_	_	
125-487	19520-19526	select	_	_	_	_	
125-488	19527-19528	*	_	_	_	_	
125-489	19529-19533	from	_	_	_	_	
125-490	19534-19539	books	_	_	_	_	
125-491	19540-19545	where	_	_	_	_	
125-492	19546-19550	data	_	_	_	_	
125-493	19551-19552	@	_	_	_	_	
125-494	19552-19553	>	_	_	_	_	
125-495	19554-19555	'	_	_	_	_	
125-496	19555-19556	{	_	_	_	_	
125-497	19556-19557	"	_	_	_	_	
125-498	19557-19561	tags	_	_	_	_	
125-499	19561-19562	"	_	_	_	_	
125-500	19562-19563	:	_	_	_	_	
125-501	19563-19564	{	_	_	_	_	
125-502	19564-19565	"	_	_	_	_	
125-503	19565-19573	nk455671	_	_	_	_	
125-504	19573-19574	"	_	_	_	_	
125-505	19574-19575	:	_	_	_	_	
125-506	19575-19576	{	_	_	_	_	
125-507	19576-19577	"	_	_	_	_	
125-508	19577-19585	ik937456	_	_	_	_	
125-509	19585-19586	"	_	_	_	_	
125-510	19586-19587	:	_	_	_	_	
125-511	19587-19588	"	_	_	_	_	
125-512	19588-19596	iv506075	_	_	_	_	
125-513	19596-19597	"	_	_	_	_	
125-514	19597-19598	}	_	_	_	_	
125-515	19598-19599	}	_	_	_	_	
125-516	19599-19600	}	_	_	_	_	
125-517	19600-19601	'	_	_	_	_	
125-518	19601-19602	:	_	_	_	_	
125-519	19602-19603	:	_	_	_	_	
125-520	19603-19608	jsonb	_	_	_	_	
125-521	19608-19609	;	_	_	_	_	
125-522	19610-19615	QUERY	_	_	_	_	
125-523	19616-19620	PLAN	_	_	_	_	
125-524	19621-19622	-	_	_	_	_	
125-525	19622-19623	-	_	_	_	_	
125-526	19623-19624	-	_	_	_	_	
125-527	19624-19625	-	_	_	_	_	
125-528	19625-19626	-	_	_	_	_	
125-529	19626-19627	-	_	_	_	_	
125-530	19627-19628	-	_	_	_	_	
125-531	19628-19629	-	_	_	_	_	
125-532	19629-19630	-	_	_	_	_	
125-533	19630-19631	-	_	_	_	_	
125-534	19631-19632	-	_	_	_	_	
125-535	19632-19633	-	_	_	_	_	
125-536	19633-19634	-	_	_	_	_	
125-537	19634-19635	-	_	_	_	_	
125-538	19635-19636	-	_	_	_	_	
125-539	19636-19637	-	_	_	_	_	
125-540	19637-19638	-	_	_	_	_	
125-541	19638-19639	-	_	_	_	_	
125-542	19639-19640	-	_	_	_	_	
125-543	19640-19641	-	_	_	_	_	
125-544	19641-19642	-	_	_	_	_	
125-545	19642-19643	-	_	_	_	_	
125-546	19643-19644	-	_	_	_	_	
125-547	19644-19645	-	_	_	_	_	
125-548	19645-19646	-	_	_	_	_	
125-549	19646-19647	-	_	_	_	_	
125-550	19647-19648	-	_	_	_	_	
125-551	19648-19649	-	_	_	_	_	
125-552	19649-19650	-	_	_	_	_	
125-553	19650-19651	-	_	_	_	_	
125-554	19651-19652	-	_	_	_	_	
125-555	19652-19653	-	_	_	_	_	
125-556	19653-19654	-	_	_	_	_	
125-557	19654-19655	-	_	_	_	_	
125-558	19655-19656	-	_	_	_	_	
125-559	19656-19657	-	_	_	_	_	
125-560	19657-19658	-	_	_	_	_	
125-561	19658-19659	-	_	_	_	_	
125-562	19659-19660	-	_	_	_	_	
125-563	19660-19661	-	_	_	_	_	
125-564	19661-19662	-	_	_	_	_	
125-565	19662-19663	-	_	_	_	_	
125-566	19663-19664	-	_	_	_	_	
125-567	19664-19665	-	_	_	_	_	
125-568	19665-19666	-	_	_	_	_	
125-569	19666-19667	-	_	_	_	_	
125-570	19667-19668	-	_	_	_	_	
125-571	19668-19669	-	_	_	_	_	
125-572	19669-19670	-	_	_	_	_	
125-573	19670-19671	-	_	_	_	_	
125-574	19671-19672	-	_	_	_	_	
125-575	19672-19673	-	_	_	_	_	
125-576	19673-19674	-	_	_	_	_	
125-577	19674-19675	-	_	_	_	_	
125-578	19675-19676	-	_	_	_	_	
125-579	19676-19677	-	_	_	_	_	
125-580	19677-19678	-	_	_	_	_	
125-581	19678-19679	-	_	_	_	_	
125-582	19679-19680	-	_	_	_	_	
125-583	19680-19681	-	_	_	_	_	
125-584	19681-19682	-	_	_	_	_	
125-585	19682-19683	-	_	_	_	_	
125-586	19683-19684	-	_	_	_	_	
125-587	19684-19685	-	_	_	_	_	
125-588	19685-19686	-	_	_	_	_	
125-589	19686-19687	-	_	_	_	_	
125-590	19687-19688	-	_	_	_	_	
125-591	19688-19689	-	_	_	_	_	
125-592	19689-19690	-	_	_	_	_	
125-593	19690-19691	-	_	_	_	_	
125-594	19691-19692	-	_	_	_	_	
125-595	19692-19693	-	_	_	_	_	
125-596	19693-19694	-	_	_	_	_	
125-597	19694-19695	-	_	_	_	_	
125-598	19695-19696	-	_	_	_	_	
125-599	19696-19697	-	_	_	_	_	
125-600	19697-19698	-	_	_	_	_	
125-601	19698-19699	-	_	_	_	_	
125-602	19699-19700	-	_	_	_	_	
125-603	19700-19701	-	_	_	_	_	
125-604	19701-19702	-	_	_	_	_	
125-605	19702-19703	-	_	_	_	_	
125-606	19703-19704	-	_	_	_	_	
125-607	19704-19705	-	_	_	_	_	
125-608	19705-19706	-	_	_	_	_	
125-609	19706-19707	-	_	_	_	_	
125-610	19707-19708	-	_	_	_	_	
125-611	19708-19709	-	_	_	_	_	
125-612	19709-19710	-	_	_	_	_	
125-613	19711-19717	Bitmap	_	_	_	_	
125-614	19718-19722	Heap	_	_	_	_	
125-615	19723-19727	Scan	_	_	_	_	
125-616	19728-19730	on	_	_	_	_	
125-617	19731-19736	books	_	_	_	_	
125-618	19737-19738	(	_	_	_	_	
125-619	19738-19742	cost	_	_	_	_	
125-620	19742-19743	=	_	_	_	_	
125-621	19743-19748	12.75	_	_	_	_	
125-622	19748-19749	.	_	_	_	_	
125-623	19749-19757	.1005.25	_	_	_	_	
125-624	19758-19762	rows	_	_	_	_	
125-625	19762-19763	=	_	_	_	_	
125-626	19763-19767	1000	_	_	_	_	
125-627	19768-19773	width	_	_	_	_	
125-628	19773-19774	=	_	_	_	_	
125-629	19774-19777	158	_	_	_	_	
125-630	19777-19778	)	_	_	_	_	
125-631	19779-19786	Recheck	_	_	_	_	
125-632	19787-19791	Cond	_	_	_	_	
125-633	19791-19792	:	_	_	_	_	
125-634	19793-19794	(	_	_	_	_	
125-635	19794-19798	data	_	_	_	_	
125-636	19799-19800	@	_	_	_	_	
125-637	19800-19801	>	_	_	_	_	
125-638	19802-19803	'	_	_	_	_	
125-639	19803-19804	{	_	_	_	_	
125-640	19804-19805	"	_	_	_	_	
125-641	19805-19809	tags	_	_	_	_	
125-642	19809-19810	"	_	_	_	_	
125-643	19810-19811	:	_	_	_	_	
125-644	19812-19813	{	_	_	_	_	
125-645	19813-19814	"	_	_	_	_	
125-646	19814-19822	nk455671	_	_	_	_	
125-647	19822-19823	"	_	_	_	_	
125-648	19823-19824	:	_	_	_	_	
125-649	19825-19826	{	_	_	_	_	
125-650	19826-19827	"	_	_	_	_	
125-651	19827-19835	ik937456	_	_	_	_	
125-652	19835-19836	"	_	_	_	_	
125-653	19836-19837	:	_	_	_	_	
125-654	19838-19839	"	_	_	_	_	
125-655	19839-19847	iv506075	_	_	_	_	
125-656	19847-19848	"	_	_	_	_	
125-657	19848-19849	}	_	_	_	_	
125-658	19849-19850	}	_	_	_	_	
125-659	19850-19851	}	_	_	_	_	
125-660	19851-19852	'	_	_	_	_	
125-661	19852-19853	:	_	_	_	_	
125-662	19853-19854	:	_	_	_	_	
125-663	19854-19859	jsonb	_	_	_	_	
125-664	19859-19860	)	_	_	_	_	
125-665	19861-19862	-	_	_	_	_	
125-666	19862-19863	>	_	_	_	_	
125-667	19864-19870	Bitmap	_	_	_	_	
125-668	19871-19876	Index	_	_	_	_	
125-669	19877-19881	Scan	_	_	_	_	
125-670	19882-19884	on	_	_	_	_	
125-671	19885-19899	dataginpathops	_	_	_	_	
125-672	19900-19901	(	_	_	_	_	
125-673	19901-19905	cost	_	_	_	_	
125-674	19905-19906	=	_	_	_	_	
125-675	19906-19910	0.00	_	_	_	_	
125-676	19910-19911	.	_	_	_	_	
125-677	19911-19917	.12.50	_	_	_	_	
125-678	19918-19922	rows	_	_	_	_	
125-679	19922-19923	=	_	_	_	_	
125-680	19923-19927	1000	_	_	_	_	
125-681	19928-19933	width	_	_	_	_	
125-682	19933-19934	=	_	_	_	_	
125-683	19934-19935	0	_	_	_	_	
125-684	19935-19936	)	_	_	_	_	
125-685	19937-19942	Index	_	_	_	_	
125-686	19943-19947	Cond	_	_	_	_	
125-687	19947-19948	:	_	_	_	_	
125-688	19949-19950	(	_	_	_	_	
125-689	19950-19954	data	_	_	_	_	
125-690	19955-19956	@	_	_	_	_	
125-691	19956-19957	>	_	_	_	_	
125-692	19958-19959	'	_	_	_	_	
125-693	19959-19960	{	_	_	_	_	
125-694	19960-19961	"	_	_	_	_	
125-695	19961-19965	tags	_	_	_	_	
125-696	19965-19966	"	_	_	_	_	
125-697	19966-19967	:	_	_	_	_	
125-698	19968-19969	{	_	_	_	_	
125-699	19969-19970	"	_	_	_	_	
125-700	19970-19978	nk455671	_	_	_	_	
125-701	19978-19979	"	_	_	_	_	
125-702	19979-19980	:	_	_	_	_	
125-703	19981-19982	{	_	_	_	_	
125-704	19982-19983	"	_	_	_	_	
125-705	19983-19991	ik937456	_	_	_	_	
125-706	19991-19992	"	_	_	_	_	
125-707	19992-19993	:	_	_	_	_	
125-708	19994-19995	"	_	_	_	_	
125-709	19995-20003	iv506075	_	_	_	_	
125-710	20003-20004	"	_	_	_	_	
125-711	20004-20005	}	_	_	_	_	
125-712	20005-20006	}	_	_	_	_	
125-713	20006-20007	}	_	_	_	_	
125-714	20007-20008	'	_	_	_	_	
125-715	20008-20009	:	_	_	_	_	
125-716	20009-20010	:	_	_	_	_	
125-717	20010-20015	jsonb	_	_	_	_	
125-718	20015-20016	)	_	_	_	_	
125-719	20017-20018	(	_	_	_	_	
125-720	20018-20019	4	_	_	_	_	
125-721	20020-20024	rows	_	_	_	_	
125-722	20024-20025	)	_	_	_	_	
125-723	20026-20033	However	_	_	_	_	
125-724	20033-20034	,	_	_	_	_	
125-725	20035-20037	as	_	_	_	_	
125-726	20038-20047	mentioned	_	_	_	_	
125-727	20048-20053	above	_	_	_	_	
125-728	20053-20054	,	_	_	_	_	
125-729	20055-20058	the	_	_	_	_	
125-730	20059-20060	“	_	_	_	_	
125-731	20060-20067	pathops	_	_	_	_	
125-732	20067-20068	”	_	_	_	_	
125-733	20069-20075	option	_	_	_	_	
125-734	20076-20080	does	_	_	_	_	
125-735	20081-20084	not	_	_	_	_	
125-736	20085-20092	support	_	_	_	_	
125-737	20093-20096	all	_	_	_	_	
125-738	20097-20099	of	_	_	_	_	
125-739	20100-20103	the	_	_	_	_	
125-740	20104-20113	scenarios	_	_	_	_	
125-741	20114-20118	that	_	_	_	_	
125-742	20119-20122	the	_	_	_	_	
125-743	20123-20130	default	_	_	_	_	
125-744	20131-20139	operator	_	_	_	_	
125-745	20140-20145	class	_	_	_	_	
125-746	20146-20154	supports	_	_	_	_	
125-747	20154-20155	.	_	_	_	_	

#Text=With a “pathops” GIN index, all these queries are not able to leverage the GIN index.
126-1	20156-20160	With	_	_	_	_	
126-2	20161-20162	a	_	_	_	_	
126-3	20163-20164	“	_	_	_	_	
126-4	20164-20171	pathops	_	_	_	_	
126-5	20171-20172	”	_	_	_	_	
126-6	20173-20176	GIN	_	_	_	_	
126-7	20177-20182	index	_	_	_	_	
126-8	20182-20183	,	_	_	_	_	
126-9	20184-20187	all	_	_	_	_	
126-10	20188-20193	these	_	_	_	_	
126-11	20194-20201	queries	_	_	_	_	
126-12	20202-20205	are	_	_	_	_	
126-13	20206-20209	not	_	_	_	_	
126-14	20210-20214	able	_	_	_	_	
126-15	20215-20217	to	_	_	_	_	
126-16	20218-20226	leverage	_	_	_	_	
126-17	20227-20230	the	_	_	_	_	
126-18	20231-20234	GIN	_	_	_	_	
126-19	20235-20240	index	_	_	_	_	
126-20	20240-20241	.	_	_	_	_	

#Text=To summarize, you have a smaller index but it supports a more limited use case.
#Text=select * from books where data ?
127-1	20242-20244	To	_	_	_	_	
127-2	20245-20254	summarize	_	_	_	_	
127-3	20254-20255	,	_	_	_	_	
127-4	20256-20259	you	_	_	_	_	
127-5	20260-20264	have	_	_	_	_	
127-6	20265-20266	a	_	_	_	_	
127-7	20267-20274	smaller	_	_	_	_	
127-8	20275-20280	index	_	_	_	_	
127-9	20281-20284	but	_	_	_	_	
127-10	20285-20287	it	_	_	_	_	
127-11	20288-20296	supports	_	_	_	_	
127-12	20297-20298	a	_	_	_	_	
127-13	20299-20303	more	_	_	_	_	
127-14	20304-20311	limited	_	_	_	_	
127-15	20312-20315	use	_	_	_	_	
127-16	20316-20320	case	_	_	_	_	
127-17	20320-20321	.	_	_	_	_	
127-18	20322-20328	select	_	_	_	_	
127-19	20329-20330	*	_	_	_	_	
127-20	20331-20335	from	_	_	_	_	
127-21	20336-20341	books	_	_	_	_	
127-22	20342-20347	where	_	_	_	_	
127-23	20348-20352	data	_	_	_	_	
127-24	20353-20354	?	_	_	_	_	

#Text='tags'; => Sequential scan
#Text=select * from books where data @> '{"tags" :{}}'; => Sequential scan
#Text=select * from books where data @> '{"tags" :{"k7888":{}}}' => Sequential scan
#Text=B-Tree indexes
#Text=B-tree indexes are the most common index type in relational databases.
128-1	20355-20356	'	_	_	_	_	
128-2	20356-20360	tags	_	_	_	_	
128-3	20360-20361	'	_	_	_	_	
128-4	20361-20362	;	_	_	_	_	
128-5	20363-20364	=	_	_	_	_	
128-6	20364-20365	>	_	_	_	_	
128-7	20366-20376	Sequential	_	_	_	_	
128-8	20377-20381	scan	_	_	_	_	
128-9	20382-20388	select	_	_	_	_	
128-10	20389-20390	*	_	_	_	_	
128-11	20391-20395	from	_	_	_	_	
128-12	20396-20401	books	_	_	_	_	
128-13	20402-20407	where	_	_	_	_	
128-14	20408-20412	data	_	_	_	_	
128-15	20413-20414	@	_	_	_	_	
128-16	20414-20415	>	_	_	_	_	
128-17	20416-20417	'	_	_	_	_	
128-18	20417-20418	{	_	_	_	_	
128-19	20418-20419	"	_	_	_	_	
128-20	20419-20423	tags	_	_	_	_	
128-21	20423-20424	"	_	_	_	_	
128-22	20425-20426	:	_	_	_	_	
128-23	20426-20427	{	_	_	_	_	
128-24	20427-20428	}	_	_	_	_	
128-25	20428-20429	}	_	_	_	_	
128-26	20429-20430	'	_	_	_	_	
128-27	20430-20431	;	_	_	_	_	
128-28	20432-20433	=	_	_	_	_	
128-29	20433-20434	>	_	_	_	_	
128-30	20435-20445	Sequential	_	_	_	_	
128-31	20446-20450	scan	_	_	_	_	
128-32	20451-20457	select	_	_	_	_	
128-33	20458-20459	*	_	_	_	_	
128-34	20460-20464	from	_	_	_	_	
128-35	20465-20470	books	_	_	_	_	
128-36	20471-20476	where	_	_	_	_	
128-37	20477-20481	data	_	_	_	_	
128-38	20482-20483	@	_	_	_	_	
128-39	20483-20484	>	_	_	_	_	
128-40	20485-20486	'	_	_	_	_	
128-41	20486-20487	{	_	_	_	_	
128-42	20487-20488	"	_	_	_	_	
128-43	20488-20492	tags	_	_	_	_	
128-44	20492-20493	"	_	_	_	_	
128-45	20494-20495	:	_	_	_	_	
128-46	20495-20496	{	_	_	_	_	
128-47	20496-20497	"	_	_	_	_	
128-48	20497-20502	k7888	_	_	_	_	
128-49	20502-20503	"	_	_	_	_	
128-50	20503-20504	:	_	_	_	_	
128-51	20504-20505	{	_	_	_	_	
128-52	20505-20506	}	_	_	_	_	
128-53	20506-20507	}	_	_	_	_	
128-54	20507-20508	}	_	_	_	_	
128-55	20508-20509	'	_	_	_	_	
128-56	20510-20511	=	_	_	_	_	
128-57	20511-20512	>	_	_	_	_	
128-58	20513-20523	Sequential	_	_	_	_	
128-59	20524-20528	scan	_	_	_	_	
128-60	20529-20535	B-Tree	_	_	_	_	
128-61	20536-20543	indexes	_	_	_	_	
128-62	20544-20550	B-tree	_	_	_	_	
128-63	20551-20558	indexes	_	_	_	_	
128-64	20559-20562	are	_	_	_	_	
128-65	20563-20566	the	_	_	_	_	
128-66	20567-20571	most	_	_	_	_	
128-67	20572-20578	common	_	_	_	_	
128-68	20579-20584	index	_	_	_	_	
128-69	20585-20589	type	_	_	_	_	
128-70	20590-20592	in	_	_	_	_	
128-71	20593-20603	relational	_	_	_	_	
128-72	20604-20613	databases	_	_	_	_	
128-73	20613-20614	.	_	_	_	_	

#Text=However, if you index an entire JSONB column with a B-tree index, the only useful operators are “=”, <, <=, >, >=.
129-1	20615-20622	However	_	_	_	_	
129-2	20622-20623	,	_	_	_	_	
129-3	20624-20626	if	_	_	_	_	
129-4	20627-20630	you	_	_	_	_	
129-5	20631-20636	index	_	_	_	_	
129-6	20637-20639	an	_	_	_	_	
129-7	20640-20646	entire	_	_	_	_	
129-8	20647-20652	JSONB	_	_	_	_	
129-9	20653-20659	column	_	_	_	_	
129-10	20660-20664	with	_	_	_	_	
129-11	20665-20666	a	_	_	_	_	
129-12	20666-20667	 	_	_	_	_	
129-13	20667-20673	B-tree	_	_	_	_	
129-14	20674-20679	index	_	_	_	_	
129-15	20679-20680	,	_	_	_	_	
129-16	20681-20684	the	_	_	_	_	
129-17	20685-20689	only	_	_	_	_	
129-18	20690-20696	useful	_	_	_	_	
129-19	20697-20706	operators	_	_	_	_	
129-20	20707-20710	are	_	_	_	_	
129-21	20711-20712	“	_	_	_	_	
129-22	20712-20713	=	_	_	_	_	
129-23	20713-20714	”	_	_	_	_	
129-24	20714-20715	,	_	_	_	_	
129-25	20716-20717	<	_	_	_	_	
129-26	20717-20718	,	_	_	_	_	
129-27	20719-20720	<	_	_	_	_	
129-28	20720-20721	=	_	_	_	_	
129-29	20721-20722	,	_	_	_	_	
129-30	20723-20724	>	_	_	_	_	
129-31	20724-20725	,	_	_	_	_	
129-32	20726-20727	>	_	_	_	_	
129-33	20727-20728	=	_	_	_	_	
129-34	20728-20729	.	_	_	_	_	

#Text=Essentially, this can only be used for whole object comparisons, which has a very limited use case.
130-1	20730-20741	Essentially	_	_	_	_	
130-2	20741-20742	,	_	_	_	_	
130-3	20743-20747	this	_	_	_	_	
130-4	20748-20751	can	_	_	_	_	
130-5	20752-20756	only	_	_	_	_	
130-6	20757-20759	be	_	_	_	_	
130-7	20760-20764	used	_	_	_	_	
130-8	20765-20768	for	_	_	_	_	
130-9	20769-20774	whole	_	_	_	_	
130-10	20775-20781	object	_	_	_	_	
130-11	20782-20793	comparisons	_	_	_	_	
130-12	20793-20794	,	_	_	_	_	
130-13	20795-20800	which	_	_	_	_	
130-14	20801-20804	has	_	_	_	_	
130-15	20805-20806	a	_	_	_	_	
130-16	20807-20811	very	_	_	_	_	
130-17	20812-20819	limited	_	_	_	_	
130-18	20820-20823	use	_	_	_	_	
130-19	20824-20828	case	_	_	_	_	
130-20	20828-20829	.	_	_	_	_	

#Text=A more common scenario is to use B-tree “expression indexes”.
131-1	20830-20831	A	_	_	_	_	
131-2	20832-20836	more	_	_	_	_	
131-3	20837-20843	common	_	_	_	_	
131-4	20844-20852	scenario	_	_	_	_	
131-5	20853-20855	is	_	_	_	_	
131-6	20856-20858	to	_	_	_	_	
131-7	20859-20862	use	_	_	_	_	
131-8	20862-20863	 	_	_	_	_	
131-9	20863-20869	B-tree	_	_	_	_	
131-10	20870-20871	“	_	_	_	_	
131-11	20871-20881	expression	_	_	_	_	
131-12	20882-20889	indexes	_	_	_	_	
131-13	20889-20890	”	_	_	_	_	
131-14	20890-20891	.	_	_	_	_	

#Text=For a primer, refer here – Indexes on Expressions. 
132-1	20892-20895	For	_	_	_	_	
132-2	20896-20897	a	_	_	_	_	
132-3	20898-20904	primer	_	_	_	_	
132-4	20904-20905	,	_	_	_	_	
132-5	20906-20911	refer	_	_	_	_	
132-6	20912-20916	here	_	_	_	_	
132-7	20917-20918	–	_	_	_	_	
132-8	20919-20926	Indexes	_	_	_	_	
132-9	20927-20929	on	_	_	_	_	
132-10	20930-20941	Expressions	_	_	_	_	
132-11	20941-20942	.	_	_	_	_	
132-12	20942-20943	 	_	_	_	_	

#Text=B-tree expression indexes can support the common comparison operators ‘=’, ‘<’, ‘>’, ‘>=’, ‘<=’.
133-1	20943-20949	B-tree	_	_	_	_	
133-2	20950-20960	expression	_	_	_	_	
133-3	20961-20968	indexes	_	_	_	_	
133-4	20969-20972	can	_	_	_	_	
133-5	20973-20980	support	_	_	_	_	
133-6	20981-20984	the	_	_	_	_	
133-7	20985-20991	common	_	_	_	_	
133-8	20992-21002	comparison	_	_	_	_	
133-9	21003-21012	operators	_	_	_	_	
133-10	21013-21014	‘	_	_	_	_	
133-11	21014-21015	=	_	_	_	_	
133-12	21015-21016	’	_	_	_	_	
133-13	21016-21017	,	_	_	_	_	
133-14	21018-21019	‘	_	_	_	_	
133-15	21019-21020	<	_	_	_	_	
133-16	21020-21021	’	_	_	_	_	
133-17	21021-21022	,	_	_	_	_	
133-18	21023-21024	‘	_	_	_	_	
133-19	21024-21025	>	_	_	_	_	
133-20	21025-21026	’	_	_	_	_	
133-21	21026-21027	,	_	_	_	_	
133-22	21028-21029	‘	_	_	_	_	
133-23	21029-21030	>	_	_	_	_	
133-24	21030-21031	=	_	_	_	_	
133-25	21031-21032	’	_	_	_	_	
133-26	21032-21033	,	_	_	_	_	
133-27	21034-21035	‘	_	_	_	_	
133-28	21035-21036	<	_	_	_	_	
133-29	21036-21037	=	_	_	_	_	
133-30	21037-21038	’	_	_	_	_	
133-31	21038-21039	.	_	_	_	_	

#Text=As you might recall, GIN indexes don’t support these operators.
134-1	21040-21042	As	_	_	_	_	
134-2	21043-21046	you	_	_	_	_	
134-3	21047-21052	might	_	_	_	_	
134-4	21053-21059	recall	_	_	_	_	
134-5	21059-21060	,	_	_	_	_	
134-6	21061-21064	GIN	_	_	_	_	
134-7	21065-21072	indexes	_	_	_	_	
134-8	21073-21076	don	_	_	_	_	
134-9	21076-21077	’	_	_	_	_	
134-10	21077-21078	t	_	_	_	_	
134-11	21079-21086	support	_	_	_	_	
134-12	21087-21092	these	_	_	_	_	
134-13	21093-21102	operators	_	_	_	_	
134-14	21102-21103	.	_	_	_	_	

#Text=Let’s consider the case when we want to retrieve all books with a data->criticrating > 4.
135-1	21104-21107	Let	_	_	_	_	
135-2	21107-21108	’	_	_	_	_	
135-3	21108-21109	s	_	_	_	_	
135-4	21110-21118	consider	_	_	_	_	
135-5	21119-21122	the	_	_	_	_	
135-6	21123-21127	case	_	_	_	_	
135-7	21128-21132	when	_	_	_	_	
135-8	21133-21135	we	_	_	_	_	
135-9	21136-21140	want	_	_	_	_	
135-10	21141-21143	to	_	_	_	_	
135-11	21144-21152	retrieve	_	_	_	_	
135-12	21153-21156	all	_	_	_	_	
135-13	21157-21162	books	_	_	_	_	
135-14	21163-21167	with	_	_	_	_	
135-15	21168-21169	a	_	_	_	_	
135-16	21170-21174	data	_	_	_	_	
135-17	21174-21175	-	_	_	_	_	
135-18	21175-21176	>	_	_	_	_	
135-19	21176-21188	criticrating	_	_	_	_	
135-20	21189-21190	>	_	_	_	_	
135-21	21191-21192	4	_	_	_	_	
135-22	21192-21193	.	_	_	_	_	

#Text=So, you would build a query something like this:
#Text=demo=# select * from books where data->'criticrating' > 4;
#Text=ERROR: operator does not exist: jsonb >= integer
#Text=LINE 1: select * from books where data->'criticrating'
#Text=>= 4;
#Text=HINT: No operator matches the given name and argument types.
136-1	21194-21196	So	_	_	_	_	
136-2	21196-21197	,	_	_	_	_	
136-3	21198-21201	you	_	_	_	_	
136-4	21202-21207	would	_	_	_	_	
136-5	21208-21213	build	_	_	_	_	
136-6	21214-21215	a	_	_	_	_	
136-7	21216-21221	query	_	_	_	_	
136-8	21222-21231	something	_	_	_	_	
136-9	21232-21236	like	_	_	_	_	
136-10	21237-21241	this	_	_	_	_	
136-11	21241-21242	:	_	_	_	_	
136-12	21243-21247	demo	_	_	_	_	
136-13	21247-21248	=	_	_	_	_	
136-14	21248-21249	#	_	_	_	_	
136-15	21250-21256	select	_	_	_	_	
136-16	21257-21258	*	_	_	_	_	
136-17	21259-21263	from	_	_	_	_	
136-18	21264-21269	books	_	_	_	_	
136-19	21270-21275	where	_	_	_	_	
136-20	21276-21280	data	_	_	_	_	
136-21	21280-21281	-	_	_	_	_	
136-22	21281-21282	>	_	_	_	_	
136-23	21282-21283	'	_	_	_	_	
136-24	21283-21295	criticrating	_	_	_	_	
136-25	21295-21296	'	_	_	_	_	
136-26	21297-21298	>	_	_	_	_	
136-27	21299-21300	4	_	_	_	_	
136-28	21300-21301	;	_	_	_	_	
136-29	21302-21307	ERROR	_	_	_	_	
136-30	21307-21308	:	_	_	_	_	
136-31	21309-21317	operator	_	_	_	_	
136-32	21318-21322	does	_	_	_	_	
136-33	21323-21326	not	_	_	_	_	
136-34	21327-21332	exist	_	_	_	_	
136-35	21332-21333	:	_	_	_	_	
136-36	21334-21339	jsonb	_	_	_	_	
136-37	21340-21341	>	_	_	_	_	
136-38	21341-21342	=	_	_	_	_	
136-39	21343-21350	integer	_	_	_	_	
136-40	21351-21355	LINE	_	_	_	_	
136-41	21356-21357	1	_	_	_	_	
136-42	21357-21358	:	_	_	_	_	
136-43	21359-21365	select	_	_	_	_	
136-44	21366-21367	*	_	_	_	_	
136-45	21368-21372	from	_	_	_	_	
136-46	21373-21378	books	_	_	_	_	
136-47	21379-21384	where	_	_	_	_	
136-48	21385-21389	data	_	_	_	_	
136-49	21389-21390	-	_	_	_	_	
136-50	21390-21391	>	_	_	_	_	
136-51	21391-21392	'	_	_	_	_	
136-52	21392-21404	criticrating	_	_	_	_	
136-53	21404-21405	'	_	_	_	_	
136-54	21406-21407	>	_	_	_	_	
136-55	21407-21408	=	_	_	_	_	
136-56	21409-21410	4	_	_	_	_	
136-57	21410-21411	;	_	_	_	_	
136-58	21412-21416	HINT	_	_	_	_	
136-59	21416-21417	:	_	_	_	_	
136-60	21418-21420	No	_	_	_	_	
136-61	21421-21429	operator	_	_	_	_	
136-62	21430-21437	matches	_	_	_	_	
136-63	21438-21441	the	_	_	_	_	
136-64	21442-21447	given	_	_	_	_	
136-65	21448-21452	name	_	_	_	_	
136-66	21453-21456	and	_	_	_	_	
136-67	21457-21465	argument	_	_	_	_	
136-68	21466-21471	types	_	_	_	_	
136-69	21471-21472	.	_	_	_	_	

#Text=You might need to add explicit type casts.
137-1	21473-21476	You	_	_	_	_	
137-2	21477-21482	might	_	_	_	_	
137-3	21483-21487	need	_	_	_	_	
137-4	21488-21490	to	_	_	_	_	
137-5	21491-21494	add	_	_	_	_	
137-6	21495-21503	explicit	_	_	_	_	
137-7	21504-21508	type	_	_	_	_	
137-8	21509-21514	casts	_	_	_	_	
137-9	21514-21515	.	_	_	_	_	

#Text=Well, that doesn’t work since the ‘->’ operator returns a JSONB type.
138-1	21516-21520	Well	_	_	_	_	
138-2	21520-21521	,	_	_	_	_	
138-3	21522-21526	that	_	_	_	_	
138-4	21527-21532	doesn	_	_	_	_	
138-5	21532-21533	’	_	_	_	_	
138-6	21533-21534	t	_	_	_	_	
138-7	21535-21539	work	_	_	_	_	
138-8	21540-21545	since	_	_	_	_	
138-9	21546-21549	the	_	_	_	_	
138-10	21550-21551	‘	_	_	_	_	
138-11	21551-21552	-	_	_	_	_	
138-12	21552-21553	>	_	_	_	_	
138-13	21553-21554	’	_	_	_	_	
138-14	21555-21563	operator	_	_	_	_	
138-15	21564-21571	returns	_	_	_	_	
138-16	21572-21573	a	_	_	_	_	
138-17	21573-21574	 	_	_	_	_	
138-18	21574-21579	JSONB	_	_	_	_	
138-19	21580-21584	type	_	_	_	_	
138-20	21584-21585	.	_	_	_	_	

#Text=So we need to use something like this:
#Text=demo=# select * from books where (data->'criticrating')::int4 > 4;
#Text=If you’re using a version prior to PostgreSQL 11, it gets more ugly.
139-1	21586-21588	So	_	_	_	_	
139-2	21589-21591	we	_	_	_	_	
139-3	21592-21596	need	_	_	_	_	
139-4	21597-21599	to	_	_	_	_	
139-5	21600-21603	use	_	_	_	_	
139-6	21604-21613	something	_	_	_	_	
139-7	21614-21618	like	_	_	_	_	
139-8	21619-21623	this	_	_	_	_	
139-9	21623-21624	:	_	_	_	_	
139-10	21625-21629	demo	_	_	_	_	
139-11	21629-21630	=	_	_	_	_	
139-12	21630-21631	#	_	_	_	_	
139-13	21632-21638	select	_	_	_	_	
139-14	21639-21640	*	_	_	_	_	
139-15	21641-21645	from	_	_	_	_	
139-16	21646-21651	books	_	_	_	_	
139-17	21652-21657	where	_	_	_	_	
139-18	21658-21659	(	_	_	_	_	
139-19	21659-21663	data	_	_	_	_	
139-20	21663-21664	-	_	_	_	_	
139-21	21664-21665	>	_	_	_	_	
139-22	21665-21666	'	_	_	_	_	
139-23	21666-21678	criticrating	_	_	_	_	
139-24	21678-21679	'	_	_	_	_	
139-25	21679-21680	)	_	_	_	_	
139-26	21680-21681	:	_	_	_	_	
139-27	21681-21682	:	_	_	_	_	
139-28	21682-21686	int4	_	_	_	_	
139-29	21687-21688	>	_	_	_	_	
139-30	21689-21690	4	_	_	_	_	
139-31	21690-21691	;	_	_	_	_	
139-32	21692-21694	If	_	_	_	_	
139-33	21695-21698	you	_	_	_	_	
139-34	21698-21699	’	_	_	_	_	
139-35	21699-21701	re	_	_	_	_	
139-36	21702-21707	using	_	_	_	_	
139-37	21708-21709	a	_	_	_	_	
139-38	21710-21717	version	_	_	_	_	
139-39	21718-21723	prior	_	_	_	_	
139-40	21724-21726	to	_	_	_	_	
139-41	21727-21737	PostgreSQL	_	_	_	_	
139-42	21738-21740	11	_	_	_	_	
139-43	21740-21741	,	_	_	_	_	
139-44	21742-21744	it	_	_	_	_	
139-45	21745-21749	gets	_	_	_	_	
139-46	21750-21754	more	_	_	_	_	
139-47	21755-21759	ugly	_	_	_	_	
139-48	21759-21760	.	_	_	_	_	

#Text=You need to first query as text and then cast it to integer:
#Text=demo=# select * from books where (data->'criticrating')::int4 > 4;
#Text=For expression indexes, the index needs to be an exact match with the query expression.
140-1	21761-21764	You	_	_	_	_	
140-2	21765-21769	need	_	_	_	_	
140-3	21770-21772	to	_	_	_	_	
140-4	21773-21778	first	_	_	_	_	
140-5	21779-21784	query	_	_	_	_	
140-6	21785-21787	as	_	_	_	_	
140-7	21788-21792	text	_	_	_	_	
140-8	21793-21796	and	_	_	_	_	
140-9	21797-21801	then	_	_	_	_	
140-10	21802-21806	cast	_	_	_	_	
140-11	21807-21809	it	_	_	_	_	
140-12	21810-21812	to	_	_	_	_	
140-13	21813-21820	integer	_	_	_	_	
140-14	21820-21821	:	_	_	_	_	
140-15	21822-21826	demo	_	_	_	_	
140-16	21826-21827	=	_	_	_	_	
140-17	21827-21828	#	_	_	_	_	
140-18	21829-21835	select	_	_	_	_	
140-19	21836-21837	*	_	_	_	_	
140-20	21838-21842	from	_	_	_	_	
140-21	21843-21848	books	_	_	_	_	
140-22	21849-21854	where	_	_	_	_	
140-23	21855-21856	(	_	_	_	_	
140-24	21856-21860	data	_	_	_	_	
140-25	21860-21861	-	_	_	_	_	
140-26	21861-21862	>	_	_	_	_	
140-27	21862-21863	'	_	_	_	_	
140-28	21863-21875	criticrating	_	_	_	_	
140-29	21875-21876	'	_	_	_	_	
140-30	21876-21877	)	_	_	_	_	
140-31	21877-21878	:	_	_	_	_	
140-32	21878-21879	:	_	_	_	_	
140-33	21879-21883	int4	_	_	_	_	
140-34	21884-21885	>	_	_	_	_	
140-35	21886-21887	4	_	_	_	_	
140-36	21887-21888	;	_	_	_	_	
140-37	21889-21892	For	_	_	_	_	
140-38	21893-21903	expression	_	_	_	_	
140-39	21904-21911	indexes	_	_	_	_	
140-40	21911-21912	,	_	_	_	_	
140-41	21913-21916	the	_	_	_	_	
140-42	21917-21922	index	_	_	_	_	
140-43	21923-21928	needs	_	_	_	_	
140-44	21929-21931	to	_	_	_	_	
140-45	21932-21934	be	_	_	_	_	
140-46	21935-21937	an	_	_	_	_	
140-47	21938-21943	exact	_	_	_	_	
140-48	21944-21949	match	_	_	_	_	
140-49	21950-21954	with	_	_	_	_	
140-50	21955-21958	the	_	_	_	_	
140-51	21959-21964	query	_	_	_	_	
140-52	21965-21975	expression	_	_	_	_	
140-53	21975-21976	.	_	_	_	_	

#Text=So, our index would look something like this:
#Text=demo=# CREATE INDEX criticrating ON books USING BTREE (((data->'criticrating')::int4));
#Text=CREATE INDEX
#Text=demo=# explain analyze select * from books where (data->'criticrating')::int4 = 3;
#Text=QUERY PLAN
#Text=----------------------------------------------------------------------------------------------------------------------------------
#Text=Index Scan using criticrating on books (cost=0.42..4626.93 rows=5000 width=158) (actual time=0.069..70.221 rows=199883 loops=1)
#Text=Index Cond: (((data -> 'criticrating'::text))::integer = 3)
#Text=Planning Time: 0.103 ms
#Text=Execution Time: 79.019 ms
#Text=(4 rows)
#Text=demo=# explain analyze select * from books where (data->'criticrating')::int4 = 3;
#Text=QUERY PLAN
#Text=----------------------------------------------------------------------------------------------------------------------------------
#Text=Index Scan using criticrating on books (cost=0.42..4626.93 rows=5000 width=158) (actual time=0.069..70.221 rows=199883 loops=1)
#Text=Index Cond: (((data -> 'criticrating'::text))::integer = 3)
#Text=Planning Time: 0.103 ms
#Text=Execution Time: 79.019 ms
#Text=(4 rows)
#Text=From above we can see that the BTREE index is being used as expected.
141-1	21977-21979	So	_	_	_	_	
141-2	21979-21980	,	_	_	_	_	
141-3	21981-21984	our	_	_	_	_	
141-4	21985-21990	index	_	_	_	_	
141-5	21991-21996	would	_	_	_	_	
141-6	21997-22001	look	_	_	_	_	
141-7	22002-22011	something	_	_	_	_	
141-8	22012-22016	like	_	_	_	_	
141-9	22017-22021	this	_	_	_	_	
141-10	22021-22022	:	_	_	_	_	
141-11	22023-22027	demo	_	_	_	_	
141-12	22027-22028	=	_	_	_	_	
141-13	22028-22029	#	_	_	_	_	
141-14	22030-22036	CREATE	_	_	_	_	
141-15	22037-22042	INDEX	_	_	_	_	
141-16	22043-22055	criticrating	_	_	_	_	
141-17	22056-22058	ON	_	_	_	_	
141-18	22059-22064	books	_	_	_	_	
141-19	22065-22070	USING	_	_	_	_	
141-20	22071-22076	BTREE	_	_	_	_	
141-21	22077-22078	(	_	_	_	_	
141-22	22078-22079	(	_	_	_	_	
141-23	22079-22080	(	_	_	_	_	
141-24	22080-22084	data	_	_	_	_	
141-25	22084-22085	-	_	_	_	_	
141-26	22085-22086	>	_	_	_	_	
141-27	22086-22087	'	_	_	_	_	
141-28	22087-22099	criticrating	_	_	_	_	
141-29	22099-22100	'	_	_	_	_	
141-30	22100-22101	)	_	_	_	_	
141-31	22101-22102	:	_	_	_	_	
141-32	22102-22103	:	_	_	_	_	
141-33	22103-22107	int4	_	_	_	_	
141-34	22107-22108	)	_	_	_	_	
141-35	22108-22109	)	_	_	_	_	
141-36	22109-22110	;	_	_	_	_	
141-37	22111-22117	CREATE	_	_	_	_	
141-38	22118-22123	INDEX	_	_	_	_	
141-39	22124-22128	demo	_	_	_	_	
141-40	22128-22129	=	_	_	_	_	
141-41	22129-22130	#	_	_	_	_	
141-42	22131-22138	explain	_	_	_	_	
141-43	22139-22146	analyze	_	_	_	_	
141-44	22147-22153	select	_	_	_	_	
141-45	22154-22155	*	_	_	_	_	
141-46	22156-22160	from	_	_	_	_	
141-47	22161-22166	books	_	_	_	_	
141-48	22167-22172	where	_	_	_	_	
141-49	22173-22174	(	_	_	_	_	
141-50	22174-22178	data	_	_	_	_	
141-51	22178-22179	-	_	_	_	_	
141-52	22179-22180	>	_	_	_	_	
141-53	22180-22181	'	_	_	_	_	
141-54	22181-22193	criticrating	_	_	_	_	
141-55	22193-22194	'	_	_	_	_	
141-56	22194-22195	)	_	_	_	_	
141-57	22195-22196	:	_	_	_	_	
141-58	22196-22197	:	_	_	_	_	
141-59	22197-22201	int4	_	_	_	_	
141-60	22202-22203	=	_	_	_	_	
141-61	22204-22205	3	_	_	_	_	
141-62	22205-22206	;	_	_	_	_	
141-63	22207-22212	QUERY	_	_	_	_	
141-64	22213-22217	PLAN	_	_	_	_	
141-65	22218-22219	-	_	_	_	_	
141-66	22219-22220	-	_	_	_	_	
141-67	22220-22221	-	_	_	_	_	
141-68	22221-22222	-	_	_	_	_	
141-69	22222-22223	-	_	_	_	_	
141-70	22223-22224	-	_	_	_	_	
141-71	22224-22225	-	_	_	_	_	
141-72	22225-22226	-	_	_	_	_	
141-73	22226-22227	-	_	_	_	_	
141-74	22227-22228	-	_	_	_	_	
141-75	22228-22229	-	_	_	_	_	
141-76	22229-22230	-	_	_	_	_	
141-77	22230-22231	-	_	_	_	_	
141-78	22231-22232	-	_	_	_	_	
141-79	22232-22233	-	_	_	_	_	
141-80	22233-22234	-	_	_	_	_	
141-81	22234-22235	-	_	_	_	_	
141-82	22235-22236	-	_	_	_	_	
141-83	22236-22237	-	_	_	_	_	
141-84	22237-22238	-	_	_	_	_	
141-85	22238-22239	-	_	_	_	_	
141-86	22239-22240	-	_	_	_	_	
141-87	22240-22241	-	_	_	_	_	
141-88	22241-22242	-	_	_	_	_	
141-89	22242-22243	-	_	_	_	_	
141-90	22243-22244	-	_	_	_	_	
141-91	22244-22245	-	_	_	_	_	
141-92	22245-22246	-	_	_	_	_	
141-93	22246-22247	-	_	_	_	_	
141-94	22247-22248	-	_	_	_	_	
141-95	22248-22249	-	_	_	_	_	
141-96	22249-22250	-	_	_	_	_	
141-97	22250-22251	-	_	_	_	_	
141-98	22251-22252	-	_	_	_	_	
141-99	22252-22253	-	_	_	_	_	
141-100	22253-22254	-	_	_	_	_	
141-101	22254-22255	-	_	_	_	_	
141-102	22255-22256	-	_	_	_	_	
141-103	22256-22257	-	_	_	_	_	
141-104	22257-22258	-	_	_	_	_	
141-105	22258-22259	-	_	_	_	_	
141-106	22259-22260	-	_	_	_	_	
141-107	22260-22261	-	_	_	_	_	
141-108	22261-22262	-	_	_	_	_	
141-109	22262-22263	-	_	_	_	_	
141-110	22263-22264	-	_	_	_	_	
141-111	22264-22265	-	_	_	_	_	
141-112	22265-22266	-	_	_	_	_	
141-113	22266-22267	-	_	_	_	_	
141-114	22267-22268	-	_	_	_	_	
141-115	22268-22269	-	_	_	_	_	
141-116	22269-22270	-	_	_	_	_	
141-117	22270-22271	-	_	_	_	_	
141-118	22271-22272	-	_	_	_	_	
141-119	22272-22273	-	_	_	_	_	
141-120	22273-22274	-	_	_	_	_	
141-121	22274-22275	-	_	_	_	_	
141-122	22275-22276	-	_	_	_	_	
141-123	22276-22277	-	_	_	_	_	
141-124	22277-22278	-	_	_	_	_	
141-125	22278-22279	-	_	_	_	_	
141-126	22279-22280	-	_	_	_	_	
141-127	22280-22281	-	_	_	_	_	
141-128	22281-22282	-	_	_	_	_	
141-129	22282-22283	-	_	_	_	_	
141-130	22283-22284	-	_	_	_	_	
141-131	22284-22285	-	_	_	_	_	
141-132	22285-22286	-	_	_	_	_	
141-133	22286-22287	-	_	_	_	_	
141-134	22287-22288	-	_	_	_	_	
141-135	22288-22289	-	_	_	_	_	
141-136	22289-22290	-	_	_	_	_	
141-137	22290-22291	-	_	_	_	_	
141-138	22291-22292	-	_	_	_	_	
141-139	22292-22293	-	_	_	_	_	
141-140	22293-22294	-	_	_	_	_	
141-141	22294-22295	-	_	_	_	_	
141-142	22295-22296	-	_	_	_	_	
141-143	22296-22297	-	_	_	_	_	
141-144	22297-22298	-	_	_	_	_	
141-145	22298-22299	-	_	_	_	_	
141-146	22299-22300	-	_	_	_	_	
141-147	22300-22301	-	_	_	_	_	
141-148	22301-22302	-	_	_	_	_	
141-149	22302-22303	-	_	_	_	_	
141-150	22303-22304	-	_	_	_	_	
141-151	22304-22305	-	_	_	_	_	
141-152	22305-22306	-	_	_	_	_	
141-153	22306-22307	-	_	_	_	_	
141-154	22307-22308	-	_	_	_	_	
141-155	22308-22309	-	_	_	_	_	
141-156	22309-22310	-	_	_	_	_	
141-157	22310-22311	-	_	_	_	_	
141-158	22311-22312	-	_	_	_	_	
141-159	22312-22313	-	_	_	_	_	
141-160	22313-22314	-	_	_	_	_	
141-161	22314-22315	-	_	_	_	_	
141-162	22315-22316	-	_	_	_	_	
141-163	22316-22317	-	_	_	_	_	
141-164	22317-22318	-	_	_	_	_	
141-165	22318-22319	-	_	_	_	_	
141-166	22319-22320	-	_	_	_	_	
141-167	22320-22321	-	_	_	_	_	
141-168	22321-22322	-	_	_	_	_	
141-169	22322-22323	-	_	_	_	_	
141-170	22323-22324	-	_	_	_	_	
141-171	22324-22325	-	_	_	_	_	
141-172	22325-22326	-	_	_	_	_	
141-173	22326-22327	-	_	_	_	_	
141-174	22327-22328	-	_	_	_	_	
141-175	22328-22329	-	_	_	_	_	
141-176	22329-22330	-	_	_	_	_	
141-177	22330-22331	-	_	_	_	_	
141-178	22331-22332	-	_	_	_	_	
141-179	22332-22333	-	_	_	_	_	
141-180	22333-22334	-	_	_	_	_	
141-181	22334-22335	-	_	_	_	_	
141-182	22335-22336	-	_	_	_	_	
141-183	22336-22337	-	_	_	_	_	
141-184	22337-22338	-	_	_	_	_	
141-185	22338-22339	-	_	_	_	_	
141-186	22339-22340	-	_	_	_	_	
141-187	22340-22341	-	_	_	_	_	
141-188	22341-22342	-	_	_	_	_	
141-189	22342-22343	-	_	_	_	_	
141-190	22343-22344	-	_	_	_	_	
141-191	22344-22345	-	_	_	_	_	
141-192	22345-22346	-	_	_	_	_	
141-193	22346-22347	-	_	_	_	_	
141-194	22347-22348	-	_	_	_	_	
141-195	22349-22354	Index	_	_	_	_	
141-196	22355-22359	Scan	_	_	_	_	
141-197	22360-22365	using	_	_	_	_	
141-198	22366-22378	criticrating	_	_	_	_	
141-199	22379-22381	on	_	_	_	_	
141-200	22382-22387	books	_	_	_	_	
141-201	22388-22389	(	_	_	_	_	
141-202	22389-22393	cost	_	_	_	_	
141-203	22393-22394	=	_	_	_	_	
141-204	22394-22398	0.42	_	_	_	_	
141-205	22398-22399	.	_	_	_	_	
141-206	22399-22407	.4626.93	_	_	_	_	
141-207	22408-22412	rows	_	_	_	_	
141-208	22412-22413	=	_	_	_	_	
141-209	22413-22417	5000	_	_	_	_	
141-210	22418-22423	width	_	_	_	_	
141-211	22423-22424	=	_	_	_	_	
141-212	22424-22427	158	_	_	_	_	
141-213	22427-22428	)	_	_	_	_	
141-214	22429-22430	(	_	_	_	_	
141-215	22430-22436	actual	_	_	_	_	
141-216	22437-22441	time	_	_	_	_	
141-217	22441-22442	=	_	_	_	_	
141-218	22442-22447	0.069	_	_	_	_	
141-219	22447-22448	.	_	_	_	_	
141-220	22448-22455	.70.221	_	_	_	_	
141-221	22456-22460	rows	_	_	_	_	
141-222	22460-22461	=	_	_	_	_	
141-223	22461-22467	199883	_	_	_	_	
141-224	22468-22473	loops	_	_	_	_	
141-225	22473-22474	=	_	_	_	_	
141-226	22474-22475	1	_	_	_	_	
141-227	22475-22476	)	_	_	_	_	
141-228	22477-22482	Index	_	_	_	_	
141-229	22483-22487	Cond	_	_	_	_	
141-230	22487-22488	:	_	_	_	_	
141-231	22489-22490	(	_	_	_	_	
141-232	22490-22491	(	_	_	_	_	
141-233	22491-22492	(	_	_	_	_	
141-234	22492-22496	data	_	_	_	_	
141-235	22497-22498	-	_	_	_	_	
141-236	22498-22499	>	_	_	_	_	
141-237	22500-22501	'	_	_	_	_	
141-238	22501-22513	criticrating	_	_	_	_	
141-239	22513-22514	'	_	_	_	_	
141-240	22514-22515	:	_	_	_	_	
141-241	22515-22516	:	_	_	_	_	
141-242	22516-22520	text	_	_	_	_	
141-243	22520-22521	)	_	_	_	_	
141-244	22521-22522	)	_	_	_	_	
141-245	22522-22523	:	_	_	_	_	
141-246	22523-22524	:	_	_	_	_	
141-247	22524-22531	integer	_	_	_	_	
141-248	22532-22533	=	_	_	_	_	
141-249	22534-22535	3	_	_	_	_	
141-250	22535-22536	)	_	_	_	_	
141-251	22537-22545	Planning	_	_	_	_	
141-252	22546-22550	Time	_	_	_	_	
141-253	22550-22551	:	_	_	_	_	
141-254	22552-22557	0.103	_	_	_	_	
141-255	22558-22560	ms	_	_	_	_	
141-256	22561-22570	Execution	_	_	_	_	
141-257	22571-22575	Time	_	_	_	_	
141-258	22575-22576	:	_	_	_	_	
141-259	22577-22583	79.019	_	_	_	_	
141-260	22584-22586	ms	_	_	_	_	
141-261	22587-22588	(	_	_	_	_	
141-262	22588-22589	4	_	_	_	_	
141-263	22590-22594	rows	_	_	_	_	
141-264	22594-22595	)	_	_	_	_	
141-265	22596-22600	demo	_	_	_	_	
141-266	22600-22601	=	_	_	_	_	
141-267	22601-22602	#	_	_	_	_	
141-268	22603-22610	explain	_	_	_	_	
141-269	22611-22618	analyze	_	_	_	_	
141-270	22619-22625	select	_	_	_	_	
141-271	22626-22627	*	_	_	_	_	
141-272	22628-22632	from	_	_	_	_	
141-273	22633-22638	books	_	_	_	_	
141-274	22639-22644	where	_	_	_	_	
141-275	22645-22646	(	_	_	_	_	
141-276	22646-22650	data	_	_	_	_	
141-277	22650-22651	-	_	_	_	_	
141-278	22651-22652	>	_	_	_	_	
141-279	22652-22653	'	_	_	_	_	
141-280	22653-22665	criticrating	_	_	_	_	
141-281	22665-22666	'	_	_	_	_	
141-282	22666-22667	)	_	_	_	_	
141-283	22667-22668	:	_	_	_	_	
141-284	22668-22669	:	_	_	_	_	
141-285	22669-22673	int4	_	_	_	_	
141-286	22674-22675	=	_	_	_	_	
141-287	22676-22677	3	_	_	_	_	
141-288	22677-22678	;	_	_	_	_	
141-289	22679-22684	QUERY	_	_	_	_	
141-290	22685-22689	PLAN	_	_	_	_	
141-291	22690-22691	-	_	_	_	_	
141-292	22691-22692	-	_	_	_	_	
141-293	22692-22693	-	_	_	_	_	
141-294	22693-22694	-	_	_	_	_	
141-295	22694-22695	-	_	_	_	_	
141-296	22695-22696	-	_	_	_	_	
141-297	22696-22697	-	_	_	_	_	
141-298	22697-22698	-	_	_	_	_	
141-299	22698-22699	-	_	_	_	_	
141-300	22699-22700	-	_	_	_	_	
141-301	22700-22701	-	_	_	_	_	
141-302	22701-22702	-	_	_	_	_	
141-303	22702-22703	-	_	_	_	_	
141-304	22703-22704	-	_	_	_	_	
141-305	22704-22705	-	_	_	_	_	
141-306	22705-22706	-	_	_	_	_	
141-307	22706-22707	-	_	_	_	_	
141-308	22707-22708	-	_	_	_	_	
141-309	22708-22709	-	_	_	_	_	
141-310	22709-22710	-	_	_	_	_	
141-311	22710-22711	-	_	_	_	_	
141-312	22711-22712	-	_	_	_	_	
141-313	22712-22713	-	_	_	_	_	
141-314	22713-22714	-	_	_	_	_	
141-315	22714-22715	-	_	_	_	_	
141-316	22715-22716	-	_	_	_	_	
141-317	22716-22717	-	_	_	_	_	
141-318	22717-22718	-	_	_	_	_	
141-319	22718-22719	-	_	_	_	_	
141-320	22719-22720	-	_	_	_	_	
141-321	22720-22721	-	_	_	_	_	
141-322	22721-22722	-	_	_	_	_	
141-323	22722-22723	-	_	_	_	_	
141-324	22723-22724	-	_	_	_	_	
141-325	22724-22725	-	_	_	_	_	
141-326	22725-22726	-	_	_	_	_	
141-327	22726-22727	-	_	_	_	_	
141-328	22727-22728	-	_	_	_	_	
141-329	22728-22729	-	_	_	_	_	
141-330	22729-22730	-	_	_	_	_	
141-331	22730-22731	-	_	_	_	_	
141-332	22731-22732	-	_	_	_	_	
141-333	22732-22733	-	_	_	_	_	
141-334	22733-22734	-	_	_	_	_	
141-335	22734-22735	-	_	_	_	_	
141-336	22735-22736	-	_	_	_	_	
141-337	22736-22737	-	_	_	_	_	
141-338	22737-22738	-	_	_	_	_	
141-339	22738-22739	-	_	_	_	_	
141-340	22739-22740	-	_	_	_	_	
141-341	22740-22741	-	_	_	_	_	
141-342	22741-22742	-	_	_	_	_	
141-343	22742-22743	-	_	_	_	_	
141-344	22743-22744	-	_	_	_	_	
141-345	22744-22745	-	_	_	_	_	
141-346	22745-22746	-	_	_	_	_	
141-347	22746-22747	-	_	_	_	_	
141-348	22747-22748	-	_	_	_	_	
141-349	22748-22749	-	_	_	_	_	
141-350	22749-22750	-	_	_	_	_	
141-351	22750-22751	-	_	_	_	_	
141-352	22751-22752	-	_	_	_	_	
141-353	22752-22753	-	_	_	_	_	
141-354	22753-22754	-	_	_	_	_	
141-355	22754-22755	-	_	_	_	_	
141-356	22755-22756	-	_	_	_	_	
141-357	22756-22757	-	_	_	_	_	
141-358	22757-22758	-	_	_	_	_	
141-359	22758-22759	-	_	_	_	_	
141-360	22759-22760	-	_	_	_	_	
141-361	22760-22761	-	_	_	_	_	
141-362	22761-22762	-	_	_	_	_	
141-363	22762-22763	-	_	_	_	_	
141-364	22763-22764	-	_	_	_	_	
141-365	22764-22765	-	_	_	_	_	
141-366	22765-22766	-	_	_	_	_	
141-367	22766-22767	-	_	_	_	_	
141-368	22767-22768	-	_	_	_	_	
141-369	22768-22769	-	_	_	_	_	
141-370	22769-22770	-	_	_	_	_	
141-371	22770-22771	-	_	_	_	_	
141-372	22771-22772	-	_	_	_	_	
141-373	22772-22773	-	_	_	_	_	
141-374	22773-22774	-	_	_	_	_	
141-375	22774-22775	-	_	_	_	_	
141-376	22775-22776	-	_	_	_	_	
141-377	22776-22777	-	_	_	_	_	
141-378	22777-22778	-	_	_	_	_	
141-379	22778-22779	-	_	_	_	_	
141-380	22779-22780	-	_	_	_	_	
141-381	22780-22781	-	_	_	_	_	
141-382	22781-22782	-	_	_	_	_	
141-383	22782-22783	-	_	_	_	_	
141-384	22783-22784	-	_	_	_	_	
141-385	22784-22785	-	_	_	_	_	
141-386	22785-22786	-	_	_	_	_	
141-387	22786-22787	-	_	_	_	_	
141-388	22787-22788	-	_	_	_	_	
141-389	22788-22789	-	_	_	_	_	
141-390	22789-22790	-	_	_	_	_	
141-391	22790-22791	-	_	_	_	_	
141-392	22791-22792	-	_	_	_	_	
141-393	22792-22793	-	_	_	_	_	
141-394	22793-22794	-	_	_	_	_	
141-395	22794-22795	-	_	_	_	_	
141-396	22795-22796	-	_	_	_	_	
141-397	22796-22797	-	_	_	_	_	
141-398	22797-22798	-	_	_	_	_	
141-399	22798-22799	-	_	_	_	_	
141-400	22799-22800	-	_	_	_	_	
141-401	22800-22801	-	_	_	_	_	
141-402	22801-22802	-	_	_	_	_	
141-403	22802-22803	-	_	_	_	_	
141-404	22803-22804	-	_	_	_	_	
141-405	22804-22805	-	_	_	_	_	
141-406	22805-22806	-	_	_	_	_	
141-407	22806-22807	-	_	_	_	_	
141-408	22807-22808	-	_	_	_	_	
141-409	22808-22809	-	_	_	_	_	
141-410	22809-22810	-	_	_	_	_	
141-411	22810-22811	-	_	_	_	_	
141-412	22811-22812	-	_	_	_	_	
141-413	22812-22813	-	_	_	_	_	
141-414	22813-22814	-	_	_	_	_	
141-415	22814-22815	-	_	_	_	_	
141-416	22815-22816	-	_	_	_	_	
141-417	22816-22817	-	_	_	_	_	
141-418	22817-22818	-	_	_	_	_	
141-419	22818-22819	-	_	_	_	_	
141-420	22819-22820	-	_	_	_	_	
141-421	22821-22826	Index	_	_	_	_	
141-422	22827-22831	Scan	_	_	_	_	
141-423	22832-22837	using	_	_	_	_	
141-424	22838-22850	criticrating	_	_	_	_	
141-425	22851-22853	on	_	_	_	_	
141-426	22854-22859	books	_	_	_	_	
141-427	22860-22861	(	_	_	_	_	
141-428	22861-22865	cost	_	_	_	_	
141-429	22865-22866	=	_	_	_	_	
141-430	22866-22870	0.42	_	_	_	_	
141-431	22870-22871	.	_	_	_	_	
141-432	22871-22879	.4626.93	_	_	_	_	
141-433	22880-22884	rows	_	_	_	_	
141-434	22884-22885	=	_	_	_	_	
141-435	22885-22889	5000	_	_	_	_	
141-436	22890-22895	width	_	_	_	_	
141-437	22895-22896	=	_	_	_	_	
141-438	22896-22899	158	_	_	_	_	
141-439	22899-22900	)	_	_	_	_	
141-440	22901-22902	(	_	_	_	_	
141-441	22902-22908	actual	_	_	_	_	
141-442	22909-22913	time	_	_	_	_	
141-443	22913-22914	=	_	_	_	_	
141-444	22914-22919	0.069	_	_	_	_	
141-445	22919-22920	.	_	_	_	_	
141-446	22920-22927	.70.221	_	_	_	_	
141-447	22928-22932	rows	_	_	_	_	
141-448	22932-22933	=	_	_	_	_	
141-449	22933-22939	199883	_	_	_	_	
141-450	22940-22945	loops	_	_	_	_	
141-451	22945-22946	=	_	_	_	_	
141-452	22946-22947	1	_	_	_	_	
141-453	22947-22948	)	_	_	_	_	
141-454	22949-22954	Index	_	_	_	_	
141-455	22955-22959	Cond	_	_	_	_	
141-456	22959-22960	:	_	_	_	_	
141-457	22961-22962	(	_	_	_	_	
141-458	22962-22963	(	_	_	_	_	
141-459	22963-22964	(	_	_	_	_	
141-460	22964-22968	data	_	_	_	_	
141-461	22969-22970	-	_	_	_	_	
141-462	22970-22971	>	_	_	_	_	
141-463	22972-22973	'	_	_	_	_	
141-464	22973-22985	criticrating	_	_	_	_	
141-465	22985-22986	'	_	_	_	_	
141-466	22986-22987	:	_	_	_	_	
141-467	22987-22988	:	_	_	_	_	
141-468	22988-22992	text	_	_	_	_	
141-469	22992-22993	)	_	_	_	_	
141-470	22993-22994	)	_	_	_	_	
141-471	22994-22995	:	_	_	_	_	
141-472	22995-22996	:	_	_	_	_	
141-473	22996-23003	integer	_	_	_	_	
141-474	23004-23005	=	_	_	_	_	
141-475	23006-23007	3	_	_	_	_	
141-476	23007-23008	)	_	_	_	_	
141-477	23009-23017	Planning	_	_	_	_	
141-478	23018-23022	Time	_	_	_	_	
141-479	23022-23023	:	_	_	_	_	
141-480	23024-23029	0.103	_	_	_	_	
141-481	23030-23032	ms	_	_	_	_	
141-482	23033-23042	Execution	_	_	_	_	
141-483	23043-23047	Time	_	_	_	_	
141-484	23047-23048	:	_	_	_	_	
141-485	23049-23055	79.019	_	_	_	_	
141-486	23056-23058	ms	_	_	_	_	
141-487	23059-23060	(	_	_	_	_	
141-488	23060-23061	4	_	_	_	_	
141-489	23062-23066	rows	_	_	_	_	
141-490	23066-23067	)	_	_	_	_	
141-491	23068-23072	From	_	_	_	_	
141-492	23073-23078	above	_	_	_	_	
141-493	23079-23081	we	_	_	_	_	
141-494	23082-23085	can	_	_	_	_	
141-495	23086-23089	see	_	_	_	_	
141-496	23090-23094	that	_	_	_	_	
141-497	23095-23098	the	_	_	_	_	
141-498	23099-23104	BTREE	_	_	_	_	
141-499	23105-23110	index	_	_	_	_	
141-500	23111-23113	is	_	_	_	_	
141-501	23114-23119	being	_	_	_	_	
141-502	23120-23124	used	_	_	_	_	
141-503	23125-23127	as	_	_	_	_	
141-504	23128-23136	expected	_	_	_	_	
141-505	23136-23137	.	_	_	_	_	

#Text=Hash Indexes
#Text=If you are only interested in the "=" operator, then Hash indexes become interesting.
142-1	23138-23142	Hash	_	_	_	_	
142-2	23143-23150	Indexes	_	_	_	_	
142-3	23151-23153	If	_	_	_	_	
142-4	23154-23157	you	_	_	_	_	
142-5	23158-23161	are	_	_	_	_	
142-6	23162-23166	only	_	_	_	_	
142-7	23167-23177	interested	_	_	_	_	
142-8	23178-23180	in	_	_	_	_	
142-9	23181-23184	the	_	_	_	_	
142-10	23185-23186	"	_	_	_	_	
142-11	23186-23187	=	_	_	_	_	
142-12	23187-23188	"	_	_	_	_	
142-13	23189-23197	operator	_	_	_	_	
142-14	23197-23198	,	_	_	_	_	
142-15	23199-23203	then	_	_	_	_	
142-16	23204-23208	Hash	_	_	_	_	
142-17	23209-23216	indexes	_	_	_	_	
142-18	23217-23223	become	_	_	_	_	
142-19	23224-23235	interesting	_	_	_	_	
142-20	23235-23236	.	_	_	_	_	

#Text=For example, consider the case when we are looking for a particular tag on a book.
143-1	23237-23240	For	_	_	_	_	
143-2	23241-23248	example	_	_	_	_	
143-3	23248-23249	,	_	_	_	_	
143-4	23250-23258	consider	_	_	_	_	
143-5	23259-23262	the	_	_	_	_	
143-6	23263-23267	case	_	_	_	_	
143-7	23268-23272	when	_	_	_	_	
143-8	23273-23275	we	_	_	_	_	
143-9	23276-23279	are	_	_	_	_	
143-10	23280-23287	looking	_	_	_	_	
143-11	23288-23291	for	_	_	_	_	
143-12	23292-23293	a	_	_	_	_	
143-13	23294-23304	particular	_	_	_	_	
143-14	23305-23308	tag	_	_	_	_	
143-15	23309-23311	on	_	_	_	_	
143-16	23312-23313	a	_	_	_	_	
143-17	23314-23318	book	_	_	_	_	
143-18	23318-23319	.	_	_	_	_	

#Text=The element to be indexed can be a top level element or deeply nested.
144-1	23320-23323	The	_	_	_	_	
144-2	23324-23331	element	_	_	_	_	
144-3	23332-23334	to	_	_	_	_	
144-4	23335-23337	be	_	_	_	_	
144-5	23338-23345	indexed	_	_	_	_	
144-6	23346-23349	can	_	_	_	_	
144-7	23350-23352	be	_	_	_	_	
144-8	23353-23354	a	_	_	_	_	
144-9	23355-23358	top	_	_	_	_	
144-10	23359-23364	level	_	_	_	_	
144-11	23365-23372	element	_	_	_	_	
144-12	23373-23375	or	_	_	_	_	
144-13	23376-23382	deeply	_	_	_	_	
144-14	23383-23389	nested	_	_	_	_	
144-15	23389-23390	.	_	_	_	_	

#Text=E.g. tags->publisher = XlekfkLOtL
#Text=CREATE INDEX publisherhash ON books USING HASH ((data->'publisher'));
#Text=Hash indexes also tend to be smaller in size than B-tree or GIN indexes.
145-1	23391-23394	E.g	_	_	_	_	
145-2	23394-23395	.	_	_	_	_	
145-3	23396-23400	tags	_	_	_	_	
145-4	23400-23401	-	_	_	_	_	
145-5	23401-23402	>	_	_	_	_	
145-6	23402-23411	publisher	_	_	_	_	
145-7	23412-23413	=	_	_	_	_	
145-8	23414-23424	XlekfkLOtL	_	_	_	_	
145-9	23425-23431	CREATE	_	_	_	_	
145-10	23432-23437	INDEX	_	_	_	_	
145-11	23438-23451	publisherhash	_	_	_	_	
145-12	23452-23454	ON	_	_	_	_	
145-13	23455-23460	books	_	_	_	_	
145-14	23461-23466	USING	_	_	_	_	
145-15	23467-23471	HASH	_	_	_	_	
145-16	23472-23473	(	_	_	_	_	
145-17	23473-23474	(	_	_	_	_	
145-18	23474-23478	data	_	_	_	_	
145-19	23478-23479	-	_	_	_	_	
145-20	23479-23480	>	_	_	_	_	
145-21	23480-23481	'	_	_	_	_	
145-22	23481-23490	publisher	_	_	_	_	
145-23	23490-23491	'	_	_	_	_	
145-24	23491-23492	)	_	_	_	_	
145-25	23492-23493	)	_	_	_	_	
145-26	23493-23494	;	_	_	_	_	
145-27	23495-23499	Hash	_	_	_	_	
145-28	23500-23507	indexes	_	_	_	_	
145-29	23508-23512	also	_	_	_	_	
145-30	23513-23517	tend	_	_	_	_	
145-31	23518-23520	to	_	_	_	_	
145-32	23521-23523	be	_	_	_	_	
145-33	23524-23531	smaller	_	_	_	_	
145-34	23532-23534	in	_	_	_	_	
145-35	23535-23539	size	_	_	_	_	
145-36	23540-23544	than	_	_	_	_	
145-37	23544-23545	 	_	_	_	_	
145-38	23545-23551	B-tree	_	_	_	_	
145-39	23552-23554	or	_	_	_	_	
145-40	23555-23558	GIN	_	_	_	_	
145-41	23559-23566	indexes	_	_	_	_	
145-42	23566-23567	.	_	_	_	_	

#Text=Of course, this ultimately depends on your data set.
#Text=demo=# select * from books where data->'publisher' = 'XlekfkLOtL'
#Text=demo-# ;
#Text=id | author | isbn | rating | data
#Text=-----+-----------------+------------+--------+-------------------------------------------------------------------------------------
#Text=346 | uD3QOvHfJdxq2ez | KiAaIRu8QE | 1 | {"tags": {"nk88": {"ik37": "iv161"}}, "publisher": "XlekfkLOtL", "criticrating": 3}
#Text=(1 row)
#Text=demo=# explain analyze select * from books where data->'publisher' = 'XlekfkLOtL';
#Text=QUERY PLAN
#Text=-----------------------------------------------------------------------------------------------------------------------
#Text=Index Scan using publisherhash on books (cost=0.00..2.02 rows=1 width=158) (actual time=0.016..0.017 rows=1 loops=1)
#Text=Index Cond: ((data -> 'publisher'::text) = 'XlekfkLOtL'::text)
#Text=Planning Time: 0.080 ms
#Text=Execution Time: 0.035 ms
#Text=(4 rows)
#Text=Special Mention: GIN Trigram Indexes
#Text=PostgreSQL supports string matching using trigram indexes.
146-1	23568-23570	Of	_	_	_	_	
146-2	23571-23577	course	_	_	_	_	
146-3	23577-23578	,	_	_	_	_	
146-4	23579-23583	this	_	_	_	_	
146-5	23584-23594	ultimately	_	_	_	_	
146-6	23595-23602	depends	_	_	_	_	
146-7	23603-23605	on	_	_	_	_	
146-8	23606-23610	your	_	_	_	_	
146-9	23611-23615	data	_	_	_	_	
146-10	23616-23619	set	_	_	_	_	
146-11	23619-23620	.	_	_	_	_	
146-12	23621-23625	demo	_	_	_	_	
146-13	23625-23626	=	_	_	_	_	
146-14	23626-23627	#	_	_	_	_	
146-15	23628-23634	select	_	_	_	_	
146-16	23635-23636	*	_	_	_	_	
146-17	23637-23641	from	_	_	_	_	
146-18	23642-23647	books	_	_	_	_	
146-19	23648-23653	where	_	_	_	_	
146-20	23654-23658	data	_	_	_	_	
146-21	23658-23659	-	_	_	_	_	
146-22	23659-23660	>	_	_	_	_	
146-23	23660-23661	'	_	_	_	_	
146-24	23661-23670	publisher	_	_	_	_	
146-25	23670-23671	'	_	_	_	_	
146-26	23672-23673	=	_	_	_	_	
146-27	23674-23675	'	_	_	_	_	
146-28	23675-23685	XlekfkLOtL	_	_	_	_	
146-29	23685-23686	'	_	_	_	_	
146-30	23687-23691	demo	_	_	_	_	
146-31	23691-23692	-	_	_	_	_	
146-32	23692-23693	#	_	_	_	_	
146-33	23694-23695	;	_	_	_	_	
146-34	23696-23698	id	_	_	_	_	
146-35	23699-23700	|	_	_	_	_	
146-36	23701-23707	author	_	_	_	_	
146-37	23708-23709	|	_	_	_	_	
146-38	23710-23714	isbn	_	_	_	_	
146-39	23715-23716	|	_	_	_	_	
146-40	23717-23723	rating	_	_	_	_	
146-41	23724-23725	|	_	_	_	_	
146-42	23726-23730	data	_	_	_	_	
146-43	23731-23732	-	_	_	_	_	
146-44	23732-23733	-	_	_	_	_	
146-45	23733-23734	-	_	_	_	_	
146-46	23734-23735	-	_	_	_	_	
146-47	23735-23736	-	_	_	_	_	
146-48	23736-23737	+	_	_	_	_	
146-49	23737-23738	-	_	_	_	_	
146-50	23738-23739	-	_	_	_	_	
146-51	23739-23740	-	_	_	_	_	
146-52	23740-23741	-	_	_	_	_	
146-53	23741-23742	-	_	_	_	_	
146-54	23742-23743	-	_	_	_	_	
146-55	23743-23744	-	_	_	_	_	
146-56	23744-23745	-	_	_	_	_	
146-57	23745-23746	-	_	_	_	_	
146-58	23746-23747	-	_	_	_	_	
146-59	23747-23748	-	_	_	_	_	
146-60	23748-23749	-	_	_	_	_	
146-61	23749-23750	-	_	_	_	_	
146-62	23750-23751	-	_	_	_	_	
146-63	23751-23752	-	_	_	_	_	
146-64	23752-23753	-	_	_	_	_	
146-65	23753-23754	-	_	_	_	_	
146-66	23754-23755	+	_	_	_	_	
146-67	23755-23756	-	_	_	_	_	
146-68	23756-23757	-	_	_	_	_	
146-69	23757-23758	-	_	_	_	_	
146-70	23758-23759	-	_	_	_	_	
146-71	23759-23760	-	_	_	_	_	
146-72	23760-23761	-	_	_	_	_	
146-73	23761-23762	-	_	_	_	_	
146-74	23762-23763	-	_	_	_	_	
146-75	23763-23764	-	_	_	_	_	
146-76	23764-23765	-	_	_	_	_	
146-77	23765-23766	-	_	_	_	_	
146-78	23766-23767	-	_	_	_	_	
146-79	23767-23768	+	_	_	_	_	
146-80	23768-23769	-	_	_	_	_	
146-81	23769-23770	-	_	_	_	_	
146-82	23770-23771	-	_	_	_	_	
146-83	23771-23772	-	_	_	_	_	
146-84	23772-23773	-	_	_	_	_	
146-85	23773-23774	-	_	_	_	_	
146-86	23774-23775	-	_	_	_	_	
146-87	23775-23776	-	_	_	_	_	
146-88	23776-23777	+	_	_	_	_	
146-89	23777-23778	-	_	_	_	_	
146-90	23778-23779	-	_	_	_	_	
146-91	23779-23780	-	_	_	_	_	
146-92	23780-23781	-	_	_	_	_	
146-93	23781-23782	-	_	_	_	_	
146-94	23782-23783	-	_	_	_	_	
146-95	23783-23784	-	_	_	_	_	
146-96	23784-23785	-	_	_	_	_	
146-97	23785-23786	-	_	_	_	_	
146-98	23786-23787	-	_	_	_	_	
146-99	23787-23788	-	_	_	_	_	
146-100	23788-23789	-	_	_	_	_	
146-101	23789-23790	-	_	_	_	_	
146-102	23790-23791	-	_	_	_	_	
146-103	23791-23792	-	_	_	_	_	
146-104	23792-23793	-	_	_	_	_	
146-105	23793-23794	-	_	_	_	_	
146-106	23794-23795	-	_	_	_	_	
146-107	23795-23796	-	_	_	_	_	
146-108	23796-23797	-	_	_	_	_	
146-109	23797-23798	-	_	_	_	_	
146-110	23798-23799	-	_	_	_	_	
146-111	23799-23800	-	_	_	_	_	
146-112	23800-23801	-	_	_	_	_	
146-113	23801-23802	-	_	_	_	_	
146-114	23802-23803	-	_	_	_	_	
146-115	23803-23804	-	_	_	_	_	
146-116	23804-23805	-	_	_	_	_	
146-117	23805-23806	-	_	_	_	_	
146-118	23806-23807	-	_	_	_	_	
146-119	23807-23808	-	_	_	_	_	
146-120	23808-23809	-	_	_	_	_	
146-121	23809-23810	-	_	_	_	_	
146-122	23810-23811	-	_	_	_	_	
146-123	23811-23812	-	_	_	_	_	
146-124	23812-23813	-	_	_	_	_	
146-125	23813-23814	-	_	_	_	_	
146-126	23814-23815	-	_	_	_	_	
146-127	23815-23816	-	_	_	_	_	
146-128	23816-23817	-	_	_	_	_	
146-129	23817-23818	-	_	_	_	_	
146-130	23818-23819	-	_	_	_	_	
146-131	23819-23820	-	_	_	_	_	
146-132	23820-23821	-	_	_	_	_	
146-133	23821-23822	-	_	_	_	_	
146-134	23822-23823	-	_	_	_	_	
146-135	23823-23824	-	_	_	_	_	
146-136	23824-23825	-	_	_	_	_	
146-137	23825-23826	-	_	_	_	_	
146-138	23826-23827	-	_	_	_	_	
146-139	23827-23828	-	_	_	_	_	
146-140	23828-23829	-	_	_	_	_	
146-141	23829-23830	-	_	_	_	_	
146-142	23830-23831	-	_	_	_	_	
146-143	23831-23832	-	_	_	_	_	
146-144	23832-23833	-	_	_	_	_	
146-145	23833-23834	-	_	_	_	_	
146-146	23834-23835	-	_	_	_	_	
146-147	23835-23836	-	_	_	_	_	
146-148	23836-23837	-	_	_	_	_	
146-149	23837-23838	-	_	_	_	_	
146-150	23838-23839	-	_	_	_	_	
146-151	23839-23840	-	_	_	_	_	
146-152	23840-23841	-	_	_	_	_	
146-153	23841-23842	-	_	_	_	_	
146-154	23842-23843	-	_	_	_	_	
146-155	23843-23844	-	_	_	_	_	
146-156	23844-23845	-	_	_	_	_	
146-157	23845-23846	-	_	_	_	_	
146-158	23846-23847	-	_	_	_	_	
146-159	23847-23848	-	_	_	_	_	
146-160	23848-23849	-	_	_	_	_	
146-161	23849-23850	-	_	_	_	_	
146-162	23850-23851	-	_	_	_	_	
146-163	23851-23852	-	_	_	_	_	
146-164	23852-23853	-	_	_	_	_	
146-165	23853-23854	-	_	_	_	_	
146-166	23854-23855	-	_	_	_	_	
146-167	23855-23856	-	_	_	_	_	
146-168	23856-23857	-	_	_	_	_	
146-169	23857-23858	-	_	_	_	_	
146-170	23858-23859	-	_	_	_	_	
146-171	23859-23860	-	_	_	_	_	
146-172	23860-23861	-	_	_	_	_	
146-173	23861-23862	-	_	_	_	_	
146-174	23863-23866	346	_	_	_	_	
146-175	23867-23868	|	_	_	_	_	
146-176	23869-23884	uD3QOvHfJdxq2ez	_	_	_	_	
146-177	23885-23886	|	_	_	_	_	
146-178	23887-23897	KiAaIRu8QE	_	_	_	_	
146-179	23898-23899	|	_	_	_	_	
146-180	23900-23901	1	_	_	_	_	
146-181	23902-23903	|	_	_	_	_	
146-182	23904-23905	{	_	_	_	_	
146-183	23905-23906	"	_	_	_	_	
146-184	23906-23910	tags	_	_	_	_	
146-185	23910-23911	"	_	_	_	_	
146-186	23911-23912	:	_	_	_	_	
146-187	23913-23914	{	_	_	_	_	
146-188	23914-23915	"	_	_	_	_	
146-189	23915-23919	nk88	_	_	_	_	
146-190	23919-23920	"	_	_	_	_	
146-191	23920-23921	:	_	_	_	_	
146-192	23922-23923	{	_	_	_	_	
146-193	23923-23924	"	_	_	_	_	
146-194	23924-23928	ik37	_	_	_	_	
146-195	23928-23929	"	_	_	_	_	
146-196	23929-23930	:	_	_	_	_	
146-197	23931-23932	"	_	_	_	_	
146-198	23932-23937	iv161	_	_	_	_	
146-199	23937-23938	"	_	_	_	_	
146-200	23938-23939	}	_	_	_	_	
146-201	23939-23940	}	_	_	_	_	
146-202	23940-23941	,	_	_	_	_	
146-203	23942-23943	"	_	_	_	_	
146-204	23943-23952	publisher	_	_	_	_	
146-205	23952-23953	"	_	_	_	_	
146-206	23953-23954	:	_	_	_	_	
146-207	23955-23956	"	_	_	_	_	
146-208	23956-23966	XlekfkLOtL	_	_	_	_	
146-209	23966-23967	"	_	_	_	_	
146-210	23967-23968	,	_	_	_	_	
146-211	23969-23970	"	_	_	_	_	
146-212	23970-23982	criticrating	_	_	_	_	
146-213	23982-23983	"	_	_	_	_	
146-214	23983-23984	:	_	_	_	_	
146-215	23985-23986	3	_	_	_	_	
146-216	23986-23987	}	_	_	_	_	
146-217	23988-23989	(	_	_	_	_	
146-218	23989-23990	1	_	_	_	_	
146-219	23991-23994	row	_	_	_	_	
146-220	23994-23995	)	_	_	_	_	
146-221	23996-24000	demo	_	_	_	_	
146-222	24000-24001	=	_	_	_	_	
146-223	24001-24002	#	_	_	_	_	
146-224	24003-24010	explain	_	_	_	_	
146-225	24011-24018	analyze	_	_	_	_	
146-226	24019-24025	select	_	_	_	_	
146-227	24026-24027	*	_	_	_	_	
146-228	24028-24032	from	_	_	_	_	
146-229	24033-24038	books	_	_	_	_	
146-230	24039-24044	where	_	_	_	_	
146-231	24045-24049	data	_	_	_	_	
146-232	24049-24050	-	_	_	_	_	
146-233	24050-24051	>	_	_	_	_	
146-234	24051-24052	'	_	_	_	_	
146-235	24052-24061	publisher	_	_	_	_	
146-236	24061-24062	'	_	_	_	_	
146-237	24063-24064	=	_	_	_	_	
146-238	24065-24066	'	_	_	_	_	
146-239	24066-24076	XlekfkLOtL	_	_	_	_	
146-240	24076-24077	'	_	_	_	_	
146-241	24077-24078	;	_	_	_	_	
146-242	24079-24084	QUERY	_	_	_	_	
146-243	24085-24089	PLAN	_	_	_	_	
146-244	24090-24091	-	_	_	_	_	
146-245	24091-24092	-	_	_	_	_	
146-246	24092-24093	-	_	_	_	_	
146-247	24093-24094	-	_	_	_	_	
146-248	24094-24095	-	_	_	_	_	
146-249	24095-24096	-	_	_	_	_	
146-250	24096-24097	-	_	_	_	_	
146-251	24097-24098	-	_	_	_	_	
146-252	24098-24099	-	_	_	_	_	
146-253	24099-24100	-	_	_	_	_	
146-254	24100-24101	-	_	_	_	_	
146-255	24101-24102	-	_	_	_	_	
146-256	24102-24103	-	_	_	_	_	
146-257	24103-24104	-	_	_	_	_	
146-258	24104-24105	-	_	_	_	_	
146-259	24105-24106	-	_	_	_	_	
146-260	24106-24107	-	_	_	_	_	
146-261	24107-24108	-	_	_	_	_	
146-262	24108-24109	-	_	_	_	_	
146-263	24109-24110	-	_	_	_	_	
146-264	24110-24111	-	_	_	_	_	
146-265	24111-24112	-	_	_	_	_	
146-266	24112-24113	-	_	_	_	_	
146-267	24113-24114	-	_	_	_	_	
146-268	24114-24115	-	_	_	_	_	
146-269	24115-24116	-	_	_	_	_	
146-270	24116-24117	-	_	_	_	_	
146-271	24117-24118	-	_	_	_	_	
146-272	24118-24119	-	_	_	_	_	
146-273	24119-24120	-	_	_	_	_	
146-274	24120-24121	-	_	_	_	_	
146-275	24121-24122	-	_	_	_	_	
146-276	24122-24123	-	_	_	_	_	
146-277	24123-24124	-	_	_	_	_	
146-278	24124-24125	-	_	_	_	_	
146-279	24125-24126	-	_	_	_	_	
146-280	24126-24127	-	_	_	_	_	
146-281	24127-24128	-	_	_	_	_	
146-282	24128-24129	-	_	_	_	_	
146-283	24129-24130	-	_	_	_	_	
146-284	24130-24131	-	_	_	_	_	
146-285	24131-24132	-	_	_	_	_	
146-286	24132-24133	-	_	_	_	_	
146-287	24133-24134	-	_	_	_	_	
146-288	24134-24135	-	_	_	_	_	
146-289	24135-24136	-	_	_	_	_	
146-290	24136-24137	-	_	_	_	_	
146-291	24137-24138	-	_	_	_	_	
146-292	24138-24139	-	_	_	_	_	
146-293	24139-24140	-	_	_	_	_	
146-294	24140-24141	-	_	_	_	_	
146-295	24141-24142	-	_	_	_	_	
146-296	24142-24143	-	_	_	_	_	
146-297	24143-24144	-	_	_	_	_	
146-298	24144-24145	-	_	_	_	_	
146-299	24145-24146	-	_	_	_	_	
146-300	24146-24147	-	_	_	_	_	
146-301	24147-24148	-	_	_	_	_	
146-302	24148-24149	-	_	_	_	_	
146-303	24149-24150	-	_	_	_	_	
146-304	24150-24151	-	_	_	_	_	
146-305	24151-24152	-	_	_	_	_	
146-306	24152-24153	-	_	_	_	_	
146-307	24153-24154	-	_	_	_	_	
146-308	24154-24155	-	_	_	_	_	
146-309	24155-24156	-	_	_	_	_	
146-310	24156-24157	-	_	_	_	_	
146-311	24157-24158	-	_	_	_	_	
146-312	24158-24159	-	_	_	_	_	
146-313	24159-24160	-	_	_	_	_	
146-314	24160-24161	-	_	_	_	_	
146-315	24161-24162	-	_	_	_	_	
146-316	24162-24163	-	_	_	_	_	
146-317	24163-24164	-	_	_	_	_	
146-318	24164-24165	-	_	_	_	_	
146-319	24165-24166	-	_	_	_	_	
146-320	24166-24167	-	_	_	_	_	
146-321	24167-24168	-	_	_	_	_	
146-322	24168-24169	-	_	_	_	_	
146-323	24169-24170	-	_	_	_	_	
146-324	24170-24171	-	_	_	_	_	
146-325	24171-24172	-	_	_	_	_	
146-326	24172-24173	-	_	_	_	_	
146-327	24173-24174	-	_	_	_	_	
146-328	24174-24175	-	_	_	_	_	
146-329	24175-24176	-	_	_	_	_	
146-330	24176-24177	-	_	_	_	_	
146-331	24177-24178	-	_	_	_	_	
146-332	24178-24179	-	_	_	_	_	
146-333	24179-24180	-	_	_	_	_	
146-334	24180-24181	-	_	_	_	_	
146-335	24181-24182	-	_	_	_	_	
146-336	24182-24183	-	_	_	_	_	
146-337	24183-24184	-	_	_	_	_	
146-338	24184-24185	-	_	_	_	_	
146-339	24185-24186	-	_	_	_	_	
146-340	24186-24187	-	_	_	_	_	
146-341	24187-24188	-	_	_	_	_	
146-342	24188-24189	-	_	_	_	_	
146-343	24189-24190	-	_	_	_	_	
146-344	24190-24191	-	_	_	_	_	
146-345	24191-24192	-	_	_	_	_	
146-346	24192-24193	-	_	_	_	_	
146-347	24193-24194	-	_	_	_	_	
146-348	24194-24195	-	_	_	_	_	
146-349	24195-24196	-	_	_	_	_	
146-350	24196-24197	-	_	_	_	_	
146-351	24197-24198	-	_	_	_	_	
146-352	24198-24199	-	_	_	_	_	
146-353	24199-24200	-	_	_	_	_	
146-354	24200-24201	-	_	_	_	_	
146-355	24201-24202	-	_	_	_	_	
146-356	24202-24203	-	_	_	_	_	
146-357	24203-24204	-	_	_	_	_	
146-358	24204-24205	-	_	_	_	_	
146-359	24205-24206	-	_	_	_	_	
146-360	24206-24207	-	_	_	_	_	
146-361	24207-24208	-	_	_	_	_	
146-362	24208-24209	-	_	_	_	_	
146-363	24210-24215	Index	_	_	_	_	
146-364	24216-24220	Scan	_	_	_	_	
146-365	24221-24226	using	_	_	_	_	
146-366	24227-24240	publisherhash	_	_	_	_	
146-367	24241-24243	on	_	_	_	_	
146-368	24244-24249	books	_	_	_	_	
146-369	24250-24251	(	_	_	_	_	
146-370	24251-24255	cost	_	_	_	_	
146-371	24255-24256	=	_	_	_	_	
146-372	24256-24260	0.00	_	_	_	_	
146-373	24260-24261	.	_	_	_	_	
146-374	24261-24266	.2.02	_	_	_	_	
146-375	24267-24271	rows	_	_	_	_	
146-376	24271-24272	=	_	_	_	_	
146-377	24272-24273	1	_	_	_	_	
146-378	24274-24279	width	_	_	_	_	
146-379	24279-24280	=	_	_	_	_	
146-380	24280-24283	158	_	_	_	_	
146-381	24283-24284	)	_	_	_	_	
146-382	24285-24286	(	_	_	_	_	
146-383	24286-24292	actual	_	_	_	_	
146-384	24293-24297	time	_	_	_	_	
146-385	24297-24298	=	_	_	_	_	
146-386	24298-24303	0.016	_	_	_	_	
146-387	24303-24304	.	_	_	_	_	
146-388	24304-24310	.0.017	_	_	_	_	
146-389	24311-24315	rows	_	_	_	_	
146-390	24315-24316	=	_	_	_	_	
146-391	24316-24317	1	_	_	_	_	
146-392	24318-24323	loops	_	_	_	_	
146-393	24323-24324	=	_	_	_	_	
146-394	24324-24325	1	_	_	_	_	
146-395	24325-24326	)	_	_	_	_	
146-396	24327-24332	Index	_	_	_	_	
146-397	24333-24337	Cond	_	_	_	_	
146-398	24337-24338	:	_	_	_	_	
146-399	24339-24340	(	_	_	_	_	
146-400	24340-24341	(	_	_	_	_	
146-401	24341-24345	data	_	_	_	_	
146-402	24346-24347	-	_	_	_	_	
146-403	24347-24348	>	_	_	_	_	
146-404	24349-24350	'	_	_	_	_	
146-405	24350-24359	publisher	_	_	_	_	
146-406	24359-24360	'	_	_	_	_	
146-407	24360-24361	:	_	_	_	_	
146-408	24361-24362	:	_	_	_	_	
146-409	24362-24366	text	_	_	_	_	
146-410	24366-24367	)	_	_	_	_	
146-411	24368-24369	=	_	_	_	_	
146-412	24370-24371	'	_	_	_	_	
146-413	24371-24381	XlekfkLOtL	_	_	_	_	
146-414	24381-24382	'	_	_	_	_	
146-415	24382-24383	:	_	_	_	_	
146-416	24383-24384	:	_	_	_	_	
146-417	24384-24388	text	_	_	_	_	
146-418	24388-24389	)	_	_	_	_	
146-419	24390-24398	Planning	_	_	_	_	
146-420	24399-24403	Time	_	_	_	_	
146-421	24403-24404	:	_	_	_	_	
146-422	24405-24410	0.080	_	_	_	_	
146-423	24411-24413	ms	_	_	_	_	
146-424	24414-24423	Execution	_	_	_	_	
146-425	24424-24428	Time	_	_	_	_	
146-426	24428-24429	:	_	_	_	_	
146-427	24430-24435	0.035	_	_	_	_	
146-428	24436-24438	ms	_	_	_	_	
146-429	24439-24440	(	_	_	_	_	
146-430	24440-24441	4	_	_	_	_	
146-431	24442-24446	rows	_	_	_	_	
146-432	24446-24447	)	_	_	_	_	
146-433	24448-24455	Special	_	_	_	_	
146-434	24456-24463	Mention	_	_	_	_	
146-435	24463-24464	:	_	_	_	_	
146-436	24465-24468	GIN	_	_	_	_	
146-437	24469-24476	Trigram	_	_	_	_	
146-438	24477-24484	Indexes	_	_	_	_	
146-439	24485-24495	PostgreSQL	_	_	_	_	
146-440	24496-24504	supports	_	_	_	_	
146-441	24505-24511	string	_	_	_	_	
146-442	24512-24520	matching	_	_	_	_	
146-443	24521-24526	using	_	_	_	_	
146-444	24527-24534	trigram	_	_	_	_	
146-445	24535-24542	indexes	_	_	_	_	
146-446	24542-24543	.	_	_	_	_	

#Text=Trigram indexes work by breaking up text into trigrams.
147-1	24544-24551	Trigram	_	_	_	_	
147-2	24552-24559	indexes	_	_	_	_	
147-3	24560-24564	work	_	_	_	_	
147-4	24565-24567	by	_	_	_	_	
147-5	24568-24576	breaking	_	_	_	_	
147-6	24577-24579	up	_	_	_	_	
147-7	24580-24584	text	_	_	_	_	
147-8	24585-24589	into	_	_	_	_	
147-9	24590-24598	trigrams	_	_	_	_	
147-10	24598-24599	.	_	_	_	_	

#Text=Trigrams are basically words broken up into sequences of 3 letters.
148-1	24600-24608	Trigrams	_	_	_	_	
148-2	24609-24612	are	_	_	_	_	
148-3	24613-24622	basically	_	_	_	_	
148-4	24623-24628	words	_	_	_	_	
148-5	24629-24635	broken	_	_	_	_	
148-6	24636-24638	up	_	_	_	_	
148-7	24639-24643	into	_	_	_	_	
148-8	24644-24653	sequences	_	_	_	_	
148-9	24654-24656	of	_	_	_	_	
148-10	24657-24658	3	_	_	_	_	
148-11	24659-24666	letters	_	_	_	_	
148-12	24666-24667	.	_	_	_	_	

#Text=More information can be found in the documentation.
149-1	24668-24672	More	_	_	_	_	
149-2	24673-24684	information	_	_	_	_	
149-3	24685-24688	can	_	_	_	_	
149-4	24689-24691	be	_	_	_	_	
149-5	24692-24697	found	_	_	_	_	
149-6	24698-24700	in	_	_	_	_	
149-7	24701-24704	the	_	_	_	_	
149-8	24705-24718	documentation	_	_	_	_	
149-9	24718-24719	.	_	_	_	_	

#Text=GIN indexes support the “gin_trgm_ops” class that can be used to index the data in JSONB.
150-1	24720-24723	GIN	_	_	_	_	
150-2	24724-24731	indexes	_	_	_	_	
150-3	24732-24739	support	_	_	_	_	
150-4	24740-24743	the	_	_	_	_	
150-5	24744-24745	“	_	_	_	_	
150-6	24745-24757	gin_trgm_ops	_	_	_	_	
150-7	24757-24758	”	_	_	_	_	
150-8	24759-24764	class	_	_	_	_	
150-9	24765-24769	that	_	_	_	_	
150-10	24770-24773	can	_	_	_	_	
150-11	24774-24776	be	_	_	_	_	
150-12	24777-24781	used	_	_	_	_	
150-13	24782-24784	to	_	_	_	_	
150-14	24785-24790	index	_	_	_	_	
150-15	24791-24794	the	_	_	_	_	
150-16	24795-24799	data	_	_	_	_	
150-17	24800-24802	in	_	_	_	_	
150-18	24803-24808	JSONB	_	_	_	_	
150-19	24808-24809	.	_	_	_	_	

#Text=You can choose to use expression indexes to build the trigram index on a particular column.
151-1	24810-24813	You	_	_	_	_	
151-2	24814-24817	can	_	_	_	_	
151-3	24818-24824	choose	_	_	_	_	
151-4	24825-24827	to	_	_	_	_	
151-5	24828-24831	use	_	_	_	_	
151-6	24832-24842	expression	_	_	_	_	
151-7	24843-24850	indexes	_	_	_	_	
151-8	24851-24853	to	_	_	_	_	
151-9	24854-24859	build	_	_	_	_	
151-10	24860-24863	the	_	_	_	_	
151-11	24864-24871	trigram	_	_	_	_	
151-12	24872-24877	index	_	_	_	_	
151-13	24878-24880	on	_	_	_	_	
151-14	24881-24882	a	_	_	_	_	
151-15	24883-24893	particular	_	_	_	_	
151-16	24894-24900	column	_	_	_	_	
151-17	24900-24901	.	_	_	_	_	

#Text=CREATE EXTENSION pg_trgm;
#Text=CREATE INDEX publisher ON books USING GIN ((data->'publisher') gin_trgm_ops);
#Text=demo=# select * from books where data->'publisher' LIKE '%I0UB%';
#Text=id |
#Text=author
#Text=isbn
#Text=| rating |
#Text=data
#Text=----+-----------------+------------+--------+---------------------------------------------------------------------------------
#Text=4 | KiEk3xjqvTpmZeS | EYqXO9Nwmm |
#Text=0 | {"tags": {"nk3": {"ik1": "iv1"}}, "publisher": "MI0UBqZJDt", "criticrating": 1}
#Text=(1 row)
#Text=As you can see in the query above, we can search for any arbitrary string occurring at any potion.
152-1	24902-24908	CREATE	_	_	_	_	
152-2	24909-24918	EXTENSION	_	_	_	_	
152-3	24919-24926	pg_trgm	_	_	_	_	
152-4	24926-24927	;	_	_	_	_	
152-5	24928-24934	CREATE	_	_	_	_	
152-6	24935-24940	INDEX	_	_	_	_	
152-7	24941-24950	publisher	_	_	_	_	
152-8	24951-24953	ON	_	_	_	_	
152-9	24954-24959	books	_	_	_	_	
152-10	24960-24965	USING	_	_	_	_	
152-11	24966-24969	GIN	_	_	_	_	
152-12	24970-24971	(	_	_	_	_	
152-13	24971-24972	(	_	_	_	_	
152-14	24972-24976	data	_	_	_	_	
152-15	24976-24977	-	_	_	_	_	
152-16	24977-24978	>	_	_	_	_	
152-17	24978-24979	'	_	_	_	_	
152-18	24979-24988	publisher	_	_	_	_	
152-19	24988-24989	'	_	_	_	_	
152-20	24989-24990	)	_	_	_	_	
152-21	24991-25003	gin_trgm_ops	_	_	_	_	
152-22	25003-25004	)	_	_	_	_	
152-23	25004-25005	;	_	_	_	_	
152-24	25006-25010	demo	_	_	_	_	
152-25	25010-25011	=	_	_	_	_	
152-26	25011-25012	#	_	_	_	_	
152-27	25013-25019	select	_	_	_	_	
152-28	25020-25021	*	_	_	_	_	
152-29	25022-25026	from	_	_	_	_	
152-30	25027-25032	books	_	_	_	_	
152-31	25033-25038	where	_	_	_	_	
152-32	25039-25043	data	_	_	_	_	
152-33	25043-25044	-	_	_	_	_	
152-34	25044-25045	>	_	_	_	_	
152-35	25045-25046	'	_	_	_	_	
152-36	25046-25055	publisher	_	_	_	_	
152-37	25055-25056	'	_	_	_	_	
152-38	25057-25061	LIKE	_	_	_	_	
152-39	25062-25063	'	_	_	_	_	
152-40	25063-25064	%	_	_	_	_	
152-41	25064-25068	I0UB	_	_	_	_	
152-42	25068-25069	%	_	_	_	_	
152-43	25069-25070	'	_	_	_	_	
152-44	25070-25071	;	_	_	_	_	
152-45	25072-25074	id	_	_	_	_	
152-46	25075-25076	|	_	_	_	_	
152-47	25077-25083	author	_	_	_	_	
152-48	25084-25088	isbn	_	_	_	_	
152-49	25089-25090	|	_	_	_	_	
152-50	25091-25097	rating	_	_	_	_	
152-51	25098-25099	|	_	_	_	_	
152-52	25100-25104	data	_	_	_	_	
152-53	25105-25106	-	_	_	_	_	
152-54	25106-25107	-	_	_	_	_	
152-55	25107-25108	-	_	_	_	_	
152-56	25108-25109	-	_	_	_	_	
152-57	25109-25110	+	_	_	_	_	
152-58	25110-25111	-	_	_	_	_	
152-59	25111-25112	-	_	_	_	_	
152-60	25112-25113	-	_	_	_	_	
152-61	25113-25114	-	_	_	_	_	
152-62	25114-25115	-	_	_	_	_	
152-63	25115-25116	-	_	_	_	_	
152-64	25116-25117	-	_	_	_	_	
152-65	25117-25118	-	_	_	_	_	
152-66	25118-25119	-	_	_	_	_	
152-67	25119-25120	-	_	_	_	_	
152-68	25120-25121	-	_	_	_	_	
152-69	25121-25122	-	_	_	_	_	
152-70	25122-25123	-	_	_	_	_	
152-71	25123-25124	-	_	_	_	_	
152-72	25124-25125	-	_	_	_	_	
152-73	25125-25126	-	_	_	_	_	
152-74	25126-25127	-	_	_	_	_	
152-75	25127-25128	+	_	_	_	_	
152-76	25128-25129	-	_	_	_	_	
152-77	25129-25130	-	_	_	_	_	
152-78	25130-25131	-	_	_	_	_	
152-79	25131-25132	-	_	_	_	_	
152-80	25132-25133	-	_	_	_	_	
152-81	25133-25134	-	_	_	_	_	
152-82	25134-25135	-	_	_	_	_	
152-83	25135-25136	-	_	_	_	_	
152-84	25136-25137	-	_	_	_	_	
152-85	25137-25138	-	_	_	_	_	
152-86	25138-25139	-	_	_	_	_	
152-87	25139-25140	-	_	_	_	_	
152-88	25140-25141	+	_	_	_	_	
152-89	25141-25142	-	_	_	_	_	
152-90	25142-25143	-	_	_	_	_	
152-91	25143-25144	-	_	_	_	_	
152-92	25144-25145	-	_	_	_	_	
152-93	25145-25146	-	_	_	_	_	
152-94	25146-25147	-	_	_	_	_	
152-95	25147-25148	-	_	_	_	_	
152-96	25148-25149	-	_	_	_	_	
152-97	25149-25150	+	_	_	_	_	
152-98	25150-25151	-	_	_	_	_	
152-99	25151-25152	-	_	_	_	_	
152-100	25152-25153	-	_	_	_	_	
152-101	25153-25154	-	_	_	_	_	
152-102	25154-25155	-	_	_	_	_	
152-103	25155-25156	-	_	_	_	_	
152-104	25156-25157	-	_	_	_	_	
152-105	25157-25158	-	_	_	_	_	
152-106	25158-25159	-	_	_	_	_	
152-107	25159-25160	-	_	_	_	_	
152-108	25160-25161	-	_	_	_	_	
152-109	25161-25162	-	_	_	_	_	
152-110	25162-25163	-	_	_	_	_	
152-111	25163-25164	-	_	_	_	_	
152-112	25164-25165	-	_	_	_	_	
152-113	25165-25166	-	_	_	_	_	
152-114	25166-25167	-	_	_	_	_	
152-115	25167-25168	-	_	_	_	_	
152-116	25168-25169	-	_	_	_	_	
152-117	25169-25170	-	_	_	_	_	
152-118	25170-25171	-	_	_	_	_	
152-119	25171-25172	-	_	_	_	_	
152-120	25172-25173	-	_	_	_	_	
152-121	25173-25174	-	_	_	_	_	
152-122	25174-25175	-	_	_	_	_	
152-123	25175-25176	-	_	_	_	_	
152-124	25176-25177	-	_	_	_	_	
152-125	25177-25178	-	_	_	_	_	
152-126	25178-25179	-	_	_	_	_	
152-127	25179-25180	-	_	_	_	_	
152-128	25180-25181	-	_	_	_	_	
152-129	25181-25182	-	_	_	_	_	
152-130	25182-25183	-	_	_	_	_	
152-131	25183-25184	-	_	_	_	_	
152-132	25184-25185	-	_	_	_	_	
152-133	25185-25186	-	_	_	_	_	
152-134	25186-25187	-	_	_	_	_	
152-135	25187-25188	-	_	_	_	_	
152-136	25188-25189	-	_	_	_	_	
152-137	25189-25190	-	_	_	_	_	
152-138	25190-25191	-	_	_	_	_	
152-139	25191-25192	-	_	_	_	_	
152-140	25192-25193	-	_	_	_	_	
152-141	25193-25194	-	_	_	_	_	
152-142	25194-25195	-	_	_	_	_	
152-143	25195-25196	-	_	_	_	_	
152-144	25196-25197	-	_	_	_	_	
152-145	25197-25198	-	_	_	_	_	
152-146	25198-25199	-	_	_	_	_	
152-147	25199-25200	-	_	_	_	_	
152-148	25200-25201	-	_	_	_	_	
152-149	25201-25202	-	_	_	_	_	
152-150	25202-25203	-	_	_	_	_	
152-151	25203-25204	-	_	_	_	_	
152-152	25204-25205	-	_	_	_	_	
152-153	25205-25206	-	_	_	_	_	
152-154	25206-25207	-	_	_	_	_	
152-155	25207-25208	-	_	_	_	_	
152-156	25208-25209	-	_	_	_	_	
152-157	25209-25210	-	_	_	_	_	
152-158	25210-25211	-	_	_	_	_	
152-159	25211-25212	-	_	_	_	_	
152-160	25212-25213	-	_	_	_	_	
152-161	25213-25214	-	_	_	_	_	
152-162	25214-25215	-	_	_	_	_	
152-163	25215-25216	-	_	_	_	_	
152-164	25216-25217	-	_	_	_	_	
152-165	25217-25218	-	_	_	_	_	
152-166	25218-25219	-	_	_	_	_	
152-167	25219-25220	-	_	_	_	_	
152-168	25220-25221	-	_	_	_	_	
152-169	25221-25222	-	_	_	_	_	
152-170	25222-25223	-	_	_	_	_	
152-171	25223-25224	-	_	_	_	_	
152-172	25224-25225	-	_	_	_	_	
152-173	25225-25226	-	_	_	_	_	
152-174	25226-25227	-	_	_	_	_	
152-175	25227-25228	-	_	_	_	_	
152-176	25228-25229	-	_	_	_	_	
152-177	25229-25230	-	_	_	_	_	
152-178	25230-25231	-	_	_	_	_	
152-179	25232-25233	4	_	_	_	_	
152-180	25234-25235	|	_	_	_	_	
152-181	25236-25251	KiEk3xjqvTpmZeS	_	_	_	_	
152-182	25252-25253	|	_	_	_	_	
152-183	25254-25264	EYqXO9Nwmm	_	_	_	_	
152-184	25265-25266	|	_	_	_	_	
152-185	25267-25268	0	_	_	_	_	
152-186	25269-25270	|	_	_	_	_	
152-187	25271-25272	{	_	_	_	_	
152-188	25272-25273	"	_	_	_	_	
152-189	25273-25277	tags	_	_	_	_	
152-190	25277-25278	"	_	_	_	_	
152-191	25278-25279	:	_	_	_	_	
152-192	25280-25281	{	_	_	_	_	
152-193	25281-25282	"	_	_	_	_	
152-194	25282-25285	nk3	_	_	_	_	
152-195	25285-25286	"	_	_	_	_	
152-196	25286-25287	:	_	_	_	_	
152-197	25288-25289	{	_	_	_	_	
152-198	25289-25290	"	_	_	_	_	
152-199	25290-25293	ik1	_	_	_	_	
152-200	25293-25294	"	_	_	_	_	
152-201	25294-25295	:	_	_	_	_	
152-202	25296-25297	"	_	_	_	_	
152-203	25297-25300	iv1	_	_	_	_	
152-204	25300-25301	"	_	_	_	_	
152-205	25301-25302	}	_	_	_	_	
152-206	25302-25303	}	_	_	_	_	
152-207	25303-25304	,	_	_	_	_	
152-208	25305-25306	"	_	_	_	_	
152-209	25306-25315	publisher	_	_	_	_	
152-210	25315-25316	"	_	_	_	_	
152-211	25316-25317	:	_	_	_	_	
152-212	25318-25319	"	_	_	_	_	
152-213	25319-25329	MI0UBqZJDt	_	_	_	_	
152-214	25329-25330	"	_	_	_	_	
152-215	25330-25331	,	_	_	_	_	
152-216	25332-25333	"	_	_	_	_	
152-217	25333-25345	criticrating	_	_	_	_	
152-218	25345-25346	"	_	_	_	_	
152-219	25346-25347	:	_	_	_	_	
152-220	25348-25349	1	_	_	_	_	
152-221	25349-25350	}	_	_	_	_	
152-222	25351-25352	(	_	_	_	_	
152-223	25352-25353	1	_	_	_	_	
152-224	25354-25357	row	_	_	_	_	
152-225	25357-25358	)	_	_	_	_	
152-226	25359-25361	As	_	_	_	_	
152-227	25362-25365	you	_	_	_	_	
152-228	25366-25369	can	_	_	_	_	
152-229	25370-25373	see	_	_	_	_	
152-230	25374-25376	in	_	_	_	_	
152-231	25377-25380	the	_	_	_	_	
152-232	25381-25386	query	_	_	_	_	
152-233	25387-25392	above	_	_	_	_	
152-234	25392-25393	,	_	_	_	_	
152-235	25394-25396	we	_	_	_	_	
152-236	25397-25400	can	_	_	_	_	
152-237	25401-25407	search	_	_	_	_	
152-238	25408-25411	for	_	_	_	_	
152-239	25412-25415	any	_	_	_	_	
152-240	25416-25425	arbitrary	_	_	_	_	
152-241	25426-25432	string	_	_	_	_	
152-242	25433-25442	occurring	_	_	_	_	
152-243	25443-25445	at	_	_	_	_	
152-244	25446-25449	any	_	_	_	_	
152-245	25450-25456	potion	_	_	_	_	
152-246	25456-25457	.	_	_	_	_	

#Text=Unlike the B-tree indexes, we are not restricted to left anchored expressions.
#Text=demo=# explain analyze select * from books where data->'publisher' LIKE '%I0UB%';
#Text=QUERY PLAN
#Text=--------------------------------------------------------------------------------------------------------------------
#Text=Bitmap Heap Scan on books
#Text=(cost=9.78..111.28 rows=100 width=158) (actual time=0.033..0.033 rows=1 loops=1)
#Text=Recheck Cond: ((data -> 'publisher'::text) ~~ '%I0UB%'::text)
#Text=Heap Blocks: exact=1
#Text=Bitmap Index Scan on publisher
#Text=(cost=0.00..9.75 rows=100 width=0) (actual time=0.025..0.025 rows=1 loops=1)
#Text=Index Cond: ((data -> 'publisher'::text) ~~ '%I0UB%'::text)
#Text=Planning Time: 0.213 ms
#Text=Execution Time: 0.058 ms
#Text=(7 rows)
#Text=Special Mention: GIN Array Indexes
#Text=JSONB has great built-in support for indexing arrays.
153-1	25458-25464	Unlike	_	_	_	_	
153-2	25465-25468	the	_	_	_	_	
153-3	25468-25469	 	_	_	_	_	
153-4	25469-25475	B-tree	_	_	_	_	
153-5	25476-25483	indexes	_	_	_	_	
153-6	25483-25484	,	_	_	_	_	
153-7	25485-25487	we	_	_	_	_	
153-8	25488-25491	are	_	_	_	_	
153-9	25492-25495	not	_	_	_	_	
153-10	25496-25506	restricted	_	_	_	_	
153-11	25507-25509	to	_	_	_	_	
153-12	25510-25514	left	_	_	_	_	
153-13	25515-25523	anchored	_	_	_	_	
153-14	25524-25535	expressions	_	_	_	_	
153-15	25535-25536	.	_	_	_	_	
153-16	25537-25541	demo	_	_	_	_	
153-17	25541-25542	=	_	_	_	_	
153-18	25542-25543	#	_	_	_	_	
153-19	25544-25551	explain	_	_	_	_	
153-20	25552-25559	analyze	_	_	_	_	
153-21	25560-25566	select	_	_	_	_	
153-22	25567-25568	*	_	_	_	_	
153-23	25569-25573	from	_	_	_	_	
153-24	25574-25579	books	_	_	_	_	
153-25	25580-25585	where	_	_	_	_	
153-26	25586-25590	data	_	_	_	_	
153-27	25590-25591	-	_	_	_	_	
153-28	25591-25592	>	_	_	_	_	
153-29	25592-25593	'	_	_	_	_	
153-30	25593-25602	publisher	_	_	_	_	
153-31	25602-25603	'	_	_	_	_	
153-32	25604-25608	LIKE	_	_	_	_	
153-33	25609-25610	'	_	_	_	_	
153-34	25610-25611	%	_	_	_	_	
153-35	25611-25615	I0UB	_	_	_	_	
153-36	25615-25616	%	_	_	_	_	
153-37	25616-25617	'	_	_	_	_	
153-38	25617-25618	;	_	_	_	_	
153-39	25619-25624	QUERY	_	_	_	_	
153-40	25625-25629	PLAN	_	_	_	_	
153-41	25630-25631	-	_	_	_	_	
153-42	25631-25632	-	_	_	_	_	
153-43	25632-25633	-	_	_	_	_	
153-44	25633-25634	-	_	_	_	_	
153-45	25634-25635	-	_	_	_	_	
153-46	25635-25636	-	_	_	_	_	
153-47	25636-25637	-	_	_	_	_	
153-48	25637-25638	-	_	_	_	_	
153-49	25638-25639	-	_	_	_	_	
153-50	25639-25640	-	_	_	_	_	
153-51	25640-25641	-	_	_	_	_	
153-52	25641-25642	-	_	_	_	_	
153-53	25642-25643	-	_	_	_	_	
153-54	25643-25644	-	_	_	_	_	
153-55	25644-25645	-	_	_	_	_	
153-56	25645-25646	-	_	_	_	_	
153-57	25646-25647	-	_	_	_	_	
153-58	25647-25648	-	_	_	_	_	
153-59	25648-25649	-	_	_	_	_	
153-60	25649-25650	-	_	_	_	_	
153-61	25650-25651	-	_	_	_	_	
153-62	25651-25652	-	_	_	_	_	
153-63	25652-25653	-	_	_	_	_	
153-64	25653-25654	-	_	_	_	_	
153-65	25654-25655	-	_	_	_	_	
153-66	25655-25656	-	_	_	_	_	
153-67	25656-25657	-	_	_	_	_	
153-68	25657-25658	-	_	_	_	_	
153-69	25658-25659	-	_	_	_	_	
153-70	25659-25660	-	_	_	_	_	
153-71	25660-25661	-	_	_	_	_	
153-72	25661-25662	-	_	_	_	_	
153-73	25662-25663	-	_	_	_	_	
153-74	25663-25664	-	_	_	_	_	
153-75	25664-25665	-	_	_	_	_	
153-76	25665-25666	-	_	_	_	_	
153-77	25666-25667	-	_	_	_	_	
153-78	25667-25668	-	_	_	_	_	
153-79	25668-25669	-	_	_	_	_	
153-80	25669-25670	-	_	_	_	_	
153-81	25670-25671	-	_	_	_	_	
153-82	25671-25672	-	_	_	_	_	
153-83	25672-25673	-	_	_	_	_	
153-84	25673-25674	-	_	_	_	_	
153-85	25674-25675	-	_	_	_	_	
153-86	25675-25676	-	_	_	_	_	
153-87	25676-25677	-	_	_	_	_	
153-88	25677-25678	-	_	_	_	_	
153-89	25678-25679	-	_	_	_	_	
153-90	25679-25680	-	_	_	_	_	
153-91	25680-25681	-	_	_	_	_	
153-92	25681-25682	-	_	_	_	_	
153-93	25682-25683	-	_	_	_	_	
153-94	25683-25684	-	_	_	_	_	
153-95	25684-25685	-	_	_	_	_	
153-96	25685-25686	-	_	_	_	_	
153-97	25686-25687	-	_	_	_	_	
153-98	25687-25688	-	_	_	_	_	
153-99	25688-25689	-	_	_	_	_	
153-100	25689-25690	-	_	_	_	_	
153-101	25690-25691	-	_	_	_	_	
153-102	25691-25692	-	_	_	_	_	
153-103	25692-25693	-	_	_	_	_	
153-104	25693-25694	-	_	_	_	_	
153-105	25694-25695	-	_	_	_	_	
153-106	25695-25696	-	_	_	_	_	
153-107	25696-25697	-	_	_	_	_	
153-108	25697-25698	-	_	_	_	_	
153-109	25698-25699	-	_	_	_	_	
153-110	25699-25700	-	_	_	_	_	
153-111	25700-25701	-	_	_	_	_	
153-112	25701-25702	-	_	_	_	_	
153-113	25702-25703	-	_	_	_	_	
153-114	25703-25704	-	_	_	_	_	
153-115	25704-25705	-	_	_	_	_	
153-116	25705-25706	-	_	_	_	_	
153-117	25706-25707	-	_	_	_	_	
153-118	25707-25708	-	_	_	_	_	
153-119	25708-25709	-	_	_	_	_	
153-120	25709-25710	-	_	_	_	_	
153-121	25710-25711	-	_	_	_	_	
153-122	25711-25712	-	_	_	_	_	
153-123	25712-25713	-	_	_	_	_	
153-124	25713-25714	-	_	_	_	_	
153-125	25714-25715	-	_	_	_	_	
153-126	25715-25716	-	_	_	_	_	
153-127	25716-25717	-	_	_	_	_	
153-128	25717-25718	-	_	_	_	_	
153-129	25718-25719	-	_	_	_	_	
153-130	25719-25720	-	_	_	_	_	
153-131	25720-25721	-	_	_	_	_	
153-132	25721-25722	-	_	_	_	_	
153-133	25722-25723	-	_	_	_	_	
153-134	25723-25724	-	_	_	_	_	
153-135	25724-25725	-	_	_	_	_	
153-136	25725-25726	-	_	_	_	_	
153-137	25726-25727	-	_	_	_	_	
153-138	25727-25728	-	_	_	_	_	
153-139	25728-25729	-	_	_	_	_	
153-140	25729-25730	-	_	_	_	_	
153-141	25730-25731	-	_	_	_	_	
153-142	25731-25732	-	_	_	_	_	
153-143	25732-25733	-	_	_	_	_	
153-144	25733-25734	-	_	_	_	_	
153-145	25734-25735	-	_	_	_	_	
153-146	25735-25736	-	_	_	_	_	
153-147	25736-25737	-	_	_	_	_	
153-148	25737-25738	-	_	_	_	_	
153-149	25738-25739	-	_	_	_	_	
153-150	25739-25740	-	_	_	_	_	
153-151	25740-25741	-	_	_	_	_	
153-152	25741-25742	-	_	_	_	_	
153-153	25742-25743	-	_	_	_	_	
153-154	25743-25744	-	_	_	_	_	
153-155	25744-25745	-	_	_	_	_	
153-156	25745-25746	-	_	_	_	_	
153-157	25747-25753	Bitmap	_	_	_	_	
153-158	25754-25758	Heap	_	_	_	_	
153-159	25759-25763	Scan	_	_	_	_	
153-160	25764-25766	on	_	_	_	_	
153-161	25767-25772	books	_	_	_	_	
153-162	25773-25774	(	_	_	_	_	
153-163	25774-25778	cost	_	_	_	_	
153-164	25778-25779	=	_	_	_	_	
153-165	25779-25783	9.78	_	_	_	_	
153-166	25783-25784	.	_	_	_	_	
153-167	25784-25791	.111.28	_	_	_	_	
153-168	25792-25796	rows	_	_	_	_	
153-169	25796-25797	=	_	_	_	_	
153-170	25797-25800	100	_	_	_	_	
153-171	25801-25806	width	_	_	_	_	
153-172	25806-25807	=	_	_	_	_	
153-173	25807-25810	158	_	_	_	_	
153-174	25810-25811	)	_	_	_	_	
153-175	25812-25813	(	_	_	_	_	
153-176	25813-25819	actual	_	_	_	_	
153-177	25820-25824	time	_	_	_	_	
153-178	25824-25825	=	_	_	_	_	
153-179	25825-25830	0.033	_	_	_	_	
153-180	25830-25831	.	_	_	_	_	
153-181	25831-25837	.0.033	_	_	_	_	
153-182	25838-25842	rows	_	_	_	_	
153-183	25842-25843	=	_	_	_	_	
153-184	25843-25844	1	_	_	_	_	
153-185	25845-25850	loops	_	_	_	_	
153-186	25850-25851	=	_	_	_	_	
153-187	25851-25852	1	_	_	_	_	
153-188	25852-25853	)	_	_	_	_	
153-189	25854-25861	Recheck	_	_	_	_	
153-190	25862-25866	Cond	_	_	_	_	
153-191	25866-25867	:	_	_	_	_	
153-192	25868-25869	(	_	_	_	_	
153-193	25869-25870	(	_	_	_	_	
153-194	25870-25874	data	_	_	_	_	
153-195	25875-25876	-	_	_	_	_	
153-196	25876-25877	>	_	_	_	_	
153-197	25878-25879	'	_	_	_	_	
153-198	25879-25888	publisher	_	_	_	_	
153-199	25888-25889	'	_	_	_	_	
153-200	25889-25890	:	_	_	_	_	
153-201	25890-25891	:	_	_	_	_	
153-202	25891-25895	text	_	_	_	_	
153-203	25895-25896	)	_	_	_	_	
153-204	25897-25898	~	_	_	_	_	
153-205	25898-25899	~	_	_	_	_	
153-206	25900-25901	'	_	_	_	_	
153-207	25901-25902	%	_	_	_	_	
153-208	25902-25906	I0UB	_	_	_	_	
153-209	25906-25907	%	_	_	_	_	
153-210	25907-25908	'	_	_	_	_	
153-211	25908-25909	:	_	_	_	_	
153-212	25909-25910	:	_	_	_	_	
153-213	25910-25914	text	_	_	_	_	
153-214	25914-25915	)	_	_	_	_	
153-215	25916-25920	Heap	_	_	_	_	
153-216	25921-25927	Blocks	_	_	_	_	
153-217	25927-25928	:	_	_	_	_	
153-218	25929-25934	exact	_	_	_	_	
153-219	25934-25935	=	_	_	_	_	
153-220	25935-25936	1	_	_	_	_	
153-221	25937-25943	Bitmap	_	_	_	_	
153-222	25944-25949	Index	_	_	_	_	
153-223	25950-25954	Scan	_	_	_	_	
153-224	25955-25957	on	_	_	_	_	
153-225	25958-25967	publisher	_	_	_	_	
153-226	25968-25969	(	_	_	_	_	
153-227	25969-25973	cost	_	_	_	_	
153-228	25973-25974	=	_	_	_	_	
153-229	25974-25978	0.00	_	_	_	_	
153-230	25978-25979	.	_	_	_	_	
153-231	25979-25984	.9.75	_	_	_	_	
153-232	25985-25989	rows	_	_	_	_	
153-233	25989-25990	=	_	_	_	_	
153-234	25990-25993	100	_	_	_	_	
153-235	25994-25999	width	_	_	_	_	
153-236	25999-26000	=	_	_	_	_	
153-237	26000-26001	0	_	_	_	_	
153-238	26001-26002	)	_	_	_	_	
153-239	26003-26004	(	_	_	_	_	
153-240	26004-26010	actual	_	_	_	_	
153-241	26011-26015	time	_	_	_	_	
153-242	26015-26016	=	_	_	_	_	
153-243	26016-26021	0.025	_	_	_	_	
153-244	26021-26022	.	_	_	_	_	
153-245	26022-26028	.0.025	_	_	_	_	
153-246	26029-26033	rows	_	_	_	_	
153-247	26033-26034	=	_	_	_	_	
153-248	26034-26035	1	_	_	_	_	
153-249	26036-26041	loops	_	_	_	_	
153-250	26041-26042	=	_	_	_	_	
153-251	26042-26043	1	_	_	_	_	
153-252	26043-26044	)	_	_	_	_	
153-253	26045-26050	Index	_	_	_	_	
153-254	26051-26055	Cond	_	_	_	_	
153-255	26055-26056	:	_	_	_	_	
153-256	26057-26058	(	_	_	_	_	
153-257	26058-26059	(	_	_	_	_	
153-258	26059-26063	data	_	_	_	_	
153-259	26064-26065	-	_	_	_	_	
153-260	26065-26066	>	_	_	_	_	
153-261	26067-26068	'	_	_	_	_	
153-262	26068-26077	publisher	_	_	_	_	
153-263	26077-26078	'	_	_	_	_	
153-264	26078-26079	:	_	_	_	_	
153-265	26079-26080	:	_	_	_	_	
153-266	26080-26084	text	_	_	_	_	
153-267	26084-26085	)	_	_	_	_	
153-268	26086-26087	~	_	_	_	_	
153-269	26087-26088	~	_	_	_	_	
153-270	26089-26090	'	_	_	_	_	
153-271	26090-26091	%	_	_	_	_	
153-272	26091-26095	I0UB	_	_	_	_	
153-273	26095-26096	%	_	_	_	_	
153-274	26096-26097	'	_	_	_	_	
153-275	26097-26098	:	_	_	_	_	
153-276	26098-26099	:	_	_	_	_	
153-277	26099-26103	text	_	_	_	_	
153-278	26103-26104	)	_	_	_	_	
153-279	26105-26113	Planning	_	_	_	_	
153-280	26114-26118	Time	_	_	_	_	
153-281	26118-26119	:	_	_	_	_	
153-282	26120-26125	0.213	_	_	_	_	
153-283	26126-26128	ms	_	_	_	_	
153-284	26129-26138	Execution	_	_	_	_	
153-285	26139-26143	Time	_	_	_	_	
153-286	26143-26144	:	_	_	_	_	
153-287	26145-26150	0.058	_	_	_	_	
153-288	26151-26153	ms	_	_	_	_	
153-289	26154-26155	(	_	_	_	_	
153-290	26155-26156	7	_	_	_	_	
153-291	26157-26161	rows	_	_	_	_	
153-292	26161-26162	)	_	_	_	_	
153-293	26163-26170	Special	_	_	_	_	
153-294	26171-26178	Mention	_	_	_	_	
153-295	26178-26179	:	_	_	_	_	
153-296	26180-26183	GIN	_	_	_	_	
153-297	26184-26189	Array	_	_	_	_	
153-298	26190-26197	Indexes	_	_	_	_	
153-299	26198-26203	JSONB	_	_	_	_	
153-300	26204-26207	has	_	_	_	_	
153-301	26208-26213	great	_	_	_	_	
153-302	26214-26222	built-in	_	_	_	_	
153-303	26223-26230	support	_	_	_	_	
153-304	26231-26234	for	_	_	_	_	
153-305	26235-26243	indexing	_	_	_	_	
153-306	26244-26250	arrays	_	_	_	_	
153-307	26250-26251	.	_	_	_	_	

#Text=Let's consider an example of indexing an array of strings using a GIN index in the case when our JSONB data contains a "keyword" element and we would like to find rows with particular keywords:
#Text={"tags": {"nk780341": {"ik397357": "iv632731"}}, "keywords": ["abc", "kef", "keh"], "publisher": "fqaJuAdjP5", "criticrating": 2}
#Text=CREATE INDEX keywords ON books USING GIN ((data->'keywords') jsonb_path_ops);
#Text=demo=# select * from books where data->'keywords' @> '["abc", "keh"]'::jsonb;
#Text=author
#Text=isbn
#Text=| rating |
#Text=data
#Text=---------+-----------------+------------+--------+-----------------------------------------------------------------------------------------------------------------------------------
#Text=1000003 | zEG406sLKQ2IU8O | viPdlu3DZm |
#Text=4 | {"tags": {"nk263020": {"ik203820": "iv817928"}}, "keywords": ["abc", "kef", "keh"], "publisher": "7NClevxuTM", "criticrating": 2}
#Text=1000004 | GCe9NypHYKDH4rD | so6TQDYzZ3 |
#Text=4 | {"tags": {"nk780341": {"ik397357": "iv632731"}}, "keywords": ["abc", "kef", "keh"], "publisher": "fqaJuAdjP5", "criticrating": 2}
#Text=(2 rows)
#Text=demo=# explain analyze select * from books where data->'keywords' @> '["abc", "keh"]'::jsonb;
#Text=QUERY PLAN
#Text=---------------------------------------------------------------------------------------------------------------------
#Text=Bitmap Heap Scan on books
#Text=(cost=54.75..1049.75 rows=1000 width=158) (actual time=0.026..0.028 rows=2 loops=1)
#Text=Recheck Cond: ((data -> 'keywords'::text) @> '["abc", "keh"]'::jsonb)
#Text=Heap Blocks: exact=1
#Text=Bitmap Index Scan on keywords
#Text=(cost=0.00..54.50 rows=1000 width=0) (actual time=0.014..0.014 rows=2 loops=1)
#Text=Index Cond: ((data -> 'keywords'::text) @&amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;gt; '["abc", "keh"]'::jsonb)
#Text=Planning Time: 0.131 ms
#Text=Execution Time: 0.063 ms
#Text=(7 rows)
#Text=The order of the items in the array on the right does not matter.
154-1	26252-26257	Let's	_	_	_	_	
154-2	26258-26266	consider	_	_	_	_	
154-3	26267-26269	an	_	_	_	_	
154-4	26270-26277	example	_	_	_	_	
154-5	26278-26280	of	_	_	_	_	
154-6	26281-26289	indexing	_	_	_	_	
154-7	26290-26292	an	_	_	_	_	
154-8	26293-26298	array	_	_	_	_	
154-9	26299-26301	of	_	_	_	_	
154-10	26302-26309	strings	_	_	_	_	
154-11	26310-26315	using	_	_	_	_	
154-12	26316-26317	a	_	_	_	_	
154-13	26318-26321	GIN	_	_	_	_	
154-14	26322-26327	index	_	_	_	_	
154-15	26327-26328	 	_	_	_	_	
154-16	26328-26330	in	_	_	_	_	
154-17	26330-26331	 	_	_	_	_	
154-18	26331-26334	the	_	_	_	_	
154-19	26335-26339	case	_	_	_	_	
154-20	26340-26344	when	_	_	_	_	
154-21	26345-26348	our	_	_	_	_	
154-22	26348-26349	 	_	_	_	_	
154-23	26349-26354	JSONB	_	_	_	_	
154-24	26355-26359	data	_	_	_	_	
154-25	26360-26368	contains	_	_	_	_	
154-26	26369-26370	a	_	_	_	_	
154-27	26371-26372	"	_	_	_	_	
154-28	26372-26379	keyword	_	_	_	_	
154-29	26379-26380	"	_	_	_	_	
154-30	26381-26388	element	_	_	_	_	
154-31	26389-26392	and	_	_	_	_	
154-32	26393-26395	we	_	_	_	_	
154-33	26396-26401	would	_	_	_	_	
154-34	26402-26406	like	_	_	_	_	
154-35	26407-26409	to	_	_	_	_	
154-36	26410-26414	find	_	_	_	_	
154-37	26415-26419	rows	_	_	_	_	
154-38	26420-26424	with	_	_	_	_	
154-39	26425-26435	particular	_	_	_	_	
154-40	26436-26444	keywords	_	_	_	_	
154-41	26444-26445	:	_	_	_	_	
154-42	26446-26447	{	_	_	_	_	
154-43	26447-26448	"	_	_	_	_	
154-44	26448-26452	tags	_	_	_	_	
154-45	26452-26453	"	_	_	_	_	
154-46	26453-26454	:	_	_	_	_	
154-47	26455-26456	{	_	_	_	_	
154-48	26456-26457	"	_	_	_	_	
154-49	26457-26465	nk780341	_	_	_	_	
154-50	26465-26466	"	_	_	_	_	
154-51	26466-26467	:	_	_	_	_	
154-52	26468-26469	{	_	_	_	_	
154-53	26469-26470	"	_	_	_	_	
154-54	26470-26478	ik397357	_	_	_	_	
154-55	26478-26479	"	_	_	_	_	
154-56	26479-26480	:	_	_	_	_	
154-57	26481-26482	"	_	_	_	_	
154-58	26482-26490	iv632731	_	_	_	_	
154-59	26490-26491	"	_	_	_	_	
154-60	26491-26492	}	_	_	_	_	
154-61	26492-26493	}	_	_	_	_	
154-62	26493-26494	,	_	_	_	_	
154-63	26495-26496	"	_	_	_	_	
154-64	26496-26504	keywords	_	_	_	_	
154-65	26504-26505	"	_	_	_	_	
154-66	26505-26506	:	_	_	_	_	
154-67	26507-26508	[	_	_	_	_	
154-68	26508-26509	"	_	_	_	_	
154-69	26509-26512	abc	_	_	_	_	
154-70	26512-26513	"	_	_	_	_	
154-71	26513-26514	,	_	_	_	_	
154-72	26515-26516	"	_	_	_	_	
154-73	26516-26519	kef	_	_	_	_	
154-74	26519-26520	"	_	_	_	_	
154-75	26520-26521	,	_	_	_	_	
154-76	26522-26523	"	_	_	_	_	
154-77	26523-26526	keh	_	_	_	_	
154-78	26526-26527	"	_	_	_	_	
154-79	26527-26528	]	_	_	_	_	
154-80	26528-26529	,	_	_	_	_	
154-81	26530-26531	"	_	_	_	_	
154-82	26531-26540	publisher	_	_	_	_	
154-83	26540-26541	"	_	_	_	_	
154-84	26541-26542	:	_	_	_	_	
154-85	26543-26544	"	_	_	_	_	
154-86	26544-26554	fqaJuAdjP5	_	_	_	_	
154-87	26554-26555	"	_	_	_	_	
154-88	26555-26556	,	_	_	_	_	
154-89	26557-26558	"	_	_	_	_	
154-90	26558-26570	criticrating	_	_	_	_	
154-91	26570-26571	"	_	_	_	_	
154-92	26571-26572	:	_	_	_	_	
154-93	26573-26574	2	_	_	_	_	
154-94	26574-26575	}	_	_	_	_	
154-95	26576-26582	CREATE	_	_	_	_	
154-96	26583-26588	INDEX	_	_	_	_	
154-97	26589-26597	keywords	_	_	_	_	
154-98	26598-26600	ON	_	_	_	_	
154-99	26601-26606	books	_	_	_	_	
154-100	26607-26612	USING	_	_	_	_	
154-101	26613-26616	GIN	_	_	_	_	
154-102	26617-26618	(	_	_	_	_	
154-103	26618-26619	(	_	_	_	_	
154-104	26619-26623	data	_	_	_	_	
154-105	26623-26624	-	_	_	_	_	
154-106	26624-26625	>	_	_	_	_	
154-107	26625-26626	'	_	_	_	_	
154-108	26626-26634	keywords	_	_	_	_	
154-109	26634-26635	'	_	_	_	_	
154-110	26635-26636	)	_	_	_	_	
154-111	26637-26651	jsonb_path_ops	_	_	_	_	
154-112	26651-26652	)	_	_	_	_	
154-113	26652-26653	;	_	_	_	_	
154-114	26654-26658	demo	_	_	_	_	
154-115	26658-26659	=	_	_	_	_	
154-116	26659-26660	#	_	_	_	_	
154-117	26661-26667	select	_	_	_	_	
154-118	26668-26669	*	_	_	_	_	
154-119	26670-26674	from	_	_	_	_	
154-120	26675-26680	books	_	_	_	_	
154-121	26681-26686	where	_	_	_	_	
154-122	26687-26691	data	_	_	_	_	
154-123	26691-26692	-	_	_	_	_	
154-124	26692-26693	>	_	_	_	_	
154-125	26693-26694	'	_	_	_	_	
154-126	26694-26702	keywords	_	_	_	_	
154-127	26702-26703	'	_	_	_	_	
154-128	26704-26705	@	_	_	_	_	
154-129	26705-26706	>	_	_	_	_	
154-130	26707-26708	'	_	_	_	_	
154-131	26708-26709	[	_	_	_	_	
154-132	26709-26710	"	_	_	_	_	
154-133	26710-26713	abc	_	_	_	_	
154-134	26713-26714	"	_	_	_	_	
154-135	26714-26715	,	_	_	_	_	
154-136	26716-26717	"	_	_	_	_	
154-137	26717-26720	keh	_	_	_	_	
154-138	26720-26721	"	_	_	_	_	
154-139	26721-26722	]	_	_	_	_	
154-140	26722-26723	'	_	_	_	_	
154-141	26723-26724	:	_	_	_	_	
154-142	26724-26725	:	_	_	_	_	
154-143	26725-26730	jsonb	_	_	_	_	
154-144	26730-26731	;	_	_	_	_	
154-145	26732-26738	author	_	_	_	_	
154-146	26739-26743	isbn	_	_	_	_	
154-147	26744-26745	|	_	_	_	_	
154-148	26746-26752	rating	_	_	_	_	
154-149	26753-26754	|	_	_	_	_	
154-150	26755-26759	data	_	_	_	_	
154-151	26760-26761	-	_	_	_	_	
154-152	26761-26762	-	_	_	_	_	
154-153	26762-26763	-	_	_	_	_	
154-154	26763-26764	-	_	_	_	_	
154-155	26764-26765	-	_	_	_	_	
154-156	26765-26766	-	_	_	_	_	
154-157	26766-26767	-	_	_	_	_	
154-158	26767-26768	-	_	_	_	_	
154-159	26768-26769	-	_	_	_	_	
154-160	26769-26770	+	_	_	_	_	
154-161	26770-26771	-	_	_	_	_	
154-162	26771-26772	-	_	_	_	_	
154-163	26772-26773	-	_	_	_	_	
154-164	26773-26774	-	_	_	_	_	
154-165	26774-26775	-	_	_	_	_	
154-166	26775-26776	-	_	_	_	_	
154-167	26776-26777	-	_	_	_	_	
154-168	26777-26778	-	_	_	_	_	
154-169	26778-26779	-	_	_	_	_	
154-170	26779-26780	-	_	_	_	_	
154-171	26780-26781	-	_	_	_	_	
154-172	26781-26782	-	_	_	_	_	
154-173	26782-26783	-	_	_	_	_	
154-174	26783-26784	-	_	_	_	_	
154-175	26784-26785	-	_	_	_	_	
154-176	26785-26786	-	_	_	_	_	
154-177	26786-26787	-	_	_	_	_	
154-178	26787-26788	+	_	_	_	_	
154-179	26788-26789	-	_	_	_	_	
154-180	26789-26790	-	_	_	_	_	
154-181	26790-26791	-	_	_	_	_	
154-182	26791-26792	-	_	_	_	_	
154-183	26792-26793	-	_	_	_	_	
154-184	26793-26794	-	_	_	_	_	
154-185	26794-26795	-	_	_	_	_	
154-186	26795-26796	-	_	_	_	_	
154-187	26796-26797	-	_	_	_	_	
154-188	26797-26798	-	_	_	_	_	
154-189	26798-26799	-	_	_	_	_	
154-190	26799-26800	-	_	_	_	_	
154-191	26800-26801	+	_	_	_	_	
154-192	26801-26802	-	_	_	_	_	
154-193	26802-26803	-	_	_	_	_	
154-194	26803-26804	-	_	_	_	_	
154-195	26804-26805	-	_	_	_	_	
154-196	26805-26806	-	_	_	_	_	
154-197	26806-26807	-	_	_	_	_	
154-198	26807-26808	-	_	_	_	_	
154-199	26808-26809	-	_	_	_	_	
154-200	26809-26810	+	_	_	_	_	
154-201	26810-26811	-	_	_	_	_	
154-202	26811-26812	-	_	_	_	_	
154-203	26812-26813	-	_	_	_	_	
154-204	26813-26814	-	_	_	_	_	
154-205	26814-26815	-	_	_	_	_	
154-206	26815-26816	-	_	_	_	_	
154-207	26816-26817	-	_	_	_	_	
154-208	26817-26818	-	_	_	_	_	
154-209	26818-26819	-	_	_	_	_	
154-210	26819-26820	-	_	_	_	_	
154-211	26820-26821	-	_	_	_	_	
154-212	26821-26822	-	_	_	_	_	
154-213	26822-26823	-	_	_	_	_	
154-214	26823-26824	-	_	_	_	_	
154-215	26824-26825	-	_	_	_	_	
154-216	26825-26826	-	_	_	_	_	
154-217	26826-26827	-	_	_	_	_	
154-218	26827-26828	-	_	_	_	_	
154-219	26828-26829	-	_	_	_	_	
154-220	26829-26830	-	_	_	_	_	
154-221	26830-26831	-	_	_	_	_	
154-222	26831-26832	-	_	_	_	_	
154-223	26832-26833	-	_	_	_	_	
154-224	26833-26834	-	_	_	_	_	
154-225	26834-26835	-	_	_	_	_	
154-226	26835-26836	-	_	_	_	_	
154-227	26836-26837	-	_	_	_	_	
154-228	26837-26838	-	_	_	_	_	
154-229	26838-26839	-	_	_	_	_	
154-230	26839-26840	-	_	_	_	_	
154-231	26840-26841	-	_	_	_	_	
154-232	26841-26842	-	_	_	_	_	
154-233	26842-26843	-	_	_	_	_	
154-234	26843-26844	-	_	_	_	_	
154-235	26844-26845	-	_	_	_	_	
154-236	26845-26846	-	_	_	_	_	
154-237	26846-26847	-	_	_	_	_	
154-238	26847-26848	-	_	_	_	_	
154-239	26848-26849	-	_	_	_	_	
154-240	26849-26850	-	_	_	_	_	
154-241	26850-26851	-	_	_	_	_	
154-242	26851-26852	-	_	_	_	_	
154-243	26852-26853	-	_	_	_	_	
154-244	26853-26854	-	_	_	_	_	
154-245	26854-26855	-	_	_	_	_	
154-246	26855-26856	-	_	_	_	_	
154-247	26856-26857	-	_	_	_	_	
154-248	26857-26858	-	_	_	_	_	
154-249	26858-26859	-	_	_	_	_	
154-250	26859-26860	-	_	_	_	_	
154-251	26860-26861	-	_	_	_	_	
154-252	26861-26862	-	_	_	_	_	
154-253	26862-26863	-	_	_	_	_	
154-254	26863-26864	-	_	_	_	_	
154-255	26864-26865	-	_	_	_	_	
154-256	26865-26866	-	_	_	_	_	
154-257	26866-26867	-	_	_	_	_	
154-258	26867-26868	-	_	_	_	_	
154-259	26868-26869	-	_	_	_	_	
154-260	26869-26870	-	_	_	_	_	
154-261	26870-26871	-	_	_	_	_	
154-262	26871-26872	-	_	_	_	_	
154-263	26872-26873	-	_	_	_	_	
154-264	26873-26874	-	_	_	_	_	
154-265	26874-26875	-	_	_	_	_	
154-266	26875-26876	-	_	_	_	_	
154-267	26876-26877	-	_	_	_	_	
154-268	26877-26878	-	_	_	_	_	
154-269	26878-26879	-	_	_	_	_	
154-270	26879-26880	-	_	_	_	_	
154-271	26880-26881	-	_	_	_	_	
154-272	26881-26882	-	_	_	_	_	
154-273	26882-26883	-	_	_	_	_	
154-274	26883-26884	-	_	_	_	_	
154-275	26884-26885	-	_	_	_	_	
154-276	26885-26886	-	_	_	_	_	
154-277	26886-26887	-	_	_	_	_	
154-278	26887-26888	-	_	_	_	_	
154-279	26888-26889	-	_	_	_	_	
154-280	26889-26890	-	_	_	_	_	
154-281	26890-26891	-	_	_	_	_	
154-282	26891-26892	-	_	_	_	_	
154-283	26892-26893	-	_	_	_	_	
154-284	26893-26894	-	_	_	_	_	
154-285	26894-26895	-	_	_	_	_	
154-286	26895-26896	-	_	_	_	_	
154-287	26896-26897	-	_	_	_	_	
154-288	26897-26898	-	_	_	_	_	
154-289	26898-26899	-	_	_	_	_	
154-290	26899-26900	-	_	_	_	_	
154-291	26900-26901	-	_	_	_	_	
154-292	26901-26902	-	_	_	_	_	
154-293	26902-26903	-	_	_	_	_	
154-294	26903-26904	-	_	_	_	_	
154-295	26904-26905	-	_	_	_	_	
154-296	26905-26906	-	_	_	_	_	
154-297	26906-26907	-	_	_	_	_	
154-298	26907-26908	-	_	_	_	_	
154-299	26908-26909	-	_	_	_	_	
154-300	26909-26910	-	_	_	_	_	
154-301	26910-26911	-	_	_	_	_	
154-302	26911-26912	-	_	_	_	_	
154-303	26912-26913	-	_	_	_	_	
154-304	26913-26914	-	_	_	_	_	
154-305	26914-26915	-	_	_	_	_	
154-306	26915-26916	-	_	_	_	_	
154-307	26916-26917	-	_	_	_	_	
154-308	26917-26918	-	_	_	_	_	
154-309	26918-26919	-	_	_	_	_	
154-310	26919-26920	-	_	_	_	_	
154-311	26920-26921	-	_	_	_	_	
154-312	26921-26922	-	_	_	_	_	
154-313	26922-26923	-	_	_	_	_	
154-314	26923-26924	-	_	_	_	_	
154-315	26924-26925	-	_	_	_	_	
154-316	26925-26926	-	_	_	_	_	
154-317	26926-26927	-	_	_	_	_	
154-318	26927-26928	-	_	_	_	_	
154-319	26928-26929	-	_	_	_	_	
154-320	26929-26930	-	_	_	_	_	
154-321	26930-26931	-	_	_	_	_	
154-322	26931-26932	-	_	_	_	_	
154-323	26932-26933	-	_	_	_	_	
154-324	26933-26934	-	_	_	_	_	
154-325	26934-26935	-	_	_	_	_	
154-326	26935-26936	-	_	_	_	_	
154-327	26936-26937	-	_	_	_	_	
154-328	26937-26938	-	_	_	_	_	
154-329	26938-26939	-	_	_	_	_	
154-330	26939-26940	-	_	_	_	_	
154-331	26940-26941	-	_	_	_	_	
154-332	26942-26949	1000003	_	_	_	_	
154-333	26950-26951	|	_	_	_	_	
154-334	26952-26967	zEG406sLKQ2IU8O	_	_	_	_	
154-335	26968-26969	|	_	_	_	_	
154-336	26970-26980	viPdlu3DZm	_	_	_	_	
154-337	26981-26982	|	_	_	_	_	
154-338	26983-26984	4	_	_	_	_	
154-339	26985-26986	|	_	_	_	_	
154-340	26987-26988	{	_	_	_	_	
154-341	26988-26989	"	_	_	_	_	
154-342	26989-26993	tags	_	_	_	_	
154-343	26993-26994	"	_	_	_	_	
154-344	26994-26995	:	_	_	_	_	
154-345	26996-26997	{	_	_	_	_	
154-346	26997-26998	"	_	_	_	_	
154-347	26998-27006	nk263020	_	_	_	_	
154-348	27006-27007	"	_	_	_	_	
154-349	27007-27008	:	_	_	_	_	
154-350	27009-27010	{	_	_	_	_	
154-351	27010-27011	"	_	_	_	_	
154-352	27011-27019	ik203820	_	_	_	_	
154-353	27019-27020	"	_	_	_	_	
154-354	27020-27021	:	_	_	_	_	
154-355	27022-27023	"	_	_	_	_	
154-356	27023-27031	iv817928	_	_	_	_	
154-357	27031-27032	"	_	_	_	_	
154-358	27032-27033	}	_	_	_	_	
154-359	27033-27034	}	_	_	_	_	
154-360	27034-27035	,	_	_	_	_	
154-361	27036-27037	"	_	_	_	_	
154-362	27037-27045	keywords	_	_	_	_	
154-363	27045-27046	"	_	_	_	_	
154-364	27046-27047	:	_	_	_	_	
154-365	27048-27049	[	_	_	_	_	
154-366	27049-27050	"	_	_	_	_	
154-367	27050-27053	abc	_	_	_	_	
154-368	27053-27054	"	_	_	_	_	
154-369	27054-27055	,	_	_	_	_	
154-370	27056-27057	"	_	_	_	_	
154-371	27057-27060	kef	_	_	_	_	
154-372	27060-27061	"	_	_	_	_	
154-373	27061-27062	,	_	_	_	_	
154-374	27063-27064	"	_	_	_	_	
154-375	27064-27067	keh	_	_	_	_	
154-376	27067-27068	"	_	_	_	_	
154-377	27068-27069	]	_	_	_	_	
154-378	27069-27070	,	_	_	_	_	
154-379	27071-27072	"	_	_	_	_	
154-380	27072-27081	publisher	_	_	_	_	
154-381	27081-27082	"	_	_	_	_	
154-382	27082-27083	:	_	_	_	_	
154-383	27084-27085	"	_	_	_	_	
154-384	27085-27095	7NClevxuTM	_	_	_	_	
154-385	27095-27096	"	_	_	_	_	
154-386	27096-27097	,	_	_	_	_	
154-387	27098-27099	"	_	_	_	_	
154-388	27099-27111	criticrating	_	_	_	_	
154-389	27111-27112	"	_	_	_	_	
154-390	27112-27113	:	_	_	_	_	
154-391	27114-27115	2	_	_	_	_	
154-392	27115-27116	}	_	_	_	_	
154-393	27117-27124	1000004	_	_	_	_	
154-394	27125-27126	|	_	_	_	_	
154-395	27127-27142	GCe9NypHYKDH4rD	_	_	_	_	
154-396	27143-27144	|	_	_	_	_	
154-397	27145-27155	so6TQDYzZ3	_	_	_	_	
154-398	27156-27157	|	_	_	_	_	
154-399	27158-27159	4	_	_	_	_	
154-400	27160-27161	|	_	_	_	_	
154-401	27162-27163	{	_	_	_	_	
154-402	27163-27164	"	_	_	_	_	
154-403	27164-27168	tags	_	_	_	_	
154-404	27168-27169	"	_	_	_	_	
154-405	27169-27170	:	_	_	_	_	
154-406	27171-27172	{	_	_	_	_	
154-407	27172-27173	"	_	_	_	_	
154-408	27173-27181	nk780341	_	_	_	_	
154-409	27181-27182	"	_	_	_	_	
154-410	27182-27183	:	_	_	_	_	
154-411	27184-27185	{	_	_	_	_	
154-412	27185-27186	"	_	_	_	_	
154-413	27186-27194	ik397357	_	_	_	_	
154-414	27194-27195	"	_	_	_	_	
154-415	27195-27196	:	_	_	_	_	
154-416	27197-27198	"	_	_	_	_	
154-417	27198-27206	iv632731	_	_	_	_	
154-418	27206-27207	"	_	_	_	_	
154-419	27207-27208	}	_	_	_	_	
154-420	27208-27209	}	_	_	_	_	
154-421	27209-27210	,	_	_	_	_	
154-422	27211-27212	"	_	_	_	_	
154-423	27212-27220	keywords	_	_	_	_	
154-424	27220-27221	"	_	_	_	_	
154-425	27221-27222	:	_	_	_	_	
154-426	27223-27224	[	_	_	_	_	
154-427	27224-27225	"	_	_	_	_	
154-428	27225-27228	abc	_	_	_	_	
154-429	27228-27229	"	_	_	_	_	
154-430	27229-27230	,	_	_	_	_	
154-431	27231-27232	"	_	_	_	_	
154-432	27232-27235	kef	_	_	_	_	
154-433	27235-27236	"	_	_	_	_	
154-434	27236-27237	,	_	_	_	_	
154-435	27238-27239	"	_	_	_	_	
154-436	27239-27242	keh	_	_	_	_	
154-437	27242-27243	"	_	_	_	_	
154-438	27243-27244	]	_	_	_	_	
154-439	27244-27245	,	_	_	_	_	
154-440	27246-27247	"	_	_	_	_	
154-441	27247-27256	publisher	_	_	_	_	
154-442	27256-27257	"	_	_	_	_	
154-443	27257-27258	:	_	_	_	_	
154-444	27259-27260	"	_	_	_	_	
154-445	27260-27270	fqaJuAdjP5	_	_	_	_	
154-446	27270-27271	"	_	_	_	_	
154-447	27271-27272	,	_	_	_	_	
154-448	27273-27274	"	_	_	_	_	
154-449	27274-27286	criticrating	_	_	_	_	
154-450	27286-27287	"	_	_	_	_	
154-451	27287-27288	:	_	_	_	_	
154-452	27289-27290	2	_	_	_	_	
154-453	27290-27291	}	_	_	_	_	
154-454	27292-27293	(	_	_	_	_	
154-455	27293-27294	2	_	_	_	_	
154-456	27295-27299	rows	_	_	_	_	
154-457	27299-27300	)	_	_	_	_	
154-458	27301-27305	demo	_	_	_	_	
154-459	27305-27306	=	_	_	_	_	
154-460	27306-27307	#	_	_	_	_	
154-461	27308-27315	explain	_	_	_	_	
154-462	27316-27323	analyze	_	_	_	_	
154-463	27324-27330	select	_	_	_	_	
154-464	27331-27332	*	_	_	_	_	
154-465	27333-27337	from	_	_	_	_	
154-466	27338-27343	books	_	_	_	_	
154-467	27344-27349	where	_	_	_	_	
154-468	27350-27354	data	_	_	_	_	
154-469	27354-27355	-	_	_	_	_	
154-470	27355-27356	>	_	_	_	_	
154-471	27356-27357	'	_	_	_	_	
154-472	27357-27365	keywords	_	_	_	_	
154-473	27365-27366	'	_	_	_	_	
154-474	27367-27368	@	_	_	_	_	
154-475	27368-27369	>	_	_	_	_	
154-476	27370-27371	'	_	_	_	_	
154-477	27371-27372	[	_	_	_	_	
154-478	27372-27373	"	_	_	_	_	
154-479	27373-27376	abc	_	_	_	_	
154-480	27376-27377	"	_	_	_	_	
154-481	27377-27378	,	_	_	_	_	
154-482	27379-27380	"	_	_	_	_	
154-483	27380-27383	keh	_	_	_	_	
154-484	27383-27384	"	_	_	_	_	
154-485	27384-27385	]	_	_	_	_	
154-486	27385-27386	'	_	_	_	_	
154-487	27386-27387	:	_	_	_	_	
154-488	27387-27388	:	_	_	_	_	
154-489	27388-27393	jsonb	_	_	_	_	
154-490	27393-27394	;	_	_	_	_	
154-491	27395-27400	QUERY	_	_	_	_	
154-492	27401-27405	PLAN	_	_	_	_	
154-493	27406-27407	-	_	_	_	_	
154-494	27407-27408	-	_	_	_	_	
154-495	27408-27409	-	_	_	_	_	
154-496	27409-27410	-	_	_	_	_	
154-497	27410-27411	-	_	_	_	_	
154-498	27411-27412	-	_	_	_	_	
154-499	27412-27413	-	_	_	_	_	
154-500	27413-27414	-	_	_	_	_	
154-501	27414-27415	-	_	_	_	_	
154-502	27415-27416	-	_	_	_	_	
154-503	27416-27417	-	_	_	_	_	
154-504	27417-27418	-	_	_	_	_	
154-505	27418-27419	-	_	_	_	_	
154-506	27419-27420	-	_	_	_	_	
154-507	27420-27421	-	_	_	_	_	
154-508	27421-27422	-	_	_	_	_	
154-509	27422-27423	-	_	_	_	_	
154-510	27423-27424	-	_	_	_	_	
154-511	27424-27425	-	_	_	_	_	
154-512	27425-27426	-	_	_	_	_	
154-513	27426-27427	-	_	_	_	_	
154-514	27427-27428	-	_	_	_	_	
154-515	27428-27429	-	_	_	_	_	
154-516	27429-27430	-	_	_	_	_	
154-517	27430-27431	-	_	_	_	_	
154-518	27431-27432	-	_	_	_	_	
154-519	27432-27433	-	_	_	_	_	
154-520	27433-27434	-	_	_	_	_	
154-521	27434-27435	-	_	_	_	_	
154-522	27435-27436	-	_	_	_	_	
154-523	27436-27437	-	_	_	_	_	
154-524	27437-27438	-	_	_	_	_	
154-525	27438-27439	-	_	_	_	_	
154-526	27439-27440	-	_	_	_	_	
154-527	27440-27441	-	_	_	_	_	
154-528	27441-27442	-	_	_	_	_	
154-529	27442-27443	-	_	_	_	_	
154-530	27443-27444	-	_	_	_	_	
154-531	27444-27445	-	_	_	_	_	
154-532	27445-27446	-	_	_	_	_	
154-533	27446-27447	-	_	_	_	_	
154-534	27447-27448	-	_	_	_	_	
154-535	27448-27449	-	_	_	_	_	
154-536	27449-27450	-	_	_	_	_	
154-537	27450-27451	-	_	_	_	_	
154-538	27451-27452	-	_	_	_	_	
154-539	27452-27453	-	_	_	_	_	
154-540	27453-27454	-	_	_	_	_	
154-541	27454-27455	-	_	_	_	_	
154-542	27455-27456	-	_	_	_	_	
154-543	27456-27457	-	_	_	_	_	
154-544	27457-27458	-	_	_	_	_	
154-545	27458-27459	-	_	_	_	_	
154-546	27459-27460	-	_	_	_	_	
154-547	27460-27461	-	_	_	_	_	
154-548	27461-27462	-	_	_	_	_	
154-549	27462-27463	-	_	_	_	_	
154-550	27463-27464	-	_	_	_	_	
154-551	27464-27465	-	_	_	_	_	
154-552	27465-27466	-	_	_	_	_	
154-553	27466-27467	-	_	_	_	_	
154-554	27467-27468	-	_	_	_	_	
154-555	27468-27469	-	_	_	_	_	
154-556	27469-27470	-	_	_	_	_	
154-557	27470-27471	-	_	_	_	_	
154-558	27471-27472	-	_	_	_	_	
154-559	27472-27473	-	_	_	_	_	
154-560	27473-27474	-	_	_	_	_	
154-561	27474-27475	-	_	_	_	_	
154-562	27475-27476	-	_	_	_	_	
154-563	27476-27477	-	_	_	_	_	
154-564	27477-27478	-	_	_	_	_	
154-565	27478-27479	-	_	_	_	_	
154-566	27479-27480	-	_	_	_	_	
154-567	27480-27481	-	_	_	_	_	
154-568	27481-27482	-	_	_	_	_	
154-569	27482-27483	-	_	_	_	_	
154-570	27483-27484	-	_	_	_	_	
154-571	27484-27485	-	_	_	_	_	
154-572	27485-27486	-	_	_	_	_	
154-573	27486-27487	-	_	_	_	_	
154-574	27487-27488	-	_	_	_	_	
154-575	27488-27489	-	_	_	_	_	
154-576	27489-27490	-	_	_	_	_	
154-577	27490-27491	-	_	_	_	_	
154-578	27491-27492	-	_	_	_	_	
154-579	27492-27493	-	_	_	_	_	
154-580	27493-27494	-	_	_	_	_	
154-581	27494-27495	-	_	_	_	_	
154-582	27495-27496	-	_	_	_	_	
154-583	27496-27497	-	_	_	_	_	
154-584	27497-27498	-	_	_	_	_	
154-585	27498-27499	-	_	_	_	_	
154-586	27499-27500	-	_	_	_	_	
154-587	27500-27501	-	_	_	_	_	
154-588	27501-27502	-	_	_	_	_	
154-589	27502-27503	-	_	_	_	_	
154-590	27503-27504	-	_	_	_	_	
154-591	27504-27505	-	_	_	_	_	
154-592	27505-27506	-	_	_	_	_	
154-593	27506-27507	-	_	_	_	_	
154-594	27507-27508	-	_	_	_	_	
154-595	27508-27509	-	_	_	_	_	
154-596	27509-27510	-	_	_	_	_	
154-597	27510-27511	-	_	_	_	_	
154-598	27511-27512	-	_	_	_	_	
154-599	27512-27513	-	_	_	_	_	
154-600	27513-27514	-	_	_	_	_	
154-601	27514-27515	-	_	_	_	_	
154-602	27515-27516	-	_	_	_	_	
154-603	27516-27517	-	_	_	_	_	
154-604	27517-27518	-	_	_	_	_	
154-605	27518-27519	-	_	_	_	_	
154-606	27519-27520	-	_	_	_	_	
154-607	27520-27521	-	_	_	_	_	
154-608	27521-27522	-	_	_	_	_	
154-609	27522-27523	-	_	_	_	_	
154-610	27524-27530	Bitmap	_	_	_	_	
154-611	27531-27535	Heap	_	_	_	_	
154-612	27536-27540	Scan	_	_	_	_	
154-613	27541-27543	on	_	_	_	_	
154-614	27544-27549	books	_	_	_	_	
154-615	27550-27551	(	_	_	_	_	
154-616	27551-27555	cost	_	_	_	_	
154-617	27555-27556	=	_	_	_	_	
154-618	27556-27561	54.75	_	_	_	_	
154-619	27561-27562	.	_	_	_	_	
154-620	27562-27570	.1049.75	_	_	_	_	
154-621	27571-27575	rows	_	_	_	_	
154-622	27575-27576	=	_	_	_	_	
154-623	27576-27580	1000	_	_	_	_	
154-624	27581-27586	width	_	_	_	_	
154-625	27586-27587	=	_	_	_	_	
154-626	27587-27590	158	_	_	_	_	
154-627	27590-27591	)	_	_	_	_	
154-628	27592-27593	(	_	_	_	_	
154-629	27593-27599	actual	_	_	_	_	
154-630	27600-27604	time	_	_	_	_	
154-631	27604-27605	=	_	_	_	_	
154-632	27605-27610	0.026	_	_	_	_	
154-633	27610-27611	.	_	_	_	_	
154-634	27611-27617	.0.028	_	_	_	_	
154-635	27618-27622	rows	_	_	_	_	
154-636	27622-27623	=	_	_	_	_	
154-637	27623-27624	2	_	_	_	_	
154-638	27625-27630	loops	_	_	_	_	
154-639	27630-27631	=	_	_	_	_	
154-640	27631-27632	1	_	_	_	_	
154-641	27632-27633	)	_	_	_	_	
154-642	27634-27641	Recheck	_	_	_	_	
154-643	27642-27646	Cond	_	_	_	_	
154-644	27646-27647	:	_	_	_	_	
154-645	27648-27649	(	_	_	_	_	
154-646	27649-27650	(	_	_	_	_	
154-647	27650-27654	data	_	_	_	_	
154-648	27655-27656	-	_	_	_	_	
154-649	27656-27657	>	_	_	_	_	
154-650	27658-27659	'	_	_	_	_	
154-651	27659-27667	keywords	_	_	_	_	
154-652	27667-27668	'	_	_	_	_	
154-653	27668-27669	:	_	_	_	_	
154-654	27669-27670	:	_	_	_	_	
154-655	27670-27674	text	_	_	_	_	
154-656	27674-27675	)	_	_	_	_	
154-657	27676-27677	@	_	_	_	_	
154-658	27677-27678	>	_	_	_	_	
154-659	27679-27680	'	_	_	_	_	
154-660	27680-27681	[	_	_	_	_	
154-661	27681-27682	"	_	_	_	_	
154-662	27682-27685	abc	_	_	_	_	
154-663	27685-27686	"	_	_	_	_	
154-664	27686-27687	,	_	_	_	_	
154-665	27688-27689	"	_	_	_	_	
154-666	27689-27692	keh	_	_	_	_	
154-667	27692-27693	"	_	_	_	_	
154-668	27693-27694	]	_	_	_	_	
154-669	27694-27695	'	_	_	_	_	
154-670	27695-27696	:	_	_	_	_	
154-671	27696-27697	:	_	_	_	_	
154-672	27697-27702	jsonb	_	_	_	_	
154-673	27702-27703	)	_	_	_	_	
154-674	27704-27708	Heap	_	_	_	_	
154-675	27709-27715	Blocks	_	_	_	_	
154-676	27715-27716	:	_	_	_	_	
154-677	27717-27722	exact	_	_	_	_	
154-678	27722-27723	=	_	_	_	_	
154-679	27723-27724	1	_	_	_	_	
154-680	27725-27731	Bitmap	_	_	_	_	
154-681	27732-27737	Index	_	_	_	_	
154-682	27738-27742	Scan	_	_	_	_	
154-683	27743-27745	on	_	_	_	_	
154-684	27746-27754	keywords	_	_	_	_	
154-685	27755-27756	(	_	_	_	_	
154-686	27756-27760	cost	_	_	_	_	
154-687	27760-27761	=	_	_	_	_	
154-688	27761-27765	0.00	_	_	_	_	
154-689	27765-27766	.	_	_	_	_	
154-690	27766-27772	.54.50	_	_	_	_	
154-691	27773-27777	rows	_	_	_	_	
154-692	27777-27778	=	_	_	_	_	
154-693	27778-27782	1000	_	_	_	_	
154-694	27783-27788	width	_	_	_	_	
154-695	27788-27789	=	_	_	_	_	
154-696	27789-27790	0	_	_	_	_	
154-697	27790-27791	)	_	_	_	_	
154-698	27792-27793	(	_	_	_	_	
154-699	27793-27799	actual	_	_	_	_	
154-700	27800-27804	time	_	_	_	_	
154-701	27804-27805	=	_	_	_	_	
154-702	27805-27810	0.014	_	_	_	_	
154-703	27810-27811	.	_	_	_	_	
154-704	27811-27817	.0.014	_	_	_	_	
154-705	27818-27822	rows	_	_	_	_	
154-706	27822-27823	=	_	_	_	_	
154-707	27823-27824	2	_	_	_	_	
154-708	27825-27830	loops	_	_	_	_	
154-709	27830-27831	=	_	_	_	_	
154-710	27831-27832	1	_	_	_	_	
154-711	27832-27833	)	_	_	_	_	
154-712	27834-27839	Index	_	_	_	_	
154-713	27840-27844	Cond	_	_	_	_	
154-714	27844-27845	:	_	_	_	_	
154-715	27846-27847	(	_	_	_	_	
154-716	27847-27848	(	_	_	_	_	
154-717	27848-27852	data	_	_	_	_	
154-718	27853-27854	-	_	_	_	_	
154-719	27854-27855	>	_	_	_	_	
154-720	27856-27857	'	_	_	_	_	
154-721	27857-27865	keywords	_	_	_	_	
154-722	27865-27866	'	_	_	_	_	
154-723	27866-27867	:	_	_	_	_	
154-724	27867-27868	:	_	_	_	_	
154-725	27868-27872	text	_	_	_	_	
154-726	27872-27873	)	_	_	_	_	
154-727	27874-27875	@	_	_	_	_	
154-728	27875-27876	&	_	_	_	_	
154-729	27876-27879	amp	_	_	_	_	
154-730	27879-27880	;	_	_	_	_	
154-731	27880-27883	amp	_	_	_	_	
154-732	27883-27884	;	_	_	_	_	
154-733	27884-27887	amp	_	_	_	_	
154-734	27887-27888	;	_	_	_	_	
154-735	27888-27891	amp	_	_	_	_	
154-736	27891-27892	;	_	_	_	_	
154-737	27892-27895	amp	_	_	_	_	
154-738	27895-27896	;	_	_	_	_	
154-739	27896-27899	amp	_	_	_	_	
154-740	27899-27900	;	_	_	_	_	
154-741	27900-27903	amp	_	_	_	_	
154-742	27903-27904	;	_	_	_	_	
154-743	27904-27907	amp	_	_	_	_	
154-744	27907-27908	;	_	_	_	_	
154-745	27908-27911	amp	_	_	_	_	
154-746	27911-27912	;	_	_	_	_	
154-747	27912-27915	amp	_	_	_	_	
154-748	27915-27916	;	_	_	_	_	
154-749	27916-27918	gt	_	_	_	_	
154-750	27918-27919	;	_	_	_	_	
154-751	27920-27921	'	_	_	_	_	
154-752	27921-27922	[	_	_	_	_	
154-753	27922-27923	"	_	_	_	_	
154-754	27923-27926	abc	_	_	_	_	
154-755	27926-27927	"	_	_	_	_	
154-756	27927-27928	,	_	_	_	_	
154-757	27929-27930	"	_	_	_	_	
154-758	27930-27933	keh	_	_	_	_	
154-759	27933-27934	"	_	_	_	_	
154-760	27934-27935	]	_	_	_	_	
154-761	27935-27936	'	_	_	_	_	
154-762	27936-27937	:	_	_	_	_	
154-763	27937-27938	:	_	_	_	_	
154-764	27938-27943	jsonb	_	_	_	_	
154-765	27943-27944	)	_	_	_	_	
154-766	27945-27953	Planning	_	_	_	_	
154-767	27954-27958	Time	_	_	_	_	
154-768	27958-27959	:	_	_	_	_	
154-769	27960-27965	0.131	_	_	_	_	
154-770	27966-27968	ms	_	_	_	_	
154-771	27969-27978	Execution	_	_	_	_	
154-772	27979-27983	Time	_	_	_	_	
154-773	27983-27984	:	_	_	_	_	
154-774	27985-27990	0.063	_	_	_	_	
154-775	27991-27993	ms	_	_	_	_	
154-776	27994-27995	(	_	_	_	_	
154-777	27995-27996	7	_	_	_	_	
154-778	27997-28001	rows	_	_	_	_	
154-779	28001-28002	)	_	_	_	_	
154-780	28003-28006	The	_	_	_	_	
154-781	28007-28012	order	_	_	_	_	
154-782	28013-28015	of	_	_	_	_	
154-783	28016-28019	the	_	_	_	_	
154-784	28020-28025	items	_	_	_	_	
154-785	28026-28028	in	_	_	_	_	
154-786	28029-28032	the	_	_	_	_	
154-787	28033-28038	array	_	_	_	_	
154-788	28039-28041	on	_	_	_	_	
154-789	28042-28045	the	_	_	_	_	
154-790	28046-28051	right	_	_	_	_	
154-791	28052-28056	does	_	_	_	_	
154-792	28057-28060	not	_	_	_	_	
154-793	28061-28067	matter	_	_	_	_	
154-794	28067-28068	.	_	_	_	_	

#Text=For example, the following query would return the same result as the previous:
#Text=demo=# explain analyze select * from books where data->'keywords' @> '["keh","abc"]'::jsonb;
#Text=All elements in the right side array of the containment operator need to be present - basically like an "AND" operator.
155-1	28069-28072	For	_	_	_	_	
155-2	28073-28080	example	_	_	_	_	
155-3	28080-28081	,	_	_	_	_	
155-4	28082-28085	the	_	_	_	_	
155-5	28086-28095	following	_	_	_	_	
155-6	28096-28101	query	_	_	_	_	
155-7	28102-28107	would	_	_	_	_	
155-8	28108-28114	return	_	_	_	_	
155-9	28115-28118	the	_	_	_	_	
155-10	28119-28123	same	_	_	_	_	
155-11	28124-28130	result	_	_	_	_	
155-12	28131-28133	as	_	_	_	_	
155-13	28134-28137	the	_	_	_	_	
155-14	28138-28146	previous	_	_	_	_	
155-15	28146-28147	:	_	_	_	_	
155-16	28148-28152	demo	_	_	_	_	
155-17	28152-28153	=	_	_	_	_	
155-18	28153-28154	#	_	_	_	_	
155-19	28155-28162	explain	_	_	_	_	
155-20	28163-28170	analyze	_	_	_	_	
155-21	28171-28177	select	_	_	_	_	
155-22	28178-28179	*	_	_	_	_	
155-23	28180-28184	from	_	_	_	_	
155-24	28185-28190	books	_	_	_	_	
155-25	28191-28196	where	_	_	_	_	
155-26	28197-28201	data	_	_	_	_	
155-27	28201-28202	-	_	_	_	_	
155-28	28202-28203	>	_	_	_	_	
155-29	28203-28204	'	_	_	_	_	
155-30	28204-28212	keywords	_	_	_	_	
155-31	28212-28213	'	_	_	_	_	
155-32	28214-28215	@	_	_	_	_	
155-33	28215-28216	>	_	_	_	_	
155-34	28217-28218	'	_	_	_	_	
155-35	28218-28219	[	_	_	_	_	
155-36	28219-28220	"	_	_	_	_	
155-37	28220-28223	keh	_	_	_	_	
155-38	28223-28224	"	_	_	_	_	
155-39	28224-28225	,	_	_	_	_	
155-40	28225-28226	"	_	_	_	_	
155-41	28226-28229	abc	_	_	_	_	
155-42	28229-28230	"	_	_	_	_	
155-43	28230-28231	]	_	_	_	_	
155-44	28231-28232	'	_	_	_	_	
155-45	28232-28233	:	_	_	_	_	
155-46	28233-28234	:	_	_	_	_	
155-47	28234-28239	jsonb	_	_	_	_	
155-48	28239-28240	;	_	_	_	_	
155-49	28241-28244	All	_	_	_	_	
155-50	28245-28253	elements	_	_	_	_	
155-51	28254-28256	in	_	_	_	_	
155-52	28257-28260	the	_	_	_	_	
155-53	28261-28266	right	_	_	_	_	
155-54	28267-28271	side	_	_	_	_	
155-55	28272-28277	array	_	_	_	_	
155-56	28278-28280	of	_	_	_	_	
155-57	28281-28284	the	_	_	_	_	
155-58	28285-28296	containment	_	_	_	_	
155-59	28297-28305	operator	_	_	_	_	
155-60	28306-28310	need	_	_	_	_	
155-61	28311-28313	to	_	_	_	_	
155-62	28314-28316	be	_	_	_	_	
155-63	28317-28324	present	_	_	_	_	
155-64	28325-28326	-	_	_	_	_	
155-65	28327-28336	basically	_	_	_	_	
155-66	28337-28341	like	_	_	_	_	
155-67	28342-28344	an	_	_	_	_	
155-68	28345-28346	"	_	_	_	_	
155-69	28346-28349	AND	_	_	_	_	
155-70	28349-28350	"	_	_	_	_	
155-71	28351-28359	operator	_	_	_	_	
155-72	28359-28360	.	_	_	_	_	

#Text=If you want "OR" behavior, you can construct it in the WHERE clause:
#Text=demo=# explain analyze select * from books where (data->'keywords' @> '["abc"]'::jsonb OR data->'keywords' @> '["keh"]'::jsonb);
#Text=More details on the behavior of the containment operators with arrays can be found in the documentation.
156-1	28361-28363	If	_	_	_	_	
156-2	28364-28367	you	_	_	_	_	
156-3	28368-28372	want	_	_	_	_	
156-4	28373-28374	"	_	_	_	_	
156-5	28374-28376	OR	_	_	_	_	
156-6	28376-28377	"	_	_	_	_	
156-7	28378-28386	behavior	_	_	_	_	
156-8	28386-28387	,	_	_	_	_	
156-9	28388-28391	you	_	_	_	_	
156-10	28392-28395	can	_	_	_	_	
156-11	28396-28405	construct	_	_	_	_	
156-12	28406-28408	it	_	_	_	_	
156-13	28409-28411	in	_	_	_	_	
156-14	28412-28415	the	_	_	_	_	
156-15	28416-28421	WHERE	_	_	_	_	
156-16	28422-28428	clause	_	_	_	_	
156-17	28428-28429	:	_	_	_	_	
156-18	28430-28434	demo	_	_	_	_	
156-19	28434-28435	=	_	_	_	_	
156-20	28435-28436	#	_	_	_	_	
156-21	28437-28444	explain	_	_	_	_	
156-22	28445-28452	analyze	_	_	_	_	
156-23	28453-28459	select	_	_	_	_	
156-24	28460-28461	*	_	_	_	_	
156-25	28462-28466	from	_	_	_	_	
156-26	28467-28472	books	_	_	_	_	
156-27	28473-28478	where	_	_	_	_	
156-28	28479-28480	(	_	_	_	_	
156-29	28480-28484	data	_	_	_	_	
156-30	28484-28485	-	_	_	_	_	
156-31	28485-28486	>	_	_	_	_	
156-32	28486-28487	'	_	_	_	_	
156-33	28487-28495	keywords	_	_	_	_	
156-34	28495-28496	'	_	_	_	_	
156-35	28497-28498	@	_	_	_	_	
156-36	28498-28499	>	_	_	_	_	
156-37	28500-28501	'	_	_	_	_	
156-38	28501-28502	[	_	_	_	_	
156-39	28502-28503	"	_	_	_	_	
156-40	28503-28506	abc	_	_	_	_	
156-41	28506-28507	"	_	_	_	_	
156-42	28507-28508	]	_	_	_	_	
156-43	28508-28509	'	_	_	_	_	
156-44	28509-28510	:	_	_	_	_	
156-45	28510-28511	:	_	_	_	_	
156-46	28511-28516	jsonb	_	_	_	_	
156-47	28517-28519	OR	_	_	_	_	
156-48	28520-28524	data	_	_	_	_	
156-49	28524-28525	-	_	_	_	_	
156-50	28525-28526	>	_	_	_	_	
156-51	28526-28527	'	_	_	_	_	
156-52	28527-28535	keywords	_	_	_	_	
156-53	28535-28536	'	_	_	_	_	
156-54	28537-28538	@	_	_	_	_	
156-55	28538-28539	>	_	_	_	_	
156-56	28540-28541	'	_	_	_	_	
156-57	28541-28542	[	_	_	_	_	
156-58	28542-28543	"	_	_	_	_	
156-59	28543-28546	keh	_	_	_	_	
156-60	28546-28547	"	_	_	_	_	
156-61	28547-28548	]	_	_	_	_	
156-62	28548-28549	'	_	_	_	_	
156-63	28549-28550	:	_	_	_	_	
156-64	28550-28551	:	_	_	_	_	
156-65	28551-28556	jsonb	_	_	_	_	
156-66	28556-28557	)	_	_	_	_	
156-67	28557-28558	;	_	_	_	_	
156-68	28559-28563	More	_	_	_	_	
156-69	28564-28571	details	_	_	_	_	
156-70	28572-28574	on	_	_	_	_	
156-71	28575-28578	the	_	_	_	_	
156-72	28579-28587	behavior	_	_	_	_	
156-73	28588-28590	of	_	_	_	_	
156-74	28591-28594	the	_	_	_	_	
156-75	28595-28606	containment	_	_	_	_	
156-76	28607-28616	operators	_	_	_	_	
156-77	28617-28621	with	_	_	_	_	
156-78	28622-28628	arrays	_	_	_	_	
156-79	28629-28632	can	_	_	_	_	
156-80	28633-28635	be	_	_	_	_	
156-81	28636-28641	found	_	_	_	_	
156-82	28642-28644	in	_	_	_	_	
156-83	28645-28648	the	_	_	_	_	
156-84	28649-28662	documentation	_	_	_	_	
156-85	28662-28663	.	_	_	_	_	

#Text=SQL/JSON & JSONPath
#Text=SQL standard added support for JSON  in SQL - SQL/JSON Standard-2016.
157-1	28664-28667	SQL	_	_	_	_	
157-2	28667-28668	/	_	_	_	_	
157-3	28668-28672	JSON	_	_	_	_	
157-4	28673-28674	&	_	_	_	_	
157-5	28675-28683	JSONPath	_	_	_	_	
157-6	28684-28687	SQL	_	_	_	_	
157-7	28688-28696	standard	_	_	_	_	
157-8	28697-28702	added	_	_	_	_	
157-9	28703-28710	support	_	_	_	_	
157-10	28711-28714	for	_	_	_	_	
157-11	28715-28719	JSON	_	_	_	_	
157-12	28719-28720	 	_	_	_	_	
157-13	28721-28723	in	_	_	_	_	
157-14	28724-28727	SQL	_	_	_	_	
157-15	28728-28729	-	_	_	_	_	
157-16	28730-28733	SQL	_	_	_	_	
157-17	28733-28734	/	_	_	_	_	
157-18	28734-28738	JSON	_	_	_	_	
157-19	28739-28747	Standard	_	_	_	_	
157-20	28747-28748	-	_	_	_	_	
157-21	28748-28752	2016	_	_	_	_	
157-22	28752-28753	.	_	_	_	_	

#Text=With the PostgreSQL 12/13 releases, PostgreSQL has one of the best implementations of the SQL/JSON standard.
158-1	28754-28758	With	_	_	_	_	
158-2	28758-28759	 	_	_	_	_	
158-3	28759-28762	the	_	_	_	_	
158-4	28763-28773	PostgreSQL	_	_	_	_	
158-5	28773-28774	 	_	_	_	_	
158-6	28774-28776	12	_	_	_	_	
158-7	28776-28777	/	_	_	_	_	
158-8	28777-28779	13	_	_	_	_	
158-9	28780-28788	releases	_	_	_	_	
158-10	28788-28789	,	_	_	_	_	
158-11	28790-28800	PostgreSQL	_	_	_	_	
158-12	28801-28804	has	_	_	_	_	
158-13	28805-28808	one	_	_	_	_	
158-14	28809-28811	of	_	_	_	_	
158-15	28812-28815	the	_	_	_	_	
158-16	28816-28820	best	_	_	_	_	
158-17	28821-28836	implementations	_	_	_	_	
158-18	28837-28839	of	_	_	_	_	
158-19	28840-28843	the	_	_	_	_	
158-20	28844-28847	SQL	_	_	_	_	
158-21	28847-28848	/	_	_	_	_	
158-22	28848-28852	JSON	_	_	_	_	
158-23	28853-28861	standard	_	_	_	_	
158-24	28861-28862	.	_	_	_	_	

#Text=For more details refer to the PostgreSQL 12 announcement.
159-1	28863-28866	For	_	_	_	_	
159-2	28867-28871	more	_	_	_	_	
159-3	28872-28879	details	_	_	_	_	
159-4	28880-28885	refer	_	_	_	_	
159-5	28886-28888	to	_	_	_	_	
159-6	28889-28892	the	_	_	_	_	
159-7	28893-28903	PostgreSQL	_	_	_	_	
159-8	28904-28906	12	_	_	_	_	
159-9	28907-28919	announcement	_	_	_	_	
159-10	28919-28920	.	_	_	_	_	

#Text=One of the core features of SQL/JSON is support for the JSONPath language to query JSONB data.
160-1	28921-28924	One	_	_	_	_	
160-2	28925-28927	of	_	_	_	_	
160-3	28928-28931	the	_	_	_	_	
160-4	28932-28936	core	_	_	_	_	
160-5	28937-28945	features	_	_	_	_	
160-6	28946-28948	of	_	_	_	_	
160-7	28949-28952	SQL	_	_	_	_	
160-8	28952-28953	/	_	_	_	_	
160-9	28953-28957	JSON	_	_	_	_	
160-10	28958-28960	is	_	_	_	_	
160-11	28961-28968	support	_	_	_	_	
160-12	28969-28972	for	_	_	_	_	
160-13	28973-28976	the	_	_	_	_	
160-14	28977-28985	JSONPath	_	_	_	_	
160-15	28986-28994	language	_	_	_	_	
160-16	28995-28997	to	_	_	_	_	
160-17	28998-29003	query	_	_	_	_	
160-18	29004-29009	JSONB	_	_	_	_	
160-19	29010-29014	data	_	_	_	_	
160-20	29014-29015	.	_	_	_	_	

#Text=JSONPath allows you to specify an expression (using a syntax similar to the property access notation in Javascript) to query your JSONB data.
161-1	29016-29024	JSONPath	_	_	_	_	
161-2	29025-29031	allows	_	_	_	_	
161-3	29032-29035	you	_	_	_	_	
161-4	29036-29038	to	_	_	_	_	
161-5	29039-29046	specify	_	_	_	_	
161-6	29047-29049	an	_	_	_	_	
161-7	29050-29060	expression	_	_	_	_	
161-8	29061-29062	(	_	_	_	_	
161-9	29062-29067	using	_	_	_	_	
161-10	29068-29069	a	_	_	_	_	
161-11	29070-29076	syntax	_	_	_	_	
161-12	29077-29084	similar	_	_	_	_	
161-13	29085-29087	to	_	_	_	_	
161-14	29088-29091	the	_	_	_	_	
161-15	29092-29100	property	_	_	_	_	
161-16	29101-29107	access	_	_	_	_	
161-17	29108-29116	notation	_	_	_	_	
161-18	29117-29119	in	_	_	_	_	
161-19	29120-29130	Javascript	_	_	_	_	
161-20	29130-29131	)	_	_	_	_	
161-21	29132-29134	to	_	_	_	_	
161-22	29135-29140	query	_	_	_	_	
161-23	29141-29145	your	_	_	_	_	
161-24	29146-29151	JSONB	_	_	_	_	
161-25	29152-29156	data	_	_	_	_	
161-26	29156-29157	.	_	_	_	_	

#Text=This makes it simple and intuitive, but is also very powerful to query your JSONB data.
162-1	29158-29162	This	_	_	_	_	
162-2	29163-29168	makes	_	_	_	_	
162-3	29169-29171	it	_	_	_	_	
162-4	29172-29178	simple	_	_	_	_	
162-5	29178-29179	 	_	_	_	_	
162-6	29179-29182	and	_	_	_	_	
162-7	29183-29192	intuitive	_	_	_	_	
162-8	29192-29193	,	_	_	_	_	
162-9	29194-29197	but	_	_	_	_	
162-10	29198-29200	is	_	_	_	_	
162-11	29201-29205	also	_	_	_	_	
162-12	29206-29210	very	_	_	_	_	
162-13	29211-29219	powerful	_	_	_	_	
162-14	29220-29222	to	_	_	_	_	
162-15	29223-29228	query	_	_	_	_	
162-16	29229-29233	your	_	_	_	_	
162-17	29234-29239	JSONB	_	_	_	_	
162-18	29240-29244	data	_	_	_	_	
162-19	29244-29245	.	_	_	_	_	

#Text=Think of  JSONPath as the logical equivalent of XPath for XML.
#Text=.key
#Text=Returns an object member with the specified key.
#Text=[*]
#Text=Wildcard array element accessor that returns all array elements.
163-1	29246-29251	Think	_	_	_	_	
163-2	29252-29254	of	_	_	_	_	
163-3	29254-29255	 	_	_	_	_	
163-4	29256-29264	JSONPath	_	_	_	_	
163-5	29265-29267	as	_	_	_	_	
163-6	29268-29271	the	_	_	_	_	
163-7	29272-29279	logical	_	_	_	_	
163-8	29280-29290	equivalent	_	_	_	_	
163-9	29291-29293	of	_	_	_	_	
163-10	29294-29299	XPath	_	_	_	_	
163-11	29300-29303	for	_	_	_	_	
163-12	29304-29307	XML	_	_	_	_	
163-13	29307-29308	.	_	_	_	_	
163-14	29309-29310	.	_	_	_	_	
163-15	29310-29313	key	_	_	_	_	
163-16	29314-29321	Returns	_	_	_	_	
163-17	29322-29324	an	_	_	_	_	
163-18	29325-29331	object	_	_	_	_	
163-19	29332-29338	member	_	_	_	_	
163-20	29339-29343	with	_	_	_	_	
163-21	29344-29347	the	_	_	_	_	
163-22	29348-29357	specified	_	_	_	_	
163-23	29358-29361	key	_	_	_	_	
163-24	29361-29362	.	_	_	_	_	
163-25	29363-29364	[	_	_	_	_	
163-26	29364-29365	*	_	_	_	_	
163-27	29365-29366	]	_	_	_	_	
163-28	29367-29375	Wildcard	_	_	_	_	
163-29	29376-29381	array	_	_	_	_	
163-30	29382-29389	element	_	_	_	_	
163-31	29390-29398	accessor	_	_	_	_	
163-32	29399-29403	that	_	_	_	_	
163-33	29404-29411	returns	_	_	_	_	
163-34	29412-29415	all	_	_	_	_	
163-35	29416-29421	array	_	_	_	_	
163-36	29422-29430	elements	_	_	_	_	
163-37	29430-29431	.	_	_	_	_	

#Text=Wildcard member accessor that returns the values of all members located at the top level of the current object.
#Text=.**
#Text=Recursive wildcard member accessor that processes all levels of the JSON hierarchy of the current object and returns all the member values, regardless of their nesting level.
164-1	29432-29440	Wildcard	_	_	_	_	
164-2	29441-29447	member	_	_	_	_	
164-3	29448-29456	accessor	_	_	_	_	
164-4	29457-29461	that	_	_	_	_	
164-5	29462-29469	returns	_	_	_	_	
164-6	29470-29473	the	_	_	_	_	
164-7	29474-29480	values	_	_	_	_	
164-8	29481-29483	of	_	_	_	_	
164-9	29484-29487	all	_	_	_	_	
164-10	29488-29495	members	_	_	_	_	
164-11	29496-29503	located	_	_	_	_	
164-12	29504-29506	at	_	_	_	_	
164-13	29507-29510	the	_	_	_	_	
164-14	29511-29514	top	_	_	_	_	
164-15	29515-29520	level	_	_	_	_	
164-16	29521-29523	of	_	_	_	_	
164-17	29524-29527	the	_	_	_	_	
164-18	29528-29535	current	_	_	_	_	
164-19	29536-29542	object	_	_	_	_	
164-20	29542-29543	.	_	_	_	_	
164-21	29544-29545	.	_	_	_	_	
164-22	29545-29546	*	_	_	_	_	
164-23	29546-29547	*	_	_	_	_	
164-24	29548-29557	Recursive	_	_	_	_	
164-25	29558-29566	wildcard	_	_	_	_	
164-26	29567-29573	member	_	_	_	_	
164-27	29574-29582	accessor	_	_	_	_	
164-28	29583-29587	that	_	_	_	_	
164-29	29588-29597	processes	_	_	_	_	
164-30	29598-29601	all	_	_	_	_	
164-31	29602-29608	levels	_	_	_	_	
164-32	29609-29611	of	_	_	_	_	
164-33	29612-29615	the	_	_	_	_	
164-34	29616-29620	JSON	_	_	_	_	
164-35	29621-29630	hierarchy	_	_	_	_	
164-36	29631-29633	of	_	_	_	_	
164-37	29634-29637	the	_	_	_	_	
164-38	29638-29645	current	_	_	_	_	
164-39	29646-29652	object	_	_	_	_	
164-40	29653-29656	and	_	_	_	_	
164-41	29657-29664	returns	_	_	_	_	
164-42	29665-29668	all	_	_	_	_	
164-43	29669-29672	the	_	_	_	_	
164-44	29673-29679	member	_	_	_	_	
164-45	29680-29686	values	_	_	_	_	
164-46	29686-29687	,	_	_	_	_	
164-47	29688-29698	regardless	_	_	_	_	
164-48	29699-29701	of	_	_	_	_	
164-49	29702-29707	their	_	_	_	_	
164-50	29708-29715	nesting	_	_	_	_	
164-51	29716-29721	level	_	_	_	_	
164-52	29721-29722	.	_	_	_	_	

#Text=Refer to JSONPath documentation for the full list of operators.
165-1	29723-29728	Refer	_	_	_	_	
165-2	29729-29731	to	_	_	_	_	
165-3	29732-29740	JSONPath	_	_	_	_	
165-4	29741-29754	documentation	_	_	_	_	
165-5	29755-29758	for	_	_	_	_	
165-6	29759-29762	the	_	_	_	_	
165-7	29763-29767	full	_	_	_	_	
165-8	29768-29772	list	_	_	_	_	
165-9	29773-29775	of	_	_	_	_	
165-10	29776-29785	operators	_	_	_	_	
165-11	29785-29786	.	_	_	_	_	

#Text=JSONPath also supports a variety of filter expressions.
166-1	29787-29795	JSONPath	_	_	_	_	
166-2	29796-29800	also	_	_	_	_	
166-3	29801-29809	supports	_	_	_	_	
166-4	29810-29811	a	_	_	_	_	
166-5	29812-29819	variety	_	_	_	_	
166-6	29820-29822	of	_	_	_	_	
166-7	29823-29829	filter	_	_	_	_	
166-8	29830-29841	expressions	_	_	_	_	
166-9	29841-29842	.	_	_	_	_	

#Text=JSONPath Functions
#Text=PostgreSQL 12 provides several functions to use JSONPath to query your JSONB data.
167-1	29843-29851	JSONPath	_	_	_	_	
167-2	29852-29861	Functions	_	_	_	_	
167-3	29862-29872	PostgreSQL	_	_	_	_	
167-4	29873-29875	12	_	_	_	_	
167-5	29876-29884	provides	_	_	_	_	
167-6	29885-29892	several	_	_	_	_	
167-7	29893-29902	functions	_	_	_	_	
167-8	29903-29905	to	_	_	_	_	
167-9	29906-29909	use	_	_	_	_	
167-10	29910-29918	JSONPath	_	_	_	_	
167-11	29919-29921	to	_	_	_	_	
167-12	29922-29927	query	_	_	_	_	
167-13	29928-29932	your	_	_	_	_	
167-14	29933-29938	JSONB	_	_	_	_	
167-15	29939-29943	data	_	_	_	_	
167-16	29943-29944	.	_	_	_	_	

#Text=From the docs:
#Text=jsonb_path_exists - Checks whether JSONB path returns any item for the specified JSON value.
#Text=jsonb_path_match - Returns the result of JSONB path predicate check for the specified JSONB value.
168-1	29945-29949	From	_	_	_	_	
168-2	29950-29953	the	_	_	_	_	
168-3	29954-29958	docs	_	_	_	_	
168-4	29958-29959	:	_	_	_	_	
168-5	29960-29977	jsonb_path_exists	_	_	_	_	
168-6	29978-29979	-	_	_	_	_	
168-7	29980-29986	Checks	_	_	_	_	
168-8	29987-29994	whether	_	_	_	_	
168-9	29995-30000	JSONB	_	_	_	_	
168-10	30001-30005	path	_	_	_	_	
168-11	30006-30013	returns	_	_	_	_	
168-12	30014-30017	any	_	_	_	_	
168-13	30018-30022	item	_	_	_	_	
168-14	30023-30026	for	_	_	_	_	
168-15	30027-30030	the	_	_	_	_	
168-16	30031-30040	specified	_	_	_	_	
168-17	30041-30045	JSON	_	_	_	_	
168-18	30046-30051	value	_	_	_	_	
168-19	30051-30052	.	_	_	_	_	
168-20	30053-30069	jsonb_path_match	_	_	_	_	
168-21	30070-30071	-	_	_	_	_	
168-22	30072-30079	Returns	_	_	_	_	
168-23	30080-30083	the	_	_	_	_	
168-24	30084-30090	result	_	_	_	_	
168-25	30091-30093	of	_	_	_	_	
168-26	30094-30099	JSONB	_	_	_	_	
168-27	30100-30104	path	_	_	_	_	
168-28	30105-30114	predicate	_	_	_	_	
168-29	30115-30120	check	_	_	_	_	
168-30	30121-30124	for	_	_	_	_	
168-31	30125-30128	the	_	_	_	_	
168-32	30129-30138	specified	_	_	_	_	
168-33	30139-30144	JSONB	_	_	_	_	
168-34	30145-30150	value	_	_	_	_	
168-35	30150-30151	.	_	_	_	_	

#Text=Only the first item of the result is taken into account.
169-1	30152-30156	Only	_	_	_	_	
169-2	30157-30160	the	_	_	_	_	
169-3	30161-30166	first	_	_	_	_	
169-4	30167-30171	item	_	_	_	_	
169-5	30172-30174	of	_	_	_	_	
169-6	30175-30178	the	_	_	_	_	
169-7	30179-30185	result	_	_	_	_	
169-8	30186-30188	is	_	_	_	_	
169-9	30189-30194	taken	_	_	_	_	
169-10	30195-30199	into	_	_	_	_	
169-11	30200-30207	account	_	_	_	_	
169-12	30207-30208	.	_	_	_	_	

#Text=If the result is not Boolean, then null is returned.
#Text=jsonb_path_query - Gets all JSONB items returned by JSONB path for the specified JSONB value.
170-1	30209-30211	If	_	_	_	_	
170-2	30212-30215	the	_	_	_	_	
170-3	30216-30222	result	_	_	_	_	
170-4	30223-30225	is	_	_	_	_	
170-5	30226-30229	not	_	_	_	_	
170-6	30230-30237	Boolean	_	_	_	_	
170-7	30237-30238	,	_	_	_	_	
170-8	30239-30243	then	_	_	_	_	
170-9	30244-30248	null	_	_	_	_	
170-10	30249-30251	is	_	_	_	_	
170-11	30252-30260	returned	_	_	_	_	
170-12	30260-30261	.	_	_	_	_	
170-13	30262-30278	jsonb_path_query	_	_	_	_	
170-14	30279-30280	-	_	_	_	_	
170-15	30281-30285	Gets	_	_	_	_	
170-16	30286-30289	all	_	_	_	_	
170-17	30290-30295	JSONB	_	_	_	_	
170-18	30296-30301	items	_	_	_	_	
170-19	30302-30310	returned	_	_	_	_	
170-20	30311-30313	by	_	_	_	_	
170-21	30314-30319	JSONB	_	_	_	_	
170-22	30320-30324	path	_	_	_	_	
170-23	30325-30328	for	_	_	_	_	
170-24	30329-30332	the	_	_	_	_	
170-25	30333-30342	specified	_	_	_	_	
170-26	30343-30348	JSONB	_	_	_	_	
170-27	30349-30354	value	_	_	_	_	
170-28	30354-30355	.	_	_	_	_	

#Text=There are also a couple of other variants of this function that handle arrays of objects.
171-1	30356-30361	There	_	_	_	_	
171-2	30362-30365	are	_	_	_	_	
171-3	30366-30370	also	_	_	_	_	
171-4	30371-30372	a	_	_	_	_	
171-5	30373-30379	couple	_	_	_	_	
171-6	30380-30382	of	_	_	_	_	
171-7	30383-30388	other	_	_	_	_	
171-8	30389-30397	variants	_	_	_	_	
171-9	30398-30400	of	_	_	_	_	
171-10	30401-30405	this	_	_	_	_	
171-11	30406-30414	function	_	_	_	_	
171-12	30415-30419	that	_	_	_	_	
171-13	30420-30426	handle	_	_	_	_	
171-14	30427-30433	arrays	_	_	_	_	
171-15	30434-30436	of	_	_	_	_	
171-16	30437-30444	objects	_	_	_	_	
171-17	30444-30445	.	_	_	_	_	

#Text=Let's start with a simple query - finding books by publisher:
#Text=demo=# select * from books where data @@ '$.publisher == "ktjKEZ1tvq"';
#Text=id | author | isbn | rating | data
#Text=---------+-----------------+------------+--------+----------------------------------------------------------------------------------------------------------------------------------
#Text=1000001 | 4RNsovI2haTgU7l | GwSoX67gLS | 2 | {"tags": {"nk542369": {"ik55240": "iv305393"}}, "keywords": ["abc", "def", "geh"], "publisher": "ktjKEZ1tvq", "criticrating": 0}
#Text=(1 row)
#Text=demo=# explain analyze select * from books where data @@ '$.publisher == "ktjKEZ1tvq"';
#Text=QUERY PLAN
#Text=--------------------------------------------------------------------------------------------------------------------
#Text=Bitmap Heap Scan on books (cost=21.75..1014.25 rows=1000 width=158) (actual time=0.123..0.124 rows=1 loops=1)
#Text=Recheck Cond: (data @@ '($."
172-1	30446-30451	Let's	_	_	_	_	
172-2	30452-30457	start	_	_	_	_	
172-3	30458-30462	with	_	_	_	_	
172-4	30463-30464	a	_	_	_	_	
172-5	30465-30471	simple	_	_	_	_	
172-6	30472-30477	query	_	_	_	_	
172-7	30478-30479	-	_	_	_	_	
172-8	30480-30487	finding	_	_	_	_	
172-9	30488-30493	books	_	_	_	_	
172-10	30494-30496	by	_	_	_	_	
172-11	30497-30506	publisher	_	_	_	_	
172-12	30506-30507	:	_	_	_	_	
172-13	30508-30512	demo	_	_	_	_	
172-14	30512-30513	=	_	_	_	_	
172-15	30513-30514	#	_	_	_	_	
172-16	30515-30521	select	_	_	_	_	
172-17	30522-30523	*	_	_	_	_	
172-18	30524-30528	from	_	_	_	_	
172-19	30529-30534	books	_	_	_	_	
172-20	30535-30540	where	_	_	_	_	
172-21	30541-30545	data	_	_	_	_	
172-22	30546-30547	@	_	_	_	_	
172-23	30547-30548	@	_	_	_	_	
172-24	30549-30550	'	_	_	_	_	
172-25	30550-30551	$	_	_	_	_	
172-26	30551-30552	.	_	_	_	_	
172-27	30552-30561	publisher	_	_	_	_	
172-28	30562-30563	=	_	_	_	_	
172-29	30563-30564	=	_	_	_	_	
172-30	30565-30566	"	_	_	_	_	
172-31	30566-30576	ktjKEZ1tvq	_	_	_	_	
172-32	30576-30577	"	_	_	_	_	
172-33	30577-30578	'	_	_	_	_	
172-34	30578-30579	;	_	_	_	_	
172-35	30580-30582	id	_	_	_	_	
172-36	30583-30584	|	_	_	_	_	
172-37	30585-30591	author	_	_	_	_	
172-38	30592-30593	|	_	_	_	_	
172-39	30594-30598	isbn	_	_	_	_	
172-40	30599-30600	|	_	_	_	_	
172-41	30601-30607	rating	_	_	_	_	
172-42	30608-30609	|	_	_	_	_	
172-43	30610-30614	data	_	_	_	_	
172-44	30615-30616	-	_	_	_	_	
172-45	30616-30617	-	_	_	_	_	
172-46	30617-30618	-	_	_	_	_	
172-47	30618-30619	-	_	_	_	_	
172-48	30619-30620	-	_	_	_	_	
172-49	30620-30621	-	_	_	_	_	
172-50	30621-30622	-	_	_	_	_	
172-51	30622-30623	-	_	_	_	_	
172-52	30623-30624	-	_	_	_	_	
172-53	30624-30625	+	_	_	_	_	
172-54	30625-30626	-	_	_	_	_	
172-55	30626-30627	-	_	_	_	_	
172-56	30627-30628	-	_	_	_	_	
172-57	30628-30629	-	_	_	_	_	
172-58	30629-30630	-	_	_	_	_	
172-59	30630-30631	-	_	_	_	_	
172-60	30631-30632	-	_	_	_	_	
172-61	30632-30633	-	_	_	_	_	
172-62	30633-30634	-	_	_	_	_	
172-63	30634-30635	-	_	_	_	_	
172-64	30635-30636	-	_	_	_	_	
172-65	30636-30637	-	_	_	_	_	
172-66	30637-30638	-	_	_	_	_	
172-67	30638-30639	-	_	_	_	_	
172-68	30639-30640	-	_	_	_	_	
172-69	30640-30641	-	_	_	_	_	
172-70	30641-30642	-	_	_	_	_	
172-71	30642-30643	+	_	_	_	_	
172-72	30643-30644	-	_	_	_	_	
172-73	30644-30645	-	_	_	_	_	
172-74	30645-30646	-	_	_	_	_	
172-75	30646-30647	-	_	_	_	_	
172-76	30647-30648	-	_	_	_	_	
172-77	30648-30649	-	_	_	_	_	
172-78	30649-30650	-	_	_	_	_	
172-79	30650-30651	-	_	_	_	_	
172-80	30651-30652	-	_	_	_	_	
172-81	30652-30653	-	_	_	_	_	
172-82	30653-30654	-	_	_	_	_	
172-83	30654-30655	-	_	_	_	_	
172-84	30655-30656	+	_	_	_	_	
172-85	30656-30657	-	_	_	_	_	
172-86	30657-30658	-	_	_	_	_	
172-87	30658-30659	-	_	_	_	_	
172-88	30659-30660	-	_	_	_	_	
172-89	30660-30661	-	_	_	_	_	
172-90	30661-30662	-	_	_	_	_	
172-91	30662-30663	-	_	_	_	_	
172-92	30663-30664	-	_	_	_	_	
172-93	30664-30665	+	_	_	_	_	
172-94	30665-30666	-	_	_	_	_	
172-95	30666-30667	-	_	_	_	_	
172-96	30667-30668	-	_	_	_	_	
172-97	30668-30669	-	_	_	_	_	
172-98	30669-30670	-	_	_	_	_	
172-99	30670-30671	-	_	_	_	_	
172-100	30671-30672	-	_	_	_	_	
172-101	30672-30673	-	_	_	_	_	
172-102	30673-30674	-	_	_	_	_	
172-103	30674-30675	-	_	_	_	_	
172-104	30675-30676	-	_	_	_	_	
172-105	30676-30677	-	_	_	_	_	
172-106	30677-30678	-	_	_	_	_	
172-107	30678-30679	-	_	_	_	_	
172-108	30679-30680	-	_	_	_	_	
172-109	30680-30681	-	_	_	_	_	
172-110	30681-30682	-	_	_	_	_	
172-111	30682-30683	-	_	_	_	_	
172-112	30683-30684	-	_	_	_	_	
172-113	30684-30685	-	_	_	_	_	
172-114	30685-30686	-	_	_	_	_	
172-115	30686-30687	-	_	_	_	_	
172-116	30687-30688	-	_	_	_	_	
172-117	30688-30689	-	_	_	_	_	
172-118	30689-30690	-	_	_	_	_	
172-119	30690-30691	-	_	_	_	_	
172-120	30691-30692	-	_	_	_	_	
172-121	30692-30693	-	_	_	_	_	
172-122	30693-30694	-	_	_	_	_	
172-123	30694-30695	-	_	_	_	_	
172-124	30695-30696	-	_	_	_	_	
172-125	30696-30697	-	_	_	_	_	
172-126	30697-30698	-	_	_	_	_	
172-127	30698-30699	-	_	_	_	_	
172-128	30699-30700	-	_	_	_	_	
172-129	30700-30701	-	_	_	_	_	
172-130	30701-30702	-	_	_	_	_	
172-131	30702-30703	-	_	_	_	_	
172-132	30703-30704	-	_	_	_	_	
172-133	30704-30705	-	_	_	_	_	
172-134	30705-30706	-	_	_	_	_	
172-135	30706-30707	-	_	_	_	_	
172-136	30707-30708	-	_	_	_	_	
172-137	30708-30709	-	_	_	_	_	
172-138	30709-30710	-	_	_	_	_	
172-139	30710-30711	-	_	_	_	_	
172-140	30711-30712	-	_	_	_	_	
172-141	30712-30713	-	_	_	_	_	
172-142	30713-30714	-	_	_	_	_	
172-143	30714-30715	-	_	_	_	_	
172-144	30715-30716	-	_	_	_	_	
172-145	30716-30717	-	_	_	_	_	
172-146	30717-30718	-	_	_	_	_	
172-147	30718-30719	-	_	_	_	_	
172-148	30719-30720	-	_	_	_	_	
172-149	30720-30721	-	_	_	_	_	
172-150	30721-30722	-	_	_	_	_	
172-151	30722-30723	-	_	_	_	_	
172-152	30723-30724	-	_	_	_	_	
172-153	30724-30725	-	_	_	_	_	
172-154	30725-30726	-	_	_	_	_	
172-155	30726-30727	-	_	_	_	_	
172-156	30727-30728	-	_	_	_	_	
172-157	30728-30729	-	_	_	_	_	
172-158	30729-30730	-	_	_	_	_	
172-159	30730-30731	-	_	_	_	_	
172-160	30731-30732	-	_	_	_	_	
172-161	30732-30733	-	_	_	_	_	
172-162	30733-30734	-	_	_	_	_	
172-163	30734-30735	-	_	_	_	_	
172-164	30735-30736	-	_	_	_	_	
172-165	30736-30737	-	_	_	_	_	
172-166	30737-30738	-	_	_	_	_	
172-167	30738-30739	-	_	_	_	_	
172-168	30739-30740	-	_	_	_	_	
172-169	30740-30741	-	_	_	_	_	
172-170	30741-30742	-	_	_	_	_	
172-171	30742-30743	-	_	_	_	_	
172-172	30743-30744	-	_	_	_	_	
172-173	30744-30745	-	_	_	_	_	
172-174	30745-30746	-	_	_	_	_	
172-175	30746-30747	-	_	_	_	_	
172-176	30747-30748	-	_	_	_	_	
172-177	30748-30749	-	_	_	_	_	
172-178	30749-30750	-	_	_	_	_	
172-179	30750-30751	-	_	_	_	_	
172-180	30751-30752	-	_	_	_	_	
172-181	30752-30753	-	_	_	_	_	
172-182	30753-30754	-	_	_	_	_	
172-183	30754-30755	-	_	_	_	_	
172-184	30755-30756	-	_	_	_	_	
172-185	30756-30757	-	_	_	_	_	
172-186	30757-30758	-	_	_	_	_	
172-187	30758-30759	-	_	_	_	_	
172-188	30759-30760	-	_	_	_	_	
172-189	30760-30761	-	_	_	_	_	
172-190	30761-30762	-	_	_	_	_	
172-191	30762-30763	-	_	_	_	_	
172-192	30763-30764	-	_	_	_	_	
172-193	30764-30765	-	_	_	_	_	
172-194	30765-30766	-	_	_	_	_	
172-195	30766-30767	-	_	_	_	_	
172-196	30767-30768	-	_	_	_	_	
172-197	30768-30769	-	_	_	_	_	
172-198	30769-30770	-	_	_	_	_	
172-199	30770-30771	-	_	_	_	_	
172-200	30771-30772	-	_	_	_	_	
172-201	30772-30773	-	_	_	_	_	
172-202	30773-30774	-	_	_	_	_	
172-203	30774-30775	-	_	_	_	_	
172-204	30775-30776	-	_	_	_	_	
172-205	30776-30777	-	_	_	_	_	
172-206	30777-30778	-	_	_	_	_	
172-207	30778-30779	-	_	_	_	_	
172-208	30779-30780	-	_	_	_	_	
172-209	30780-30781	-	_	_	_	_	
172-210	30781-30782	-	_	_	_	_	
172-211	30782-30783	-	_	_	_	_	
172-212	30783-30784	-	_	_	_	_	
172-213	30784-30785	-	_	_	_	_	
172-214	30785-30786	-	_	_	_	_	
172-215	30786-30787	-	_	_	_	_	
172-216	30787-30788	-	_	_	_	_	
172-217	30788-30789	-	_	_	_	_	
172-218	30789-30790	-	_	_	_	_	
172-219	30790-30791	-	_	_	_	_	
172-220	30791-30792	-	_	_	_	_	
172-221	30792-30793	-	_	_	_	_	
172-222	30793-30794	-	_	_	_	_	
172-223	30794-30795	-	_	_	_	_	
172-224	30796-30803	1000001	_	_	_	_	
172-225	30804-30805	|	_	_	_	_	
172-226	30806-30821	4RNsovI2haTgU7l	_	_	_	_	
172-227	30822-30823	|	_	_	_	_	
172-228	30824-30834	GwSoX67gLS	_	_	_	_	
172-229	30835-30836	|	_	_	_	_	
172-230	30837-30838	2	_	_	_	_	
172-231	30839-30840	|	_	_	_	_	
172-232	30841-30842	{	_	_	_	_	
172-233	30842-30843	"	_	_	_	_	
172-234	30843-30847	tags	_	_	_	_	
172-235	30847-30848	"	_	_	_	_	
172-236	30848-30849	:	_	_	_	_	
172-237	30850-30851	{	_	_	_	_	
172-238	30851-30852	"	_	_	_	_	
172-239	30852-30860	nk542369	_	_	_	_	
172-240	30860-30861	"	_	_	_	_	
172-241	30861-30862	:	_	_	_	_	
172-242	30863-30864	{	_	_	_	_	
172-243	30864-30865	"	_	_	_	_	
172-244	30865-30872	ik55240	_	_	_	_	
172-245	30872-30873	"	_	_	_	_	
172-246	30873-30874	:	_	_	_	_	
172-247	30875-30876	"	_	_	_	_	
172-248	30876-30884	iv305393	_	_	_	_	
172-249	30884-30885	"	_	_	_	_	
172-250	30885-30886	}	_	_	_	_	
172-251	30886-30887	}	_	_	_	_	
172-252	30887-30888	,	_	_	_	_	
172-253	30889-30890	"	_	_	_	_	
172-254	30890-30898	keywords	_	_	_	_	
172-255	30898-30899	"	_	_	_	_	
172-256	30899-30900	:	_	_	_	_	
172-257	30901-30902	[	_	_	_	_	
172-258	30902-30903	"	_	_	_	_	
172-259	30903-30906	abc	_	_	_	_	
172-260	30906-30907	"	_	_	_	_	
172-261	30907-30908	,	_	_	_	_	
172-262	30909-30910	"	_	_	_	_	
172-263	30910-30913	def	_	_	_	_	
172-264	30913-30914	"	_	_	_	_	
172-265	30914-30915	,	_	_	_	_	
172-266	30916-30917	"	_	_	_	_	
172-267	30917-30920	geh	_	_	_	_	
172-268	30920-30921	"	_	_	_	_	
172-269	30921-30922	]	_	_	_	_	
172-270	30922-30923	,	_	_	_	_	
172-271	30924-30925	"	_	_	_	_	
172-272	30925-30934	publisher	_	_	_	_	
172-273	30934-30935	"	_	_	_	_	
172-274	30935-30936	:	_	_	_	_	
172-275	30937-30938	"	_	_	_	_	
172-276	30938-30948	ktjKEZ1tvq	_	_	_	_	
172-277	30948-30949	"	_	_	_	_	
172-278	30949-30950	,	_	_	_	_	
172-279	30951-30952	"	_	_	_	_	
172-280	30952-30964	criticrating	_	_	_	_	
172-281	30964-30965	"	_	_	_	_	
172-282	30965-30966	:	_	_	_	_	
172-283	30967-30968	0	_	_	_	_	
172-284	30968-30969	}	_	_	_	_	
172-285	30970-30971	(	_	_	_	_	
172-286	30971-30972	1	_	_	_	_	
172-287	30973-30976	row	_	_	_	_	
172-288	30976-30977	)	_	_	_	_	
172-289	30978-30982	demo	_	_	_	_	
172-290	30982-30983	=	_	_	_	_	
172-291	30983-30984	#	_	_	_	_	
172-292	30985-30992	explain	_	_	_	_	
172-293	30993-31000	analyze	_	_	_	_	
172-294	31001-31007	select	_	_	_	_	
172-295	31008-31009	*	_	_	_	_	
172-296	31010-31014	from	_	_	_	_	
172-297	31015-31020	books	_	_	_	_	
172-298	31021-31026	where	_	_	_	_	
172-299	31027-31031	data	_	_	_	_	
172-300	31032-31033	@	_	_	_	_	
172-301	31033-31034	@	_	_	_	_	
172-302	31035-31036	'	_	_	_	_	
172-303	31036-31037	$	_	_	_	_	
172-304	31037-31038	.	_	_	_	_	
172-305	31038-31047	publisher	_	_	_	_	
172-306	31048-31049	=	_	_	_	_	
172-307	31049-31050	=	_	_	_	_	
172-308	31051-31052	"	_	_	_	_	
172-309	31052-31062	ktjKEZ1tvq	_	_	_	_	
172-310	31062-31063	"	_	_	_	_	
172-311	31063-31064	'	_	_	_	_	
172-312	31064-31065	;	_	_	_	_	
172-313	31066-31071	QUERY	_	_	_	_	
172-314	31072-31076	PLAN	_	_	_	_	
172-315	31077-31078	-	_	_	_	_	
172-316	31078-31079	-	_	_	_	_	
172-317	31079-31080	-	_	_	_	_	
172-318	31080-31081	-	_	_	_	_	
172-319	31081-31082	-	_	_	_	_	
172-320	31082-31083	-	_	_	_	_	
172-321	31083-31084	-	_	_	_	_	
172-322	31084-31085	-	_	_	_	_	
172-323	31085-31086	-	_	_	_	_	
172-324	31086-31087	-	_	_	_	_	
172-325	31087-31088	-	_	_	_	_	
172-326	31088-31089	-	_	_	_	_	
172-327	31089-31090	-	_	_	_	_	
172-328	31090-31091	-	_	_	_	_	
172-329	31091-31092	-	_	_	_	_	
172-330	31092-31093	-	_	_	_	_	
172-331	31093-31094	-	_	_	_	_	
172-332	31094-31095	-	_	_	_	_	
172-333	31095-31096	-	_	_	_	_	
172-334	31096-31097	-	_	_	_	_	
172-335	31097-31098	-	_	_	_	_	
172-336	31098-31099	-	_	_	_	_	
172-337	31099-31100	-	_	_	_	_	
172-338	31100-31101	-	_	_	_	_	
172-339	31101-31102	-	_	_	_	_	
172-340	31102-31103	-	_	_	_	_	
172-341	31103-31104	-	_	_	_	_	
172-342	31104-31105	-	_	_	_	_	
172-343	31105-31106	-	_	_	_	_	
172-344	31106-31107	-	_	_	_	_	
172-345	31107-31108	-	_	_	_	_	
172-346	31108-31109	-	_	_	_	_	
172-347	31109-31110	-	_	_	_	_	
172-348	31110-31111	-	_	_	_	_	
172-349	31111-31112	-	_	_	_	_	
172-350	31112-31113	-	_	_	_	_	
172-351	31113-31114	-	_	_	_	_	
172-352	31114-31115	-	_	_	_	_	
172-353	31115-31116	-	_	_	_	_	
172-354	31116-31117	-	_	_	_	_	
172-355	31117-31118	-	_	_	_	_	
172-356	31118-31119	-	_	_	_	_	
172-357	31119-31120	-	_	_	_	_	
172-358	31120-31121	-	_	_	_	_	
172-359	31121-31122	-	_	_	_	_	
172-360	31122-31123	-	_	_	_	_	
172-361	31123-31124	-	_	_	_	_	
172-362	31124-31125	-	_	_	_	_	
172-363	31125-31126	-	_	_	_	_	
172-364	31126-31127	-	_	_	_	_	
172-365	31127-31128	-	_	_	_	_	
172-366	31128-31129	-	_	_	_	_	
172-367	31129-31130	-	_	_	_	_	
172-368	31130-31131	-	_	_	_	_	
172-369	31131-31132	-	_	_	_	_	
172-370	31132-31133	-	_	_	_	_	
172-371	31133-31134	-	_	_	_	_	
172-372	31134-31135	-	_	_	_	_	
172-373	31135-31136	-	_	_	_	_	
172-374	31136-31137	-	_	_	_	_	
172-375	31137-31138	-	_	_	_	_	
172-376	31138-31139	-	_	_	_	_	
172-377	31139-31140	-	_	_	_	_	
172-378	31140-31141	-	_	_	_	_	
172-379	31141-31142	-	_	_	_	_	
172-380	31142-31143	-	_	_	_	_	
172-381	31143-31144	-	_	_	_	_	
172-382	31144-31145	-	_	_	_	_	
172-383	31145-31146	-	_	_	_	_	
172-384	31146-31147	-	_	_	_	_	
172-385	31147-31148	-	_	_	_	_	
172-386	31148-31149	-	_	_	_	_	
172-387	31149-31150	-	_	_	_	_	
172-388	31150-31151	-	_	_	_	_	
172-389	31151-31152	-	_	_	_	_	
172-390	31152-31153	-	_	_	_	_	
172-391	31153-31154	-	_	_	_	_	
172-392	31154-31155	-	_	_	_	_	
172-393	31155-31156	-	_	_	_	_	
172-394	31156-31157	-	_	_	_	_	
172-395	31157-31158	-	_	_	_	_	
172-396	31158-31159	-	_	_	_	_	
172-397	31159-31160	-	_	_	_	_	
172-398	31160-31161	-	_	_	_	_	
172-399	31161-31162	-	_	_	_	_	
172-400	31162-31163	-	_	_	_	_	
172-401	31163-31164	-	_	_	_	_	
172-402	31164-31165	-	_	_	_	_	
172-403	31165-31166	-	_	_	_	_	
172-404	31166-31167	-	_	_	_	_	
172-405	31167-31168	-	_	_	_	_	
172-406	31168-31169	-	_	_	_	_	
172-407	31169-31170	-	_	_	_	_	
172-408	31170-31171	-	_	_	_	_	
172-409	31171-31172	-	_	_	_	_	
172-410	31172-31173	-	_	_	_	_	
172-411	31173-31174	-	_	_	_	_	
172-412	31174-31175	-	_	_	_	_	
172-413	31175-31176	-	_	_	_	_	
172-414	31176-31177	-	_	_	_	_	
172-415	31177-31178	-	_	_	_	_	
172-416	31178-31179	-	_	_	_	_	
172-417	31179-31180	-	_	_	_	_	
172-418	31180-31181	-	_	_	_	_	
172-419	31181-31182	-	_	_	_	_	
172-420	31182-31183	-	_	_	_	_	
172-421	31183-31184	-	_	_	_	_	
172-422	31184-31185	-	_	_	_	_	
172-423	31185-31186	-	_	_	_	_	
172-424	31186-31187	-	_	_	_	_	
172-425	31187-31188	-	_	_	_	_	
172-426	31188-31189	-	_	_	_	_	
172-427	31189-31190	-	_	_	_	_	
172-428	31190-31191	-	_	_	_	_	
172-429	31191-31192	-	_	_	_	_	
172-430	31192-31193	-	_	_	_	_	
172-431	31194-31200	Bitmap	_	_	_	_	
172-432	31201-31205	Heap	_	_	_	_	
172-433	31206-31210	Scan	_	_	_	_	
172-434	31211-31213	on	_	_	_	_	
172-435	31214-31219	books	_	_	_	_	
172-436	31220-31221	(	_	_	_	_	
172-437	31221-31225	cost	_	_	_	_	
172-438	31225-31226	=	_	_	_	_	
172-439	31226-31231	21.75	_	_	_	_	
172-440	31231-31232	.	_	_	_	_	
172-441	31232-31240	.1014.25	_	_	_	_	
172-442	31241-31245	rows	_	_	_	_	
172-443	31245-31246	=	_	_	_	_	
172-444	31246-31250	1000	_	_	_	_	
172-445	31251-31256	width	_	_	_	_	
172-446	31256-31257	=	_	_	_	_	
172-447	31257-31260	158	_	_	_	_	
172-448	31260-31261	)	_	_	_	_	
172-449	31262-31263	(	_	_	_	_	
172-450	31263-31269	actual	_	_	_	_	
172-451	31270-31274	time	_	_	_	_	
172-452	31274-31275	=	_	_	_	_	
172-453	31275-31280	0.123	_	_	_	_	
172-454	31280-31281	.	_	_	_	_	
172-455	31281-31287	.0.124	_	_	_	_	
172-456	31288-31292	rows	_	_	_	_	
172-457	31292-31293	=	_	_	_	_	
172-458	31293-31294	1	_	_	_	_	
172-459	31295-31300	loops	_	_	_	_	
172-460	31300-31301	=	_	_	_	_	
172-461	31301-31302	1	_	_	_	_	
172-462	31302-31303	)	_	_	_	_	
172-463	31304-31311	Recheck	_	_	_	_	
172-464	31312-31316	Cond	_	_	_	_	
172-465	31316-31317	:	_	_	_	_	
172-466	31318-31319	(	_	_	_	_	
172-467	31319-31323	data	_	_	_	_	
172-468	31324-31325	@	_	_	_	_	
172-469	31325-31326	@	_	_	_	_	
172-470	31327-31328	'	_	_	_	_	
172-471	31328-31329	(	_	_	_	_	
172-472	31329-31330	$	_	_	_	_	
172-473	31330-31331	.	_	_	_	_	
172-474	31331-31332	"	_	_	_	_	

#Text=publisher" == "ktjKEZ1tvq")'::jsonpath)
#Text=Heap Blocks: exact=1
#Text=-> Bitmap Index Scan on datagin (cost=0.00..21.50 rows=1000 width=0) (actual time=0.110..0.110 rows=1 loops=1)
#Text=Index Cond: (data @@ '($."
173-1	31332-31341	publisher	_	_	_	_	
173-2	31341-31342	"	_	_	_	_	
173-3	31343-31344	=	_	_	_	_	
173-4	31344-31345	=	_	_	_	_	
173-5	31346-31347	"	_	_	_	_	
173-6	31347-31357	ktjKEZ1tvq	_	_	_	_	
173-7	31357-31358	"	_	_	_	_	
173-8	31358-31359	)	_	_	_	_	
173-9	31359-31360	'	_	_	_	_	
173-10	31360-31361	:	_	_	_	_	
173-11	31361-31362	:	_	_	_	_	
173-12	31362-31370	jsonpath	_	_	_	_	
173-13	31370-31371	)	_	_	_	_	
173-14	31372-31376	Heap	_	_	_	_	
173-15	31377-31383	Blocks	_	_	_	_	
173-16	31383-31384	:	_	_	_	_	
173-17	31385-31390	exact	_	_	_	_	
173-18	31390-31391	=	_	_	_	_	
173-19	31391-31392	1	_	_	_	_	
173-20	31393-31394	-	_	_	_	_	
173-21	31394-31395	>	_	_	_	_	
173-22	31396-31402	Bitmap	_	_	_	_	
173-23	31403-31408	Index	_	_	_	_	
173-24	31409-31413	Scan	_	_	_	_	
173-25	31414-31416	on	_	_	_	_	
173-26	31417-31424	datagin	_	_	_	_	
173-27	31425-31426	(	_	_	_	_	
173-28	31426-31430	cost	_	_	_	_	
173-29	31430-31431	=	_	_	_	_	
173-30	31431-31435	0.00	_	_	_	_	
173-31	31435-31436	.	_	_	_	_	
173-32	31436-31442	.21.50	_	_	_	_	
173-33	31443-31447	rows	_	_	_	_	
173-34	31447-31448	=	_	_	_	_	
173-35	31448-31452	1000	_	_	_	_	
173-36	31453-31458	width	_	_	_	_	
173-37	31458-31459	=	_	_	_	_	
173-38	31459-31460	0	_	_	_	_	
173-39	31460-31461	)	_	_	_	_	
173-40	31462-31463	(	_	_	_	_	
173-41	31463-31469	actual	_	_	_	_	
173-42	31470-31474	time	_	_	_	_	
173-43	31474-31475	=	_	_	_	_	
173-44	31475-31480	0.110	_	_	_	_	
173-45	31480-31481	.	_	_	_	_	
173-46	31481-31487	.0.110	_	_	_	_	
173-47	31488-31492	rows	_	_	_	_	
173-48	31492-31493	=	_	_	_	_	
173-49	31493-31494	1	_	_	_	_	
173-50	31495-31500	loops	_	_	_	_	
173-51	31500-31501	=	_	_	_	_	
173-52	31501-31502	1	_	_	_	_	
173-53	31502-31503	)	_	_	_	_	
173-54	31504-31509	Index	_	_	_	_	
173-55	31510-31514	Cond	_	_	_	_	
173-56	31514-31515	:	_	_	_	_	
173-57	31516-31517	(	_	_	_	_	
173-58	31517-31521	data	_	_	_	_	
173-59	31522-31523	@	_	_	_	_	
173-60	31523-31524	@	_	_	_	_	
173-61	31525-31526	'	_	_	_	_	
173-62	31526-31527	(	_	_	_	_	
173-63	31527-31528	$	_	_	_	_	
173-64	31528-31529	.	_	_	_	_	
173-65	31529-31530	"	_	_	_	_	

#Text=publisher" == "ktjKEZ1tvq")'::jsonpath)
#Text=Planning Time: 0.137 ms
#Text=Execution Time: 0.194 ms
#Text=(7 rows)
#Text=You can rewrite this expression as a JSONPath filter:
#Text=demo=# select * from books where jsonb_path_exists(data,'$.publisher ?
174-1	31530-31539	publisher	_	_	_	_	
174-2	31539-31540	"	_	_	_	_	
174-3	31541-31542	=	_	_	_	_	
174-4	31542-31543	=	_	_	_	_	
174-5	31544-31545	"	_	_	_	_	
174-6	31545-31555	ktjKEZ1tvq	_	_	_	_	
174-7	31555-31556	"	_	_	_	_	
174-8	31556-31557	)	_	_	_	_	
174-9	31557-31558	'	_	_	_	_	
174-10	31558-31559	:	_	_	_	_	
174-11	31559-31560	:	_	_	_	_	
174-12	31560-31568	jsonpath	_	_	_	_	
174-13	31568-31569	)	_	_	_	_	
174-14	31570-31578	Planning	_	_	_	_	
174-15	31579-31583	Time	_	_	_	_	
174-16	31583-31584	:	_	_	_	_	
174-17	31585-31590	0.137	_	_	_	_	
174-18	31591-31593	ms	_	_	_	_	
174-19	31594-31603	Execution	_	_	_	_	
174-20	31604-31608	Time	_	_	_	_	
174-21	31608-31609	:	_	_	_	_	
174-22	31610-31615	0.194	_	_	_	_	
174-23	31616-31618	ms	_	_	_	_	
174-24	31619-31620	(	_	_	_	_	
174-25	31620-31621	7	_	_	_	_	
174-26	31622-31626	rows	_	_	_	_	
174-27	31626-31627	)	_	_	_	_	
174-28	31628-31631	You	_	_	_	_	
174-29	31632-31635	can	_	_	_	_	
174-30	31636-31643	rewrite	_	_	_	_	
174-31	31644-31648	this	_	_	_	_	
174-32	31649-31659	expression	_	_	_	_	
174-33	31660-31662	as	_	_	_	_	
174-34	31663-31664	a	_	_	_	_	
174-35	31665-31673	JSONPath	_	_	_	_	
174-36	31674-31680	filter	_	_	_	_	
174-37	31680-31681	:	_	_	_	_	
174-38	31682-31686	demo	_	_	_	_	
174-39	31686-31687	=	_	_	_	_	
174-40	31687-31688	#	_	_	_	_	
174-41	31689-31695	select	_	_	_	_	
174-42	31696-31697	*	_	_	_	_	
174-43	31698-31702	from	_	_	_	_	
174-44	31703-31708	books	_	_	_	_	
174-45	31709-31714	where	_	_	_	_	
174-46	31715-31732	jsonb_path_exists	_	_	_	_	
174-47	31732-31733	(	_	_	_	_	
174-48	31733-31737	data	_	_	_	_	
174-49	31737-31738	,	_	_	_	_	
174-50	31738-31739	'	_	_	_	_	
174-51	31739-31740	$	_	_	_	_	
174-52	31740-31741	.	_	_	_	_	
174-53	31741-31750	publisher	_	_	_	_	
174-54	31751-31752	?	_	_	_	_	

#Text=(@ == "ktjKEZ1tvq")');
#Text=You can also use very complex query expressions. 
175-1	31752-31753	(	_	_	_	_	
175-2	31753-31754	@	_	_	_	_	
175-3	31755-31756	=	_	_	_	_	
175-4	31756-31757	=	_	_	_	_	
175-5	31758-31759	"	_	_	_	_	
175-6	31759-31769	ktjKEZ1tvq	_	_	_	_	
175-7	31769-31770	"	_	_	_	_	
175-8	31770-31771	)	_	_	_	_	
175-9	31771-31772	'	_	_	_	_	
175-10	31772-31773	)	_	_	_	_	
175-11	31773-31774	;	_	_	_	_	
175-12	31775-31778	You	_	_	_	_	
175-13	31779-31782	can	_	_	_	_	
175-14	31783-31787	also	_	_	_	_	
175-15	31788-31791	use	_	_	_	_	
175-16	31792-31796	very	_	_	_	_	
175-17	31797-31804	complex	_	_	_	_	
175-18	31805-31810	query	_	_	_	_	
175-19	31811-31822	expressions	_	_	_	_	
175-20	31822-31823	.	_	_	_	_	
175-21	31823-31824	 	_	_	_	_	

#Text=For example, let's select books where print style = hardcover and price = 100:
#Text=select * from books where jsonb_path_exists(data, '$.prints[*] ?
176-1	31824-31827	For	_	_	_	_	
176-2	31828-31835	example	_	_	_	_	
176-3	31835-31836	,	_	_	_	_	
176-4	31837-31842	let's	_	_	_	_	
176-5	31842-31843	 	_	_	_	_	
176-6	31843-31849	select	_	_	_	_	
176-7	31850-31855	books	_	_	_	_	
176-8	31856-31861	where	_	_	_	_	
176-9	31862-31867	print	_	_	_	_	
176-10	31868-31873	style	_	_	_	_	
176-11	31874-31875	=	_	_	_	_	
176-12	31876-31885	hardcover	_	_	_	_	
176-13	31886-31889	and	_	_	_	_	
176-14	31890-31895	price	_	_	_	_	
176-15	31896-31897	=	_	_	_	_	
176-16	31898-31901	100	_	_	_	_	
176-17	31901-31902	:	_	_	_	_	
176-18	31903-31909	select	_	_	_	_	
176-19	31910-31911	*	_	_	_	_	
176-20	31912-31916	from	_	_	_	_	
176-21	31917-31922	books	_	_	_	_	
176-22	31923-31928	where	_	_	_	_	
176-23	31929-31946	jsonb_path_exists	_	_	_	_	
176-24	31946-31947	(	_	_	_	_	
176-25	31947-31951	data	_	_	_	_	
176-26	31951-31952	,	_	_	_	_	
176-27	31953-31954	'	_	_	_	_	
176-28	31954-31955	$	_	_	_	_	
176-29	31955-31956	.	_	_	_	_	
176-30	31956-31962	prints	_	_	_	_	
176-31	31962-31963	[	_	_	_	_	
176-32	31963-31964	*	_	_	_	_	
176-33	31964-31965	]	_	_	_	_	
176-34	31966-31967	?	_	_	_	_	

#Text=(@.style=="hc" &amp;amp;amp;amp;amp;&amp;amp;amp;amp;amp; @.price == 100)');
#Text=However, index support for JSONPath is very limited at this point - this makes it dangerous to use JSONPath in the where clause.
177-1	31967-31968	(	_	_	_	_	
177-2	31968-31969	@	_	_	_	_	
177-3	31969-31970	.	_	_	_	_	
177-4	31970-31975	style	_	_	_	_	
177-5	31975-31976	=	_	_	_	_	
177-6	31976-31977	=	_	_	_	_	
177-7	31977-31978	"	_	_	_	_	
177-8	31978-31980	hc	_	_	_	_	
177-9	31980-31981	"	_	_	_	_	
177-10	31982-31983	&	_	_	_	_	
177-11	31983-31986	amp	_	_	_	_	
177-12	31986-31987	;	_	_	_	_	
177-13	31987-31990	amp	_	_	_	_	
177-14	31990-31991	;	_	_	_	_	
177-15	31991-31994	amp	_	_	_	_	
177-16	31994-31995	;	_	_	_	_	
177-17	31995-31998	amp	_	_	_	_	
177-18	31998-31999	;	_	_	_	_	
177-19	31999-32002	amp	_	_	_	_	
177-20	32002-32003	;	_	_	_	_	
177-21	32003-32004	&	_	_	_	_	
177-22	32004-32007	amp	_	_	_	_	
177-23	32007-32008	;	_	_	_	_	
177-24	32008-32011	amp	_	_	_	_	
177-25	32011-32012	;	_	_	_	_	
177-26	32012-32015	amp	_	_	_	_	
177-27	32015-32016	;	_	_	_	_	
177-28	32016-32019	amp	_	_	_	_	
177-29	32019-32020	;	_	_	_	_	
177-30	32020-32023	amp	_	_	_	_	
177-31	32023-32024	;	_	_	_	_	
177-32	32025-32026	@	_	_	_	_	
177-33	32026-32027	.	_	_	_	_	
177-34	32027-32032	price	_	_	_	_	
177-35	32033-32034	=	_	_	_	_	
177-36	32034-32035	=	_	_	_	_	
177-37	32036-32039	100	_	_	_	_	
177-38	32039-32040	)	_	_	_	_	
177-39	32040-32041	'	_	_	_	_	
177-40	32041-32042	)	_	_	_	_	
177-41	32042-32043	;	_	_	_	_	
177-42	32044-32051	However	_	_	_	_	
177-43	32051-32052	,	_	_	_	_	
177-44	32053-32058	index	_	_	_	_	
177-45	32059-32066	support	_	_	_	_	
177-46	32067-32070	for	_	_	_	_	
177-47	32071-32079	JSONPath	_	_	_	_	
177-48	32080-32082	is	_	_	_	_	
177-49	32083-32087	very	_	_	_	_	
177-50	32088-32095	limited	_	_	_	_	
177-51	32096-32098	at	_	_	_	_	
177-52	32099-32103	this	_	_	_	_	
177-53	32104-32109	point	_	_	_	_	
177-54	32110-32111	-	_	_	_	_	
177-55	32112-32116	this	_	_	_	_	
177-56	32117-32122	makes	_	_	_	_	
177-57	32123-32125	it	_	_	_	_	
177-58	32125-32126	 	_	_	_	_	
177-59	32126-32135	dangerous	_	_	_	_	
177-60	32136-32138	to	_	_	_	_	
177-61	32139-32142	use	_	_	_	_	
177-62	32143-32151	JSONPath	_	_	_	_	
177-63	32152-32154	in	_	_	_	_	
177-64	32155-32158	the	_	_	_	_	
177-65	32159-32164	where	_	_	_	_	
177-66	32165-32171	clause	_	_	_	_	
177-67	32171-32172	.	_	_	_	_	

#Text=JSONPath support for indexes will be improved in subsequent releases.
#Text=demo=# explain analyze select * from books where jsonb_path_exists(data,'$.publisher ?
178-1	32173-32181	JSONPath	_	_	_	_	
178-2	32182-32189	support	_	_	_	_	
178-3	32190-32193	for	_	_	_	_	
178-4	32194-32201	indexes	_	_	_	_	
178-5	32202-32206	will	_	_	_	_	
178-6	32207-32209	be	_	_	_	_	
178-7	32210-32218	improved	_	_	_	_	
178-8	32219-32221	in	_	_	_	_	
178-9	32222-32232	subsequent	_	_	_	_	
178-10	32233-32241	releases	_	_	_	_	
178-11	32241-32242	.	_	_	_	_	
178-12	32243-32247	demo	_	_	_	_	
178-13	32247-32248	=	_	_	_	_	
178-14	32248-32249	#	_	_	_	_	
178-15	32250-32257	explain	_	_	_	_	
178-16	32258-32265	analyze	_	_	_	_	
178-17	32266-32272	select	_	_	_	_	
178-18	32273-32274	*	_	_	_	_	
178-19	32275-32279	from	_	_	_	_	
178-20	32280-32285	books	_	_	_	_	
178-21	32286-32291	where	_	_	_	_	
178-22	32292-32309	jsonb_path_exists	_	_	_	_	
178-23	32309-32310	(	_	_	_	_	
178-24	32310-32314	data	_	_	_	_	
178-25	32314-32315	,	_	_	_	_	
178-26	32315-32316	'	_	_	_	_	
178-27	32316-32317	$	_	_	_	_	
178-28	32317-32318	.	_	_	_	_	
178-29	32318-32327	publisher	_	_	_	_	
178-30	32328-32329	?	_	_	_	_	

#Text=(@ == "ktjKEZ1tvq")');
#Text=QUERY PLAN
#Text=------------------------------------------------------------------------------------------------------------
#Text=Seq Scan on books (cost=0.00..36307.24 rows=333340 width=158) (actual time=0.019..480.268 rows=1 loops=1)
#Text=Filter: jsonb_path_exists(data, '$."
179-1	32329-32330	(	_	_	_	_	
179-2	32330-32331	@	_	_	_	_	
179-3	32332-32333	=	_	_	_	_	
179-4	32333-32334	=	_	_	_	_	
179-5	32335-32336	"	_	_	_	_	
179-6	32336-32346	ktjKEZ1tvq	_	_	_	_	
179-7	32346-32347	"	_	_	_	_	
179-8	32347-32348	)	_	_	_	_	
179-9	32348-32349	'	_	_	_	_	
179-10	32349-32350	)	_	_	_	_	
179-11	32350-32351	;	_	_	_	_	
179-12	32352-32357	QUERY	_	_	_	_	
179-13	32358-32362	PLAN	_	_	_	_	
179-14	32363-32364	-	_	_	_	_	
179-15	32364-32365	-	_	_	_	_	
179-16	32365-32366	-	_	_	_	_	
179-17	32366-32367	-	_	_	_	_	
179-18	32367-32368	-	_	_	_	_	
179-19	32368-32369	-	_	_	_	_	
179-20	32369-32370	-	_	_	_	_	
179-21	32370-32371	-	_	_	_	_	
179-22	32371-32372	-	_	_	_	_	
179-23	32372-32373	-	_	_	_	_	
179-24	32373-32374	-	_	_	_	_	
179-25	32374-32375	-	_	_	_	_	
179-26	32375-32376	-	_	_	_	_	
179-27	32376-32377	-	_	_	_	_	
179-28	32377-32378	-	_	_	_	_	
179-29	32378-32379	-	_	_	_	_	
179-30	32379-32380	-	_	_	_	_	
179-31	32380-32381	-	_	_	_	_	
179-32	32381-32382	-	_	_	_	_	
179-33	32382-32383	-	_	_	_	_	
179-34	32383-32384	-	_	_	_	_	
179-35	32384-32385	-	_	_	_	_	
179-36	32385-32386	-	_	_	_	_	
179-37	32386-32387	-	_	_	_	_	
179-38	32387-32388	-	_	_	_	_	
179-39	32388-32389	-	_	_	_	_	
179-40	32389-32390	-	_	_	_	_	
179-41	32390-32391	-	_	_	_	_	
179-42	32391-32392	-	_	_	_	_	
179-43	32392-32393	-	_	_	_	_	
179-44	32393-32394	-	_	_	_	_	
179-45	32394-32395	-	_	_	_	_	
179-46	32395-32396	-	_	_	_	_	
179-47	32396-32397	-	_	_	_	_	
179-48	32397-32398	-	_	_	_	_	
179-49	32398-32399	-	_	_	_	_	
179-50	32399-32400	-	_	_	_	_	
179-51	32400-32401	-	_	_	_	_	
179-52	32401-32402	-	_	_	_	_	
179-53	32402-32403	-	_	_	_	_	
179-54	32403-32404	-	_	_	_	_	
179-55	32404-32405	-	_	_	_	_	
179-56	32405-32406	-	_	_	_	_	
179-57	32406-32407	-	_	_	_	_	
179-58	32407-32408	-	_	_	_	_	
179-59	32408-32409	-	_	_	_	_	
179-60	32409-32410	-	_	_	_	_	
179-61	32410-32411	-	_	_	_	_	
179-62	32411-32412	-	_	_	_	_	
179-63	32412-32413	-	_	_	_	_	
179-64	32413-32414	-	_	_	_	_	
179-65	32414-32415	-	_	_	_	_	
179-66	32415-32416	-	_	_	_	_	
179-67	32416-32417	-	_	_	_	_	
179-68	32417-32418	-	_	_	_	_	
179-69	32418-32419	-	_	_	_	_	
179-70	32419-32420	-	_	_	_	_	
179-71	32420-32421	-	_	_	_	_	
179-72	32421-32422	-	_	_	_	_	
179-73	32422-32423	-	_	_	_	_	
179-74	32423-32424	-	_	_	_	_	
179-75	32424-32425	-	_	_	_	_	
179-76	32425-32426	-	_	_	_	_	
179-77	32426-32427	-	_	_	_	_	
179-78	32427-32428	-	_	_	_	_	
179-79	32428-32429	-	_	_	_	_	
179-80	32429-32430	-	_	_	_	_	
179-81	32430-32431	-	_	_	_	_	
179-82	32431-32432	-	_	_	_	_	
179-83	32432-32433	-	_	_	_	_	
179-84	32433-32434	-	_	_	_	_	
179-85	32434-32435	-	_	_	_	_	
179-86	32435-32436	-	_	_	_	_	
179-87	32436-32437	-	_	_	_	_	
179-88	32437-32438	-	_	_	_	_	
179-89	32438-32439	-	_	_	_	_	
179-90	32439-32440	-	_	_	_	_	
179-91	32440-32441	-	_	_	_	_	
179-92	32441-32442	-	_	_	_	_	
179-93	32442-32443	-	_	_	_	_	
179-94	32443-32444	-	_	_	_	_	
179-95	32444-32445	-	_	_	_	_	
179-96	32445-32446	-	_	_	_	_	
179-97	32446-32447	-	_	_	_	_	
179-98	32447-32448	-	_	_	_	_	
179-99	32448-32449	-	_	_	_	_	
179-100	32449-32450	-	_	_	_	_	
179-101	32450-32451	-	_	_	_	_	
179-102	32451-32452	-	_	_	_	_	
179-103	32452-32453	-	_	_	_	_	
179-104	32453-32454	-	_	_	_	_	
179-105	32454-32455	-	_	_	_	_	
179-106	32455-32456	-	_	_	_	_	
179-107	32456-32457	-	_	_	_	_	
179-108	32457-32458	-	_	_	_	_	
179-109	32458-32459	-	_	_	_	_	
179-110	32459-32460	-	_	_	_	_	
179-111	32460-32461	-	_	_	_	_	
179-112	32461-32462	-	_	_	_	_	
179-113	32462-32463	-	_	_	_	_	
179-114	32463-32464	-	_	_	_	_	
179-115	32464-32465	-	_	_	_	_	
179-116	32465-32466	-	_	_	_	_	
179-117	32466-32467	-	_	_	_	_	
179-118	32467-32468	-	_	_	_	_	
179-119	32468-32469	-	_	_	_	_	
179-120	32469-32470	-	_	_	_	_	
179-121	32470-32471	-	_	_	_	_	
179-122	32472-32475	Seq	_	_	_	_	
179-123	32476-32480	Scan	_	_	_	_	
179-124	32481-32483	on	_	_	_	_	
179-125	32484-32489	books	_	_	_	_	
179-126	32490-32491	(	_	_	_	_	
179-127	32491-32495	cost	_	_	_	_	
179-128	32495-32496	=	_	_	_	_	
179-129	32496-32500	0.00	_	_	_	_	
179-130	32500-32501	.	_	_	_	_	
179-131	32501-32510	.36307.24	_	_	_	_	
179-132	32511-32515	rows	_	_	_	_	
179-133	32515-32516	=	_	_	_	_	
179-134	32516-32522	333340	_	_	_	_	
179-135	32523-32528	width	_	_	_	_	
179-136	32528-32529	=	_	_	_	_	
179-137	32529-32532	158	_	_	_	_	
179-138	32532-32533	)	_	_	_	_	
179-139	32534-32535	(	_	_	_	_	
179-140	32535-32541	actual	_	_	_	_	
179-141	32542-32546	time	_	_	_	_	
179-142	32546-32547	=	_	_	_	_	
179-143	32547-32552	0.019	_	_	_	_	
179-144	32552-32553	.	_	_	_	_	
179-145	32553-32561	.480.268	_	_	_	_	
179-146	32562-32566	rows	_	_	_	_	
179-147	32566-32567	=	_	_	_	_	
179-148	32567-32568	1	_	_	_	_	
179-149	32569-32574	loops	_	_	_	_	
179-150	32574-32575	=	_	_	_	_	
179-151	32575-32576	1	_	_	_	_	
179-152	32576-32577	)	_	_	_	_	
179-153	32578-32584	Filter	_	_	_	_	
179-154	32584-32585	:	_	_	_	_	
179-155	32586-32603	jsonb_path_exists	_	_	_	_	
179-156	32603-32604	(	_	_	_	_	
179-157	32604-32608	data	_	_	_	_	
179-158	32608-32609	,	_	_	_	_	
179-159	32610-32611	'	_	_	_	_	
179-160	32611-32612	$	_	_	_	_	
179-161	32612-32613	.	_	_	_	_	
179-162	32613-32614	"	_	_	_	_	

#Text=publisher"?
180-1	32614-32623	publisher	_	_	_	_	
180-2	32623-32624	"	_	_	_	_	
180-3	32624-32625	?	_	_	_	_	

#Text=(@ == "ktjKEZ1tvq")'::jsonpath, '{}'::jsonb, false)
#Text=Rows Removed by Filter: 1000028
#Text=Planning Time: 0.095 ms
#Text=Execution Time: 480.348 ms
#Text=(5 rows)
#Text=Projecting Partial JSON
#Text=Another great use case for JSONPath is projecting partial JSONB from the row that matches.
181-1	32625-32626	(	_	_	_	_	
181-2	32626-32627	@	_	_	_	_	
181-3	32628-32629	=	_	_	_	_	
181-4	32629-32630	=	_	_	_	_	
181-5	32631-32632	"	_	_	_	_	
181-6	32632-32642	ktjKEZ1tvq	_	_	_	_	
181-7	32642-32643	"	_	_	_	_	
181-8	32643-32644	)	_	_	_	_	
181-9	32644-32645	'	_	_	_	_	
181-10	32645-32646	:	_	_	_	_	
181-11	32646-32647	:	_	_	_	_	
181-12	32647-32655	jsonpath	_	_	_	_	
181-13	32655-32656	,	_	_	_	_	
181-14	32657-32658	'	_	_	_	_	
181-15	32658-32659	{	_	_	_	_	
181-16	32659-32660	}	_	_	_	_	
181-17	32660-32661	'	_	_	_	_	
181-18	32661-32662	:	_	_	_	_	
181-19	32662-32663	:	_	_	_	_	
181-20	32663-32668	jsonb	_	_	_	_	
181-21	32668-32669	,	_	_	_	_	
181-22	32670-32675	false	_	_	_	_	
181-23	32675-32676	)	_	_	_	_	
181-24	32677-32681	Rows	_	_	_	_	
181-25	32682-32689	Removed	_	_	_	_	
181-26	32690-32692	by	_	_	_	_	
181-27	32693-32699	Filter	_	_	_	_	
181-28	32699-32700	:	_	_	_	_	
181-29	32701-32708	1000028	_	_	_	_	
181-30	32709-32717	Planning	_	_	_	_	
181-31	32718-32722	Time	_	_	_	_	
181-32	32722-32723	:	_	_	_	_	
181-33	32724-32729	0.095	_	_	_	_	
181-34	32730-32732	ms	_	_	_	_	
181-35	32733-32742	Execution	_	_	_	_	
181-36	32743-32747	Time	_	_	_	_	
181-37	32747-32748	:	_	_	_	_	
181-38	32749-32756	480.348	_	_	_	_	
181-39	32757-32759	ms	_	_	_	_	
181-40	32760-32761	(	_	_	_	_	
181-41	32761-32762	5	_	_	_	_	
181-42	32763-32767	rows	_	_	_	_	
181-43	32767-32768	)	_	_	_	_	
181-44	32769-32779	Projecting	_	_	_	_	
181-45	32780-32787	Partial	_	_	_	_	
181-46	32788-32792	JSON	_	_	_	_	
181-47	32793-32800	Another	_	_	_	_	
181-48	32801-32806	great	_	_	_	_	
181-49	32807-32810	use	_	_	_	_	
181-50	32811-32815	case	_	_	_	_	
181-51	32816-32819	for	_	_	_	_	
181-52	32820-32828	JSONPath	_	_	_	_	
181-53	32829-32831	is	_	_	_	_	
181-54	32832-32842	projecting	_	_	_	_	
181-55	32843-32850	partial	_	_	_	_	
181-56	32850-32851	 	_	_	_	_	
181-57	32851-32856	JSONB	_	_	_	_	
181-58	32857-32861	from	_	_	_	_	
181-59	32862-32865	the	_	_	_	_	
181-60	32866-32869	row	_	_	_	_	
181-61	32870-32874	that	_	_	_	_	
181-62	32875-32882	matches	_	_	_	_	
181-63	32882-32883	.	_	_	_	_	

#Text=Consider the following sample JSONB:
#Text=demo=# select jsonb_pretty(data) from books where id = 1000029;
#Text=jsonb_pretty
#Text=-----------------------------------
#Text="tags": {
#Text="nk678947": {
#Text="ik159670": "iv32358
#Text="prints": [
#Text="price": 100,
#Text="style": "hc"
#Text="price": 50,
#Text="style": "pb"
#Text="braille": false,
#Text="keywords": [
#Text="abc",
#Text="kef",
#Text="keh"
#Text="hardcover": true,
#Text="publisher": "ppc3YXL8kK",
#Text="criticrating": 3
#Text=Select only the publisher field:
#Text=demo=# select jsonb_path_query(data, '$.publisher') from books where id = 1000029;
#Text=jsonb_path_query
#Text=------------------
#Text="ppc3YXL8kK"
#Text=(1 row)
#Text=Select the prints field (which is an array of objects):
#Text=demo=# select jsonb_path_query(data, '$.prints') from books where id = 1000029;
#Text=jsonb_path_query
#Text=---------------------------------------------------------------
#Text=[{"price": 100, "style": "hc"}, {"price": 50, "style": "pb"}]
#Text=(1 row)
#Text=Select the first element in the array prints:
#Text=demo=# select jsonb_path_query(data, '$.prints[0]') from books where id = 1000029;
#Text=jsonb_path_query
#Text=-------------------------------
#Text={"price": 100, "style": "hc"}
#Text=(1 row)
#Text=Select the last element in the array prints:
#Text=demo=# select jsonb_path_query(data, '$.prints[$.size()]') from books where id = 1000029;
#Text=jsonb_path_query
#Text=------------------------------
#Text={"price": 50, "style": "pb"}
#Text=(1 row)
#Text=Select only the hardcover prints from the array:
#Text=demo=# select jsonb_path_query(data, '$.prints[*] ?
182-1	32884-32892	Consider	_	_	_	_	
182-2	32893-32896	the	_	_	_	_	
182-3	32897-32906	following	_	_	_	_	
182-4	32907-32913	sample	_	_	_	_	
182-5	32913-32914	 	_	_	_	_	
182-6	32914-32919	JSONB	_	_	_	_	
182-7	32919-32920	:	_	_	_	_	
182-8	32921-32925	demo	_	_	_	_	
182-9	32925-32926	=	_	_	_	_	
182-10	32926-32927	#	_	_	_	_	
182-11	32928-32934	select	_	_	_	_	
182-12	32935-32947	jsonb_pretty	_	_	_	_	
182-13	32947-32948	(	_	_	_	_	
182-14	32948-32952	data	_	_	_	_	
182-15	32952-32953	)	_	_	_	_	
182-16	32954-32958	from	_	_	_	_	
182-17	32959-32964	books	_	_	_	_	
182-18	32965-32970	where	_	_	_	_	
182-19	32971-32973	id	_	_	_	_	
182-20	32974-32975	=	_	_	_	_	
182-21	32976-32983	1000029	_	_	_	_	
182-22	32983-32984	;	_	_	_	_	
182-23	32985-32997	jsonb_pretty	_	_	_	_	
182-24	32998-32999	-	_	_	_	_	
182-25	32999-33000	-	_	_	_	_	
182-26	33000-33001	-	_	_	_	_	
182-27	33001-33002	-	_	_	_	_	
182-28	33002-33003	-	_	_	_	_	
182-29	33003-33004	-	_	_	_	_	
182-30	33004-33005	-	_	_	_	_	
182-31	33005-33006	-	_	_	_	_	
182-32	33006-33007	-	_	_	_	_	
182-33	33007-33008	-	_	_	_	_	
182-34	33008-33009	-	_	_	_	_	
182-35	33009-33010	-	_	_	_	_	
182-36	33010-33011	-	_	_	_	_	
182-37	33011-33012	-	_	_	_	_	
182-38	33012-33013	-	_	_	_	_	
182-39	33013-33014	-	_	_	_	_	
182-40	33014-33015	-	_	_	_	_	
182-41	33015-33016	-	_	_	_	_	
182-42	33016-33017	-	_	_	_	_	
182-43	33017-33018	-	_	_	_	_	
182-44	33018-33019	-	_	_	_	_	
182-45	33019-33020	-	_	_	_	_	
182-46	33020-33021	-	_	_	_	_	
182-47	33021-33022	-	_	_	_	_	
182-48	33022-33023	-	_	_	_	_	
182-49	33023-33024	-	_	_	_	_	
182-50	33024-33025	-	_	_	_	_	
182-51	33025-33026	-	_	_	_	_	
182-52	33026-33027	-	_	_	_	_	
182-53	33027-33028	-	_	_	_	_	
182-54	33028-33029	-	_	_	_	_	
182-55	33029-33030	-	_	_	_	_	
182-56	33030-33031	-	_	_	_	_	
182-57	33031-33032	-	_	_	_	_	
182-58	33032-33033	-	_	_	_	_	
182-59	33034-33035	"	_	_	_	_	
182-60	33035-33039	tags	_	_	_	_	
182-61	33039-33040	"	_	_	_	_	
182-62	33040-33041	:	_	_	_	_	
182-63	33042-33043	{	_	_	_	_	
182-64	33044-33045	"	_	_	_	_	
182-65	33045-33053	nk678947	_	_	_	_	
182-66	33053-33054	"	_	_	_	_	
182-67	33054-33055	:	_	_	_	_	
182-68	33056-33057	{	_	_	_	_	
182-69	33058-33059	"	_	_	_	_	
182-70	33059-33067	ik159670	_	_	_	_	
182-71	33067-33068	"	_	_	_	_	
182-72	33068-33069	:	_	_	_	_	
182-73	33070-33071	"	_	_	_	_	
182-74	33071-33078	iv32358	_	_	_	_	
182-75	33079-33080	"	_	_	_	_	
182-76	33080-33086	prints	_	_	_	_	
182-77	33086-33087	"	_	_	_	_	
182-78	33087-33088	:	_	_	_	_	
182-79	33089-33090	[	_	_	_	_	
182-80	33091-33092	"	_	_	_	_	
182-81	33092-33097	price	_	_	_	_	
182-82	33097-33098	"	_	_	_	_	
182-83	33098-33099	:	_	_	_	_	
182-84	33100-33103	100	_	_	_	_	
182-85	33103-33104	,	_	_	_	_	
182-86	33105-33106	"	_	_	_	_	
182-87	33106-33111	style	_	_	_	_	
182-88	33111-33112	"	_	_	_	_	
182-89	33112-33113	:	_	_	_	_	
182-90	33114-33115	"	_	_	_	_	
182-91	33115-33117	hc	_	_	_	_	
182-92	33117-33118	"	_	_	_	_	
182-93	33119-33120	"	_	_	_	_	
182-94	33120-33125	price	_	_	_	_	
182-95	33125-33126	"	_	_	_	_	
182-96	33126-33127	:	_	_	_	_	
182-97	33128-33130	50	_	_	_	_	
182-98	33130-33131	,	_	_	_	_	
182-99	33132-33133	"	_	_	_	_	
182-100	33133-33138	style	_	_	_	_	
182-101	33138-33139	"	_	_	_	_	
182-102	33139-33140	:	_	_	_	_	
182-103	33141-33142	"	_	_	_	_	
182-104	33142-33144	pb	_	_	_	_	
182-105	33144-33145	"	_	_	_	_	
182-106	33146-33147	"	_	_	_	_	
182-107	33147-33154	braille	_	_	_	_	
182-108	33154-33155	"	_	_	_	_	
182-109	33155-33156	:	_	_	_	_	
182-110	33157-33162	false	_	_	_	_	
182-111	33162-33163	,	_	_	_	_	
182-112	33164-33165	"	_	_	_	_	
182-113	33165-33173	keywords	_	_	_	_	
182-114	33173-33174	"	_	_	_	_	
182-115	33174-33175	:	_	_	_	_	
182-116	33176-33177	[	_	_	_	_	
182-117	33178-33179	"	_	_	_	_	
182-118	33179-33182	abc	_	_	_	_	
182-119	33182-33183	"	_	_	_	_	
182-120	33183-33184	,	_	_	_	_	
182-121	33185-33186	"	_	_	_	_	
182-122	33186-33189	kef	_	_	_	_	
182-123	33189-33190	"	_	_	_	_	
182-124	33190-33191	,	_	_	_	_	
182-125	33192-33193	"	_	_	_	_	
182-126	33193-33196	keh	_	_	_	_	
182-127	33196-33197	"	_	_	_	_	
182-128	33198-33199	"	_	_	_	_	
182-129	33199-33208	hardcover	_	_	_	_	
182-130	33208-33209	"	_	_	_	_	
182-131	33209-33210	:	_	_	_	_	
182-132	33211-33215	true	_	_	_	_	
182-133	33215-33216	,	_	_	_	_	
182-134	33217-33218	"	_	_	_	_	
182-135	33218-33227	publisher	_	_	_	_	
182-136	33227-33228	"	_	_	_	_	
182-137	33228-33229	:	_	_	_	_	
182-138	33230-33231	"	_	_	_	_	
182-139	33231-33241	ppc3YXL8kK	_	_	_	_	
182-140	33241-33242	"	_	_	_	_	
182-141	33242-33243	,	_	_	_	_	
182-142	33244-33245	"	_	_	_	_	
182-143	33245-33257	criticrating	_	_	_	_	
182-144	33257-33258	"	_	_	_	_	
182-145	33258-33259	:	_	_	_	_	
182-146	33260-33261	3	_	_	_	_	
182-147	33262-33268	Select	_	_	_	_	
182-148	33269-33273	only	_	_	_	_	
182-149	33274-33277	the	_	_	_	_	
182-150	33278-33287	publisher	_	_	_	_	
182-151	33288-33293	field	_	_	_	_	
182-152	33293-33294	:	_	_	_	_	
182-153	33295-33299	demo	_	_	_	_	
182-154	33299-33300	=	_	_	_	_	
182-155	33300-33301	#	_	_	_	_	
182-156	33302-33308	select	_	_	_	_	
182-157	33309-33325	jsonb_path_query	_	_	_	_	
182-158	33325-33326	(	_	_	_	_	
182-159	33326-33330	data	_	_	_	_	
182-160	33330-33331	,	_	_	_	_	
182-161	33332-33333	'	_	_	_	_	
182-162	33333-33334	$	_	_	_	_	
182-163	33334-33335	.	_	_	_	_	
182-164	33335-33344	publisher	_	_	_	_	
182-165	33344-33345	'	_	_	_	_	
182-166	33345-33346	)	_	_	_	_	
182-167	33347-33351	from	_	_	_	_	
182-168	33352-33357	books	_	_	_	_	
182-169	33358-33363	where	_	_	_	_	
182-170	33364-33366	id	_	_	_	_	
182-171	33367-33368	=	_	_	_	_	
182-172	33369-33376	1000029	_	_	_	_	
182-173	33376-33377	;	_	_	_	_	
182-174	33378-33394	jsonb_path_query	_	_	_	_	
182-175	33395-33396	-	_	_	_	_	
182-176	33396-33397	-	_	_	_	_	
182-177	33397-33398	-	_	_	_	_	
182-178	33398-33399	-	_	_	_	_	
182-179	33399-33400	-	_	_	_	_	
182-180	33400-33401	-	_	_	_	_	
182-181	33401-33402	-	_	_	_	_	
182-182	33402-33403	-	_	_	_	_	
182-183	33403-33404	-	_	_	_	_	
182-184	33404-33405	-	_	_	_	_	
182-185	33405-33406	-	_	_	_	_	
182-186	33406-33407	-	_	_	_	_	
182-187	33407-33408	-	_	_	_	_	
182-188	33408-33409	-	_	_	_	_	
182-189	33409-33410	-	_	_	_	_	
182-190	33410-33411	-	_	_	_	_	
182-191	33411-33412	-	_	_	_	_	
182-192	33412-33413	-	_	_	_	_	
182-193	33414-33415	"	_	_	_	_	
182-194	33415-33425	ppc3YXL8kK	_	_	_	_	
182-195	33425-33426	"	_	_	_	_	
182-196	33427-33428	(	_	_	_	_	
182-197	33428-33429	1	_	_	_	_	
182-198	33430-33433	row	_	_	_	_	
182-199	33433-33434	)	_	_	_	_	
182-200	33435-33441	Select	_	_	_	_	
182-201	33442-33445	the	_	_	_	_	
182-202	33446-33452	prints	_	_	_	_	
182-203	33453-33458	field	_	_	_	_	
182-204	33459-33460	(	_	_	_	_	
182-205	33460-33465	which	_	_	_	_	
182-206	33466-33468	is	_	_	_	_	
182-207	33469-33471	an	_	_	_	_	
182-208	33472-33477	array	_	_	_	_	
182-209	33478-33480	of	_	_	_	_	
182-210	33481-33488	objects	_	_	_	_	
182-211	33488-33489	)	_	_	_	_	
182-212	33489-33490	:	_	_	_	_	
182-213	33491-33495	demo	_	_	_	_	
182-214	33495-33496	=	_	_	_	_	
182-215	33496-33497	#	_	_	_	_	
182-216	33498-33504	select	_	_	_	_	
182-217	33505-33521	jsonb_path_query	_	_	_	_	
182-218	33521-33522	(	_	_	_	_	
182-219	33522-33526	data	_	_	_	_	
182-220	33526-33527	,	_	_	_	_	
182-221	33528-33529	'	_	_	_	_	
182-222	33529-33530	$	_	_	_	_	
182-223	33530-33531	.	_	_	_	_	
182-224	33531-33537	prints	_	_	_	_	
182-225	33537-33538	'	_	_	_	_	
182-226	33538-33539	)	_	_	_	_	
182-227	33540-33544	from	_	_	_	_	
182-228	33545-33550	books	_	_	_	_	
182-229	33551-33556	where	_	_	_	_	
182-230	33557-33559	id	_	_	_	_	
182-231	33560-33561	=	_	_	_	_	
182-232	33562-33569	1000029	_	_	_	_	
182-233	33569-33570	;	_	_	_	_	
182-234	33571-33587	jsonb_path_query	_	_	_	_	
182-235	33588-33589	-	_	_	_	_	
182-236	33589-33590	-	_	_	_	_	
182-237	33590-33591	-	_	_	_	_	
182-238	33591-33592	-	_	_	_	_	
182-239	33592-33593	-	_	_	_	_	
182-240	33593-33594	-	_	_	_	_	
182-241	33594-33595	-	_	_	_	_	
182-242	33595-33596	-	_	_	_	_	
182-243	33596-33597	-	_	_	_	_	
182-244	33597-33598	-	_	_	_	_	
182-245	33598-33599	-	_	_	_	_	
182-246	33599-33600	-	_	_	_	_	
182-247	33600-33601	-	_	_	_	_	
182-248	33601-33602	-	_	_	_	_	
182-249	33602-33603	-	_	_	_	_	
182-250	33603-33604	-	_	_	_	_	
182-251	33604-33605	-	_	_	_	_	
182-252	33605-33606	-	_	_	_	_	
182-253	33606-33607	-	_	_	_	_	
182-254	33607-33608	-	_	_	_	_	
182-255	33608-33609	-	_	_	_	_	
182-256	33609-33610	-	_	_	_	_	
182-257	33610-33611	-	_	_	_	_	
182-258	33611-33612	-	_	_	_	_	
182-259	33612-33613	-	_	_	_	_	
182-260	33613-33614	-	_	_	_	_	
182-261	33614-33615	-	_	_	_	_	
182-262	33615-33616	-	_	_	_	_	
182-263	33616-33617	-	_	_	_	_	
182-264	33617-33618	-	_	_	_	_	
182-265	33618-33619	-	_	_	_	_	
182-266	33619-33620	-	_	_	_	_	
182-267	33620-33621	-	_	_	_	_	
182-268	33621-33622	-	_	_	_	_	
182-269	33622-33623	-	_	_	_	_	
182-270	33623-33624	-	_	_	_	_	
182-271	33624-33625	-	_	_	_	_	
182-272	33625-33626	-	_	_	_	_	
182-273	33626-33627	-	_	_	_	_	
182-274	33627-33628	-	_	_	_	_	
182-275	33628-33629	-	_	_	_	_	
182-276	33629-33630	-	_	_	_	_	
182-277	33630-33631	-	_	_	_	_	
182-278	33631-33632	-	_	_	_	_	
182-279	33632-33633	-	_	_	_	_	
182-280	33633-33634	-	_	_	_	_	
182-281	33634-33635	-	_	_	_	_	
182-282	33635-33636	-	_	_	_	_	
182-283	33636-33637	-	_	_	_	_	
182-284	33637-33638	-	_	_	_	_	
182-285	33638-33639	-	_	_	_	_	
182-286	33639-33640	-	_	_	_	_	
182-287	33640-33641	-	_	_	_	_	
182-288	33641-33642	-	_	_	_	_	
182-289	33642-33643	-	_	_	_	_	
182-290	33643-33644	-	_	_	_	_	
182-291	33644-33645	-	_	_	_	_	
182-292	33645-33646	-	_	_	_	_	
182-293	33646-33647	-	_	_	_	_	
182-294	33647-33648	-	_	_	_	_	
182-295	33648-33649	-	_	_	_	_	
182-296	33649-33650	-	_	_	_	_	
182-297	33650-33651	-	_	_	_	_	
182-298	33652-33653	[	_	_	_	_	
182-299	33653-33654	{	_	_	_	_	
182-300	33654-33655	"	_	_	_	_	
182-301	33655-33660	price	_	_	_	_	
182-302	33660-33661	"	_	_	_	_	
182-303	33661-33662	:	_	_	_	_	
182-304	33663-33666	100	_	_	_	_	
182-305	33666-33667	,	_	_	_	_	
182-306	33668-33669	"	_	_	_	_	
182-307	33669-33674	style	_	_	_	_	
182-308	33674-33675	"	_	_	_	_	
182-309	33675-33676	:	_	_	_	_	
182-310	33677-33678	"	_	_	_	_	
182-311	33678-33680	hc	_	_	_	_	
182-312	33680-33681	"	_	_	_	_	
182-313	33681-33682	}	_	_	_	_	
182-314	33682-33683	,	_	_	_	_	
182-315	33684-33685	{	_	_	_	_	
182-316	33685-33686	"	_	_	_	_	
182-317	33686-33691	price	_	_	_	_	
182-318	33691-33692	"	_	_	_	_	
182-319	33692-33693	:	_	_	_	_	
182-320	33694-33696	50	_	_	_	_	
182-321	33696-33697	,	_	_	_	_	
182-322	33698-33699	"	_	_	_	_	
182-323	33699-33704	style	_	_	_	_	
182-324	33704-33705	"	_	_	_	_	
182-325	33705-33706	:	_	_	_	_	
182-326	33707-33708	"	_	_	_	_	
182-327	33708-33710	pb	_	_	_	_	
182-328	33710-33711	"	_	_	_	_	
182-329	33711-33712	}	_	_	_	_	
182-330	33712-33713	]	_	_	_	_	
182-331	33714-33715	(	_	_	_	_	
182-332	33715-33716	1	_	_	_	_	
182-333	33717-33720	row	_	_	_	_	
182-334	33720-33721	)	_	_	_	_	
182-335	33722-33728	Select	_	_	_	_	
182-336	33729-33732	the	_	_	_	_	
182-337	33733-33738	first	_	_	_	_	
182-338	33739-33746	element	_	_	_	_	
182-339	33747-33749	in	_	_	_	_	
182-340	33750-33753	the	_	_	_	_	
182-341	33754-33759	array	_	_	_	_	
182-342	33760-33766	prints	_	_	_	_	
182-343	33766-33767	:	_	_	_	_	
182-344	33768-33772	demo	_	_	_	_	
182-345	33772-33773	=	_	_	_	_	
182-346	33773-33774	#	_	_	_	_	
182-347	33775-33781	select	_	_	_	_	
182-348	33782-33798	jsonb_path_query	_	_	_	_	
182-349	33798-33799	(	_	_	_	_	
182-350	33799-33803	data	_	_	_	_	
182-351	33803-33804	,	_	_	_	_	
182-352	33805-33806	'	_	_	_	_	
182-353	33806-33807	$	_	_	_	_	
182-354	33807-33808	.	_	_	_	_	
182-355	33808-33814	prints	_	_	_	_	
182-356	33814-33815	[	_	_	_	_	
182-357	33815-33816	0	_	_	_	_	
182-358	33816-33817	]	_	_	_	_	
182-359	33817-33818	'	_	_	_	_	
182-360	33818-33819	)	_	_	_	_	
182-361	33820-33824	from	_	_	_	_	
182-362	33825-33830	books	_	_	_	_	
182-363	33831-33836	where	_	_	_	_	
182-364	33837-33839	id	_	_	_	_	
182-365	33840-33841	=	_	_	_	_	
182-366	33842-33849	1000029	_	_	_	_	
182-367	33849-33850	;	_	_	_	_	
182-368	33851-33867	jsonb_path_query	_	_	_	_	
182-369	33868-33869	-	_	_	_	_	
182-370	33869-33870	-	_	_	_	_	
182-371	33870-33871	-	_	_	_	_	
182-372	33871-33872	-	_	_	_	_	
182-373	33872-33873	-	_	_	_	_	
182-374	33873-33874	-	_	_	_	_	
182-375	33874-33875	-	_	_	_	_	
182-376	33875-33876	-	_	_	_	_	
182-377	33876-33877	-	_	_	_	_	
182-378	33877-33878	-	_	_	_	_	
182-379	33878-33879	-	_	_	_	_	
182-380	33879-33880	-	_	_	_	_	
182-381	33880-33881	-	_	_	_	_	
182-382	33881-33882	-	_	_	_	_	
182-383	33882-33883	-	_	_	_	_	
182-384	33883-33884	-	_	_	_	_	
182-385	33884-33885	-	_	_	_	_	
182-386	33885-33886	-	_	_	_	_	
182-387	33886-33887	-	_	_	_	_	
182-388	33887-33888	-	_	_	_	_	
182-389	33888-33889	-	_	_	_	_	
182-390	33889-33890	-	_	_	_	_	
182-391	33890-33891	-	_	_	_	_	
182-392	33891-33892	-	_	_	_	_	
182-393	33892-33893	-	_	_	_	_	
182-394	33893-33894	-	_	_	_	_	
182-395	33894-33895	-	_	_	_	_	
182-396	33895-33896	-	_	_	_	_	
182-397	33896-33897	-	_	_	_	_	
182-398	33897-33898	-	_	_	_	_	
182-399	33898-33899	-	_	_	_	_	
182-400	33900-33901	{	_	_	_	_	
182-401	33901-33902	"	_	_	_	_	
182-402	33902-33907	price	_	_	_	_	
182-403	33907-33908	"	_	_	_	_	
182-404	33908-33909	:	_	_	_	_	
182-405	33910-33913	100	_	_	_	_	
182-406	33913-33914	,	_	_	_	_	
182-407	33915-33916	"	_	_	_	_	
182-408	33916-33921	style	_	_	_	_	
182-409	33921-33922	"	_	_	_	_	
182-410	33922-33923	:	_	_	_	_	
182-411	33924-33925	"	_	_	_	_	
182-412	33925-33927	hc	_	_	_	_	
182-413	33927-33928	"	_	_	_	_	
182-414	33928-33929	}	_	_	_	_	
182-415	33930-33931	(	_	_	_	_	
182-416	33931-33932	1	_	_	_	_	
182-417	33933-33936	row	_	_	_	_	
182-418	33936-33937	)	_	_	_	_	
182-419	33938-33944	Select	_	_	_	_	
182-420	33945-33948	the	_	_	_	_	
182-421	33949-33953	last	_	_	_	_	
182-422	33954-33961	element	_	_	_	_	
182-423	33962-33964	in	_	_	_	_	
182-424	33965-33968	the	_	_	_	_	
182-425	33969-33974	array	_	_	_	_	
182-426	33975-33981	prints	_	_	_	_	
182-427	33981-33982	:	_	_	_	_	
182-428	33983-33987	demo	_	_	_	_	
182-429	33987-33988	=	_	_	_	_	
182-430	33988-33989	#	_	_	_	_	
182-431	33990-33996	select	_	_	_	_	
182-432	33997-34013	jsonb_path_query	_	_	_	_	
182-433	34013-34014	(	_	_	_	_	
182-434	34014-34018	data	_	_	_	_	
182-435	34018-34019	,	_	_	_	_	
182-436	34020-34021	'	_	_	_	_	
182-437	34021-34022	$	_	_	_	_	
182-438	34022-34023	.	_	_	_	_	
182-439	34023-34029	prints	_	_	_	_	
182-440	34029-34030	[	_	_	_	_	
182-441	34030-34031	$	_	_	_	_	
182-442	34031-34032	.	_	_	_	_	
182-443	34032-34036	size	_	_	_	_	
182-444	34036-34037	(	_	_	_	_	
182-445	34037-34038	)	_	_	_	_	
182-446	34038-34039	]	_	_	_	_	
182-447	34039-34040	'	_	_	_	_	
182-448	34040-34041	)	_	_	_	_	
182-449	34042-34046	from	_	_	_	_	
182-450	34047-34052	books	_	_	_	_	
182-451	34053-34058	where	_	_	_	_	
182-452	34059-34061	id	_	_	_	_	
182-453	34062-34063	=	_	_	_	_	
182-454	34064-34071	1000029	_	_	_	_	
182-455	34071-34072	;	_	_	_	_	
182-456	34073-34089	jsonb_path_query	_	_	_	_	
182-457	34090-34091	-	_	_	_	_	
182-458	34091-34092	-	_	_	_	_	
182-459	34092-34093	-	_	_	_	_	
182-460	34093-34094	-	_	_	_	_	
182-461	34094-34095	-	_	_	_	_	
182-462	34095-34096	-	_	_	_	_	
182-463	34096-34097	-	_	_	_	_	
182-464	34097-34098	-	_	_	_	_	
182-465	34098-34099	-	_	_	_	_	
182-466	34099-34100	-	_	_	_	_	
182-467	34100-34101	-	_	_	_	_	
182-468	34101-34102	-	_	_	_	_	
182-469	34102-34103	-	_	_	_	_	
182-470	34103-34104	-	_	_	_	_	
182-471	34104-34105	-	_	_	_	_	
182-472	34105-34106	-	_	_	_	_	
182-473	34106-34107	-	_	_	_	_	
182-474	34107-34108	-	_	_	_	_	
182-475	34108-34109	-	_	_	_	_	
182-476	34109-34110	-	_	_	_	_	
182-477	34110-34111	-	_	_	_	_	
182-478	34111-34112	-	_	_	_	_	
182-479	34112-34113	-	_	_	_	_	
182-480	34113-34114	-	_	_	_	_	
182-481	34114-34115	-	_	_	_	_	
182-482	34115-34116	-	_	_	_	_	
182-483	34116-34117	-	_	_	_	_	
182-484	34117-34118	-	_	_	_	_	
182-485	34118-34119	-	_	_	_	_	
182-486	34119-34120	-	_	_	_	_	
182-487	34121-34122	{	_	_	_	_	
182-488	34122-34123	"	_	_	_	_	
182-489	34123-34128	price	_	_	_	_	
182-490	34128-34129	"	_	_	_	_	
182-491	34129-34130	:	_	_	_	_	
182-492	34131-34133	50	_	_	_	_	
182-493	34133-34134	,	_	_	_	_	
182-494	34135-34136	"	_	_	_	_	
182-495	34136-34141	style	_	_	_	_	
182-496	34141-34142	"	_	_	_	_	
182-497	34142-34143	:	_	_	_	_	
182-498	34144-34145	"	_	_	_	_	
182-499	34145-34147	pb	_	_	_	_	
182-500	34147-34148	"	_	_	_	_	
182-501	34148-34149	}	_	_	_	_	
182-502	34150-34151	(	_	_	_	_	
182-503	34151-34152	1	_	_	_	_	
182-504	34153-34156	row	_	_	_	_	
182-505	34156-34157	)	_	_	_	_	
182-506	34158-34164	Select	_	_	_	_	
182-507	34165-34169	only	_	_	_	_	
182-508	34170-34173	the	_	_	_	_	
182-509	34174-34183	hardcover	_	_	_	_	
182-510	34184-34190	prints	_	_	_	_	
182-511	34191-34195	from	_	_	_	_	
182-512	34196-34199	the	_	_	_	_	
182-513	34200-34205	array	_	_	_	_	
182-514	34205-34206	:	_	_	_	_	
182-515	34207-34211	demo	_	_	_	_	
182-516	34211-34212	=	_	_	_	_	
182-517	34212-34213	#	_	_	_	_	
182-518	34214-34220	select	_	_	_	_	
182-519	34221-34237	jsonb_path_query	_	_	_	_	
182-520	34237-34238	(	_	_	_	_	
182-521	34238-34242	data	_	_	_	_	
182-522	34242-34243	,	_	_	_	_	
182-523	34244-34245	'	_	_	_	_	
182-524	34245-34246	$	_	_	_	_	
182-525	34246-34247	.	_	_	_	_	
182-526	34247-34253	prints	_	_	_	_	
182-527	34253-34254	[	_	_	_	_	
182-528	34254-34255	*	_	_	_	_	
182-529	34255-34256	]	_	_	_	_	
182-530	34257-34258	?	_	_	_	_	

#Text=(@.style=="hc")') from books where id = 1000029;
#Text=jsonb_path_query
#Text=-------------------------------
#Text={"price": 100, "style": "hc"}
#Text=(1 row)
#Text=We can also chain the filters:
#Text=demo=# select jsonb_path_query(data, '$.prints[*] ?
183-1	34258-34259	(	_	_	_	_	
183-2	34259-34260	@	_	_	_	_	
183-3	34260-34261	.	_	_	_	_	
183-4	34261-34266	style	_	_	_	_	
183-5	34266-34267	=	_	_	_	_	
183-6	34267-34268	=	_	_	_	_	
183-7	34268-34269	"	_	_	_	_	
183-8	34269-34271	hc	_	_	_	_	
183-9	34271-34272	"	_	_	_	_	
183-10	34272-34273	)	_	_	_	_	
183-11	34273-34274	'	_	_	_	_	
183-12	34274-34275	)	_	_	_	_	
183-13	34276-34280	from	_	_	_	_	
183-14	34281-34286	books	_	_	_	_	
183-15	34287-34292	where	_	_	_	_	
183-16	34293-34295	id	_	_	_	_	
183-17	34296-34297	=	_	_	_	_	
183-18	34298-34305	1000029	_	_	_	_	
183-19	34305-34306	;	_	_	_	_	
183-20	34307-34323	jsonb_path_query	_	_	_	_	
183-21	34324-34325	-	_	_	_	_	
183-22	34325-34326	-	_	_	_	_	
183-23	34326-34327	-	_	_	_	_	
183-24	34327-34328	-	_	_	_	_	
183-25	34328-34329	-	_	_	_	_	
183-26	34329-34330	-	_	_	_	_	
183-27	34330-34331	-	_	_	_	_	
183-28	34331-34332	-	_	_	_	_	
183-29	34332-34333	-	_	_	_	_	
183-30	34333-34334	-	_	_	_	_	
183-31	34334-34335	-	_	_	_	_	
183-32	34335-34336	-	_	_	_	_	
183-33	34336-34337	-	_	_	_	_	
183-34	34337-34338	-	_	_	_	_	
183-35	34338-34339	-	_	_	_	_	
183-36	34339-34340	-	_	_	_	_	
183-37	34340-34341	-	_	_	_	_	
183-38	34341-34342	-	_	_	_	_	
183-39	34342-34343	-	_	_	_	_	
183-40	34343-34344	-	_	_	_	_	
183-41	34344-34345	-	_	_	_	_	
183-42	34345-34346	-	_	_	_	_	
183-43	34346-34347	-	_	_	_	_	
183-44	34347-34348	-	_	_	_	_	
183-45	34348-34349	-	_	_	_	_	
183-46	34349-34350	-	_	_	_	_	
183-47	34350-34351	-	_	_	_	_	
183-48	34351-34352	-	_	_	_	_	
183-49	34352-34353	-	_	_	_	_	
183-50	34353-34354	-	_	_	_	_	
183-51	34354-34355	-	_	_	_	_	
183-52	34356-34357	{	_	_	_	_	
183-53	34357-34358	"	_	_	_	_	
183-54	34358-34363	price	_	_	_	_	
183-55	34363-34364	"	_	_	_	_	
183-56	34364-34365	:	_	_	_	_	
183-57	34366-34369	100	_	_	_	_	
183-58	34369-34370	,	_	_	_	_	
183-59	34371-34372	"	_	_	_	_	
183-60	34372-34377	style	_	_	_	_	
183-61	34377-34378	"	_	_	_	_	
183-62	34378-34379	:	_	_	_	_	
183-63	34380-34381	"	_	_	_	_	
183-64	34381-34383	hc	_	_	_	_	
183-65	34383-34384	"	_	_	_	_	
183-66	34384-34385	}	_	_	_	_	
183-67	34386-34387	(	_	_	_	_	
183-68	34387-34388	1	_	_	_	_	
183-69	34389-34392	row	_	_	_	_	
183-70	34392-34393	)	_	_	_	_	
183-71	34394-34396	We	_	_	_	_	
183-72	34397-34400	can	_	_	_	_	
183-73	34401-34405	also	_	_	_	_	
183-74	34406-34411	chain	_	_	_	_	
183-75	34412-34415	the	_	_	_	_	
183-76	34416-34423	filters	_	_	_	_	
183-77	34423-34424	:	_	_	_	_	
183-78	34425-34429	demo	_	_	_	_	
183-79	34429-34430	=	_	_	_	_	
183-80	34430-34431	#	_	_	_	_	
183-81	34432-34438	select	_	_	_	_	
183-82	34439-34455	jsonb_path_query	_	_	_	_	
183-83	34455-34456	(	_	_	_	_	
183-84	34456-34460	data	_	_	_	_	
183-85	34460-34461	,	_	_	_	_	
183-86	34462-34463	'	_	_	_	_	
183-87	34463-34464	$	_	_	_	_	
183-88	34464-34465	.	_	_	_	_	
183-89	34465-34471	prints	_	_	_	_	
183-90	34471-34472	[	_	_	_	_	
183-91	34472-34473	*	_	_	_	_	
183-92	34473-34474	]	_	_	_	_	
183-93	34475-34476	?	_	_	_	_	

#Text=(@.style=="hc") ?
184-1	34476-34477	(	_	_	_	_	
184-2	34477-34478	@	_	_	_	_	
184-3	34478-34479	.	_	_	_	_	
184-4	34479-34484	style	_	_	_	_	
184-5	34484-34485	=	_	_	_	_	
184-6	34485-34486	=	_	_	_	_	
184-7	34486-34487	"	_	_	_	_	
184-8	34487-34489	hc	_	_	_	_	
184-9	34489-34490	"	_	_	_	_	
184-10	34490-34491	)	_	_	_	_	
184-11	34492-34493	?	_	_	_	_	

#Text=(@.price ==100)') from books where id = 1000029;
#Text=jsonb_path_query
#Text=-------------------------------
#Text={"price": 100, "style": "hc"}
#Text=(1 row)
#Text=In summary, PostgreSQL provides a powerful and versatile platform to store and process JSON data.
185-1	34493-34494	(	_	_	_	_	
185-2	34494-34495	@	_	_	_	_	
185-3	34495-34496	.	_	_	_	_	
185-4	34496-34501	price	_	_	_	_	
185-5	34502-34503	=	_	_	_	_	
185-6	34503-34504	=	_	_	_	_	
185-7	34504-34507	100	_	_	_	_	
185-8	34507-34508	)	_	_	_	_	
185-9	34508-34509	'	_	_	_	_	
185-10	34509-34510	)	_	_	_	_	
185-11	34511-34515	from	_	_	_	_	
185-12	34516-34521	books	_	_	_	_	
185-13	34522-34527	where	_	_	_	_	
185-14	34528-34530	id	_	_	_	_	
185-15	34531-34532	=	_	_	_	_	
185-16	34533-34540	1000029	_	_	_	_	
185-17	34540-34541	;	_	_	_	_	
185-18	34542-34558	jsonb_path_query	_	_	_	_	
185-19	34559-34560	-	_	_	_	_	
185-20	34560-34561	-	_	_	_	_	
185-21	34561-34562	-	_	_	_	_	
185-22	34562-34563	-	_	_	_	_	
185-23	34563-34564	-	_	_	_	_	
185-24	34564-34565	-	_	_	_	_	
185-25	34565-34566	-	_	_	_	_	
185-26	34566-34567	-	_	_	_	_	
185-27	34567-34568	-	_	_	_	_	
185-28	34568-34569	-	_	_	_	_	
185-29	34569-34570	-	_	_	_	_	
185-30	34570-34571	-	_	_	_	_	
185-31	34571-34572	-	_	_	_	_	
185-32	34572-34573	-	_	_	_	_	
185-33	34573-34574	-	_	_	_	_	
185-34	34574-34575	-	_	_	_	_	
185-35	34575-34576	-	_	_	_	_	
185-36	34576-34577	-	_	_	_	_	
185-37	34577-34578	-	_	_	_	_	
185-38	34578-34579	-	_	_	_	_	
185-39	34579-34580	-	_	_	_	_	
185-40	34580-34581	-	_	_	_	_	
185-41	34581-34582	-	_	_	_	_	
185-42	34582-34583	-	_	_	_	_	
185-43	34583-34584	-	_	_	_	_	
185-44	34584-34585	-	_	_	_	_	
185-45	34585-34586	-	_	_	_	_	
185-46	34586-34587	-	_	_	_	_	
185-47	34587-34588	-	_	_	_	_	
185-48	34588-34589	-	_	_	_	_	
185-49	34589-34590	-	_	_	_	_	
185-50	34591-34592	{	_	_	_	_	
185-51	34592-34593	"	_	_	_	_	
185-52	34593-34598	price	_	_	_	_	
185-53	34598-34599	"	_	_	_	_	
185-54	34599-34600	:	_	_	_	_	
185-55	34601-34604	100	_	_	_	_	
185-56	34604-34605	,	_	_	_	_	
185-57	34606-34607	"	_	_	_	_	
185-58	34607-34612	style	_	_	_	_	
185-59	34612-34613	"	_	_	_	_	
185-60	34613-34614	:	_	_	_	_	
185-61	34615-34616	"	_	_	_	_	
185-62	34616-34618	hc	_	_	_	_	
185-63	34618-34619	"	_	_	_	_	
185-64	34619-34620	}	_	_	_	_	
185-65	34621-34622	(	_	_	_	_	
185-66	34622-34623	1	_	_	_	_	
185-67	34624-34627	row	_	_	_	_	
185-68	34627-34628	)	_	_	_	_	
185-69	34629-34631	In	_	_	_	_	
185-70	34632-34639	summary	_	_	_	_	
185-71	34639-34640	,	_	_	_	_	
185-72	34641-34651	PostgreSQL	_	_	_	_	
185-73	34652-34660	provides	_	_	_	_	
185-74	34661-34662	a	_	_	_	_	
185-75	34663-34671	powerful	_	_	_	_	
185-76	34672-34675	and	_	_	_	_	
185-77	34676-34685	versatile	_	_	_	_	
185-78	34686-34694	platform	_	_	_	_	
185-79	34695-34697	to	_	_	_	_	
185-80	34697-34698	 	_	_	_	_	
185-81	34698-34703	store	_	_	_	_	
185-82	34704-34707	and	_	_	_	_	
185-83	34708-34715	process	_	_	_	_	
185-84	34715-34716	 	_	_	_	_	
185-85	34716-34720	JSON	_	_	_	_	
185-86	34721-34725	data	_	_	_	_	
185-87	34725-34726	.	_	_	_	_	

#Text=There are several gotcha's that you need to be aware of, but we are optimistic that it will be fixed in future releases.
186-1	34727-34732	There	_	_	_	_	
186-2	34733-34736	are	_	_	_	_	
186-3	34737-34744	several	_	_	_	_	
186-4	34745-34753	gotcha's	_	_	_	_	
186-5	34754-34758	that	_	_	_	_	
186-6	34759-34762	you	_	_	_	_	
186-7	34763-34767	need	_	_	_	_	
186-8	34768-34770	to	_	_	_	_	
186-9	34771-34773	be	_	_	_	_	
186-10	34774-34779	aware	_	_	_	_	
186-11	34780-34782	of	_	_	_	_	
186-12	34782-34783	,	_	_	_	_	
186-13	34784-34787	but	_	_	_	_	
186-14	34788-34790	we	_	_	_	_	
186-15	34791-34794	are	_	_	_	_	
186-16	34795-34805	optimistic	_	_	_	_	
186-17	34806-34810	that	_	_	_	_	
186-18	34811-34813	it	_	_	_	_	
186-19	34814-34818	will	_	_	_	_	
186-20	34819-34821	be	_	_	_	_	
186-21	34822-34827	fixed	_	_	_	_	
186-22	34828-34830	in	_	_	_	_	
186-23	34831-34837	future	_	_	_	_	
186-24	34838-34846	releases	_	_	_	_	
186-25	34846-34847	.	_	_	_	_	

#Text=More tips for you
#Text=Which Is the Best PostgreSQL GUI?
187-1	34848-34852	More	_	_	_	_	
187-2	34853-34857	tips	_	_	_	_	
187-3	34858-34861	for	_	_	_	_	
187-4	34862-34865	you	_	_	_	_	
187-5	34866-34871	Which	_	_	_	_	
187-6	34872-34874	Is	_	_	_	_	
187-7	34875-34878	the	_	_	_	_	
187-8	34879-34883	Best	_	_	_	_	
187-9	34884-34894	PostgreSQL	_	_	_	_	
187-10	34895-34898	GUI	_	_	_	_	
187-11	34898-34899	?	_	_	_	_	

#Text=PostgreSQL graphical user interface (GUI) tools help these open source database users to manage, manipulate, and visualize their data.
188-1	34900-34910	PostgreSQL	_	_	_	_	
188-2	34911-34920	graphical	_	_	_	_	
188-3	34921-34925	user	_	_	_	_	
188-4	34926-34935	interface	_	_	_	_	
188-5	34936-34937	(	_	_	_	_	
188-6	34937-34940	GUI	_	_	_	_	
188-7	34940-34941	)	_	_	_	_	
188-8	34942-34947	tools	_	_	_	_	
188-9	34948-34952	help	_	_	_	_	
188-10	34953-34958	these	_	_	_	_	
188-11	34959-34963	open	_	_	_	_	
188-12	34964-34970	source	_	_	_	_	
188-13	34971-34979	database	_	_	_	_	
188-14	34980-34985	users	_	_	_	_	
188-15	34986-34988	to	_	_	_	_	
188-16	34989-34995	manage	_	_	_	_	
188-17	34995-34996	,	_	_	_	_	
188-18	34997-35007	manipulate	_	_	_	_	
188-19	35007-35008	,	_	_	_	_	
188-20	35009-35012	and	_	_	_	_	
188-21	35013-35022	visualize	_	_	_	_	
188-22	35023-35028	their	_	_	_	_	
188-23	35029-35033	data	_	_	_	_	
188-24	35033-35034	.	_	_	_	_	

#Text=In this post, we discuss the top 5 GUI tools for administering your PostgreSQL deployments.
189-1	35035-35037	In	_	_	_	_	
189-2	35038-35042	this	_	_	_	_	
189-3	35043-35047	post	_	_	_	_	
189-4	35047-35048	,	_	_	_	_	
189-5	35049-35051	we	_	_	_	_	
189-6	35052-35059	discuss	_	_	_	_	
189-7	35060-35063	the	_	_	_	_	
189-8	35064-35067	top	_	_	_	_	
189-9	35068-35069	5	_	_	_	_	
189-10	35070-35073	GUI	_	_	_	_	
189-11	35074-35079	tools	_	_	_	_	
189-12	35080-35083	for	_	_	_	_	
189-13	35084-35097	administering	_	_	_	_	
189-14	35098-35102	your	_	_	_	_	
189-15	35103-35113	PostgreSQL	_	_	_	_	
189-16	35114-35125	deployments	_	_	_	_	
189-17	35125-35126	.	_	_	_	_	

#Text=Learn more
#Text=Managing High Availability in PostgreSQL
#Text=Managing high availability in your PostgreSQL hosting is very important to ensuring your clusters maintain exceptional uptime and strong operational performance so your data is always available to your application.
190-1	35127-35132	Learn	_	_	_	_	
190-2	35133-35137	more	_	_	_	_	
190-3	35138-35146	Managing	_	_	_	_	
190-4	35147-35151	High	_	_	_	_	
190-5	35152-35164	Availability	_	_	_	_	
190-6	35165-35167	in	_	_	_	_	
190-7	35168-35178	PostgreSQL	_	_	_	_	
190-8	35179-35187	Managing	_	_	_	_	
190-9	35188-35192	high	_	_	_	_	
190-10	35193-35205	availability	_	_	_	_	
190-11	35206-35208	in	_	_	_	_	
190-12	35209-35213	your	_	_	_	_	
190-13	35214-35224	PostgreSQL	_	_	_	_	
190-14	35225-35232	hosting	_	_	_	_	
190-15	35233-35235	is	_	_	_	_	
190-16	35236-35240	very	_	_	_	_	
190-17	35241-35250	important	_	_	_	_	
190-18	35251-35253	to	_	_	_	_	
190-19	35254-35262	ensuring	_	_	_	_	
190-20	35263-35267	your	_	_	_	_	
190-21	35268-35276	clusters	_	_	_	_	
190-22	35277-35285	maintain	_	_	_	_	
190-23	35286-35297	exceptional	_	_	_	_	
190-24	35298-35304	uptime	_	_	_	_	
190-25	35305-35308	and	_	_	_	_	
190-26	35309-35315	strong	_	_	_	_	
190-27	35316-35327	operational	_	_	_	_	
190-28	35328-35339	performance	_	_	_	_	
190-29	35340-35342	so	_	_	_	_	
190-30	35343-35347	your	_	_	_	_	
190-31	35348-35352	data	_	_	_	_	
190-32	35353-35355	is	_	_	_	_	
190-33	35356-35362	always	_	_	_	_	
190-34	35363-35372	available	_	_	_	_	
190-35	35373-35375	to	_	_	_	_	
190-36	35376-35380	your	_	_	_	_	
190-37	35381-35392	application	_	_	_	_	
190-38	35392-35393	.	_	_	_	_	

#Text=Learn more
#Text=PostgreSQL Connection Pooling: Part 1 – Pros & Cons
#Text=In modern apps, clients open a lot of connections.
191-1	35394-35399	Learn	_	_	_	_	
191-2	35400-35404	more	_	_	_	_	
191-3	35405-35415	PostgreSQL	_	_	_	_	
191-4	35416-35426	Connection	_	_	_	_	
191-5	35427-35434	Pooling	_	_	_	_	
191-6	35434-35435	:	_	_	_	_	
191-7	35436-35440	Part	_	_	_	_	
191-8	35441-35442	1	_	_	_	_	
191-9	35443-35444	–	_	_	_	_	
191-10	35445-35449	Pros	_	_	_	_	
191-11	35450-35451	&	_	_	_	_	
191-12	35452-35456	Cons	_	_	_	_	
191-13	35457-35459	In	_	_	_	_	
191-14	35460-35466	modern	_	_	_	_	
191-15	35467-35471	apps	_	_	_	_	
191-16	35471-35472	,	_	_	_	_	
191-17	35473-35480	clients	_	_	_	_	
191-18	35481-35485	open	_	_	_	_	
191-19	35486-35487	a	_	_	_	_	
191-20	35488-35491	lot	_	_	_	_	
191-21	35492-35494	of	_	_	_	_	
191-22	35495-35506	connections	_	_	_	_	
191-23	35506-35507	.	_	_	_	_	

#Text=Developers are discouraged from holding a database connection while other operations take place.
192-1	35508-35518	Developers	_	_	_	_	
192-2	35519-35522	are	_	_	_	_	
192-3	35523-35534	discouraged	_	_	_	_	
192-4	35535-35539	from	_	_	_	_	
192-5	35540-35547	holding	_	_	_	_	
192-6	35548-35549	a	_	_	_	_	
192-7	35550-35558	database	_	_	_	_	
192-8	35559-35569	connection	_	_	_	_	
192-9	35570-35575	while	_	_	_	_	
192-10	35576-35581	other	_	_	_	_	
192-11	35582-35592	operations	_	_	_	_	
192-12	35593-35597	take	_	_	_	_	
192-13	35598-35603	place	_	_	_	_	
192-14	35603-35604	.	_	_	_	_	

#Text=“Open a connection as late as possible, close as soon as possible”.
193-1	35605-35606	“	_	_	_	_	
193-2	35606-35610	Open	_	_	_	_	
193-3	35611-35612	a	_	_	_	_	
193-4	35613-35623	connection	_	_	_	_	
193-5	35624-35626	as	_	_	_	_	
193-6	35627-35631	late	_	_	_	_	
193-7	35632-35634	as	_	_	_	_	
193-8	35635-35643	possible	_	_	_	_	
193-9	35643-35644	,	_	_	_	_	
193-10	35645-35650	close	_	_	_	_	
193-11	35651-35653	as	_	_	_	_	
193-12	35654-35658	soon	_	_	_	_	
193-13	35659-35661	as	_	_	_	_	
193-14	35662-35670	possible	_	_	_	_	
193-15	35670-35671	”	_	_	_	_	
193-16	35671-35672	.	_	_	_	_	

#Text=Learn more
#Text=+1 Tweet Share Share PinShares 0
#Text=Join the ScaleGrid Newsletter and never miss out!
194-1	35673-35678	Learn	_	_	_	_	
194-2	35679-35683	more	_	_	_	_	
194-3	35684-35685	+	_	_	_	_	
194-4	35685-35686	1	_	_	_	_	
194-5	35687-35692	Tweet	_	_	_	_	
194-6	35693-35698	Share	_	_	_	_	
194-7	35699-35704	Share	_	_	_	_	
194-8	35705-35714	PinShares	_	_	_	_	
194-9	35715-35716	0	_	_	_	_	
194-10	35717-35721	Join	_	_	_	_	
194-11	35722-35725	the	_	_	_	_	
194-12	35726-35735	ScaleGrid	_	_	_	_	
194-13	35736-35746	Newsletter	_	_	_	_	
194-14	35747-35750	and	_	_	_	_	
194-15	35751-35756	never	_	_	_	_	
194-16	35757-35761	miss	_	_	_	_	
194-17	35762-35765	out	_	_	_	_	
194-18	35765-35766	!	_	_	_	_	

#Text=Check out Related PostsWhich Is The Best PostgreSQL GUI?
195-1	35767-35772	Check	_	_	_	_	
195-2	35773-35776	out	_	_	_	_	
195-3	35777-35784	Related	_	_	_	_	
195-4	35785-35795	PostsWhich	_	_	_	_	
195-5	35796-35798	Is	_	_	_	_	
195-6	35799-35802	The	_	_	_	_	
195-7	35803-35807	Best	_	_	_	_	
195-8	35808-35818	PostgreSQL	_	_	_	_	
195-9	35819-35822	GUI	_	_	_	_	
195-10	35822-35823	?	_	_	_	_	

#Text=2021 ComparisonPostgreSQL graphical user interface (GUI) tools help open source database users to manage, manipulat...Read Full ArticleScaleGrid DigitalOcean Support for MySQL, PostgreSQL and Redis™ Now Av...PALO ALTO, Calif., June 9, 2020 – ScaleGrid, a leading Database-as-a-Service (DBaaS) provider, has j...Read Full ArticlePostgreSQL Connection Pooling: Part 1 - Pros & ConsA long time ago, in a galaxy far far away, ‘threads’ were a programming novelty rarely used and seld...Read Full Article
#Text=Dharshan is the founder of ScaleGrid.io (formerly MongoDirector.com).
196-1	35824-35828	2021	_	_	_	_	
196-2	35829-35849	ComparisonPostgreSQL	_	_	_	_	
196-3	35850-35859	graphical	_	_	_	_	
196-4	35860-35864	user	_	_	_	_	
196-5	35865-35874	interface	_	_	_	_	
196-6	35875-35876	(	_	_	_	_	
196-7	35876-35879	GUI	_	_	_	_	
196-8	35879-35880	)	_	_	_	_	
196-9	35881-35886	tools	_	_	_	_	
196-10	35887-35891	help	_	_	_	_	
196-11	35892-35896	open	_	_	_	_	
196-12	35897-35903	source	_	_	_	_	
196-13	35904-35912	database	_	_	_	_	
196-14	35913-35918	users	_	_	_	_	
196-15	35919-35921	to	_	_	_	_	
196-16	35922-35928	manage	_	_	_	_	
196-17	35928-35929	,	_	_	_	_	
196-18	35930-35939	manipulat	_	_	_	_	
196-19	35939-35940	.	_	_	_	_	
196-20	35940-35941	.	_	_	_	_	
196-21	35941-35942	.	_	_	_	_	
196-22	35942-35946	Read	_	_	_	_	
196-23	35947-35951	Full	_	_	_	_	
196-24	35952-35968	ArticleScaleGrid	_	_	_	_	
196-25	35969-35981	DigitalOcean	_	_	_	_	
196-26	35982-35989	Support	_	_	_	_	
196-27	35990-35993	for	_	_	_	_	
196-28	35994-35999	MySQL	_	_	_	_	
196-29	35999-36000	,	_	_	_	_	
196-30	36001-36011	PostgreSQL	_	_	_	_	
196-31	36012-36015	and	_	_	_	_	
196-32	36016-36021	Redis	_	_	_	_	
196-33	36021-36022	™	_	_	_	_	
196-34	36023-36026	Now	_	_	_	_	
196-35	36027-36029	Av	_	_	_	_	
196-36	36029-36030	.	_	_	_	_	
196-37	36030-36031	.	_	_	_	_	
196-38	36031-36032	.	_	_	_	_	
196-39	36032-36036	PALO	_	_	_	_	
196-40	36037-36041	ALTO	_	_	_	_	
196-41	36041-36042	,	_	_	_	_	
196-42	36043-36048	Calif	_	_	_	_	
196-43	36048-36049	.	_	_	_	_	
196-44	36049-36050	,	_	_	_	_	
196-45	36051-36055	June	_	_	_	_	
196-46	36056-36057	9	_	_	_	_	
196-47	36057-36058	,	_	_	_	_	
196-48	36059-36063	2020	_	_	_	_	
196-49	36064-36065	–	_	_	_	_	
196-50	36066-36075	ScaleGrid	_	_	_	_	
196-51	36075-36076	,	_	_	_	_	
196-52	36077-36078	a	_	_	_	_	
196-53	36079-36086	leading	_	_	_	_	
196-54	36087-36108	Database-as-a-Service	_	_	_	_	
196-55	36109-36110	(	_	_	_	_	
196-56	36110-36115	DBaaS	_	_	_	_	
196-57	36115-36116	)	_	_	_	_	
196-58	36117-36125	provider	_	_	_	_	
196-59	36125-36126	,	_	_	_	_	
196-60	36127-36130	has	_	_	_	_	
196-61	36131-36132	j	_	_	_	_	
196-62	36132-36133	.	_	_	_	_	
196-63	36133-36134	.	_	_	_	_	
196-64	36134-36135	.	_	_	_	_	
196-65	36135-36139	Read	_	_	_	_	
196-66	36140-36144	Full	_	_	_	_	
196-67	36145-36162	ArticlePostgreSQL	_	_	_	_	
196-68	36163-36173	Connection	_	_	_	_	
196-69	36174-36181	Pooling	_	_	_	_	
196-70	36181-36182	:	_	_	_	_	
196-71	36183-36187	Part	_	_	_	_	
196-72	36188-36189	1	_	_	_	_	
196-73	36190-36191	-	_	_	_	_	
196-74	36192-36196	Pros	_	_	_	_	
196-75	36197-36198	&	_	_	_	_	
196-76	36199-36204	ConsA	_	_	_	_	
196-77	36205-36209	long	_	_	_	_	
196-78	36210-36214	time	_	_	_	_	
196-79	36215-36218	ago	_	_	_	_	
196-80	36218-36219	,	_	_	_	_	
196-81	36220-36222	in	_	_	_	_	
196-82	36223-36224	a	_	_	_	_	
196-83	36225-36231	galaxy	_	_	_	_	
196-84	36232-36235	far	_	_	_	_	
196-85	36236-36239	far	_	_	_	_	
196-86	36240-36244	away	_	_	_	_	
196-87	36244-36245	,	_	_	_	_	
196-88	36246-36247	‘	_	_	_	_	
196-89	36247-36254	threads	_	_	_	_	
196-90	36254-36255	’	_	_	_	_	
196-91	36256-36260	were	_	_	_	_	
196-92	36261-36262	a	_	_	_	_	
196-93	36263-36274	programming	_	_	_	_	
196-94	36275-36282	novelty	_	_	_	_	
196-95	36283-36289	rarely	_	_	_	_	
196-96	36290-36294	used	_	_	_	_	
196-97	36295-36298	and	_	_	_	_	
196-98	36299-36303	seld	_	_	_	_	
196-99	36303-36304	.	_	_	_	_	
196-100	36304-36305	.	_	_	_	_	
196-101	36305-36306	.	_	_	_	_	
196-102	36306-36310	Read	_	_	_	_	
196-103	36311-36315	Full	_	_	_	_	
196-104	36316-36323	Article	_	_	_	_	
196-105	36324-36332	Dharshan	_	_	_	_	
196-106	36333-36335	is	_	_	_	_	
196-107	36336-36339	the	_	_	_	_	
196-108	36340-36347	founder	_	_	_	_	
196-109	36348-36350	of	_	_	_	_	
196-110	36351-36363	ScaleGrid.io	_	_	_	_	
196-111	36364-36365	(	_	_	_	_	
196-112	36365-36373	formerly	_	_	_	_	
196-113	36374-36391	MongoDirector.com	_	_	_	_	
196-114	36391-36392	)	_	_	_	_	
196-115	36392-36393	.	_	_	_	_	

#Text=He is an experienced MongoDB developer and administrator.
197-1	36394-36396	He	_	_	_	_	
197-2	36397-36399	is	_	_	_	_	
197-3	36400-36402	an	_	_	_	_	
197-4	36403-36414	experienced	_	_	_	_	
197-5	36415-36422	MongoDB	_	_	_	_	
197-6	36423-36432	developer	_	_	_	_	
197-7	36433-36436	and	_	_	_	_	
197-8	36437-36450	administrator	_	_	_	_	
197-9	36450-36451	.	_	_	_	_	

#Text=He can be reached for further comment at @dharshanrg
#Text=Start Your Free 30 Day Trial
#Text=ASDFADSF FDASFDA
#Text=Syntax error at
#Text=CREATE INDEX datatagsgin ON books USING gin (data->’tags’);
#Text=should be
#Text=CREATE INDEX datatagsgin ON books USING gin ((data->’tags’));
#Text=machty
#Text=It’s pretty hard to follow some of the examples when you’re using machine-y sample data like `”{“tags”: {“nk594127″: {“ik71786″: “iv678771″}}`.
198-1	36452-36454	He	_	_	_	_	
198-2	36455-36458	can	_	_	_	_	
198-3	36459-36461	be	_	_	_	_	
198-4	36462-36469	reached	_	_	_	_	
198-5	36470-36473	for	_	_	_	_	
198-6	36474-36481	further	_	_	_	_	
198-7	36482-36489	comment	_	_	_	_	
198-8	36490-36492	at	_	_	_	_	
198-9	36493-36494	@	_	_	_	_	
198-10	36494-36504	dharshanrg	_	_	_	_	
198-11	36505-36510	Start	_	_	_	_	
198-12	36511-36515	Your	_	_	_	_	
198-13	36516-36520	Free	_	_	_	_	
198-14	36521-36523	30	_	_	_	_	
198-15	36524-36527	Day	_	_	_	_	
198-16	36528-36533	Trial	_	_	_	_	
198-17	36534-36542	ASDFADSF	_	_	_	_	
198-18	36543-36550	FDASFDA	_	_	_	_	
198-19	36551-36557	Syntax	_	_	_	_	
198-20	36558-36563	error	_	_	_	_	
198-21	36564-36566	at	_	_	_	_	
198-22	36567-36573	CREATE	_	_	_	_	
198-23	36574-36579	INDEX	_	_	_	_	
198-24	36580-36591	datatagsgin	_	_	_	_	
198-25	36592-36594	ON	_	_	_	_	
198-26	36595-36600	books	_	_	_	_	
198-27	36601-36606	USING	_	_	_	_	
198-28	36607-36610	gin	_	_	_	_	
198-29	36611-36612	(	_	_	_	_	
198-30	36612-36616	data	_	_	_	_	
198-31	36616-36617	-	_	_	_	_	
198-32	36617-36618	>	_	_	_	_	
198-33	36618-36619	’	_	_	_	_	
198-34	36619-36623	tags	_	_	_	_	
198-35	36623-36624	’	_	_	_	_	
198-36	36624-36625	)	_	_	_	_	
198-37	36625-36626	;	_	_	_	_	
198-38	36627-36633	should	_	_	_	_	
198-39	36634-36636	be	_	_	_	_	
198-40	36637-36643	CREATE	_	_	_	_	
198-41	36644-36649	INDEX	_	_	_	_	
198-42	36650-36661	datatagsgin	_	_	_	_	
198-43	36662-36664	ON	_	_	_	_	
198-44	36665-36670	books	_	_	_	_	
198-45	36671-36676	USING	_	_	_	_	
198-46	36677-36680	gin	_	_	_	_	
198-47	36681-36682	(	_	_	_	_	
198-48	36682-36683	(	_	_	_	_	
198-49	36683-36687	data	_	_	_	_	
198-50	36687-36688	-	_	_	_	_	
198-51	36688-36689	>	_	_	_	_	
198-52	36689-36690	’	_	_	_	_	
198-53	36690-36694	tags	_	_	_	_	
198-54	36694-36695	’	_	_	_	_	
198-55	36695-36696	)	_	_	_	_	
198-56	36696-36697	)	_	_	_	_	
198-57	36697-36698	;	_	_	_	_	
198-58	36699-36705	machty	_	_	_	_	
198-59	36706-36708	It	_	_	_	_	
198-60	36708-36709	’	_	_	_	_	
198-61	36709-36710	s	_	_	_	_	
198-62	36711-36717	pretty	_	_	_	_	
198-63	36718-36722	hard	_	_	_	_	
198-64	36723-36725	to	_	_	_	_	
198-65	36726-36732	follow	_	_	_	_	
198-66	36733-36737	some	_	_	_	_	
198-67	36738-36740	of	_	_	_	_	
198-68	36741-36744	the	_	_	_	_	
198-69	36745-36753	examples	_	_	_	_	
198-70	36754-36758	when	_	_	_	_	
198-71	36759-36762	you	_	_	_	_	
198-72	36762-36763	’	_	_	_	_	
198-73	36763-36765	re	_	_	_	_	
198-74	36766-36771	using	_	_	_	_	
198-75	36772-36781	machine-y	_	_	_	_	
198-76	36782-36788	sample	_	_	_	_	
198-77	36789-36793	data	_	_	_	_	
198-78	36794-36798	like	_	_	_	_	
198-79	36799-36800	`	_	_	_	_	
198-80	36800-36801	”	_	_	_	_	
198-81	36801-36802	{	_	_	_	_	
198-82	36802-36803	“	_	_	_	_	
198-83	36803-36807	tags	_	_	_	_	
198-84	36807-36808	”	_	_	_	_	
198-85	36808-36809	:	_	_	_	_	
198-86	36810-36811	{	_	_	_	_	
198-87	36811-36812	“	_	_	_	_	
198-88	36812-36820	nk594127	_	_	_	_	
198-89	36820-36821	″	_	_	_	_	
198-90	36821-36822	:	_	_	_	_	
198-91	36823-36824	{	_	_	_	_	
198-92	36824-36825	“	_	_	_	_	
198-93	36825-36832	ik71786	_	_	_	_	
198-94	36832-36833	″	_	_	_	_	
198-95	36833-36834	:	_	_	_	_	
198-96	36835-36836	“	_	_	_	_	
198-97	36836-36844	iv678771	_	_	_	_	
198-98	36844-36845	″	_	_	_	_	
198-99	36845-36846	}	_	_	_	_	
198-100	36846-36847	}	_	_	_	_	
198-101	36847-36848	`	_	_	_	_	
198-102	36848-36849	.	_	_	_	_	

#Text=Search:
#Text=About us:
#Text=ScaleGrid is a fully managed database hosting service for
#Text=MongoDB® , Redis™, MySQL, and PostgreSQL
#Text=on public and private clouds.
199-1	36850-36856	Search	_	_	_	_	
199-2	36856-36857	:	_	_	_	_	
199-3	36858-36863	About	_	_	_	_	
199-4	36864-36866	us	_	_	_	_	
199-5	36866-36867	:	_	_	_	_	
199-6	36868-36877	ScaleGrid	_	_	_	_	
199-7	36878-36880	is	_	_	_	_	
199-8	36881-36882	a	_	_	_	_	
199-9	36883-36888	fully	_	_	_	_	
199-10	36889-36896	managed	_	_	_	_	
199-11	36897-36905	database	_	_	_	_	
199-12	36906-36913	hosting	_	_	_	_	
199-13	36914-36921	service	_	_	_	_	
199-14	36922-36925	for	_	_	_	_	
199-15	36926-36933	MongoDB	_	_	_	_	
199-16	36933-36934	®	_	_	_	_	
199-17	36935-36936	,	_	_	_	_	
199-18	36937-36942	Redis	_	_	_	_	
199-19	36942-36943	™	_	_	_	_	
199-20	36943-36944	,	_	_	_	_	
199-21	36945-36950	MySQL	_	_	_	_	
199-22	36950-36951	,	_	_	_	_	
199-23	36952-36955	and	_	_	_	_	
199-24	36956-36966	PostgreSQL	_	_	_	_	
199-25	36967-36969	on	_	_	_	_	
199-26	36970-36976	public	_	_	_	_	
199-27	36977-36980	and	_	_	_	_	
199-28	36981-36988	private	_	_	_	_	
199-29	36989-36995	clouds	_	_	_	_	
199-30	36995-36996	.	_	_	_	_	

#Text=You may also be interested in
#Text=mysqldump Best Practices: Part 2 – Migrations Guide
#Text=ScaleGrid Adds Oracle Cloud for Managed Database Hosting
#Text=Which Is The Best PostgreSQL GUI?
200-1	36997-37000	You	_	_	_	_	
200-2	37001-37004	may	_	_	_	_	
200-3	37005-37009	also	_	_	_	_	
200-4	37010-37012	be	_	_	_	_	
200-5	37013-37023	interested	_	_	_	_	
200-6	37024-37026	in	_	_	_	_	
200-7	37027-37036	mysqldump	_	_	_	_	
200-8	37037-37041	Best	_	_	_	_	
200-9	37042-37051	Practices	_	_	_	_	
200-10	37051-37052	:	_	_	_	_	
200-11	37053-37057	Part	_	_	_	_	
200-12	37058-37059	2	_	_	_	_	
200-13	37060-37061	–	_	_	_	_	
200-14	37062-37072	Migrations	_	_	_	_	
200-15	37073-37078	Guide	_	_	_	_	
200-16	37079-37088	ScaleGrid	_	_	_	_	
200-17	37089-37093	Adds	_	_	_	_	
200-18	37094-37100	Oracle	_	_	_	_	
200-19	37101-37106	Cloud	_	_	_	_	
200-20	37107-37110	for	_	_	_	_	
200-21	37111-37118	Managed	_	_	_	_	
200-22	37119-37127	Database	_	_	_	_	
200-23	37128-37135	Hosting	_	_	_	_	
200-24	37136-37141	Which	_	_	_	_	
200-25	37142-37144	Is	_	_	_	_	
200-26	37145-37148	The	_	_	_	_	
200-27	37149-37153	Best	_	_	_	_	
200-28	37154-37164	PostgreSQL	_	_	_	_	
200-29	37165-37168	GUI	_	_	_	_	
200-30	37168-37169	?	_	_	_	_	

#Text=2021 Comparison
#Text=Oracle Cloud Breakdown – Database Hosting Costs on OCI
#Text=How To Set Up MySQL on DigitalOcean
#Text=0 Shares +1 Tweet Share Share Pin
#Text=ScaleGrid provides a fully managed Database-as-a-Service (DBaaS) solution used by thousands of developers, startups, and enterprise customers including UPS, Polaris, and Adobe.
201-1	37170-37174	2021	_	_	_	_	
201-2	37175-37185	Comparison	_	_	_	_	
201-3	37186-37192	Oracle	_	_	_	_	
201-4	37193-37198	Cloud	_	_	_	_	
201-5	37199-37208	Breakdown	_	_	_	_	
201-6	37209-37210	–	_	_	_	_	
201-7	37211-37219	Database	_	_	_	_	
201-8	37220-37227	Hosting	_	_	_	_	
201-9	37228-37233	Costs	_	_	_	_	
201-10	37234-37236	on	_	_	_	_	
201-11	37237-37240	OCI	_	_	_	_	
201-12	37241-37244	How	_	_	_	_	
201-13	37245-37247	To	_	_	_	_	
201-14	37248-37251	Set	_	_	_	_	
201-15	37252-37254	Up	_	_	_	_	
201-16	37255-37260	MySQL	_	_	_	_	
201-17	37261-37263	on	_	_	_	_	
201-18	37264-37276	DigitalOcean	_	_	_	_	
201-19	37277-37278	0	_	_	_	_	
201-20	37279-37285	Shares	_	_	_	_	
201-21	37286-37287	+	_	_	_	_	
201-22	37287-37288	1	_	_	_	_	
201-23	37289-37294	Tweet	_	_	_	_	
201-24	37295-37300	Share	_	_	_	_	
201-25	37301-37306	Share	_	_	_	_	
201-26	37307-37310	Pin	_	_	_	_	
201-27	37311-37320	ScaleGrid	_	_	_	_	
201-28	37321-37329	provides	_	_	_	_	
201-29	37330-37331	a	_	_	_	_	
201-30	37332-37337	fully	_	_	_	_	
201-31	37338-37345	managed	_	_	_	_	
201-32	37346-37367	Database-as-a-Service	_	_	_	_	
201-33	37368-37369	(	_	_	_	_	
201-34	37369-37374	DBaaS	_	_	_	_	
201-35	37374-37375	)	_	_	_	_	
201-36	37376-37384	solution	_	_	_	_	
201-37	37385-37389	used	_	_	_	_	
201-38	37390-37392	by	_	_	_	_	
201-39	37393-37402	thousands	_	_	_	_	
201-40	37403-37405	of	_	_	_	_	
201-41	37406-37416	developers	_	_	_	_	
201-42	37416-37417	,	_	_	_	_	
201-43	37418-37426	startups	_	_	_	_	
201-44	37426-37427	,	_	_	_	_	
201-45	37428-37431	and	_	_	_	_	
201-46	37432-37442	enterprise	_	_	_	_	
201-47	37443-37452	customers	_	_	_	_	
201-48	37453-37462	including	_	_	_	_	
201-49	37463-37466	UPS	_	_	_	_	
201-50	37466-37467	,	_	_	_	_	
201-51	37468-37475	Polaris	_	_	_	_	
201-52	37475-37476	,	_	_	_	_	
201-53	37477-37480	and	_	_	_	_	
201-54	37481-37486	Adobe	_	_	_	_	
201-55	37486-37487	.	_	_	_	_	

#Text=The ScaleGrid platform supports MongoDB® Database, Redis™, MySQL, and PostgreSQL on both public and private clouds, including Amazon AWS, Microsoft Azure, Google Cloud Platform, DigitalOcean, and VMware, and automates your time-consuming tasks at any scale so you can focus on your product instead of operations.
202-1	37488-37491	The	_	_	_	_	
202-2	37492-37501	ScaleGrid	_	_	_	_	
202-3	37502-37510	platform	_	_	_	_	
202-4	37511-37519	supports	_	_	_	_	
202-5	37520-37527	MongoDB	_	_	_	_	
202-6	37527-37528	®	_	_	_	_	
202-7	37529-37537	Database	_	_	_	_	
202-8	37537-37538	,	_	_	_	_	
202-9	37539-37544	Redis	_	_	_	_	
202-10	37544-37545	™	_	_	_	_	
202-11	37545-37546	,	_	_	_	_	
202-12	37547-37552	MySQL	_	_	_	_	
202-13	37552-37553	,	_	_	_	_	
202-14	37554-37557	and	_	_	_	_	
202-15	37558-37568	PostgreSQL	_	_	_	_	
202-16	37569-37571	on	_	_	_	_	
202-17	37572-37576	both	_	_	_	_	
202-18	37577-37583	public	_	_	_	_	
202-19	37584-37587	and	_	_	_	_	
202-20	37588-37595	private	_	_	_	_	
202-21	37596-37602	clouds	_	_	_	_	
202-22	37602-37603	,	_	_	_	_	
202-23	37604-37613	including	_	_	_	_	
202-24	37614-37620	Amazon	_	_	_	_	
202-25	37621-37624	AWS	_	_	_	_	
202-26	37624-37625	,	_	_	_	_	
202-27	37626-37635	Microsoft	_	_	_	_	
202-28	37636-37641	Azure	_	_	_	_	
202-29	37641-37642	,	_	_	_	_	
202-30	37643-37649	Google	_	_	_	_	
202-31	37650-37655	Cloud	_	_	_	_	
202-32	37656-37664	Platform	_	_	_	_	
202-33	37664-37665	,	_	_	_	_	
202-34	37666-37678	DigitalOcean	_	_	_	_	
202-35	37678-37679	,	_	_	_	_	
202-36	37680-37683	and	_	_	_	_	
202-37	37684-37690	VMware	_	_	_	_	
202-38	37690-37691	,	_	_	_	_	
202-39	37692-37695	and	_	_	_	_	
202-40	37696-37705	automates	_	_	_	_	
202-41	37706-37710	your	_	_	_	_	
202-42	37711-37725	time-consuming	_	_	_	_	
202-43	37726-37731	tasks	_	_	_	_	
202-44	37732-37734	at	_	_	_	_	
202-45	37735-37738	any	_	_	_	_	
202-46	37739-37744	scale	_	_	_	_	
202-47	37745-37747	so	_	_	_	_	
202-48	37748-37751	you	_	_	_	_	
202-49	37752-37755	can	_	_	_	_	
202-50	37756-37761	focus	_	_	_	_	
202-51	37762-37764	on	_	_	_	_	
202-52	37765-37769	your	_	_	_	_	
202-53	37770-37777	product	_	_	_	_	
202-54	37778-37785	instead	_	_	_	_	
202-55	37786-37788	of	_	_	_	_	
202-56	37789-37799	operations	_	_	_	_	
202-57	37799-37800	.	_	_	_	_	

#Text=Start a FREE 30-Day Trial
#Text=MongoDB
#Text=Compare MongoDB DBaaS AWS Azure DigitalOcean
#Text=Redis™
#Text=Compare Redis™ DBaaS AWS
#Text=Azure
#Text=DigitalOcean
#Text=Google Cloud Platform
#Text=MySQL
#Text=Compare MySQL DBaaS AWS Azure
#Text=DigitalOcean
#Text=Google Cloud Platform
#Text=PostgreSQL
#Text=Compare PostgreSQL DBaaS AWS Azure
#Text=DigitalOcean
#Text=Google Cloud Platform
#Text=Pricing
#Text=Startup Program
#Text=Switching Providers
#Text=About Us
#Text=Customer Stories
#Text=Press
#Text=Contact
#Text=Email support@scalegrid.io
#Text=Resources
#Text=Blog
#Text=Documentation
#Text=Support Status
#Text=API Reference
#Text=Terms of Service
#Text=GDPR DPA
#Text=CCPA DPA
#Text=Privacy Policy Subprocessors
#Text=MONGO®, MongoDB® and MongoDB® & Design are registered trademarks of MongoDB®, Inc.
203-1	37801-37806	Start	_	_	_	_	
203-2	37807-37808	a	_	_	_	_	
203-3	37809-37813	FREE	_	_	_	_	
203-4	37814-37816	30	_	_	_	_	
203-5	37816-37817	-	_	_	_	_	
203-6	37817-37820	Day	_	_	_	_	
203-7	37821-37826	Trial	_	_	_	_	
203-8	37827-37834	MongoDB	_	_	_	_	
203-9	37835-37842	Compare	_	_	_	_	
203-10	37843-37850	MongoDB	_	_	_	_	
203-11	37851-37856	DBaaS	_	_	_	_	
203-12	37857-37860	AWS	_	_	_	_	
203-13	37861-37866	Azure	_	_	_	_	
203-14	37867-37879	DigitalOcean	_	_	_	_	
203-15	37880-37885	Redis	_	_	_	_	
203-16	37885-37886	™	_	_	_	_	
203-17	37887-37894	Compare	_	_	_	_	
203-18	37895-37900	Redis	_	_	_	_	
203-19	37900-37901	™	_	_	_	_	
203-20	37902-37907	DBaaS	_	_	_	_	
203-21	37908-37911	AWS	_	_	_	_	
203-22	37912-37917	Azure	_	_	_	_	
203-23	37918-37930	DigitalOcean	_	_	_	_	
203-24	37931-37937	Google	_	_	_	_	
203-25	37938-37943	Cloud	_	_	_	_	
203-26	37944-37952	Platform	_	_	_	_	
203-27	37953-37958	MySQL	_	_	_	_	
203-28	37959-37966	Compare	_	_	_	_	
203-29	37967-37972	MySQL	_	_	_	_	
203-30	37973-37978	DBaaS	_	_	_	_	
203-31	37979-37982	AWS	_	_	_	_	
203-32	37983-37988	Azure	_	_	_	_	
203-33	37989-38001	DigitalOcean	_	_	_	_	
203-34	38002-38008	Google	_	_	_	_	
203-35	38009-38014	Cloud	_	_	_	_	
203-36	38015-38023	Platform	_	_	_	_	
203-37	38024-38034	PostgreSQL	_	_	_	_	
203-38	38035-38042	Compare	_	_	_	_	
203-39	38043-38053	PostgreSQL	_	_	_	_	
203-40	38054-38059	DBaaS	_	_	_	_	
203-41	38060-38063	AWS	_	_	_	_	
203-42	38064-38069	Azure	_	_	_	_	
203-43	38070-38082	DigitalOcean	_	_	_	_	
203-44	38083-38089	Google	_	_	_	_	
203-45	38090-38095	Cloud	_	_	_	_	
203-46	38096-38104	Platform	_	_	_	_	
203-47	38105-38112	Pricing	_	_	_	_	
203-48	38113-38120	Startup	_	_	_	_	
203-49	38121-38128	Program	_	_	_	_	
203-50	38129-38138	Switching	_	_	_	_	
203-51	38139-38148	Providers	_	_	_	_	
203-52	38149-38154	About	_	_	_	_	
203-53	38155-38157	Us	_	_	_	_	
203-54	38158-38166	Customer	_	_	_	_	
203-55	38167-38174	Stories	_	_	_	_	
203-56	38175-38180	Press	_	_	_	_	
203-57	38181-38188	Contact	_	_	_	_	
203-58	38189-38194	Email	_	_	_	_	
203-59	38195-38202	support	_	_	_	_	
203-60	38202-38203	@	_	_	_	_	
203-61	38203-38215	scalegrid.io	_	_	_	_	
203-62	38216-38225	Resources	_	_	_	_	
203-63	38226-38230	Blog	_	_	_	_	
203-64	38231-38244	Documentation	_	_	_	_	
203-65	38245-38252	Support	_	_	_	_	
203-66	38253-38259	Status	_	_	_	_	
203-67	38260-38263	API	_	_	_	_	
203-68	38264-38273	Reference	_	_	_	_	
203-69	38274-38279	Terms	_	_	_	_	
203-70	38280-38282	of	_	_	_	_	
203-71	38283-38290	Service	_	_	_	_	
203-72	38291-38295	GDPR	_	_	_	_	
203-73	38296-38299	DPA	_	_	_	_	
203-74	38300-38304	CCPA	_	_	_	_	
203-75	38305-38308	DPA	_	_	_	_	
203-76	38309-38316	Privacy	_	_	_	_	
203-77	38317-38323	Policy	_	_	_	_	
203-78	38324-38337	Subprocessors	_	_	_	_	
203-79	38338-38343	MONGO	_	_	_	_	
203-80	38343-38344	®	_	_	_	_	
203-81	38344-38345	,	_	_	_	_	
203-82	38346-38353	MongoDB	_	_	_	_	
203-83	38353-38354	®	_	_	_	_	
203-84	38355-38358	and	_	_	_	_	
203-85	38359-38366	MongoDB	_	_	_	_	
203-86	38366-38367	®	_	_	_	_	
203-87	38368-38369	&	_	_	_	_	
203-88	38370-38376	Design	_	_	_	_	
203-89	38377-38380	are	_	_	_	_	
203-90	38381-38391	registered	_	_	_	_	
203-91	38392-38402	trademarks	_	_	_	_	
203-92	38403-38405	of	_	_	_	_	
203-93	38406-38413	MongoDB	_	_	_	_	
203-94	38413-38414	®	_	_	_	_	
203-95	38414-38415	,	_	_	_	_	
203-96	38416-38419	Inc	_	_	_	_	
203-97	38419-38420	.	_	_	_	_	

#Text=Redis is a trademark of Redis Labs Ltd.
204-1	38421-38426	Redis	_	_	_	_	
204-2	38427-38429	is	_	_	_	_	
204-3	38430-38431	a	_	_	_	_	
204-4	38432-38441	trademark	_	_	_	_	
204-5	38442-38444	of	_	_	_	_	
204-6	38445-38450	Redis	_	_	_	_	
204-7	38451-38455	Labs	_	_	_	_	
204-8	38456-38459	Ltd	_	_	_	_	
204-9	38459-38460	.	_	_	_	_	

#Text=Any rights therein are reserved to Redis Labs Ltd.
205-1	38461-38464	Any	_	_	_	_	
205-2	38465-38471	rights	_	_	_	_	
205-3	38472-38479	therein	_	_	_	_	
205-4	38480-38483	are	_	_	_	_	
205-5	38484-38492	reserved	_	_	_	_	
205-6	38493-38495	to	_	_	_	_	
205-7	38496-38501	Redis	_	_	_	_	
205-8	38502-38506	Labs	_	_	_	_	
205-9	38507-38510	Ltd	_	_	_	_	
205-10	38510-38511	.	_	_	_	_	

#Text=Any use by ScaleGrid is for referential purposes only and does not indicate any sponsorship, endorsement or affiliation between Redis and ScaleGrid.Greenplum™ is a trademark of Pivotal Software, Inc. in the U.S. and other countries.
206-1	38512-38515	Any	_	_	_	_	
206-2	38516-38519	use	_	_	_	_	
206-3	38520-38522	by	_	_	_	_	
206-4	38523-38532	ScaleGrid	_	_	_	_	
206-5	38533-38535	is	_	_	_	_	
206-6	38536-38539	for	_	_	_	_	
206-7	38540-38551	referential	_	_	_	_	
206-8	38552-38560	purposes	_	_	_	_	
206-9	38561-38565	only	_	_	_	_	
206-10	38566-38569	and	_	_	_	_	
206-11	38570-38574	does	_	_	_	_	
206-12	38575-38578	not	_	_	_	_	
206-13	38579-38587	indicate	_	_	_	_	
206-14	38588-38591	any	_	_	_	_	
206-15	38592-38603	sponsorship	_	_	_	_	
206-16	38603-38604	,	_	_	_	_	
206-17	38605-38616	endorsement	_	_	_	_	
206-18	38617-38619	or	_	_	_	_	
206-19	38620-38631	affiliation	_	_	_	_	
206-20	38632-38639	between	_	_	_	_	
206-21	38640-38645	Redis	_	_	_	_	
206-22	38646-38649	and	_	_	_	_	
206-23	38650-38669	ScaleGrid.Greenplum	_	_	_	_	
206-24	38669-38670	™	_	_	_	_	
206-25	38671-38673	is	_	_	_	_	
206-26	38674-38675	a	_	_	_	_	
206-27	38676-38685	trademark	_	_	_	_	
206-28	38686-38688	of	_	_	_	_	
206-29	38689-38696	Pivotal	_	_	_	_	
206-30	38697-38705	Software	_	_	_	_	
206-31	38705-38706	,	_	_	_	_	
206-32	38707-38710	Inc	_	_	_	_	
206-33	38710-38711	.	_	_	_	_	
206-34	38712-38714	in	_	_	_	_	
206-35	38715-38718	the	_	_	_	_	
206-36	38719-38722	U.S	_	_	_	_	
206-37	38722-38723	.	_	_	_	_	
206-38	38724-38727	and	_	_	_	_	
206-39	38728-38733	other	_	_	_	_	
206-40	38734-38743	countries	_	_	_	_	
206-41	38743-38744	.	_	_	_	_	
