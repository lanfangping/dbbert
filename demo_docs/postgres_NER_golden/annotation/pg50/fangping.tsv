#FORMAT=WebAnno TSV 3.3
#T_SP=custom.Span|label
#T_RL=custom.Relation|label|BT_custom.Span


#Text=Chapter 3. PostGIS AdministrationChapter 3. PostGIS AdministrationPrev   NextChapter 3. PostGIS AdministrationTable of Contents3.1. Performance Tuning3.1.1. Startup3.1.2. Runtime3.2. Configuring raster support3.3. Creating spatial databases3.3.1. Spatially enable database using EXTENSION3.3.2. Spatially enable database without using EXTENSION (discouraged)3.3.3. Create a spatially-enabled database from a template3.4. Upgrading spatial databases3.4.1. Soft upgrade3.4.2. Hard upgrade3.1. Performance Tuning3.1.1. Startup3.1.2. RuntimeTuning for PostGIS performance is much like tuning for any PostgreSQL workload. The only additional consideration is that geometries and rasters are usually large,
1-1	1-8	Chapter	_	_	_	
1-2	8-9	 	_	_	_	
1-3	9-10	3	_	_	_	
1-4	10-11	.	_	_	_	
1-5	11-12	 	_	_	_	
1-6	12-19	PostGIS	_	_	_	
1-7	20-41	AdministrationChapter	_	_	_	
1-8	41-42	 	_	_	_	
1-9	42-43	3	_	_	_	
1-10	43-44	.	_	_	_	
1-11	44-45	 	_	_	_	
1-12	45-52	PostGIS	_	_	_	
1-13	53-71	AdministrationPrev	_	_	_	
1-14	71-74	   	_	_	_	
1-15	74-85	NextChapter	_	_	_	
1-16	85-86	 	_	_	_	
1-17	86-87	3	_	_	_	
1-18	87-88	.	_	_	_	
1-19	88-89	 	_	_	_	
1-20	89-96	PostGIS	_	_	_	
1-21	97-116	AdministrationTable	_	_	_	
1-22	117-119	of	_	_	_	
1-23	120-131	Contents3.1	_	_	_	
1-24	131-132	.	_	_	_	
1-25	133-144	Performance	_	_	_	
1-26	145-156	Tuning3.1.1	_	_	_	
1-27	156-157	.	_	_	_	
1-28	158-170	Startup3.1.2	_	_	_	
1-29	170-171	.	_	_	_	
1-30	172-182	Runtime3.2	_	_	_	
1-31	182-183	.	_	_	_	
1-32	184-195	Configuring	_	_	_	
1-33	196-202	raster	_	_	_	
1-34	203-213	support3.3	_	_	_	
1-35	213-214	.	_	_	_	
1-36	215-223	Creating	_	_	_	
1-37	224-231	spatial	_	_	_	
1-38	232-246	databases3.3.1	_	_	_	
1-39	246-247	.	_	_	_	
1-40	248-257	Spatially	_	_	_	
1-41	258-264	enable	_	_	_	
1-42	265-273	database	_	_	_	
1-43	274-279	using	_	_	_	
1-44	280-294	EXTENSION3.3.2	_	_	_	
1-45	294-295	.	_	_	_	
1-46	296-305	Spatially	_	_	_	
1-47	306-312	enable	_	_	_	
1-48	313-321	database	_	_	_	
1-49	322-329	without	_	_	_	
1-50	330-335	using	_	_	_	
1-51	336-345	EXTENSION	_	_	_	
1-52	346-347	(	_	_	_	
1-53	347-358	discouraged	_	_	_	
1-54	358-359	)	_	_	_	
1-55	359-364	3.3.3	_	_	_	
1-56	364-365	.	_	_	_	
1-57	366-372	Create	_	_	_	
1-58	373-374	a	_	_	_	
1-59	375-392	spatially-enabled	_	_	_	
1-60	393-401	database	_	_	_	
1-61	402-406	from	_	_	_	
1-62	407-408	a	_	_	_	
1-63	409-420	template3.4	_	_	_	
1-64	420-421	.	_	_	_	
1-65	422-431	Upgrading	_	_	_	
1-66	432-439	spatial	_	_	_	
1-67	440-454	databases3.4.1	_	_	_	
1-68	454-455	.	_	_	_	
1-69	456-460	Soft	_	_	_	
1-70	461-473	upgrade3.4.2	_	_	_	
1-71	473-474	.	_	_	_	
1-72	475-479	Hard	_	_	_	
1-73	480-490	upgrade3.1	_	_	_	
1-74	490-491	.	_	_	_	
1-75	491-492	 	_	_	_	
1-76	492-503	Performance	_	_	_	
1-77	504-515	Tuning3.1.1	_	_	_	
1-78	515-516	.	_	_	_	
1-79	517-529	Startup3.1.2	_	_	_	
1-80	529-530	.	_	_	_	
1-81	531-544	RuntimeTuning	_	_	_	
1-82	545-548	for	_	_	_	
1-83	549-556	PostGIS	_	_	_	
1-84	557-568	performance	_	_	_	
1-85	569-571	is	_	_	_	
1-86	572-576	much	_	_	_	
1-87	577-581	like	_	_	_	
1-88	582-588	tuning	_	_	_	
1-89	589-592	for	_	_	_	
1-90	593-596	any	_	_	_	
1-91	597-607	PostgreSQL	_	_	_	
1-92	608-616	workload	_	_	_	
1-93	616-617	.	_	_	_	
1-94	618-621	The	_	_	_	
1-95	622-626	only	_	_	_	
1-96	627-637	additional	_	_	_	
1-97	638-651	consideration	_	_	_	
1-98	652-654	is	_	_	_	
1-99	655-659	that	_	_	_	
1-100	660-670	geometries	_	_	_	
1-101	671-674	and	_	_	_	
1-102	675-682	rasters	_	_	_	
1-103	683-686	are	_	_	_	
1-104	687-694	usually	_	_	_	
1-105	695-700	large	_	_	_	
1-106	700-701	,	_	_	_	

#Text=so memory-related optimizations generally have more of an impact on PostGIS than other types of PostgreSQL queries.For general details about optimizing PostgreSQL, refer to Tuning your PostgreSQL Server.For PostgreSQL 9.4+ configuration can be set at the server level without touching postgresql.conf or postgresql.auto.conf by using the ALTER SYSTEM command.ALTER SYSTEM SET work_mem = '256MB'; -- this forces non-startup configs to take effect for new connections SELECT pg_reload_conf();
2-1	702-704	so	_	_	_	
2-2	705-719	memory-related	_	_	_	
2-3	720-733	optimizations	_	_	_	
2-4	734-743	generally	_	_	_	
2-5	744-748	have	_	_	_	
2-6	749-753	more	_	_	_	
2-7	754-756	of	_	_	_	
2-8	757-759	an	_	_	_	
2-9	760-766	impact	_	_	_	
2-10	767-769	on	_	_	_	
2-11	770-777	PostGIS	_	_	_	
2-12	778-782	than	_	_	_	
2-13	783-788	other	_	_	_	
2-14	789-794	types	_	_	_	
2-15	795-797	of	_	_	_	
2-16	798-808	PostgreSQL	_	_	_	
2-17	809-820	queries.For	_	_	_	
2-18	821-828	general	_	_	_	
2-19	829-836	details	_	_	_	
2-20	837-842	about	_	_	_	
2-21	843-853	optimizing	_	_	_	
2-22	854-864	PostgreSQL	_	_	_	
2-23	864-865	,	_	_	_	
2-24	866-871	refer	_	_	_	
2-25	872-874	to	_	_	_	
2-26	875-881	Tuning	_	_	_	
2-27	882-886	your	_	_	_	
2-28	887-897	PostgreSQL	_	_	_	
2-29	898-908	Server.For	_	_	_	
2-30	909-919	PostgreSQL	_	_	_	
2-31	920-923	9.4	_	_	_	
2-32	923-924	+	_	_	_	
2-33	925-938	configuration	_	_	_	
2-34	939-942	can	_	_	_	
2-35	943-945	be	_	_	_	
2-36	946-949	set	_	_	_	
2-37	950-952	at	_	_	_	
2-38	953-956	the	_	_	_	
2-39	957-963	server	_	_	_	
2-40	964-969	level	_	_	_	
2-41	970-977	without	_	_	_	
2-42	978-986	touching	_	_	_	
2-43	987-1002	postgresql.conf	_	_	_	
2-44	1003-1005	or	_	_	_	
2-45	1006-1026	postgresql.auto.conf	_	_	_	
2-46	1027-1029	by	_	_	_	
2-47	1030-1035	using	_	_	_	
2-48	1036-1039	the	_	_	_	
2-49	1040-1045	ALTER	_	_	_	
2-50	1046-1052	SYSTEM	_	_	_	
2-51	1053-1066	command.ALTER	_	_	_	
2-52	1067-1073	SYSTEM	_	_	_	
2-53	1074-1077	SET	_	_	_	
2-54	1078-1086	work_mem	PARAM	_	_	
2-55	1087-1088	=	_	_	_	
2-56	1089-1090	'	_	_	_	
2-57	1090-1095	256MB	VALUE	Equal to	2-54	
2-58	1095-1096	'	_	_	_	
2-59	1096-1097	;	_	_	_	
2-60	1098-1099	-	_	_	_	
2-61	1099-1100	-	_	_	_	
2-62	1101-1105	this	_	_	_	
2-63	1106-1112	forces	_	_	_	
2-64	1113-1124	non-startup	_	_	_	
2-65	1125-1132	configs	_	_	_	
2-66	1133-1135	to	_	_	_	
2-67	1136-1140	take	_	_	_	
2-68	1141-1147	effect	_	_	_	
2-69	1148-1151	for	_	_	_	
2-70	1152-1155	new	_	_	_	
2-71	1156-1167	connections	_	_	_	
2-72	1168-1174	SELECT	_	_	_	
2-73	1175-1189	pg_reload_conf	_	_	_	
2-74	1189-1190	(	_	_	_	
2-75	1190-1191	)	_	_	_	
2-76	1191-1192	;	_	_	_	

#Text=-- show current setting value -- use SHOW ALL to see all settings SHOW work_mem;In addition to the Postgres settings, PostGIS has some custom settings which are listed in Section 5.23, “Grand Unified Custom Variables (GUCs)”.3.1.1. Startup
3-1	1193-1194	-	_	_	_	
3-2	1194-1195	-	_	_	_	
3-3	1196-1200	show	_	_	_	
3-4	1201-1208	current	_	_	_	
3-5	1209-1216	setting	_	_	_	
3-6	1217-1222	value	_	_	_	
3-7	1223-1224	-	_	_	_	
3-8	1224-1225	-	_	_	_	
3-9	1226-1229	use	_	_	_	
3-10	1230-1234	SHOW	_	_	_	
3-11	1235-1238	ALL	_	_	_	
3-12	1239-1241	to	_	_	_	
3-13	1242-1245	see	_	_	_	
3-14	1246-1249	all	_	_	_	
3-15	1250-1258	settings	_	_	_	
3-16	1259-1263	SHOW	_	_	_	
3-17	1264-1272	work_mem	_	_	_	
3-18	1272-1273	;	_	_	_	
3-19	1273-1275	In	_	_	_	
3-20	1276-1284	addition	_	_	_	
3-21	1285-1287	to	_	_	_	
3-22	1288-1291	the	_	_	_	
3-23	1292-1300	Postgres	_	_	_	
3-24	1301-1309	settings	_	_	_	
3-25	1309-1310	,	_	_	_	
3-26	1311-1318	PostGIS	_	_	_	
3-27	1319-1322	has	_	_	_	
3-28	1323-1327	some	_	_	_	
3-29	1328-1334	custom	_	_	_	
3-30	1335-1343	settings	_	_	_	
3-31	1344-1349	which	_	_	_	
3-32	1350-1353	are	_	_	_	
3-33	1354-1360	listed	_	_	_	
3-34	1361-1363	in	_	_	_	
3-35	1364-1371	Section	_	_	_	
3-36	1371-1372	 	_	_	_	
3-37	1372-1376	5.23	_	_	_	
3-38	1376-1377	,	_	_	_	
3-39	1378-1379	“	_	_	_	
3-40	1379-1384	Grand	_	_	_	
3-41	1385-1392	Unified	_	_	_	
3-42	1393-1399	Custom	_	_	_	
3-43	1400-1409	Variables	_	_	_	
3-44	1410-1411	(	_	_	_	
3-45	1411-1415	GUCs	_	_	_	
3-46	1415-1416	)	_	_	_	
3-47	1416-1417	”	_	_	_	
3-48	1417-1423	.3.1.1	_	_	_	
3-49	1423-1424	.	_	_	_	
3-50	1424-1425	 	_	_	_	
3-51	1425-1432	Startup	_	_	_	

#Text=These settings are configured in postgresql.conf: constraint_exclusion Default: partition This is generally used for table partitioning. The default for this is set to "partition" which is ideal for PostgreSQL 8.4 and above since it will force the planner to only analyze tables for constraint consideration if they are in an inherited hierarchy
4-1	1433-1438	These	_	_	_	
4-2	1439-1447	settings	_	_	_	
4-3	1448-1451	are	_	_	_	
4-4	1452-1462	configured	_	_	_	
4-5	1463-1465	in	_	_	_	
4-6	1466-1481	postgresql.conf	_	_	_	
4-7	1481-1482	:	_	_	_	
4-8	1483-1503	constraint_exclusion	_	_	_	
4-9	1504-1511	Default	_	_	_	
4-10	1511-1512	:	_	_	_	
4-11	1513-1522	partition	_	_	_	
4-12	1523-1527	This	_	_	_	
4-13	1528-1530	is	_	_	_	
4-14	1531-1540	generally	_	_	_	
4-15	1541-1545	used	_	_	_	
4-16	1546-1549	for	_	_	_	
4-17	1550-1555	table	_	_	_	
4-18	1556-1568	partitioning	_	_	_	
4-19	1568-1569	.	_	_	_	
4-20	1570-1573	The	_	_	_	
4-21	1574-1581	default	_	_	_	
4-22	1582-1585	for	_	_	_	
4-23	1586-1590	this	_	_	_	
4-24	1591-1593	is	_	_	_	
4-25	1594-1597	set	_	_	_	
4-26	1598-1600	to	_	_	_	
4-27	1601-1602	"	_	_	_	
4-28	1602-1611	partition	_	_	_	
4-29	1611-1612	"	_	_	_	
4-30	1613-1618	which	_	_	_	
4-31	1619-1621	is	_	_	_	
4-32	1622-1627	ideal	_	_	_	
4-33	1628-1631	for	_	_	_	
4-34	1632-1642	PostgreSQL	_	_	_	
4-35	1643-1646	8.4	_	_	_	
4-36	1647-1650	and	_	_	_	
4-37	1651-1656	above	_	_	_	
4-38	1657-1662	since	_	_	_	
4-39	1663-1665	it	_	_	_	
4-40	1666-1670	will	_	_	_	
4-41	1671-1676	force	_	_	_	
4-42	1677-1680	the	_	_	_	
4-43	1681-1688	planner	_	_	_	
4-44	1689-1691	to	_	_	_	
4-45	1692-1696	only	_	_	_	
4-46	1697-1704	analyze	_	_	_	
4-47	1705-1711	tables	_	_	_	
4-48	1712-1715	for	_	_	_	
4-49	1716-1726	constraint	_	_	_	
4-50	1727-1740	consideration	_	_	_	
4-51	1741-1743	if	_	_	_	
4-52	1744-1748	they	_	_	_	
4-53	1749-1752	are	_	_	_	
4-54	1753-1755	in	_	_	_	
4-55	1756-1758	an	_	_	_	
4-56	1759-1768	inherited	_	_	_	
4-57	1769-1778	hierarchy	_	_	_	

#Text=and not pay the planner penalty otherwise. shared_buffers Default: ~128MB in PostgreSQL 9.6 Set to about 25% to 40% of available RAM. On windows you may not be able to set as high. max_worker_processes
5-1	1779-1782	and	_	_	_	
5-2	1783-1786	not	_	_	_	
5-3	1787-1790	pay	_	_	_	
5-4	1791-1794	the	_	_	_	
5-5	1795-1802	planner	_	_	_	
5-6	1803-1810	penalty	_	_	_	
5-7	1811-1820	otherwise	_	_	_	
5-8	1820-1821	.	_	_	_	
5-9	1822-1836	shared_buffers	PARAM	_	_	
5-10	1837-1844	Default	_	_	_	
5-11	1844-1845	:	_	_	_	
5-12	1846-1847	~	_	_	_	
5-13	1847-1852	128MB	VALUE	Equal to	5-9	
5-14	1853-1855	in	_	_	_	
5-15	1856-1866	PostgreSQL	_	_	_	
5-16	1867-1870	9.6	_	_	_	
5-17	1871-1874	Set	_	_	_	
5-18	1875-1877	to	_	_	_	
5-19	1878-1883	about	_	_	_	
5-20	1884-1887	25%	VALUE	Relative to	5-9	
5-21	1888-1890	to	_	_	_	
5-22	1891-1894	40%	VALUE	Relative to	5-9	
5-23	1895-1897	of	_	_	_	
5-24	1898-1907	available	_	_	_	
5-25	1908-1911	RAM	_	_	_	
5-26	1911-1912	.	_	_	_	
5-27	1913-1915	On	_	_	_	
5-28	1916-1923	windows	_	_	_	
5-29	1924-1927	you	_	_	_	
5-30	1928-1931	may	_	_	_	
5-31	1932-1935	not	_	_	_	
5-32	1936-1938	be	_	_	_	
5-33	1939-1943	able	_	_	_	
5-34	1944-1946	to	_	_	_	
5-35	1947-1950	set	_	_	_	
5-36	1951-1953	as	_	_	_	
5-37	1954-1958	high	_	_	_	
5-38	1958-1959	.	_	_	_	
5-39	1960-1980	max_worker_processes	_	_	_	

#Text=This setting is only available for PostgreSQL 9.4+. For PostgreSQL 9.6+ this setting has additional importance in that it controls the max number of processes you can have for parallel queries. Default: 8 Sets the maximum number of background processes that the system can support. This parameter can only be set at
6-1	1981-1985	This	_	_	_	
6-2	1986-1993	setting	_	_	_	
6-3	1994-1996	is	_	_	_	
6-4	1997-2001	only	_	_	_	
6-5	2002-2011	available	_	_	_	
6-6	2012-2015	for	_	_	_	
6-7	2016-2026	PostgreSQL	_	_	_	
6-8	2027-2030	9.4	_	_	_	
6-9	2030-2031	+	_	_	_	
6-10	2031-2032	.	_	_	_	
6-11	2033-2036	For	_	_	_	
6-12	2037-2047	PostgreSQL	_	_	_	
6-13	2048-2051	9.6	_	_	_	
6-14	2051-2052	+	_	_	_	
6-15	2053-2057	this	_	_	_	
6-16	2058-2065	setting	_	_	_	
6-17	2066-2069	has	_	_	_	
6-18	2070-2080	additional	_	_	_	
6-19	2081-2091	importance	_	_	_	
6-20	2092-2094	in	_	_	_	
6-21	2095-2099	that	_	_	_	
6-22	2100-2102	it	_	_	_	
6-23	2103-2111	controls	_	_	_	
6-24	2112-2115	the	_	_	_	
6-25	2116-2119	max	_	_	_	
6-26	2120-2126	number	_	_	_	
6-27	2127-2129	of	_	_	_	
6-28	2130-2139	processes	_	_	_	
6-29	2140-2143	you	_	_	_	
6-30	2144-2147	can	_	_	_	
6-31	2148-2152	have	_	_	_	
6-32	2153-2156	for	_	_	_	
6-33	2157-2165	parallel	_	_	_	
6-34	2166-2173	queries	_	_	_	
6-35	2173-2174	.	_	_	_	
6-36	2175-2182	Default	_	_	_	
6-37	2182-2183	:	_	_	_	
6-38	2184-2185	8	_	_	_	
6-39	2186-2190	Sets	_	_	_	
6-40	2191-2194	the	_	_	_	
6-41	2195-2202	maximum	_	_	_	
6-42	2203-2209	number	_	_	_	
6-43	2210-2212	of	_	_	_	
6-44	2213-2223	background	_	_	_	
6-45	2224-2233	processes	_	_	_	
6-46	2234-2238	that	_	_	_	
6-47	2239-2242	the	_	_	_	
6-48	2243-2249	system	_	_	_	
6-49	2250-2253	can	_	_	_	
6-50	2254-2261	support	_	_	_	
6-51	2261-2262	.	_	_	_	
6-52	2263-2267	This	_	_	_	
6-53	2268-2277	parameter	_	_	_	
6-54	2278-2281	can	_	_	_	
6-55	2282-2286	only	_	_	_	
6-56	2287-2289	be	_	_	_	
6-57	2290-2293	set	_	_	_	
6-58	2294-2296	at	_	_	_	

#Text=server start. 3.1.2. Runtime work_mem - sets the size of memory used for sort operations and complex queries Default: 1-4MB Adjust up for large dbs, complex queries, lots of RAM
7-1	2297-2303	server	_	_	_	
7-2	2304-2309	start	_	_	_	
7-3	2309-2310	.	_	_	_	
7-4	2311-2316	3.1.2	_	_	_	
7-5	2316-2317	.	_	_	_	
7-6	2317-2318	 	_	_	_	
7-7	2318-2325	Runtime	_	_	_	
7-8	2326-2334	work_mem	PARAM	_	_	
7-9	2335-2336	-	_	_	_	
7-10	2337-2341	sets	_	_	_	
7-11	2342-2345	the	_	_	_	
7-12	2346-2350	size	_	_	_	
7-13	2351-2353	of	_	_	_	
7-14	2354-2360	memory	_	_	_	
7-15	2361-2365	used	_	_	_	
7-16	2366-2369	for	_	_	_	
7-17	2370-2374	sort	_	_	_	
7-18	2375-2385	operations	_	_	_	
7-19	2386-2389	and	_	_	_	
7-20	2390-2397	complex	_	_	_	
7-21	2398-2405	queries	_	_	_	
7-22	2406-2413	Default	_	_	_	
7-23	2413-2414	:	_	_	_	
7-24	2415-2416	1	VALUE	Equal to	7-8	
7-25	2416-2417	-	_	_	_	
7-26	2417-2420	4MB	VALUE	Equal to	7-8	
7-27	2421-2427	Adjust	_	_	_	
7-28	2428-2430	up	_	_	_	
7-29	2431-2434	for	_	_	_	
7-30	2435-2440	large	_	_	_	
7-31	2441-2444	dbs	_	_	_	
7-32	2444-2445	,	_	_	_	
7-33	2446-2453	complex	_	_	_	
7-34	2454-2461	queries	_	_	_	
7-35	2461-2462	,	_	_	_	
7-36	2463-2467	lots	_	_	_	
7-37	2468-2470	of	_	_	_	
7-38	2471-2474	RAM	_	_	_	

#Text=Adjust down for many concurrent users or low RAM. If you have lots of RAM and few developers: SET work_mem TO '256MB'; maintenance_work_mem - the memory size used for VACUUM, CREATE INDEX, etc. Default: 16-64MB
8-1	2475-2481	Adjust	_	_	_	
8-2	2482-2486	down	_	_	_	
8-3	2487-2490	for	_	_	_	
8-4	2491-2495	many	_	_	_	
8-5	2496-2506	concurrent	_	_	_	
8-6	2507-2512	users	_	_	_	
8-7	2513-2515	or	_	_	_	
8-8	2516-2519	low	_	_	_	
8-9	2520-2523	RAM	_	_	_	
8-10	2523-2524	.	_	_	_	
8-11	2525-2527	If	_	_	_	
8-12	2528-2531	you	_	_	_	
8-13	2532-2536	have	_	_	_	
8-14	2537-2541	lots	_	_	_	
8-15	2542-2544	of	_	_	_	
8-16	2545-2548	RAM	_	_	_	
8-17	2549-2552	and	_	_	_	
8-18	2553-2556	few	_	_	_	
8-19	2557-2567	developers	_	_	_	
8-20	2567-2568	:	_	_	_	
8-21	2569-2572	SET	_	_	_	
8-22	2573-2581	work_mem	PARAM	_	_	
8-23	2582-2584	TO	_	_	_	
8-24	2585-2586	'	_	_	_	
8-25	2586-2591	256MB	VALUE	Equal to	8-22	
8-26	2591-2592	'	_	_	_	
8-27	2592-2593	;	_	_	_	
8-28	2594-2614	maintenance_work_mem	PARAM	_	_	
8-29	2615-2616	-	_	_	_	
8-30	2617-2620	the	_	_	_	
8-31	2621-2627	memory	_	_	_	
8-32	2628-2632	size	_	_	_	
8-33	2633-2637	used	_	_	_	
8-34	2638-2641	for	_	_	_	
8-35	2642-2648	VACUUM	_	_	_	
8-36	2648-2649	,	_	_	_	
8-37	2650-2656	CREATE	_	_	_	
8-38	2657-2662	INDEX	_	_	_	
8-39	2662-2663	,	_	_	_	
8-40	2664-2667	etc	_	_	_	
8-41	2667-2668	.	_	_	_	
8-42	2669-2676	Default	_	_	_	
8-43	2676-2677	:	_	_	_	
8-44	2678-2680	16	VALUE	Equal to	8-28	
8-45	2680-2681	-	_	_	_	
8-46	2681-2685	64MB	VALUE	Equal to	8-28	

#Text=Generally too low - ties up I/O, locks objects while swapping memory Recommend 32MB to 1GB on production servers w/lots of RAM, but depends on the # of concurrent users. If you have lots of RAM and few developers: SET maintenance_work_mem TO '1GB';
9-1	2686-2695	Generally	_	_	_	
9-2	2696-2699	too	_	_	_	
9-3	2700-2703	low	_	_	_	
9-4	2704-2705	-	_	_	_	
9-5	2706-2710	ties	_	_	_	
9-6	2711-2713	up	_	_	_	
9-7	2714-2715	I	_	_	_	
9-8	2715-2716	/	_	_	_	
9-9	2716-2717	O	_	_	_	
9-10	2717-2718	,	_	_	_	
9-11	2719-2724	locks	_	_	_	
9-12	2725-2732	objects	_	_	_	
9-13	2733-2738	while	_	_	_	
9-14	2739-2747	swapping	_	_	_	
9-15	2748-2754	memory	_	_	_	
9-16	2755-2764	Recommend	_	_	_	
9-17	2765-2769	32MB	_	_	_	
9-18	2770-2772	to	_	_	_	
9-19	2773-2776	1GB	_	_	_	
9-20	2777-2779	on	_	_	_	
9-21	2780-2790	production	_	_	_	
9-22	2791-2798	servers	_	_	_	
9-23	2799-2800	w	_	_	_	
9-24	2800-2801	/	_	_	_	
9-25	2801-2805	lots	_	_	_	
9-26	2806-2808	of	_	_	_	
9-27	2809-2812	RAM	_	_	_	
9-28	2812-2813	,	_	_	_	
9-29	2814-2817	but	_	_	_	
9-30	2818-2825	depends	_	_	_	
9-31	2826-2828	on	_	_	_	
9-32	2829-2832	the	_	_	_	
9-33	2833-2834	#	_	_	_	
9-34	2835-2837	of	_	_	_	
9-35	2838-2848	concurrent	_	_	_	
9-36	2849-2854	users	_	_	_	
9-37	2854-2855	.	_	_	_	
9-38	2856-2858	If	_	_	_	
9-39	2859-2862	you	_	_	_	
9-40	2863-2867	have	_	_	_	
9-41	2868-2872	lots	_	_	_	
9-42	2873-2875	of	_	_	_	
9-43	2876-2879	RAM	_	_	_	
9-44	2880-2883	and	_	_	_	
9-45	2884-2887	few	_	_	_	
9-46	2888-2898	developers	_	_	_	
9-47	2898-2899	:	_	_	_	
9-48	2900-2903	SET	_	_	_	
9-49	2904-2924	maintenance_work_mem	PARAM	_	_	
9-50	2925-2927	TO	_	_	_	
9-51	2928-2929	'	_	_	_	
9-52	2929-2932	1GB	VALUE	Equal to	9-49	
9-53	2932-2933	'	_	_	_	
9-54	2933-2934	;	_	_	_	

#Text=max_parallel_workers_per_gather This setting is only available for PostgreSQL 9.6+ and will only affect PostGIS 2.3+, since only PostGIS 2.3+ supports parallel queries. If set to higher than 0, then some queries such as those involving relation functions like ST_Intersects can use multiple processes and can run
10-1	2935-2966	max_parallel_workers_per_gather	PARAM	_	_	
10-2	2967-2971	This	_	_	_	
10-3	2972-2979	setting	_	_	_	
10-4	2980-2982	is	_	_	_	
10-5	2983-2987	only	_	_	_	
10-6	2988-2997	available	_	_	_	
10-7	2998-3001	for	_	_	_	
10-8	3002-3012	PostgreSQL	_	_	_	
10-9	3013-3016	9.6	_	_	_	
10-10	3016-3017	+	_	_	_	
10-11	3018-3021	and	_	_	_	
10-12	3022-3026	will	_	_	_	
10-13	3027-3031	only	_	_	_	
10-14	3032-3038	affect	_	_	_	
10-15	3039-3046	PostGIS	_	_	_	
10-16	3047-3050	2.3	_	_	_	
10-17	3050-3051	+	_	_	_	
10-18	3051-3052	,	_	_	_	
10-19	3053-3058	since	_	_	_	
10-20	3059-3063	only	_	_	_	
10-21	3064-3071	PostGIS	_	_	_	
10-22	3072-3075	2.3	_	_	_	
10-23	3075-3076	+	_	_	_	
10-24	3077-3085	supports	_	_	_	
10-25	3086-3094	parallel	_	_	_	
10-26	3095-3102	queries	_	_	_	
10-27	3102-3103	.	_	_	_	
10-28	3104-3106	If	_	_	_	
10-29	3107-3110	set	_	_	_	
10-30	3111-3113	to	_	_	_	
10-31	3114-3120	higher	_	_	_	
10-32	3121-3125	than	_	_	_	
10-33	3126-3127	0	VALUE	Equal to	10-1	
10-34	3127-3128	,	_	_	_	
10-35	3129-3133	then	_	_	_	
10-36	3134-3138	some	_	_	_	
10-37	3139-3146	queries	_	_	_	
10-38	3147-3151	such	_	_	_	
10-39	3152-3154	as	_	_	_	
10-40	3155-3160	those	_	_	_	
10-41	3161-3170	involving	_	_	_	
10-42	3171-3179	relation	_	_	_	
10-43	3180-3189	functions	_	_	_	
10-44	3190-3194	like	_	_	_	
10-45	3195-3208	ST_Intersects	_	_	_	
10-46	3209-3212	can	_	_	_	
10-47	3213-3216	use	_	_	_	
10-48	3217-3225	multiple	_	_	_	
10-49	3226-3235	processes	_	_	_	
10-50	3236-3239	and	_	_	_	
10-51	3240-3243	can	_	_	_	
10-52	3244-3247	run	_	_	_	

#Text=more than twice as fast when doing so. If you have a lot of processors to spare, you should change the value of this to as many processors as you have. Also make sure to bump up max_worker_processes to at least as high as this number. Default: 0 Sets the maximum number of workers that can be started
11-1	3248-3252	more	_	_	_	
11-2	3253-3257	than	_	_	_	
11-3	3258-3263	twice	_	_	_	
11-4	3264-3266	as	_	_	_	
11-5	3267-3271	fast	_	_	_	
11-6	3272-3276	when	_	_	_	
11-7	3277-3282	doing	_	_	_	
11-8	3283-3285	so	_	_	_	
11-9	3285-3286	.	_	_	_	
11-10	3287-3289	If	_	_	_	
11-11	3290-3293	you	_	_	_	
11-12	3294-3298	have	_	_	_	
11-13	3299-3300	a	_	_	_	
11-14	3301-3304	lot	_	_	_	
11-15	3305-3307	of	_	_	_	
11-16	3308-3318	processors	_	_	_	
11-17	3319-3321	to	_	_	_	
11-18	3322-3327	spare	_	_	_	
11-19	3327-3328	,	_	_	_	
11-20	3329-3332	you	_	_	_	
11-21	3333-3339	should	_	_	_	
11-22	3340-3346	change	_	_	_	
11-23	3347-3350	the	_	_	_	
11-24	3351-3356	value	_	_	_	
11-25	3357-3359	of	_	_	_	
11-26	3360-3364	this	_	_	_	
11-27	3365-3367	to	_	_	_	
11-28	3368-3370	as	_	_	_	
11-29	3371-3375	many	_	_	_	
11-30	3376-3386	processors	_	_	_	
11-31	3387-3389	as	_	_	_	
11-32	3390-3393	you	_	_	_	
11-33	3394-3398	have	_	_	_	
11-34	3398-3399	.	_	_	_	
11-35	3400-3404	Also	_	_	_	
11-36	3405-3409	make	_	_	_	
11-37	3410-3414	sure	_	_	_	
11-38	3415-3417	to	_	_	_	
11-39	3418-3422	bump	_	_	_	
11-40	3423-3425	up	_	_	_	
11-41	3426-3446	max_worker_processes	PARAM	_	_	
11-42	3447-3449	to	_	_	_	
11-43	3450-3452	at	_	_	_	
11-44	3453-3458	least	_	_	_	
11-45	3459-3461	as	_	_	_	
11-46	3462-3466	high	_	_	_	
11-47	3467-3469	as	_	_	_	
11-48	3470-3474	this	_	_	_	
11-49	3475-3481	number	_	_	_	
11-50	3481-3482	.	_	_	_	
11-51	3483-3490	Default	_	_	_	
11-52	3490-3491	:	_	_	_	
11-53	3492-3493	0	VALUE	Equal to	11-41	
11-54	3494-3498	Sets	_	_	_	
11-55	3499-3502	the	_	_	_	
11-56	3503-3510	maximum	_	_	_	
11-57	3511-3517	number	_	_	_	
11-58	3518-3520	of	_	_	_	
11-59	3521-3528	workers	_	_	_	
11-60	3529-3533	that	_	_	_	
11-61	3534-3537	can	_	_	_	
11-62	3538-3540	be	_	_	_	
11-63	3541-3548	started	_	_	_	

#Text=by a single Gather node. Parallel workers are taken from the pool of processes established by max_worker_processes. Note that the requested number of workers may not actually be available at run time. If this occurs, the plan will run with fewer workers than expected, which may
12-1	3549-3551	by	_	_	_	
12-2	3552-3553	a	_	_	_	
12-3	3554-3560	single	_	_	_	
12-4	3561-3567	Gather	_	_	_	
12-5	3568-3572	node	_	_	_	
12-6	3572-3573	.	_	_	_	
12-7	3574-3582	Parallel	_	_	_	
12-8	3583-3590	workers	_	_	_	
12-9	3591-3594	are	_	_	_	
12-10	3595-3600	taken	_	_	_	
12-11	3601-3605	from	_	_	_	
12-12	3606-3609	the	_	_	_	
12-13	3610-3614	pool	_	_	_	
12-14	3615-3617	of	_	_	_	
12-15	3618-3627	processes	_	_	_	
12-16	3628-3639	established	_	_	_	
12-17	3640-3642	by	_	_	_	
12-18	3643-3663	max_worker_processes	_	_	_	
12-19	3663-3664	.	_	_	_	
12-20	3665-3669	Note	_	_	_	
12-21	3670-3674	that	_	_	_	
12-22	3675-3678	the	_	_	_	
12-23	3679-3688	requested	_	_	_	
12-24	3689-3695	number	_	_	_	
12-25	3696-3698	of	_	_	_	
12-26	3699-3706	workers	_	_	_	
12-27	3707-3710	may	_	_	_	
12-28	3711-3714	not	_	_	_	
12-29	3715-3723	actually	_	_	_	
12-30	3724-3726	be	_	_	_	
12-31	3727-3736	available	_	_	_	
12-32	3737-3739	at	_	_	_	
12-33	3740-3743	run	_	_	_	
12-34	3744-3748	time	_	_	_	
12-35	3748-3749	.	_	_	_	
12-36	3750-3752	If	_	_	_	
12-37	3753-3757	this	_	_	_	
12-38	3758-3764	occurs	_	_	_	
12-39	3764-3765	,	_	_	_	
12-40	3766-3769	the	_	_	_	
12-41	3770-3774	plan	_	_	_	
12-42	3775-3779	will	_	_	_	
12-43	3780-3783	run	_	_	_	
12-44	3784-3788	with	_	_	_	
12-45	3789-3794	fewer	_	_	_	
12-46	3795-3802	workers	_	_	_	
12-47	3803-3807	than	_	_	_	
12-48	3808-3816	expected	_	_	_	
12-49	3816-3817	,	_	_	_	
12-50	3818-3823	which	_	_	_	
12-51	3824-3827	may	_	_	_	

#Text=be inefficient. Setting this value to 0, which is the default, disables parallel query execution. 3.2. Configuring raster support If you enabled raster support you may want to read below how to properly configure it.
13-1	3828-3830	be	_	_	_	
13-2	3831-3842	inefficient	_	_	_	
13-3	3842-3843	.	_	_	_	
13-4	3844-3851	Setting	_	_	_	
13-5	3852-3856	this	_	_	_	
13-6	3857-3862	value	_	_	_	
13-7	3863-3865	to	_	_	_	
13-8	3866-3867	0	_	_	_	
13-9	3867-3868	,	_	_	_	
13-10	3869-3874	which	_	_	_	
13-11	3875-3877	is	_	_	_	
13-12	3878-3881	the	_	_	_	
13-13	3882-3889	default	_	_	_	
13-14	3889-3890	,	_	_	_	
13-15	3891-3899	disables	_	_	_	
13-16	3900-3908	parallel	_	_	_	
13-17	3909-3914	query	_	_	_	
13-18	3915-3924	execution	_	_	_	
13-19	3924-3925	.	_	_	_	
13-20	3926-3929	3.2	_	_	_	
13-21	3929-3930	.	_	_	_	
13-22	3930-3931	 	_	_	_	
13-23	3931-3942	Configuring	_	_	_	
13-24	3943-3949	raster	_	_	_	
13-25	3950-3957	support	_	_	_	
13-26	3958-3960	If	_	_	_	
13-27	3961-3964	you	_	_	_	
13-28	3965-3972	enabled	_	_	_	
13-29	3973-3979	raster	_	_	_	
13-30	3980-3987	support	_	_	_	
13-31	3988-3991	you	_	_	_	
13-32	3992-3995	may	_	_	_	
13-33	3996-4000	want	_	_	_	
13-34	4001-4003	to	_	_	_	
13-35	4004-4008	read	_	_	_	
13-36	4009-4014	below	_	_	_	
13-37	4015-4018	how	_	_	_	
13-38	4019-4021	to	_	_	_	
13-39	4022-4030	properly	_	_	_	
13-40	4031-4040	configure	_	_	_	
13-41	4041-4043	it	_	_	_	
13-42	4043-4044	.	_	_	_	

#Text=As of PostGIS 2.1.3, out-of-db rasters and all raster drivers are disabled by default. In order to re-enable these, you need to set the following environment variables
14-1	4045-4047	As	_	_	_	
14-2	4048-4050	of	_	_	_	
14-3	4051-4058	PostGIS	_	_	_	
14-4	4059-4064	2.1.3	_	_	_	
14-5	4064-4065	,	_	_	_	
14-6	4066-4075	out-of-db	_	_	_	
14-7	4076-4083	rasters	_	_	_	
14-8	4084-4087	and	_	_	_	
14-9	4088-4091	all	_	_	_	
14-10	4092-4098	raster	_	_	_	
14-11	4099-4106	drivers	_	_	_	
14-12	4107-4110	are	_	_	_	
14-13	4111-4119	disabled	_	_	_	
14-14	4120-4122	by	_	_	_	
14-15	4123-4130	default	_	_	_	
14-16	4130-4131	.	_	_	_	
14-17	4132-4134	In	_	_	_	
14-18	4135-4140	order	_	_	_	
14-19	4141-4143	to	_	_	_	
14-20	4144-4153	re-enable	_	_	_	
14-21	4154-4159	these	_	_	_	
14-22	4159-4160	,	_	_	_	
14-23	4161-4164	you	_	_	_	
14-24	4165-4169	need	_	_	_	
14-25	4170-4172	to	_	_	_	
14-26	4173-4176	set	_	_	_	
14-27	4177-4180	the	_	_	_	
14-28	4181-4190	following	_	_	_	
14-29	4191-4202	environment	_	_	_	
14-30	4203-4212	variables	_	_	_	

#Text=POSTGIS_GDAL_ENABLED_DRIVERS and POSTGIS_ENABLE_OUTDB_RASTERS in the server environment. For PostGIS 2.2, you can use the more cross-platform approach of setting the corresponding Section 5.23, “Grand Unified Custom Variables (GUCs)”.If you want to enable offline raster:POSTGIS_ENABLE_OUTDB_RASTERS=1Any other setting or no setting at all will disable out of db rasters.In order to enable all GDAL drivers available in your GDAL install, set this environment variable as followsPOSTGIS_GDAL_ENABLED_DRIVERS=ENABLE_ALLIf you want to only enable specific drivers, set your environment variable as follows:POSTGIS_GDAL_ENABLED_DRIVERS="GTiff PNG JPEG GIF XYZ"If you are on windows, do not quote the driver listSetting environment variables varies depending on OS. For PostgreSQL installed on Ubuntu or Debian via apt-postgresql, the preferred way is to
15-1	4213-4241	POSTGIS_GDAL_ENABLED_DRIVERS	_	_	_	
15-2	4242-4245	and	_	_	_	
15-3	4246-4274	POSTGIS_ENABLE_OUTDB_RASTERS	_	_	_	
15-4	4275-4277	in	_	_	_	
15-5	4278-4281	the	_	_	_	
15-6	4282-4288	server	_	_	_	
15-7	4289-4300	environment	_	_	_	
15-8	4300-4301	.	_	_	_	
15-9	4302-4305	For	_	_	_	
15-10	4306-4313	PostGIS	_	_	_	
15-11	4314-4317	2.2	_	_	_	
15-12	4317-4318	,	_	_	_	
15-13	4319-4322	you	_	_	_	
15-14	4323-4326	can	_	_	_	
15-15	4327-4330	use	_	_	_	
15-16	4331-4334	the	_	_	_	
15-17	4335-4339	more	_	_	_	
15-18	4340-4354	cross-platform	_	_	_	
15-19	4355-4363	approach	_	_	_	
15-20	4364-4366	of	_	_	_	
15-21	4367-4374	setting	_	_	_	
15-22	4375-4378	the	_	_	_	
15-23	4379-4392	corresponding	_	_	_	
15-24	4393-4400	Section	_	_	_	
15-25	4400-4401	 	_	_	_	
15-26	4401-4405	5.23	_	_	_	
15-27	4405-4406	,	_	_	_	
15-28	4407-4408	“	_	_	_	
15-29	4408-4413	Grand	_	_	_	
15-30	4414-4421	Unified	_	_	_	
15-31	4422-4428	Custom	_	_	_	
15-32	4429-4438	Variables	_	_	_	
15-33	4439-4440	(	_	_	_	
15-34	4440-4444	GUCs	_	_	_	
15-35	4444-4445	)	_	_	_	
15-36	4445-4446	”	_	_	_	
15-37	4446-4447	.	_	_	_	
15-38	4447-4449	If	_	_	_	
15-39	4450-4453	you	_	_	_	
15-40	4454-4458	want	_	_	_	
15-41	4459-4461	to	_	_	_	
15-42	4462-4468	enable	_	_	_	
15-43	4469-4476	offline	_	_	_	
15-44	4477-4483	raster	_	_	_	
15-45	4483-4484	:	_	_	_	
15-46	4484-4512	POSTGIS_ENABLE_OUTDB_RASTERS	_	_	_	
15-47	4512-4513	=	_	_	_	
15-48	4513-4517	1Any	_	_	_	
15-49	4518-4523	other	_	_	_	
15-50	4524-4531	setting	_	_	_	
15-51	4532-4534	or	_	_	_	
15-52	4535-4537	no	_	_	_	
15-53	4538-4545	setting	_	_	_	
15-54	4546-4548	at	_	_	_	
15-55	4549-4552	all	_	_	_	
15-56	4553-4557	will	_	_	_	
15-57	4558-4565	disable	_	_	_	
15-58	4566-4569	out	_	_	_	
15-59	4570-4572	of	_	_	_	
15-60	4573-4575	db	_	_	_	
15-61	4576-4586	rasters.In	_	_	_	
15-62	4587-4592	order	_	_	_	
15-63	4593-4595	to	_	_	_	
15-64	4596-4602	enable	_	_	_	
15-65	4603-4606	all	_	_	_	
15-66	4607-4611	GDAL	_	_	_	
15-67	4612-4619	drivers	_	_	_	
15-68	4620-4629	available	_	_	_	
15-69	4630-4632	in	_	_	_	
15-70	4633-4637	your	_	_	_	
15-71	4638-4642	GDAL	_	_	_	
15-72	4643-4650	install	_	_	_	
15-73	4650-4651	,	_	_	_	
15-74	4652-4655	set	_	_	_	
15-75	4656-4660	this	_	_	_	
15-76	4661-4672	environment	_	_	_	
15-77	4673-4681	variable	_	_	_	
15-78	4682-4684	as	_	_	_	
15-79	4685-4720	followsPOSTGIS_GDAL_ENABLED_DRIVERS	_	_	_	
15-80	4720-4721	=	_	_	_	
15-81	4721-4733	ENABLE_ALLIf	_	_	_	
15-82	4734-4737	you	_	_	_	
15-83	4738-4742	want	_	_	_	
15-84	4743-4745	to	_	_	_	
15-85	4746-4750	only	_	_	_	
15-86	4751-4757	enable	_	_	_	
15-87	4758-4766	specific	_	_	_	
15-88	4767-4774	drivers	_	_	_	
15-89	4774-4775	,	_	_	_	
15-90	4776-4779	set	_	_	_	
15-91	4780-4784	your	_	_	_	
15-92	4785-4796	environment	_	_	_	
15-93	4797-4805	variable	_	_	_	
15-94	4806-4808	as	_	_	_	
15-95	4809-4816	follows	_	_	_	
15-96	4816-4817	:	_	_	_	
15-97	4817-4845	POSTGIS_GDAL_ENABLED_DRIVERS	_	_	_	
15-98	4845-4846	=	_	_	_	
15-99	4846-4847	"	_	_	_	
15-100	4847-4852	GTiff	_	_	_	
15-101	4853-4856	PNG	_	_	_	
15-102	4857-4861	JPEG	_	_	_	
15-103	4862-4865	GIF	_	_	_	
15-104	4866-4872	XYZ"If	_	_	_	
15-105	4873-4876	you	_	_	_	
15-106	4877-4880	are	_	_	_	
15-107	4881-4883	on	_	_	_	
15-108	4884-4891	windows	_	_	_	
15-109	4891-4892	,	_	_	_	
15-110	4893-4895	do	_	_	_	
15-111	4896-4899	not	_	_	_	
15-112	4900-4905	quote	_	_	_	
15-113	4906-4909	the	_	_	_	
15-114	4910-4916	driver	_	_	_	
15-115	4917-4928	listSetting	_	_	_	
15-116	4929-4940	environment	_	_	_	
15-117	4941-4950	variables	_	_	_	
15-118	4951-4957	varies	_	_	_	
15-119	4958-4967	depending	_	_	_	
15-120	4968-4970	on	_	_	_	
15-121	4971-4973	OS	_	_	_	
15-122	4973-4974	.	_	_	_	
15-123	4975-4978	For	_	_	_	
15-124	4979-4989	PostgreSQL	_	_	_	
15-125	4990-4999	installed	_	_	_	
15-126	5000-5002	on	_	_	_	
15-127	5003-5009	Ubuntu	_	_	_	
15-128	5010-5012	or	_	_	_	
15-129	5013-5019	Debian	_	_	_	
15-130	5020-5023	via	_	_	_	
15-131	5024-5038	apt-postgresql	_	_	_	
15-132	5038-5039	,	_	_	_	
15-133	5040-5043	the	_	_	_	
15-134	5044-5053	preferred	_	_	_	
15-135	5054-5057	way	_	_	_	
15-136	5058-5060	is	_	_	_	
15-137	5061-5063	to	_	_	_	

#Text=edit /etc/postgresql/10/main/environment where 10 refers to version of PostgreSQL and main refers to the cluster.On windows, if you are running as a service, you can set via System variables which for Windows 7 you can get to by right-clicking on Computer->Properties Advanced System Settings or in explorer navigating to Control Panel\\All Control Panel Items\\System.
16-1	5064-5068	edit	_	_	_	
16-2	5069-5070	/	_	_	_	
16-3	5070-5073	etc	_	_	_	
16-4	5073-5074	/	_	_	_	
16-5	5074-5084	postgresql	_	_	_	
16-6	5084-5085	/	_	_	_	
16-7	5085-5087	10	_	_	_	
16-8	5087-5088	/	_	_	_	
16-9	5088-5092	main	_	_	_	
16-10	5092-5093	/	_	_	_	
16-11	5093-5104	environment	_	_	_	
16-12	5105-5110	where	_	_	_	
16-13	5111-5113	10	_	_	_	
16-14	5114-5120	refers	_	_	_	
16-15	5121-5123	to	_	_	_	
16-16	5124-5131	version	_	_	_	
16-17	5132-5134	of	_	_	_	
16-18	5135-5145	PostgreSQL	_	_	_	
16-19	5146-5149	and	_	_	_	
16-20	5150-5154	main	_	_	_	
16-21	5155-5161	refers	_	_	_	
16-22	5162-5164	to	_	_	_	
16-23	5165-5168	the	_	_	_	
16-24	5169-5179	cluster.On	_	_	_	
16-25	5180-5187	windows	_	_	_	
16-26	5187-5188	,	_	_	_	
16-27	5189-5191	if	_	_	_	
16-28	5192-5195	you	_	_	_	
16-29	5196-5199	are	_	_	_	
16-30	5200-5207	running	_	_	_	
16-31	5208-5210	as	_	_	_	
16-32	5211-5212	a	_	_	_	
16-33	5213-5220	service	_	_	_	
16-34	5220-5221	,	_	_	_	
16-35	5222-5225	you	_	_	_	
16-36	5226-5229	can	_	_	_	
16-37	5230-5233	set	_	_	_	
16-38	5234-5237	via	_	_	_	
16-39	5238-5244	System	_	_	_	
16-40	5245-5254	variables	_	_	_	
16-41	5255-5260	which	_	_	_	
16-42	5261-5264	for	_	_	_	
16-43	5265-5272	Windows	_	_	_	
16-44	5273-5274	7	_	_	_	
16-45	5275-5278	you	_	_	_	
16-46	5279-5282	can	_	_	_	
16-47	5283-5286	get	_	_	_	
16-48	5287-5289	to	_	_	_	
16-49	5290-5292	by	_	_	_	
16-50	5293-5307	right-clicking	_	_	_	
16-51	5308-5310	on	_	_	_	
16-52	5311-5319	Computer	_	_	_	
16-53	5319-5320	-	_	_	_	
16-54	5320-5321	>	_	_	_	
16-55	5321-5331	Properties	_	_	_	
16-56	5332-5340	Advanced	_	_	_	
16-57	5341-5347	System	_	_	_	
16-58	5348-5356	Settings	_	_	_	
16-59	5357-5359	or	_	_	_	
16-60	5360-5362	in	_	_	_	
16-61	5363-5371	explorer	_	_	_	
16-62	5372-5382	navigating	_	_	_	
16-63	5383-5385	to	_	_	_	
16-64	5386-5393	Control	_	_	_	
16-65	5394-5399	Panel	_	_	_	
16-66	5399-5400	\	_	_	_	
16-67	5400-5403	All	_	_	_	
16-68	5404-5411	Control	_	_	_	
16-69	5412-5417	Panel	_	_	_	
16-70	5418-5423	Items	_	_	_	
16-71	5423-5424	\	_	_	_	
16-72	5424-5430	System	_	_	_	
16-73	5430-5431	.	_	_	_	

#Text=Then clicking Advanced System Settings ->Advanced->Environment Variables and adding new system variables.After you set the environment variables, you'll need to restart your PostgreSQL service for the changes to take effect.3.3. Creating spatial databases3.3.1. Spatially enable database using EXTENSION3.3.2. Spatially enable database without using EXTENSION (discouraged)3.3.3. Create a spatially-enabled database from a template3.3.1. Spatially enable database using EXTENSION If you are using PostgreSQL 9.1+ and have compiled and installed the extensions/postgis modules, you can turn a database into a spatial one using the EXTENSION mechanism. Core postgis extension includes geometry, geography,
17-1	5432-5436	Then	_	_	_	
17-2	5437-5445	clicking	_	_	_	
17-3	5446-5454	Advanced	_	_	_	
17-4	5455-5461	System	_	_	_	
17-5	5462-5470	Settings	_	_	_	
17-6	5471-5472	-	_	_	_	
17-7	5472-5473	>	_	_	_	
17-8	5473-5481	Advanced	_	_	_	
17-9	5481-5482	-	_	_	_	
17-10	5482-5483	>	_	_	_	
17-11	5483-5494	Environment	_	_	_	
17-12	5495-5504	Variables	_	_	_	
17-13	5505-5508	and	_	_	_	
17-14	5509-5515	adding	_	_	_	
17-15	5516-5519	new	_	_	_	
17-16	5520-5526	system	_	_	_	
17-17	5527-5542	variables.After	_	_	_	
17-18	5543-5546	you	_	_	_	
17-19	5547-5550	set	_	_	_	
17-20	5551-5554	the	_	_	_	
17-21	5555-5566	environment	_	_	_	
17-22	5567-5576	variables	_	_	_	
17-23	5576-5577	,	_	_	_	
17-24	5578-5584	you'll	_	_	_	
17-25	5585-5589	need	_	_	_	
17-26	5590-5592	to	_	_	_	
17-27	5593-5600	restart	_	_	_	
17-28	5601-5605	your	_	_	_	
17-29	5606-5616	PostgreSQL	_	_	_	
17-30	5617-5624	service	_	_	_	
17-31	5625-5628	for	_	_	_	
17-32	5629-5632	the	_	_	_	
17-33	5633-5640	changes	_	_	_	
17-34	5641-5643	to	_	_	_	
17-35	5644-5648	take	_	_	_	
17-36	5649-5655	effect	_	_	_	
17-37	5655-5659	.3.3	_	_	_	
17-38	5659-5660	.	_	_	_	
17-39	5660-5661	 	_	_	_	
17-40	5661-5669	Creating	_	_	_	
17-41	5670-5677	spatial	_	_	_	
17-42	5678-5692	databases3.3.1	_	_	_	
17-43	5692-5693	.	_	_	_	
17-44	5694-5703	Spatially	_	_	_	
17-45	5704-5710	enable	_	_	_	
17-46	5711-5719	database	_	_	_	
17-47	5720-5725	using	_	_	_	
17-48	5726-5740	EXTENSION3.3.2	_	_	_	
17-49	5740-5741	.	_	_	_	
17-50	5742-5751	Spatially	_	_	_	
17-51	5752-5758	enable	_	_	_	
17-52	5759-5767	database	_	_	_	
17-53	5768-5775	without	_	_	_	
17-54	5776-5781	using	_	_	_	
17-55	5782-5791	EXTENSION	_	_	_	
17-56	5792-5793	(	_	_	_	
17-57	5793-5804	discouraged	_	_	_	
17-58	5804-5805	)	_	_	_	
17-59	5805-5810	3.3.3	_	_	_	
17-60	5810-5811	.	_	_	_	
17-61	5812-5818	Create	_	_	_	
17-62	5819-5820	a	_	_	_	
17-63	5821-5838	spatially-enabled	_	_	_	
17-64	5839-5847	database	_	_	_	
17-65	5848-5852	from	_	_	_	
17-66	5853-5854	a	_	_	_	
17-67	5855-5868	template3.3.1	_	_	_	
17-68	5868-5869	.	_	_	_	
17-69	5869-5870	 	_	_	_	
17-70	5870-5879	Spatially	_	_	_	
17-71	5880-5886	enable	_	_	_	
17-72	5887-5895	database	_	_	_	
17-73	5896-5901	using	_	_	_	
17-74	5902-5911	EXTENSION	_	_	_	
17-75	5912-5914	If	_	_	_	
17-76	5915-5918	you	_	_	_	
17-77	5919-5922	are	_	_	_	
17-78	5923-5928	using	_	_	_	
17-79	5929-5939	PostgreSQL	_	_	_	
17-80	5940-5943	9.1	_	_	_	
17-81	5943-5944	+	_	_	_	
17-82	5945-5948	and	_	_	_	
17-83	5949-5953	have	_	_	_	
17-84	5954-5962	compiled	_	_	_	
17-85	5963-5966	and	_	_	_	
17-86	5967-5976	installed	_	_	_	
17-87	5977-5980	the	_	_	_	
17-88	5981-5991	extensions	_	_	_	
17-89	5991-5992	/	_	_	_	
17-90	5992-5999	postgis	_	_	_	
17-91	6000-6007	modules	_	_	_	
17-92	6007-6008	,	_	_	_	
17-93	6009-6012	you	_	_	_	
17-94	6013-6016	can	_	_	_	
17-95	6017-6021	turn	_	_	_	
17-96	6022-6023	a	_	_	_	
17-97	6024-6032	database	_	_	_	
17-98	6033-6037	into	_	_	_	
17-99	6038-6039	a	_	_	_	
17-100	6040-6047	spatial	_	_	_	
17-101	6048-6051	one	_	_	_	
17-102	6052-6057	using	_	_	_	
17-103	6058-6061	the	_	_	_	
17-104	6062-6071	EXTENSION	_	_	_	
17-105	6072-6081	mechanism	_	_	_	
17-106	6081-6082	.	_	_	_	
17-107	6083-6087	Core	_	_	_	
17-108	6088-6095	postgis	_	_	_	
17-109	6096-6105	extension	_	_	_	
17-110	6106-6114	includes	_	_	_	
17-111	6115-6123	geometry	_	_	_	
17-112	6123-6124	,	_	_	_	
17-113	6125-6134	geography	_	_	_	
17-114	6134-6135	,	_	_	_	

#Text=spatial_ref_sys and all the functions and comments. Raster and topology are packaged as a separate extension. Run the following SQL snippet in the database you want to enable spatially: CREATE EXTENSION IF NOT EXISTS plpgsql;
18-1	6136-6151	spatial_ref_sys	_	_	_	
18-2	6152-6155	and	_	_	_	
18-3	6156-6159	all	_	_	_	
18-4	6160-6163	the	_	_	_	
18-5	6164-6173	functions	_	_	_	
18-6	6174-6177	and	_	_	_	
18-7	6178-6186	comments	_	_	_	
18-8	6186-6187	.	_	_	_	
18-9	6188-6194	Raster	_	_	_	
18-10	6195-6198	and	_	_	_	
18-11	6199-6207	topology	_	_	_	
18-12	6208-6211	are	_	_	_	
18-13	6212-6220	packaged	_	_	_	
18-14	6221-6223	as	_	_	_	
18-15	6224-6225	a	_	_	_	
18-16	6226-6234	separate	_	_	_	
18-17	6235-6244	extension	_	_	_	
18-18	6244-6245	.	_	_	_	
18-19	6246-6249	Run	_	_	_	
18-20	6250-6253	the	_	_	_	
18-21	6254-6263	following	_	_	_	
18-22	6264-6267	SQL	_	_	_	
18-23	6268-6275	snippet	_	_	_	
18-24	6276-6278	in	_	_	_	
18-25	6279-6282	the	_	_	_	
18-26	6283-6291	database	_	_	_	
18-27	6292-6295	you	_	_	_	
18-28	6296-6300	want	_	_	_	
18-29	6301-6303	to	_	_	_	
18-30	6304-6310	enable	_	_	_	
18-31	6311-6320	spatially	_	_	_	
18-32	6320-6321	:	_	_	_	
18-33	6322-6328	CREATE	_	_	_	
18-34	6329-6338	EXTENSION	_	_	_	
18-35	6339-6341	IF	_	_	_	
18-36	6342-6345	NOT	_	_	_	
18-37	6346-6352	EXISTS	_	_	_	
18-38	6353-6360	plpgsql	_	_	_	
18-39	6360-6361	;	_	_	_	

#Text=CREATE EXTENSION postgis; CREATE EXTENSION postgis_raster; -- OPTIONAL CREATE EXTENSION postgis_topology; -- OPTIONAL 3.3.2. Spatially enable database without using EXTENSION (discouraged)This is generally only needed if you cannot or don't
19-1	6362-6368	CREATE	_	_	_	
19-2	6369-6378	EXTENSION	_	_	_	
19-3	6379-6386	postgis	_	_	_	
19-4	6386-6387	;	_	_	_	
19-5	6388-6394	CREATE	_	_	_	
19-6	6395-6404	EXTENSION	_	_	_	
19-7	6405-6419	postgis_raster	_	_	_	
19-8	6419-6420	;	_	_	_	
19-9	6421-6422	-	_	_	_	
19-10	6422-6423	-	_	_	_	
19-11	6424-6432	OPTIONAL	_	_	_	
19-12	6433-6439	CREATE	_	_	_	
19-13	6440-6449	EXTENSION	_	_	_	
19-14	6450-6466	postgis_topology	_	_	_	
19-15	6466-6467	;	_	_	_	
19-16	6468-6469	-	_	_	_	
19-17	6469-6470	-	_	_	_	
19-18	6471-6479	OPTIONAL	_	_	_	
19-19	6480-6485	3.3.2	_	_	_	
19-20	6485-6486	.	_	_	_	
19-21	6486-6487	 	_	_	_	
19-22	6487-6496	Spatially	_	_	_	
19-23	6497-6503	enable	_	_	_	
19-24	6504-6512	database	_	_	_	
19-25	6513-6520	without	_	_	_	
19-26	6521-6526	using	_	_	_	
19-27	6527-6536	EXTENSION	_	_	_	
19-28	6537-6538	(	_	_	_	
19-29	6538-6549	discouraged	_	_	_	
19-30	6549-6550	)	_	_	_	
19-31	6550-6554	This	_	_	_	
19-32	6555-6557	is	_	_	_	
19-33	6558-6567	generally	_	_	_	
19-34	6568-6572	only	_	_	_	
19-35	6573-6579	needed	_	_	_	
19-36	6580-6582	if	_	_	_	
19-37	6583-6586	you	_	_	_	
19-38	6587-6593	cannot	_	_	_	
19-39	6594-6596	or	_	_	_	
19-40	6597-6602	don't	_	_	_	

#Text=want to get PostGIS installed in the PostgreSQL extension directory (for example during testing, development or in a restricted environment). Adding PostGIS objects and function definitions into your database is done by loading the various sql files located in [prefix]/share/contrib as specified during the build phase.
20-1	6603-6607	want	_	_	_	
20-2	6608-6610	to	_	_	_	
20-3	6611-6614	get	_	_	_	
20-4	6615-6622	PostGIS	_	_	_	
20-5	6623-6632	installed	_	_	_	
20-6	6633-6635	in	_	_	_	
20-7	6636-6639	the	_	_	_	
20-8	6640-6650	PostgreSQL	_	_	_	
20-9	6651-6660	extension	_	_	_	
20-10	6661-6670	directory	_	_	_	
20-11	6671-6672	(	_	_	_	
20-12	6672-6675	for	_	_	_	
20-13	6676-6683	example	_	_	_	
20-14	6684-6690	during	_	_	_	
20-15	6691-6698	testing	_	_	_	
20-16	6698-6699	,	_	_	_	
20-17	6700-6711	development	_	_	_	
20-18	6712-6714	or	_	_	_	
20-19	6715-6717	in	_	_	_	
20-20	6718-6719	a	_	_	_	
20-21	6720-6730	restricted	_	_	_	
20-22	6731-6742	environment	_	_	_	
20-23	6742-6743	)	_	_	_	
20-24	6743-6744	.	_	_	_	
20-25	6745-6751	Adding	_	_	_	
20-26	6752-6759	PostGIS	_	_	_	
20-27	6760-6767	objects	_	_	_	
20-28	6768-6771	and	_	_	_	
20-29	6772-6780	function	_	_	_	
20-30	6781-6792	definitions	_	_	_	
20-31	6793-6797	into	_	_	_	
20-32	6798-6802	your	_	_	_	
20-33	6803-6811	database	_	_	_	
20-34	6812-6814	is	_	_	_	
20-35	6815-6819	done	_	_	_	
20-36	6820-6822	by	_	_	_	
20-37	6823-6830	loading	_	_	_	
20-38	6831-6834	the	_	_	_	
20-39	6835-6842	various	_	_	_	
20-40	6843-6846	sql	_	_	_	
20-41	6847-6852	files	_	_	_	
20-42	6853-6860	located	_	_	_	
20-43	6861-6863	in	_	_	_	
20-44	6864-6865	[	_	_	_	
20-45	6865-6871	prefix	_	_	_	
20-46	6871-6872	]	_	_	_	
20-47	6872-6873	/	_	_	_	
20-48	6873-6878	share	_	_	_	
20-49	6878-6879	/	_	_	_	
20-50	6879-6886	contrib	_	_	_	
20-51	6887-6889	as	_	_	_	
20-52	6890-6899	specified	_	_	_	
20-53	6900-6906	during	_	_	_	
20-54	6907-6910	the	_	_	_	
20-55	6911-6916	build	_	_	_	
20-56	6917-6922	phase	_	_	_	
20-57	6922-6923	.	_	_	_	

#Text=The core PostGIS objects (geometry and geography types, and their support functions) are in the postgis.sql script. Raster objects are in the rtpostgis.sql script. Topology objects are in the topology.sql script. For a complete set of EPSG coordinate system definition identifiers, you
21-1	6924-6927	The	_	_	_	
21-2	6928-6932	core	_	_	_	
21-3	6933-6940	PostGIS	_	_	_	
21-4	6941-6948	objects	_	_	_	
21-5	6949-6950	(	_	_	_	
21-6	6950-6958	geometry	_	_	_	
21-7	6959-6962	and	_	_	_	
21-8	6963-6972	geography	_	_	_	
21-9	6973-6978	types	_	_	_	
21-10	6978-6979	,	_	_	_	
21-11	6980-6983	and	_	_	_	
21-12	6984-6989	their	_	_	_	
21-13	6990-6997	support	_	_	_	
21-14	6998-7007	functions	_	_	_	
21-15	7007-7008	)	_	_	_	
21-16	7009-7012	are	_	_	_	
21-17	7013-7015	in	_	_	_	
21-18	7016-7019	the	_	_	_	
21-19	7020-7031	postgis.sql	_	_	_	
21-20	7032-7038	script	_	_	_	
21-21	7038-7039	.	_	_	_	
21-22	7040-7046	Raster	_	_	_	
21-23	7047-7054	objects	_	_	_	
21-24	7055-7058	are	_	_	_	
21-25	7059-7061	in	_	_	_	
21-26	7062-7065	the	_	_	_	
21-27	7066-7079	rtpostgis.sql	_	_	_	
21-28	7080-7086	script	_	_	_	
21-29	7086-7087	.	_	_	_	
21-30	7088-7096	Topology	_	_	_	
21-31	7097-7104	objects	_	_	_	
21-32	7105-7108	are	_	_	_	
21-33	7109-7111	in	_	_	_	
21-34	7112-7115	the	_	_	_	
21-35	7116-7128	topology.sql	_	_	_	
21-36	7129-7135	script	_	_	_	
21-37	7135-7136	.	_	_	_	
21-38	7137-7140	For	_	_	_	
21-39	7141-7142	a	_	_	_	
21-40	7143-7151	complete	_	_	_	
21-41	7152-7155	set	_	_	_	
21-42	7156-7158	of	_	_	_	
21-43	7159-7163	EPSG	_	_	_	
21-44	7164-7174	coordinate	_	_	_	
21-45	7175-7181	system	_	_	_	
21-46	7182-7192	definition	_	_	_	
21-47	7193-7204	identifiers	_	_	_	
21-48	7204-7205	,	_	_	_	
21-49	7206-7209	you	_	_	_	

#Text=can also load the spatial_ref_sys.sql definitions file and populate the spatial_ref_sys table. This will permit you to perform ST_Transform() operations on geometries. If you wish to add comments to the PostGIS functions, you can find them in the postgis_comments.sql script.
22-1	7210-7213	can	_	_	_	
22-2	7214-7218	also	_	_	_	
22-3	7219-7223	load	_	_	_	
22-4	7224-7227	the	_	_	_	
22-5	7228-7247	spatial_ref_sys.sql	_	_	_	
22-6	7248-7259	definitions	_	_	_	
22-7	7260-7264	file	_	_	_	
22-8	7265-7268	and	_	_	_	
22-9	7269-7277	populate	_	_	_	
22-10	7278-7281	the	_	_	_	
22-11	7282-7297	spatial_ref_sys	_	_	_	
22-12	7298-7303	table	_	_	_	
22-13	7303-7304	.	_	_	_	
22-14	7305-7309	This	_	_	_	
22-15	7310-7314	will	_	_	_	
22-16	7315-7321	permit	_	_	_	
22-17	7322-7325	you	_	_	_	
22-18	7326-7328	to	_	_	_	
22-19	7329-7336	perform	_	_	_	
22-20	7337-7349	ST_Transform	_	_	_	
22-21	7349-7350	(	_	_	_	
22-22	7350-7351	)	_	_	_	
22-23	7352-7362	operations	_	_	_	
22-24	7363-7365	on	_	_	_	
22-25	7366-7376	geometries	_	_	_	
22-26	7376-7377	.	_	_	_	
22-27	7378-7380	If	_	_	_	
22-28	7381-7384	you	_	_	_	
22-29	7385-7389	wish	_	_	_	
22-30	7390-7392	to	_	_	_	
22-31	7393-7396	add	_	_	_	
22-32	7397-7405	comments	_	_	_	
22-33	7406-7408	to	_	_	_	
22-34	7409-7412	the	_	_	_	
22-35	7413-7420	PostGIS	_	_	_	
22-36	7421-7430	functions	_	_	_	
22-37	7430-7431	,	_	_	_	
22-38	7432-7435	you	_	_	_	
22-39	7436-7439	can	_	_	_	
22-40	7440-7444	find	_	_	_	
22-41	7445-7449	them	_	_	_	
22-42	7450-7452	in	_	_	_	
22-43	7453-7456	the	_	_	_	
22-44	7457-7477	postgis_comments.sql	_	_	_	
22-45	7478-7484	script	_	_	_	
22-46	7484-7485	.	_	_	_	

#Text=Comments can be viewed by simply typing \\dd [function_name] from a psql terminal window. Run the following Shell commands in your terminal: DB=[yourdatabase] SCRIPTSDIR=`pg_config --sharedir`/contrib/postgis-3.1/
23-1	7486-7494	Comments	_	_	_	
23-2	7495-7498	can	_	_	_	
23-3	7499-7501	be	_	_	_	
23-4	7502-7508	viewed	_	_	_	
23-5	7509-7511	by	_	_	_	
23-6	7512-7518	simply	_	_	_	
23-7	7519-7525	typing	_	_	_	
23-8	7526-7527	\	_	_	_	
23-9	7527-7529	dd	_	_	_	
23-10	7530-7531	[	_	_	_	
23-11	7531-7544	function_name	_	_	_	
23-12	7544-7545	]	_	_	_	
23-13	7546-7550	from	_	_	_	
23-14	7551-7552	a	_	_	_	
23-15	7553-7557	psql	_	_	_	
23-16	7558-7566	terminal	_	_	_	
23-17	7567-7573	window	_	_	_	
23-18	7573-7574	.	_	_	_	
23-19	7575-7578	Run	_	_	_	
23-20	7579-7582	the	_	_	_	
23-21	7583-7592	following	_	_	_	
23-22	7593-7598	Shell	_	_	_	
23-23	7599-7607	commands	_	_	_	
23-24	7608-7610	in	_	_	_	
23-25	7611-7615	your	_	_	_	
23-26	7616-7624	terminal	_	_	_	
23-27	7624-7625	:	_	_	_	
23-28	7626-7628	DB	_	_	_	
23-29	7628-7629	=	_	_	_	
23-30	7629-7630	[	_	_	_	
23-31	7630-7642	yourdatabase	_	_	_	
23-32	7642-7643	]	_	_	_	
23-33	7644-7654	SCRIPTSDIR	_	_	_	
23-34	7654-7655	=	_	_	_	
23-35	7655-7656	`	_	_	_	
23-36	7656-7665	pg_config	_	_	_	
23-37	7666-7667	-	_	_	_	
23-38	7667-7668	-	_	_	_	
23-39	7668-7676	sharedir	_	_	_	
23-40	7676-7677	`	_	_	_	
23-41	7677-7678	/	_	_	_	
23-42	7678-7685	contrib	_	_	_	
23-43	7685-7686	/	_	_	_	
23-44	7686-7693	postgis	_	_	_	
23-45	7693-7694	-	_	_	_	
23-46	7694-7697	3.1	_	_	_	
23-47	7697-7698	/	_	_	_	

#Text=# Core objects psql -d ${DB} -f ${SCRIPTSDIR}/postgis.sql psql -d ${DB} -f ${SCRIPTSDIR}/spatial_ref_sys.sql
24-1	7699-7700	#	_	_	_	
24-2	7701-7705	Core	_	_	_	
24-3	7706-7713	objects	_	_	_	
24-4	7714-7718	psql	_	_	_	
24-5	7719-7720	-	_	_	_	
24-6	7720-7721	d	_	_	_	
24-7	7722-7723	$	_	_	_	
24-8	7723-7724	{	_	_	_	
24-9	7724-7726	DB	_	_	_	
24-10	7726-7727	}	_	_	_	
24-11	7728-7729	-	_	_	_	
24-12	7729-7730	f	_	_	_	
24-13	7731-7732	$	_	_	_	
24-14	7732-7733	{	_	_	_	
24-15	7733-7743	SCRIPTSDIR	_	_	_	
24-16	7743-7744	}	_	_	_	
24-17	7744-7745	/	_	_	_	
24-18	7745-7756	postgis.sql	_	_	_	
24-19	7757-7761	psql	_	_	_	
24-20	7762-7763	-	_	_	_	
24-21	7763-7764	d	_	_	_	
24-22	7765-7766	$	_	_	_	
24-23	7766-7767	{	_	_	_	
24-24	7767-7769	DB	_	_	_	
24-25	7769-7770	}	_	_	_	
24-26	7771-7772	-	_	_	_	
24-27	7772-7773	f	_	_	_	
24-28	7774-7775	$	_	_	_	
24-29	7775-7776	{	_	_	_	
24-30	7776-7786	SCRIPTSDIR	_	_	_	
24-31	7786-7787	}	_	_	_	
24-32	7787-7788	/	_	_	_	
24-33	7788-7807	spatial_ref_sys.sql	_	_	_	

#Text=psql -d ${DB} -f ${SCRIPTSDIR}/postgis_comments.sql # OPTIONAL # Raster support (OPTIONAL) psql -d ${DB} -f ${SCRIPTSDIR}/rtpostgis.sql psql -d ${DB} -f ${SCRIPTSDIR}/raster_comments.sql # OPTIONAL
25-1	7808-7812	psql	_	_	_	
25-2	7813-7814	-	_	_	_	
25-3	7814-7815	d	_	_	_	
25-4	7816-7817	$	_	_	_	
25-5	7817-7818	{	_	_	_	
25-6	7818-7820	DB	_	_	_	
25-7	7820-7821	}	_	_	_	
25-8	7822-7823	-	_	_	_	
25-9	7823-7824	f	_	_	_	
25-10	7825-7826	$	_	_	_	
25-11	7826-7827	{	_	_	_	
25-12	7827-7837	SCRIPTSDIR	_	_	_	
25-13	7837-7838	}	_	_	_	
25-14	7838-7839	/	_	_	_	
25-15	7839-7859	postgis_comments.sql	_	_	_	
25-16	7860-7861	#	_	_	_	
25-17	7862-7870	OPTIONAL	_	_	_	
25-18	7871-7872	#	_	_	_	
25-19	7873-7879	Raster	_	_	_	
25-20	7880-7887	support	_	_	_	
25-21	7888-7889	(	_	_	_	
25-22	7889-7897	OPTIONAL	_	_	_	
25-23	7897-7898	)	_	_	_	
25-24	7899-7903	psql	_	_	_	
25-25	7904-7905	-	_	_	_	
25-26	7905-7906	d	_	_	_	
25-27	7907-7908	$	_	_	_	
25-28	7908-7909	{	_	_	_	
25-29	7909-7911	DB	_	_	_	
25-30	7911-7912	}	_	_	_	
25-31	7913-7914	-	_	_	_	
25-32	7914-7915	f	_	_	_	
25-33	7916-7917	$	_	_	_	
25-34	7917-7918	{	_	_	_	
25-35	7918-7928	SCRIPTSDIR	_	_	_	
25-36	7928-7929	}	_	_	_	
25-37	7929-7930	/	_	_	_	
25-38	7930-7943	rtpostgis.sql	_	_	_	
25-39	7944-7948	psql	_	_	_	
25-40	7949-7950	-	_	_	_	
25-41	7950-7951	d	_	_	_	
25-42	7952-7953	$	_	_	_	
25-43	7953-7954	{	_	_	_	
25-44	7954-7956	DB	_	_	_	
25-45	7956-7957	}	_	_	_	
25-46	7958-7959	-	_	_	_	
25-47	7959-7960	f	_	_	_	
25-48	7961-7962	$	_	_	_	
25-49	7962-7963	{	_	_	_	
25-50	7963-7973	SCRIPTSDIR	_	_	_	
25-51	7973-7974	}	_	_	_	
25-52	7974-7975	/	_	_	_	
25-53	7975-7994	raster_comments.sql	_	_	_	
25-54	7995-7996	#	_	_	_	
25-55	7997-8005	OPTIONAL	_	_	_	

#Text=# Topology support (OPTIONAL) psql -d ${DB} -f ${SCRIPTSDIR}/topology.sql psql -d ${DB} -f ${SCRIPTSDIR}/topology_comments.sql # OPTIONAL
26-1	8006-8007	#	_	_	_	
26-2	8008-8016	Topology	_	_	_	
26-3	8017-8024	support	_	_	_	
26-4	8025-8026	(	_	_	_	
26-5	8026-8034	OPTIONAL	_	_	_	
26-6	8034-8035	)	_	_	_	
26-7	8036-8040	psql	_	_	_	
26-8	8041-8042	-	_	_	_	
26-9	8042-8043	d	_	_	_	
26-10	8044-8045	$	_	_	_	
26-11	8045-8046	{	_	_	_	
26-12	8046-8048	DB	_	_	_	
26-13	8048-8049	}	_	_	_	
26-14	8050-8051	-	_	_	_	
26-15	8051-8052	f	_	_	_	
26-16	8053-8054	$	_	_	_	
26-17	8054-8055	{	_	_	_	
26-18	8055-8065	SCRIPTSDIR	_	_	_	
26-19	8065-8066	}	_	_	_	
26-20	8066-8067	/	_	_	_	
26-21	8067-8079	topology.sql	_	_	_	
26-22	8080-8084	psql	_	_	_	
26-23	8085-8086	-	_	_	_	
26-24	8086-8087	d	_	_	_	
26-25	8088-8089	$	_	_	_	
26-26	8089-8090	{	_	_	_	
26-27	8090-8092	DB	_	_	_	
26-28	8092-8093	}	_	_	_	
26-29	8094-8095	-	_	_	_	
26-30	8095-8096	f	_	_	_	
26-31	8097-8098	$	_	_	_	
26-32	8098-8099	{	_	_	_	
26-33	8099-8109	SCRIPTSDIR	_	_	_	
26-34	8109-8110	}	_	_	_	
26-35	8110-8111	/	_	_	_	
26-36	8111-8132	topology_comments.sql	_	_	_	
26-37	8133-8134	#	_	_	_	
26-38	8135-8143	OPTIONAL	_	_	_	

#Text=3.3.3. Create a spatially-enabled database from a template Some packaged distributions of PostGIS (in particular the Win32 installers for PostGIS >= 1.1.5) load the PostGIS functions into a template database called template_postgis. If the template_postgis database exists in your PostgreSQL
27-1	8144-8149	3.3.3	_	_	_	
27-2	8149-8150	.	_	_	_	
27-3	8150-8151	 	_	_	_	
27-4	8151-8157	Create	_	_	_	
27-5	8158-8159	a	_	_	_	
27-6	8160-8177	spatially-enabled	_	_	_	
27-7	8178-8186	database	_	_	_	
27-8	8187-8191	from	_	_	_	
27-9	8192-8193	a	_	_	_	
27-10	8194-8202	template	_	_	_	
27-11	8203-8207	Some	_	_	_	
27-12	8208-8216	packaged	_	_	_	
27-13	8217-8230	distributions	_	_	_	
27-14	8231-8233	of	_	_	_	
27-15	8234-8241	PostGIS	_	_	_	
27-16	8242-8243	(	_	_	_	
27-17	8243-8245	in	_	_	_	
27-18	8246-8256	particular	_	_	_	
27-19	8257-8260	the	_	_	_	
27-20	8261-8266	Win32	_	_	_	
27-21	8267-8277	installers	_	_	_	
27-22	8278-8281	for	_	_	_	
27-23	8282-8289	PostGIS	_	_	_	
27-24	8290-8291	>	_	_	_	
27-25	8291-8292	=	_	_	_	
27-26	8293-8298	1.1.5	_	_	_	
27-27	8298-8299	)	_	_	_	
27-28	8300-8304	load	_	_	_	
27-29	8305-8308	the	_	_	_	
27-30	8309-8316	PostGIS	_	_	_	
27-31	8317-8326	functions	_	_	_	
27-32	8327-8331	into	_	_	_	
27-33	8332-8333	a	_	_	_	
27-34	8334-8342	template	_	_	_	
27-35	8343-8351	database	_	_	_	
27-36	8352-8358	called	_	_	_	
27-37	8359-8375	template_postgis	_	_	_	
27-38	8375-8376	.	_	_	_	
27-39	8377-8379	If	_	_	_	
27-40	8380-8383	the	_	_	_	
27-41	8384-8400	template_postgis	_	_	_	
27-42	8401-8409	database	_	_	_	
27-43	8410-8416	exists	_	_	_	
27-44	8417-8419	in	_	_	_	
27-45	8420-8424	your	_	_	_	
27-46	8425-8435	PostgreSQL	_	_	_	

#Text=installation then it is possible for users and/or applications to create spatially-enabled databases using a single command. Note that in both cases, the database user must have been granted the privilege to create new databases. From the shell: # createdb -T template_postgis my_spatial_db From SQL:
28-1	8436-8448	installation	_	_	_	
28-2	8449-8453	then	_	_	_	
28-3	8454-8456	it	_	_	_	
28-4	8457-8459	is	_	_	_	
28-5	8460-8468	possible	_	_	_	
28-6	8469-8472	for	_	_	_	
28-7	8473-8478	users	_	_	_	
28-8	8479-8482	and	_	_	_	
28-9	8482-8483	/	_	_	_	
28-10	8483-8485	or	_	_	_	
28-11	8486-8498	applications	_	_	_	
28-12	8499-8501	to	_	_	_	
28-13	8502-8508	create	_	_	_	
28-14	8509-8526	spatially-enabled	_	_	_	
28-15	8527-8536	databases	_	_	_	
28-16	8537-8542	using	_	_	_	
28-17	8543-8544	a	_	_	_	
28-18	8545-8551	single	_	_	_	
28-19	8552-8559	command	_	_	_	
28-20	8559-8560	.	_	_	_	
28-21	8561-8565	Note	_	_	_	
28-22	8566-8570	that	_	_	_	
28-23	8571-8573	in	_	_	_	
28-24	8574-8578	both	_	_	_	
28-25	8579-8584	cases	_	_	_	
28-26	8584-8585	,	_	_	_	
28-27	8586-8589	the	_	_	_	
28-28	8590-8598	database	_	_	_	
28-29	8599-8603	user	_	_	_	
28-30	8604-8608	must	_	_	_	
28-31	8609-8613	have	_	_	_	
28-32	8614-8618	been	_	_	_	
28-33	8619-8626	granted	_	_	_	
28-34	8627-8630	the	_	_	_	
28-35	8631-8640	privilege	_	_	_	
28-36	8641-8643	to	_	_	_	
28-37	8644-8650	create	_	_	_	
28-38	8651-8654	new	_	_	_	
28-39	8655-8664	databases	_	_	_	
28-40	8664-8665	.	_	_	_	
28-41	8666-8670	From	_	_	_	
28-42	8671-8674	the	_	_	_	
28-43	8675-8680	shell	_	_	_	
28-44	8680-8681	:	_	_	_	
28-45	8682-8683	#	_	_	_	
28-46	8684-8692	createdb	_	_	_	
28-47	8693-8694	-	_	_	_	
28-48	8694-8695	T	_	_	_	
28-49	8696-8712	template_postgis	_	_	_	
28-50	8713-8726	my_spatial_db	_	_	_	
28-51	8727-8731	From	_	_	_	
28-52	8732-8735	SQL	_	_	_	
28-53	8735-8736	:	_	_	_	

#Text=postgres=# CREATE DATABASE my_spatial_db TEMPLATE=template_postgis3.4. Upgrading spatial databases3.4.1. Soft upgrade3.4.2. Hard upgrade Upgrading existing spatial databases can be tricky as it requires replacement or introduction of new PostGIS object definitions. Unfortunately not all definitions can be easily replaced in a live database, so sometimes your best bet is a dump/reload process.
29-1	8737-8745	postgres	_	_	_	
29-2	8745-8746	=	_	_	_	
29-3	8746-8747	#	_	_	_	
29-4	8748-8754	CREATE	_	_	_	
29-5	8755-8763	DATABASE	_	_	_	
29-6	8764-8777	my_spatial_db	_	_	_	
29-7	8778-8786	TEMPLATE	_	_	_	
29-8	8786-8787	=	_	_	_	
29-9	8787-8806	template_postgis3.4	_	_	_	
29-10	8806-8807	.	_	_	_	
29-11	8807-8808	 	_	_	_	
29-12	8808-8817	Upgrading	_	_	_	
29-13	8818-8825	spatial	_	_	_	
29-14	8826-8840	databases3.4.1	_	_	_	
29-15	8840-8841	.	_	_	_	
29-16	8842-8846	Soft	_	_	_	
29-17	8847-8859	upgrade3.4.2	_	_	_	
29-18	8859-8860	.	_	_	_	
29-19	8861-8865	Hard	_	_	_	
29-20	8866-8873	upgrade	_	_	_	
29-21	8874-8883	Upgrading	_	_	_	
29-22	8884-8892	existing	_	_	_	
29-23	8893-8900	spatial	_	_	_	
29-24	8901-8910	databases	_	_	_	
29-25	8911-8914	can	_	_	_	
29-26	8915-8917	be	_	_	_	
29-27	8918-8924	tricky	_	_	_	
29-28	8925-8927	as	_	_	_	
29-29	8928-8930	it	_	_	_	
29-30	8931-8939	requires	_	_	_	
29-31	8940-8951	replacement	_	_	_	
29-32	8952-8954	or	_	_	_	
29-33	8955-8967	introduction	_	_	_	
29-34	8968-8970	of	_	_	_	
29-35	8971-8974	new	_	_	_	
29-36	8975-8982	PostGIS	_	_	_	
29-37	8983-8989	object	_	_	_	
29-38	8990-9001	definitions	_	_	_	
29-39	9001-9002	.	_	_	_	
29-40	9003-9016	Unfortunately	_	_	_	
29-41	9017-9020	not	_	_	_	
29-42	9021-9024	all	_	_	_	
29-43	9025-9036	definitions	_	_	_	
29-44	9037-9040	can	_	_	_	
29-45	9041-9043	be	_	_	_	
29-46	9044-9050	easily	_	_	_	
29-47	9051-9059	replaced	_	_	_	
29-48	9060-9062	in	_	_	_	
29-49	9063-9064	a	_	_	_	
29-50	9065-9069	live	_	_	_	
29-51	9070-9078	database	_	_	_	
29-52	9078-9079	,	_	_	_	
29-53	9080-9082	so	_	_	_	
29-54	9083-9092	sometimes	_	_	_	
29-55	9093-9097	your	_	_	_	
29-56	9098-9102	best	_	_	_	
29-57	9103-9106	bet	_	_	_	
29-58	9107-9109	is	_	_	_	
29-59	9110-9111	a	_	_	_	
29-60	9112-9116	dump	_	_	_	
29-61	9116-9117	/	_	_	_	
29-62	9117-9123	reload	_	_	_	
29-63	9124-9131	process	_	_	_	
29-64	9131-9132	.	_	_	_	

#Text=PostGIS provides a SOFT UPGRADE procedure for minor or bugfix releases, and a HARD UPGRADE procedure for major releases. Before attempting to upgrade PostGIS, it is always worth to backup your data. If you use the -Fc flag to pg_dump you will always be able to restore the dump with a HARD UPGRADE.
30-1	9133-9140	PostGIS	_	_	_	
30-2	9141-9149	provides	_	_	_	
30-3	9150-9151	a	_	_	_	
30-4	9152-9156	SOFT	_	_	_	
30-5	9157-9164	UPGRADE	_	_	_	
30-6	9165-9174	procedure	_	_	_	
30-7	9175-9178	for	_	_	_	
30-8	9179-9184	minor	_	_	_	
30-9	9185-9187	or	_	_	_	
30-10	9188-9194	bugfix	_	_	_	
30-11	9195-9203	releases	_	_	_	
30-12	9203-9204	,	_	_	_	
30-13	9205-9208	and	_	_	_	
30-14	9209-9210	a	_	_	_	
30-15	9211-9215	HARD	_	_	_	
30-16	9216-9223	UPGRADE	_	_	_	
30-17	9224-9233	procedure	_	_	_	
30-18	9234-9237	for	_	_	_	
30-19	9238-9243	major	_	_	_	
30-20	9244-9252	releases	_	_	_	
30-21	9252-9253	.	_	_	_	
30-22	9254-9260	Before	_	_	_	
30-23	9261-9271	attempting	_	_	_	
30-24	9272-9274	to	_	_	_	
30-25	9275-9282	upgrade	_	_	_	
30-26	9283-9290	PostGIS	_	_	_	
30-27	9290-9291	,	_	_	_	
30-28	9292-9294	it	_	_	_	
30-29	9295-9297	is	_	_	_	
30-30	9298-9304	always	_	_	_	
30-31	9305-9310	worth	_	_	_	
30-32	9311-9313	to	_	_	_	
30-33	9314-9320	backup	_	_	_	
30-34	9321-9325	your	_	_	_	
30-35	9326-9330	data	_	_	_	
30-36	9330-9331	.	_	_	_	
30-37	9332-9334	If	_	_	_	
30-38	9335-9338	you	_	_	_	
30-39	9339-9342	use	_	_	_	
30-40	9343-9346	the	_	_	_	
30-41	9347-9348	-	_	_	_	
30-42	9348-9350	Fc	_	_	_	
30-43	9351-9355	flag	_	_	_	
30-44	9356-9358	to	_	_	_	
30-45	9359-9366	pg_dump	_	_	_	
30-46	9367-9370	you	_	_	_	
30-47	9371-9375	will	_	_	_	
30-48	9376-9382	always	_	_	_	
30-49	9383-9385	be	_	_	_	
30-50	9386-9390	able	_	_	_	
30-51	9391-9393	to	_	_	_	
30-52	9394-9401	restore	_	_	_	
30-53	9402-9405	the	_	_	_	
30-54	9406-9410	dump	_	_	_	
30-55	9411-9415	with	_	_	_	
30-56	9416-9417	a	_	_	_	
30-57	9418-9422	HARD	_	_	_	
30-58	9423-9430	UPGRADE	_	_	_	
30-59	9430-9431	.	_	_	_	

#Text=3.4.1. Soft upgrade3.4.1.1. Soft Upgrade Pre 9.1+ or without extensions3.4.1.2. Soft Upgrade 9.1+ using extensionsIf you installed your database using extensions, you'll need to upgrade using the extension model as well. If you installed using the old sql script way, then you should upgrade using the sql script way. Please refer to the appropriate.3.4.1.1. Soft Upgrade Pre 9.1+ or without extensionsThis section applies only to those who installed PostGIS
31-1	9432-9437	3.4.1	_	_	_	
31-2	9437-9438	.	_	_	_	
31-3	9438-9439	 	_	_	_	
31-4	9439-9443	Soft	_	_	_	
31-5	9444-9458	upgrade3.4.1.1	_	_	_	
31-6	9458-9459	.	_	_	_	
31-7	9460-9464	Soft	_	_	_	
31-8	9465-9472	Upgrade	_	_	_	
31-9	9473-9476	Pre	_	_	_	
31-10	9477-9480	9.1	_	_	_	
31-11	9480-9481	+	_	_	_	
31-12	9482-9484	or	_	_	_	
31-13	9485-9492	without	_	_	_	
31-14	9493-9510	extensions3.4.1.2	_	_	_	
31-15	9510-9511	.	_	_	_	
31-16	9512-9516	Soft	_	_	_	
31-17	9517-9524	Upgrade	_	_	_	
31-18	9525-9528	9.1	_	_	_	
31-19	9528-9529	+	_	_	_	
31-20	9530-9535	using	_	_	_	
31-21	9536-9548	extensionsIf	_	_	_	
31-22	9549-9552	you	_	_	_	
31-23	9553-9562	installed	_	_	_	
31-24	9563-9567	your	_	_	_	
31-25	9568-9576	database	_	_	_	
31-26	9577-9582	using	_	_	_	
31-27	9583-9593	extensions	_	_	_	
31-28	9593-9594	,	_	_	_	
31-29	9595-9601	you'll	_	_	_	
31-30	9602-9606	need	_	_	_	
31-31	9607-9609	to	_	_	_	
31-32	9610-9617	upgrade	_	_	_	
31-33	9618-9623	using	_	_	_	
31-34	9624-9627	the	_	_	_	
31-35	9628-9637	extension	_	_	_	
31-36	9638-9643	model	_	_	_	
31-37	9644-9646	as	_	_	_	
31-38	9647-9651	well	_	_	_	
31-39	9651-9652	.	_	_	_	
31-40	9653-9655	If	_	_	_	
31-41	9656-9659	you	_	_	_	
31-42	9660-9669	installed	_	_	_	
31-43	9670-9675	using	_	_	_	
31-44	9676-9679	the	_	_	_	
31-45	9680-9683	old	_	_	_	
31-46	9684-9687	sql	_	_	_	
31-47	9688-9694	script	_	_	_	
31-48	9695-9698	way	_	_	_	
31-49	9698-9699	,	_	_	_	
31-50	9700-9704	then	_	_	_	
31-51	9705-9708	you	_	_	_	
31-52	9709-9715	should	_	_	_	
31-53	9716-9723	upgrade	_	_	_	
31-54	9724-9729	using	_	_	_	
31-55	9730-9733	the	_	_	_	
31-56	9734-9737	sql	_	_	_	
31-57	9738-9744	script	_	_	_	
31-58	9745-9748	way	_	_	_	
31-59	9748-9749	.	_	_	_	
31-60	9750-9756	Please	_	_	_	
31-61	9757-9762	refer	_	_	_	
31-62	9763-9765	to	_	_	_	
31-63	9766-9769	the	_	_	_	
31-64	9770-9781	appropriate	_	_	_	
31-65	9781-9789	.3.4.1.1	_	_	_	
31-66	9789-9790	.	_	_	_	
31-67	9790-9791	 	_	_	_	
31-68	9791-9795	Soft	_	_	_	
31-69	9796-9803	Upgrade	_	_	_	
31-70	9804-9807	Pre	_	_	_	
31-71	9808-9811	9.1	_	_	_	
31-72	9811-9812	+	_	_	_	
31-73	9813-9815	or	_	_	_	
31-74	9816-9823	without	_	_	_	
31-75	9824-9838	extensionsThis	_	_	_	
31-76	9839-9846	section	_	_	_	
31-77	9847-9854	applies	_	_	_	
31-78	9855-9859	only	_	_	_	
31-79	9860-9862	to	_	_	_	
31-80	9863-9868	those	_	_	_	
31-81	9869-9872	who	_	_	_	
31-82	9873-9882	installed	_	_	_	
31-83	9883-9890	PostGIS	_	_	_	

#Text=not using extensions. If you have extensions and try to upgrade with this approach you'll get messages like:can't drop ... because postgis extension depends on itNOTE: if you are moving from PostGIS 1.* to PostGIS 2.* or from
32-1	9891-9894	not	_	_	_	
32-2	9895-9900	using	_	_	_	
32-3	9901-9911	extensions	_	_	_	
32-4	9911-9912	.	_	_	_	
32-5	9913-9915	If	_	_	_	
32-6	9916-9919	you	_	_	_	
32-7	9920-9924	have	_	_	_	
32-8	9925-9935	extensions	_	_	_	
32-9	9936-9939	and	_	_	_	
32-10	9940-9943	try	_	_	_	
32-11	9944-9946	to	_	_	_	
32-12	9947-9954	upgrade	_	_	_	
32-13	9955-9959	with	_	_	_	
32-14	9960-9964	this	_	_	_	
32-15	9965-9973	approach	_	_	_	
32-16	9974-9980	you'll	_	_	_	
32-17	9981-9984	get	_	_	_	
32-18	9985-9993	messages	_	_	_	
32-19	9994-9998	like	_	_	_	
32-20	9998-9999	:	_	_	_	
32-21	9999-10004	can't	_	_	_	
32-22	10005-10009	drop	_	_	_	
32-23	10010-10011	.	_	_	_	
32-24	10011-10012	.	_	_	_	
32-25	10012-10013	.	_	_	_	
32-26	10014-10021	because	_	_	_	
32-27	10022-10029	postgis	_	_	_	
32-28	10030-10039	extension	_	_	_	
32-29	10040-10047	depends	_	_	_	
32-30	10048-10050	on	_	_	_	
32-31	10051-10057	itNOTE	_	_	_	
32-32	10057-10058	:	_	_	_	
32-33	10059-10061	if	_	_	_	
32-34	10062-10065	you	_	_	_	
32-35	10066-10069	are	_	_	_	
32-36	10070-10076	moving	_	_	_	
32-37	10077-10081	from	_	_	_	
32-38	10082-10089	PostGIS	_	_	_	
32-39	10090-10091	1	_	_	_	
32-40	10091-10092	.	_	_	_	
32-41	10092-10093	*	_	_	_	
32-42	10094-10096	to	_	_	_	
32-43	10097-10104	PostGIS	_	_	_	
32-44	10105-10106	2	_	_	_	
32-45	10106-10107	.	_	_	_	
32-46	10107-10108	*	_	_	_	
32-47	10109-10111	or	_	_	_	
32-48	10112-10116	from	_	_	_	

#Text=PostGIS 2.* prior to r7409, you cannot use this procedure but would rather need to do a HARD UPGRADE. After compiling and installing (make install) you should find a set of\t*_upgrade.sql files in the installation folders. You can list them all with:
33-1	10117-10124	PostGIS	_	_	_	
33-2	10125-10126	2	_	_	_	
33-3	10126-10127	.	_	_	_	
33-4	10127-10128	*	_	_	_	
33-5	10129-10134	prior	_	_	_	
33-6	10135-10137	to	_	_	_	
33-7	10138-10143	r7409	_	_	_	
33-8	10143-10144	,	_	_	_	
33-9	10145-10148	you	_	_	_	
33-10	10149-10155	cannot	_	_	_	
33-11	10156-10159	use	_	_	_	
33-12	10160-10164	this	_	_	_	
33-13	10165-10174	procedure	_	_	_	
33-14	10175-10178	but	_	_	_	
33-15	10179-10184	would	_	_	_	
33-16	10185-10191	rather	_	_	_	
33-17	10192-10196	need	_	_	_	
33-18	10197-10199	to	_	_	_	
33-19	10200-10202	do	_	_	_	
33-20	10203-10204	a	_	_	_	
33-21	10205-10209	HARD	_	_	_	
33-22	10210-10217	UPGRADE	_	_	_	
33-23	10217-10218	.	_	_	_	
33-24	10219-10224	After	_	_	_	
33-25	10225-10234	compiling	_	_	_	
33-26	10235-10238	and	_	_	_	
33-27	10239-10249	installing	_	_	_	
33-28	10250-10251	(	_	_	_	
33-29	10251-10255	make	_	_	_	
33-30	10256-10263	install	_	_	_	
33-31	10263-10264	)	_	_	_	
33-32	10265-10268	you	_	_	_	
33-33	10269-10275	should	_	_	_	
33-34	10276-10280	find	_	_	_	
33-35	10281-10282	a	_	_	_	
33-36	10283-10286	set	_	_	_	
33-37	10287-10289	of	_	_	_	
33-38	10290-10291	*	_	_	_	
33-39	10291-10292	_	_	_	_	
33-40	10292-10303	upgrade.sql	_	_	_	
33-41	10304-10309	files	_	_	_	
33-42	10310-10312	in	_	_	_	
33-43	10313-10316	the	_	_	_	
33-44	10317-10329	installation	_	_	_	
33-45	10330-10337	folders	_	_	_	
33-46	10337-10338	.	_	_	_	
33-47	10339-10342	You	_	_	_	
33-48	10343-10346	can	_	_	_	
33-49	10347-10351	list	_	_	_	
33-50	10352-10356	them	_	_	_	
33-51	10357-10360	all	_	_	_	
33-52	10361-10365	with	_	_	_	
33-53	10365-10366	:	_	_	_	

#Text=ls `pg_config --sharedir`/contrib/postgis-3.1.2dev/*_upgrade.sql Load them all in turn, starting from postgis_upgrade.sql. psql -f postgis_upgrade.sql -d your_spatial_database The same procedure applies to raster, topology and sfcgal extensions, with upgrade files named
34-1	10367-10369	ls	_	_	_	
34-2	10370-10371	`	_	_	_	
34-3	10371-10380	pg_config	_	_	_	
34-4	10381-10382	-	_	_	_	
34-5	10382-10383	-	_	_	_	
34-6	10383-10391	sharedir	_	_	_	
34-7	10391-10392	`	_	_	_	
34-8	10392-10393	/	_	_	_	
34-9	10393-10400	contrib	_	_	_	
34-10	10400-10401	/	_	_	_	
34-11	10401-10408	postgis	_	_	_	
34-12	10408-10409	-	_	_	_	
34-13	10409-10417	3.1.2dev	_	_	_	
34-14	10417-10418	/	_	_	_	
34-15	10418-10419	*	_	_	_	
34-16	10419-10420	_	_	_	_	
34-17	10420-10431	upgrade.sql	_	_	_	
34-18	10432-10436	Load	_	_	_	
34-19	10437-10441	them	_	_	_	
34-20	10442-10445	all	_	_	_	
34-21	10446-10448	in	_	_	_	
34-22	10449-10453	turn	_	_	_	
34-23	10453-10454	,	_	_	_	
34-24	10455-10463	starting	_	_	_	
34-25	10464-10468	from	_	_	_	
34-26	10469-10488	postgis_upgrade.sql	_	_	_	
34-27	10488-10489	.	_	_	_	
34-28	10490-10494	psql	_	_	_	
34-29	10495-10496	-	_	_	_	
34-30	10496-10497	f	_	_	_	
34-31	10498-10517	postgis_upgrade.sql	_	_	_	
34-32	10518-10519	-	_	_	_	
34-33	10519-10520	d	_	_	_	
34-34	10521-10542	your_spatial_database	_	_	_	
34-35	10543-10546	The	_	_	_	
34-36	10547-10551	same	_	_	_	
34-37	10552-10561	procedure	_	_	_	
34-38	10562-10569	applies	_	_	_	
34-39	10570-10572	to	_	_	_	
34-40	10573-10579	raster	_	_	_	
34-41	10579-10580	,	_	_	_	
34-42	10581-10589	topology	_	_	_	
34-43	10590-10593	and	_	_	_	
34-44	10594-10600	sfcgal	_	_	_	
34-45	10601-10611	extensions	_	_	_	
34-46	10611-10612	,	_	_	_	
34-47	10613-10617	with	_	_	_	
34-48	10618-10625	upgrade	_	_	_	
34-49	10626-10631	files	_	_	_	
34-50	10632-10637	named	_	_	_	

#Text=rtpostgis_upgrade.sql, topology_upgrade.sql and sfcgal_upgrade.sql respectively. If you need them: psql -f rtpostgis_upgrade.sql -d your_spatial_databasepsql -f topology_upgrade.sql -d your_spatial_databasepsql -f sfcgal_upgrade.sql -d your_spatial_database
35-1	10638-10659	rtpostgis_upgrade.sql	_	_	_	
35-2	10659-10660	,	_	_	_	
35-3	10661-10681	topology_upgrade.sql	_	_	_	
35-4	10682-10685	and	_	_	_	
35-5	10686-10704	sfcgal_upgrade.sql	_	_	_	
35-6	10705-10717	respectively	_	_	_	
35-7	10717-10718	.	_	_	_	
35-8	10719-10721	If	_	_	_	
35-9	10722-10725	you	_	_	_	
35-10	10726-10730	need	_	_	_	
35-11	10731-10735	them	_	_	_	
35-12	10735-10736	:	_	_	_	
35-13	10737-10741	psql	_	_	_	
35-14	10742-10743	-	_	_	_	
35-15	10743-10744	f	_	_	_	
35-16	10745-10766	rtpostgis_upgrade.sql	_	_	_	
35-17	10767-10768	-	_	_	_	
35-18	10768-10769	d	_	_	_	
35-19	10770-10795	your_spatial_databasepsql	_	_	_	
35-20	10796-10797	-	_	_	_	
35-21	10797-10798	f	_	_	_	
35-22	10799-10819	topology_upgrade.sql	_	_	_	
35-23	10820-10821	-	_	_	_	
35-24	10821-10822	d	_	_	_	
35-25	10823-10848	your_spatial_databasepsql	_	_	_	
35-26	10849-10850	-	_	_	_	
35-27	10850-10851	f	_	_	_	
35-28	10852-10870	sfcgal_upgrade.sql	_	_	_	
35-29	10871-10872	-	_	_	_	
35-30	10872-10873	d	_	_	_	
35-31	10874-10895	your_spatial_database	_	_	_	

#Text=If you can't find the postgis_upgrade.sql specific for upgrading your version you are using a version too early for a soft upgrade and need to do a HARD UPGRADE. The PostGIS_Full_Version function should inform you about the need to run this kind of
36-1	10896-10898	If	_	_	_	
36-2	10899-10902	you	_	_	_	
36-3	10903-10908	can't	_	_	_	
36-4	10909-10913	find	_	_	_	
36-5	10914-10917	the	_	_	_	
36-6	10918-10937	postgis_upgrade.sql	_	_	_	
36-7	10938-10946	specific	_	_	_	
36-8	10947-10950	for	_	_	_	
36-9	10951-10960	upgrading	_	_	_	
36-10	10961-10965	your	_	_	_	
36-11	10966-10973	version	_	_	_	
36-12	10974-10977	you	_	_	_	
36-13	10978-10981	are	_	_	_	
36-14	10982-10987	using	_	_	_	
36-15	10988-10989	a	_	_	_	
36-16	10990-10997	version	_	_	_	
36-17	10998-11001	too	_	_	_	
36-18	11002-11007	early	_	_	_	
36-19	11008-11011	for	_	_	_	
36-20	11012-11013	a	_	_	_	
36-21	11014-11018	soft	_	_	_	
36-22	11019-11026	upgrade	_	_	_	
36-23	11027-11030	and	_	_	_	
36-24	11031-11035	need	_	_	_	
36-25	11036-11038	to	_	_	_	
36-26	11039-11041	do	_	_	_	
36-27	11042-11043	a	_	_	_	
36-28	11044-11048	HARD	_	_	_	
36-29	11049-11056	UPGRADE	_	_	_	
36-30	11056-11057	.	_	_	_	
36-31	11058-11061	The	_	_	_	
36-32	11062-11082	PostGIS_Full_Version	_	_	_	
36-33	11083-11091	function	_	_	_	
36-34	11092-11098	should	_	_	_	
36-35	11099-11105	inform	_	_	_	
36-36	11106-11109	you	_	_	_	
36-37	11110-11115	about	_	_	_	
36-38	11116-11119	the	_	_	_	
36-39	11120-11124	need	_	_	_	
36-40	11125-11127	to	_	_	_	
36-41	11128-11131	run	_	_	_	
36-42	11132-11136	this	_	_	_	
36-43	11137-11141	kind	_	_	_	
36-44	11142-11144	of	_	_	_	

#Text=upgrade using a "procs need upgrade" message. 3.4.1.2. Soft Upgrade 9.1+ using extensionsIf you originally installed PostGIS with extensions, then you need to upgrade using extensions as well. Doing a minor upgrade with extensions, is fairly painless.ALTER EXTENSION postgis UPDATE TO "3.1.2dev";
37-1	11145-11152	upgrade	_	_	_	
37-2	11153-11158	using	_	_	_	
37-3	11159-11160	a	_	_	_	
37-4	11161-11162	"	_	_	_	
37-5	11162-11167	procs	_	_	_	
37-6	11168-11172	need	_	_	_	
37-7	11173-11180	upgrade	_	_	_	
37-8	11180-11181	"	_	_	_	
37-9	11182-11189	message	_	_	_	
37-10	11189-11190	.	_	_	_	
37-11	11191-11198	3.4.1.2	_	_	_	
37-12	11198-11199	.	_	_	_	
37-13	11199-11200	 	_	_	_	
37-14	11200-11204	Soft	_	_	_	
37-15	11205-11212	Upgrade	_	_	_	
37-16	11213-11216	9.1	_	_	_	
37-17	11216-11217	+	_	_	_	
37-18	11218-11223	using	_	_	_	
37-19	11224-11236	extensionsIf	_	_	_	
37-20	11237-11240	you	_	_	_	
37-21	11241-11251	originally	_	_	_	
37-22	11252-11261	installed	_	_	_	
37-23	11262-11269	PostGIS	_	_	_	
37-24	11270-11274	with	_	_	_	
37-25	11275-11285	extensions	_	_	_	
37-26	11285-11286	,	_	_	_	
37-27	11287-11291	then	_	_	_	
37-28	11292-11295	you	_	_	_	
37-29	11296-11300	need	_	_	_	
37-30	11301-11303	to	_	_	_	
37-31	11304-11311	upgrade	_	_	_	
37-32	11312-11317	using	_	_	_	
37-33	11318-11328	extensions	_	_	_	
37-34	11329-11331	as	_	_	_	
37-35	11332-11336	well	_	_	_	
37-36	11336-11337	.	_	_	_	
37-37	11338-11343	Doing	_	_	_	
37-38	11344-11345	a	_	_	_	
37-39	11346-11351	minor	_	_	_	
37-40	11352-11359	upgrade	_	_	_	
37-41	11360-11364	with	_	_	_	
37-42	11365-11375	extensions	_	_	_	
37-43	11375-11376	,	_	_	_	
37-44	11377-11379	is	_	_	_	
37-45	11380-11386	fairly	_	_	_	
37-46	11387-11401	painless.ALTER	_	_	_	
37-47	11402-11411	EXTENSION	_	_	_	
37-48	11412-11419	postgis	_	_	_	
37-49	11420-11426	UPDATE	_	_	_	
37-50	11427-11429	TO	_	_	_	
37-51	11430-11431	"	_	_	_	
37-52	11431-11439	3.1.2dev	_	_	_	
37-53	11439-11440	"	_	_	_	
37-54	11440-11441	;	_	_	_	

#Text=ALTER EXTENSION postgis_topology UPDATE TO "3.1.2dev";If you get an error notice something like:No migration path defined for ... to 3.1.2devThen you'll need to backup your database, create a fresh one as described in Section 3.3.1, “Spatially enable database using EXTENSION” and then restore your backup ontop of this new database.If you get a notice message like:Version "3.1.2dev" of extension "postgis" is already installed Then everything is already up to date and you can safely ignore it. UNLESS you're attempting to upgrade from an development version to the next (which doesn't get a new version number); in that case you can append "next" to the version
38-1	11442-11447	ALTER	_	_	_	
38-2	11448-11457	EXTENSION	_	_	_	
38-3	11458-11474	postgis_topology	_	_	_	
38-4	11475-11481	UPDATE	_	_	_	
38-5	11482-11484	TO	_	_	_	
38-6	11485-11486	"	_	_	_	
38-7	11486-11494	3.1.2dev	_	_	_	
38-8	11494-11495	"	_	_	_	
38-9	11495-11496	;	_	_	_	
38-10	11496-11498	If	_	_	_	
38-11	11499-11502	you	_	_	_	
38-12	11503-11506	get	_	_	_	
38-13	11507-11509	an	_	_	_	
38-14	11510-11515	error	_	_	_	
38-15	11516-11522	notice	_	_	_	
38-16	11523-11532	something	_	_	_	
38-17	11533-11537	like	_	_	_	
38-18	11537-11538	:	_	_	_	
38-19	11538-11540	No	_	_	_	
38-20	11541-11550	migration	_	_	_	
38-21	11551-11555	path	_	_	_	
38-22	11556-11563	defined	_	_	_	
38-23	11564-11567	for	_	_	_	
38-24	11568-11569	.	_	_	_	
38-25	11569-11570	.	_	_	_	
38-26	11570-11571	.	_	_	_	
38-27	11572-11574	to	_	_	_	
38-28	11575-11587	3.1.2devThen	_	_	_	
38-29	11588-11594	you'll	_	_	_	
38-30	11595-11599	need	_	_	_	
38-31	11600-11602	to	_	_	_	
38-32	11603-11609	backup	_	_	_	
38-33	11610-11614	your	_	_	_	
38-34	11615-11623	database	_	_	_	
38-35	11623-11624	,	_	_	_	
38-36	11625-11631	create	_	_	_	
38-37	11632-11633	a	_	_	_	
38-38	11634-11639	fresh	_	_	_	
38-39	11640-11643	one	_	_	_	
38-40	11644-11646	as	_	_	_	
38-41	11647-11656	described	_	_	_	
38-42	11657-11659	in	_	_	_	
38-43	11660-11667	Section	_	_	_	
38-44	11667-11668	 	_	_	_	
38-45	11668-11673	3.3.1	_	_	_	
38-46	11673-11674	,	_	_	_	
38-47	11675-11676	“	_	_	_	
38-48	11676-11685	Spatially	_	_	_	
38-49	11686-11692	enable	_	_	_	
38-50	11693-11701	database	_	_	_	
38-51	11702-11707	using	_	_	_	
38-52	11708-11717	EXTENSION	_	_	_	
38-53	11717-11718	”	_	_	_	
38-54	11719-11722	and	_	_	_	
38-55	11723-11727	then	_	_	_	
38-56	11728-11735	restore	_	_	_	
38-57	11736-11740	your	_	_	_	
38-58	11741-11747	backup	_	_	_	
38-59	11748-11753	ontop	_	_	_	
38-60	11754-11756	of	_	_	_	
38-61	11757-11761	this	_	_	_	
38-62	11762-11765	new	_	_	_	
38-63	11766-11777	database.If	_	_	_	
38-64	11778-11781	you	_	_	_	
38-65	11782-11785	get	_	_	_	
38-66	11786-11787	a	_	_	_	
38-67	11788-11794	notice	_	_	_	
38-68	11795-11802	message	_	_	_	
38-69	11803-11807	like	_	_	_	
38-70	11807-11808	:	_	_	_	
38-71	11808-11815	Version	_	_	_	
38-72	11816-11817	"	_	_	_	
38-73	11817-11825	3.1.2dev	_	_	_	
38-74	11825-11826	"	_	_	_	
38-75	11827-11829	of	_	_	_	
38-76	11830-11839	extension	_	_	_	
38-77	11840-11841	"	_	_	_	
38-78	11841-11848	postgis	_	_	_	
38-79	11848-11849	"	_	_	_	
38-80	11850-11852	is	_	_	_	
38-81	11853-11860	already	_	_	_	
38-82	11861-11870	installed	_	_	_	
38-83	11871-11875	Then	_	_	_	
38-84	11876-11886	everything	_	_	_	
38-85	11887-11889	is	_	_	_	
38-86	11890-11897	already	_	_	_	
38-87	11898-11900	up	_	_	_	
38-88	11901-11903	to	_	_	_	
38-89	11904-11908	date	_	_	_	
38-90	11909-11912	and	_	_	_	
38-91	11913-11916	you	_	_	_	
38-92	11917-11920	can	_	_	_	
38-93	11921-11927	safely	_	_	_	
38-94	11928-11934	ignore	_	_	_	
38-95	11935-11937	it	_	_	_	
38-96	11937-11938	.	_	_	_	
38-97	11939-11945	UNLESS	_	_	_	
38-98	11946-11952	you're	_	_	_	
38-99	11953-11963	attempting	_	_	_	
38-100	11964-11966	to	_	_	_	
38-101	11967-11974	upgrade	_	_	_	
38-102	11975-11979	from	_	_	_	
38-103	11980-11982	an	_	_	_	
38-104	11983-11994	development	_	_	_	
38-105	11995-12002	version	_	_	_	
38-106	12003-12005	to	_	_	_	
38-107	12006-12009	the	_	_	_	
38-108	12010-12014	next	_	_	_	
38-109	12015-12016	(	_	_	_	
38-110	12016-12021	which	_	_	_	
38-111	12022-12029	doesn't	_	_	_	
38-112	12030-12033	get	_	_	_	
38-113	12034-12035	a	_	_	_	
38-114	12036-12039	new	_	_	_	
38-115	12040-12047	version	_	_	_	
38-116	12048-12054	number	_	_	_	
38-117	12054-12055	)	_	_	_	
38-118	12055-12056	;	_	_	_	
38-119	12057-12059	in	_	_	_	
38-120	12060-12064	that	_	_	_	
38-121	12065-12069	case	_	_	_	
38-122	12070-12073	you	_	_	_	
38-123	12074-12077	can	_	_	_	
38-124	12078-12084	append	_	_	_	
38-125	12085-12086	"	_	_	_	
38-126	12086-12090	next	_	_	_	
38-127	12090-12091	"	_	_	_	
38-128	12092-12094	to	_	_	_	
38-129	12095-12098	the	_	_	_	
38-130	12099-12106	version	_	_	_	

#Text=string, and next time you'll need to drop the "next" suffix again: ALTER EXTENSION postgis UPDATE TO "3.1.2devnext"; ALTER EXTENSION postgis_topology UPDATE TO "3.1.2devnext";If you installed PostGIS originally without a version specified, you can often skip the reinstallation of postgis extension before restoring since the backup just has CREATE EXTENSION postgis and thus
39-1	12107-12113	string	_	_	_	
39-2	12113-12114	,	_	_	_	
39-3	12115-12118	and	_	_	_	
39-4	12119-12123	next	_	_	_	
39-5	12124-12128	time	_	_	_	
39-6	12129-12135	you'll	_	_	_	
39-7	12136-12140	need	_	_	_	
39-8	12141-12143	to	_	_	_	
39-9	12144-12148	drop	_	_	_	
39-10	12149-12152	the	_	_	_	
39-11	12153-12154	"	_	_	_	
39-12	12154-12158	next	_	_	_	
39-13	12158-12159	"	_	_	_	
39-14	12160-12166	suffix	_	_	_	
39-15	12167-12172	again	_	_	_	
39-16	12172-12173	:	_	_	_	
39-17	12174-12179	ALTER	_	_	_	
39-18	12180-12189	EXTENSION	_	_	_	
39-19	12190-12197	postgis	_	_	_	
39-20	12198-12204	UPDATE	_	_	_	
39-21	12205-12207	TO	_	_	_	
39-22	12208-12209	"	_	_	_	
39-23	12209-12221	3.1.2devnext	_	_	_	
39-24	12221-12222	"	_	_	_	
39-25	12222-12223	;	_	_	_	
39-26	12224-12229	ALTER	_	_	_	
39-27	12230-12239	EXTENSION	_	_	_	
39-28	12240-12256	postgis_topology	_	_	_	
39-29	12257-12263	UPDATE	_	_	_	
39-30	12264-12266	TO	_	_	_	
39-31	12267-12268	"	_	_	_	
39-32	12268-12280	3.1.2devnext	_	_	_	
39-33	12280-12281	"	_	_	_	
39-34	12281-12282	;	_	_	_	
39-35	12282-12284	If	_	_	_	
39-36	12285-12288	you	_	_	_	
39-37	12289-12298	installed	_	_	_	
39-38	12299-12306	PostGIS	_	_	_	
39-39	12307-12317	originally	_	_	_	
39-40	12318-12325	without	_	_	_	
39-41	12326-12327	a	_	_	_	
39-42	12328-12335	version	_	_	_	
39-43	12336-12345	specified	_	_	_	
39-44	12345-12346	,	_	_	_	
39-45	12347-12350	you	_	_	_	
39-46	12351-12354	can	_	_	_	
39-47	12355-12360	often	_	_	_	
39-48	12361-12365	skip	_	_	_	
39-49	12366-12369	the	_	_	_	
39-50	12370-12384	reinstallation	_	_	_	
39-51	12385-12387	of	_	_	_	
39-52	12388-12395	postgis	_	_	_	
39-53	12396-12405	extension	_	_	_	
39-54	12406-12412	before	_	_	_	
39-55	12413-12422	restoring	_	_	_	
39-56	12423-12428	since	_	_	_	
39-57	12429-12432	the	_	_	_	
39-58	12433-12439	backup	_	_	_	
39-59	12440-12444	just	_	_	_	
39-60	12445-12448	has	_	_	_	
39-61	12449-12455	CREATE	_	_	_	
39-62	12456-12465	EXTENSION	_	_	_	
39-63	12466-12473	postgis	_	_	_	
39-64	12474-12477	and	_	_	_	
39-65	12478-12482	thus	_	_	_	

#Text=picks up the newest latest version during restore. If you are upgrading PostGIS extension from a version prior to 3.0.0 you'll end up with an unpackaged PostGIS Raster support. You can repackage the raster support using: CREATE EXTENSION postgis_raster FROM unpackaged;
40-1	12483-12488	picks	_	_	_	
40-2	12489-12491	up	_	_	_	
40-3	12492-12495	the	_	_	_	
40-4	12496-12502	newest	_	_	_	
40-5	12503-12509	latest	_	_	_	
40-6	12510-12517	version	_	_	_	
40-7	12518-12524	during	_	_	_	
40-8	12525-12532	restore	_	_	_	
40-9	12532-12533	.	_	_	_	
40-10	12534-12536	If	_	_	_	
40-11	12537-12540	you	_	_	_	
40-12	12541-12544	are	_	_	_	
40-13	12545-12554	upgrading	_	_	_	
40-14	12555-12562	PostGIS	_	_	_	
40-15	12563-12572	extension	_	_	_	
40-16	12573-12577	from	_	_	_	
40-17	12578-12579	a	_	_	_	
40-18	12580-12587	version	_	_	_	
40-19	12588-12593	prior	_	_	_	
40-20	12594-12596	to	_	_	_	
40-21	12597-12602	3.0.0	_	_	_	
40-22	12603-12609	you'll	_	_	_	
40-23	12610-12613	end	_	_	_	
40-24	12614-12616	up	_	_	_	
40-25	12617-12621	with	_	_	_	
40-26	12622-12624	an	_	_	_	
40-27	12625-12635	unpackaged	_	_	_	
40-28	12636-12643	PostGIS	_	_	_	
40-29	12644-12650	Raster	_	_	_	
40-30	12651-12658	support	_	_	_	
40-31	12658-12659	.	_	_	_	
40-32	12660-12663	You	_	_	_	
40-33	12664-12667	can	_	_	_	
40-34	12668-12677	repackage	_	_	_	
40-35	12678-12681	the	_	_	_	
40-36	12682-12688	raster	_	_	_	
40-37	12689-12696	support	_	_	_	
40-38	12697-12702	using	_	_	_	
40-39	12702-12703	:	_	_	_	
40-40	12704-12710	CREATE	_	_	_	
40-41	12711-12720	EXTENSION	_	_	_	
40-42	12721-12735	postgis_raster	_	_	_	
40-43	12736-12740	FROM	_	_	_	
40-44	12741-12751	unpackaged	_	_	_	
40-45	12751-12752	;	_	_	_	

#Text=And then, if you don't need it, drop it with: DROP EXTENSION postgis_raster; 3.4.2. Hard upgrade By HARD UPGRADE we mean full dump/reload of postgis-enabled databases. You need a HARD UPGRADE when PostGIS objects' internal storage changes
41-1	12753-12756	And	_	_	_	
41-2	12757-12761	then	_	_	_	
41-3	12761-12762	,	_	_	_	
41-4	12763-12765	if	_	_	_	
41-5	12766-12769	you	_	_	_	
41-6	12770-12775	don't	_	_	_	
41-7	12776-12780	need	_	_	_	
41-8	12781-12783	it	_	_	_	
41-9	12783-12784	,	_	_	_	
41-10	12785-12789	drop	_	_	_	
41-11	12790-12792	it	_	_	_	
41-12	12793-12797	with	_	_	_	
41-13	12797-12798	:	_	_	_	
41-14	12799-12803	DROP	_	_	_	
41-15	12804-12813	EXTENSION	_	_	_	
41-16	12814-12828	postgis_raster	_	_	_	
41-17	12828-12829	;	_	_	_	
41-18	12830-12835	3.4.2	_	_	_	
41-19	12835-12836	.	_	_	_	
41-20	12836-12837	 	_	_	_	
41-21	12837-12841	Hard	_	_	_	
41-22	12842-12849	upgrade	_	_	_	
41-23	12850-12852	By	_	_	_	
41-24	12853-12857	HARD	_	_	_	
41-25	12858-12865	UPGRADE	_	_	_	
41-26	12866-12868	we	_	_	_	
41-27	12869-12873	mean	_	_	_	
41-28	12874-12878	full	_	_	_	
41-29	12879-12883	dump	_	_	_	
41-30	12883-12884	/	_	_	_	
41-31	12884-12890	reload	_	_	_	
41-32	12891-12893	of	_	_	_	
41-33	12894-12909	postgis-enabled	_	_	_	
41-34	12910-12919	databases	_	_	_	
41-35	12919-12920	.	_	_	_	
41-36	12921-12924	You	_	_	_	
41-37	12925-12929	need	_	_	_	
41-38	12930-12931	a	_	_	_	
41-39	12932-12936	HARD	_	_	_	
41-40	12937-12944	UPGRADE	_	_	_	
41-41	12945-12949	when	_	_	_	
41-42	12950-12957	PostGIS	_	_	_	
41-43	12958-12965	objects	_	_	_	
41-44	12965-12966	'	_	_	_	
41-45	12967-12975	internal	_	_	_	
41-46	12976-12983	storage	_	_	_	
41-47	12984-12991	changes	_	_	_	

#Text=or when SOFT UPGRADE is not possible. The Release Notes appendix reports for each version whether you need a dump/reload (HARD UPGRADE) to upgrade. The dump/reload process is assisted by the postgis_restore.pl script which takes care of skipping from the dump all
42-1	12992-12994	or	_	_	_	
42-2	12995-12999	when	_	_	_	
42-3	13000-13004	SOFT	_	_	_	
42-4	13005-13012	UPGRADE	_	_	_	
42-5	13013-13015	is	_	_	_	
42-6	13016-13019	not	_	_	_	
42-7	13020-13028	possible	_	_	_	
42-8	13028-13029	.	_	_	_	
42-9	13030-13033	The	_	_	_	
42-10	13034-13041	Release	_	_	_	
42-11	13042-13047	Notes	_	_	_	
42-12	13048-13056	appendix	_	_	_	
42-13	13057-13064	reports	_	_	_	
42-14	13065-13068	for	_	_	_	
42-15	13069-13073	each	_	_	_	
42-16	13074-13081	version	_	_	_	
42-17	13082-13089	whether	_	_	_	
42-18	13090-13093	you	_	_	_	
42-19	13094-13098	need	_	_	_	
42-20	13099-13100	a	_	_	_	
42-21	13101-13105	dump	_	_	_	
42-22	13105-13106	/	_	_	_	
42-23	13106-13112	reload	_	_	_	
42-24	13113-13114	(	_	_	_	
42-25	13114-13118	HARD	_	_	_	
42-26	13119-13126	UPGRADE	_	_	_	
42-27	13126-13127	)	_	_	_	
42-28	13128-13130	to	_	_	_	
42-29	13131-13138	upgrade	_	_	_	
42-30	13138-13139	.	_	_	_	
42-31	13140-13143	The	_	_	_	
42-32	13144-13148	dump	_	_	_	
42-33	13148-13149	/	_	_	_	
42-34	13149-13155	reload	_	_	_	
42-35	13156-13163	process	_	_	_	
42-36	13164-13166	is	_	_	_	
42-37	13167-13175	assisted	_	_	_	
42-38	13176-13178	by	_	_	_	
42-39	13179-13182	the	_	_	_	
42-40	13183-13201	postgis_restore.pl	_	_	_	
42-41	13202-13208	script	_	_	_	
42-42	13209-13214	which	_	_	_	
42-43	13215-13220	takes	_	_	_	
42-44	13221-13225	care	_	_	_	
42-45	13226-13228	of	_	_	_	
42-46	13229-13237	skipping	_	_	_	
42-47	13238-13242	from	_	_	_	
42-48	13243-13246	the	_	_	_	
42-49	13247-13251	dump	_	_	_	
42-50	13252-13255	all	_	_	_	

#Text=definitions which belong to PostGIS (including old ones), allowing you to restore your schemas and data into a database with PostGIS installed without getting duplicate symbol errors or bringing forward deprecated objects. Supplementary instructions for windows users are available at Windows Hard upgrade. The Procedure is as follows:
43-1	13256-13267	definitions	_	_	_	
43-2	13268-13273	which	_	_	_	
43-3	13274-13280	belong	_	_	_	
43-4	13281-13283	to	_	_	_	
43-5	13284-13291	PostGIS	_	_	_	
43-6	13292-13293	(	_	_	_	
43-7	13293-13302	including	_	_	_	
43-8	13303-13306	old	_	_	_	
43-9	13307-13311	ones	_	_	_	
43-10	13311-13312	)	_	_	_	
43-11	13312-13313	,	_	_	_	
43-12	13314-13322	allowing	_	_	_	
43-13	13323-13326	you	_	_	_	
43-14	13327-13329	to	_	_	_	
43-15	13330-13337	restore	_	_	_	
43-16	13338-13342	your	_	_	_	
43-17	13343-13350	schemas	_	_	_	
43-18	13351-13354	and	_	_	_	
43-19	13355-13359	data	_	_	_	
43-20	13360-13364	into	_	_	_	
43-21	13365-13366	a	_	_	_	
43-22	13367-13375	database	_	_	_	
43-23	13376-13380	with	_	_	_	
43-24	13381-13388	PostGIS	_	_	_	
43-25	13389-13398	installed	_	_	_	
43-26	13399-13406	without	_	_	_	
43-27	13407-13414	getting	_	_	_	
43-28	13415-13424	duplicate	_	_	_	
43-29	13425-13431	symbol	_	_	_	
43-30	13432-13438	errors	_	_	_	
43-31	13439-13441	or	_	_	_	
43-32	13442-13450	bringing	_	_	_	
43-33	13451-13458	forward	_	_	_	
43-34	13459-13469	deprecated	_	_	_	
43-35	13470-13477	objects	_	_	_	
43-36	13477-13478	.	_	_	_	
43-37	13479-13492	Supplementary	_	_	_	
43-38	13493-13505	instructions	_	_	_	
43-39	13506-13509	for	_	_	_	
43-40	13510-13517	windows	_	_	_	
43-41	13518-13523	users	_	_	_	
43-42	13524-13527	are	_	_	_	
43-43	13528-13537	available	_	_	_	
43-44	13538-13540	at	_	_	_	
43-45	13541-13548	Windows	_	_	_	
43-46	13549-13553	Hard	_	_	_	
43-47	13554-13561	upgrade	_	_	_	
43-48	13561-13562	.	_	_	_	
43-49	13563-13566	The	_	_	_	
43-50	13567-13576	Procedure	_	_	_	
43-51	13577-13579	is	_	_	_	
43-52	13580-13582	as	_	_	_	
43-53	13583-13590	follows	_	_	_	
43-54	13590-13591	:	_	_	_	

#Text=Create a "custom-format" dump of the database you want to upgrade (let's call it olddb) include binary blobs (-b) and verbose (-v) output. The user can be the owner of the db, need not be postgres super account.
44-1	13592-13598	Create	_	_	_	
44-2	13599-13600	a	_	_	_	
44-3	13601-13602	"	_	_	_	
44-4	13602-13615	custom-format	_	_	_	
44-5	13615-13616	"	_	_	_	
44-6	13617-13621	dump	_	_	_	
44-7	13622-13624	of	_	_	_	
44-8	13625-13628	the	_	_	_	
44-9	13629-13637	database	_	_	_	
44-10	13638-13641	you	_	_	_	
44-11	13642-13646	want	_	_	_	
44-12	13647-13649	to	_	_	_	
44-13	13650-13657	upgrade	_	_	_	
44-14	13658-13659	(	_	_	_	
44-15	13659-13664	let's	_	_	_	
44-16	13665-13669	call	_	_	_	
44-17	13670-13672	it	_	_	_	
44-18	13673-13678	olddb	_	_	_	
44-19	13678-13679	)	_	_	_	
44-20	13680-13687	include	_	_	_	
44-21	13688-13694	binary	_	_	_	
44-22	13695-13700	blobs	_	_	_	
44-23	13701-13702	(	_	_	_	
44-24	13702-13703	-	_	_	_	
44-25	13703-13704	b	_	_	_	
44-26	13704-13705	)	_	_	_	
44-27	13706-13709	and	_	_	_	
44-28	13710-13717	verbose	_	_	_	
44-29	13718-13719	(	_	_	_	
44-30	13719-13720	-	_	_	_	
44-31	13720-13721	v	_	_	_	
44-32	13721-13722	)	_	_	_	
44-33	13723-13729	output	_	_	_	
44-34	13729-13730	.	_	_	_	
44-35	13731-13734	The	_	_	_	
44-36	13735-13739	user	_	_	_	
44-37	13740-13743	can	_	_	_	
44-38	13744-13746	be	_	_	_	
44-39	13747-13750	the	_	_	_	
44-40	13751-13756	owner	_	_	_	
44-41	13757-13759	of	_	_	_	
44-42	13760-13763	the	_	_	_	
44-43	13764-13766	db	_	_	_	
44-44	13766-13767	,	_	_	_	
44-45	13768-13772	need	_	_	_	
44-46	13773-13776	not	_	_	_	
44-47	13777-13779	be	_	_	_	
44-48	13780-13788	postgres	_	_	_	
44-49	13789-13794	super	_	_	_	
44-50	13795-13802	account	_	_	_	
44-51	13802-13803	.	_	_	_	

#Text=pg_dump -h localhost -p 5432 -U postgres -Fc -b -v -f "/somepath/olddb.backup" olddb Do a fresh install of PostGIS in a new database -- we'll refer to this database as newdb. Please refer to Section 3.3.2, “Spatially enable database without using EXTENSION (discouraged)” and Section 3.3.1, “Spatially enable database using EXTENSION” for
45-1	13804-13811	pg_dump	_	_	_	
45-2	13812-13813	-	_	_	_	
45-3	13813-13814	h	_	_	_	
45-4	13815-13824	localhost	_	_	_	
45-5	13825-13826	-	_	_	_	
45-6	13826-13827	p	_	_	_	
45-7	13828-13832	5432	_	_	_	
45-8	13833-13834	-	_	_	_	
45-9	13834-13835	U	_	_	_	
45-10	13836-13844	postgres	_	_	_	
45-11	13845-13846	-	_	_	_	
45-12	13846-13848	Fc	_	_	_	
45-13	13849-13850	-	_	_	_	
45-14	13850-13851	b	_	_	_	
45-15	13852-13853	-	_	_	_	
45-16	13853-13854	v	_	_	_	
45-17	13855-13856	-	_	_	_	
45-18	13856-13857	f	_	_	_	
45-19	13858-13859	"	_	_	_	
45-20	13859-13860	/	_	_	_	
45-21	13860-13868	somepath	_	_	_	
45-22	13868-13869	/	_	_	_	
45-23	13869-13881	olddb.backup	_	_	_	
45-24	13881-13882	"	_	_	_	
45-25	13883-13888	olddb	_	_	_	
45-26	13889-13891	Do	_	_	_	
45-27	13892-13893	a	_	_	_	
45-28	13894-13899	fresh	_	_	_	
45-29	13900-13907	install	_	_	_	
45-30	13908-13910	of	_	_	_	
45-31	13911-13918	PostGIS	_	_	_	
45-32	13919-13921	in	_	_	_	
45-33	13922-13923	a	_	_	_	
45-34	13924-13927	new	_	_	_	
45-35	13928-13936	database	_	_	_	
45-36	13937-13938	-	_	_	_	
45-37	13938-13939	-	_	_	_	
45-38	13940-13945	we'll	_	_	_	
45-39	13946-13951	refer	_	_	_	
45-40	13952-13954	to	_	_	_	
45-41	13955-13959	this	_	_	_	
45-42	13960-13968	database	_	_	_	
45-43	13969-13971	as	_	_	_	
45-44	13972-13977	newdb	_	_	_	
45-45	13977-13978	.	_	_	_	
45-46	13979-13985	Please	_	_	_	
45-47	13986-13991	refer	_	_	_	
45-48	13992-13994	to	_	_	_	
45-49	13995-14002	Section	_	_	_	
45-50	14002-14003	 	_	_	_	
45-51	14003-14008	3.3.2	_	_	_	
45-52	14008-14009	,	_	_	_	
45-53	14010-14011	“	_	_	_	
45-54	14011-14020	Spatially	_	_	_	
45-55	14021-14027	enable	_	_	_	
45-56	14028-14036	database	_	_	_	
45-57	14037-14044	without	_	_	_	
45-58	14045-14050	using	_	_	_	
45-59	14051-14060	EXTENSION	_	_	_	
45-60	14061-14062	(	_	_	_	
45-61	14062-14073	discouraged	_	_	_	
45-62	14073-14074	)	_	_	_	
45-63	14074-14075	”	_	_	_	
45-64	14076-14079	and	_	_	_	
45-65	14080-14087	Section	_	_	_	
45-66	14087-14088	 	_	_	_	
45-67	14088-14093	3.3.1	_	_	_	
45-68	14093-14094	,	_	_	_	
45-69	14095-14096	“	_	_	_	
45-70	14096-14105	Spatially	_	_	_	
45-71	14106-14112	enable	_	_	_	
45-72	14113-14121	database	_	_	_	
45-73	14122-14127	using	_	_	_	
45-74	14128-14137	EXTENSION	_	_	_	
45-75	14137-14138	”	_	_	_	
45-76	14139-14142	for	_	_	_	

#Text=instructions on how to do this. The spatial_ref_sys entries found in your dump will be restored, but they will not override existing ones in spatial_ref_sys. This is to ensure that fixes in the official set will be properly propagated to restored
46-1	14143-14155	instructions	_	_	_	
46-2	14156-14158	on	_	_	_	
46-3	14159-14162	how	_	_	_	
46-4	14163-14165	to	_	_	_	
46-5	14166-14168	do	_	_	_	
46-6	14169-14173	this	_	_	_	
46-7	14173-14174	.	_	_	_	
46-8	14175-14178	The	_	_	_	
46-9	14179-14194	spatial_ref_sys	_	_	_	
46-10	14195-14202	entries	_	_	_	
46-11	14203-14208	found	_	_	_	
46-12	14209-14211	in	_	_	_	
46-13	14212-14216	your	_	_	_	
46-14	14217-14221	dump	_	_	_	
46-15	14222-14226	will	_	_	_	
46-16	14227-14229	be	_	_	_	
46-17	14230-14238	restored	_	_	_	
46-18	14238-14239	,	_	_	_	
46-19	14240-14243	but	_	_	_	
46-20	14244-14248	they	_	_	_	
46-21	14249-14253	will	_	_	_	
46-22	14254-14257	not	_	_	_	
46-23	14258-14266	override	_	_	_	
46-24	14267-14275	existing	_	_	_	
46-25	14276-14280	ones	_	_	_	
46-26	14281-14283	in	_	_	_	
46-27	14284-14299	spatial_ref_sys	_	_	_	
46-28	14299-14300	.	_	_	_	
46-29	14301-14305	This	_	_	_	
46-30	14306-14308	is	_	_	_	
46-31	14309-14311	to	_	_	_	
46-32	14312-14318	ensure	_	_	_	
46-33	14319-14323	that	_	_	_	
46-34	14324-14329	fixes	_	_	_	
46-35	14330-14332	in	_	_	_	
46-36	14333-14336	the	_	_	_	
46-37	14337-14345	official	_	_	_	
46-38	14346-14349	set	_	_	_	
46-39	14350-14354	will	_	_	_	
46-40	14355-14357	be	_	_	_	
46-41	14358-14366	properly	_	_	_	
46-42	14367-14377	propagated	_	_	_	
46-43	14378-14380	to	_	_	_	
46-44	14381-14389	restored	_	_	_	

#Text=databases. If for any reason you really want your own overrides of standard entries just don't load the spatial_ref_sys.sql file when creating the new db. If your database is really old or you know you've been using long deprecated functions in your
47-1	14390-14399	databases	_	_	_	
47-2	14399-14400	.	_	_	_	
47-3	14401-14403	If	_	_	_	
47-4	14404-14407	for	_	_	_	
47-5	14408-14411	any	_	_	_	
47-6	14412-14418	reason	_	_	_	
47-7	14419-14422	you	_	_	_	
47-8	14423-14429	really	_	_	_	
47-9	14430-14434	want	_	_	_	
47-10	14435-14439	your	_	_	_	
47-11	14440-14443	own	_	_	_	
47-12	14444-14453	overrides	_	_	_	
47-13	14454-14456	of	_	_	_	
47-14	14457-14465	standard	_	_	_	
47-15	14466-14473	entries	_	_	_	
47-16	14474-14478	just	_	_	_	
47-17	14479-14484	don't	_	_	_	
47-18	14485-14489	load	_	_	_	
47-19	14490-14493	the	_	_	_	
47-20	14494-14513	spatial_ref_sys.sql	_	_	_	
47-21	14514-14518	file	_	_	_	
47-22	14519-14523	when	_	_	_	
47-23	14524-14532	creating	_	_	_	
47-24	14533-14536	the	_	_	_	
47-25	14537-14540	new	_	_	_	
47-26	14541-14543	db	_	_	_	
47-27	14543-14544	.	_	_	_	
47-28	14545-14547	If	_	_	_	
47-29	14548-14552	your	_	_	_	
47-30	14553-14561	database	_	_	_	
47-31	14562-14564	is	_	_	_	
47-32	14565-14571	really	_	_	_	
47-33	14572-14575	old	_	_	_	
47-34	14576-14578	or	_	_	_	
47-35	14579-14582	you	_	_	_	
47-36	14583-14587	know	_	_	_	
47-37	14588-14594	you've	_	_	_	
47-38	14595-14599	been	_	_	_	
47-39	14600-14605	using	_	_	_	
47-40	14606-14610	long	_	_	_	
47-41	14611-14621	deprecated	_	_	_	
47-42	14622-14631	functions	_	_	_	
47-43	14632-14634	in	_	_	_	
47-44	14635-14639	your	_	_	_	

#Text=views and functions, you might need to load legacy.sql for all your functions and views etc. to properly come back. Only do this if _really_ needed. Consider upgrading your views and functions before dumping instead, if possible. The deprecated functions can be later removed by loading
48-1	14640-14645	views	_	_	_	
48-2	14646-14649	and	_	_	_	
48-3	14650-14659	functions	_	_	_	
48-4	14659-14660	,	_	_	_	
48-5	14661-14664	you	_	_	_	
48-6	14665-14670	might	_	_	_	
48-7	14671-14675	need	_	_	_	
48-8	14676-14678	to	_	_	_	
48-9	14679-14683	load	_	_	_	
48-10	14684-14694	legacy.sql	_	_	_	
48-11	14695-14698	for	_	_	_	
48-12	14699-14702	all	_	_	_	
48-13	14703-14707	your	_	_	_	
48-14	14708-14717	functions	_	_	_	
48-15	14718-14721	and	_	_	_	
48-16	14722-14727	views	_	_	_	
48-17	14728-14731	etc	_	_	_	
48-18	14731-14732	.	_	_	_	
48-19	14733-14735	to	_	_	_	
48-20	14736-14744	properly	_	_	_	
48-21	14745-14749	come	_	_	_	
48-22	14750-14754	back	_	_	_	
48-23	14754-14755	.	_	_	_	
48-24	14756-14760	Only	_	_	_	
48-25	14761-14763	do	_	_	_	
48-26	14764-14768	this	_	_	_	
48-27	14769-14771	if	_	_	_	
48-28	14772-14773	_	_	_	_	
48-29	14773-14779	really	_	_	_	
48-30	14779-14780	_	_	_	_	
48-31	14781-14787	needed	_	_	_	
48-32	14787-14788	.	_	_	_	
48-33	14789-14797	Consider	_	_	_	
48-34	14798-14807	upgrading	_	_	_	
48-35	14808-14812	your	_	_	_	
48-36	14813-14818	views	_	_	_	
48-37	14819-14822	and	_	_	_	
48-38	14823-14832	functions	_	_	_	
48-39	14833-14839	before	_	_	_	
48-40	14840-14847	dumping	_	_	_	
48-41	14848-14855	instead	_	_	_	
48-42	14855-14856	,	_	_	_	
48-43	14857-14859	if	_	_	_	
48-44	14860-14868	possible	_	_	_	
48-45	14868-14869	.	_	_	_	
48-46	14870-14873	The	_	_	_	
48-47	14874-14884	deprecated	_	_	_	
48-48	14885-14894	functions	_	_	_	
48-49	14895-14898	can	_	_	_	
48-50	14899-14901	be	_	_	_	
48-51	14902-14907	later	_	_	_	
48-52	14908-14915	removed	_	_	_	
48-53	14916-14918	by	_	_	_	
48-54	14919-14926	loading	_	_	_	

#Text=uninstall_legacy.sql. Restore your backup into your fresh newdb database using postgis_restore.pl. Unexpected errors, if any, will be printed to the standard error stream by psql. Keep a log of those.
49-1	14927-14947	uninstall_legacy.sql	_	_	_	
49-2	14947-14948	.	_	_	_	
49-3	14949-14956	Restore	_	_	_	
49-4	14957-14961	your	_	_	_	
49-5	14962-14968	backup	_	_	_	
49-6	14969-14973	into	_	_	_	
49-7	14974-14978	your	_	_	_	
49-8	14979-14984	fresh	_	_	_	
49-9	14985-14990	newdb	_	_	_	
49-10	14991-14999	database	_	_	_	
49-11	15000-15005	using	_	_	_	
49-12	15006-15024	postgis_restore.pl	_	_	_	
49-13	15024-15025	.	_	_	_	
49-14	15026-15036	Unexpected	_	_	_	
49-15	15037-15043	errors	_	_	_	
49-16	15043-15044	,	_	_	_	
49-17	15045-15047	if	_	_	_	
49-18	15048-15051	any	_	_	_	
49-19	15051-15052	,	_	_	_	
49-20	15053-15057	will	_	_	_	
49-21	15058-15060	be	_	_	_	
49-22	15061-15068	printed	_	_	_	
49-23	15069-15071	to	_	_	_	
49-24	15072-15075	the	_	_	_	
49-25	15076-15084	standard	_	_	_	
49-26	15085-15090	error	_	_	_	
49-27	15091-15097	stream	_	_	_	
49-28	15098-15100	by	_	_	_	
49-29	15101-15105	psql	_	_	_	
49-30	15105-15106	.	_	_	_	
49-31	15107-15111	Keep	_	_	_	
49-32	15112-15113	a	_	_	_	
49-33	15114-15117	log	_	_	_	
49-34	15118-15120	of	_	_	_	
49-35	15121-15126	those	_	_	_	
49-36	15126-15127	.	_	_	_	

#Text=perl utils/postgis_restore.pl "/somepath/olddb.backup" | psql -h localhost -p 5432 -U postgres newdb 2> errors.txt Errors may arise in the following cases: Some of your views or functions make use of deprecated PostGIS objects. In order to fix this you may try loading legacy.sql script prior to restore or you'll have to restore to a
50-1	15128-15132	perl	_	_	_	
50-2	15133-15138	utils	_	_	_	
50-3	15138-15139	/	_	_	_	
50-4	15139-15157	postgis_restore.pl	_	_	_	
50-5	15158-15159	"	_	_	_	
50-6	15159-15160	/	_	_	_	
50-7	15160-15168	somepath	_	_	_	
50-8	15168-15169	/	_	_	_	
50-9	15169-15181	olddb.backup	_	_	_	
50-10	15181-15182	"	_	_	_	
50-11	15183-15184	|	_	_	_	
50-12	15185-15189	psql	_	_	_	
50-13	15190-15191	-	_	_	_	
50-14	15191-15192	h	_	_	_	
50-15	15193-15202	localhost	_	_	_	
50-16	15203-15204	-	_	_	_	
50-17	15204-15205	p	_	_	_	
50-18	15206-15210	5432	_	_	_	
50-19	15211-15212	-	_	_	_	
50-20	15212-15213	U	_	_	_	
50-21	15214-15222	postgres	_	_	_	
50-22	15223-15228	newdb	_	_	_	
50-23	15229-15230	2	_	_	_	
50-24	15230-15231	>	_	_	_	
50-25	15232-15242	errors.txt	_	_	_	
50-26	15243-15249	Errors	_	_	_	
50-27	15250-15253	may	_	_	_	
50-28	15254-15259	arise	_	_	_	
50-29	15260-15262	in	_	_	_	
50-30	15263-15266	the	_	_	_	
50-31	15267-15276	following	_	_	_	
50-32	15277-15282	cases	_	_	_	
50-33	15282-15283	:	_	_	_	
50-34	15284-15288	Some	_	_	_	
50-35	15289-15291	of	_	_	_	
50-36	15292-15296	your	_	_	_	
50-37	15297-15302	views	_	_	_	
50-38	15303-15305	or	_	_	_	
50-39	15306-15315	functions	_	_	_	
50-40	15316-15320	make	_	_	_	
50-41	15321-15324	use	_	_	_	
50-42	15325-15327	of	_	_	_	
50-43	15328-15338	deprecated	_	_	_	
50-44	15339-15346	PostGIS	_	_	_	
50-45	15347-15354	objects	_	_	_	
50-46	15354-15355	.	_	_	_	
50-47	15356-15358	In	_	_	_	
50-48	15359-15364	order	_	_	_	
50-49	15365-15367	to	_	_	_	
50-50	15368-15371	fix	_	_	_	
50-51	15372-15376	this	_	_	_	
50-52	15377-15380	you	_	_	_	
50-53	15381-15384	may	_	_	_	
50-54	15385-15388	try	_	_	_	
50-55	15389-15396	loading	_	_	_	
50-56	15397-15407	legacy.sql	_	_	_	
50-57	15408-15414	script	_	_	_	
50-58	15415-15420	prior	_	_	_	
50-59	15421-15423	to	_	_	_	
50-60	15424-15431	restore	_	_	_	
50-61	15432-15434	or	_	_	_	
50-62	15435-15441	you'll	_	_	_	
50-63	15442-15446	have	_	_	_	
50-64	15447-15449	to	_	_	_	
50-65	15450-15457	restore	_	_	_	
50-66	15458-15460	to	_	_	_	
50-67	15461-15462	a	_	_	_	

#Text=version of PostGIS which still contains those objects and try a migration again after porting your code. If the legacy.sql way works for you, don't forget to fix your code to stop using deprecated functions and drop them loading uninstall_legacy.sql.
51-1	15463-15470	version	_	_	_	
51-2	15471-15473	of	_	_	_	
51-3	15474-15481	PostGIS	_	_	_	
51-4	15482-15487	which	_	_	_	
51-5	15488-15493	still	_	_	_	
51-6	15494-15502	contains	_	_	_	
51-7	15503-15508	those	_	_	_	
51-8	15509-15516	objects	_	_	_	
51-9	15517-15520	and	_	_	_	
51-10	15521-15524	try	_	_	_	
51-11	15525-15526	a	_	_	_	
51-12	15527-15536	migration	_	_	_	
51-13	15537-15542	again	_	_	_	
51-14	15543-15548	after	_	_	_	
51-15	15549-15556	porting	_	_	_	
51-16	15557-15561	your	_	_	_	
51-17	15562-15566	code	_	_	_	
51-18	15566-15567	.	_	_	_	
51-19	15568-15570	If	_	_	_	
51-20	15571-15574	the	_	_	_	
51-21	15575-15585	legacy.sql	_	_	_	
51-22	15586-15589	way	_	_	_	
51-23	15590-15595	works	_	_	_	
51-24	15596-15599	for	_	_	_	
51-25	15600-15603	you	_	_	_	
51-26	15603-15604	,	_	_	_	
51-27	15605-15610	don't	_	_	_	
51-28	15611-15617	forget	_	_	_	
51-29	15618-15620	to	_	_	_	
51-30	15621-15624	fix	_	_	_	
51-31	15625-15629	your	_	_	_	
51-32	15630-15634	code	_	_	_	
51-33	15635-15637	to	_	_	_	
51-34	15638-15642	stop	_	_	_	
51-35	15643-15648	using	_	_	_	
51-36	15649-15659	deprecated	_	_	_	
51-37	15660-15669	functions	_	_	_	
51-38	15670-15673	and	_	_	_	
51-39	15674-15678	drop	_	_	_	
51-40	15679-15683	them	_	_	_	
51-41	15684-15691	loading	_	_	_	
51-42	15692-15712	uninstall_legacy.sql	_	_	_	
51-43	15712-15713	.	_	_	_	

#Text=Some custom records of spatial_ref_sys in dump file have an invalid SRID value. Valid SRID values are bigger than 0 and smaller than 999000. Values in the 999000.999999 range are reserved for internal use while values > 999999 can't be used at all.
52-1	15714-15718	Some	_	_	_	
52-2	15719-15725	custom	_	_	_	
52-3	15726-15733	records	_	_	_	
52-4	15734-15736	of	_	_	_	
52-5	15737-15752	spatial_ref_sys	_	_	_	
52-6	15753-15755	in	_	_	_	
52-7	15756-15760	dump	_	_	_	
52-8	15761-15765	file	_	_	_	
52-9	15766-15770	have	_	_	_	
52-10	15771-15773	an	_	_	_	
52-11	15774-15781	invalid	_	_	_	
52-12	15782-15786	SRID	_	_	_	
52-13	15787-15792	value	_	_	_	
52-14	15792-15793	.	_	_	_	
52-15	15794-15799	Valid	_	_	_	
52-16	15800-15804	SRID	_	_	_	
52-17	15805-15811	values	_	_	_	
52-18	15812-15815	are	_	_	_	
52-19	15816-15822	bigger	_	_	_	
52-20	15823-15827	than	_	_	_	
52-21	15828-15829	0	_	_	_	
52-22	15830-15833	and	_	_	_	
52-23	15834-15841	smaller	_	_	_	
52-24	15842-15846	than	_	_	_	
52-25	15847-15853	999000	_	_	_	
52-26	15853-15854	.	_	_	_	
52-27	15855-15861	Values	_	_	_	
52-28	15862-15864	in	_	_	_	
52-29	15865-15868	the	_	_	_	
52-30	15869-15882	999000.999999	_	_	_	
52-31	15883-15888	range	_	_	_	
52-32	15889-15892	are	_	_	_	
52-33	15893-15901	reserved	_	_	_	
52-34	15902-15905	for	_	_	_	
52-35	15906-15914	internal	_	_	_	
52-36	15915-15918	use	_	_	_	
52-37	15919-15924	while	_	_	_	
52-38	15925-15931	values	_	_	_	
52-39	15932-15933	>	_	_	_	
52-40	15934-15940	999999	_	_	_	
52-41	15941-15946	can't	_	_	_	
52-42	15947-15949	be	_	_	_	
52-43	15950-15954	used	_	_	_	
52-44	15955-15957	at	_	_	_	
52-45	15958-15961	all	_	_	_	
52-46	15961-15962	.	_	_	_	

#Text=All your custom records with invalid SRIDs will be retained, with those > 999999 moved into the reserved range, but the spatial_ref_sys table would lose a check constraint guarding for that invariant to hold and possibly also its primary key ( when multiple invalid SRIDS get converted to the same reserved
53-1	15963-15966	All	_	_	_	
53-2	15967-15971	your	_	_	_	
53-3	15972-15978	custom	_	_	_	
53-4	15979-15986	records	_	_	_	
53-5	15987-15991	with	_	_	_	
53-6	15992-15999	invalid	_	_	_	
53-7	16000-16005	SRIDs	_	_	_	
53-8	16006-16010	will	_	_	_	
53-9	16011-16013	be	_	_	_	
53-10	16014-16022	retained	_	_	_	
53-11	16022-16023	,	_	_	_	
53-12	16024-16028	with	_	_	_	
53-13	16029-16034	those	_	_	_	
53-14	16035-16036	>	_	_	_	
53-15	16037-16043	999999	_	_	_	
53-16	16044-16049	moved	_	_	_	
53-17	16050-16054	into	_	_	_	
53-18	16055-16058	the	_	_	_	
53-19	16059-16067	reserved	_	_	_	
53-20	16068-16073	range	_	_	_	
53-21	16073-16074	,	_	_	_	
53-22	16075-16078	but	_	_	_	
53-23	16079-16082	the	_	_	_	
53-24	16083-16098	spatial_ref_sys	_	_	_	
53-25	16099-16104	table	_	_	_	
53-26	16105-16110	would	_	_	_	
53-27	16111-16115	lose	_	_	_	
53-28	16116-16117	a	_	_	_	
53-29	16118-16123	check	_	_	_	
53-30	16124-16134	constraint	_	_	_	
53-31	16135-16143	guarding	_	_	_	
53-32	16144-16147	for	_	_	_	
53-33	16148-16152	that	_	_	_	
53-34	16153-16162	invariant	_	_	_	
53-35	16163-16165	to	_	_	_	
53-36	16166-16170	hold	_	_	_	
53-37	16171-16174	and	_	_	_	
53-38	16175-16183	possibly	_	_	_	
53-39	16184-16188	also	_	_	_	
53-40	16189-16192	its	_	_	_	
53-41	16193-16200	primary	_	_	_	
53-42	16201-16204	key	_	_	_	
53-43	16205-16206	(	_	_	_	
53-44	16207-16211	when	_	_	_	
53-45	16212-16220	multiple	_	_	_	
53-46	16221-16228	invalid	_	_	_	
53-47	16229-16234	SRIDS	_	_	_	
53-48	16235-16238	get	_	_	_	
53-49	16239-16248	converted	_	_	_	
53-50	16249-16251	to	_	_	_	
53-51	16252-16255	the	_	_	_	
53-52	16256-16260	same	_	_	_	
53-53	16261-16269	reserved	_	_	_	

#Text=SRID value ). In order to fix this you should copy your custom SRS to a SRID with a valid value (maybe in the 910000..910999 range), convert all your tables to the new srid (see UpdateGeometrySRID), delete the invalid
54-1	16270-16274	SRID	_	_	_	
54-2	16275-16280	value	_	_	_	
54-3	16281-16282	)	_	_	_	
54-4	16282-16283	.	_	_	_	
54-5	16284-16286	In	_	_	_	
54-6	16287-16292	order	_	_	_	
54-7	16293-16295	to	_	_	_	
54-8	16296-16299	fix	_	_	_	
54-9	16300-16304	this	_	_	_	
54-10	16305-16308	you	_	_	_	
54-11	16309-16315	should	_	_	_	
54-12	16316-16320	copy	_	_	_	
54-13	16321-16325	your	_	_	_	
54-14	16326-16332	custom	_	_	_	
54-15	16333-16336	SRS	_	_	_	
54-16	16337-16339	to	_	_	_	
54-17	16340-16341	a	_	_	_	
54-18	16342-16346	SRID	_	_	_	
54-19	16347-16351	with	_	_	_	
54-20	16352-16353	a	_	_	_	
54-21	16354-16359	valid	_	_	_	
54-22	16360-16365	value	_	_	_	
54-23	16366-16367	(	_	_	_	
54-24	16367-16372	maybe	_	_	_	
54-25	16373-16375	in	_	_	_	
54-26	16376-16379	the	_	_	_	
54-27	16380-16386	910000	_	_	_	
54-28	16386-16387	.	_	_	_	
54-29	16387-16394	.910999	_	_	_	
54-30	16395-16400	range	_	_	_	
54-31	16400-16401	)	_	_	_	
54-32	16401-16402	,	_	_	_	
54-33	16403-16410	convert	_	_	_	
54-34	16411-16414	all	_	_	_	
54-35	16415-16419	your	_	_	_	
54-36	16420-16426	tables	_	_	_	
54-37	16427-16429	to	_	_	_	
54-38	16430-16433	the	_	_	_	
54-39	16434-16437	new	_	_	_	
54-40	16438-16442	srid	_	_	_	
54-41	16443-16444	(	_	_	_	
54-42	16444-16447	see	_	_	_	
54-43	16448-16466	UpdateGeometrySRID	_	_	_	
54-44	16466-16467	)	_	_	_	
54-45	16467-16468	,	_	_	_	
54-46	16469-16475	delete	_	_	_	
54-47	16476-16479	the	_	_	_	
54-48	16480-16487	invalid	_	_	_	

#Text=entry from spatial_ref_sys and re-construct the check(s) with: ALTER TABLE spatial_ref_sys ADD CONSTRAINT spatial_ref_sys_srid_check check (srid > 0 AND srid < 999000 );
55-1	16488-16493	entry	_	_	_	
55-2	16494-16498	from	_	_	_	
55-3	16499-16514	spatial_ref_sys	_	_	_	
55-4	16515-16518	and	_	_	_	
55-5	16519-16531	re-construct	_	_	_	
55-6	16532-16535	the	_	_	_	
55-7	16536-16541	check	_	_	_	
55-8	16541-16542	(	_	_	_	
55-9	16542-16543	s	_	_	_	
55-10	16543-16544	)	_	_	_	
55-11	16545-16549	with	_	_	_	
55-12	16549-16550	:	_	_	_	
55-13	16551-16556	ALTER	_	_	_	
55-14	16557-16562	TABLE	_	_	_	
55-15	16563-16578	spatial_ref_sys	_	_	_	
55-16	16579-16582	ADD	_	_	_	
55-17	16583-16593	CONSTRAINT	_	_	_	
55-18	16594-16620	spatial_ref_sys_srid_check	_	_	_	
55-19	16621-16626	check	_	_	_	
55-20	16627-16628	(	_	_	_	
55-21	16628-16632	srid	_	_	_	
55-22	16633-16634	>	_	_	_	
55-23	16635-16636	0	_	_	_	
55-24	16637-16640	AND	_	_	_	
55-25	16641-16645	srid	_	_	_	
55-26	16646-16647	<	_	_	_	
55-27	16648-16654	999000	_	_	_	
55-28	16655-16656	)	_	_	_	
55-29	16656-16657	;	_	_	_	

#Text=ALTER TABLE spatial_ref_sys ADD PRIMARY KEY(srid)); If you are upgrading an old database containing french IGN cartography, you will have probably SRIDs out of range and you will see, when importing your database, issues like this : WARNING: SRID 310642222 converted to 999175 (in reserved zone)
56-1	16658-16663	ALTER	_	_	_	
56-2	16664-16669	TABLE	_	_	_	
56-3	16670-16685	spatial_ref_sys	_	_	_	
56-4	16686-16689	ADD	_	_	_	
56-5	16690-16697	PRIMARY	_	_	_	
56-6	16698-16701	KEY	_	_	_	
56-7	16701-16702	(	_	_	_	
56-8	16702-16706	srid	_	_	_	
56-9	16706-16707	)	_	_	_	
56-10	16707-16708	)	_	_	_	
56-11	16708-16709	;	_	_	_	
56-12	16710-16712	If	_	_	_	
56-13	16713-16716	you	_	_	_	
56-14	16717-16720	are	_	_	_	
56-15	16721-16730	upgrading	_	_	_	
56-16	16731-16733	an	_	_	_	
56-17	16734-16737	old	_	_	_	
56-18	16738-16746	database	_	_	_	
56-19	16747-16757	containing	_	_	_	
56-20	16758-16764	french	_	_	_	
56-21	16765-16768	IGN	_	_	_	
56-22	16769-16780	cartography	_	_	_	
56-23	16780-16781	,	_	_	_	
56-24	16782-16785	you	_	_	_	
56-25	16786-16790	will	_	_	_	
56-26	16791-16795	have	_	_	_	
56-27	16796-16804	probably	_	_	_	
56-28	16805-16810	SRIDs	_	_	_	
56-29	16811-16814	out	_	_	_	
56-30	16815-16817	of	_	_	_	
56-31	16818-16823	range	_	_	_	
56-32	16824-16827	and	_	_	_	
56-33	16828-16831	you	_	_	_	
56-34	16832-16836	will	_	_	_	
56-35	16837-16840	see	_	_	_	
56-36	16840-16841	,	_	_	_	
56-37	16842-16846	when	_	_	_	
56-38	16847-16856	importing	_	_	_	
56-39	16857-16861	your	_	_	_	
56-40	16862-16870	database	_	_	_	
56-41	16870-16871	,	_	_	_	
56-42	16872-16878	issues	_	_	_	
56-43	16879-16883	like	_	_	_	
56-44	16884-16888	this	_	_	_	
56-45	16889-16890	:	_	_	_	
56-46	16891-16898	WARNING	_	_	_	
56-47	16898-16899	:	_	_	_	
56-48	16900-16904	SRID	_	_	_	
56-49	16905-16914	310642222	_	_	_	
56-50	16915-16924	converted	_	_	_	
56-51	16925-16927	to	_	_	_	
56-52	16928-16934	999175	_	_	_	
56-53	16935-16936	(	_	_	_	
56-54	16936-16938	in	_	_	_	
56-55	16939-16947	reserved	_	_	_	
56-56	16948-16952	zone	_	_	_	
56-57	16952-16953	)	_	_	_	

#Text=In this case, you can try following steps : first throw out completely the IGN from the sql which is resulting from postgis_restore.pl. So, after having run : perl utils/postgis_restore.pl "/somepath/olddb.backup" > olddb.sql
57-1	16954-16956	In	_	_	_	
57-2	16957-16961	this	_	_	_	
57-3	16962-16966	case	_	_	_	
57-4	16966-16967	,	_	_	_	
57-5	16968-16971	you	_	_	_	
57-6	16972-16975	can	_	_	_	
57-7	16976-16979	try	_	_	_	
57-8	16980-16989	following	_	_	_	
57-9	16990-16995	steps	_	_	_	
57-10	16996-16997	:	_	_	_	
57-11	16998-17003	first	_	_	_	
57-12	17004-17009	throw	_	_	_	
57-13	17010-17013	out	_	_	_	
57-14	17014-17024	completely	_	_	_	
57-15	17025-17028	the	_	_	_	
57-16	17029-17032	IGN	_	_	_	
57-17	17033-17037	from	_	_	_	
57-18	17038-17041	the	_	_	_	
57-19	17042-17045	sql	_	_	_	
57-20	17046-17051	which	_	_	_	
57-21	17052-17054	is	_	_	_	
57-22	17055-17064	resulting	_	_	_	
57-23	17065-17069	from	_	_	_	
57-24	17070-17088	postgis_restore.pl	_	_	_	
57-25	17088-17089	.	_	_	_	
57-26	17090-17092	So	_	_	_	
57-27	17092-17093	,	_	_	_	
57-28	17094-17099	after	_	_	_	
57-29	17100-17106	having	_	_	_	
57-30	17107-17110	run	_	_	_	
57-31	17111-17112	:	_	_	_	
57-32	17113-17117	perl	_	_	_	
57-33	17118-17123	utils	_	_	_	
57-34	17123-17124	/	_	_	_	
57-35	17124-17142	postgis_restore.pl	_	_	_	
57-36	17143-17144	"	_	_	_	
57-37	17144-17145	/	_	_	_	
57-38	17145-17153	somepath	_	_	_	
57-39	17153-17154	/	_	_	_	
57-40	17154-17166	olddb.backup	_	_	_	
57-41	17166-17167	"	_	_	_	
57-42	17168-17169	>	_	_	_	
57-43	17170-17179	olddb.sql	_	_	_	

#Text=run this command : grep -v IGNF olddb.sql > olddb-without-IGN.sql Create then your newdb, activate the required Postgis extensions, and insert properly the french system IGN with : this script After these operations, import your data :
58-1	17180-17183	run	_	_	_	
58-2	17184-17188	this	_	_	_	
58-3	17189-17196	command	_	_	_	
58-4	17197-17198	:	_	_	_	
58-5	17199-17203	grep	_	_	_	
58-6	17204-17205	-	_	_	_	
58-7	17205-17206	v	_	_	_	
58-8	17207-17211	IGNF	_	_	_	
58-9	17212-17221	olddb.sql	_	_	_	
58-10	17222-17223	>	_	_	_	
58-11	17224-17245	olddb-without-IGN.sql	_	_	_	
58-12	17246-17252	Create	_	_	_	
58-13	17253-17257	then	_	_	_	
58-14	17258-17262	your	_	_	_	
58-15	17263-17268	newdb	_	_	_	
58-16	17268-17269	,	_	_	_	
58-17	17270-17278	activate	_	_	_	
58-18	17279-17282	the	_	_	_	
58-19	17283-17291	required	_	_	_	
58-20	17292-17299	Postgis	_	_	_	
58-21	17300-17310	extensions	_	_	_	
58-22	17310-17311	,	_	_	_	
58-23	17312-17315	and	_	_	_	
58-24	17316-17322	insert	_	_	_	
58-25	17323-17331	properly	_	_	_	
58-26	17332-17335	the	_	_	_	
58-27	17336-17342	french	_	_	_	
58-28	17343-17349	system	_	_	_	
58-29	17350-17353	IGN	_	_	_	
58-30	17354-17358	with	_	_	_	
58-31	17359-17360	:	_	_	_	
58-32	17361-17365	this	_	_	_	
58-33	17366-17372	script	_	_	_	
58-34	17373-17378	After	_	_	_	
58-35	17379-17384	these	_	_	_	
58-36	17385-17395	operations	_	_	_	
58-37	17395-17396	,	_	_	_	
58-38	17397-17403	import	_	_	_	
58-39	17404-17408	your	_	_	_	
58-40	17409-17413	data	_	_	_	
58-41	17414-17415	:	_	_	_	
