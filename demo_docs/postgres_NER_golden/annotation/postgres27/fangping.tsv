#FORMAT=WebAnno TSV 3.3
#T_SP=de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity|identifier|value
#T_RL=webanno.custom.Relation|relation|BT_de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity


#Text=Performance Tuning Guide for Cisco UCS M5 Servers White Paper - Cisco
#Text=Skip to content
#Text=Skip to footer
#Text=Cisco.com Worldwide
#Text=MENU
#Text=CLOSE
#Text=Products
#Text=Support & Learn
#Text=Partners
#Text=Events & Videos
#Text=Search
#Text=Log In
#Text=Log Out
#Text=Choose Language Selection
#Text=More
#Text=Log In
#Text=Log Out
#Text=Log In
#Text=Have an account?
1-1	0-11	Performance	_	_	_	_	
1-2	12-18	Tuning	_	_	_	_	
1-3	19-24	Guide	_	_	_	_	
1-4	25-28	for	_	_	_	_	
1-5	29-34	Cisco	_	_	_	_	
1-6	35-38	UCS	_	_	_	_	
1-7	39-41	M5	_	_	_	_	
1-8	42-49	Servers	_	_	_	_	
1-9	50-55	White	_	_	_	_	
1-10	56-61	Paper	_	_	_	_	
1-11	62-63	-	_	_	_	_	
1-12	64-69	Cisco	_	_	_	_	
1-13	70-74	Skip	_	_	_	_	
1-14	75-77	to	_	_	_	_	
1-15	78-85	content	_	_	_	_	
1-16	86-90	Skip	_	_	_	_	
1-17	91-93	to	_	_	_	_	
1-18	94-100	footer	_	_	_	_	
1-19	101-110	Cisco.com	_	_	_	_	
1-20	111-120	Worldwide	_	_	_	_	
1-21	121-125	MENU	_	_	_	_	
1-22	126-131	CLOSE	_	_	_	_	
1-23	132-140	Products	_	_	_	_	
1-24	141-148	Support	_	_	_	_	
1-25	149-150	&	_	_	_	_	
1-26	151-156	Learn	_	_	_	_	
1-27	157-165	Partners	_	_	_	_	
1-28	166-172	Events	_	_	_	_	
1-29	173-174	&	_	_	_	_	
1-30	175-181	Videos	_	_	_	_	
1-31	182-188	Search	_	_	_	_	
1-32	189-192	Log	_	_	_	_	
1-33	193-195	In	_	_	_	_	
1-34	196-199	Log	_	_	_	_	
1-35	200-203	Out	_	_	_	_	
1-36	204-210	Choose	_	_	_	_	
1-37	211-219	Language	_	_	_	_	
1-38	220-229	Selection	_	_	_	_	
1-39	230-234	More	_	_	_	_	
1-40	235-238	Log	_	_	_	_	
1-41	239-241	In	_	_	_	_	
1-42	242-245	Log	_	_	_	_	
1-43	246-249	Out	_	_	_	_	
1-44	250-253	Log	_	_	_	_	
1-45	254-256	In	_	_	_	_	
1-46	257-261	Have	_	_	_	_	
1-47	262-264	an	_	_	_	_	
1-48	265-272	account	_	_	_	_	
1-49	272-273	?	_	_	_	_	

#Text=Personalized content
#Text=Your products and support
#Text=Log In
#Text=Forgot your user ID and/or password?
2-1	274-286	Personalized	_	_	_	_	
2-2	287-294	content	_	_	_	_	
2-3	295-299	Your	_	_	_	_	
2-4	300-308	products	_	_	_	_	
2-5	309-312	and	_	_	_	_	
2-6	313-320	support	_	_	_	_	
2-7	321-324	Log	_	_	_	_	
2-8	325-327	In	_	_	_	_	
2-9	328-334	Forgot	_	_	_	_	
2-10	335-339	your	_	_	_	_	
2-11	340-344	user	_	_	_	_	
2-12	345-347	ID	_	_	_	_	
2-13	348-351	and	_	_	_	_	
2-14	351-352	/	_	_	_	_	
2-15	352-354	or	_	_	_	_	
2-16	355-363	password	_	_	_	_	
2-17	363-364	?	_	_	_	_	

#Text=Manage account
#Text=Need an account?
3-1	365-371	Manage	_	_	_	_	
3-2	372-379	account	_	_	_	_	
3-3	380-384	Need	_	_	_	_	
3-4	385-387	an	_	_	_	_	
3-5	388-395	account	_	_	_	_	
3-6	395-396	?	_	_	_	_	

#Text=Create an account
#Text=Help
#Text=Choose Language Selection
#Text=Choose Language Selection
#Text=Products
#Text=Support
#Text=Partners
#Text=Events & Videos
#Text=Products & ServicesServers - Unified ComputingCisco UCS B-Series Blade ServersWhite Papers
#Text=Performance Tuning Guide for Cisco UCS M5 Servers White Paper
#Text=White Paper
#Text=Download
#Text=Print
#Text=Available Languages
#Text=Download Options
#Text=PDF
#Text=(3.7 MB)
#Text=View with Adobe Reader on a variety of devices
#Text=Updated:February 4, 2021
#Text=See Revisions
#Text=Contact Cisco
#Text=Get a call from Sales
#Text=Product / Technical Support
#Text=Training & Certification
#Text=1-800-553-6387
#Text=US/CAN | 5am-5pm PT
#Text=Download
#Text=Print
#Text=Available Languages
#Text=Download Options
#Text=PDF
#Text=(3.7 MB)
#Text=View with Adobe Reader on a variety of devices
#Text=Updated:February 4, 2021
#Text=See Revisions
#Text=Table of Contents
#Text=Purpose and scope
#Text=What you will learn
#Text=BIOS tuning scenarios
#Text=High performance
#Text=Low latency
#Text=Cisco UCS BIOS options
#Text=Processor configuration
#Text=Power technology
#Text=Energy performance
#Text=Workload configuration
#Text=Memory settings
#Text=Configuring the BIOS for optimized CPU hardware power management
#Text=Operating system tuning guidance for best performance
#Text=BIOS recommendations for various workload types
#Text=Online transaction processing workloads
#Text=Virtualization workloads
#Text=High-performance computing workloads
#Text=Java Enterprise Edition application server workloads
#Text=Analytics database decision-support system workloads
#Text=Conclusion
#Text=For more information
#Text=Purpose and scope
#Text=The Basic Input and Output System (BIOS) tests and initializes the hardware components of a system and boots the operating system from a storage device.
4-1	397-403	Create	_	_	_	_	
4-2	404-406	an	_	_	_	_	
4-3	407-414	account	_	_	_	_	
4-4	415-419	Help	_	_	_	_	
4-5	420-426	Choose	_	_	_	_	
4-6	427-435	Language	_	_	_	_	
4-7	436-445	Selection	_	_	_	_	
4-8	446-452	Choose	_	_	_	_	
4-9	453-461	Language	_	_	_	_	
4-10	462-471	Selection	_	_	_	_	
4-11	472-480	Products	_	_	_	_	
4-12	481-488	Support	_	_	_	_	
4-13	489-497	Partners	_	_	_	_	
4-14	498-504	Events	_	_	_	_	
4-15	505-506	&	_	_	_	_	
4-16	507-513	Videos	_	_	_	_	
4-17	514-522	Products	_	_	_	_	
4-18	523-524	&	_	_	_	_	
4-19	525-540	ServicesServers	_	_	_	_	
4-20	541-542	-	_	_	_	_	
4-21	543-550	Unified	_	_	_	_	
4-22	551-565	ComputingCisco	_	_	_	_	
4-23	566-569	UCS	_	_	_	_	
4-24	570-578	B-Series	_	_	_	_	
4-25	579-584	Blade	_	_	_	_	
4-26	585-597	ServersWhite	_	_	_	_	
4-27	598-604	Papers	_	_	_	_	
4-28	605-616	Performance	_	_	_	_	
4-29	617-623	Tuning	_	_	_	_	
4-30	624-629	Guide	_	_	_	_	
4-31	630-633	for	_	_	_	_	
4-32	634-639	Cisco	_	_	_	_	
4-33	640-643	UCS	_	_	_	_	
4-34	644-646	M5	_	_	_	_	
4-35	647-654	Servers	_	_	_	_	
4-36	655-660	White	_	_	_	_	
4-37	661-666	Paper	_	_	_	_	
4-38	667-672	White	_	_	_	_	
4-39	673-678	Paper	_	_	_	_	
4-40	679-687	Download	_	_	_	_	
4-41	688-693	Print	_	_	_	_	
4-42	694-703	Available	_	_	_	_	
4-43	704-713	Languages	_	_	_	_	
4-44	714-722	Download	_	_	_	_	
4-45	723-730	Options	_	_	_	_	
4-46	731-734	PDF	_	_	_	_	
4-47	735-736	(	_	_	_	_	
4-48	736-739	3.7	_	_	_	_	
4-49	740-742	MB	_	_	_	_	
4-50	742-743	)	_	_	_	_	
4-51	744-748	View	_	_	_	_	
4-52	749-753	with	_	_	_	_	
4-53	754-759	Adobe	_	_	_	_	
4-54	760-766	Reader	_	_	_	_	
4-55	767-769	on	_	_	_	_	
4-56	770-771	a	_	_	_	_	
4-57	772-779	variety	_	_	_	_	
4-58	780-782	of	_	_	_	_	
4-59	783-790	devices	_	_	_	_	
4-60	791-798	Updated	_	_	_	_	
4-61	798-799	:	_	_	_	_	
4-62	799-807	February	_	_	_	_	
4-63	808-809	4	_	_	_	_	
4-64	809-810	,	_	_	_	_	
4-65	811-815	2021	_	_	_	_	
4-66	816-819	See	_	_	_	_	
4-67	820-829	Revisions	_	_	_	_	
4-68	830-837	Contact	_	_	_	_	
4-69	838-843	Cisco	_	_	_	_	
4-70	844-847	Get	_	_	_	_	
4-71	848-849	a	_	_	_	_	
4-72	850-854	call	_	_	_	_	
4-73	855-859	from	_	_	_	_	
4-74	860-865	Sales	_	_	_	_	
4-75	866-873	Product	_	_	_	_	
4-76	874-875	/	_	_	_	_	
4-77	876-885	Technical	_	_	_	_	
4-78	886-893	Support	_	_	_	_	
4-79	894-902	Training	_	_	_	_	
4-80	903-904	&	_	_	_	_	
4-81	905-918	Certification	_	_	_	_	
4-82	919-920	1	_	_	_	_	
4-83	920-921	-	_	_	_	_	
4-84	921-924	800	_	_	_	_	
4-85	924-925	-	_	_	_	_	
4-86	925-928	553	_	_	_	_	
4-87	928-929	-	_	_	_	_	
4-88	929-933	6387	_	_	_	_	
4-89	934-936	US	_	_	_	_	
4-90	936-937	/	_	_	_	_	
4-91	937-940	CAN	_	_	_	_	
4-92	941-942	|	_	_	_	_	
4-93	943-946	5am	_	_	_	_	
4-94	946-947	-	_	_	_	_	
4-95	947-950	5pm	_	_	_	_	
4-96	951-953	PT	_	_	_	_	
4-97	954-962	Download	_	_	_	_	
4-98	963-968	Print	_	_	_	_	
4-99	969-978	Available	_	_	_	_	
4-100	979-988	Languages	_	_	_	_	
4-101	989-997	Download	_	_	_	_	
4-102	998-1005	Options	_	_	_	_	
4-103	1006-1009	PDF	_	_	_	_	
4-104	1010-1011	(	_	_	_	_	
4-105	1011-1014	3.7	_	_	_	_	
4-106	1015-1017	MB	_	_	_	_	
4-107	1017-1018	)	_	_	_	_	
4-108	1019-1023	View	_	_	_	_	
4-109	1024-1028	with	_	_	_	_	
4-110	1029-1034	Adobe	_	_	_	_	
4-111	1035-1041	Reader	_	_	_	_	
4-112	1042-1044	on	_	_	_	_	
4-113	1045-1046	a	_	_	_	_	
4-114	1047-1054	variety	_	_	_	_	
4-115	1055-1057	of	_	_	_	_	
4-116	1058-1065	devices	_	_	_	_	
4-117	1066-1073	Updated	_	_	_	_	
4-118	1073-1074	:	_	_	_	_	
4-119	1074-1082	February	_	_	_	_	
4-120	1083-1084	4	_	_	_	_	
4-121	1084-1085	,	_	_	_	_	
4-122	1086-1090	2021	_	_	_	_	
4-123	1091-1094	See	_	_	_	_	
4-124	1095-1104	Revisions	_	_	_	_	
4-125	1105-1110	Table	_	_	_	_	
4-126	1111-1113	of	_	_	_	_	
4-127	1114-1122	Contents	_	_	_	_	
4-128	1123-1130	Purpose	_	_	_	_	
4-129	1131-1134	and	_	_	_	_	
4-130	1135-1140	scope	_	_	_	_	
4-131	1141-1145	What	_	_	_	_	
4-132	1146-1149	you	_	_	_	_	
4-133	1150-1154	will	_	_	_	_	
4-134	1155-1160	learn	_	_	_	_	
4-135	1161-1165	BIOS	_	_	_	_	
4-136	1166-1172	tuning	_	_	_	_	
4-137	1173-1182	scenarios	_	_	_	_	
4-138	1183-1187	High	_	_	_	_	
4-139	1188-1199	performance	_	_	_	_	
4-140	1200-1203	Low	_	_	_	_	
4-141	1204-1211	latency	_	_	_	_	
4-142	1212-1217	Cisco	_	_	_	_	
4-143	1218-1221	UCS	_	_	_	_	
4-144	1222-1226	BIOS	_	_	_	_	
4-145	1227-1234	options	_	_	_	_	
4-146	1235-1244	Processor	_	_	_	_	
4-147	1245-1258	configuration	_	_	_	_	
4-148	1259-1264	Power	_	_	_	_	
4-149	1265-1275	technology	_	_	_	_	
4-150	1276-1282	Energy	_	_	_	_	
4-151	1283-1294	performance	_	_	_	_	
4-152	1295-1303	Workload	_	_	_	_	
4-153	1304-1317	configuration	_	_	_	_	
4-154	1318-1324	Memory	_	_	_	_	
4-155	1325-1333	settings	_	_	_	_	
4-156	1334-1345	Configuring	_	_	_	_	
4-157	1346-1349	the	_	_	_	_	
4-158	1350-1354	BIOS	_	_	_	_	
4-159	1355-1358	for	_	_	_	_	
4-160	1359-1368	optimized	_	_	_	_	
4-161	1369-1372	CPU	_	_	_	_	
4-162	1373-1381	hardware	_	_	_	_	
4-163	1382-1387	power	_	_	_	_	
4-164	1388-1398	management	_	_	_	_	
4-165	1399-1408	Operating	_	_	_	_	
4-166	1409-1415	system	_	_	_	_	
4-167	1416-1422	tuning	_	_	_	_	
4-168	1423-1431	guidance	_	_	_	_	
4-169	1432-1435	for	_	_	_	_	
4-170	1436-1440	best	_	_	_	_	
4-171	1441-1452	performance	_	_	_	_	
4-172	1453-1457	BIOS	_	_	_	_	
4-173	1458-1473	recommendations	_	_	_	_	
4-174	1474-1477	for	_	_	_	_	
4-175	1478-1485	various	_	_	_	_	
4-176	1486-1494	workload	_	_	_	_	
4-177	1495-1500	types	_	_	_	_	
4-178	1501-1507	Online	_	_	_	_	
4-179	1508-1519	transaction	_	_	_	_	
4-180	1520-1530	processing	_	_	_	_	
4-181	1531-1540	workloads	_	_	_	_	
4-182	1541-1555	Virtualization	_	_	_	_	
4-183	1556-1565	workloads	_	_	_	_	
4-184	1566-1582	High-performance	_	_	_	_	
4-185	1583-1592	computing	_	_	_	_	
4-186	1593-1602	workloads	_	_	_	_	
4-187	1603-1607	Java	_	_	_	_	
4-188	1608-1618	Enterprise	_	_	_	_	
4-189	1619-1626	Edition	_	_	_	_	
4-190	1627-1638	application	_	_	_	_	
4-191	1639-1645	server	_	_	_	_	
4-192	1646-1655	workloads	_	_	_	_	
4-193	1656-1665	Analytics	_	_	_	_	
4-194	1666-1674	database	_	_	_	_	
4-195	1675-1691	decision-support	_	_	_	_	
4-196	1692-1698	system	_	_	_	_	
4-197	1699-1708	workloads	_	_	_	_	
4-198	1709-1719	Conclusion	_	_	_	_	
4-199	1720-1723	For	_	_	_	_	
4-200	1724-1728	more	_	_	_	_	
4-201	1729-1740	information	_	_	_	_	
4-202	1741-1748	Purpose	_	_	_	_	
4-203	1749-1752	and	_	_	_	_	
4-204	1753-1758	scope	_	_	_	_	
4-205	1759-1762	The	_	_	_	_	
4-206	1763-1768	Basic	_	_	_	_	
4-207	1769-1774	Input	_	_	_	_	
4-208	1775-1778	and	_	_	_	_	
4-209	1779-1785	Output	_	_	_	_	
4-210	1786-1792	System	_	_	_	_	
4-211	1793-1794	(	_	_	_	_	
4-212	1794-1798	BIOS	_	_	_	_	
4-213	1798-1799	)	_	_	_	_	
4-214	1800-1805	tests	_	_	_	_	
4-215	1806-1809	and	_	_	_	_	
4-216	1810-1821	initializes	_	_	_	_	
4-217	1822-1825	the	_	_	_	_	
4-218	1826-1834	hardware	_	_	_	_	
4-219	1835-1845	components	_	_	_	_	
4-220	1846-1848	of	_	_	_	_	
4-221	1849-1850	a	_	_	_	_	
4-222	1851-1857	system	_	_	_	_	
4-223	1858-1861	and	_	_	_	_	
4-224	1862-1867	boots	_	_	_	_	
4-225	1868-1871	the	_	_	_	_	
4-226	1872-1881	operating	_	_	_	_	
4-227	1882-1888	system	_	_	_	_	
4-228	1889-1893	from	_	_	_	_	
4-229	1894-1895	a	_	_	_	_	
4-230	1896-1903	storage	_	_	_	_	
4-231	1904-1910	device	_	_	_	_	
4-232	1910-1911	.	_	_	_	_	

#Text=A typical computational system has several BIOS settings that control the system’s behavior.
5-1	1912-1913	A	_	_	_	_	
5-2	1914-1921	typical	_	_	_	_	
5-3	1922-1935	computational	_	_	_	_	
5-4	1936-1942	system	_	_	_	_	
5-5	1943-1946	has	_	_	_	_	
5-6	1947-1954	several	_	_	_	_	
5-7	1955-1959	BIOS	_	_	_	_	
5-8	1960-1968	settings	_	_	_	_	
5-9	1969-1973	that	_	_	_	_	
5-10	1974-1981	control	_	_	_	_	
5-11	1982-1985	the	_	_	_	_	
5-12	1986-1992	system	_	_	_	_	
5-13	1992-1993	’	_	_	_	_	
5-14	1993-1994	s	_	_	_	_	
5-15	1995-2003	behavior	_	_	_	_	
5-16	2003-2004	.	_	_	_	_	

#Text=Some of these settings are directly related to the performance of the system.
6-1	2005-2009	Some	_	_	_	_	
6-2	2010-2012	of	_	_	_	_	
6-3	2013-2018	these	_	_	_	_	
6-4	2019-2027	settings	_	_	_	_	
6-5	2028-2031	are	_	_	_	_	
6-6	2032-2040	directly	_	_	_	_	
6-7	2041-2048	related	_	_	_	_	
6-8	2049-2051	to	_	_	_	_	
6-9	2052-2055	the	_	_	_	_	
6-10	2056-2067	performance	_	_	_	_	
6-11	2068-2070	of	_	_	_	_	
6-12	2071-2074	the	_	_	_	_	
6-13	2075-2081	system	_	_	_	_	
6-14	2081-2082	.	_	_	_	_	

#Text=This document explains the BIOS settings that are valid for the Cisco Unified Computing System™ (Cisco UCS®) M5 server generation (Cisco UCS B200 and B480 M5 Blade Servers and C220, C240, and C480 M5 Rack Servers) using Intel® Xeon® Scalable processor family CPUs.
7-1	2083-2087	This	_	_	_	_	
7-2	2088-2096	document	_	_	_	_	
7-3	2097-2105	explains	_	_	_	_	
7-4	2106-2109	the	_	_	_	_	
7-5	2110-2114	BIOS	_	_	_	_	
7-6	2115-2123	settings	_	_	_	_	
7-7	2124-2128	that	_	_	_	_	
7-8	2129-2132	are	_	_	_	_	
7-9	2133-2138	valid	_	_	_	_	
7-10	2139-2142	for	_	_	_	_	
7-11	2143-2146	the	_	_	_	_	
7-12	2147-2152	Cisco	_	_	_	_	
7-13	2153-2160	Unified	_	_	_	_	
7-14	2161-2170	Computing	_	_	_	_	
7-15	2171-2177	System	_	_	_	_	
7-16	2177-2178	™	_	_	_	_	
7-17	2179-2180	(	_	_	_	_	
7-18	2180-2185	Cisco	_	_	_	_	
7-19	2186-2189	UCS	_	_	_	_	
7-20	2189-2190	®	_	_	_	_	
7-21	2190-2191	)	_	_	_	_	
7-22	2192-2194	M5	_	_	_	_	
7-23	2195-2201	server	_	_	_	_	
7-24	2202-2212	generation	_	_	_	_	
7-25	2213-2214	(	_	_	_	_	
7-26	2214-2219	Cisco	_	_	_	_	
7-27	2220-2223	UCS	_	_	_	_	
7-28	2224-2228	B200	_	_	_	_	
7-29	2229-2232	and	_	_	_	_	
7-30	2233-2237	B480	_	_	_	_	
7-31	2238-2240	M5	_	_	_	_	
7-32	2241-2246	Blade	_	_	_	_	
7-33	2247-2254	Servers	_	_	_	_	
7-34	2255-2258	and	_	_	_	_	
7-35	2259-2263	C220	_	_	_	_	
7-36	2263-2264	,	_	_	_	_	
7-37	2265-2269	C240	_	_	_	_	
7-38	2269-2270	,	_	_	_	_	
7-39	2271-2274	and	_	_	_	_	
7-40	2275-2279	C480	_	_	_	_	
7-41	2280-2282	M5	_	_	_	_	
7-42	2283-2287	Rack	_	_	_	_	
7-43	2288-2295	Servers	_	_	_	_	
7-44	2295-2296	)	_	_	_	_	
7-45	2297-2302	using	_	_	_	_	
7-46	2303-2308	Intel	_	_	_	_	
7-47	2308-2309	®	_	_	_	_	
7-48	2310-2314	Xeon	_	_	_	_	
7-49	2314-2315	®	_	_	_	_	
7-50	2316-2324	Scalable	_	_	_	_	
7-51	2325-2334	processor	_	_	_	_	
7-52	2335-2341	family	_	_	_	_	
7-53	2342-2346	CPUs	_	_	_	_	
7-54	2346-2347	.	_	_	_	_	

#Text=It describes how to optimize the BIOS settings to meet requirements for the best performance and energy efficiency for the Cisco UCS M5 generation of blade and rack servers.
8-1	2348-2350	It	_	_	_	_	
8-2	2351-2360	describes	_	_	_	_	
8-3	2361-2364	how	_	_	_	_	
8-4	2365-2367	to	_	_	_	_	
8-5	2368-2376	optimize	_	_	_	_	
8-6	2377-2380	the	_	_	_	_	
8-7	2381-2385	BIOS	_	_	_	_	
8-8	2386-2394	settings	_	_	_	_	
8-9	2395-2397	to	_	_	_	_	
8-10	2398-2402	meet	_	_	_	_	
8-11	2403-2415	requirements	_	_	_	_	
8-12	2416-2419	for	_	_	_	_	
8-13	2420-2423	the	_	_	_	_	
8-14	2424-2428	best	_	_	_	_	
8-15	2429-2440	performance	_	_	_	_	
8-16	2441-2444	and	_	_	_	_	
8-17	2445-2451	energy	_	_	_	_	
8-18	2452-2462	efficiency	_	_	_	_	
8-19	2463-2466	for	_	_	_	_	
8-20	2467-2470	the	_	_	_	_	
8-21	2471-2476	Cisco	_	_	_	_	
8-22	2477-2480	UCS	_	_	_	_	
8-23	2481-2483	M5	_	_	_	_	
8-24	2484-2494	generation	_	_	_	_	
8-25	2495-2497	of	_	_	_	_	
8-26	2498-2503	blade	_	_	_	_	
8-27	2504-2507	and	_	_	_	_	
8-28	2508-2512	rack	_	_	_	_	
8-29	2513-2520	servers	_	_	_	_	
8-30	2520-2521	.	_	_	_	_	

#Text=This document also discusses the BIOS settings that can be selected for various workload types on Cisco UCS M5 servers that use Intel Xeon Scalable processor family CPUs.
9-1	2522-2526	This	_	_	_	_	
9-2	2527-2535	document	_	_	_	_	
9-3	2536-2540	also	_	_	_	_	
9-4	2541-2550	discusses	_	_	_	_	
9-5	2551-2554	the	_	_	_	_	
9-6	2555-2559	BIOS	_	_	_	_	
9-7	2560-2568	settings	_	_	_	_	
9-8	2569-2573	that	_	_	_	_	
9-9	2574-2577	can	_	_	_	_	
9-10	2578-2580	be	_	_	_	_	
9-11	2581-2589	selected	_	_	_	_	
9-12	2590-2593	for	_	_	_	_	
9-13	2594-2601	various	_	_	_	_	
9-14	2602-2610	workload	_	_	_	_	
9-15	2611-2616	types	_	_	_	_	
9-16	2617-2619	on	_	_	_	_	
9-17	2620-2625	Cisco	_	_	_	_	
9-18	2626-2629	UCS	_	_	_	_	
9-19	2630-2632	M5	_	_	_	_	
9-20	2633-2640	servers	_	_	_	_	
9-21	2641-2645	that	_	_	_	_	
9-22	2646-2649	use	_	_	_	_	
9-23	2650-2655	Intel	_	_	_	_	
9-24	2656-2660	Xeon	_	_	_	_	
9-25	2661-2669	Scalable	_	_	_	_	
9-26	2670-2679	processor	_	_	_	_	
9-27	2680-2686	family	_	_	_	_	
9-28	2687-2691	CPUs	_	_	_	_	
9-29	2691-2692	.	_	_	_	_	

#Text=Understanding the BIOS options will help you select appropriate values to achieve optimal system performance.
10-1	2693-2706	Understanding	_	_	_	_	
10-2	2707-2710	the	_	_	_	_	
10-3	2711-2715	BIOS	_	_	_	_	
10-4	2716-2723	options	_	_	_	_	
10-5	2724-2728	will	_	_	_	_	
10-6	2729-2733	help	_	_	_	_	
10-7	2734-2737	you	_	_	_	_	
10-8	2738-2744	select	_	_	_	_	
10-9	2745-2756	appropriate	_	_	_	_	
10-10	2757-2763	values	_	_	_	_	
10-11	2764-2766	to	_	_	_	_	
10-12	2767-2774	achieve	_	_	_	_	
10-13	2775-2782	optimal	_	_	_	_	
10-14	2783-2789	system	_	_	_	_	
10-15	2790-2801	performance	_	_	_	_	
10-16	2801-2802	.	_	_	_	_	

#Text=This document does not discuss the BIOS options for specific firmware releases of Cisco UCS servers.
11-1	2803-2807	This	_	_	_	_	
11-2	2808-2816	document	_	_	_	_	
11-3	2817-2821	does	_	_	_	_	
11-4	2822-2825	not	_	_	_	_	
11-5	2826-2833	discuss	_	_	_	_	
11-6	2834-2837	the	_	_	_	_	
11-7	2838-2842	BIOS	_	_	_	_	
11-8	2843-2850	options	_	_	_	_	
11-9	2851-2854	for	_	_	_	_	
11-10	2855-2863	specific	_	_	_	_	
11-11	2864-2872	firmware	_	_	_	_	
11-12	2873-2881	releases	_	_	_	_	
11-13	2882-2884	of	_	_	_	_	
11-14	2885-2890	Cisco	_	_	_	_	
11-15	2891-2894	UCS	_	_	_	_	
11-16	2895-2902	servers	_	_	_	_	
11-17	2902-2903	.	_	_	_	_	

#Text=The settings demonstrated here are generic.
12-1	2904-2907	The	_	_	_	_	
12-2	2908-2916	settings	_	_	_	_	
12-3	2917-2929	demonstrated	_	_	_	_	
12-4	2930-2934	here	_	_	_	_	
12-5	2935-2938	are	_	_	_	_	
12-6	2939-2946	generic	_	_	_	_	
12-7	2946-2947	.	_	_	_	_	

#Text=What you will learn
#Text=The process of setting performance options in your system BIOS can be daunting and confusing, and some of the options you can choose are obscure.
13-1	2948-2952	What	_	_	_	_	
13-2	2953-2956	you	_	_	_	_	
13-3	2957-2961	will	_	_	_	_	
13-4	2962-2967	learn	_	_	_	_	
13-5	2968-2971	The	_	_	_	_	
13-6	2972-2979	process	_	_	_	_	
13-7	2980-2982	of	_	_	_	_	
13-8	2983-2990	setting	_	_	_	_	
13-9	2991-3002	performance	_	_	_	_	
13-10	3003-3010	options	_	_	_	_	
13-11	3011-3013	in	_	_	_	_	
13-12	3014-3018	your	_	_	_	_	
13-13	3019-3025	system	_	_	_	_	
13-14	3026-3030	BIOS	_	_	_	_	
13-15	3031-3034	can	_	_	_	_	
13-16	3035-3037	be	_	_	_	_	
13-17	3038-3046	daunting	_	_	_	_	
13-18	3047-3050	and	_	_	_	_	
13-19	3051-3060	confusing	_	_	_	_	
13-20	3060-3061	,	_	_	_	_	
13-21	3062-3065	and	_	_	_	_	
13-22	3066-3070	some	_	_	_	_	
13-23	3071-3073	of	_	_	_	_	
13-24	3074-3077	the	_	_	_	_	
13-25	3078-3085	options	_	_	_	_	
13-26	3086-3089	you	_	_	_	_	
13-27	3090-3093	can	_	_	_	_	
13-28	3094-3100	choose	_	_	_	_	
13-29	3101-3104	are	_	_	_	_	
13-30	3105-3112	obscure	_	_	_	_	
13-31	3112-3113	.	_	_	_	_	

#Text=For most options, you must choose between optimizing a server for power savings or for performance.
14-1	3114-3117	For	_	_	_	_	
14-2	3118-3122	most	_	_	_	_	
14-3	3123-3130	options	_	_	_	_	
14-4	3130-3131	,	_	_	_	_	
14-5	3132-3135	you	_	_	_	_	
14-6	3136-3140	must	_	_	_	_	
14-7	3141-3147	choose	_	_	_	_	
14-8	3148-3155	between	_	_	_	_	
14-9	3156-3166	optimizing	_	_	_	_	
14-10	3167-3168	a	_	_	_	_	
14-11	3169-3175	server	_	_	_	_	
14-12	3176-3179	for	_	_	_	_	
14-13	3180-3185	power	_	_	_	_	
14-14	3186-3193	savings	_	_	_	_	
14-15	3194-3196	or	_	_	_	_	
14-16	3197-3200	for	_	_	_	_	
14-17	3201-3212	performance	_	_	_	_	
14-18	3212-3213	.	_	_	_	_	

#Text=This document provides some general guidelines and suggestions to help you achieve optimal performance from your Cisco UCS blade and rack servers that use Intel Xeon Scalable processor family CPUs.
15-1	3214-3218	This	_	_	_	_	
15-2	3219-3227	document	_	_	_	_	
15-3	3228-3236	provides	_	_	_	_	
15-4	3237-3241	some	_	_	_	_	
15-5	3242-3249	general	_	_	_	_	
15-6	3250-3260	guidelines	_	_	_	_	
15-7	3261-3264	and	_	_	_	_	
15-8	3265-3276	suggestions	_	_	_	_	
15-9	3277-3279	to	_	_	_	_	
15-10	3280-3284	help	_	_	_	_	
15-11	3285-3288	you	_	_	_	_	
15-12	3289-3296	achieve	_	_	_	_	
15-13	3297-3304	optimal	_	_	_	_	
15-14	3305-3316	performance	_	_	_	_	
15-15	3317-3321	from	_	_	_	_	
15-16	3322-3326	your	_	_	_	_	
15-17	3327-3332	Cisco	_	_	_	_	
15-18	3333-3336	UCS	_	_	_	_	
15-19	3337-3342	blade	_	_	_	_	
15-20	3343-3346	and	_	_	_	_	
15-21	3347-3351	rack	_	_	_	_	
15-22	3352-3359	servers	_	_	_	_	
15-23	3360-3364	that	_	_	_	_	
15-24	3365-3368	use	_	_	_	_	
15-25	3369-3374	Intel	_	_	_	_	
15-26	3375-3379	Xeon	_	_	_	_	
15-27	3380-3388	Scalable	_	_	_	_	
15-28	3389-3398	processor	_	_	_	_	
15-29	3399-3405	family	_	_	_	_	
15-30	3406-3410	CPUs	_	_	_	_	
15-31	3410-3411	.	_	_	_	_	

#Text=BIOS tuning scenarios
#Text=This document focuses on two main scenarios: how to tune the BIOS for high performance and how to tune it for low latency.
16-1	3412-3416	BIOS	_	_	_	_	
16-2	3417-3423	tuning	_	_	_	_	
16-3	3424-3433	scenarios	_	_	_	_	
16-4	3434-3438	This	_	_	_	_	
16-5	3439-3447	document	_	_	_	_	
16-6	3448-3455	focuses	_	_	_	_	
16-7	3456-3458	on	_	_	_	_	
16-8	3459-3462	two	_	_	_	_	
16-9	3463-3467	main	_	_	_	_	
16-10	3468-3477	scenarios	_	_	_	_	
16-11	3477-3478	:	_	_	_	_	
16-12	3479-3482	how	_	_	_	_	
16-13	3483-3485	to	_	_	_	_	
16-14	3486-3490	tune	_	_	_	_	
16-15	3491-3494	the	_	_	_	_	
16-16	3495-3499	BIOS	_	_	_	_	
16-17	3500-3503	for	_	_	_	_	
16-18	3504-3508	high	_	_	_	_	
16-19	3509-3520	performance	_	_	_	_	
16-20	3521-3524	and	_	_	_	_	
16-21	3525-3528	how	_	_	_	_	
16-22	3529-3531	to	_	_	_	_	
16-23	3532-3536	tune	_	_	_	_	
16-24	3537-3539	it	_	_	_	_	
16-25	3540-3543	for	_	_	_	_	
16-26	3544-3547	low	_	_	_	_	
16-27	3548-3555	latency	_	_	_	_	
16-28	3555-3556	.	_	_	_	_	

#Text=High performance
#Text=With the latest multiprocessor, multicore, and multithreading technologies in conjunction with current operating systems and applications, today's Cisco UCS servers based on the Intel Xeon Scalable processor deliver the highest levels of performance, as demonstrated by the numerous industry-standard benchmark publications from the Standard Performance Evaluation Corporation (SPEC), SAP, and the Transaction Processing Performance Council (TPC).
17-1	3557-3561	High	_	_	_	_	
17-2	3562-3573	performance	_	_	_	_	
17-3	3574-3578	With	_	_	_	_	
17-4	3579-3582	the	_	_	_	_	
17-5	3583-3589	latest	_	_	_	_	
17-6	3590-3604	multiprocessor	_	_	_	_	
17-7	3604-3605	,	_	_	_	_	
17-8	3606-3615	multicore	_	_	_	_	
17-9	3615-3616	,	_	_	_	_	
17-10	3617-3620	and	_	_	_	_	
17-11	3621-3635	multithreading	_	_	_	_	
17-12	3636-3648	technologies	_	_	_	_	
17-13	3649-3651	in	_	_	_	_	
17-14	3652-3663	conjunction	_	_	_	_	
17-15	3664-3668	with	_	_	_	_	
17-16	3669-3676	current	_	_	_	_	
17-17	3677-3686	operating	_	_	_	_	
17-18	3687-3694	systems	_	_	_	_	
17-19	3695-3698	and	_	_	_	_	
17-20	3699-3711	applications	_	_	_	_	
17-21	3711-3712	,	_	_	_	_	
17-22	3713-3720	today's	_	_	_	_	
17-23	3721-3726	Cisco	_	_	_	_	
17-24	3727-3730	UCS	_	_	_	_	
17-25	3731-3738	servers	_	_	_	_	
17-26	3739-3744	based	_	_	_	_	
17-27	3745-3747	on	_	_	_	_	
17-28	3748-3751	the	_	_	_	_	
17-29	3752-3757	Intel	_	_	_	_	
17-30	3758-3762	Xeon	_	_	_	_	
17-31	3763-3771	Scalable	_	_	_	_	
17-32	3772-3781	processor	_	_	_	_	
17-33	3782-3789	deliver	_	_	_	_	
17-34	3790-3793	the	_	_	_	_	
17-35	3794-3801	highest	_	_	_	_	
17-36	3802-3808	levels	_	_	_	_	
17-37	3809-3811	of	_	_	_	_	
17-38	3812-3823	performance	_	_	_	_	
17-39	3823-3824	,	_	_	_	_	
17-40	3825-3827	as	_	_	_	_	
17-41	3828-3840	demonstrated	_	_	_	_	
17-42	3841-3843	by	_	_	_	_	
17-43	3844-3847	the	_	_	_	_	
17-44	3848-3856	numerous	_	_	_	_	
17-45	3857-3874	industry-standard	_	_	_	_	
17-46	3875-3884	benchmark	_	_	_	_	
17-47	3885-3897	publications	_	_	_	_	
17-48	3898-3902	from	_	_	_	_	
17-49	3903-3906	the	_	_	_	_	
17-50	3907-3915	Standard	_	_	_	_	
17-51	3916-3927	Performance	_	_	_	_	
17-52	3928-3938	Evaluation	_	_	_	_	
17-53	3939-3950	Corporation	_	_	_	_	
17-54	3951-3952	(	_	_	_	_	
17-55	3952-3956	SPEC	_	_	_	_	
17-56	3956-3957	)	_	_	_	_	
17-57	3957-3958	,	_	_	_	_	
17-58	3959-3962	SAP	_	_	_	_	
17-59	3962-3963	,	_	_	_	_	
17-60	3964-3967	and	_	_	_	_	
17-61	3968-3971	the	_	_	_	_	
17-62	3972-3983	Transaction	_	_	_	_	
17-63	3984-3994	Processing	_	_	_	_	
17-64	3995-4006	Performance	_	_	_	_	
17-65	4007-4014	Council	_	_	_	_	
17-66	4015-4016	(	_	_	_	_	
17-67	4016-4019	TPC	_	_	_	_	
17-68	4019-4020	)	_	_	_	_	
17-69	4020-4021	.	_	_	_	_	

#Text=Cisco UCS servers with standard settings already provide an optimal ratio of performance to energy efficiency.
18-1	4022-4027	Cisco	_	_	_	_	
18-2	4028-4031	UCS	_	_	_	_	
18-3	4032-4039	servers	_	_	_	_	
18-4	4040-4044	with	_	_	_	_	
18-5	4045-4053	standard	_	_	_	_	
18-6	4054-4062	settings	_	_	_	_	
18-7	4063-4070	already	_	_	_	_	
18-8	4071-4078	provide	_	_	_	_	
18-9	4079-4081	an	_	_	_	_	
18-10	4082-4089	optimal	_	_	_	_	
18-11	4090-4095	ratio	_	_	_	_	
18-12	4096-4098	of	_	_	_	_	
18-13	4099-4110	performance	_	_	_	_	
18-14	4111-4113	to	_	_	_	_	
18-15	4114-4120	energy	_	_	_	_	
18-16	4121-4131	efficiency	_	_	_	_	
18-17	4131-4132	.	_	_	_	_	

#Text=However, through BIOS settings you can further optimize the system with higher performance and less energy efficiency.
19-1	4133-4140	However	_	_	_	_	
19-2	4140-4141	,	_	_	_	_	
19-3	4142-4149	through	_	_	_	_	
19-4	4150-4154	BIOS	_	_	_	_	
19-5	4155-4163	settings	_	_	_	_	
19-6	4164-4167	you	_	_	_	_	
19-7	4168-4171	can	_	_	_	_	
19-8	4172-4179	further	_	_	_	_	
19-9	4180-4188	optimize	_	_	_	_	
19-10	4189-4192	the	_	_	_	_	
19-11	4193-4199	system	_	_	_	_	
19-12	4200-4204	with	_	_	_	_	
19-13	4205-4211	higher	_	_	_	_	
19-14	4212-4223	performance	_	_	_	_	
19-15	4224-4227	and	_	_	_	_	
19-16	4228-4232	less	_	_	_	_	
19-17	4233-4239	energy	_	_	_	_	
19-18	4240-4250	efficiency	_	_	_	_	
19-19	4250-4251	.	_	_	_	_	

#Text=Basically, this optimization operates all the components in the system at the maximum speed possible and prevents the energy-saving options from slowing down the system.
20-1	4252-4261	Basically	_	_	_	_	
20-2	4261-4262	,	_	_	_	_	
20-3	4263-4267	this	_	_	_	_	
20-4	4268-4280	optimization	_	_	_	_	
20-5	4281-4289	operates	_	_	_	_	
20-6	4290-4293	all	_	_	_	_	
20-7	4294-4297	the	_	_	_	_	
20-8	4298-4308	components	_	_	_	_	
20-9	4309-4311	in	_	_	_	_	
20-10	4312-4315	the	_	_	_	_	
20-11	4316-4322	system	_	_	_	_	
20-12	4323-4325	at	_	_	_	_	
20-13	4326-4329	the	_	_	_	_	
20-14	4330-4337	maximum	_	_	_	_	
20-15	4338-4343	speed	_	_	_	_	
20-16	4344-4352	possible	_	_	_	_	
20-17	4353-4356	and	_	_	_	_	
20-18	4357-4365	prevents	_	_	_	_	
20-19	4366-4369	the	_	_	_	_	
20-20	4370-4383	energy-saving	_	_	_	_	
20-21	4384-4391	options	_	_	_	_	
20-22	4392-4396	from	_	_	_	_	
20-23	4397-4404	slowing	_	_	_	_	
20-24	4405-4409	down	_	_	_	_	
20-25	4410-4413	the	_	_	_	_	
20-26	4414-4420	system	_	_	_	_	
20-27	4420-4421	.	_	_	_	_	

#Text=In general, optimization to achieve greater performance is associated with increased consumption of electrical power.
21-1	4422-4424	In	_	_	_	_	
21-2	4425-4432	general	_	_	_	_	
21-3	4432-4433	,	_	_	_	_	
21-4	4434-4446	optimization	_	_	_	_	
21-5	4447-4449	to	_	_	_	_	
21-6	4450-4457	achieve	_	_	_	_	
21-7	4458-4465	greater	_	_	_	_	
21-8	4466-4477	performance	_	_	_	_	
21-9	4478-4480	is	_	_	_	_	
21-10	4481-4491	associated	_	_	_	_	
21-11	4492-4496	with	_	_	_	_	
21-12	4497-4506	increased	_	_	_	_	
21-13	4507-4518	consumption	_	_	_	_	
21-14	4519-4521	of	_	_	_	_	
21-15	4522-4532	electrical	_	_	_	_	
21-16	4533-4538	power	_	_	_	_	
21-17	4538-4539	.	_	_	_	_	

#Text=This document explains how to configure the BIOS settings to achieve optimal computing performance.
22-1	4540-4544	This	_	_	_	_	
22-2	4545-4553	document	_	_	_	_	
22-3	4554-4562	explains	_	_	_	_	
22-4	4563-4566	how	_	_	_	_	
22-5	4567-4569	to	_	_	_	_	
22-6	4570-4579	configure	_	_	_	_	
22-7	4580-4583	the	_	_	_	_	
22-8	4584-4588	BIOS	_	_	_	_	
22-9	4589-4597	settings	_	_	_	_	
22-10	4598-4600	to	_	_	_	_	
22-11	4601-4608	achieve	_	_	_	_	
22-12	4609-4616	optimal	_	_	_	_	
22-13	4617-4626	computing	_	_	_	_	
22-14	4627-4638	performance	_	_	_	_	
22-15	4638-4639	.	_	_	_	_	

#Text=Low latency
#Text=The BIOS offers a variety of options to reduce latency.
23-1	4640-4643	Low	_	_	_	_	
23-2	4644-4651	latency	_	_	_	_	
23-3	4652-4655	The	_	_	_	_	
23-4	4656-4660	BIOS	_	_	_	_	
23-5	4661-4667	offers	_	_	_	_	
23-6	4668-4669	a	_	_	_	_	
23-7	4670-4677	variety	_	_	_	_	
23-8	4678-4680	of	_	_	_	_	
23-9	4681-4688	options	_	_	_	_	
23-10	4689-4691	to	_	_	_	_	
23-11	4692-4698	reduce	_	_	_	_	
23-12	4699-4706	latency	_	_	_	_	
23-13	4706-4707	.	_	_	_	_	

#Text=In some cases, the corresponding application does not make efficient use of all the threads available in the hardware.
24-1	4708-4710	In	_	_	_	_	
24-2	4711-4715	some	_	_	_	_	
24-3	4716-4721	cases	_	_	_	_	
24-4	4721-4722	,	_	_	_	_	
24-5	4723-4726	the	_	_	_	_	
24-6	4727-4740	corresponding	_	_	_	_	
24-7	4741-4752	application	_	_	_	_	
24-8	4753-4757	does	_	_	_	_	
24-9	4758-4761	not	_	_	_	_	
24-10	4762-4766	make	_	_	_	_	
24-11	4767-4776	efficient	_	_	_	_	
24-12	4777-4780	use	_	_	_	_	
24-13	4781-4783	of	_	_	_	_	
24-14	4784-4787	all	_	_	_	_	
24-15	4788-4791	the	_	_	_	_	
24-16	4792-4799	threads	_	_	_	_	
24-17	4800-4809	available	_	_	_	_	
24-18	4810-4812	in	_	_	_	_	
24-19	4813-4816	the	_	_	_	_	
24-20	4817-4825	hardware	_	_	_	_	
24-21	4825-4826	.	_	_	_	_	

#Text=To improve performance, you can disable threads that are not needed (hyperthreading) or even cores in the BIOS to reduce the small fluctuations in the performance of computing operations that especially occur in some High-Performance Computing (HPC) applications and analytical database applications.
25-1	4827-4829	To	_	_	_	_	
25-2	4830-4837	improve	_	_	_	_	
25-3	4838-4849	performance	_	_	_	_	
25-4	4849-4850	,	_	_	_	_	
25-5	4851-4854	you	_	_	_	_	
25-6	4855-4858	can	_	_	_	_	
25-7	4859-4866	disable	_	_	_	_	
25-8	4867-4874	threads	_	_	_	_	
25-9	4875-4879	that	_	_	_	_	
25-10	4880-4883	are	_	_	_	_	
25-11	4884-4887	not	_	_	_	_	
25-12	4888-4894	needed	_	_	_	_	
25-13	4895-4896	(	_	_	_	_	
25-14	4896-4910	hyperthreading	_	_	_	_	
25-15	4910-4911	)	_	_	_	_	
25-16	4912-4914	or	_	_	_	_	
25-17	4915-4919	even	_	_	_	_	
25-18	4920-4925	cores	_	_	_	_	
25-19	4926-4928	in	_	_	_	_	
25-20	4929-4932	the	_	_	_	_	
25-21	4933-4937	BIOS	_	_	_	_	
25-22	4938-4940	to	_	_	_	_	
25-23	4941-4947	reduce	_	_	_	_	
25-24	4948-4951	the	_	_	_	_	
25-25	4952-4957	small	_	_	_	_	
25-26	4958-4970	fluctuations	_	_	_	_	
25-27	4971-4973	in	_	_	_	_	
25-28	4974-4977	the	_	_	_	_	
25-29	4978-4989	performance	_	_	_	_	
25-30	4990-4992	of	_	_	_	_	
25-31	4993-5002	computing	_	_	_	_	
25-32	5003-5013	operations	_	_	_	_	
25-33	5014-5018	that	_	_	_	_	
25-34	5019-5029	especially	_	_	_	_	
25-35	5030-5035	occur	_	_	_	_	
25-36	5036-5038	in	_	_	_	_	
25-37	5039-5043	some	_	_	_	_	
25-38	5044-5060	High-Performance	_	_	_	_	
25-39	5061-5070	Computing	_	_	_	_	
25-40	5071-5072	(	_	_	_	_	
25-41	5072-5075	HPC	_	_	_	_	
25-42	5075-5076	)	_	_	_	_	
25-43	5077-5089	applications	_	_	_	_	
25-44	5090-5093	and	_	_	_	_	
25-45	5094-5104	analytical	_	_	_	_	
25-46	5105-5113	database	_	_	_	_	
25-47	5114-5126	applications	_	_	_	_	
25-48	5126-5127	.	_	_	_	_	

#Text=Furthermore, by disabling cores that are not needed, you can improve turbo-mode performance in the remaining cores under certain operating conditions.
26-1	5128-5139	Furthermore	_	_	_	_	
26-2	5139-5140	,	_	_	_	_	
26-3	5141-5143	by	_	_	_	_	
26-4	5144-5153	disabling	_	_	_	_	
26-5	5154-5159	cores	_	_	_	_	
26-6	5160-5164	that	_	_	_	_	
26-7	5165-5168	are	_	_	_	_	
26-8	5169-5172	not	_	_	_	_	
26-9	5173-5179	needed	_	_	_	_	
26-10	5179-5180	,	_	_	_	_	
26-11	5181-5184	you	_	_	_	_	
26-12	5185-5188	can	_	_	_	_	
26-13	5189-5196	improve	_	_	_	_	
26-14	5197-5207	turbo-mode	_	_	_	_	
26-15	5208-5219	performance	_	_	_	_	
26-16	5220-5222	in	_	_	_	_	
26-17	5223-5226	the	_	_	_	_	
26-18	5227-5236	remaining	_	_	_	_	
26-19	5237-5242	cores	_	_	_	_	
26-20	5243-5248	under	_	_	_	_	
26-21	5249-5256	certain	_	_	_	_	
26-22	5257-5266	operating	_	_	_	_	
26-23	5267-5277	conditions	_	_	_	_	
26-24	5277-5278	.	_	_	_	_	

#Text=However, other scenarios require performance that is as constant as possible.
27-1	5279-5286	However	_	_	_	_	
27-2	5286-5287	,	_	_	_	_	
27-3	5288-5293	other	_	_	_	_	
27-4	5294-5303	scenarios	_	_	_	_	
27-5	5304-5311	require	_	_	_	_	
27-6	5312-5323	performance	_	_	_	_	
27-7	5324-5328	that	_	_	_	_	
27-8	5329-5331	is	_	_	_	_	
27-9	5332-5334	as	_	_	_	_	
27-10	5335-5343	constant	_	_	_	_	
27-11	5344-5346	as	_	_	_	_	
27-12	5347-5355	possible	_	_	_	_	
27-13	5355-5356	.	_	_	_	_	

#Text=Although the current generation of Intel processors delivers better turbo-mode performance than the preceding generation, the maximum turbo-mode frequency is not guaranteed under certain operating conditions.
28-1	5357-5365	Although	_	_	_	_	
28-2	5366-5369	the	_	_	_	_	
28-3	5370-5377	current	_	_	_	_	
28-4	5378-5388	generation	_	_	_	_	
28-5	5389-5391	of	_	_	_	_	
28-6	5392-5397	Intel	_	_	_	_	
28-7	5398-5408	processors	_	_	_	_	
28-8	5409-5417	delivers	_	_	_	_	
28-9	5418-5424	better	_	_	_	_	
28-10	5425-5435	turbo-mode	_	_	_	_	
28-11	5436-5447	performance	_	_	_	_	
28-12	5448-5452	than	_	_	_	_	
28-13	5453-5456	the	_	_	_	_	
28-14	5457-5466	preceding	_	_	_	_	
28-15	5467-5477	generation	_	_	_	_	
28-16	5477-5478	,	_	_	_	_	
28-17	5479-5482	the	_	_	_	_	
28-18	5483-5490	maximum	_	_	_	_	
28-19	5491-5501	turbo-mode	_	_	_	_	
28-20	5502-5511	frequency	_	_	_	_	
28-21	5512-5514	is	_	_	_	_	
28-22	5515-5518	not	_	_	_	_	
28-23	5519-5529	guaranteed	_	_	_	_	
28-24	5530-5535	under	_	_	_	_	
28-25	5536-5543	certain	_	_	_	_	
28-26	5544-5553	operating	_	_	_	_	
28-27	5554-5564	conditions	_	_	_	_	
28-28	5564-5565	.	_	_	_	_	

#Text=In such cases, disabling the turbo mode can help prevent changes in frequency.
29-1	5566-5568	In	_	_	_	_	
29-2	5569-5573	such	_	_	_	_	
29-3	5574-5579	cases	_	_	_	_	
29-4	5579-5580	,	_	_	_	_	
29-5	5581-5590	disabling	_	_	_	_	
29-6	5591-5594	the	_	_	_	_	
29-7	5595-5600	turbo	_	_	_	_	
29-8	5601-5605	mode	_	_	_	_	
29-9	5606-5609	can	_	_	_	_	
29-10	5610-5614	help	_	_	_	_	
29-11	5615-5622	prevent	_	_	_	_	
29-12	5623-5630	changes	_	_	_	_	
29-13	5631-5633	in	_	_	_	_	
29-14	5634-5643	frequency	_	_	_	_	
29-15	5643-5644	.	_	_	_	_	

#Text=Energy-saving functions, whose aim is to save energy whenever possible through frequency and voltage reduction and through the disabling of certain function blocks and components, also have a negative impact on response time.
30-1	5645-5658	Energy-saving	_	_	_	_	
30-2	5659-5668	functions	_	_	_	_	
30-3	5668-5669	,	_	_	_	_	
30-4	5670-5675	whose	_	_	_	_	
30-5	5676-5679	aim	_	_	_	_	
30-6	5680-5682	is	_	_	_	_	
30-7	5683-5685	to	_	_	_	_	
30-8	5686-5690	save	_	_	_	_	
30-9	5691-5697	energy	_	_	_	_	
30-10	5698-5706	whenever	_	_	_	_	
30-11	5707-5715	possible	_	_	_	_	
30-12	5716-5723	through	_	_	_	_	
30-13	5724-5733	frequency	_	_	_	_	
30-14	5734-5737	and	_	_	_	_	
30-15	5738-5745	voltage	_	_	_	_	
30-16	5746-5755	reduction	_	_	_	_	
30-17	5756-5759	and	_	_	_	_	
30-18	5760-5767	through	_	_	_	_	
30-19	5768-5771	the	_	_	_	_	
30-20	5772-5781	disabling	_	_	_	_	
30-21	5782-5784	of	_	_	_	_	
30-22	5785-5792	certain	_	_	_	_	
30-23	5793-5801	function	_	_	_	_	
30-24	5802-5808	blocks	_	_	_	_	
30-25	5809-5812	and	_	_	_	_	
30-26	5813-5823	components	_	_	_	_	
30-27	5823-5824	,	_	_	_	_	
30-28	5825-5829	also	_	_	_	_	
30-29	5830-5834	have	_	_	_	_	
30-30	5835-5836	a	_	_	_	_	
30-31	5837-5845	negative	_	_	_	_	
30-32	5846-5852	impact	_	_	_	_	
30-33	5853-5855	on	_	_	_	_	
30-34	5856-5864	response	_	_	_	_	
30-35	5865-5869	time	_	_	_	_	
30-36	5869-5870	.	_	_	_	_	

#Text=The higher the settings for the energy saving modes, the lower the performance.
31-1	5871-5874	The	_	_	_	_	
31-2	5875-5881	higher	_	_	_	_	
31-3	5882-5885	the	_	_	_	_	
31-4	5886-5894	settings	_	_	_	_	
31-5	5895-5898	for	_	_	_	_	
31-6	5899-5902	the	_	_	_	_	
31-7	5903-5909	energy	_	_	_	_	
31-8	5910-5916	saving	_	_	_	_	
31-9	5917-5922	modes	_	_	_	_	
31-10	5922-5923	,	_	_	_	_	
31-11	5924-5927	the	_	_	_	_	
31-12	5928-5933	lower	_	_	_	_	
31-13	5934-5937	the	_	_	_	_	
31-14	5938-5949	performance	_	_	_	_	
31-15	5949-5950	.	_	_	_	_	

#Text=Furthermore, in each energy-saving mode, the processor requires a certain amount of time to change back from reduced performance to maximum performance.
32-1	5951-5962	Furthermore	_	_	_	_	
32-2	5962-5963	,	_	_	_	_	
32-3	5964-5966	in	_	_	_	_	
32-4	5967-5971	each	_	_	_	_	
32-5	5972-5985	energy-saving	_	_	_	_	
32-6	5986-5990	mode	_	_	_	_	
32-7	5990-5991	,	_	_	_	_	
32-8	5992-5995	the	_	_	_	_	
32-9	5996-6005	processor	_	_	_	_	
32-10	6006-6014	requires	_	_	_	_	
32-11	6015-6016	a	_	_	_	_	
32-12	6017-6024	certain	_	_	_	_	
32-13	6025-6031	amount	_	_	_	_	
32-14	6032-6034	of	_	_	_	_	
32-15	6035-6039	time	_	_	_	_	
32-16	6040-6042	to	_	_	_	_	
32-17	6043-6049	change	_	_	_	_	
32-18	6050-6054	back	_	_	_	_	
32-19	6055-6059	from	_	_	_	_	
32-20	6060-6067	reduced	_	_	_	_	
32-21	6068-6079	performance	_	_	_	_	
32-22	6080-6082	to	_	_	_	_	
32-23	6083-6090	maximum	_	_	_	_	
32-24	6091-6102	performance	_	_	_	_	
32-25	6102-6103	.	_	_	_	_	

#Text=This document explains how to configure the power and energy saving modes to reduce system latency.
33-1	6104-6108	This	_	_	_	_	
33-2	6109-6117	document	_	_	_	_	
33-3	6118-6126	explains	_	_	_	_	
33-4	6127-6130	how	_	_	_	_	
33-5	6131-6133	to	_	_	_	_	
33-6	6134-6143	configure	_	_	_	_	
33-7	6144-6147	the	_	_	_	_	
33-8	6148-6153	power	_	_	_	_	
33-9	6154-6157	and	_	_	_	_	
33-10	6158-6164	energy	_	_	_	_	
33-11	6165-6171	saving	_	_	_	_	
33-12	6172-6177	modes	_	_	_	_	
33-13	6178-6180	to	_	_	_	_	
33-14	6181-6187	reduce	_	_	_	_	
33-15	6188-6194	system	_	_	_	_	
33-16	6195-6202	latency	_	_	_	_	
33-17	6202-6203	.	_	_	_	_	

#Text=The optimization of server latency, particularly in an idle state, results in substantially greater consumption of electrical power.
34-1	6204-6207	The	_	_	_	_	
34-2	6208-6220	optimization	_	_	_	_	
34-3	6221-6223	of	_	_	_	_	
34-4	6224-6230	server	_	_	_	_	
34-5	6231-6238	latency	_	_	_	_	
34-6	6238-6239	,	_	_	_	_	
34-7	6240-6252	particularly	_	_	_	_	
34-8	6253-6255	in	_	_	_	_	
34-9	6256-6258	an	_	_	_	_	
34-10	6259-6263	idle	_	_	_	_	
34-11	6264-6269	state	_	_	_	_	
34-12	6269-6270	,	_	_	_	_	
34-13	6271-6278	results	_	_	_	_	
34-14	6279-6281	in	_	_	_	_	
34-15	6282-6295	substantially	_	_	_	_	
34-16	6296-6303	greater	_	_	_	_	
34-17	6304-6315	consumption	_	_	_	_	
34-18	6316-6318	of	_	_	_	_	
34-19	6319-6329	electrical	_	_	_	_	
34-20	6330-6335	power	_	_	_	_	
34-21	6335-6336	.	_	_	_	_	

#Text=Cisco UCS BIOS options
#Text=This section describes the options you can configure in the Cisco UCS BIOS.
35-1	6337-6342	Cisco	_	_	_	_	
35-2	6343-6346	UCS	_	_	_	_	
35-3	6347-6351	BIOS	_	_	_	_	
35-4	6352-6359	options	_	_	_	_	
35-5	6360-6364	This	_	_	_	_	
35-6	6365-6372	section	_	_	_	_	
35-7	6373-6382	describes	_	_	_	_	
35-8	6383-6386	the	_	_	_	_	
35-9	6387-6394	options	_	_	_	_	
35-10	6395-6398	you	_	_	_	_	
35-11	6399-6402	can	_	_	_	_	
35-12	6403-6412	configure	_	_	_	_	
35-13	6413-6415	in	_	_	_	_	
35-14	6416-6419	the	_	_	_	_	
35-15	6420-6425	Cisco	_	_	_	_	
35-16	6426-6429	UCS	_	_	_	_	
35-17	6430-6434	BIOS	_	_	_	_	
35-18	6434-6435	.	_	_	_	_	

#Text=Processor configuration
#Text=This section describes processor options you can configure.
36-1	6436-6445	Processor	_	_	_	_	
36-2	6446-6459	configuration	_	_	_	_	
36-3	6460-6464	This	_	_	_	_	
36-4	6465-6472	section	_	_	_	_	
36-5	6473-6482	describes	_	_	_	_	
36-6	6483-6492	processor	_	_	_	_	
36-7	6493-6500	options	_	_	_	_	
36-8	6501-6504	you	_	_	_	_	
36-9	6505-6508	can	_	_	_	_	
36-10	6509-6518	configure	_	_	_	_	
36-11	6518-6519	.	_	_	_	_	

#Text=Enhanced Intel SpeedStep Technology
#Text=Intel SpeedStep Technology is designed to save energy by adjusting the CPU clock frequency up or down depending on how busy the system is.
37-1	6520-6528	Enhanced	_	_	_	_	
37-2	6529-6534	Intel	_	_	_	_	
37-3	6535-6544	SpeedStep	_	_	_	_	
37-4	6545-6555	Technology	_	_	_	_	
37-5	6556-6561	Intel	_	_	_	_	
37-6	6562-6571	SpeedStep	_	_	_	_	
37-7	6572-6582	Technology	_	_	_	_	
37-8	6583-6585	is	_	_	_	_	
37-9	6586-6594	designed	_	_	_	_	
37-10	6595-6597	to	_	_	_	_	
37-11	6598-6602	save	_	_	_	_	
37-12	6603-6609	energy	_	_	_	_	
37-13	6610-6612	by	_	_	_	_	
37-14	6613-6622	adjusting	_	_	_	_	
37-15	6623-6626	the	_	_	_	_	
37-16	6627-6630	CPU	_	_	_	_	
37-17	6631-6636	clock	_	_	_	_	
37-18	6637-6646	frequency	_	_	_	_	
37-19	6647-6649	up	_	_	_	_	
37-20	6650-6652	or	_	_	_	_	
37-21	6653-6657	down	_	_	_	_	
37-22	6658-6667	depending	_	_	_	_	
37-23	6668-6670	on	_	_	_	_	
37-24	6671-6674	how	_	_	_	_	
37-25	6675-6679	busy	_	_	_	_	
37-26	6680-6683	the	_	_	_	_	
37-27	6684-6690	system	_	_	_	_	
37-28	6691-6693	is	_	_	_	_	
37-29	6693-6694	.	_	_	_	_	

#Text=Intel Turbo Boost Technology provides the capability for the CPU to adjust itself to run higher than its stated clock speed if it has enough power to do so.
38-1	6695-6700	Intel	_	_	_	_	
38-2	6701-6706	Turbo	_	_	_	_	
38-3	6707-6712	Boost	_	_	_	_	
38-4	6713-6723	Technology	_	_	_	_	
38-5	6724-6732	provides	_	_	_	_	
38-6	6733-6736	the	_	_	_	_	
38-7	6737-6747	capability	_	_	_	_	
38-8	6748-6751	for	_	_	_	_	
38-9	6752-6755	the	_	_	_	_	
38-10	6756-6759	CPU	_	_	_	_	
38-11	6760-6762	to	_	_	_	_	
38-12	6763-6769	adjust	_	_	_	_	
38-13	6770-6776	itself	_	_	_	_	
38-14	6777-6779	to	_	_	_	_	
38-15	6780-6783	run	_	_	_	_	
38-16	6784-6790	higher	_	_	_	_	
38-17	6791-6795	than	_	_	_	_	
38-18	6796-6799	its	_	_	_	_	
38-19	6800-6806	stated	_	_	_	_	
38-20	6807-6812	clock	_	_	_	_	
38-21	6813-6818	speed	_	_	_	_	
38-22	6819-6821	if	_	_	_	_	
38-23	6822-6824	it	_	_	_	_	
38-24	6825-6828	has	_	_	_	_	
38-25	6829-6835	enough	_	_	_	_	
38-26	6836-6841	power	_	_	_	_	
38-27	6842-6844	to	_	_	_	_	
38-28	6845-6847	do	_	_	_	_	
38-29	6848-6850	so	_	_	_	_	
38-30	6850-6851	.	_	_	_	_	

#Text=You can specify whether the processor uses Enhanced Intel SpeedStep Technology, which allows the system to dynamically adjust processor voltage and core frequency.
39-1	6852-6855	You	_	_	_	_	
39-2	6856-6859	can	_	_	_	_	
39-3	6860-6867	specify	_	_	_	_	
39-4	6868-6875	whether	_	_	_	_	
39-5	6876-6879	the	_	_	_	_	
39-6	6880-6889	processor	_	_	_	_	
39-7	6890-6894	uses	_	_	_	_	
39-8	6895-6903	Enhanced	_	_	_	_	
39-9	6904-6909	Intel	_	_	_	_	
39-10	6910-6919	SpeedStep	_	_	_	_	
39-11	6920-6930	Technology	_	_	_	_	
39-12	6930-6931	,	_	_	_	_	
39-13	6932-6937	which	_	_	_	_	
39-14	6938-6944	allows	_	_	_	_	
39-15	6945-6948	the	_	_	_	_	
39-16	6949-6955	system	_	_	_	_	
39-17	6956-6958	to	_	_	_	_	
39-18	6959-6970	dynamically	_	_	_	_	
39-19	6971-6977	adjust	_	_	_	_	
39-20	6978-6987	processor	_	_	_	_	
39-21	6988-6995	voltage	_	_	_	_	
39-22	6996-6999	and	_	_	_	_	
39-23	7000-7004	core	_	_	_	_	
39-24	7005-7014	frequency	_	_	_	_	
39-25	7014-7015	.	_	_	_	_	

#Text=This technology can result in decreased average power consumption and decreased average heat production.
40-1	7016-7020	This	_	_	_	_	
40-2	7021-7031	technology	_	_	_	_	
40-3	7032-7035	can	_	_	_	_	
40-4	7036-7042	result	_	_	_	_	
40-5	7043-7045	in	_	_	_	_	
40-6	7046-7055	decreased	_	_	_	_	
40-7	7056-7063	average	_	_	_	_	
40-8	7064-7069	power	_	_	_	_	
40-9	7070-7081	consumption	_	_	_	_	
40-10	7082-7085	and	_	_	_	_	
40-11	7086-7095	decreased	_	_	_	_	
40-12	7096-7103	average	_	_	_	_	
40-13	7104-7108	heat	_	_	_	_	
40-14	7109-7119	production	_	_	_	_	
40-15	7119-7120	.	_	_	_	_	

#Text=The setting can be one of the following:
#Text=●     Disabled: The processor never dynamically adjusts its voltage or frequency.
#Text=●     Enabled: The processor uses Enhanced Intel SpeedStep Technology and enables all supported processor sleep states to further conserve power.
41-1	7121-7124	The	_	_	_	_	
41-2	7125-7132	setting	_	_	_	_	
41-3	7133-7136	can	_	_	_	_	
41-4	7137-7139	be	_	_	_	_	
41-5	7140-7143	one	_	_	_	_	
41-6	7144-7146	of	_	_	_	_	
41-7	7147-7150	the	_	_	_	_	
41-8	7151-7160	following	_	_	_	_	
41-9	7160-7161	:	_	_	_	_	
41-10	7162-7163	●	_	_	_	_	
41-11	7163-7167	    	_	_	_	_	
41-12	7168-7176	Disabled	_	_	_	_	
41-13	7176-7177	:	_	_	_	_	
41-14	7178-7181	The	_	_	_	_	
41-15	7182-7191	processor	_	_	_	_	
41-16	7192-7197	never	_	_	_	_	
41-17	7198-7209	dynamically	_	_	_	_	
41-18	7210-7217	adjusts	_	_	_	_	
41-19	7218-7221	its	_	_	_	_	
41-20	7222-7229	voltage	_	_	_	_	
41-21	7230-7232	or	_	_	_	_	
41-22	7233-7242	frequency	_	_	_	_	
41-23	7242-7243	.	_	_	_	_	
41-24	7244-7245	●	_	_	_	_	
41-25	7245-7249	    	_	_	_	_	
41-26	7250-7257	Enabled	_	_	_	_	
41-27	7257-7258	:	_	_	_	_	
41-28	7259-7262	The	_	_	_	_	
41-29	7263-7272	processor	_	_	_	_	
41-30	7273-7277	uses	_	_	_	_	
41-31	7278-7286	Enhanced	_	_	_	_	
41-32	7287-7292	Intel	_	_	_	_	
41-33	7293-7302	SpeedStep	_	_	_	_	
41-34	7303-7313	Technology	_	_	_	_	
41-35	7314-7317	and	_	_	_	_	
41-36	7318-7325	enables	_	_	_	_	
41-37	7326-7329	all	_	_	_	_	
41-38	7330-7339	supported	_	_	_	_	
41-39	7340-7349	processor	_	_	_	_	
41-40	7350-7355	sleep	_	_	_	_	
41-41	7356-7362	states	_	_	_	_	
41-42	7363-7365	to	_	_	_	_	
41-43	7366-7373	further	_	_	_	_	
41-44	7374-7382	conserve	_	_	_	_	
41-45	7383-7388	power	_	_	_	_	
41-46	7388-7389	.	_	_	_	_	

#Text=Intel Turbo Boost Technology
#Text=Intel Turbo Boost Technology depends on Intel SpeedStep: if you want to enable Intel Turbo Boost, you must enable Intel SpeedStep first.
42-1	7390-7395	Intel	_	_	_	_	
42-2	7396-7401	Turbo	_	_	_	_	
42-3	7402-7407	Boost	_	_	_	_	
42-4	7408-7418	Technology	_	_	_	_	
42-5	7419-7424	Intel	_	_	_	_	
42-6	7425-7430	Turbo	_	_	_	_	
42-7	7431-7436	Boost	_	_	_	_	
42-8	7437-7447	Technology	_	_	_	_	
42-9	7448-7455	depends	_	_	_	_	
42-10	7456-7458	on	_	_	_	_	
42-11	7459-7464	Intel	_	_	_	_	
42-12	7465-7474	SpeedStep	_	_	_	_	
42-13	7474-7475	:	_	_	_	_	
42-14	7476-7478	if	_	_	_	_	
42-15	7479-7482	you	_	_	_	_	
42-16	7483-7487	want	_	_	_	_	
42-17	7488-7490	to	_	_	_	_	
42-18	7491-7497	enable	_	_	_	_	
42-19	7498-7503	Intel	_	_	_	_	
42-20	7504-7509	Turbo	_	_	_	_	
42-21	7510-7515	Boost	_	_	_	_	
42-22	7515-7516	,	_	_	_	_	
42-23	7517-7520	you	_	_	_	_	
42-24	7521-7525	must	_	_	_	_	
42-25	7526-7532	enable	_	_	_	_	
42-26	7533-7538	Intel	_	_	_	_	
42-27	7539-7548	SpeedStep	_	_	_	_	
42-28	7549-7554	first	_	_	_	_	
42-29	7554-7555	.	_	_	_	_	

#Text=If you disable Intel SpeedStep, you lose the capability to use Intel Turbo Boost.
43-1	7556-7558	If	_	_	_	_	
43-2	7559-7562	you	_	_	_	_	
43-3	7563-7570	disable	_	_	_	_	
43-4	7571-7576	Intel	_	_	_	_	
43-5	7577-7586	SpeedStep	_	_	_	_	
43-6	7586-7587	,	_	_	_	_	
43-7	7588-7591	you	_	_	_	_	
43-8	7592-7596	lose	_	_	_	_	
43-9	7597-7600	the	_	_	_	_	
43-10	7601-7611	capability	_	_	_	_	
43-11	7612-7614	to	_	_	_	_	
43-12	7615-7618	use	_	_	_	_	
43-13	7619-7624	Intel	_	_	_	_	
43-14	7625-7630	Turbo	_	_	_	_	
43-15	7631-7636	Boost	_	_	_	_	
43-16	7636-7637	.	_	_	_	_	

#Text=Intel Turbo Boost is especially useful for latency-sensitive applications and for scenarios in which the system is nearing saturation and would benefit from a temporary increase in the CPU speed.
44-1	7638-7643	Intel	_	_	_	_	
44-2	7644-7649	Turbo	_	_	_	_	
44-3	7650-7655	Boost	_	_	_	_	
44-4	7656-7658	is	_	_	_	_	
44-5	7659-7669	especially	_	_	_	_	
44-6	7670-7676	useful	_	_	_	_	
44-7	7677-7680	for	_	_	_	_	
44-8	7681-7698	latency-sensitive	_	_	_	_	
44-9	7699-7711	applications	_	_	_	_	
44-10	7712-7715	and	_	_	_	_	
44-11	7716-7719	for	_	_	_	_	
44-12	7720-7729	scenarios	_	_	_	_	
44-13	7730-7732	in	_	_	_	_	
44-14	7733-7738	which	_	_	_	_	
44-15	7739-7742	the	_	_	_	_	
44-16	7743-7749	system	_	_	_	_	
44-17	7750-7752	is	_	_	_	_	
44-18	7753-7760	nearing	_	_	_	_	
44-19	7761-7771	saturation	_	_	_	_	
44-20	7772-7775	and	_	_	_	_	
44-21	7776-7781	would	_	_	_	_	
44-22	7782-7789	benefit	_	_	_	_	
44-23	7790-7794	from	_	_	_	_	
44-24	7795-7796	a	_	_	_	_	
44-25	7797-7806	temporary	_	_	_	_	
44-26	7807-7815	increase	_	_	_	_	
44-27	7816-7818	in	_	_	_	_	
44-28	7819-7822	the	_	_	_	_	
44-29	7823-7826	CPU	_	_	_	_	
44-30	7827-7832	speed	_	_	_	_	
44-31	7832-7833	.	_	_	_	_	

#Text=If your system is not running at this saturation level and you want the best performance at a utilization rate of less than 90 percent, you should disable Intel SpeedStep to help ensure that the system is running at its stated clock speed at all times.
45-1	7834-7836	If	_	_	_	_	
45-2	7837-7841	your	_	_	_	_	
45-3	7842-7848	system	_	_	_	_	
45-4	7849-7851	is	_	_	_	_	
45-5	7852-7855	not	_	_	_	_	
45-6	7856-7863	running	_	_	_	_	
45-7	7864-7866	at	_	_	_	_	
45-8	7867-7871	this	_	_	_	_	
45-9	7872-7882	saturation	_	_	_	_	
45-10	7883-7888	level	_	_	_	_	
45-11	7889-7892	and	_	_	_	_	
45-12	7893-7896	you	_	_	_	_	
45-13	7897-7901	want	_	_	_	_	
45-14	7902-7905	the	_	_	_	_	
45-15	7906-7910	best	_	_	_	_	
45-16	7911-7922	performance	_	_	_	_	
45-17	7923-7925	at	_	_	_	_	
45-18	7926-7927	a	_	_	_	_	
45-19	7928-7939	utilization	_	_	_	_	
45-20	7940-7944	rate	_	_	_	_	
45-21	7945-7947	of	_	_	_	_	
45-22	7948-7952	less	_	_	_	_	
45-23	7953-7957	than	_	_	_	_	
45-24	7958-7960	90	_	_	_	_	
45-25	7961-7968	percent	_	_	_	_	
45-26	7968-7969	,	_	_	_	_	
45-27	7970-7973	you	_	_	_	_	
45-28	7974-7980	should	_	_	_	_	
45-29	7981-7988	disable	_	_	_	_	
45-30	7989-7994	Intel	_	_	_	_	
45-31	7995-8004	SpeedStep	_	_	_	_	
45-32	8005-8007	to	_	_	_	_	
45-33	8008-8012	help	_	_	_	_	
45-34	8013-8019	ensure	_	_	_	_	
45-35	8020-8024	that	_	_	_	_	
45-36	8025-8028	the	_	_	_	_	
45-37	8029-8035	system	_	_	_	_	
45-38	8036-8038	is	_	_	_	_	
45-39	8039-8046	running	_	_	_	_	
45-40	8047-8049	at	_	_	_	_	
45-41	8050-8053	its	_	_	_	_	
45-42	8054-8060	stated	_	_	_	_	
45-43	8061-8066	clock	_	_	_	_	
45-44	8067-8072	speed	_	_	_	_	
45-45	8073-8075	at	_	_	_	_	
45-46	8076-8079	all	_	_	_	_	
45-47	8080-8085	times	_	_	_	_	
45-48	8085-8086	.	_	_	_	_	

#Text=Intel Hyper-Threading Technology
#Text=You can specify whether the processor uses Intel Hyper-Threading Technology, which allows multithreaded software applications to process threads in parallel within each processor.
46-1	8087-8092	Intel	_	_	_	_	
46-2	8093-8108	Hyper-Threading	_	_	_	_	
46-3	8109-8119	Technology	_	_	_	_	
46-4	8120-8123	You	_	_	_	_	
46-5	8124-8127	can	_	_	_	_	
46-6	8128-8135	specify	_	_	_	_	
46-7	8136-8143	whether	_	_	_	_	
46-8	8144-8147	the	_	_	_	_	
46-9	8148-8157	processor	_	_	_	_	
46-10	8158-8162	uses	_	_	_	_	
46-11	8163-8168	Intel	_	_	_	_	
46-12	8169-8184	Hyper-Threading	_	_	_	_	
46-13	8185-8195	Technology	_	_	_	_	
46-14	8195-8196	,	_	_	_	_	
46-15	8197-8202	which	_	_	_	_	
46-16	8203-8209	allows	_	_	_	_	
46-17	8210-8223	multithreaded	_	_	_	_	
46-18	8224-8232	software	_	_	_	_	
46-19	8233-8245	applications	_	_	_	_	
46-20	8246-8248	to	_	_	_	_	
46-21	8249-8256	process	_	_	_	_	
46-22	8257-8264	threads	_	_	_	_	
46-23	8265-8267	in	_	_	_	_	
46-24	8268-8276	parallel	_	_	_	_	
46-25	8277-8283	within	_	_	_	_	
46-26	8284-8288	each	_	_	_	_	
46-27	8289-8298	processor	_	_	_	_	
46-28	8298-8299	.	_	_	_	_	

#Text=You should test the CPU hyperthreading option both enabled and disabled in your specific environment.
47-1	8300-8303	You	_	_	_	_	
47-2	8304-8310	should	_	_	_	_	
47-3	8311-8315	test	_	_	_	_	
47-4	8316-8319	the	_	_	_	_	
47-5	8320-8323	CPU	_	_	_	_	
47-6	8324-8338	hyperthreading	_	_	_	_	
47-7	8339-8345	option	_	_	_	_	
47-8	8346-8350	both	_	_	_	_	
47-9	8351-8358	enabled	_	_	_	_	
47-10	8359-8362	and	_	_	_	_	
47-11	8363-8371	disabled	_	_	_	_	
47-12	8372-8374	in	_	_	_	_	
47-13	8375-8379	your	_	_	_	_	
47-14	8380-8388	specific	_	_	_	_	
47-15	8389-8400	environment	_	_	_	_	
47-16	8400-8401	.	_	_	_	_	

#Text=If you are running a single-threaded application, you should disable hyperthreading.
48-1	8402-8404	If	_	_	_	_	
48-2	8405-8408	you	_	_	_	_	
48-3	8409-8412	are	_	_	_	_	
48-4	8413-8420	running	_	_	_	_	
48-5	8421-8422	a	_	_	_	_	
48-6	8423-8438	single-threaded	_	_	_	_	
48-7	8439-8450	application	_	_	_	_	
48-8	8450-8451	,	_	_	_	_	
48-9	8452-8455	you	_	_	_	_	
48-10	8456-8462	should	_	_	_	_	
48-11	8463-8470	disable	_	_	_	_	
48-12	8471-8485	hyperthreading	_	_	_	_	
48-13	8485-8486	.	_	_	_	_	

#Text=The setting can be one of the following:
#Text=●     Disabled: The processor does not permit hyperthreading.
#Text=●     Enabled: The processor allows parallel processing of multiple threads.
49-1	8487-8490	The	_	_	_	_	
49-2	8491-8498	setting	_	_	_	_	
49-3	8499-8502	can	_	_	_	_	
49-4	8503-8505	be	_	_	_	_	
49-5	8506-8509	one	_	_	_	_	
49-6	8510-8512	of	_	_	_	_	
49-7	8513-8516	the	_	_	_	_	
49-8	8517-8526	following	_	_	_	_	
49-9	8526-8527	:	_	_	_	_	
49-10	8528-8529	●	_	_	_	_	
49-11	8529-8533	    	_	_	_	_	
49-12	8534-8542	Disabled	_	_	_	_	
49-13	8542-8543	:	_	_	_	_	
49-14	8544-8547	The	_	_	_	_	
49-15	8548-8557	processor	_	_	_	_	
49-16	8558-8562	does	_	_	_	_	
49-17	8563-8566	not	_	_	_	_	
49-18	8567-8573	permit	_	_	_	_	
49-19	8574-8588	hyperthreading	_	_	_	_	
49-20	8588-8589	.	_	_	_	_	
49-21	8590-8591	●	_	_	_	_	
49-22	8591-8595	    	_	_	_	_	
49-23	8596-8603	Enabled	_	_	_	_	
49-24	8603-8604	:	_	_	_	_	
49-25	8605-8608	The	_	_	_	_	
49-26	8609-8618	processor	_	_	_	_	
49-27	8619-8625	allows	_	_	_	_	
49-28	8626-8634	parallel	_	_	_	_	
49-29	8635-8645	processing	_	_	_	_	
49-30	8646-8648	of	_	_	_	_	
49-31	8649-8657	multiple	_	_	_	_	
49-32	8658-8665	threads	_	_	_	_	
49-33	8665-8666	.	_	_	_	_	

#Text=Core multiprocessing and latency-sensitive single-threaded applications
#Text=The core multiprocessing option is designed to enable the user to disable cores.
50-1	8667-8671	Core	_	_	_	_	
50-2	8672-8687	multiprocessing	_	_	_	_	
50-3	8688-8691	and	_	_	_	_	
50-4	8692-8709	latency-sensitive	_	_	_	_	
50-5	8710-8725	single-threaded	_	_	_	_	
50-6	8726-8738	applications	_	_	_	_	
50-7	8739-8742	The	_	_	_	_	
50-8	8743-8747	core	_	_	_	_	
50-9	8748-8763	multiprocessing	_	_	_	_	
50-10	8764-8770	option	_	_	_	_	
50-11	8771-8773	is	_	_	_	_	
50-12	8774-8782	designed	_	_	_	_	
50-13	8783-8785	to	_	_	_	_	
50-14	8786-8792	enable	_	_	_	_	
50-15	8793-8796	the	_	_	_	_	
50-16	8797-8801	user	_	_	_	_	
50-17	8802-8804	to	_	_	_	_	
50-18	8805-8812	disable	_	_	_	_	
50-19	8813-8818	cores	_	_	_	_	
50-20	8818-8819	.	_	_	_	_	

#Text=This option may affect the pricing of certain software packages that are licensed by the core.
51-1	8820-8824	This	_	_	_	_	
51-2	8825-8831	option	_	_	_	_	
51-3	8832-8835	may	_	_	_	_	
51-4	8836-8842	affect	_	_	_	_	
51-5	8843-8846	the	_	_	_	_	
51-6	8847-8854	pricing	_	_	_	_	
51-7	8855-8857	of	_	_	_	_	
51-8	8858-8865	certain	_	_	_	_	
51-9	8866-8874	software	_	_	_	_	
51-10	8875-8883	packages	_	_	_	_	
51-11	8884-8888	that	_	_	_	_	
51-12	8889-8892	are	_	_	_	_	
51-13	8893-8901	licensed	_	_	_	_	
51-14	8902-8904	by	_	_	_	_	
51-15	8905-8908	the	_	_	_	_	
51-16	8909-8913	core	_	_	_	_	
51-17	8913-8914	.	_	_	_	_	

#Text=You should consult your software license and software vendor about whether disabling cores qualifies you for any particular pricing policies.
52-1	8915-8918	You	_	_	_	_	
52-2	8919-8925	should	_	_	_	_	
52-3	8926-8933	consult	_	_	_	_	
52-4	8934-8938	your	_	_	_	_	
52-5	8939-8947	software	_	_	_	_	
52-6	8948-8955	license	_	_	_	_	
52-7	8956-8959	and	_	_	_	_	
52-8	8960-8968	software	_	_	_	_	
52-9	8969-8975	vendor	_	_	_	_	
52-10	8976-8981	about	_	_	_	_	
52-11	8982-8989	whether	_	_	_	_	
52-12	8990-8999	disabling	_	_	_	_	
52-13	9000-9005	cores	_	_	_	_	
52-14	9006-9015	qualifies	_	_	_	_	
52-15	9016-9019	you	_	_	_	_	
52-16	9020-9023	for	_	_	_	_	
52-17	9024-9027	any	_	_	_	_	
52-18	9028-9038	particular	_	_	_	_	
52-19	9039-9046	pricing	_	_	_	_	
52-20	9047-9055	policies	_	_	_	_	
52-21	9055-9056	.	_	_	_	_	

#Text=Set core multiprocessing to All if pricing policy is not an issue for you.
53-1	9057-9060	Set	_	_	_	_	
53-2	9061-9065	core	_	_	_	_	
53-3	9066-9081	multiprocessing	_	_	_	_	
53-4	9082-9084	to	_	_	_	_	
53-5	9085-9088	All	_	_	_	_	
53-6	9089-9091	if	_	_	_	_	
53-7	9092-9099	pricing	_	_	_	_	
53-8	9100-9106	policy	_	_	_	_	
53-9	9107-9109	is	_	_	_	_	
53-10	9110-9113	not	_	_	_	_	
53-11	9114-9116	an	_	_	_	_	
53-12	9117-9122	issue	_	_	_	_	
53-13	9123-9126	for	_	_	_	_	
53-14	9127-9130	you	_	_	_	_	
53-15	9130-9131	.	_	_	_	_	

#Text=For latency-sensitive single-threaded applications, you can optimize performance by disabling unnecessary cores, disabling hyperthreading, enabling all C-states, enabling Intel SpeedStep, and enabling Intel Turbo Boost.
54-1	9132-9135	For	_	_	_	_	
54-2	9136-9153	latency-sensitive	_	_	_	_	
54-3	9154-9169	single-threaded	_	_	_	_	
54-4	9170-9182	applications	_	_	_	_	
54-5	9182-9183	,	_	_	_	_	
54-6	9184-9187	you	_	_	_	_	
54-7	9188-9191	can	_	_	_	_	
54-8	9192-9200	optimize	_	_	_	_	
54-9	9201-9212	performance	_	_	_	_	
54-10	9213-9215	by	_	_	_	_	
54-11	9216-9225	disabling	_	_	_	_	
54-12	9226-9237	unnecessary	_	_	_	_	
54-13	9238-9243	cores	_	_	_	_	
54-14	9243-9244	,	_	_	_	_	
54-15	9245-9254	disabling	_	_	_	_	
54-16	9255-9269	hyperthreading	_	_	_	_	
54-17	9269-9270	,	_	_	_	_	
54-18	9271-9279	enabling	_	_	_	_	
54-19	9280-9283	all	_	_	_	_	
54-20	9284-9292	C-states	_	_	_	_	
54-21	9292-9293	,	_	_	_	_	
54-22	9294-9302	enabling	_	_	_	_	
54-23	9303-9308	Intel	_	_	_	_	
54-24	9309-9318	SpeedStep	_	_	_	_	
54-25	9318-9319	,	_	_	_	_	
54-26	9320-9323	and	_	_	_	_	
54-27	9324-9332	enabling	_	_	_	_	
54-28	9333-9338	Intel	_	_	_	_	
54-29	9339-9344	Turbo	_	_	_	_	
54-30	9345-9350	Boost	_	_	_	_	
54-31	9350-9351	.	_	_	_	_	

#Text=With this configuration, the remaining cores often will benefit from higher turbo speeds and better use of the shared Layer 3 cache.
55-1	9352-9356	With	_	_	_	_	
55-2	9357-9361	this	_	_	_	_	
55-3	9362-9375	configuration	_	_	_	_	
55-4	9375-9376	,	_	_	_	_	
55-5	9377-9380	the	_	_	_	_	
55-6	9381-9390	remaining	_	_	_	_	
55-7	9391-9396	cores	_	_	_	_	
55-8	9397-9402	often	_	_	_	_	
55-9	9403-9407	will	_	_	_	_	
55-10	9408-9415	benefit	_	_	_	_	
55-11	9416-9420	from	_	_	_	_	
55-12	9421-9427	higher	_	_	_	_	
55-13	9428-9433	turbo	_	_	_	_	
55-14	9434-9440	speeds	_	_	_	_	
55-15	9441-9444	and	_	_	_	_	
55-16	9445-9451	better	_	_	_	_	
55-17	9452-9455	use	_	_	_	_	
55-18	9456-9458	of	_	_	_	_	
55-19	9459-9462	the	_	_	_	_	
55-20	9463-9469	shared	_	_	_	_	
55-21	9470-9475	Layer	_	_	_	_	
55-22	9476-9477	3	_	_	_	_	
55-23	9478-9483	cache	_	_	_	_	
55-24	9483-9484	.	_	_	_	_	

#Text=CPU performance
#Text=Intel Xeon processors have several layers of cache.
56-1	9485-9488	CPU	_	_	_	_	
56-2	9489-9500	performance	_	_	_	_	
56-3	9501-9506	Intel	_	_	_	_	
56-4	9507-9511	Xeon	_	_	_	_	
56-5	9512-9522	processors	_	_	_	_	
56-6	9523-9527	have	_	_	_	_	
56-7	9528-9535	several	_	_	_	_	
56-8	9536-9542	layers	_	_	_	_	
56-9	9543-9545	of	_	_	_	_	
56-10	9546-9551	cache	_	_	_	_	
56-11	9551-9552	.	_	_	_	_	

#Text=Each core has a tiny Layer 1 cache, sometimes referred to as the Data Cache Unit (DCU), that has 32 KB for instructions and 32 KB for data.
57-1	9553-9557	Each	_	_	_	_	
57-2	9558-9562	core	_	_	_	_	
57-3	9563-9566	has	_	_	_	_	
57-4	9567-9568	a	_	_	_	_	
57-5	9569-9573	tiny	_	_	_	_	
57-6	9574-9579	Layer	_	_	_	_	
57-7	9580-9581	1	_	_	_	_	
57-8	9582-9587	cache	_	_	_	_	
57-9	9587-9588	,	_	_	_	_	
57-10	9589-9598	sometimes	_	_	_	_	
57-11	9599-9607	referred	_	_	_	_	
57-12	9608-9610	to	_	_	_	_	
57-13	9611-9613	as	_	_	_	_	
57-14	9614-9617	the	_	_	_	_	
57-15	9618-9622	Data	_	_	_	_	
57-16	9623-9628	Cache	_	_	_	_	
57-17	9629-9633	Unit	_	_	_	_	
57-18	9634-9635	(	_	_	_	_	
57-19	9635-9638	DCU	_	_	_	_	
57-20	9638-9639	)	_	_	_	_	
57-21	9639-9640	,	_	_	_	_	
57-22	9641-9645	that	_	_	_	_	
57-23	9646-9649	has	_	_	_	_	
57-24	9650-9652	32	_	_	_	_	
57-25	9653-9655	KB	_	_	_	_	
57-26	9656-9659	for	_	_	_	_	
57-27	9660-9672	instructions	_	_	_	_	
57-28	9673-9676	and	_	_	_	_	
57-29	9677-9679	32	_	_	_	_	
57-30	9680-9682	KB	_	_	_	_	
57-31	9683-9686	for	_	_	_	_	
57-32	9687-9691	data	_	_	_	_	
57-33	9691-9692	.	_	_	_	_	

#Text=Slightly bigger is the Layer 2 cache, with 256 KB shared between data and instructions for each core.
58-1	9693-9701	Slightly	_	_	_	_	
58-2	9702-9708	bigger	_	_	_	_	
58-3	9709-9711	is	_	_	_	_	
58-4	9712-9715	the	_	_	_	_	
58-5	9716-9721	Layer	_	_	_	_	
58-6	9722-9723	2	_	_	_	_	
58-7	9724-9729	cache	_	_	_	_	
58-8	9729-9730	,	_	_	_	_	
58-9	9731-9735	with	_	_	_	_	
58-10	9736-9739	256	_	_	_	_	
58-11	9740-9742	KB	_	_	_	_	
58-12	9743-9749	shared	_	_	_	_	
58-13	9750-9757	between	_	_	_	_	
58-14	9758-9762	data	_	_	_	_	
58-15	9763-9766	and	_	_	_	_	
58-16	9767-9779	instructions	_	_	_	_	
58-17	9780-9783	for	_	_	_	_	
58-18	9784-9788	each	_	_	_	_	
58-19	9789-9793	core	_	_	_	_	
58-20	9793-9794	.	_	_	_	_	

#Text=In addition, all cores on a chip share a much larger Layer 3 cache, which is about 10 to 45 MB in size (depending on the processor model and number of cores).
59-1	9795-9797	In	_	_	_	_	
59-2	9798-9806	addition	_	_	_	_	
59-3	9806-9807	,	_	_	_	_	
59-4	9808-9811	all	_	_	_	_	
59-5	9812-9817	cores	_	_	_	_	
59-6	9818-9820	on	_	_	_	_	
59-7	9821-9822	a	_	_	_	_	
59-8	9823-9827	chip	_	_	_	_	
59-9	9828-9833	share	_	_	_	_	
59-10	9834-9835	a	_	_	_	_	
59-11	9836-9840	much	_	_	_	_	
59-12	9841-9847	larger	_	_	_	_	
59-13	9848-9853	Layer	_	_	_	_	
59-14	9854-9855	3	_	_	_	_	
59-15	9856-9861	cache	_	_	_	_	
59-16	9861-9862	,	_	_	_	_	
59-17	9863-9868	which	_	_	_	_	
59-18	9869-9871	is	_	_	_	_	
59-19	9872-9877	about	_	_	_	_	
59-20	9878-9880	10	_	_	_	_	
59-21	9881-9883	to	_	_	_	_	
59-22	9884-9886	45	_	_	_	_	
59-23	9887-9889	MB	_	_	_	_	
59-24	9890-9892	in	_	_	_	_	
59-25	9893-9897	size	_	_	_	_	
59-26	9898-9899	(	_	_	_	_	
59-27	9899-9908	depending	_	_	_	_	
59-28	9909-9911	on	_	_	_	_	
59-29	9912-9915	the	_	_	_	_	
59-30	9916-9925	processor	_	_	_	_	
59-31	9926-9931	model	_	_	_	_	
59-32	9932-9935	and	_	_	_	_	
59-33	9936-9942	number	_	_	_	_	
59-34	9943-9945	of	_	_	_	_	
59-35	9946-9951	cores	_	_	_	_	
59-36	9951-9952	)	_	_	_	_	
59-37	9952-9953	.	_	_	_	_	

#Text=The prefetcher settings provided by Intel primarily affect the Layer 1 and Layer 2 caches on a processor core (Table 1).
60-1	9954-9957	The	_	_	_	_	
60-2	9958-9968	prefetcher	_	_	_	_	
60-3	9969-9977	settings	_	_	_	_	
60-4	9978-9986	provided	_	_	_	_	
60-5	9987-9989	by	_	_	_	_	
60-6	9990-9995	Intel	_	_	_	_	
60-7	9996-10005	primarily	_	_	_	_	
60-8	10006-10012	affect	_	_	_	_	
60-9	10013-10016	the	_	_	_	_	
60-10	10017-10022	Layer	_	_	_	_	
60-11	10023-10024	1	_	_	_	_	
60-12	10025-10028	and	_	_	_	_	
60-13	10029-10034	Layer	_	_	_	_	
60-14	10035-10036	2	_	_	_	_	
60-15	10037-10043	caches	_	_	_	_	
60-16	10044-10046	on	_	_	_	_	
60-17	10047-10048	a	_	_	_	_	
60-18	10049-10058	processor	_	_	_	_	
60-19	10059-10063	core	_	_	_	_	
60-20	10064-10065	(	_	_	_	_	
60-21	10065-10070	Table	_	_	_	_	
60-22	10071-10072	1	_	_	_	_	
60-23	10072-10073	)	_	_	_	_	
60-24	10073-10074	.	_	_	_	_	

#Text=You will likely need to perform some testing with your individual workload to find the combination that works best for you.
61-1	10075-10078	You	_	_	_	_	
61-2	10079-10083	will	_	_	_	_	
61-3	10084-10090	likely	_	_	_	_	
61-4	10091-10095	need	_	_	_	_	
61-5	10096-10098	to	_	_	_	_	
61-6	10099-10106	perform	_	_	_	_	
61-7	10107-10111	some	_	_	_	_	
61-8	10112-10119	testing	_	_	_	_	
61-9	10120-10124	with	_	_	_	_	
61-10	10125-10129	your	_	_	_	_	
61-11	10130-10140	individual	_	_	_	_	
61-12	10141-10149	workload	_	_	_	_	
61-13	10150-10152	to	_	_	_	_	
61-14	10153-10157	find	_	_	_	_	
61-15	10158-10161	the	_	_	_	_	
61-16	10162-10173	combination	_	_	_	_	
61-17	10174-10178	that	_	_	_	_	
61-18	10179-10184	works	_	_	_	_	
61-19	10185-10189	best	_	_	_	_	
61-20	10190-10193	for	_	_	_	_	
61-21	10194-10197	you	_	_	_	_	
61-22	10197-10198	.	_	_	_	_	

#Text=Testing on the Intel Xeon Scalable processor has shown that most applications run best with all prefetchers enabled.
62-1	10199-10206	Testing	_	_	_	_	
62-2	10207-10209	on	_	_	_	_	
62-3	10210-10213	the	_	_	_	_	
62-4	10214-10219	Intel	_	_	_	_	
62-5	10220-10224	Xeon	_	_	_	_	
62-6	10225-10233	Scalable	_	_	_	_	
62-7	10234-10243	processor	_	_	_	_	
62-8	10244-10247	has	_	_	_	_	
62-9	10248-10253	shown	_	_	_	_	
62-10	10254-10258	that	_	_	_	_	
62-11	10259-10263	most	_	_	_	_	
62-12	10264-10276	applications	_	_	_	_	
62-13	10277-10280	run	_	_	_	_	
62-14	10281-10285	best	_	_	_	_	
62-15	10286-10290	with	_	_	_	_	
62-16	10291-10294	all	_	_	_	_	
62-17	10295-10306	prefetchers	_	_	_	_	
62-18	10307-10314	enabled	_	_	_	_	
62-19	10314-10315	.	_	_	_	_	

#Text=See Tables 2 and 3 for guidance.
63-1	10316-10319	See	_	_	_	_	
63-2	10320-10326	Tables	_	_	_	_	
63-3	10327-10328	2	_	_	_	_	
63-4	10329-10332	and	_	_	_	_	
63-5	10333-10334	3	_	_	_	_	
63-6	10335-10338	for	_	_	_	_	
63-7	10339-10347	guidance	_	_	_	_	
63-8	10347-10348	.	_	_	_	_	

#Text=Table 1.          
64-1	10349-10354	Table	_	_	_	_	
64-2	10355-10356	1	_	_	_	_	
64-3	10356-10357	.	_	_	_	_	
64-4	10357-10367	          	_	_	_	_	

#Text=CPU performance and prefetch options from Intel
#Text=Performance option
#Text=Cache affected
#Text=Hardware prefetcher
#Text=Layer 2
#Text=Adjacent-cache-line prefetcher
#Text=Layer 2
#Text=DCU prefetcher
#Text=Layer 1
#Text=DCU instruction pointer (DCU-IP) prefetcher
#Text=Layer 1
#Text=Table 2.          
65-1	10368-10371	CPU	_	_	_	_	
65-2	10372-10383	performance	_	_	_	_	
65-3	10384-10387	and	_	_	_	_	
65-4	10388-10396	prefetch	_	_	_	_	
65-5	10397-10404	options	_	_	_	_	
65-6	10405-10409	from	_	_	_	_	
65-7	10410-10415	Intel	_	_	_	_	
65-8	10416-10427	Performance	_	_	_	_	
65-9	10428-10434	option	_	_	_	_	
65-10	10435-10440	Cache	_	_	_	_	
65-11	10441-10449	affected	_	_	_	_	
65-12	10450-10458	Hardware	_	_	_	_	
65-13	10459-10469	prefetcher	_	_	_	_	
65-14	10470-10475	Layer	_	_	_	_	
65-15	10476-10477	2	_	_	_	_	
65-16	10478-10497	Adjacent-cache-line	_	_	_	_	
65-17	10498-10508	prefetcher	_	_	_	_	
65-18	10509-10514	Layer	_	_	_	_	
65-19	10515-10516	2	_	_	_	_	
65-20	10517-10520	DCU	_	_	_	_	
65-21	10521-10531	prefetcher	_	_	_	_	
65-22	10532-10537	Layer	_	_	_	_	
65-23	10538-10539	1	_	_	_	_	
65-24	10540-10543	DCU	_	_	_	_	
65-25	10544-10555	instruction	_	_	_	_	
65-26	10556-10563	pointer	_	_	_	_	
65-27	10564-10565	(	_	_	_	_	
65-28	10565-10571	DCU-IP	_	_	_	_	
65-29	10571-10572	)	_	_	_	_	
65-30	10573-10583	prefetcher	_	_	_	_	
65-31	10584-10589	Layer	_	_	_	_	
65-32	10590-10591	1	_	_	_	_	
65-33	10592-10597	Table	_	_	_	_	
65-34	10598-10599	2	_	_	_	_	
65-35	10599-10600	.	_	_	_	_	
65-36	10600-10610	          	_	_	_	_	

#Text=Cisco UCS CPU performance options
#Text=Option
#Text=Description
#Text=CPU performance
#Text=Sets the CPU performance profile for the server.
66-1	10611-10616	Cisco	_	_	_	_	
66-2	10617-10620	UCS	_	_	_	_	
66-3	10621-10624	CPU	_	_	_	_	
66-4	10625-10636	performance	_	_	_	_	
66-5	10637-10644	options	_	_	_	_	
66-6	10645-10651	Option	_	_	_	_	
66-7	10652-10663	Description	_	_	_	_	
66-8	10664-10667	CPU	_	_	_	_	
66-9	10668-10679	performance	_	_	_	_	
66-10	10680-10684	Sets	_	_	_	_	
66-11	10685-10688	the	_	_	_	_	
66-12	10689-10692	CPU	_	_	_	_	
66-13	10693-10704	performance	_	_	_	_	
66-14	10705-10712	profile	_	_	_	_	
66-15	10713-10716	for	_	_	_	_	
66-16	10717-10720	the	_	_	_	_	
66-17	10721-10727	server	_	_	_	_	
66-18	10727-10728	.	_	_	_	_	

#Text=This can be one of the following:
#Text=●  Enterprise: All prefetchers are enabled.
#Text=●  High throughput: DCU IP prefetcher are enabled, and all other prefetchers are disabled.
#Text=●  HPC: All prefetchers are enabled.
67-1	10729-10733	This	_	_	_	_	
67-2	10734-10737	can	_	_	_	_	
67-3	10738-10740	be	_	_	_	_	
67-4	10741-10744	one	_	_	_	_	
67-5	10745-10747	of	_	_	_	_	
67-6	10748-10751	the	_	_	_	_	
67-7	10752-10761	following	_	_	_	_	
67-8	10761-10762	:	_	_	_	_	
67-9	10763-10764	●	_	_	_	_	
67-10	10764-10765	 	_	_	_	_	
67-11	10766-10776	Enterprise	_	_	_	_	
67-12	10776-10777	:	_	_	_	_	
67-13	10778-10781	All	_	_	_	_	
67-14	10782-10793	prefetchers	_	_	_	_	
67-15	10794-10797	are	_	_	_	_	
67-16	10798-10805	enabled	_	_	_	_	
67-17	10805-10806	.	_	_	_	_	
67-18	10807-10808	●	_	_	_	_	
67-19	10808-10809	 	_	_	_	_	
67-20	10810-10814	High	_	_	_	_	
67-21	10815-10825	throughput	_	_	_	_	
67-22	10825-10826	:	_	_	_	_	
67-23	10827-10830	DCU	_	_	_	_	
67-24	10831-10833	IP	_	_	_	_	
67-25	10834-10844	prefetcher	_	_	_	_	
67-26	10845-10848	are	_	_	_	_	
67-27	10849-10856	enabled	_	_	_	_	
67-28	10856-10857	,	_	_	_	_	
67-29	10858-10861	and	_	_	_	_	
67-30	10862-10865	all	_	_	_	_	
67-31	10866-10871	other	_	_	_	_	
67-32	10872-10883	prefetchers	_	_	_	_	
67-33	10884-10887	are	_	_	_	_	
67-34	10888-10896	disabled	_	_	_	_	
67-35	10896-10897	.	_	_	_	_	
67-36	10898-10899	●	_	_	_	_	
67-37	10899-10900	 	_	_	_	_	
67-38	10901-10904	HPC	_	_	_	_	
67-39	10904-10905	:	_	_	_	_	
67-40	10906-10909	All	_	_	_	_	
67-41	10910-10921	prefetchers	_	_	_	_	
67-42	10922-10925	are	_	_	_	_	
67-43	10926-10933	enabled	_	_	_	_	
67-44	10933-10934	.	_	_	_	_	

#Text=This setting is also known as HPC.
#Text=●  Platform default: The BIOS uses the value for this attribute contained in the BIOS defaults for the server type and vendor.
68-1	10935-10939	This	_	_	_	_	
68-2	10940-10947	setting	_	_	_	_	
68-3	10948-10950	is	_	_	_	_	
68-4	10951-10955	also	_	_	_	_	
68-5	10956-10961	known	_	_	_	_	
68-6	10962-10964	as	_	_	_	_	
68-7	10965-10968	HPC	_	_	_	_	
68-8	10968-10969	.	_	_	_	_	
68-9	10970-10971	●	_	_	_	_	
68-10	10971-10972	 	_	_	_	_	
68-11	10973-10981	Platform	_	_	_	_	
68-12	10982-10989	default	_	_	_	_	
68-13	10989-10990	:	_	_	_	_	
68-14	10991-10994	The	_	_	_	_	
68-15	10995-10999	BIOS	_	_	_	_	
68-16	11000-11004	uses	_	_	_	_	
68-17	11005-11008	the	_	_	_	_	
68-18	11009-11014	value	_	_	_	_	
68-19	11015-11018	for	_	_	_	_	
68-20	11019-11023	this	_	_	_	_	
68-21	11024-11033	attribute	_	_	_	_	
68-22	11034-11043	contained	_	_	_	_	
68-23	11044-11046	in	_	_	_	_	
68-24	11047-11050	the	_	_	_	_	
68-25	11051-11055	BIOS	_	_	_	_	
68-26	11056-11064	defaults	_	_	_	_	
68-27	11065-11068	for	_	_	_	_	
68-28	11069-11072	the	_	_	_	_	
68-29	11073-11079	server	_	_	_	_	
68-30	11080-11084	type	_	_	_	_	
68-31	11085-11088	and	_	_	_	_	
68-32	11089-11095	vendor	_	_	_	_	
68-33	11095-11096	.	_	_	_	_	

#Text=Table 3.          
69-1	11097-11102	Table	_	_	_	_	
69-2	11103-11104	3	_	_	_	_	
69-3	11104-11105	.	_	_	_	_	
69-4	11105-11115	          	_	_	_	_	

#Text=Cisco UCS CPU prefetcher options and target benchmarks and workloads
#Text=Prefetchers
#Text=Target benchmarks and workloads
#Text=All enabled
#Text=HPC benchmarks, web server, SAP application server, virtualization, and TPC-E
#Text=DCU-IP enabled; all others disabled
#Text=SPECjbb2005 and certain server-side Java application-server applications
#Text=Hardware prefetcher
#Text=The hardware prefetcher prefetches additional streams of instructions and data into the Layer 2 cache upon detection of an access stride.
70-1	11116-11121	Cisco	_	_	_	_	
70-2	11122-11125	UCS	_	_	_	_	
70-3	11126-11129	CPU	_	_	_	_	
70-4	11130-11140	prefetcher	_	_	_	_	
70-5	11141-11148	options	_	_	_	_	
70-6	11149-11152	and	_	_	_	_	
70-7	11153-11159	target	_	_	_	_	
70-8	11160-11170	benchmarks	_	_	_	_	
70-9	11171-11174	and	_	_	_	_	
70-10	11175-11184	workloads	_	_	_	_	
70-11	11185-11196	Prefetchers	_	_	_	_	
70-12	11197-11203	Target	_	_	_	_	
70-13	11204-11214	benchmarks	_	_	_	_	
70-14	11215-11218	and	_	_	_	_	
70-15	11219-11228	workloads	_	_	_	_	
70-16	11229-11232	All	_	_	_	_	
70-17	11233-11240	enabled	_	_	_	_	
70-18	11241-11244	HPC	_	_	_	_	
70-19	11245-11255	benchmarks	_	_	_	_	
70-20	11255-11256	,	_	_	_	_	
70-21	11257-11260	web	_	_	_	_	
70-22	11261-11267	server	_	_	_	_	
70-23	11267-11268	,	_	_	_	_	
70-24	11269-11272	SAP	_	_	_	_	
70-25	11273-11284	application	_	_	_	_	
70-26	11285-11291	server	_	_	_	_	
70-27	11291-11292	,	_	_	_	_	
70-28	11293-11307	virtualization	_	_	_	_	
70-29	11307-11308	,	_	_	_	_	
70-30	11309-11312	and	_	_	_	_	
70-31	11313-11318	TPC-E	_	_	_	_	
70-32	11319-11325	DCU-IP	_	_	_	_	
70-33	11326-11333	enabled	_	_	_	_	
70-34	11333-11334	;	_	_	_	_	
70-35	11335-11338	all	_	_	_	_	
70-36	11339-11345	others	_	_	_	_	
70-37	11346-11354	disabled	_	_	_	_	
70-38	11355-11366	SPECjbb2005	_	_	_	_	
70-39	11367-11370	and	_	_	_	_	
70-40	11371-11378	certain	_	_	_	_	
70-41	11379-11390	server-side	_	_	_	_	
70-42	11391-11395	Java	_	_	_	_	
70-43	11396-11414	application-server	_	_	_	_	
70-44	11415-11427	applications	_	_	_	_	
70-45	11428-11436	Hardware	_	_	_	_	
70-46	11437-11447	prefetcher	_	_	_	_	
70-47	11448-11451	The	_	_	_	_	
70-48	11452-11460	hardware	_	_	_	_	
70-49	11461-11471	prefetcher	_	_	_	_	
70-50	11472-11482	prefetches	_	_	_	_	
70-51	11483-11493	additional	_	_	_	_	
70-52	11494-11501	streams	_	_	_	_	
70-53	11502-11504	of	_	_	_	_	
70-54	11505-11517	instructions	_	_	_	_	
70-55	11518-11521	and	_	_	_	_	
70-56	11522-11526	data	_	_	_	_	
70-57	11527-11531	into	_	_	_	_	
70-58	11532-11535	the	_	_	_	_	
70-59	11536-11541	Layer	_	_	_	_	
70-60	11542-11543	2	_	_	_	_	
70-61	11544-11549	cache	_	_	_	_	
70-62	11550-11554	upon	_	_	_	_	
70-63	11555-11564	detection	_	_	_	_	
70-64	11565-11567	of	_	_	_	_	
70-65	11568-11570	an	_	_	_	_	
70-66	11571-11577	access	_	_	_	_	
70-67	11578-11584	stride	_	_	_	_	
70-68	11584-11585	.	_	_	_	_	

#Text=This behavior is more likely to occur during operations that sort through sequential data, such as database table scans and clustered index scans, or that run a tight loop in code.
71-1	11586-11590	This	_	_	_	_	
71-2	11591-11599	behavior	_	_	_	_	
71-3	11600-11602	is	_	_	_	_	
71-4	11603-11607	more	_	_	_	_	
71-5	11608-11614	likely	_	_	_	_	
71-6	11615-11617	to	_	_	_	_	
71-7	11618-11623	occur	_	_	_	_	
71-8	11624-11630	during	_	_	_	_	
71-9	11631-11641	operations	_	_	_	_	
71-10	11642-11646	that	_	_	_	_	
71-11	11647-11651	sort	_	_	_	_	
71-12	11652-11659	through	_	_	_	_	
71-13	11660-11670	sequential	_	_	_	_	
71-14	11671-11675	data	_	_	_	_	
71-15	11675-11676	,	_	_	_	_	
71-16	11677-11681	such	_	_	_	_	
71-17	11682-11684	as	_	_	_	_	
71-18	11685-11693	database	_	_	_	_	
71-19	11694-11699	table	_	_	_	_	
71-20	11700-11705	scans	_	_	_	_	
71-21	11706-11709	and	_	_	_	_	
71-22	11710-11719	clustered	_	_	_	_	
71-23	11720-11725	index	_	_	_	_	
71-24	11726-11731	scans	_	_	_	_	
71-25	11731-11732	,	_	_	_	_	
71-26	11733-11735	or	_	_	_	_	
71-27	11736-11740	that	_	_	_	_	
71-28	11741-11744	run	_	_	_	_	
71-29	11745-11746	a	_	_	_	_	
71-30	11747-11752	tight	_	_	_	_	
71-31	11753-11757	loop	_	_	_	_	
71-32	11758-11760	in	_	_	_	_	
71-33	11761-11765	code	_	_	_	_	
71-34	11765-11766	.	_	_	_	_	

#Text=You can specify whether the processor allows the Intel hardware prefetcher to fetch streams of data and instructions from memory into the unified second-level cache when necessary.
72-1	11767-11770	You	_	_	_	_	
72-2	11771-11774	can	_	_	_	_	
72-3	11775-11782	specify	_	_	_	_	
72-4	11783-11790	whether	_	_	_	_	
72-5	11791-11794	the	_	_	_	_	
72-6	11795-11804	processor	_	_	_	_	
72-7	11805-11811	allows	_	_	_	_	
72-8	11812-11815	the	_	_	_	_	
72-9	11816-11821	Intel	_	_	_	_	
72-10	11822-11830	hardware	_	_	_	_	
72-11	11831-11841	prefetcher	_	_	_	_	
72-12	11842-11844	to	_	_	_	_	
72-13	11845-11850	fetch	_	_	_	_	
72-14	11851-11858	streams	_	_	_	_	
72-15	11859-11861	of	_	_	_	_	
72-16	11862-11866	data	_	_	_	_	
72-17	11867-11870	and	_	_	_	_	
72-18	11871-11883	instructions	_	_	_	_	
72-19	11884-11888	from	_	_	_	_	
72-20	11889-11895	memory	_	_	_	_	
72-21	11896-11900	into	_	_	_	_	
72-22	11901-11904	the	_	_	_	_	
72-23	11905-11912	unified	_	_	_	_	
72-24	11913-11925	second-level	_	_	_	_	
72-25	11926-11931	cache	_	_	_	_	
72-26	11932-11936	when	_	_	_	_	
72-27	11937-11946	necessary	_	_	_	_	
72-28	11946-11947	.	_	_	_	_	

#Text=The setting can be one of the following:
#Text=●     Disabled: The hardware prefetcher is not used.
#Text=●     Enabled: The processor uses the hardware prefetcher when cache problems are detected.
73-1	11948-11951	The	_	_	_	_	
73-2	11952-11959	setting	_	_	_	_	
73-3	11960-11963	can	_	_	_	_	
73-4	11964-11966	be	_	_	_	_	
73-5	11967-11970	one	_	_	_	_	
73-6	11971-11973	of	_	_	_	_	
73-7	11974-11977	the	_	_	_	_	
73-8	11978-11987	following	_	_	_	_	
73-9	11987-11988	:	_	_	_	_	
73-10	11989-11990	●	_	_	_	_	
73-11	11990-11994	    	_	_	_	_	
73-12	11995-12003	Disabled	_	_	_	_	
73-13	12003-12004	:	_	_	_	_	
73-14	12005-12008	The	_	_	_	_	
73-15	12009-12017	hardware	_	_	_	_	
73-16	12018-12028	prefetcher	_	_	_	_	
73-17	12029-12031	is	_	_	_	_	
73-18	12032-12035	not	_	_	_	_	
73-19	12036-12040	used	_	_	_	_	
73-20	12040-12041	.	_	_	_	_	
73-21	12042-12043	●	_	_	_	_	
73-22	12043-12047	    	_	_	_	_	
73-23	12048-12055	Enabled	_	_	_	_	
73-24	12055-12056	:	_	_	_	_	
73-25	12057-12060	The	_	_	_	_	
73-26	12061-12070	processor	_	_	_	_	
73-27	12071-12075	uses	_	_	_	_	
73-28	12076-12079	the	_	_	_	_	
73-29	12080-12088	hardware	_	_	_	_	
73-30	12089-12099	prefetcher	_	_	_	_	
73-31	12100-12104	when	_	_	_	_	
73-32	12105-12110	cache	_	_	_	_	
73-33	12111-12119	problems	_	_	_	_	
73-34	12120-12123	are	_	_	_	_	
73-35	12124-12132	detected	_	_	_	_	
73-36	12132-12133	.	_	_	_	_	

#Text=Adjacent-cache-line prefetcher
#Text=The adjacent-cache-line prefetcher always prefetches the next cache line.
74-1	12134-12153	Adjacent-cache-line	_	_	_	_	
74-2	12154-12164	prefetcher	_	_	_	_	
74-3	12165-12168	The	_	_	_	_	
74-4	12169-12188	adjacent-cache-line	_	_	_	_	
74-5	12189-12199	prefetcher	_	_	_	_	
74-6	12200-12206	always	_	_	_	_	
74-7	12207-12217	prefetches	_	_	_	_	
74-8	12218-12221	the	_	_	_	_	
74-9	12222-12226	next	_	_	_	_	
74-10	12227-12232	cache	_	_	_	_	
74-11	12233-12237	line	_	_	_	_	
74-12	12237-12238	.	_	_	_	_	

#Text=Although this approach works well when data is accessed sequentially in memory, it can quickly litter the small Layer 2 cache with unneeded instructions and data if the system is not accessing data sequentially, causing frequently accessed instructions and code to leave the cache to make room for the adjacent-line data or instructions.
75-1	12239-12247	Although	_	_	_	_	
75-2	12248-12252	this	_	_	_	_	
75-3	12253-12261	approach	_	_	_	_	
75-4	12262-12267	works	_	_	_	_	
75-5	12268-12272	well	_	_	_	_	
75-6	12273-12277	when	_	_	_	_	
75-7	12278-12282	data	_	_	_	_	
75-8	12283-12285	is	_	_	_	_	
75-9	12286-12294	accessed	_	_	_	_	
75-10	12295-12307	sequentially	_	_	_	_	
75-11	12308-12310	in	_	_	_	_	
75-12	12311-12317	memory	_	_	_	_	
75-13	12317-12318	,	_	_	_	_	
75-14	12319-12321	it	_	_	_	_	
75-15	12322-12325	can	_	_	_	_	
75-16	12326-12333	quickly	_	_	_	_	
75-17	12334-12340	litter	_	_	_	_	
75-18	12341-12344	the	_	_	_	_	
75-19	12345-12350	small	_	_	_	_	
75-20	12351-12356	Layer	_	_	_	_	
75-21	12357-12358	2	_	_	_	_	
75-22	12359-12364	cache	_	_	_	_	
75-23	12365-12369	with	_	_	_	_	
75-24	12370-12378	unneeded	_	_	_	_	
75-25	12379-12391	instructions	_	_	_	_	
75-26	12392-12395	and	_	_	_	_	
75-27	12396-12400	data	_	_	_	_	
75-28	12401-12403	if	_	_	_	_	
75-29	12404-12407	the	_	_	_	_	
75-30	12408-12414	system	_	_	_	_	
75-31	12415-12417	is	_	_	_	_	
75-32	12418-12421	not	_	_	_	_	
75-33	12422-12431	accessing	_	_	_	_	
75-34	12432-12436	data	_	_	_	_	
75-35	12437-12449	sequentially	_	_	_	_	
75-36	12449-12450	,	_	_	_	_	
75-37	12451-12458	causing	_	_	_	_	
75-38	12459-12469	frequently	_	_	_	_	
75-39	12470-12478	accessed	_	_	_	_	
75-40	12479-12491	instructions	_	_	_	_	
75-41	12492-12495	and	_	_	_	_	
75-42	12496-12500	code	_	_	_	_	
75-43	12501-12503	to	_	_	_	_	
75-44	12504-12509	leave	_	_	_	_	
75-45	12510-12513	the	_	_	_	_	
75-46	12514-12519	cache	_	_	_	_	
75-47	12520-12522	to	_	_	_	_	
75-48	12523-12527	make	_	_	_	_	
75-49	12528-12532	room	_	_	_	_	
75-50	12533-12536	for	_	_	_	_	
75-51	12537-12540	the	_	_	_	_	
75-52	12541-12554	adjacent-line	_	_	_	_	
75-53	12555-12559	data	_	_	_	_	
75-54	12560-12562	or	_	_	_	_	
75-55	12563-12575	instructions	_	_	_	_	
75-56	12575-12576	.	_	_	_	_	

#Text=You can specify whether the processor fetches cache lines in even or odd pairs instead of fetching just the required line.
76-1	12577-12580	You	_	_	_	_	
76-2	12581-12584	can	_	_	_	_	
76-3	12585-12592	specify	_	_	_	_	
76-4	12593-12600	whether	_	_	_	_	
76-5	12601-12604	the	_	_	_	_	
76-6	12605-12614	processor	_	_	_	_	
76-7	12615-12622	fetches	_	_	_	_	
76-8	12623-12628	cache	_	_	_	_	
76-9	12629-12634	lines	_	_	_	_	
76-10	12635-12637	in	_	_	_	_	
76-11	12638-12642	even	_	_	_	_	
76-12	12643-12645	or	_	_	_	_	
76-13	12646-12649	odd	_	_	_	_	
76-14	12650-12655	pairs	_	_	_	_	
76-15	12656-12663	instead	_	_	_	_	
76-16	12664-12666	of	_	_	_	_	
76-17	12667-12675	fetching	_	_	_	_	
76-18	12676-12680	just	_	_	_	_	
76-19	12681-12684	the	_	_	_	_	
76-20	12685-12693	required	_	_	_	_	
76-21	12694-12698	line	_	_	_	_	
76-22	12698-12699	.	_	_	_	_	

#Text=The setting can be one of the following:
#Text=●     Disabled: The processor fetches only the required line.
#Text=●     Enabled: The processor fetches both the required line and its paired line.
77-1	12700-12703	The	_	_	_	_	
77-2	12704-12711	setting	_	_	_	_	
77-3	12712-12715	can	_	_	_	_	
77-4	12716-12718	be	_	_	_	_	
77-5	12719-12722	one	_	_	_	_	
77-6	12723-12725	of	_	_	_	_	
77-7	12726-12729	the	_	_	_	_	
77-8	12730-12739	following	_	_	_	_	
77-9	12739-12740	:	_	_	_	_	
77-10	12741-12742	●	_	_	_	_	
77-11	12742-12746	    	_	_	_	_	
77-12	12747-12755	Disabled	_	_	_	_	
77-13	12755-12756	:	_	_	_	_	
77-14	12757-12760	The	_	_	_	_	
77-15	12761-12770	processor	_	_	_	_	
77-16	12771-12778	fetches	_	_	_	_	
77-17	12779-12783	only	_	_	_	_	
77-18	12784-12787	the	_	_	_	_	
77-19	12788-12796	required	_	_	_	_	
77-20	12797-12801	line	_	_	_	_	
77-21	12801-12802	.	_	_	_	_	
77-22	12803-12804	●	_	_	_	_	
77-23	12804-12808	    	_	_	_	_	
77-24	12809-12816	Enabled	_	_	_	_	
77-25	12816-12817	:	_	_	_	_	
77-26	12818-12821	The	_	_	_	_	
77-27	12822-12831	processor	_	_	_	_	
77-28	12832-12839	fetches	_	_	_	_	
77-29	12840-12844	both	_	_	_	_	
77-30	12845-12848	the	_	_	_	_	
77-31	12849-12857	required	_	_	_	_	
77-32	12858-12862	line	_	_	_	_	
77-33	12863-12866	and	_	_	_	_	
77-34	12867-12870	its	_	_	_	_	
77-35	12871-12877	paired	_	_	_	_	
77-36	12878-12882	line	_	_	_	_	
77-37	12882-12883	.	_	_	_	_	

#Text=DCU streamer prefetcher
#Text=Like the hardware prefetcher, the DCU streamer prefetcher prefetches additional streams of instructions or data upon detection of an access stride; however, it stores the streams in the tiny Layer 1 cache instead of the Layer 2 cache.
78-1	12884-12887	DCU	_	_	_	_	
78-2	12888-12896	streamer	_	_	_	_	
78-3	12897-12907	prefetcher	_	_	_	_	
78-4	12908-12912	Like	_	_	_	_	
78-5	12913-12916	the	_	_	_	_	
78-6	12917-12925	hardware	_	_	_	_	
78-7	12926-12936	prefetcher	_	_	_	_	
78-8	12936-12937	,	_	_	_	_	
78-9	12938-12941	the	_	_	_	_	
78-10	12942-12945	DCU	_	_	_	_	
78-11	12946-12954	streamer	_	_	_	_	
78-12	12955-12965	prefetcher	_	_	_	_	
78-13	12966-12976	prefetches	_	_	_	_	
78-14	12977-12987	additional	_	_	_	_	
78-15	12988-12995	streams	_	_	_	_	
78-16	12996-12998	of	_	_	_	_	
78-17	12999-13011	instructions	_	_	_	_	
78-18	13012-13014	or	_	_	_	_	
78-19	13015-13019	data	_	_	_	_	
78-20	13020-13024	upon	_	_	_	_	
78-21	13025-13034	detection	_	_	_	_	
78-22	13035-13037	of	_	_	_	_	
78-23	13038-13040	an	_	_	_	_	
78-24	13041-13047	access	_	_	_	_	
78-25	13048-13054	stride	_	_	_	_	
78-26	13054-13055	;	_	_	_	_	
78-27	13056-13063	however	_	_	_	_	
78-28	13063-13064	,	_	_	_	_	
78-29	13065-13067	it	_	_	_	_	
78-30	13068-13074	stores	_	_	_	_	
78-31	13075-13078	the	_	_	_	_	
78-32	13079-13086	streams	_	_	_	_	
78-33	13087-13089	in	_	_	_	_	
78-34	13090-13093	the	_	_	_	_	
78-35	13094-13098	tiny	_	_	_	_	
78-36	13099-13104	Layer	_	_	_	_	
78-37	13105-13106	1	_	_	_	_	
78-38	13107-13112	cache	_	_	_	_	
78-39	13113-13120	instead	_	_	_	_	
78-40	13121-13123	of	_	_	_	_	
78-41	13124-13127	the	_	_	_	_	
78-42	13128-13133	Layer	_	_	_	_	
78-43	13134-13135	2	_	_	_	_	
78-44	13136-13141	cache	_	_	_	_	
78-45	13141-13142	.	_	_	_	_	

#Text=This prefetcher is a Layer 1 data cache prefetcher.
79-1	13143-13147	This	_	_	_	_	
79-2	13148-13158	prefetcher	_	_	_	_	
79-3	13159-13161	is	_	_	_	_	
79-4	13162-13163	a	_	_	_	_	
79-5	13164-13169	Layer	_	_	_	_	
79-6	13170-13171	1	_	_	_	_	
79-7	13172-13176	data	_	_	_	_	
79-8	13177-13182	cache	_	_	_	_	
79-9	13183-13193	prefetcher	_	_	_	_	
79-10	13193-13194	.	_	_	_	_	

#Text=It detects multiple loads from the same cache line that occur within a time limit.
80-1	13195-13197	It	_	_	_	_	
80-2	13198-13205	detects	_	_	_	_	
80-3	13206-13214	multiple	_	_	_	_	
80-4	13215-13220	loads	_	_	_	_	
80-5	13221-13225	from	_	_	_	_	
80-6	13226-13229	the	_	_	_	_	
80-7	13230-13234	same	_	_	_	_	
80-8	13235-13240	cache	_	_	_	_	
80-9	13241-13245	line	_	_	_	_	
80-10	13246-13250	that	_	_	_	_	
80-11	13251-13256	occur	_	_	_	_	
80-12	13257-13263	within	_	_	_	_	
80-13	13264-13265	a	_	_	_	_	
80-14	13266-13270	time	_	_	_	_	
80-15	13271-13276	limit	_	_	_	_	
80-16	13276-13277	.	_	_	_	_	

#Text=Making the assumption that the next cache line is also required, the prefetcher loads the next line in advance to the Layer 1 cache from the Layer 2 cache or the main memory.
81-1	13278-13284	Making	_	_	_	_	
81-2	13285-13288	the	_	_	_	_	
81-3	13289-13299	assumption	_	_	_	_	
81-4	13300-13304	that	_	_	_	_	
81-5	13305-13308	the	_	_	_	_	
81-6	13309-13313	next	_	_	_	_	
81-7	13314-13319	cache	_	_	_	_	
81-8	13320-13324	line	_	_	_	_	
81-9	13325-13327	is	_	_	_	_	
81-10	13328-13332	also	_	_	_	_	
81-11	13333-13341	required	_	_	_	_	
81-12	13341-13342	,	_	_	_	_	
81-13	13343-13346	the	_	_	_	_	
81-14	13347-13357	prefetcher	_	_	_	_	
81-15	13358-13363	loads	_	_	_	_	
81-16	13364-13367	the	_	_	_	_	
81-17	13368-13372	next	_	_	_	_	
81-18	13373-13377	line	_	_	_	_	
81-19	13378-13380	in	_	_	_	_	
81-20	13381-13388	advance	_	_	_	_	
81-21	13389-13391	to	_	_	_	_	
81-22	13392-13395	the	_	_	_	_	
81-23	13396-13401	Layer	_	_	_	_	
81-24	13402-13403	1	_	_	_	_	
81-25	13404-13409	cache	_	_	_	_	
81-26	13410-13414	from	_	_	_	_	
81-27	13415-13418	the	_	_	_	_	
81-28	13419-13424	Layer	_	_	_	_	
81-29	13425-13426	2	_	_	_	_	
81-30	13427-13432	cache	_	_	_	_	
81-31	13433-13435	or	_	_	_	_	
81-32	13436-13439	the	_	_	_	_	
81-33	13440-13444	main	_	_	_	_	
81-34	13445-13451	memory	_	_	_	_	
81-35	13451-13452	.	_	_	_	_	

#Text=The setting can be one of the following:
#Text=●     Disabled: The processor does not try to anticipate cache read requirements and fetches only explicitly requested lines.
#Text=●     Enabled: The DCU prefetcher analyzes the cache read pattern and prefetches the next line in the cache if it determines that it may be needed.
82-1	13453-13456	The	_	_	_	_	
82-2	13457-13464	setting	_	_	_	_	
82-3	13465-13468	can	_	_	_	_	
82-4	13469-13471	be	_	_	_	_	
82-5	13472-13475	one	_	_	_	_	
82-6	13476-13478	of	_	_	_	_	
82-7	13479-13482	the	_	_	_	_	
82-8	13483-13492	following	_	_	_	_	
82-9	13492-13493	:	_	_	_	_	
82-10	13494-13495	●	_	_	_	_	
82-11	13495-13499	    	_	_	_	_	
82-12	13500-13508	Disabled	_	_	_	_	
82-13	13508-13509	:	_	_	_	_	
82-14	13510-13513	The	_	_	_	_	
82-15	13514-13523	processor	_	_	_	_	
82-16	13524-13528	does	_	_	_	_	
82-17	13529-13532	not	_	_	_	_	
82-18	13533-13536	try	_	_	_	_	
82-19	13537-13539	to	_	_	_	_	
82-20	13540-13550	anticipate	_	_	_	_	
82-21	13551-13556	cache	_	_	_	_	
82-22	13557-13561	read	_	_	_	_	
82-23	13562-13574	requirements	_	_	_	_	
82-24	13575-13578	and	_	_	_	_	
82-25	13579-13586	fetches	_	_	_	_	
82-26	13587-13591	only	_	_	_	_	
82-27	13592-13602	explicitly	_	_	_	_	
82-28	13603-13612	requested	_	_	_	_	
82-29	13613-13618	lines	_	_	_	_	
82-30	13618-13619	.	_	_	_	_	
82-31	13620-13621	●	_	_	_	_	
82-32	13621-13625	    	_	_	_	_	
82-33	13626-13633	Enabled	_	_	_	_	
82-34	13633-13634	:	_	_	_	_	
82-35	13635-13638	The	_	_	_	_	
82-36	13639-13642	DCU	_	_	_	_	
82-37	13643-13653	prefetcher	_	_	_	_	
82-38	13654-13662	analyzes	_	_	_	_	
82-39	13663-13666	the	_	_	_	_	
82-40	13667-13672	cache	_	_	_	_	
82-41	13673-13677	read	_	_	_	_	
82-42	13678-13685	pattern	_	_	_	_	
82-43	13686-13689	and	_	_	_	_	
82-44	13690-13700	prefetches	_	_	_	_	
82-45	13701-13704	the	_	_	_	_	
82-46	13705-13709	next	_	_	_	_	
82-47	13710-13714	line	_	_	_	_	
82-48	13715-13717	in	_	_	_	_	
82-49	13718-13721	the	_	_	_	_	
82-50	13722-13727	cache	_	_	_	_	
82-51	13728-13730	if	_	_	_	_	
82-52	13731-13733	it	_	_	_	_	
82-53	13734-13744	determines	_	_	_	_	
82-54	13745-13749	that	_	_	_	_	
82-55	13750-13752	it	_	_	_	_	
82-56	13753-13756	may	_	_	_	_	
82-57	13757-13759	be	_	_	_	_	
82-58	13760-13766	needed	_	_	_	_	
82-59	13766-13767	.	_	_	_	_	

#Text=DCU-IP prefetcher
#Text=The DCU-IP prefetcher predictably prefetches data into the Layer 1 cache on the basis of the recent instruction pointer load instruction history.
83-1	13768-13774	DCU-IP	_	_	_	_	
83-2	13775-13785	prefetcher	_	_	_	_	
83-3	13786-13789	The	_	_	_	_	
83-4	13790-13796	DCU-IP	_	_	_	_	
83-5	13797-13807	prefetcher	_	_	_	_	
83-6	13808-13819	predictably	_	_	_	_	
83-7	13820-13830	prefetches	_	_	_	_	
83-8	13831-13835	data	_	_	_	_	
83-9	13836-13840	into	_	_	_	_	
83-10	13841-13844	the	_	_	_	_	
83-11	13845-13850	Layer	_	_	_	_	
83-12	13851-13852	1	_	_	_	_	
83-13	13853-13858	cache	_	_	_	_	
83-14	13859-13861	on	_	_	_	_	
83-15	13862-13865	the	_	_	_	_	
83-16	13866-13871	basis	_	_	_	_	
83-17	13872-13874	of	_	_	_	_	
83-18	13875-13878	the	_	_	_	_	
83-19	13879-13885	recent	_	_	_	_	
83-20	13886-13897	instruction	_	_	_	_	
83-21	13898-13905	pointer	_	_	_	_	
83-22	13906-13910	load	_	_	_	_	
83-23	13911-13922	instruction	_	_	_	_	
83-24	13923-13930	history	_	_	_	_	
83-25	13930-13931	.	_	_	_	_	

#Text=You can specify whether the processor uses the DCU-IP prefetch mechanism to analyze historical cache access patterns and preload the most relevant lines in the Layer 1 cache.
84-1	13932-13935	You	_	_	_	_	
84-2	13936-13939	can	_	_	_	_	
84-3	13940-13947	specify	_	_	_	_	
84-4	13948-13955	whether	_	_	_	_	
84-5	13956-13959	the	_	_	_	_	
84-6	13960-13969	processor	_	_	_	_	
84-7	13970-13974	uses	_	_	_	_	
84-8	13975-13978	the	_	_	_	_	
84-9	13979-13985	DCU-IP	_	_	_	_	
84-10	13986-13994	prefetch	_	_	_	_	
84-11	13995-14004	mechanism	_	_	_	_	
84-12	14005-14007	to	_	_	_	_	
84-13	14008-14015	analyze	_	_	_	_	
84-14	14016-14026	historical	_	_	_	_	
84-15	14027-14032	cache	_	_	_	_	
84-16	14033-14039	access	_	_	_	_	
84-17	14040-14048	patterns	_	_	_	_	
84-18	14049-14052	and	_	_	_	_	
84-19	14053-14060	preload	_	_	_	_	
84-20	14061-14064	the	_	_	_	_	
84-21	14065-14069	most	_	_	_	_	
84-22	14070-14078	relevant	_	_	_	_	
84-23	14079-14084	lines	_	_	_	_	
84-24	14085-14087	in	_	_	_	_	
84-25	14088-14091	the	_	_	_	_	
84-26	14092-14097	Layer	_	_	_	_	
84-27	14098-14099	1	_	_	_	_	
84-28	14100-14105	cache	_	_	_	_	
84-29	14105-14106	.	_	_	_	_	

#Text=The setting can be one of the following:
#Text=●     Disabled: The processor does not preload any cache data.
#Text=●     Enabled: The DCU-IP prefetcher preloads the Layer 1 cache with the data it determines to be the most relevant.
85-1	14107-14110	The	_	_	_	_	
85-2	14111-14118	setting	_	_	_	_	
85-3	14119-14122	can	_	_	_	_	
85-4	14123-14125	be	_	_	_	_	
85-5	14126-14129	one	_	_	_	_	
85-6	14130-14132	of	_	_	_	_	
85-7	14133-14136	the	_	_	_	_	
85-8	14137-14146	following	_	_	_	_	
85-9	14146-14147	:	_	_	_	_	
85-10	14148-14149	●	_	_	_	_	
85-11	14149-14153	    	_	_	_	_	
85-12	14154-14162	Disabled	_	_	_	_	
85-13	14162-14163	:	_	_	_	_	
85-14	14164-14167	The	_	_	_	_	
85-15	14168-14177	processor	_	_	_	_	
85-16	14178-14182	does	_	_	_	_	
85-17	14183-14186	not	_	_	_	_	
85-18	14187-14194	preload	_	_	_	_	
85-19	14195-14198	any	_	_	_	_	
85-20	14199-14204	cache	_	_	_	_	
85-21	14205-14209	data	_	_	_	_	
85-22	14209-14210	.	_	_	_	_	
85-23	14211-14212	●	_	_	_	_	
85-24	14212-14216	    	_	_	_	_	
85-25	14217-14224	Enabled	_	_	_	_	
85-26	14224-14225	:	_	_	_	_	
85-27	14226-14229	The	_	_	_	_	
85-28	14230-14236	DCU-IP	_	_	_	_	
85-29	14237-14247	prefetcher	_	_	_	_	
85-30	14248-14256	preloads	_	_	_	_	
85-31	14257-14260	the	_	_	_	_	
85-32	14261-14266	Layer	_	_	_	_	
85-33	14267-14268	1	_	_	_	_	
85-34	14269-14274	cache	_	_	_	_	
85-35	14275-14279	with	_	_	_	_	
85-36	14280-14283	the	_	_	_	_	
85-37	14284-14288	data	_	_	_	_	
85-38	14289-14291	it	_	_	_	_	
85-39	14292-14302	determines	_	_	_	_	
85-40	14303-14305	to	_	_	_	_	
85-41	14306-14308	be	_	_	_	_	
85-42	14309-14312	the	_	_	_	_	
85-43	14313-14317	most	_	_	_	_	
85-44	14318-14326	relevant	_	_	_	_	
85-45	14326-14327	.	_	_	_	_	

#Text=Low-level cache prefetch
#Text=This BIOS option configures the processor’s Last-Level Cache (LLC) prefetch feature as a result of the noninclusive cache architecture.
86-1	14328-14337	Low-level	_	_	_	_	
86-2	14338-14343	cache	_	_	_	_	
86-3	14344-14352	prefetch	_	_	_	_	
86-4	14353-14357	This	_	_	_	_	
86-5	14358-14362	BIOS	_	_	_	_	
86-6	14363-14369	option	_	_	_	_	
86-7	14370-14380	configures	_	_	_	_	
86-8	14381-14384	the	_	_	_	_	
86-9	14385-14394	processor	_	_	_	_	
86-10	14394-14395	’	_	_	_	_	
86-11	14395-14396	s	_	_	_	_	
86-12	14397-14407	Last-Level	_	_	_	_	
86-13	14408-14413	Cache	_	_	_	_	
86-14	14414-14415	(	_	_	_	_	
86-15	14415-14418	LLC	_	_	_	_	
86-16	14418-14419	)	_	_	_	_	
86-17	14420-14428	prefetch	_	_	_	_	
86-18	14429-14436	feature	_	_	_	_	
86-19	14437-14439	as	_	_	_	_	
86-20	14440-14441	a	_	_	_	_	
86-21	14442-14448	result	_	_	_	_	
86-22	14449-14451	of	_	_	_	_	
86-23	14452-14455	the	_	_	_	_	
86-24	14456-14468	noninclusive	_	_	_	_	
86-25	14469-14474	cache	_	_	_	_	
86-26	14475-14487	architecture	_	_	_	_	
86-27	14487-14488	.	_	_	_	_	

#Text=The LLC prefetcher exists on top of other prefetchers that can prefetch data into the core DCU and Mid-Level Cache (MLC).
87-1	14489-14492	The	_	_	_	_	
87-2	14493-14496	LLC	_	_	_	_	
87-3	14497-14507	prefetcher	_	_	_	_	
87-4	14508-14514	exists	_	_	_	_	
87-5	14515-14517	on	_	_	_	_	
87-6	14518-14521	top	_	_	_	_	
87-7	14522-14524	of	_	_	_	_	
87-8	14525-14530	other	_	_	_	_	
87-9	14531-14542	prefetchers	_	_	_	_	
87-10	14543-14547	that	_	_	_	_	
87-11	14548-14551	can	_	_	_	_	
87-12	14552-14560	prefetch	_	_	_	_	
87-13	14561-14565	data	_	_	_	_	
87-14	14566-14570	into	_	_	_	_	
87-15	14571-14574	the	_	_	_	_	
87-16	14575-14579	core	_	_	_	_	
87-17	14580-14583	DCU	_	_	_	_	
87-18	14584-14587	and	_	_	_	_	
87-19	14588-14597	Mid-Level	_	_	_	_	
87-20	14598-14603	Cache	_	_	_	_	
87-21	14604-14605	(	_	_	_	_	
87-22	14605-14608	MLC	_	_	_	_	
87-23	14608-14609	)	_	_	_	_	
87-24	14609-14610	.	_	_	_	_	

#Text=In some cases, setting this option to disabled can improve performance.
88-1	14611-14613	In	_	_	_	_	
88-2	14614-14618	some	_	_	_	_	
88-3	14619-14624	cases	_	_	_	_	
88-4	14624-14625	,	_	_	_	_	
88-5	14626-14633	setting	_	_	_	_	
88-6	14634-14638	this	_	_	_	_	
88-7	14639-14645	option	_	_	_	_	
88-8	14646-14648	to	_	_	_	_	
88-9	14649-14657	disabled	_	_	_	_	
88-10	14658-14661	can	_	_	_	_	
88-11	14662-14669	improve	_	_	_	_	
88-12	14670-14681	performance	_	_	_	_	
88-13	14681-14682	.	_	_	_	_	

#Text=The setting for this BIOS option can be one of the following:
#Text=●     Disabled: The LLC prefetcher is disabled.
89-1	14683-14686	The	_	_	_	_	
89-2	14687-14694	setting	_	_	_	_	
89-3	14695-14698	for	_	_	_	_	
89-4	14699-14703	this	_	_	_	_	
89-5	14704-14708	BIOS	_	_	_	_	
89-6	14709-14715	option	_	_	_	_	
89-7	14716-14719	can	_	_	_	_	
89-8	14720-14722	be	_	_	_	_	
89-9	14723-14726	one	_	_	_	_	
89-10	14727-14729	of	_	_	_	_	
89-11	14730-14733	the	_	_	_	_	
89-12	14734-14743	following	_	_	_	_	
89-13	14743-14744	:	_	_	_	_	
89-14	14745-14746	●	_	_	_	_	
89-15	14746-14750	    	_	_	_	_	
89-16	14751-14759	Disabled	_	_	_	_	
89-17	14759-14760	:	_	_	_	_	
89-18	14761-14764	The	_	_	_	_	
89-19	14765-14768	LLC	_	_	_	_	
89-20	14769-14779	prefetcher	_	_	_	_	
89-21	14780-14782	is	_	_	_	_	
89-22	14783-14791	disabled	_	_	_	_	
89-23	14791-14792	.	_	_	_	_	

#Text=The other core prefetchers are not affected.
#Text=●     Enabled: The core prefetcher can prefetch data directly to the LLC.
90-1	14793-14796	The	_	_	_	_	
90-2	14797-14802	other	_	_	_	_	
90-3	14803-14807	core	_	_	_	_	
90-4	14808-14819	prefetchers	_	_	_	_	
90-5	14820-14823	are	_	_	_	_	
90-6	14824-14827	not	_	_	_	_	
90-7	14828-14836	affected	_	_	_	_	
90-8	14836-14837	.	_	_	_	_	
90-9	14838-14839	●	_	_	_	_	
90-10	14839-14843	    	_	_	_	_	
90-11	14844-14851	Enabled	_	_	_	_	
90-12	14851-14852	:	_	_	_	_	
90-13	14853-14856	The	_	_	_	_	
90-14	14857-14861	core	_	_	_	_	
90-15	14862-14872	prefetcher	_	_	_	_	
90-16	14873-14876	can	_	_	_	_	
90-17	14877-14885	prefetch	_	_	_	_	
90-18	14886-14890	data	_	_	_	_	
90-19	14891-14899	directly	_	_	_	_	
90-20	14900-14902	to	_	_	_	_	
90-21	14903-14906	the	_	_	_	_	
90-22	14907-14910	LLC	_	_	_	_	
90-23	14910-14911	.	_	_	_	_	

#Text=By default, the LLC prefetch option is disabled.
91-1	14912-14914	By	_	_	_	_	
91-2	14915-14922	default	_	_	_	_	
91-3	14922-14923	,	_	_	_	_	
91-4	14924-14927	the	_	_	_	_	
91-5	14928-14931	LLC	_	_	_	_	
91-6	14932-14940	prefetch	_	_	_	_	
91-7	14941-14947	option	_	_	_	_	
91-8	14948-14950	is	_	_	_	_	
91-9	14951-14959	disabled	_	_	_	_	
91-10	14959-14960	.	_	_	_	_	

#Text=Direct cache access
#Text=The Direct-Cache Access (DCA) mechanism is a system-level protocol in a multiprocessor system to improve I/O network performance, thereby providing higher system performance.
92-1	14961-14967	Direct	_	_	_	_	
92-2	14968-14973	cache	_	_	_	_	
92-3	14974-14980	access	_	_	_	_	
92-4	14981-14984	The	_	_	_	_	
92-5	14985-14997	Direct-Cache	_	_	_	_	
92-6	14998-15004	Access	_	_	_	_	
92-7	15005-15006	(	_	_	_	_	
92-8	15006-15009	DCA	_	_	_	_	
92-9	15009-15010	)	_	_	_	_	
92-10	15011-15020	mechanism	_	_	_	_	
92-11	15021-15023	is	_	_	_	_	
92-12	15024-15025	a	_	_	_	_	
92-13	15026-15038	system-level	_	_	_	_	
92-14	15039-15047	protocol	_	_	_	_	
92-15	15048-15050	in	_	_	_	_	
92-16	15051-15052	a	_	_	_	_	
92-17	15053-15067	multiprocessor	_	_	_	_	
92-18	15068-15074	system	_	_	_	_	
92-19	15075-15077	to	_	_	_	_	
92-20	15078-15085	improve	_	_	_	_	
92-21	15086-15087	I	_	_	_	_	
92-22	15087-15088	/	_	_	_	_	
92-23	15088-15089	O	_	_	_	_	
92-24	15090-15097	network	_	_	_	_	
92-25	15098-15109	performance	_	_	_	_	
92-26	15109-15110	,	_	_	_	_	
92-27	15111-15118	thereby	_	_	_	_	
92-28	15119-15128	providing	_	_	_	_	
92-29	15129-15135	higher	_	_	_	_	
92-30	15136-15142	system	_	_	_	_	
92-31	15143-15154	performance	_	_	_	_	
92-32	15154-15155	.	_	_	_	_	

#Text=The basic goal is to reduce cache misses when a demand read operation is performed.
93-1	15156-15159	The	_	_	_	_	
93-2	15160-15165	basic	_	_	_	_	
93-3	15166-15170	goal	_	_	_	_	
93-4	15171-15173	is	_	_	_	_	
93-5	15174-15176	to	_	_	_	_	
93-6	15177-15183	reduce	_	_	_	_	
93-7	15184-15189	cache	_	_	_	_	
93-8	15190-15196	misses	_	_	_	_	
93-9	15197-15201	when	_	_	_	_	
93-10	15202-15203	a	_	_	_	_	
93-11	15204-15210	demand	_	_	_	_	
93-12	15211-15215	read	_	_	_	_	
93-13	15216-15225	operation	_	_	_	_	
93-14	15226-15228	is	_	_	_	_	
93-15	15229-15238	performed	_	_	_	_	
93-16	15238-15239	.	_	_	_	_	

#Text=This goal is accomplished by placing the data from the I/O devices directly into the CPU cache through hints to the processor to perform a data prefetch operation and install the data in its local caches.
94-1	15240-15244	This	_	_	_	_	
94-2	15245-15249	goal	_	_	_	_	
94-3	15250-15252	is	_	_	_	_	
94-4	15253-15265	accomplished	_	_	_	_	
94-5	15266-15268	by	_	_	_	_	
94-6	15269-15276	placing	_	_	_	_	
94-7	15277-15280	the	_	_	_	_	
94-8	15281-15285	data	_	_	_	_	
94-9	15286-15290	from	_	_	_	_	
94-10	15291-15294	the	_	_	_	_	
94-11	15295-15296	I	_	_	_	_	
94-12	15296-15297	/	_	_	_	_	
94-13	15297-15298	O	_	_	_	_	
94-14	15299-15306	devices	_	_	_	_	
94-15	15307-15315	directly	_	_	_	_	
94-16	15316-15320	into	_	_	_	_	
94-17	15321-15324	the	_	_	_	_	
94-18	15325-15328	CPU	_	_	_	_	
94-19	15329-15334	cache	_	_	_	_	
94-20	15335-15342	through	_	_	_	_	
94-21	15343-15348	hints	_	_	_	_	
94-22	15349-15351	to	_	_	_	_	
94-23	15352-15355	the	_	_	_	_	
94-24	15356-15365	processor	_	_	_	_	
94-25	15366-15368	to	_	_	_	_	
94-26	15369-15376	perform	_	_	_	_	
94-27	15377-15378	a	_	_	_	_	
94-28	15379-15383	data	_	_	_	_	
94-29	15384-15392	prefetch	_	_	_	_	
94-30	15393-15402	operation	_	_	_	_	
94-31	15403-15406	and	_	_	_	_	
94-32	15407-15414	install	_	_	_	_	
94-33	15415-15418	the	_	_	_	_	
94-34	15419-15423	data	_	_	_	_	
94-35	15424-15426	in	_	_	_	_	
94-36	15427-15430	its	_	_	_	_	
94-37	15431-15436	local	_	_	_	_	
94-38	15437-15443	caches	_	_	_	_	
94-39	15443-15444	.	_	_	_	_	

#Text=Execute Disable Bit feature
#Text=The Intel Execute Disable Bit feature classifies memory areas on the server to specify where the application code can run.
95-1	15445-15452	Execute	_	_	_	_	
95-2	15453-15460	Disable	_	_	_	_	
95-3	15461-15464	Bit	_	_	_	_	
95-4	15465-15472	feature	_	_	_	_	
95-5	15473-15476	The	_	_	_	_	
95-6	15477-15482	Intel	_	_	_	_	
95-7	15483-15490	Execute	_	_	_	_	
95-8	15491-15498	Disable	_	_	_	_	
95-9	15499-15502	Bit	_	_	_	_	
95-10	15503-15510	feature	_	_	_	_	
95-11	15511-15521	classifies	_	_	_	_	
95-12	15522-15528	memory	_	_	_	_	
95-13	15529-15534	areas	_	_	_	_	
95-14	15535-15537	on	_	_	_	_	
95-15	15538-15541	the	_	_	_	_	
95-16	15542-15548	server	_	_	_	_	
95-17	15549-15551	to	_	_	_	_	
95-18	15552-15559	specify	_	_	_	_	
95-19	15560-15565	where	_	_	_	_	
95-20	15566-15569	the	_	_	_	_	
95-21	15570-15581	application	_	_	_	_	
95-22	15582-15586	code	_	_	_	_	
95-23	15587-15590	can	_	_	_	_	
95-24	15591-15594	run	_	_	_	_	
95-25	15594-15595	.	_	_	_	_	

#Text=As a result of this classification, the processor disables code processing if a malicious worm attempts to insert code in the buffer.
96-1	15596-15598	As	_	_	_	_	
96-2	15599-15600	a	_	_	_	_	
96-3	15601-15607	result	_	_	_	_	
96-4	15608-15610	of	_	_	_	_	
96-5	15611-15615	this	_	_	_	_	
96-6	15616-15630	classification	_	_	_	_	
96-7	15630-15631	,	_	_	_	_	
96-8	15632-15635	the	_	_	_	_	
96-9	15636-15645	processor	_	_	_	_	
96-10	15646-15654	disables	_	_	_	_	
96-11	15655-15659	code	_	_	_	_	
96-12	15660-15670	processing	_	_	_	_	
96-13	15671-15673	if	_	_	_	_	
96-14	15674-15675	a	_	_	_	_	
96-15	15676-15685	malicious	_	_	_	_	
96-16	15686-15690	worm	_	_	_	_	
96-17	15691-15699	attempts	_	_	_	_	
96-18	15700-15702	to	_	_	_	_	
96-19	15703-15709	insert	_	_	_	_	
96-20	15710-15714	code	_	_	_	_	
96-21	15715-15717	in	_	_	_	_	
96-22	15718-15721	the	_	_	_	_	
96-23	15722-15728	buffer	_	_	_	_	
96-24	15728-15729	.	_	_	_	_	

#Text=This setting helps prevent damage, worm propagation, and certain classes of malicious buffer overflow attacks.
97-1	15730-15734	This	_	_	_	_	
97-2	15735-15742	setting	_	_	_	_	
97-3	15743-15748	helps	_	_	_	_	
97-4	15749-15756	prevent	_	_	_	_	
97-5	15757-15763	damage	_	_	_	_	
97-6	15763-15764	,	_	_	_	_	
97-7	15765-15769	worm	_	_	_	_	
97-8	15770-15781	propagation	_	_	_	_	
97-9	15781-15782	,	_	_	_	_	
97-10	15783-15786	and	_	_	_	_	
97-11	15787-15794	certain	_	_	_	_	
97-12	15795-15802	classes	_	_	_	_	
97-13	15803-15805	of	_	_	_	_	
97-14	15806-15815	malicious	_	_	_	_	
97-15	15816-15822	buffer	_	_	_	_	
97-16	15823-15831	overflow	_	_	_	_	
97-17	15832-15839	attacks	_	_	_	_	
97-18	15839-15840	.	_	_	_	_	

#Text=The setting can be one of the following:
#Text=●     Disabled: The processor does not classify memory areas.
#Text=●     Enabled: The processor classifies memory areas.
98-1	15841-15844	The	_	_	_	_	
98-2	15845-15852	setting	_	_	_	_	
98-3	15853-15856	can	_	_	_	_	
98-4	15857-15859	be	_	_	_	_	
98-5	15860-15863	one	_	_	_	_	
98-6	15864-15866	of	_	_	_	_	
98-7	15867-15870	the	_	_	_	_	
98-8	15871-15880	following	_	_	_	_	
98-9	15880-15881	:	_	_	_	_	
98-10	15882-15883	●	_	_	_	_	
98-11	15883-15887	    	_	_	_	_	
98-12	15888-15896	Disabled	_	_	_	_	
98-13	15896-15897	:	_	_	_	_	
98-14	15898-15901	The	_	_	_	_	
98-15	15902-15911	processor	_	_	_	_	
98-16	15912-15916	does	_	_	_	_	
98-17	15917-15920	not	_	_	_	_	
98-18	15921-15929	classify	_	_	_	_	
98-19	15930-15936	memory	_	_	_	_	
98-20	15937-15942	areas	_	_	_	_	
98-21	15942-15943	.	_	_	_	_	
98-22	15944-15945	●	_	_	_	_	
98-23	15945-15949	    	_	_	_	_	
98-24	15950-15957	Enabled	_	_	_	_	
98-25	15957-15958	:	_	_	_	_	
98-26	15959-15962	The	_	_	_	_	
98-27	15963-15972	processor	_	_	_	_	
98-28	15973-15983	classifies	_	_	_	_	
98-29	15984-15990	memory	_	_	_	_	
98-30	15991-15996	areas	_	_	_	_	
98-31	15996-15997	.	_	_	_	_	

#Text=Intel VT for Directed I/O
#Text=You can specify whether the processor uses Intel Virtualization Technology (VT) for Directed I/O (VT-d), which allows a platform to run multiple operating systems and applications in independent partitions.
99-1	15998-16003	Intel	_	_	_	_	
99-2	16004-16006	VT	_	_	_	_	
99-3	16007-16010	for	_	_	_	_	
99-4	16011-16019	Directed	_	_	_	_	
99-5	16020-16021	I	_	_	_	_	
99-6	16021-16022	/	_	_	_	_	
99-7	16022-16023	O	_	_	_	_	
99-8	16024-16027	You	_	_	_	_	
99-9	16028-16031	can	_	_	_	_	
99-10	16032-16039	specify	_	_	_	_	
99-11	16040-16047	whether	_	_	_	_	
99-12	16048-16051	the	_	_	_	_	
99-13	16052-16061	processor	_	_	_	_	
99-14	16062-16066	uses	_	_	_	_	
99-15	16067-16072	Intel	_	_	_	_	
99-16	16073-16087	Virtualization	_	_	_	_	
99-17	16088-16098	Technology	_	_	_	_	
99-18	16099-16100	(	_	_	_	_	
99-19	16100-16102	VT	_	_	_	_	
99-20	16102-16103	)	_	_	_	_	
99-21	16104-16107	for	_	_	_	_	
99-22	16108-16116	Directed	_	_	_	_	
99-23	16117-16118	I	_	_	_	_	
99-24	16118-16119	/	_	_	_	_	
99-25	16119-16120	O	_	_	_	_	
99-26	16121-16122	(	_	_	_	_	
99-27	16122-16126	VT-d	_	_	_	_	
99-28	16126-16127	)	_	_	_	_	
99-29	16127-16128	,	_	_	_	_	
99-30	16129-16134	which	_	_	_	_	
99-31	16135-16141	allows	_	_	_	_	
99-32	16142-16143	a	_	_	_	_	
99-33	16144-16152	platform	_	_	_	_	
99-34	16153-16155	to	_	_	_	_	
99-35	16156-16159	run	_	_	_	_	
99-36	16160-16168	multiple	_	_	_	_	
99-37	16169-16178	operating	_	_	_	_	
99-38	16179-16186	systems	_	_	_	_	
99-39	16187-16190	and	_	_	_	_	
99-40	16191-16203	applications	_	_	_	_	
99-41	16204-16206	in	_	_	_	_	
99-42	16207-16218	independent	_	_	_	_	
99-43	16219-16229	partitions	_	_	_	_	
99-44	16229-16230	.	_	_	_	_	

#Text=The setting can be one of the following:
#Text=●     Disabled: The processor does not permit virtualization.
#Text=●     Enabled: The processor allows multiple operating systems in independent partitions.
100-1	16231-16234	The	_	_	_	_	
100-2	16235-16242	setting	_	_	_	_	
100-3	16243-16246	can	_	_	_	_	
100-4	16247-16249	be	_	_	_	_	
100-5	16250-16253	one	_	_	_	_	
100-6	16254-16256	of	_	_	_	_	
100-7	16257-16260	the	_	_	_	_	
100-8	16261-16270	following	_	_	_	_	
100-9	16270-16271	:	_	_	_	_	
100-10	16272-16273	●	_	_	_	_	
100-11	16273-16277	    	_	_	_	_	
100-12	16278-16286	Disabled	_	_	_	_	
100-13	16286-16287	:	_	_	_	_	
100-14	16288-16291	The	_	_	_	_	
100-15	16292-16301	processor	_	_	_	_	
100-16	16302-16306	does	_	_	_	_	
100-17	16307-16310	not	_	_	_	_	
100-18	16311-16317	permit	_	_	_	_	
100-19	16318-16332	virtualization	_	_	_	_	
100-20	16332-16333	.	_	_	_	_	
100-21	16334-16335	●	_	_	_	_	
100-22	16335-16339	    	_	_	_	_	
100-23	16340-16347	Enabled	_	_	_	_	
100-24	16347-16348	:	_	_	_	_	
100-25	16349-16352	The	_	_	_	_	
100-26	16353-16362	processor	_	_	_	_	
100-27	16363-16369	allows	_	_	_	_	
100-28	16370-16378	multiple	_	_	_	_	
100-29	16379-16388	operating	_	_	_	_	
100-30	16389-16396	systems	_	_	_	_	
100-31	16397-16399	in	_	_	_	_	
100-32	16400-16411	independent	_	_	_	_	
100-33	16412-16422	partitions	_	_	_	_	
100-34	16422-16423	.	_	_	_	_	

#Text=Note:      If you change this option, you must power the server off and on before the setting takes effect.
101-1	16424-16428	Note	_	_	_	_	
101-2	16428-16429	:	_	_	_	_	
101-3	16429-16434	     	_	_	_	_	
101-4	16435-16437	If	_	_	_	_	
101-5	16438-16441	you	_	_	_	_	
101-6	16442-16448	change	_	_	_	_	
101-7	16449-16453	this	_	_	_	_	
101-8	16454-16460	option	_	_	_	_	
101-9	16460-16461	,	_	_	_	_	
101-10	16462-16465	you	_	_	_	_	
101-11	16466-16470	must	_	_	_	_	
101-12	16471-16476	power	_	_	_	_	
101-13	16477-16480	the	_	_	_	_	
101-14	16481-16487	server	_	_	_	_	
101-15	16488-16491	off	_	_	_	_	
101-16	16492-16495	and	_	_	_	_	
101-17	16496-16498	on	_	_	_	_	
101-18	16499-16505	before	_	_	_	_	
101-19	16506-16509	the	_	_	_	_	
101-20	16510-16517	setting	_	_	_	_	
101-21	16518-16523	takes	_	_	_	_	
101-22	16524-16530	effect	_	_	_	_	
101-23	16530-16531	.	_	_	_	_	

#Text=Power technology
#Text=Enables you to configure the CPU power management settings for the following options:
#Text=●     Enhanced Intel Speedstep Technology
#Text=●     Intel Turbo Boost Technology
#Text=●     Processor Power State C6
#Text=For best performance, set the power technology option to Performance or Custom.
102-1	16532-16537	Power	_	_	_	_	
102-2	16538-16548	technology	_	_	_	_	
102-3	16549-16556	Enables	_	_	_	_	
102-4	16557-16560	you	_	_	_	_	
102-5	16561-16563	to	_	_	_	_	
102-6	16564-16573	configure	_	_	_	_	
102-7	16574-16577	the	_	_	_	_	
102-8	16578-16581	CPU	_	_	_	_	
102-9	16582-16587	power	_	_	_	_	
102-10	16588-16598	management	_	_	_	_	
102-11	16599-16607	settings	_	_	_	_	
102-12	16608-16611	for	_	_	_	_	
102-13	16612-16615	the	_	_	_	_	
102-14	16616-16625	following	_	_	_	_	
102-15	16626-16633	options	_	_	_	_	
102-16	16633-16634	:	_	_	_	_	
102-17	16635-16636	●	_	_	_	_	
102-18	16636-16640	    	_	_	_	_	
102-19	16641-16649	Enhanced	_	_	_	_	
102-20	16650-16655	Intel	_	_	_	_	
102-21	16656-16665	Speedstep	_	_	_	_	
102-22	16666-16676	Technology	_	_	_	_	
102-23	16677-16678	●	_	_	_	_	
102-24	16678-16682	    	_	_	_	_	
102-25	16683-16688	Intel	_	_	_	_	
102-26	16689-16694	Turbo	_	_	_	_	
102-27	16695-16700	Boost	_	_	_	_	
102-28	16701-16711	Technology	_	_	_	_	
102-29	16712-16713	●	_	_	_	_	
102-30	16713-16717	    	_	_	_	_	
102-31	16718-16727	Processor	_	_	_	_	
102-32	16728-16733	Power	_	_	_	_	
102-33	16734-16739	State	_	_	_	_	
102-34	16740-16742	C6	_	_	_	_	
102-35	16743-16746	For	_	_	_	_	
102-36	16747-16751	best	_	_	_	_	
102-37	16752-16763	performance	_	_	_	_	
102-38	16763-16764	,	_	_	_	_	
102-39	16765-16768	set	_	_	_	_	
102-40	16769-16772	the	_	_	_	_	
102-41	16773-16778	power	_	_	_	_	
102-42	16779-16789	technology	_	_	_	_	
102-43	16790-16796	option	_	_	_	_	
102-44	16797-16799	to	_	_	_	_	
102-45	16800-16811	Performance	_	_	_	_	
102-46	16812-16814	or	_	_	_	_	
102-47	16815-16821	Custom	_	_	_	_	
102-48	16821-16822	.	_	_	_	_	

#Text=If it is not set to Custom, the individual settings for Intel SpeedStep and Turbo Boost and the C6 power state are ignored.
103-1	16823-16825	If	_	_	_	_	
103-2	16826-16828	it	_	_	_	_	
103-3	16829-16831	is	_	_	_	_	
103-4	16832-16835	not	_	_	_	_	
103-5	16836-16839	set	_	_	_	_	
103-6	16840-16842	to	_	_	_	_	
103-7	16843-16849	Custom	_	_	_	_	
103-8	16849-16850	,	_	_	_	_	
103-9	16851-16854	the	_	_	_	_	
103-10	16855-16865	individual	_	_	_	_	
103-11	16866-16874	settings	_	_	_	_	
103-12	16875-16878	for	_	_	_	_	
103-13	16879-16884	Intel	_	_	_	_	
103-14	16885-16894	SpeedStep	_	_	_	_	
103-15	16895-16898	and	_	_	_	_	
103-16	16899-16904	Turbo	_	_	_	_	
103-17	16905-16910	Boost	_	_	_	_	
103-18	16911-16914	and	_	_	_	_	
103-19	16915-16918	the	_	_	_	_	
103-20	16919-16921	C6	_	_	_	_	
103-21	16922-16927	power	_	_	_	_	
103-22	16928-16933	state	_	_	_	_	
103-23	16934-16937	are	_	_	_	_	
103-24	16938-16945	ignored	_	_	_	_	
103-25	16945-16946	.	_	_	_	_	

#Text=This option can be set to one of the following:
#Text=●     Custom: The server uses the individual settings for the BIOS parameters in the preceding section.
104-1	16947-16951	This	_	_	_	_	
104-2	16952-16958	option	_	_	_	_	
104-3	16959-16962	can	_	_	_	_	
104-4	16963-16965	be	_	_	_	_	
104-5	16966-16969	set	_	_	_	_	
104-6	16970-16972	to	_	_	_	_	
104-7	16973-16976	one	_	_	_	_	
104-8	16977-16979	of	_	_	_	_	
104-9	16980-16983	the	_	_	_	_	
104-10	16984-16993	following	_	_	_	_	
104-11	16993-16994	:	_	_	_	_	
104-12	16995-16996	●	_	_	_	_	
104-13	16996-17000	    	_	_	_	_	
104-14	17001-17007	Custom	_	_	_	_	
104-15	17007-17008	:	_	_	_	_	
104-16	17009-17012	The	_	_	_	_	
104-17	17013-17019	server	_	_	_	_	
104-18	17020-17024	uses	_	_	_	_	
104-19	17025-17028	the	_	_	_	_	
104-20	17029-17039	individual	_	_	_	_	
104-21	17040-17048	settings	_	_	_	_	
104-22	17049-17052	for	_	_	_	_	
104-23	17053-17056	the	_	_	_	_	
104-24	17057-17061	BIOS	_	_	_	_	
104-25	17062-17072	parameters	_	_	_	_	
104-26	17073-17075	in	_	_	_	_	
104-27	17076-17079	the	_	_	_	_	
104-28	17080-17089	preceding	_	_	_	_	
104-29	17090-17097	section	_	_	_	_	
104-30	17097-17098	.	_	_	_	_	

#Text=You must select this option if you want to change any of these BIOS parameters.
#Text=●     Performance: The server determines the best settings for the BIOS parameters and provides optimal CPU power performance in the preceding section.
#Text=●     Disabled: The server does not perform any CPU power management, and any settings for the BIOS parameters in the preceding section are ignored.
#Text=●     Energy Efficient: The server determines the best settings for the BIOS parameters in the preceding section and ignores the individual settings for these parameters.
105-1	17099-17102	You	_	_	_	_	
105-2	17103-17107	must	_	_	_	_	
105-3	17108-17114	select	_	_	_	_	
105-4	17115-17119	this	_	_	_	_	
105-5	17120-17126	option	_	_	_	_	
105-6	17127-17129	if	_	_	_	_	
105-7	17130-17133	you	_	_	_	_	
105-8	17134-17138	want	_	_	_	_	
105-9	17139-17141	to	_	_	_	_	
105-10	17142-17148	change	_	_	_	_	
105-11	17149-17152	any	_	_	_	_	
105-12	17153-17155	of	_	_	_	_	
105-13	17156-17161	these	_	_	_	_	
105-14	17162-17166	BIOS	_	_	_	_	
105-15	17167-17177	parameters	_	_	_	_	
105-16	17177-17178	.	_	_	_	_	
105-17	17179-17180	●	_	_	_	_	
105-18	17180-17184	    	_	_	_	_	
105-19	17185-17196	Performance	_	_	_	_	
105-20	17196-17197	:	_	_	_	_	
105-21	17198-17201	The	_	_	_	_	
105-22	17202-17208	server	_	_	_	_	
105-23	17209-17219	determines	_	_	_	_	
105-24	17220-17223	the	_	_	_	_	
105-25	17224-17228	best	_	_	_	_	
105-26	17229-17237	settings	_	_	_	_	
105-27	17238-17241	for	_	_	_	_	
105-28	17242-17245	the	_	_	_	_	
105-29	17246-17250	BIOS	_	_	_	_	
105-30	17251-17261	parameters	_	_	_	_	
105-31	17262-17265	and	_	_	_	_	
105-32	17266-17274	provides	_	_	_	_	
105-33	17275-17282	optimal	_	_	_	_	
105-34	17283-17286	CPU	_	_	_	_	
105-35	17287-17292	power	_	_	_	_	
105-36	17293-17304	performance	_	_	_	_	
105-37	17305-17307	in	_	_	_	_	
105-38	17308-17311	the	_	_	_	_	
105-39	17312-17321	preceding	_	_	_	_	
105-40	17322-17329	section	_	_	_	_	
105-41	17329-17330	.	_	_	_	_	
105-42	17331-17332	●	_	_	_	_	
105-43	17332-17336	    	_	_	_	_	
105-44	17337-17345	Disabled	_	_	_	_	
105-45	17345-17346	:	_	_	_	_	
105-46	17347-17350	The	_	_	_	_	
105-47	17351-17357	server	_	_	_	_	
105-48	17358-17362	does	_	_	_	_	
105-49	17363-17366	not	_	_	_	_	
105-50	17367-17374	perform	_	_	_	_	
105-51	17375-17378	any	_	_	_	_	
105-52	17379-17382	CPU	_	_	_	_	
105-53	17383-17388	power	_	_	_	_	
105-54	17389-17399	management	_	_	_	_	
105-55	17399-17400	,	_	_	_	_	
105-56	17401-17404	and	_	_	_	_	
105-57	17405-17408	any	_	_	_	_	
105-58	17409-17417	settings	_	_	_	_	
105-59	17418-17421	for	_	_	_	_	
105-60	17422-17425	the	_	_	_	_	
105-61	17426-17430	BIOS	_	_	_	_	
105-62	17431-17441	parameters	_	_	_	_	
105-63	17442-17444	in	_	_	_	_	
105-64	17445-17448	the	_	_	_	_	
105-65	17449-17458	preceding	_	_	_	_	
105-66	17459-17466	section	_	_	_	_	
105-67	17467-17470	are	_	_	_	_	
105-68	17471-17478	ignored	_	_	_	_	
105-69	17478-17479	.	_	_	_	_	
105-70	17480-17481	●	_	_	_	_	
105-71	17481-17485	    	_	_	_	_	
105-72	17486-17492	Energy	_	_	_	_	
105-73	17493-17502	Efficient	_	_	_	_	
105-74	17502-17503	:	_	_	_	_	
105-75	17504-17507	The	_	_	_	_	
105-76	17508-17514	server	_	_	_	_	
105-77	17515-17525	determines	_	_	_	_	
105-78	17526-17529	the	_	_	_	_	
105-79	17530-17534	best	_	_	_	_	
105-80	17535-17543	settings	_	_	_	_	
105-81	17544-17547	for	_	_	_	_	
105-82	17548-17551	the	_	_	_	_	
105-83	17552-17556	BIOS	_	_	_	_	
105-84	17557-17567	parameters	_	_	_	_	
105-85	17568-17570	in	_	_	_	_	
105-86	17571-17574	the	_	_	_	_	
105-87	17575-17584	preceding	_	_	_	_	
105-88	17585-17592	section	_	_	_	_	
105-89	17593-17596	and	_	_	_	_	
105-90	17597-17604	ignores	_	_	_	_	
105-91	17605-17608	the	_	_	_	_	
105-92	17609-17619	individual	_	_	_	_	
105-93	17620-17628	settings	_	_	_	_	
105-94	17629-17632	for	_	_	_	_	
105-95	17633-17638	these	_	_	_	_	
105-96	17639-17649	parameters	_	_	_	_	
105-97	17649-17650	.	_	_	_	_	

#Text=You can set the processor C-states.
106-1	17651-17654	You	_	_	_	_	
106-2	17655-17658	can	_	_	_	_	
106-3	17659-17662	set	_	_	_	_	
106-4	17663-17666	the	_	_	_	_	
106-5	17667-17676	processor	_	_	_	_	
106-6	17677-17685	C-states	_	_	_	_	
106-7	17685-17686	.	_	_	_	_	

#Text=Processor C1E
#Text=Enabling the C1E option allows the processor to transition to its minimum frequency upon entering the C1 state.
107-1	17687-17696	Processor	_	_	_	_	
107-2	17697-17700	C1E	_	_	_	_	
107-3	17701-17709	Enabling	_	_	_	_	
107-4	17710-17713	the	_	_	_	_	
107-5	17714-17717	C1E	_	_	_	_	
107-6	17718-17724	option	_	_	_	_	
107-7	17725-17731	allows	_	_	_	_	
107-8	17732-17735	the	_	_	_	_	
107-9	17736-17745	processor	_	_	_	_	
107-10	17746-17748	to	_	_	_	_	
107-11	17749-17759	transition	_	_	_	_	
107-12	17760-17762	to	_	_	_	_	
107-13	17763-17766	its	_	_	_	_	
107-14	17767-17774	minimum	_	_	_	_	
107-15	17775-17784	frequency	_	_	_	_	
107-16	17785-17789	upon	_	_	_	_	
107-17	17790-17798	entering	_	_	_	_	
107-18	17799-17802	the	_	_	_	_	
107-19	17803-17805	C1	_	_	_	_	
107-20	17806-17811	state	_	_	_	_	
107-21	17811-17812	.	_	_	_	_	

#Text=This setting does not take effect until after you have rebooted the server.
108-1	17813-17817	This	_	_	_	_	
108-2	17818-17825	setting	_	_	_	_	
108-3	17826-17830	does	_	_	_	_	
108-4	17831-17834	not	_	_	_	_	
108-5	17835-17839	take	_	_	_	_	
108-6	17840-17846	effect	_	_	_	_	
108-7	17847-17852	until	_	_	_	_	
108-8	17853-17858	after	_	_	_	_	
108-9	17859-17862	you	_	_	_	_	
108-10	17863-17867	have	_	_	_	_	
108-11	17868-17876	rebooted	_	_	_	_	
108-12	17877-17880	the	_	_	_	_	
108-13	17881-17887	server	_	_	_	_	
108-14	17887-17888	.	_	_	_	_	

#Text=When this option is disabled, the CPU continues to run at its maximum frequency in the C1 state.
109-1	17889-17893	When	_	_	_	_	
109-2	17894-17898	this	_	_	_	_	
109-3	17899-17905	option	_	_	_	_	
109-4	17906-17908	is	_	_	_	_	
109-5	17909-17917	disabled	_	_	_	_	
109-6	17917-17918	,	_	_	_	_	
109-7	17919-17922	the	_	_	_	_	
109-8	17923-17926	CPU	_	_	_	_	
109-9	17927-17936	continues	_	_	_	_	
109-10	17937-17939	to	_	_	_	_	
109-11	17940-17943	run	_	_	_	_	
109-12	17944-17946	at	_	_	_	_	
109-13	17947-17950	its	_	_	_	_	
109-14	17951-17958	maximum	_	_	_	_	
109-15	17959-17968	frequency	_	_	_	_	
109-16	17969-17971	in	_	_	_	_	
109-17	17972-17975	the	_	_	_	_	
109-18	17976-17978	C1	_	_	_	_	
109-19	17979-17984	state	_	_	_	_	
109-20	17984-17985	.	_	_	_	_	

#Text=Users should disable this option to perform application benchmarking.
110-1	17986-17991	Users	_	_	_	_	
110-2	17992-17998	should	_	_	_	_	
110-3	17999-18006	disable	_	_	_	_	
110-4	18007-18011	this	_	_	_	_	
110-5	18012-18018	option	_	_	_	_	
110-6	18019-18021	to	_	_	_	_	
110-7	18022-18029	perform	_	_	_	_	
110-8	18030-18041	application	_	_	_	_	
110-9	18042-18054	benchmarking	_	_	_	_	
110-10	18054-18055	.	_	_	_	_	

#Text=You can specify whether the CPU transitions to its minimum frequency when entering the C1 state.
111-1	18056-18059	You	_	_	_	_	
111-2	18060-18063	can	_	_	_	_	
111-3	18064-18071	specify	_	_	_	_	
111-4	18072-18079	whether	_	_	_	_	
111-5	18080-18083	the	_	_	_	_	
111-6	18084-18087	CPU	_	_	_	_	
111-7	18088-18099	transitions	_	_	_	_	
111-8	18100-18102	to	_	_	_	_	
111-9	18103-18106	its	_	_	_	_	
111-10	18107-18114	minimum	_	_	_	_	
111-11	18115-18124	frequency	_	_	_	_	
111-12	18125-18129	when	_	_	_	_	
111-13	18130-18138	entering	_	_	_	_	
111-14	18139-18142	the	_	_	_	_	
111-15	18143-18145	C1	_	_	_	_	
111-16	18146-18151	state	_	_	_	_	
111-17	18151-18152	.	_	_	_	_	

#Text=The setting can be one of the following:
#Text=●     Disabled: The CPU continues to run at its maximum frequency in the C1 state.
#Text=●     Enabled: The CPU transitions to its minimum frequency.
112-1	18153-18156	The	_	_	_	_	
112-2	18157-18164	setting	_	_	_	_	
112-3	18165-18168	can	_	_	_	_	
112-4	18169-18171	be	_	_	_	_	
112-5	18172-18175	one	_	_	_	_	
112-6	18176-18178	of	_	_	_	_	
112-7	18179-18182	the	_	_	_	_	
112-8	18183-18192	following	_	_	_	_	
112-9	18192-18193	:	_	_	_	_	
112-10	18194-18195	●	_	_	_	_	
112-11	18195-18199	    	_	_	_	_	
112-12	18200-18208	Disabled	_	_	_	_	
112-13	18208-18209	:	_	_	_	_	
112-14	18210-18213	The	_	_	_	_	
112-15	18214-18217	CPU	_	_	_	_	
112-16	18218-18227	continues	_	_	_	_	
112-17	18228-18230	to	_	_	_	_	
112-18	18231-18234	run	_	_	_	_	
112-19	18235-18237	at	_	_	_	_	
112-20	18238-18241	its	_	_	_	_	
112-21	18242-18249	maximum	_	_	_	_	
112-22	18250-18259	frequency	_	_	_	_	
112-23	18260-18262	in	_	_	_	_	
112-24	18263-18266	the	_	_	_	_	
112-25	18267-18269	C1	_	_	_	_	
112-26	18270-18275	state	_	_	_	_	
112-27	18275-18276	.	_	_	_	_	
112-28	18277-18278	●	_	_	_	_	
112-29	18278-18282	    	_	_	_	_	
112-30	18283-18290	Enabled	_	_	_	_	
112-31	18290-18291	:	_	_	_	_	
112-32	18292-18295	The	_	_	_	_	
112-33	18296-18299	CPU	_	_	_	_	
112-34	18300-18311	transitions	_	_	_	_	
112-35	18312-18314	to	_	_	_	_	
112-36	18315-18318	its	_	_	_	_	
112-37	18319-18326	minimum	_	_	_	_	
112-38	18327-18336	frequency	_	_	_	_	
112-39	18336-18337	.	_	_	_	_	

#Text=This option saves the maximum amount of power in the C1 state.
113-1	18338-18342	This	_	_	_	_	
113-2	18343-18349	option	_	_	_	_	
113-3	18350-18355	saves	_	_	_	_	
113-4	18356-18359	the	_	_	_	_	
113-5	18360-18367	maximum	_	_	_	_	
113-6	18368-18374	amount	_	_	_	_	
113-7	18375-18377	of	_	_	_	_	
113-8	18378-18383	power	_	_	_	_	
113-9	18384-18386	in	_	_	_	_	
113-10	18387-18390	the	_	_	_	_	
113-11	18391-18393	C1	_	_	_	_	
113-12	18394-18399	state	_	_	_	_	
113-13	18399-18400	.	_	_	_	_	

#Text=Processor C3 report
#Text=You can specify whether the BIOS sends the C3 report to the operating system.
114-1	18401-18410	Processor	_	_	_	_	
114-2	18411-18413	C3	_	_	_	_	
114-3	18414-18420	report	_	_	_	_	
114-4	18421-18424	You	_	_	_	_	
114-5	18425-18428	can	_	_	_	_	
114-6	18429-18436	specify	_	_	_	_	
114-7	18437-18444	whether	_	_	_	_	
114-8	18445-18448	the	_	_	_	_	
114-9	18449-18453	BIOS	_	_	_	_	
114-10	18454-18459	sends	_	_	_	_	
114-11	18460-18463	the	_	_	_	_	
114-12	18464-18466	C3	_	_	_	_	
114-13	18467-18473	report	_	_	_	_	
114-14	18474-18476	to	_	_	_	_	
114-15	18477-18480	the	_	_	_	_	
114-16	18481-18490	operating	_	_	_	_	
114-17	18491-18497	system	_	_	_	_	
114-18	18497-18498	.	_	_	_	_	

#Text=When the OS receives the report, it can transition the processor into the lower C3 power state to decrease energy use while maintaining optimal processor performance.
115-1	18499-18503	When	_	_	_	_	
115-2	18504-18507	the	_	_	_	_	
115-3	18508-18510	OS	_	_	_	_	
115-4	18511-18519	receives	_	_	_	_	
115-5	18520-18523	the	_	_	_	_	
115-6	18524-18530	report	_	_	_	_	
115-7	18530-18531	,	_	_	_	_	
115-8	18532-18534	it	_	_	_	_	
115-9	18535-18538	can	_	_	_	_	
115-10	18539-18549	transition	_	_	_	_	
115-11	18550-18553	the	_	_	_	_	
115-12	18554-18563	processor	_	_	_	_	
115-13	18564-18568	into	_	_	_	_	
115-14	18569-18572	the	_	_	_	_	
115-15	18573-18578	lower	_	_	_	_	
115-16	18579-18581	C3	_	_	_	_	
115-17	18582-18587	power	_	_	_	_	
115-18	18588-18593	state	_	_	_	_	
115-19	18594-18596	to	_	_	_	_	
115-20	18597-18605	decrease	_	_	_	_	
115-21	18606-18612	energy	_	_	_	_	
115-22	18613-18616	use	_	_	_	_	
115-23	18617-18622	while	_	_	_	_	
115-24	18623-18634	maintaining	_	_	_	_	
115-25	18635-18642	optimal	_	_	_	_	
115-26	18643-18652	processor	_	_	_	_	
115-27	18653-18664	performance	_	_	_	_	
115-28	18664-18665	.	_	_	_	_	

#Text=The setting can be one of the following:
#Text=●     Disabled: The BIOS does not send the C3 report.
#Text=●     Enabled: The BIOS sends the C3 report, allowing the OS to transition the processor to the C3 low-power state.
116-1	18666-18669	The	_	_	_	_	
116-2	18670-18677	setting	_	_	_	_	
116-3	18678-18681	can	_	_	_	_	
116-4	18682-18684	be	_	_	_	_	
116-5	18685-18688	one	_	_	_	_	
116-6	18689-18691	of	_	_	_	_	
116-7	18692-18695	the	_	_	_	_	
116-8	18696-18705	following	_	_	_	_	
116-9	18705-18706	:	_	_	_	_	
116-10	18707-18708	●	_	_	_	_	
116-11	18708-18712	    	_	_	_	_	
116-12	18713-18721	Disabled	_	_	_	_	
116-13	18721-18722	:	_	_	_	_	
116-14	18723-18726	The	_	_	_	_	
116-15	18727-18731	BIOS	_	_	_	_	
116-16	18732-18736	does	_	_	_	_	
116-17	18737-18740	not	_	_	_	_	
116-18	18741-18745	send	_	_	_	_	
116-19	18746-18749	the	_	_	_	_	
116-20	18750-18752	C3	_	_	_	_	
116-21	18753-18759	report	_	_	_	_	
116-22	18759-18760	.	_	_	_	_	
116-23	18761-18762	●	_	_	_	_	
116-24	18762-18766	    	_	_	_	_	
116-25	18767-18774	Enabled	_	_	_	_	
116-26	18774-18775	:	_	_	_	_	
116-27	18776-18779	The	_	_	_	_	
116-28	18780-18784	BIOS	_	_	_	_	
116-29	18785-18790	sends	_	_	_	_	
116-30	18791-18794	the	_	_	_	_	
116-31	18795-18797	C3	_	_	_	_	
116-32	18798-18804	report	_	_	_	_	
116-33	18804-18805	,	_	_	_	_	
116-34	18806-18814	allowing	_	_	_	_	
116-35	18815-18818	the	_	_	_	_	
116-36	18819-18821	OS	_	_	_	_	
116-37	18822-18824	to	_	_	_	_	
116-38	18825-18835	transition	_	_	_	_	
116-39	18836-18839	the	_	_	_	_	
116-40	18840-18849	processor	_	_	_	_	
116-41	18850-18852	to	_	_	_	_	
116-42	18853-18856	the	_	_	_	_	
116-43	18857-18859	C3	_	_	_	_	
116-44	18860-18869	low-power	_	_	_	_	
116-45	18870-18875	state	_	_	_	_	
116-46	18875-18876	.	_	_	_	_	

#Text=Processor C6 report
#Text=The C6 state is power-saving halt and sleep state that a CPU can enter when it is not busy.
117-1	18877-18886	Processor	_	_	_	_	
117-2	18887-18889	C6	_	_	_	_	
117-3	18890-18896	report	_	_	_	_	
117-4	18897-18900	The	_	_	_	_	
117-5	18901-18903	C6	_	_	_	_	
117-6	18904-18909	state	_	_	_	_	
117-7	18910-18912	is	_	_	_	_	
117-8	18913-18925	power-saving	_	_	_	_	
117-9	18926-18930	halt	_	_	_	_	
117-10	18931-18934	and	_	_	_	_	
117-11	18935-18940	sleep	_	_	_	_	
117-12	18941-18946	state	_	_	_	_	
117-13	18947-18951	that	_	_	_	_	
117-14	18952-18953	a	_	_	_	_	
117-15	18954-18957	CPU	_	_	_	_	
117-16	18958-18961	can	_	_	_	_	
117-17	18962-18967	enter	_	_	_	_	
117-18	18968-18972	when	_	_	_	_	
117-19	18973-18975	it	_	_	_	_	
117-20	18976-18978	is	_	_	_	_	
117-21	18979-18982	not	_	_	_	_	
117-22	18983-18987	busy	_	_	_	_	
117-23	18987-18988	.	_	_	_	_	

#Text=Unfortunately, it can take some time for the CPU to leave these states and return to a running condition.
118-1	18989-19002	Unfortunately	_	_	_	_	
118-2	19002-19003	,	_	_	_	_	
118-3	19004-19006	it	_	_	_	_	
118-4	19007-19010	can	_	_	_	_	
118-5	19011-19015	take	_	_	_	_	
118-6	19016-19020	some	_	_	_	_	
118-7	19021-19025	time	_	_	_	_	
118-8	19026-19029	for	_	_	_	_	
118-9	19030-19033	the	_	_	_	_	
118-10	19034-19037	CPU	_	_	_	_	
118-11	19038-19040	to	_	_	_	_	
118-12	19041-19046	leave	_	_	_	_	
118-13	19047-19052	these	_	_	_	_	
118-14	19053-19059	states	_	_	_	_	
118-15	19060-19063	and	_	_	_	_	
118-16	19064-19070	return	_	_	_	_	
118-17	19071-19073	to	_	_	_	_	
118-18	19074-19075	a	_	_	_	_	
118-19	19076-19083	running	_	_	_	_	
118-20	19084-19093	condition	_	_	_	_	
118-21	19093-19094	.	_	_	_	_	

#Text=If you are concerned about performance (for all but latency-sensitive single-threaded applications), and if you can do so, disable anything related to C-states.
119-1	19095-19097	If	_	_	_	_	
119-2	19098-19101	you	_	_	_	_	
119-3	19102-19105	are	_	_	_	_	
119-4	19106-19115	concerned	_	_	_	_	
119-5	19116-19121	about	_	_	_	_	
119-6	19122-19133	performance	_	_	_	_	
119-7	19134-19135	(	_	_	_	_	
119-8	19135-19138	for	_	_	_	_	
119-9	19139-19142	all	_	_	_	_	
119-10	19143-19146	but	_	_	_	_	
119-11	19147-19164	latency-sensitive	_	_	_	_	
119-12	19165-19180	single-threaded	_	_	_	_	
119-13	19181-19193	applications	_	_	_	_	
119-14	19193-19194	)	_	_	_	_	
119-15	19194-19195	,	_	_	_	_	
119-16	19196-19199	and	_	_	_	_	
119-17	19200-19202	if	_	_	_	_	
119-18	19203-19206	you	_	_	_	_	
119-19	19207-19210	can	_	_	_	_	
119-20	19211-19213	do	_	_	_	_	
119-21	19214-19216	so	_	_	_	_	
119-22	19216-19217	,	_	_	_	_	
119-23	19218-19225	disable	_	_	_	_	
119-24	19226-19234	anything	_	_	_	_	
119-25	19235-19242	related	_	_	_	_	
119-26	19243-19245	to	_	_	_	_	
119-27	19246-19254	C-states	_	_	_	_	
119-28	19254-19255	.	_	_	_	_	

#Text=You can specify whether the BIOS sends the C6 report to the operating system.
120-1	19256-19259	You	_	_	_	_	
120-2	19260-19263	can	_	_	_	_	
120-3	19264-19271	specify	_	_	_	_	
120-4	19272-19279	whether	_	_	_	_	
120-5	19280-19283	the	_	_	_	_	
120-6	19284-19288	BIOS	_	_	_	_	
120-7	19289-19294	sends	_	_	_	_	
120-8	19295-19298	the	_	_	_	_	
120-9	19299-19301	C6	_	_	_	_	
120-10	19302-19308	report	_	_	_	_	
120-11	19309-19311	to	_	_	_	_	
120-12	19312-19315	the	_	_	_	_	
120-13	19316-19325	operating	_	_	_	_	
120-14	19326-19332	system	_	_	_	_	
120-15	19332-19333	.	_	_	_	_	

#Text=When the OS receives the report, it can transition the processor into the lower C6 power state to decrease energy use while maintaining optimal processor performance.
121-1	19334-19338	When	_	_	_	_	
121-2	19339-19342	the	_	_	_	_	
121-3	19343-19345	OS	_	_	_	_	
121-4	19346-19354	receives	_	_	_	_	
121-5	19355-19358	the	_	_	_	_	
121-6	19359-19365	report	_	_	_	_	
121-7	19365-19366	,	_	_	_	_	
121-8	19367-19369	it	_	_	_	_	
121-9	19370-19373	can	_	_	_	_	
121-10	19374-19384	transition	_	_	_	_	
121-11	19385-19388	the	_	_	_	_	
121-12	19389-19398	processor	_	_	_	_	
121-13	19399-19403	into	_	_	_	_	
121-14	19404-19407	the	_	_	_	_	
121-15	19408-19413	lower	_	_	_	_	
121-16	19414-19416	C6	_	_	_	_	
121-17	19417-19422	power	_	_	_	_	
121-18	19423-19428	state	_	_	_	_	
121-19	19429-19431	to	_	_	_	_	
121-20	19432-19440	decrease	_	_	_	_	
121-21	19441-19447	energy	_	_	_	_	
121-22	19448-19451	use	_	_	_	_	
121-23	19452-19457	while	_	_	_	_	
121-24	19458-19469	maintaining	_	_	_	_	
121-25	19470-19477	optimal	_	_	_	_	
121-26	19478-19487	processor	_	_	_	_	
121-27	19488-19499	performance	_	_	_	_	
121-28	19499-19500	.	_	_	_	_	

#Text=The setting can be one of the following:
#Text=●     Disabled: The BIOS does not send the C6 report.
#Text=●     Enabled: The BIOS sends the C6 report, allowing the OS to transition the processor to the C6 low-power state.
122-1	19501-19504	The	_	_	_	_	
122-2	19505-19512	setting	_	_	_	_	
122-3	19513-19516	can	_	_	_	_	
122-4	19517-19519	be	_	_	_	_	
122-5	19520-19523	one	_	_	_	_	
122-6	19524-19526	of	_	_	_	_	
122-7	19527-19530	the	_	_	_	_	
122-8	19531-19540	following	_	_	_	_	
122-9	19540-19541	:	_	_	_	_	
122-10	19542-19543	●	_	_	_	_	
122-11	19543-19547	    	_	_	_	_	
122-12	19548-19556	Disabled	_	_	_	_	
122-13	19556-19557	:	_	_	_	_	
122-14	19558-19561	The	_	_	_	_	
122-15	19562-19566	BIOS	_	_	_	_	
122-16	19567-19571	does	_	_	_	_	
122-17	19572-19575	not	_	_	_	_	
122-18	19576-19580	send	_	_	_	_	
122-19	19581-19584	the	_	_	_	_	
122-20	19585-19587	C6	_	_	_	_	
122-21	19588-19594	report	_	_	_	_	
122-22	19594-19595	.	_	_	_	_	
122-23	19596-19597	●	_	_	_	_	
122-24	19597-19601	    	_	_	_	_	
122-25	19602-19609	Enabled	_	_	_	_	
122-26	19609-19610	:	_	_	_	_	
122-27	19611-19614	The	_	_	_	_	
122-28	19615-19619	BIOS	_	_	_	_	
122-29	19620-19625	sends	_	_	_	_	
122-30	19626-19629	the	_	_	_	_	
122-31	19630-19632	C6	_	_	_	_	
122-32	19633-19639	report	_	_	_	_	
122-33	19639-19640	,	_	_	_	_	
122-34	19641-19649	allowing	_	_	_	_	
122-35	19650-19653	the	_	_	_	_	
122-36	19654-19656	OS	_	_	_	_	
122-37	19657-19659	to	_	_	_	_	
122-38	19660-19670	transition	_	_	_	_	
122-39	19671-19674	the	_	_	_	_	
122-40	19675-19684	processor	_	_	_	_	
122-41	19685-19687	to	_	_	_	_	
122-42	19688-19691	the	_	_	_	_	
122-43	19692-19694	C6	_	_	_	_	
122-44	19695-19704	low-power	_	_	_	_	
122-45	19705-19710	state	_	_	_	_	
122-46	19710-19711	.	_	_	_	_	

#Text=P-state coordination
#Text=You can define the way that the BIOS communicates the P-state support model to the operating system.
123-1	19712-19719	P-state	_	_	_	_	
123-2	19720-19732	coordination	_	_	_	_	
123-3	19733-19736	You	_	_	_	_	
123-4	19737-19740	can	_	_	_	_	
123-5	19741-19747	define	_	_	_	_	
123-6	19748-19751	the	_	_	_	_	
123-7	19752-19755	way	_	_	_	_	
123-8	19756-19760	that	_	_	_	_	
123-9	19761-19764	the	_	_	_	_	
123-10	19765-19769	BIOS	_	_	_	_	
123-11	19770-19782	communicates	_	_	_	_	
123-12	19783-19786	the	_	_	_	_	
123-13	19787-19794	P-state	_	_	_	_	
123-14	19795-19802	support	_	_	_	_	
123-15	19803-19808	model	_	_	_	_	
123-16	19809-19811	to	_	_	_	_	
123-17	19812-19815	the	_	_	_	_	
123-18	19816-19825	operating	_	_	_	_	
123-19	19826-19832	system	_	_	_	_	
123-20	19832-19833	.	_	_	_	_	

#Text=Three models are available, as defined by the Advanced Configuration and Power Interface (ACPI) specification:
#Text=●     HW_ALL: The processor hardware is responsible for coordinating the P-state among logical processors with dependencies (all the logical processors in a package).
#Text=●     SW_ALL: The OS Power Manager (OSPM) is responsible for coordinating the P-state among logical processors with dependencies (all the logical processors in a physical package) and must initiate the transition on all the logical processors.
#Text=●     SW_ANY: The OSPM is responsible for coordinating the P-state among logical processors with dependencies (all the logical processors in a package) and can initiate the transition on any of the logical processors in the domain.
124-1	19834-19839	Three	_	_	_	_	
124-2	19840-19846	models	_	_	_	_	
124-3	19847-19850	are	_	_	_	_	
124-4	19851-19860	available	_	_	_	_	
124-5	19860-19861	,	_	_	_	_	
124-6	19862-19864	as	_	_	_	_	
124-7	19865-19872	defined	_	_	_	_	
124-8	19873-19875	by	_	_	_	_	
124-9	19876-19879	the	_	_	_	_	
124-10	19880-19888	Advanced	_	_	_	_	
124-11	19889-19902	Configuration	_	_	_	_	
124-12	19903-19906	and	_	_	_	_	
124-13	19907-19912	Power	_	_	_	_	
124-14	19913-19922	Interface	_	_	_	_	
124-15	19923-19924	(	_	_	_	_	
124-16	19924-19928	ACPI	_	_	_	_	
124-17	19928-19929	)	_	_	_	_	
124-18	19930-19943	specification	_	_	_	_	
124-19	19943-19944	:	_	_	_	_	
124-20	19945-19946	●	_	_	_	_	
124-21	19946-19950	    	_	_	_	_	
124-22	19951-19957	HW_ALL	_	_	_	_	
124-23	19957-19958	:	_	_	_	_	
124-24	19959-19962	The	_	_	_	_	
124-25	19963-19972	processor	_	_	_	_	
124-26	19973-19981	hardware	_	_	_	_	
124-27	19982-19984	is	_	_	_	_	
124-28	19985-19996	responsible	_	_	_	_	
124-29	19997-20000	for	_	_	_	_	
124-30	20001-20013	coordinating	_	_	_	_	
124-31	20014-20017	the	_	_	_	_	
124-32	20018-20025	P-state	_	_	_	_	
124-33	20026-20031	among	_	_	_	_	
124-34	20032-20039	logical	_	_	_	_	
124-35	20040-20050	processors	_	_	_	_	
124-36	20051-20055	with	_	_	_	_	
124-37	20056-20068	dependencies	_	_	_	_	
124-38	20069-20070	(	_	_	_	_	
124-39	20070-20073	all	_	_	_	_	
124-40	20074-20077	the	_	_	_	_	
124-41	20078-20085	logical	_	_	_	_	
124-42	20086-20096	processors	_	_	_	_	
124-43	20097-20099	in	_	_	_	_	
124-44	20100-20101	a	_	_	_	_	
124-45	20102-20109	package	_	_	_	_	
124-46	20109-20110	)	_	_	_	_	
124-47	20110-20111	.	_	_	_	_	
124-48	20112-20113	●	_	_	_	_	
124-49	20113-20117	    	_	_	_	_	
124-50	20118-20124	SW_ALL	_	_	_	_	
124-51	20124-20125	:	_	_	_	_	
124-52	20126-20129	The	_	_	_	_	
124-53	20130-20132	OS	_	_	_	_	
124-54	20133-20138	Power	_	_	_	_	
124-55	20139-20146	Manager	_	_	_	_	
124-56	20147-20148	(	_	_	_	_	
124-57	20148-20152	OSPM	_	_	_	_	
124-58	20152-20153	)	_	_	_	_	
124-59	20154-20156	is	_	_	_	_	
124-60	20157-20168	responsible	_	_	_	_	
124-61	20169-20172	for	_	_	_	_	
124-62	20173-20185	coordinating	_	_	_	_	
124-63	20186-20189	the	_	_	_	_	
124-64	20190-20197	P-state	_	_	_	_	
124-65	20198-20203	among	_	_	_	_	
124-66	20204-20211	logical	_	_	_	_	
124-67	20212-20222	processors	_	_	_	_	
124-68	20223-20227	with	_	_	_	_	
124-69	20228-20240	dependencies	_	_	_	_	
124-70	20241-20242	(	_	_	_	_	
124-71	20242-20245	all	_	_	_	_	
124-72	20246-20249	the	_	_	_	_	
124-73	20250-20257	logical	_	_	_	_	
124-74	20258-20268	processors	_	_	_	_	
124-75	20269-20271	in	_	_	_	_	
124-76	20272-20273	a	_	_	_	_	
124-77	20274-20282	physical	_	_	_	_	
124-78	20283-20290	package	_	_	_	_	
124-79	20290-20291	)	_	_	_	_	
124-80	20292-20295	and	_	_	_	_	
124-81	20296-20300	must	_	_	_	_	
124-82	20301-20309	initiate	_	_	_	_	
124-83	20310-20313	the	_	_	_	_	
124-84	20314-20324	transition	_	_	_	_	
124-85	20325-20327	on	_	_	_	_	
124-86	20328-20331	all	_	_	_	_	
124-87	20332-20335	the	_	_	_	_	
124-88	20336-20343	logical	_	_	_	_	
124-89	20344-20354	processors	_	_	_	_	
124-90	20354-20355	.	_	_	_	_	
124-91	20356-20357	●	_	_	_	_	
124-92	20357-20361	    	_	_	_	_	
124-93	20362-20368	SW_ANY	_	_	_	_	
124-94	20368-20369	:	_	_	_	_	
124-95	20370-20373	The	_	_	_	_	
124-96	20374-20378	OSPM	_	_	_	_	
124-97	20379-20381	is	_	_	_	_	
124-98	20382-20393	responsible	_	_	_	_	
124-99	20394-20397	for	_	_	_	_	
124-100	20398-20410	coordinating	_	_	_	_	
124-101	20411-20414	the	_	_	_	_	
124-102	20415-20422	P-state	_	_	_	_	
124-103	20423-20428	among	_	_	_	_	
124-104	20429-20436	logical	_	_	_	_	
124-105	20437-20447	processors	_	_	_	_	
124-106	20448-20452	with	_	_	_	_	
124-107	20453-20465	dependencies	_	_	_	_	
124-108	20466-20467	(	_	_	_	_	
124-109	20467-20470	all	_	_	_	_	
124-110	20471-20474	the	_	_	_	_	
124-111	20475-20482	logical	_	_	_	_	
124-112	20483-20493	processors	_	_	_	_	
124-113	20494-20496	in	_	_	_	_	
124-114	20497-20498	a	_	_	_	_	
124-115	20499-20506	package	_	_	_	_	
124-116	20506-20507	)	_	_	_	_	
124-117	20508-20511	and	_	_	_	_	
124-118	20512-20515	can	_	_	_	_	
124-119	20516-20524	initiate	_	_	_	_	
124-120	20525-20528	the	_	_	_	_	
124-121	20529-20539	transition	_	_	_	_	
124-122	20540-20542	on	_	_	_	_	
124-123	20543-20546	any	_	_	_	_	
124-124	20547-20549	of	_	_	_	_	
124-125	20550-20553	the	_	_	_	_	
124-126	20554-20561	logical	_	_	_	_	
124-127	20562-20572	processors	_	_	_	_	
124-128	20573-20575	in	_	_	_	_	
124-129	20576-20579	the	_	_	_	_	
124-130	20580-20586	domain	_	_	_	_	
124-131	20586-20587	.	_	_	_	_	

#Text=Note:      The power technology option must be set to Custom; otherwise, the server ignores the setting for this parameter.
125-1	20588-20592	Note	_	_	_	_	
125-2	20592-20593	:	_	_	_	_	
125-3	20593-20598	     	_	_	_	_	
125-4	20599-20602	The	_	_	_	_	
125-5	20603-20608	power	_	_	_	_	
125-6	20609-20619	technology	_	_	_	_	
125-7	20620-20626	option	_	_	_	_	
125-8	20627-20631	must	_	_	_	_	
125-9	20632-20634	be	_	_	_	_	
125-10	20635-20638	set	_	_	_	_	
125-11	20639-20641	to	_	_	_	_	
125-12	20642-20648	Custom	_	_	_	_	
125-13	20648-20649	;	_	_	_	_	
125-14	20650-20659	otherwise	_	_	_	_	
125-15	20659-20660	,	_	_	_	_	
125-16	20661-20664	the	_	_	_	_	
125-17	20665-20671	server	_	_	_	_	
125-18	20672-20679	ignores	_	_	_	_	
125-19	20680-20683	the	_	_	_	_	
125-20	20684-20691	setting	_	_	_	_	
125-21	20692-20695	for	_	_	_	_	
125-22	20696-20700	this	_	_	_	_	
125-23	20701-20710	parameter	_	_	_	_	
125-24	20710-20711	.	_	_	_	_	

#Text=Package C-state limit
#Text=When power technology is set to Custom, use this option to configure the lowest processor idle power state (C-state).
126-1	20712-20719	Package	_	_	_	_	
126-2	20720-20727	C-state	_	_	_	_	
126-3	20728-20733	limit	_	_	_	_	
126-4	20734-20738	When	_	_	_	_	
126-5	20739-20744	power	_	_	_	_	
126-6	20745-20755	technology	_	_	_	_	
126-7	20756-20758	is	_	_	_	_	
126-8	20759-20762	set	_	_	_	_	
126-9	20763-20765	to	_	_	_	_	
126-10	20766-20772	Custom	_	_	_	_	
126-11	20772-20773	,	_	_	_	_	
126-12	20774-20777	use	_	_	_	_	
126-13	20778-20782	this	_	_	_	_	
126-14	20783-20789	option	_	_	_	_	
126-15	20790-20792	to	_	_	_	_	
126-16	20793-20802	configure	_	_	_	_	
126-17	20803-20806	the	_	_	_	_	
126-18	20807-20813	lowest	_	_	_	_	
126-19	20814-20823	processor	_	_	_	_	
126-20	20824-20828	idle	_	_	_	_	
126-21	20829-20834	power	_	_	_	_	
126-22	20835-20840	state	_	_	_	_	
126-23	20841-20842	(	_	_	_	_	
126-24	20842-20849	C-state	_	_	_	_	
126-25	20849-20850	)	_	_	_	_	
126-26	20850-20851	.	_	_	_	_	

#Text=The processor automatically transitions into package C-states based on the core C-states to which cores on the processor have transitioned.
127-1	20852-20855	The	_	_	_	_	
127-2	20856-20865	processor	_	_	_	_	
127-3	20866-20879	automatically	_	_	_	_	
127-4	20880-20891	transitions	_	_	_	_	
127-5	20892-20896	into	_	_	_	_	
127-6	20897-20904	package	_	_	_	_	
127-7	20905-20913	C-states	_	_	_	_	
127-8	20914-20919	based	_	_	_	_	
127-9	20920-20922	on	_	_	_	_	
127-10	20923-20926	the	_	_	_	_	
127-11	20927-20931	core	_	_	_	_	
127-12	20932-20940	C-states	_	_	_	_	
127-13	20941-20943	to	_	_	_	_	
127-14	20944-20949	which	_	_	_	_	
127-15	20950-20955	cores	_	_	_	_	
127-16	20956-20958	on	_	_	_	_	
127-17	20959-20962	the	_	_	_	_	
127-18	20963-20972	processor	_	_	_	_	
127-19	20973-20977	have	_	_	_	_	
127-20	20978-20990	transitioned	_	_	_	_	
127-21	20990-20991	.	_	_	_	_	

#Text=The higher the package C-state, the lower the power use of that idle package state.
128-1	20992-20995	The	_	_	_	_	
128-2	20996-21002	higher	_	_	_	_	
128-3	21003-21006	the	_	_	_	_	
128-4	21007-21014	package	_	_	_	_	
128-5	21015-21022	C-state	_	_	_	_	
128-6	21022-21023	,	_	_	_	_	
128-7	21024-21027	the	_	_	_	_	
128-8	21028-21033	lower	_	_	_	_	
128-9	21034-21037	the	_	_	_	_	
128-10	21038-21043	power	_	_	_	_	
128-11	21044-21047	use	_	_	_	_	
128-12	21048-21050	of	_	_	_	_	
128-13	21051-21055	that	_	_	_	_	
128-14	21056-21060	idle	_	_	_	_	
128-15	21061-21068	package	_	_	_	_	
128-16	21069-21074	state	_	_	_	_	
128-17	21074-21075	.	_	_	_	_	

#Text=The default setting, Package C6 (nonretention), is the lowest power idle package state supported by the processor.
129-1	21076-21079	The	_	_	_	_	
129-2	21080-21087	default	_	_	_	_	
129-3	21088-21095	setting	_	_	_	_	
129-4	21095-21096	,	_	_	_	_	
129-5	21097-21104	Package	_	_	_	_	
129-6	21105-21107	C6	_	_	_	_	
129-7	21108-21109	(	_	_	_	_	
129-8	21109-21121	nonretention	_	_	_	_	
129-9	21121-21122	)	_	_	_	_	
129-10	21122-21123	,	_	_	_	_	
129-11	21124-21126	is	_	_	_	_	
129-12	21127-21130	the	_	_	_	_	
129-13	21131-21137	lowest	_	_	_	_	
129-14	21138-21143	power	_	_	_	_	
129-15	21144-21148	idle	_	_	_	_	
129-16	21149-21156	package	_	_	_	_	
129-17	21157-21162	state	_	_	_	_	
129-18	21163-21172	supported	_	_	_	_	
129-19	21173-21175	by	_	_	_	_	
129-20	21176-21179	the	_	_	_	_	
129-21	21180-21189	processor	_	_	_	_	
129-22	21189-21190	.	_	_	_	_	

#Text=You can specify the amount of power available to the server components when they are idle.
130-1	21191-21194	You	_	_	_	_	
130-2	21195-21198	can	_	_	_	_	
130-3	21199-21206	specify	_	_	_	_	
130-4	21207-21210	the	_	_	_	_	
130-5	21211-21217	amount	_	_	_	_	
130-6	21218-21220	of	_	_	_	_	
130-7	21221-21226	power	_	_	_	_	
130-8	21227-21236	available	_	_	_	_	
130-9	21237-21239	to	_	_	_	_	
130-10	21240-21243	the	_	_	_	_	
130-11	21244-21250	server	_	_	_	_	
130-12	21251-21261	components	_	_	_	_	
130-13	21262-21266	when	_	_	_	_	
130-14	21267-21271	they	_	_	_	_	
130-15	21272-21275	are	_	_	_	_	
130-16	21276-21280	idle	_	_	_	_	
130-17	21280-21281	.	_	_	_	_	

#Text=The possible settings are as follows:
#Text=●     C0/C1 State: When the CPU is idle, the system slightly reduces the power consumption.
131-1	21282-21285	The	_	_	_	_	
131-2	21286-21294	possible	_	_	_	_	
131-3	21295-21303	settings	_	_	_	_	
131-4	21304-21307	are	_	_	_	_	
131-5	21308-21310	as	_	_	_	_	
131-6	21311-21318	follows	_	_	_	_	
131-7	21318-21319	:	_	_	_	_	
131-8	21320-21321	●	_	_	_	_	
131-9	21321-21325	    	_	_	_	_	
131-10	21326-21328	C0	_	_	_	_	
131-11	21328-21329	/	_	_	_	_	
131-12	21329-21331	C1	_	_	_	_	
131-13	21332-21337	State	_	_	_	_	
131-14	21337-21338	:	_	_	_	_	
131-15	21339-21343	When	_	_	_	_	
131-16	21344-21347	the	_	_	_	_	
131-17	21348-21351	CPU	_	_	_	_	
131-18	21352-21354	is	_	_	_	_	
131-19	21355-21359	idle	_	_	_	_	
131-20	21359-21360	,	_	_	_	_	
131-21	21361-21364	the	_	_	_	_	
131-22	21365-21371	system	_	_	_	_	
131-23	21372-21380	slightly	_	_	_	_	
131-24	21381-21388	reduces	_	_	_	_	
131-25	21389-21392	the	_	_	_	_	
131-26	21393-21398	power	_	_	_	_	
131-27	21399-21410	consumption	_	_	_	_	
131-28	21410-21411	.	_	_	_	_	

#Text=This option requires less power than C0 and allows the server to return quickly to high-performance mode.
#Text=●     C2 State: When the CPU is idle, the system reduces power consumption more than with the C1 option.
132-1	21412-21416	This	_	_	_	_	
132-2	21417-21423	option	_	_	_	_	
132-3	21424-21432	requires	_	_	_	_	
132-4	21433-21437	less	_	_	_	_	
132-5	21438-21443	power	_	_	_	_	
132-6	21444-21448	than	_	_	_	_	
132-7	21449-21451	C0	_	_	_	_	
132-8	21452-21455	and	_	_	_	_	
132-9	21456-21462	allows	_	_	_	_	
132-10	21463-21466	the	_	_	_	_	
132-11	21467-21473	server	_	_	_	_	
132-12	21474-21476	to	_	_	_	_	
132-13	21477-21483	return	_	_	_	_	
132-14	21484-21491	quickly	_	_	_	_	
132-15	21492-21494	to	_	_	_	_	
132-16	21495-21511	high-performance	_	_	_	_	
132-17	21512-21516	mode	_	_	_	_	
132-18	21516-21517	.	_	_	_	_	
132-19	21518-21519	●	_	_	_	_	
132-20	21519-21523	    	_	_	_	_	
132-21	21524-21526	C2	_	_	_	_	
132-22	21527-21532	State	_	_	_	_	
132-23	21532-21533	:	_	_	_	_	
132-24	21534-21538	When	_	_	_	_	
132-25	21539-21542	the	_	_	_	_	
132-26	21543-21546	CPU	_	_	_	_	
132-27	21547-21549	is	_	_	_	_	
132-28	21550-21554	idle	_	_	_	_	
132-29	21554-21555	,	_	_	_	_	
132-30	21556-21559	the	_	_	_	_	
132-31	21560-21566	system	_	_	_	_	
132-32	21567-21574	reduces	_	_	_	_	
132-33	21575-21580	power	_	_	_	_	
132-34	21581-21592	consumption	_	_	_	_	
132-35	21593-21597	more	_	_	_	_	
132-36	21598-21602	than	_	_	_	_	
132-37	21603-21607	with	_	_	_	_	
132-38	21608-21611	the	_	_	_	_	
132-39	21612-21614	C1	_	_	_	_	
132-40	21615-21621	option	_	_	_	_	
132-41	21621-21622	.	_	_	_	_	

#Text=This option requires less power than C1 or C0, but the server takes slightly longer to return to high-performance mode.
#Text=●     C6 Nonretention: When the CPU is idle, the system reduces the power consumption more than with the C3 option.
133-1	21623-21627	This	_	_	_	_	
133-2	21628-21634	option	_	_	_	_	
133-3	21635-21643	requires	_	_	_	_	
133-4	21644-21648	less	_	_	_	_	
133-5	21649-21654	power	_	_	_	_	
133-6	21655-21659	than	_	_	_	_	
133-7	21660-21662	C1	_	_	_	_	
133-8	21663-21665	or	_	_	_	_	
133-9	21666-21668	C0	_	_	_	_	
133-10	21668-21669	,	_	_	_	_	
133-11	21670-21673	but	_	_	_	_	
133-12	21674-21677	the	_	_	_	_	
133-13	21678-21684	server	_	_	_	_	
133-14	21685-21690	takes	_	_	_	_	
133-15	21691-21699	slightly	_	_	_	_	
133-16	21700-21706	longer	_	_	_	_	
133-17	21707-21709	to	_	_	_	_	
133-18	21710-21716	return	_	_	_	_	
133-19	21717-21719	to	_	_	_	_	
133-20	21720-21736	high-performance	_	_	_	_	
133-21	21737-21741	mode	_	_	_	_	
133-22	21741-21742	.	_	_	_	_	
133-23	21743-21744	●	_	_	_	_	
133-24	21744-21748	    	_	_	_	_	
133-25	21749-21751	C6	_	_	_	_	
133-26	21752-21764	Nonretention	_	_	_	_	
133-27	21764-21765	:	_	_	_	_	
133-28	21766-21770	When	_	_	_	_	
133-29	21771-21774	the	_	_	_	_	
133-30	21775-21778	CPU	_	_	_	_	
133-31	21779-21781	is	_	_	_	_	
133-32	21782-21786	idle	_	_	_	_	
133-33	21786-21787	,	_	_	_	_	
133-34	21788-21791	the	_	_	_	_	
133-35	21792-21798	system	_	_	_	_	
133-36	21799-21806	reduces	_	_	_	_	
133-37	21807-21810	the	_	_	_	_	
133-38	21811-21816	power	_	_	_	_	
133-39	21817-21828	consumption	_	_	_	_	
133-40	21829-21833	more	_	_	_	_	
133-41	21834-21838	than	_	_	_	_	
133-42	21839-21843	with	_	_	_	_	
133-43	21844-21847	the	_	_	_	_	
133-44	21848-21850	C3	_	_	_	_	
133-45	21851-21857	option	_	_	_	_	
133-46	21857-21858	.	_	_	_	_	

#Text=This option saves more power than C0, C1, or C3, but the system may experience performance problems until the server returns to full power.
#Text=●     C6 Retention: When the CPU is idle, the system reduces power consumption more than with the C3 option.
134-1	21859-21863	This	_	_	_	_	
134-2	21864-21870	option	_	_	_	_	
134-3	21871-21876	saves	_	_	_	_	
134-4	21877-21881	more	_	_	_	_	
134-5	21882-21887	power	_	_	_	_	
134-6	21888-21892	than	_	_	_	_	
134-7	21893-21895	C0	_	_	_	_	
134-8	21895-21896	,	_	_	_	_	
134-9	21897-21899	C1	_	_	_	_	
134-10	21899-21900	,	_	_	_	_	
134-11	21901-21903	or	_	_	_	_	
134-12	21904-21906	C3	_	_	_	_	
134-13	21906-21907	,	_	_	_	_	
134-14	21908-21911	but	_	_	_	_	
134-15	21912-21915	the	_	_	_	_	
134-16	21916-21922	system	_	_	_	_	
134-17	21923-21926	may	_	_	_	_	
134-18	21927-21937	experience	_	_	_	_	
134-19	21938-21949	performance	_	_	_	_	
134-20	21950-21958	problems	_	_	_	_	
134-21	21959-21964	until	_	_	_	_	
134-22	21965-21968	the	_	_	_	_	
134-23	21969-21975	server	_	_	_	_	
134-24	21976-21983	returns	_	_	_	_	
134-25	21984-21986	to	_	_	_	_	
134-26	21987-21991	full	_	_	_	_	
134-27	21992-21997	power	_	_	_	_	
134-28	21997-21998	.	_	_	_	_	
134-29	21999-22000	●	_	_	_	_	
134-30	22000-22004	    	_	_	_	_	
134-31	22005-22007	C6	_	_	_	_	
134-32	22008-22017	Retention	_	_	_	_	
134-33	22017-22018	:	_	_	_	_	
134-34	22019-22023	When	_	_	_	_	
134-35	22024-22027	the	_	_	_	_	
134-36	22028-22031	CPU	_	_	_	_	
134-37	22032-22034	is	_	_	_	_	
134-38	22035-22039	idle	_	_	_	_	
134-39	22039-22040	,	_	_	_	_	
134-40	22041-22044	the	_	_	_	_	
134-41	22045-22051	system	_	_	_	_	
134-42	22052-22059	reduces	_	_	_	_	
134-43	22060-22065	power	_	_	_	_	
134-44	22066-22077	consumption	_	_	_	_	
134-45	22078-22082	more	_	_	_	_	
134-46	22083-22087	than	_	_	_	_	
134-47	22088-22092	with	_	_	_	_	
134-48	22093-22096	the	_	_	_	_	
134-49	22097-22099	C3	_	_	_	_	
134-50	22100-22106	option	_	_	_	_	
134-51	22106-22107	.	_	_	_	_	

#Text=This option consumes slightly more power than the C6 Nonretention option, because the processor is operating at Pn voltage to reduce the package’s C-state exit latency.
135-1	22108-22112	This	_	_	_	_	
135-2	22113-22119	option	_	_	_	_	
135-3	22120-22128	consumes	_	_	_	_	
135-4	22129-22137	slightly	_	_	_	_	
135-5	22138-22142	more	_	_	_	_	
135-6	22143-22148	power	_	_	_	_	
135-7	22149-22153	than	_	_	_	_	
135-8	22154-22157	the	_	_	_	_	
135-9	22158-22160	C6	_	_	_	_	
135-10	22161-22173	Nonretention	_	_	_	_	
135-11	22174-22180	option	_	_	_	_	
135-12	22180-22181	,	_	_	_	_	
135-13	22182-22189	because	_	_	_	_	
135-14	22190-22193	the	_	_	_	_	
135-15	22194-22203	processor	_	_	_	_	
135-16	22204-22206	is	_	_	_	_	
135-17	22207-22216	operating	_	_	_	_	
135-18	22217-22219	at	_	_	_	_	
135-19	22220-22222	Pn	_	_	_	_	
135-20	22223-22230	voltage	_	_	_	_	
135-21	22231-22233	to	_	_	_	_	
135-22	22234-22240	reduce	_	_	_	_	
135-23	22241-22244	the	_	_	_	_	
135-24	22245-22252	package	_	_	_	_	
135-25	22252-22253	’	_	_	_	_	
135-26	22253-22254	s	_	_	_	_	
135-27	22255-22262	C-state	_	_	_	_	
135-28	22263-22267	exit	_	_	_	_	
135-29	22268-22275	latency	_	_	_	_	
135-30	22275-22276	.	_	_	_	_	

#Text=Energy performance
#Text=You can specify whether system performance or energy efficiency is more important on this server.
136-1	22277-22283	Energy	_	_	_	_	
136-2	22284-22295	performance	_	_	_	_	
136-3	22296-22299	You	_	_	_	_	
136-4	22300-22303	can	_	_	_	_	
136-5	22304-22311	specify	_	_	_	_	
136-6	22312-22319	whether	_	_	_	_	
136-7	22320-22326	system	_	_	_	_	
136-8	22327-22338	performance	_	_	_	_	
136-9	22339-22341	or	_	_	_	_	
136-10	22342-22348	energy	_	_	_	_	
136-11	22349-22359	efficiency	_	_	_	_	
136-12	22360-22362	is	_	_	_	_	
136-13	22363-22367	more	_	_	_	_	
136-14	22368-22377	important	_	_	_	_	
136-15	22378-22380	on	_	_	_	_	
136-16	22381-22385	this	_	_	_	_	
136-17	22386-22392	server	_	_	_	_	
136-18	22392-22393	.	_	_	_	_	

#Text=The setting can be one of the following:
#Text=●     Performance: The server provides all server components with full power at all times.
137-1	22394-22397	The	_	_	_	_	
137-2	22398-22405	setting	_	_	_	_	
137-3	22406-22409	can	_	_	_	_	
137-4	22410-22412	be	_	_	_	_	
137-5	22413-22416	one	_	_	_	_	
137-6	22417-22419	of	_	_	_	_	
137-7	22420-22423	the	_	_	_	_	
137-8	22424-22433	following	_	_	_	_	
137-9	22433-22434	:	_	_	_	_	
137-10	22435-22436	●	_	_	_	_	
137-11	22436-22440	    	_	_	_	_	
137-12	22441-22452	Performance	_	_	_	_	
137-13	22452-22453	:	_	_	_	_	
137-14	22454-22457	The	_	_	_	_	
137-15	22458-22464	server	_	_	_	_	
137-16	22465-22473	provides	_	_	_	_	
137-17	22474-22477	all	_	_	_	_	
137-18	22478-22484	server	_	_	_	_	
137-19	22485-22495	components	_	_	_	_	
137-20	22496-22500	with	_	_	_	_	
137-21	22501-22505	full	_	_	_	_	
137-22	22506-22511	power	_	_	_	_	
137-23	22512-22514	at	_	_	_	_	
137-24	22515-22518	all	_	_	_	_	
137-25	22519-22524	times	_	_	_	_	
137-26	22524-22525	.	_	_	_	_	

#Text=This option maintains the highest level of performance and requires the greatest amount of power.
#Text=●     Balanced Performance: The server provides all server components with enough power to keep a balance between performance and power.
#Text=●     Balanced Energy: The server provides all server components with enough power to keep a balance between performance and power.
#Text=●     Energy Efficient: The server provides all server components with less power to reduce power consumption.
138-1	22526-22530	This	_	_	_	_	
138-2	22531-22537	option	_	_	_	_	
138-3	22538-22547	maintains	_	_	_	_	
138-4	22548-22551	the	_	_	_	_	
138-5	22552-22559	highest	_	_	_	_	
138-6	22560-22565	level	_	_	_	_	
138-7	22566-22568	of	_	_	_	_	
138-8	22569-22580	performance	_	_	_	_	
138-9	22581-22584	and	_	_	_	_	
138-10	22585-22593	requires	_	_	_	_	
138-11	22594-22597	the	_	_	_	_	
138-12	22598-22606	greatest	_	_	_	_	
138-13	22607-22613	amount	_	_	_	_	
138-14	22614-22616	of	_	_	_	_	
138-15	22617-22622	power	_	_	_	_	
138-16	22622-22623	.	_	_	_	_	
138-17	22624-22625	●	_	_	_	_	
138-18	22625-22629	    	_	_	_	_	
138-19	22630-22638	Balanced	_	_	_	_	
138-20	22639-22650	Performance	_	_	_	_	
138-21	22650-22651	:	_	_	_	_	
138-22	22652-22655	The	_	_	_	_	
138-23	22656-22662	server	_	_	_	_	
138-24	22663-22671	provides	_	_	_	_	
138-25	22672-22675	all	_	_	_	_	
138-26	22676-22682	server	_	_	_	_	
138-27	22683-22693	components	_	_	_	_	
138-28	22694-22698	with	_	_	_	_	
138-29	22699-22705	enough	_	_	_	_	
138-30	22706-22711	power	_	_	_	_	
138-31	22712-22714	to	_	_	_	_	
138-32	22715-22719	keep	_	_	_	_	
138-33	22720-22721	a	_	_	_	_	
138-34	22722-22729	balance	_	_	_	_	
138-35	22730-22737	between	_	_	_	_	
138-36	22738-22749	performance	_	_	_	_	
138-37	22750-22753	and	_	_	_	_	
138-38	22754-22759	power	_	_	_	_	
138-39	22759-22760	.	_	_	_	_	
138-40	22761-22762	●	_	_	_	_	
138-41	22762-22766	    	_	_	_	_	
138-42	22767-22775	Balanced	_	_	_	_	
138-43	22776-22782	Energy	_	_	_	_	
138-44	22782-22783	:	_	_	_	_	
138-45	22784-22787	The	_	_	_	_	
138-46	22788-22794	server	_	_	_	_	
138-47	22795-22803	provides	_	_	_	_	
138-48	22804-22807	all	_	_	_	_	
138-49	22808-22814	server	_	_	_	_	
138-50	22815-22825	components	_	_	_	_	
138-51	22826-22830	with	_	_	_	_	
138-52	22831-22837	enough	_	_	_	_	
138-53	22838-22843	power	_	_	_	_	
138-54	22844-22846	to	_	_	_	_	
138-55	22847-22851	keep	_	_	_	_	
138-56	22852-22853	a	_	_	_	_	
138-57	22854-22861	balance	_	_	_	_	
138-58	22862-22869	between	_	_	_	_	
138-59	22870-22881	performance	_	_	_	_	
138-60	22882-22885	and	_	_	_	_	
138-61	22886-22891	power	_	_	_	_	
138-62	22891-22892	.	_	_	_	_	
138-63	22893-22894	●	_	_	_	_	
138-64	22894-22898	    	_	_	_	_	
138-65	22899-22905	Energy	_	_	_	_	
138-66	22906-22915	Efficient	_	_	_	_	
138-67	22915-22916	:	_	_	_	_	
138-68	22917-22920	The	_	_	_	_	
138-69	22921-22927	server	_	_	_	_	
138-70	22928-22936	provides	_	_	_	_	
138-71	22937-22940	all	_	_	_	_	
138-72	22941-22947	server	_	_	_	_	
138-73	22948-22958	components	_	_	_	_	
138-74	22959-22963	with	_	_	_	_	
138-75	22964-22968	less	_	_	_	_	
138-76	22969-22974	power	_	_	_	_	
138-77	22975-22977	to	_	_	_	_	
138-78	22978-22984	reduce	_	_	_	_	
138-79	22985-22990	power	_	_	_	_	
138-80	22991-23002	consumption	_	_	_	_	
138-81	23002-23003	.	_	_	_	_	

#Text=Note:      Power Technology must be set to Custom or the server ignores the setting for this parameter
#Text=Autonomous Core C-state
#Text=When the operating system requests CPU core C1 state, system hardware automatically changes the request to core C6 state
#Text=This BIOS switch allows 2 options: "Enabled" and "Disabled".
#Text=●     Enabled: HALT and C1 request get converted to C6 requests in hardware.
#Text=●     Disabled: only C0 and C1 are used by the OS.
139-1	23004-23008	Note	_	_	_	_	
139-2	23008-23009	:	_	_	_	_	
139-3	23009-23014	     	_	_	_	_	
139-4	23015-23020	Power	_	_	_	_	
139-5	23021-23031	Technology	_	_	_	_	
139-6	23032-23036	must	_	_	_	_	
139-7	23037-23039	be	_	_	_	_	
139-8	23040-23043	set	_	_	_	_	
139-9	23044-23046	to	_	_	_	_	
139-10	23047-23053	Custom	_	_	_	_	
139-11	23054-23056	or	_	_	_	_	
139-12	23057-23060	the	_	_	_	_	
139-13	23061-23067	server	_	_	_	_	
139-14	23068-23075	ignores	_	_	_	_	
139-15	23076-23079	the	_	_	_	_	
139-16	23080-23087	setting	_	_	_	_	
139-17	23088-23091	for	_	_	_	_	
139-18	23092-23096	this	_	_	_	_	
139-19	23097-23106	parameter	_	_	_	_	
139-20	23107-23117	Autonomous	_	_	_	_	
139-21	23118-23122	Core	_	_	_	_	
139-22	23123-23130	C-state	_	_	_	_	
139-23	23131-23135	When	_	_	_	_	
139-24	23136-23139	the	_	_	_	_	
139-25	23140-23149	operating	_	_	_	_	
139-26	23150-23156	system	_	_	_	_	
139-27	23157-23165	requests	_	_	_	_	
139-28	23166-23169	CPU	_	_	_	_	
139-29	23170-23174	core	_	_	_	_	
139-30	23175-23177	C1	_	_	_	_	
139-31	23178-23183	state	_	_	_	_	
139-32	23183-23184	,	_	_	_	_	
139-33	23185-23191	system	_	_	_	_	
139-34	23192-23200	hardware	_	_	_	_	
139-35	23201-23214	automatically	_	_	_	_	
139-36	23215-23222	changes	_	_	_	_	
139-37	23223-23226	the	_	_	_	_	
139-38	23227-23234	request	_	_	_	_	
139-39	23235-23237	to	_	_	_	_	
139-40	23238-23242	core	_	_	_	_	
139-41	23243-23245	C6	_	_	_	_	
139-42	23246-23251	state	_	_	_	_	
139-43	23252-23256	This	_	_	_	_	
139-44	23257-23261	BIOS	_	_	_	_	
139-45	23262-23268	switch	_	_	_	_	
139-46	23269-23275	allows	_	_	_	_	
139-47	23276-23277	2	_	_	_	_	
139-48	23278-23285	options	_	_	_	_	
139-49	23285-23286	:	_	_	_	_	
139-50	23287-23288	"	_	_	_	_	
139-51	23288-23295	Enabled	_	_	_	_	
139-52	23295-23296	"	_	_	_	_	
139-53	23297-23300	and	_	_	_	_	
139-54	23301-23302	"	_	_	_	_	
139-55	23302-23310	Disabled	_	_	_	_	
139-56	23310-23311	"	_	_	_	_	
139-57	23311-23312	.	_	_	_	_	
139-58	23313-23314	●	_	_	_	_	
139-59	23314-23318	    	_	_	_	_	
139-60	23319-23326	Enabled	_	_	_	_	
139-61	23326-23327	:	_	_	_	_	
139-62	23328-23332	HALT	_	_	_	_	
139-63	23333-23336	and	_	_	_	_	
139-64	23337-23339	C1	_	_	_	_	
139-65	23340-23347	request	_	_	_	_	
139-66	23348-23351	get	_	_	_	_	
139-67	23352-23361	converted	_	_	_	_	
139-68	23362-23364	to	_	_	_	_	
139-69	23365-23367	C6	_	_	_	_	
139-70	23368-23376	requests	_	_	_	_	
139-71	23377-23379	in	_	_	_	_	
139-72	23380-23388	hardware	_	_	_	_	
139-73	23388-23389	.	_	_	_	_	
139-74	23390-23391	●	_	_	_	_	
139-75	23391-23395	    	_	_	_	_	
139-76	23396-23404	Disabled	_	_	_	_	
139-77	23404-23405	:	_	_	_	_	
139-78	23406-23410	only	_	_	_	_	
139-79	23411-23413	C0	_	_	_	_	
139-80	23414-23417	and	_	_	_	_	
139-81	23418-23420	C1	_	_	_	_	
139-82	23421-23424	are	_	_	_	_	
139-83	23425-23429	used	_	_	_	_	
139-84	23430-23432	by	_	_	_	_	
139-85	23433-23436	the	_	_	_	_	
139-86	23437-23439	OS	_	_	_	_	
139-87	23439-23440	.	_	_	_	_	

#Text=C1 gets enabled automatically when an OS autohalts.
140-1	23441-23443	C1	_	_	_	_	
140-2	23444-23448	gets	_	_	_	_	
140-3	23449-23456	enabled	_	_	_	_	
140-4	23457-23470	automatically	_	_	_	_	
140-5	23471-23475	when	_	_	_	_	
140-6	23476-23478	an	_	_	_	_	
140-7	23479-23481	OS	_	_	_	_	
140-8	23482-23491	autohalts	_	_	_	_	
140-9	23491-23492	.	_	_	_	_	

#Text=By default, Autonomous Core C-state is disabled.
141-1	23493-23495	By	_	_	_	_	
141-2	23496-23503	default	_	_	_	_	
141-3	23503-23504	,	_	_	_	_	
141-4	23505-23515	Autonomous	_	_	_	_	
141-5	23516-23520	Core	_	_	_	_	
141-6	23521-23528	C-state	_	_	_	_	
141-7	23529-23531	is	_	_	_	_	
141-8	23532-23540	disabled	_	_	_	_	
141-9	23540-23541	.	_	_	_	_	

#Text=Workload configuration
#Text=You can configure workload optimization.
142-1	23542-23550	Workload	_	_	_	_	
142-2	23551-23564	configuration	_	_	_	_	
142-3	23565-23568	You	_	_	_	_	
142-4	23569-23572	can	_	_	_	_	
142-5	23573-23582	configure	_	_	_	_	
142-6	23583-23591	workload	_	_	_	_	
142-7	23592-23604	optimization	_	_	_	_	
142-8	23604-23605	.	_	_	_	_	

#Text=You can configure the following options:
#Text=●     Balanced
#Text=●     I/O Sensitive
#Text=●     Non-Uniform Memory Access (NUMA)
#Text=●     Uniform Memory Access (UMA)
#Text=By default, I/O Sensitive is enabled.
143-1	23606-23609	You	_	_	_	_	
143-2	23610-23613	can	_	_	_	_	
143-3	23614-23623	configure	_	_	_	_	
143-4	23624-23627	the	_	_	_	_	
143-5	23628-23637	following	_	_	_	_	
143-6	23638-23645	options	_	_	_	_	
143-7	23645-23646	:	_	_	_	_	
143-8	23647-23648	●	_	_	_	_	
143-9	23648-23652	    	_	_	_	_	
143-10	23653-23661	Balanced	_	_	_	_	
143-11	23662-23663	●	_	_	_	_	
143-12	23663-23667	    	_	_	_	_	
143-13	23668-23669	I	_	_	_	_	
143-14	23669-23670	/	_	_	_	_	
143-15	23670-23671	O	_	_	_	_	
143-16	23672-23681	Sensitive	_	_	_	_	
143-17	23682-23683	●	_	_	_	_	
143-18	23683-23687	    	_	_	_	_	
143-19	23688-23699	Non-Uniform	_	_	_	_	
143-20	23700-23706	Memory	_	_	_	_	
143-21	23707-23713	Access	_	_	_	_	
143-22	23714-23715	(	_	_	_	_	
143-23	23715-23719	NUMA	_	_	_	_	
143-24	23719-23720	)	_	_	_	_	
143-25	23721-23722	●	_	_	_	_	
143-26	23722-23726	    	_	_	_	_	
143-27	23727-23734	Uniform	_	_	_	_	
143-28	23735-23741	Memory	_	_	_	_	
143-29	23742-23748	Access	_	_	_	_	
143-30	23749-23750	(	_	_	_	_	
143-31	23750-23753	UMA	_	_	_	_	
143-32	23753-23754	)	_	_	_	_	
143-33	23755-23757	By	_	_	_	_	
143-34	23758-23765	default	_	_	_	_	
143-35	23765-23766	,	_	_	_	_	
143-36	23767-23768	I	_	_	_	_	
143-37	23768-23769	/	_	_	_	_	
143-38	23769-23770	O	_	_	_	_	
143-39	23771-23780	Sensitive	_	_	_	_	
143-40	23781-23783	is	_	_	_	_	
143-41	23784-23791	enabled	_	_	_	_	
143-42	23791-23792	.	_	_	_	_	

#Text=Memory settings
#Text=You can use several settings to optimize memory performance.
144-1	23793-23799	Memory	_	_	_	_	
144-2	23800-23808	settings	_	_	_	_	
144-3	23809-23812	You	_	_	_	_	
144-4	23813-23816	can	_	_	_	_	
144-5	23817-23820	use	_	_	_	_	
144-6	23821-23828	several	_	_	_	_	
144-7	23829-23837	settings	_	_	_	_	
144-8	23838-23840	to	_	_	_	_	
144-9	23841-23849	optimize	_	_	_	_	
144-10	23850-23856	memory	_	_	_	_	
144-11	23857-23868	performance	_	_	_	_	
144-12	23868-23869	.	_	_	_	_	

#Text=Memory reliability, availability, and serviceability configuration
#Text=Always set the memory reliability, availability, and serviceability (RAS) configuration to Maximum Performance for systems that require the highest performance and do not require memory fault-tolerance options.
145-1	23870-23876	Memory	_	_	_	_	
145-2	23877-23888	reliability	_	_	_	_	
145-3	23888-23889	,	_	_	_	_	
145-4	23890-23902	availability	_	_	_	_	
145-5	23902-23903	,	_	_	_	_	
145-6	23904-23907	and	_	_	_	_	
145-7	23908-23922	serviceability	_	_	_	_	
145-8	23923-23936	configuration	_	_	_	_	
145-9	23937-23943	Always	_	_	_	_	
145-10	23944-23947	set	_	_	_	_	
145-11	23948-23951	the	_	_	_	_	
145-12	23952-23958	memory	_	_	_	_	
145-13	23959-23970	reliability	_	_	_	_	
145-14	23970-23971	,	_	_	_	_	
145-15	23972-23984	availability	_	_	_	_	
145-16	23984-23985	,	_	_	_	_	
145-17	23986-23989	and	_	_	_	_	
145-18	23990-24004	serviceability	_	_	_	_	
145-19	24005-24006	(	_	_	_	_	
145-20	24006-24009	RAS	_	_	_	_	
145-21	24009-24010	)	_	_	_	_	
145-22	24011-24024	configuration	_	_	_	_	
145-23	24025-24027	to	_	_	_	_	
145-24	24028-24035	Maximum	_	_	_	_	
145-25	24036-24047	Performance	_	_	_	_	
145-26	24048-24051	for	_	_	_	_	
145-27	24052-24059	systems	_	_	_	_	
145-28	24060-24064	that	_	_	_	_	
145-29	24065-24072	require	_	_	_	_	
145-30	24073-24076	the	_	_	_	_	
145-31	24077-24084	highest	_	_	_	_	
145-32	24085-24096	performance	_	_	_	_	
145-33	24097-24100	and	_	_	_	_	
145-34	24101-24103	do	_	_	_	_	
145-35	24104-24107	not	_	_	_	_	
145-36	24108-24115	require	_	_	_	_	
145-37	24116-24122	memory	_	_	_	_	
145-38	24123-24138	fault-tolerance	_	_	_	_	
145-39	24139-24146	options	_	_	_	_	
145-40	24146-24147	.	_	_	_	_	

#Text=The following settings are available:
#Text=●     Maximum Performance: System performance is optimized.
#Text=●     Mirror Mode 1LM (one-level memory): System reliability is optimized by using half the system memory as backup.
146-1	24148-24151	The	_	_	_	_	
146-2	24152-24161	following	_	_	_	_	
146-3	24162-24170	settings	_	_	_	_	
146-4	24171-24174	are	_	_	_	_	
146-5	24175-24184	available	_	_	_	_	
146-6	24184-24185	:	_	_	_	_	
146-7	24186-24187	●	_	_	_	_	
146-8	24187-24191	    	_	_	_	_	
146-9	24192-24199	Maximum	_	_	_	_	
146-10	24200-24211	Performance	_	_	_	_	
146-11	24211-24212	:	_	_	_	_	
146-12	24213-24219	System	_	_	_	_	
146-13	24220-24231	performance	_	_	_	_	
146-14	24232-24234	is	_	_	_	_	
146-15	24235-24244	optimized	_	_	_	_	
146-16	24244-24245	.	_	_	_	_	
146-17	24246-24247	●	_	_	_	_	
146-18	24247-24251	    	_	_	_	_	
146-19	24252-24258	Mirror	_	_	_	_	
146-20	24259-24263	Mode	_	_	_	_	
146-21	24264-24267	1LM	_	_	_	_	
146-22	24268-24269	(	_	_	_	_	
146-23	24269-24278	one-level	_	_	_	_	
146-24	24279-24285	memory	_	_	_	_	
146-25	24285-24286	)	_	_	_	_	
146-26	24286-24287	:	_	_	_	_	
146-27	24288-24294	System	_	_	_	_	
146-28	24295-24306	reliability	_	_	_	_	
146-29	24307-24309	is	_	_	_	_	
146-30	24310-24319	optimized	_	_	_	_	
146-31	24320-24322	by	_	_	_	_	
146-32	24323-24328	using	_	_	_	_	
146-33	24329-24333	half	_	_	_	_	
146-34	24334-24337	the	_	_	_	_	
146-35	24338-24344	system	_	_	_	_	
146-36	24345-24351	memory	_	_	_	_	
146-37	24352-24354	as	_	_	_	_	
146-38	24355-24361	backup	_	_	_	_	
146-39	24361-24362	.	_	_	_	_	

#Text=Note:      For the optimal balance of performance and system stability it is recommended to use “Platform Default” (ADDDC Sparing enabled) for the Memory RAS configuration.
147-1	24363-24367	Note	_	_	_	_	
147-2	24367-24368	:	_	_	_	_	
147-3	24368-24373	     	_	_	_	_	
147-4	24374-24377	For	_	_	_	_	
147-5	24378-24381	the	_	_	_	_	
147-6	24382-24389	optimal	_	_	_	_	
147-7	24390-24397	balance	_	_	_	_	
147-8	24398-24400	of	_	_	_	_	
147-9	24401-24412	performance	_	_	_	_	
147-10	24413-24416	and	_	_	_	_	
147-11	24417-24423	system	_	_	_	_	
147-12	24424-24433	stability	_	_	_	_	
147-13	24434-24436	it	_	_	_	_	
147-14	24437-24439	is	_	_	_	_	
147-15	24440-24451	recommended	_	_	_	_	
147-16	24452-24454	to	_	_	_	_	
147-17	24455-24458	use	_	_	_	_	
147-18	24459-24460	“	_	_	_	_	
147-19	24460-24468	Platform	_	_	_	_	
147-20	24469-24476	Default	_	_	_	_	
147-21	24476-24477	”	_	_	_	_	
147-22	24478-24479	(	_	_	_	_	
147-23	24479-24484	ADDDC	_	_	_	_	
147-24	24485-24492	Sparing	_	_	_	_	
147-25	24493-24500	enabled	_	_	_	_	
147-26	24500-24501	)	_	_	_	_	
147-27	24502-24505	for	_	_	_	_	
147-28	24506-24509	the	_	_	_	_	
147-29	24510-24516	Memory	_	_	_	_	
147-30	24517-24520	RAS	_	_	_	_	
147-31	24521-24534	configuration	_	_	_	_	
147-32	24534-24535	.	_	_	_	_	

#Text=ADDDC Sparing will incur a small performance penalty.
148-1	24536-24541	ADDDC	_	_	_	_	
148-2	24542-24549	Sparing	_	_	_	_	
148-3	24550-24554	will	_	_	_	_	
148-4	24555-24560	incur	_	_	_	_	
148-5	24561-24562	a	_	_	_	_	
148-6	24563-24568	small	_	_	_	_	
148-7	24569-24580	performance	_	_	_	_	
148-8	24581-24588	penalty	_	_	_	_	
148-9	24588-24589	.	_	_	_	_	

#Text=If maximum performance is desired independently of system stability the “Maximum-Performance” Memory RAS setting can be used.
149-1	24590-24592	If	_	_	_	_	
149-2	24593-24600	maximum	_	_	_	_	
149-3	24601-24612	performance	_	_	_	_	
149-4	24613-24615	is	_	_	_	_	
149-5	24616-24623	desired	_	_	_	_	
149-6	24624-24637	independently	_	_	_	_	
149-7	24638-24640	of	_	_	_	_	
149-8	24641-24647	system	_	_	_	_	
149-9	24648-24657	stability	_	_	_	_	
149-10	24658-24661	the	_	_	_	_	
149-11	24662-24663	“	_	_	_	_	
149-12	24663-24682	Maximum-Performance	_	_	_	_	
149-13	24682-24683	”	_	_	_	_	
149-14	24684-24690	Memory	_	_	_	_	
149-15	24691-24694	RAS	_	_	_	_	
149-16	24695-24702	setting	_	_	_	_	
149-17	24703-24706	can	_	_	_	_	
149-18	24707-24709	be	_	_	_	_	
149-19	24710-24714	used	_	_	_	_	
149-20	24714-24715	.	_	_	_	_	

#Text=Non-uniform memory access
#Text=Most modern operating systems, particularly virtualization hypervisors, support NUMA because in the latest server designs, a processor is attached to a memory controller: therefore, half the memory belongs to one processor, and half belongs to the other processor.
150-1	24716-24727	Non-uniform	_	_	_	_	
150-2	24728-24734	memory	_	_	_	_	
150-3	24735-24741	access	_	_	_	_	
150-4	24742-24746	Most	_	_	_	_	
150-5	24747-24753	modern	_	_	_	_	
150-6	24754-24763	operating	_	_	_	_	
150-7	24764-24771	systems	_	_	_	_	
150-8	24771-24772	,	_	_	_	_	
150-9	24773-24785	particularly	_	_	_	_	
150-10	24786-24800	virtualization	_	_	_	_	
150-11	24801-24812	hypervisors	_	_	_	_	
150-12	24812-24813	,	_	_	_	_	
150-13	24814-24821	support	_	_	_	_	
150-14	24822-24826	NUMA	_	_	_	_	
150-15	24827-24834	because	_	_	_	_	
150-16	24835-24837	in	_	_	_	_	
150-17	24838-24841	the	_	_	_	_	
150-18	24842-24848	latest	_	_	_	_	
150-19	24849-24855	server	_	_	_	_	
150-20	24856-24863	designs	_	_	_	_	
150-21	24863-24864	,	_	_	_	_	
150-22	24865-24866	a	_	_	_	_	
150-23	24867-24876	processor	_	_	_	_	
150-24	24877-24879	is	_	_	_	_	
150-25	24880-24888	attached	_	_	_	_	
150-26	24889-24891	to	_	_	_	_	
150-27	24892-24893	a	_	_	_	_	
150-28	24894-24900	memory	_	_	_	_	
150-29	24901-24911	controller	_	_	_	_	
150-30	24911-24912	:	_	_	_	_	
150-31	24913-24922	therefore	_	_	_	_	
150-32	24922-24923	,	_	_	_	_	
150-33	24924-24928	half	_	_	_	_	
150-34	24929-24932	the	_	_	_	_	
150-35	24933-24939	memory	_	_	_	_	
150-36	24940-24947	belongs	_	_	_	_	
150-37	24948-24950	to	_	_	_	_	
150-38	24951-24954	one	_	_	_	_	
150-39	24955-24964	processor	_	_	_	_	
150-40	24964-24965	,	_	_	_	_	
150-41	24966-24969	and	_	_	_	_	
150-42	24970-24974	half	_	_	_	_	
150-43	24975-24982	belongs	_	_	_	_	
150-44	24983-24985	to	_	_	_	_	
150-45	24986-24989	the	_	_	_	_	
150-46	24990-24995	other	_	_	_	_	
150-47	24996-25005	processor	_	_	_	_	
150-48	25005-25006	.	_	_	_	_	

#Text=If a core needs to access memory that resides in another processor, a longer latency period is needed to access that part of memory.
151-1	25007-25009	If	_	_	_	_	
151-2	25010-25011	a	_	_	_	_	
151-3	25012-25016	core	_	_	_	_	
151-4	25017-25022	needs	_	_	_	_	
151-5	25023-25025	to	_	_	_	_	
151-6	25026-25032	access	_	_	_	_	
151-7	25033-25039	memory	_	_	_	_	
151-8	25040-25044	that	_	_	_	_	
151-9	25045-25052	resides	_	_	_	_	
151-10	25053-25055	in	_	_	_	_	
151-11	25056-25063	another	_	_	_	_	
151-12	25064-25073	processor	_	_	_	_	
151-13	25073-25074	,	_	_	_	_	
151-14	25075-25076	a	_	_	_	_	
151-15	25077-25083	longer	_	_	_	_	
151-16	25084-25091	latency	_	_	_	_	
151-17	25092-25098	period	_	_	_	_	
151-18	25099-25101	is	_	_	_	_	
151-19	25102-25108	needed	_	_	_	_	
151-20	25109-25111	to	_	_	_	_	
151-21	25112-25118	access	_	_	_	_	
151-22	25119-25123	that	_	_	_	_	
151-23	25124-25128	part	_	_	_	_	
151-24	25129-25131	of	_	_	_	_	
151-25	25132-25138	memory	_	_	_	_	
151-26	25138-25139	.	_	_	_	_	

#Text=Operating systems and hypervisors recognize this architecture and are designed to reduce such trips.
152-1	25140-25149	Operating	_	_	_	_	
152-2	25150-25157	systems	_	_	_	_	
152-3	25158-25161	and	_	_	_	_	
152-4	25162-25173	hypervisors	_	_	_	_	
152-5	25174-25183	recognize	_	_	_	_	
152-6	25184-25188	this	_	_	_	_	
152-7	25189-25201	architecture	_	_	_	_	
152-8	25202-25205	and	_	_	_	_	
152-9	25206-25209	are	_	_	_	_	
152-10	25210-25218	designed	_	_	_	_	
152-11	25219-25221	to	_	_	_	_	
152-12	25222-25228	reduce	_	_	_	_	
152-13	25229-25233	such	_	_	_	_	
152-14	25234-25239	trips	_	_	_	_	
152-15	25239-25240	.	_	_	_	_	

#Text=For hypervisors such as those from VMware and for modern applications designed for NUMA, keep this option enabled.
153-1	25241-25244	For	_	_	_	_	
153-2	25245-25256	hypervisors	_	_	_	_	
153-3	25257-25261	such	_	_	_	_	
153-4	25262-25264	as	_	_	_	_	
153-5	25265-25270	those	_	_	_	_	
153-6	25271-25275	from	_	_	_	_	
153-7	25276-25282	VMware	_	_	_	_	
153-8	25283-25286	and	_	_	_	_	
153-9	25287-25290	for	_	_	_	_	
153-10	25291-25297	modern	_	_	_	_	
153-11	25298-25310	applications	_	_	_	_	
153-12	25311-25319	designed	_	_	_	_	
153-13	25320-25323	for	_	_	_	_	
153-14	25324-25328	NUMA	_	_	_	_	
153-15	25328-25329	,	_	_	_	_	
153-16	25330-25334	keep	_	_	_	_	
153-17	25335-25339	this	_	_	_	_	
153-18	25340-25346	option	_	_	_	_	
153-19	25347-25354	enabled	_	_	_	_	
153-20	25354-25355	.	_	_	_	_	

#Text=Integrated memory controller interleaving
#Text=The Integrated Memory Controller (IMC) BIOS option controls the interleaving between the integrated memory controllers.
154-1	25356-25366	Integrated	_	_	_	_	
154-2	25367-25373	memory	_	_	_	_	
154-3	25374-25384	controller	_	_	_	_	
154-4	25385-25397	interleaving	_	_	_	_	
154-5	25398-25401	The	_	_	_	_	
154-6	25402-25412	Integrated	_	_	_	_	
154-7	25413-25419	Memory	_	_	_	_	
154-8	25420-25430	Controller	_	_	_	_	
154-9	25431-25432	(	_	_	_	_	
154-10	25432-25435	IMC	_	_	_	_	
154-11	25435-25436	)	_	_	_	_	
154-12	25437-25441	BIOS	_	_	_	_	
154-13	25442-25448	option	_	_	_	_	
154-14	25449-25457	controls	_	_	_	_	
154-15	25458-25461	the	_	_	_	_	
154-16	25462-25474	interleaving	_	_	_	_	
154-17	25475-25482	between	_	_	_	_	
154-18	25483-25486	the	_	_	_	_	
154-19	25487-25497	integrated	_	_	_	_	
154-20	25498-25504	memory	_	_	_	_	
154-21	25505-25516	controllers	_	_	_	_	
154-22	25516-25517	.	_	_	_	_	

#Text=There are two integrated memory controllers per CPU socket in a x86 server running Intel Xeon scalable processors.
155-1	25518-25523	There	_	_	_	_	
155-2	25524-25527	are	_	_	_	_	
155-3	25528-25531	two	_	_	_	_	
155-4	25532-25542	integrated	_	_	_	_	
155-5	25543-25549	memory	_	_	_	_	
155-6	25550-25561	controllers	_	_	_	_	
155-7	25562-25565	per	_	_	_	_	
155-8	25566-25569	CPU	_	_	_	_	
155-9	25570-25576	socket	_	_	_	_	
155-10	25577-25579	in	_	_	_	_	
155-11	25580-25581	a	_	_	_	_	
155-12	25582-25585	x86	_	_	_	_	
155-13	25586-25592	server	_	_	_	_	
155-14	25593-25600	running	_	_	_	_	
155-15	25601-25606	Intel	_	_	_	_	
155-16	25607-25611	Xeon	_	_	_	_	
155-17	25612-25620	scalable	_	_	_	_	
155-18	25621-25631	processors	_	_	_	_	
155-19	25631-25632	.	_	_	_	_	

#Text=If integrated memory controller Interleaving is set to 2-way, addresses will be interleaved between the two-integrated memory controller.
156-1	25633-25635	If	_	_	_	_	
156-2	25636-25646	integrated	_	_	_	_	
156-3	25647-25653	memory	_	_	_	_	
156-4	25654-25664	controller	_	_	_	_	
156-5	25665-25677	Interleaving	_	_	_	_	
156-6	25678-25680	is	_	_	_	_	
156-7	25681-25684	set	_	_	_	_	
156-8	25685-25687	to	_	_	_	_	
156-9	25688-25689	2	_	_	_	_	
156-10	25689-25690	-	_	_	_	_	
156-11	25690-25693	way	_	_	_	_	
156-12	25693-25694	,	_	_	_	_	
156-13	25695-25704	addresses	_	_	_	_	
156-14	25705-25709	will	_	_	_	_	
156-15	25710-25712	be	_	_	_	_	
156-16	25713-25724	interleaved	_	_	_	_	
156-17	25725-25732	between	_	_	_	_	
156-18	25733-25736	the	_	_	_	_	
156-19	25737-25751	two-integrated	_	_	_	_	
156-20	25752-25758	memory	_	_	_	_	
156-21	25759-25769	controller	_	_	_	_	
156-22	25769-25770	.	_	_	_	_	

#Text=If integrated memory controller interleaving is set to 1-way, there will be no interleaving.
157-1	25771-25773	If	_	_	_	_	
157-2	25774-25784	integrated	_	_	_	_	
157-3	25785-25791	memory	_	_	_	_	
157-4	25792-25802	controller	_	_	_	_	
157-5	25803-25815	interleaving	_	_	_	_	
157-6	25816-25818	is	_	_	_	_	
157-7	25819-25822	set	_	_	_	_	
157-8	25823-25825	to	_	_	_	_	
157-9	25826-25827	1	_	_	_	_	
157-10	25827-25828	-	_	_	_	_	
157-11	25828-25831	way	_	_	_	_	
157-12	25831-25832	,	_	_	_	_	
157-13	25833-25838	there	_	_	_	_	
157-14	25839-25843	will	_	_	_	_	
157-15	25844-25846	be	_	_	_	_	
157-16	25847-25849	no	_	_	_	_	
157-17	25850-25862	interleaving	_	_	_	_	
157-18	25862-25863	.	_	_	_	_	

#Text=Note:      If Sub-NUMA Clustering (SNC) is disabled, integrated memory controller interleaving should be set to Auto.
158-1	25864-25868	Note	_	_	_	_	
158-2	25868-25869	:	_	_	_	_	
158-3	25869-25874	     	_	_	_	_	
158-4	25875-25877	If	_	_	_	_	
158-5	25878-25886	Sub-NUMA	_	_	_	_	
158-6	25887-25897	Clustering	_	_	_	_	
158-7	25898-25899	(	_	_	_	_	
158-8	25899-25902	SNC	_	_	_	_	
158-9	25902-25903	)	_	_	_	_	
158-10	25904-25906	is	_	_	_	_	
158-11	25907-25915	disabled	_	_	_	_	
158-12	25915-25916	,	_	_	_	_	
158-13	25917-25927	integrated	_	_	_	_	
158-14	25928-25934	memory	_	_	_	_	
158-15	25935-25945	controller	_	_	_	_	
158-16	25946-25958	interleaving	_	_	_	_	
158-17	25959-25965	should	_	_	_	_	
158-18	25966-25968	be	_	_	_	_	
158-19	25969-25972	set	_	_	_	_	
158-20	25973-25975	to	_	_	_	_	
158-21	25976-25980	Auto	_	_	_	_	
158-22	25980-25981	.	_	_	_	_	

#Text=If SNC is enabled, integrated memory controller interleaving should be set to 1-way.
159-1	25982-25984	If	_	_	_	_	
159-2	25985-25988	SNC	_	_	_	_	
159-3	25989-25991	is	_	_	_	_	
159-4	25992-25999	enabled	_	_	_	_	
159-5	25999-26000	,	_	_	_	_	
159-6	26001-26011	integrated	_	_	_	_	
159-7	26012-26018	memory	_	_	_	_	
159-8	26019-26029	controller	_	_	_	_	
159-9	26030-26042	interleaving	_	_	_	_	
159-10	26043-26049	should	_	_	_	_	
159-11	26050-26052	be	_	_	_	_	
159-12	26053-26056	set	_	_	_	_	
159-13	26057-26059	to	_	_	_	_	
159-14	26060-26061	1	_	_	_	_	
159-15	26061-26062	-	_	_	_	_	
159-16	26062-26065	way	_	_	_	_	
159-17	26065-26066	.	_	_	_	_	

#Text=The following settings are available:
#Text=●     1-way Interleave: There is no interleaving.
#Text=●     2-way Interleave: Addresses are interleaved between the two integrated memory controllers.
#Text=●     Auto: The CPU determines the integrated memory controller interleaving mode.
160-1	26067-26070	The	_	_	_	_	
160-2	26071-26080	following	_	_	_	_	
160-3	26081-26089	settings	_	_	_	_	
160-4	26090-26093	are	_	_	_	_	
160-5	26094-26103	available	_	_	_	_	
160-6	26103-26104	:	_	_	_	_	
160-7	26105-26106	●	_	_	_	_	
160-8	26106-26110	    	_	_	_	_	
160-9	26111-26112	1	_	_	_	_	
160-10	26112-26113	-	_	_	_	_	
160-11	26113-26116	way	_	_	_	_	
160-12	26117-26127	Interleave	_	_	_	_	
160-13	26127-26128	:	_	_	_	_	
160-14	26129-26134	There	_	_	_	_	
160-15	26135-26137	is	_	_	_	_	
160-16	26138-26140	no	_	_	_	_	
160-17	26141-26153	interleaving	_	_	_	_	
160-18	26153-26154	.	_	_	_	_	
160-19	26155-26156	●	_	_	_	_	
160-20	26156-26160	    	_	_	_	_	
160-21	26161-26162	2	_	_	_	_	
160-22	26162-26163	-	_	_	_	_	
160-23	26163-26166	way	_	_	_	_	
160-24	26167-26177	Interleave	_	_	_	_	
160-25	26177-26178	:	_	_	_	_	
160-26	26179-26188	Addresses	_	_	_	_	
160-27	26189-26192	are	_	_	_	_	
160-28	26193-26204	interleaved	_	_	_	_	
160-29	26205-26212	between	_	_	_	_	
160-30	26213-26216	the	_	_	_	_	
160-31	26217-26220	two	_	_	_	_	
160-32	26221-26231	integrated	_	_	_	_	
160-33	26232-26238	memory	_	_	_	_	
160-34	26239-26250	controllers	_	_	_	_	
160-35	26250-26251	.	_	_	_	_	
160-36	26252-26253	●	_	_	_	_	
160-37	26253-26257	    	_	_	_	_	
160-38	26258-26262	Auto	_	_	_	_	
160-39	26262-26263	:	_	_	_	_	
160-40	26264-26267	The	_	_	_	_	
160-41	26268-26271	CPU	_	_	_	_	
160-42	26272-26282	determines	_	_	_	_	
160-43	26283-26286	the	_	_	_	_	
160-44	26287-26297	integrated	_	_	_	_	
160-45	26298-26304	memory	_	_	_	_	
160-46	26305-26315	controller	_	_	_	_	
160-47	26316-26328	interleaving	_	_	_	_	
160-48	26329-26333	mode	_	_	_	_	
160-49	26333-26334	.	_	_	_	_	

#Text=Sub-NUMA clustering
#Text=The SNC BIOS option provides localization benefits similar to the Cluster-on-Die (CoD) option, without some of the disadvantages of CoD.
161-1	26335-26343	Sub-NUMA	_	_	_	_	
161-2	26344-26354	clustering	_	_	_	_	
161-3	26355-26358	The	_	_	_	_	
161-4	26359-26362	SNC	_	_	_	_	
161-5	26363-26367	BIOS	_	_	_	_	
161-6	26368-26374	option	_	_	_	_	
161-7	26375-26383	provides	_	_	_	_	
161-8	26384-26396	localization	_	_	_	_	
161-9	26397-26405	benefits	_	_	_	_	
161-10	26406-26413	similar	_	_	_	_	
161-11	26414-26416	to	_	_	_	_	
161-12	26417-26420	the	_	_	_	_	
161-13	26421-26435	Cluster-on-Die	_	_	_	_	
161-14	26436-26437	(	_	_	_	_	
161-15	26437-26440	CoD	_	_	_	_	
161-16	26440-26441	)	_	_	_	_	
161-17	26442-26448	option	_	_	_	_	
161-18	26448-26449	,	_	_	_	_	
161-19	26450-26457	without	_	_	_	_	
161-20	26458-26462	some	_	_	_	_	
161-21	26463-26465	of	_	_	_	_	
161-22	26466-26469	the	_	_	_	_	
161-23	26470-26483	disadvantages	_	_	_	_	
161-24	26484-26486	of	_	_	_	_	
161-25	26487-26490	CoD	_	_	_	_	
161-26	26490-26491	.	_	_	_	_	

#Text=SNC breaks the LLC into two disjointed clusters based on address range, with each cluster bound to a subset of the memory controllers in the system.
162-1	26492-26495	SNC	_	_	_	_	
162-2	26496-26502	breaks	_	_	_	_	
162-3	26503-26506	the	_	_	_	_	
162-4	26507-26510	LLC	_	_	_	_	
162-5	26511-26515	into	_	_	_	_	
162-6	26516-26519	two	_	_	_	_	
162-7	26520-26530	disjointed	_	_	_	_	
162-8	26531-26539	clusters	_	_	_	_	
162-9	26540-26545	based	_	_	_	_	
162-10	26546-26548	on	_	_	_	_	
162-11	26549-26556	address	_	_	_	_	
162-12	26557-26562	range	_	_	_	_	
162-13	26562-26563	,	_	_	_	_	
162-14	26564-26568	with	_	_	_	_	
162-15	26569-26573	each	_	_	_	_	
162-16	26574-26581	cluster	_	_	_	_	
162-17	26582-26587	bound	_	_	_	_	
162-18	26588-26590	to	_	_	_	_	
162-19	26591-26592	a	_	_	_	_	
162-20	26593-26599	subset	_	_	_	_	
162-21	26600-26602	of	_	_	_	_	
162-22	26603-26606	the	_	_	_	_	
162-23	26607-26613	memory	_	_	_	_	
162-24	26614-26625	controllers	_	_	_	_	
162-25	26626-26628	in	_	_	_	_	
162-26	26629-26632	the	_	_	_	_	
162-27	26633-26639	system	_	_	_	_	
162-28	26639-26640	.	_	_	_	_	

#Text=SNC improves average latency to the LLC and memory.
163-1	26641-26644	SNC	_	_	_	_	
163-2	26645-26653	improves	_	_	_	_	
163-3	26654-26661	average	_	_	_	_	
163-4	26662-26669	latency	_	_	_	_	
163-5	26670-26672	to	_	_	_	_	
163-6	26673-26676	the	_	_	_	_	
163-7	26677-26680	LLC	_	_	_	_	
163-8	26681-26684	and	_	_	_	_	
163-9	26685-26691	memory	_	_	_	_	
163-10	26691-26692	.	_	_	_	_	

#Text=SNC is a replacement for the CoD feature found in previous processor families.
164-1	26693-26696	SNC	_	_	_	_	
164-2	26697-26699	is	_	_	_	_	
164-3	26700-26701	a	_	_	_	_	
164-4	26702-26713	replacement	_	_	_	_	
164-5	26714-26717	for	_	_	_	_	
164-6	26718-26721	the	_	_	_	_	
164-7	26722-26725	CoD	_	_	_	_	
164-8	26726-26733	feature	_	_	_	_	
164-9	26734-26739	found	_	_	_	_	
164-10	26740-26742	in	_	_	_	_	
164-11	26743-26751	previous	_	_	_	_	
164-12	26752-26761	processor	_	_	_	_	
164-13	26762-26770	families	_	_	_	_	
164-14	26770-26771	.	_	_	_	_	

#Text=For a multisocket system, all SNC clusters are mapped to unique NUMA domains.
165-1	26772-26775	For	_	_	_	_	
165-2	26776-26777	a	_	_	_	_	
165-3	26778-26789	multisocket	_	_	_	_	
165-4	26790-26796	system	_	_	_	_	
165-5	26796-26797	,	_	_	_	_	
165-6	26798-26801	all	_	_	_	_	
165-7	26802-26805	SNC	_	_	_	_	
165-8	26806-26814	clusters	_	_	_	_	
165-9	26815-26818	are	_	_	_	_	
165-10	26819-26825	mapped	_	_	_	_	
165-11	26826-26828	to	_	_	_	_	
165-12	26829-26835	unique	_	_	_	_	
165-13	26836-26840	NUMA	_	_	_	_	
165-14	26841-26848	domains	_	_	_	_	
165-15	26848-26849	.	_	_	_	_	

#Text=Integrated memory controller interleaving must be set to the correct value to correspond with the SNC setting.
166-1	26850-26860	Integrated	_	_	_	_	
166-2	26861-26867	memory	_	_	_	_	
166-3	26868-26878	controller	_	_	_	_	
166-4	26879-26891	interleaving	_	_	_	_	
166-5	26892-26896	must	_	_	_	_	
166-6	26897-26899	be	_	_	_	_	
166-7	26900-26903	set	_	_	_	_	
166-8	26904-26906	to	_	_	_	_	
166-9	26907-26910	the	_	_	_	_	
166-10	26911-26918	correct	_	_	_	_	
166-11	26919-26924	value	_	_	_	_	
166-12	26925-26927	to	_	_	_	_	
166-13	26928-26938	correspond	_	_	_	_	
166-14	26939-26943	with	_	_	_	_	
166-15	26944-26947	the	_	_	_	_	
166-16	26948-26951	SNC	_	_	_	_	
166-17	26952-26959	setting	_	_	_	_	
166-18	26959-26960	.	_	_	_	_	

#Text=The setting for this BIOS option can be one of the following:
#Text=●     Disabled: The LLC is treated as one cluster when this option is disabled.
#Text=●     Enabled: The LLC capacity is used more efficiently and latency is reduced as a result of the core and integrated memory controller proximity.
167-1	26961-26964	The	_	_	_	_	
167-2	26965-26972	setting	_	_	_	_	
167-3	26973-26976	for	_	_	_	_	
167-4	26977-26981	this	_	_	_	_	
167-5	26982-26986	BIOS	_	_	_	_	
167-6	26987-26993	option	_	_	_	_	
167-7	26994-26997	can	_	_	_	_	
167-8	26998-27000	be	_	_	_	_	
167-9	27001-27004	one	_	_	_	_	
167-10	27005-27007	of	_	_	_	_	
167-11	27008-27011	the	_	_	_	_	
167-12	27012-27021	following	_	_	_	_	
167-13	27021-27022	:	_	_	_	_	
167-14	27023-27024	●	_	_	_	_	
167-15	27024-27028	    	_	_	_	_	
167-16	27029-27037	Disabled	_	_	_	_	
167-17	27037-27038	:	_	_	_	_	
167-18	27039-27042	The	_	_	_	_	
167-19	27043-27046	LLC	_	_	_	_	
167-20	27047-27049	is	_	_	_	_	
167-21	27050-27057	treated	_	_	_	_	
167-22	27058-27060	as	_	_	_	_	
167-23	27061-27064	one	_	_	_	_	
167-24	27065-27072	cluster	_	_	_	_	
167-25	27073-27077	when	_	_	_	_	
167-26	27078-27082	this	_	_	_	_	
167-27	27083-27089	option	_	_	_	_	
167-28	27090-27092	is	_	_	_	_	
167-29	27093-27101	disabled	_	_	_	_	
167-30	27101-27102	.	_	_	_	_	
167-31	27103-27104	●	_	_	_	_	
167-32	27104-27108	    	_	_	_	_	
167-33	27109-27116	Enabled	_	_	_	_	
167-34	27116-27117	:	_	_	_	_	
167-35	27118-27121	The	_	_	_	_	
167-36	27122-27125	LLC	_	_	_	_	
167-37	27126-27134	capacity	_	_	_	_	
167-38	27135-27137	is	_	_	_	_	
167-39	27138-27142	used	_	_	_	_	
167-40	27143-27147	more	_	_	_	_	
167-41	27148-27159	efficiently	_	_	_	_	
167-42	27160-27163	and	_	_	_	_	
167-43	27164-27171	latency	_	_	_	_	
167-44	27172-27174	is	_	_	_	_	
167-45	27175-27182	reduced	_	_	_	_	
167-46	27183-27185	as	_	_	_	_	
167-47	27186-27187	a	_	_	_	_	
167-48	27188-27194	result	_	_	_	_	
167-49	27195-27197	of	_	_	_	_	
167-50	27198-27201	the	_	_	_	_	
167-51	27202-27206	core	_	_	_	_	
167-52	27207-27210	and	_	_	_	_	
167-53	27211-27221	integrated	_	_	_	_	
167-54	27222-27228	memory	_	_	_	_	
167-55	27229-27239	controller	_	_	_	_	
167-56	27240-27249	proximity	_	_	_	_	
167-57	27249-27250	.	_	_	_	_	

#Text=This setting may improve performance on NUMA-aware operating systems.
168-1	27251-27255	This	_	_	_	_	
168-2	27256-27263	setting	_	_	_	_	
168-3	27264-27267	may	_	_	_	_	
168-4	27268-27275	improve	_	_	_	_	
168-5	27276-27287	performance	_	_	_	_	
168-6	27288-27290	on	_	_	_	_	
168-7	27291-27301	NUMA-aware	_	_	_	_	
168-8	27302-27311	operating	_	_	_	_	
168-9	27312-27319	systems	_	_	_	_	
168-10	27319-27320	.	_	_	_	_	

#Text=Note:      If SNC is disabled, integrated memory controller interleaving should be set to Auto.
169-1	27321-27325	Note	_	_	_	_	
169-2	27325-27326	:	_	_	_	_	
169-3	27326-27331	     	_	_	_	_	
169-4	27332-27334	If	_	_	_	_	
169-5	27335-27338	SNC	_	_	_	_	
169-6	27339-27341	is	_	_	_	_	
169-7	27342-27350	disabled	_	_	_	_	
169-8	27350-27351	,	_	_	_	_	
169-9	27352-27362	integrated	_	_	_	_	
169-10	27363-27369	memory	_	_	_	_	
169-11	27370-27380	controller	_	_	_	_	
169-12	27381-27393	interleaving	_	_	_	_	
169-13	27394-27400	should	_	_	_	_	
169-14	27401-27403	be	_	_	_	_	
169-15	27404-27407	set	_	_	_	_	
169-16	27408-27410	to	_	_	_	_	
169-17	27411-27415	Auto	_	_	_	_	
169-18	27415-27416	.	_	_	_	_	

#Text=If SNC is enabled, integrated memory controller interleaving should be set to 1-way.
170-1	27417-27419	If	_	_	_	_	
170-2	27420-27423	SNC	_	_	_	_	
170-3	27424-27426	is	_	_	_	_	
170-4	27427-27434	enabled	_	_	_	_	
170-5	27434-27435	,	_	_	_	_	
170-6	27436-27446	integrated	_	_	_	_	
170-7	27447-27453	memory	_	_	_	_	
170-8	27454-27464	controller	_	_	_	_	
170-9	27465-27477	interleaving	_	_	_	_	
170-10	27478-27484	should	_	_	_	_	
170-11	27485-27487	be	_	_	_	_	
170-12	27488-27491	set	_	_	_	_	
170-13	27492-27494	to	_	_	_	_	
170-14	27495-27496	1	_	_	_	_	
170-15	27496-27497	-	_	_	_	_	
170-16	27497-27500	way	_	_	_	_	
170-17	27500-27501	.	_	_	_	_	

#Text=Xtended Partition Table prefetch
#Text=The XPT prefetcher exists on top of other prefetchers that that can prefetch data in the core DCU, MLC, and LLC.
171-1	27502-27509	Xtended	_	_	_	_	
171-2	27510-27519	Partition	_	_	_	_	
171-3	27520-27525	Table	_	_	_	_	
171-4	27526-27534	prefetch	_	_	_	_	
171-5	27535-27538	The	_	_	_	_	
171-6	27539-27542	XPT	_	_	_	_	
171-7	27543-27553	prefetcher	_	_	_	_	
171-8	27554-27560	exists	_	_	_	_	
171-9	27561-27563	on	_	_	_	_	
171-10	27564-27567	top	_	_	_	_	
171-11	27568-27570	of	_	_	_	_	
171-12	27571-27576	other	_	_	_	_	
171-13	27577-27588	prefetchers	_	_	_	_	
171-14	27589-27593	that	_	_	_	_	
171-15	27594-27598	that	_	_	_	_	
171-16	27599-27602	can	_	_	_	_	
171-17	27603-27611	prefetch	_	_	_	_	
171-18	27612-27616	data	_	_	_	_	
171-19	27617-27619	in	_	_	_	_	
171-20	27620-27623	the	_	_	_	_	
171-21	27624-27628	core	_	_	_	_	
171-22	27629-27632	DCU	_	_	_	_	
171-23	27632-27633	,	_	_	_	_	
171-24	27634-27637	MLC	_	_	_	_	
171-25	27637-27638	,	_	_	_	_	
171-26	27639-27642	and	_	_	_	_	
171-27	27643-27646	LLC	_	_	_	_	
171-28	27646-27647	.	_	_	_	_	

#Text=The XPT prefetcher will issue a speculative DRAM read request in parallel to an LLC lookup.
172-1	27648-27651	The	_	_	_	_	
172-2	27652-27655	XPT	_	_	_	_	
172-3	27656-27666	prefetcher	_	_	_	_	
172-4	27667-27671	will	_	_	_	_	
172-5	27672-27677	issue	_	_	_	_	
172-6	27678-27679	a	_	_	_	_	
172-7	27680-27691	speculative	_	_	_	_	
172-8	27692-27696	DRAM	_	_	_	_	
172-9	27697-27701	read	_	_	_	_	
172-10	27702-27709	request	_	_	_	_	
172-11	27710-27712	in	_	_	_	_	
172-12	27713-27721	parallel	_	_	_	_	
172-13	27722-27724	to	_	_	_	_	
172-14	27725-27727	an	_	_	_	_	
172-15	27728-27731	LLC	_	_	_	_	
172-16	27732-27738	lookup	_	_	_	_	
172-17	27738-27739	.	_	_	_	_	

#Text=This prefetch bypasses the LLC, saving latency.
173-1	27740-27744	This	_	_	_	_	
173-2	27745-27753	prefetch	_	_	_	_	
173-3	27754-27762	bypasses	_	_	_	_	
173-4	27763-27766	the	_	_	_	_	
173-5	27767-27770	LLC	_	_	_	_	
173-6	27770-27771	,	_	_	_	_	
173-7	27772-27778	saving	_	_	_	_	
173-8	27779-27786	latency	_	_	_	_	
173-9	27786-27787	.	_	_	_	_	

#Text=You can specify whether the processor uses the XPT prefetch mechanism to fetch the date into the XPT.
174-1	27788-27791	You	_	_	_	_	
174-2	27792-27795	can	_	_	_	_	
174-3	27796-27803	specify	_	_	_	_	
174-4	27804-27811	whether	_	_	_	_	
174-5	27812-27815	the	_	_	_	_	
174-6	27816-27825	processor	_	_	_	_	
174-7	27826-27830	uses	_	_	_	_	
174-8	27831-27834	the	_	_	_	_	
174-9	27835-27838	XPT	_	_	_	_	
174-10	27839-27847	prefetch	_	_	_	_	
174-11	27848-27857	mechanism	_	_	_	_	
174-12	27858-27860	to	_	_	_	_	
174-13	27861-27866	fetch	_	_	_	_	
174-14	27867-27870	the	_	_	_	_	
174-15	27871-27875	date	_	_	_	_	
174-16	27876-27880	into	_	_	_	_	
174-17	27881-27884	the	_	_	_	_	
174-18	27885-27888	XPT	_	_	_	_	
174-19	27888-27889	.	_	_	_	_	

#Text=The setting can be one of the following:
#Text=●     Disabled: The processor does not preload any cache data.
#Text=●     Enabled: The XPT prefetcher preloads the Layer 1 cache with the data it determines to be the most relevant.
175-1	27890-27893	The	_	_	_	_	
175-2	27894-27901	setting	_	_	_	_	
175-3	27902-27905	can	_	_	_	_	
175-4	27906-27908	be	_	_	_	_	
175-5	27909-27912	one	_	_	_	_	
175-6	27913-27915	of	_	_	_	_	
175-7	27916-27919	the	_	_	_	_	
175-8	27920-27929	following	_	_	_	_	
175-9	27929-27930	:	_	_	_	_	
175-10	27931-27932	●	_	_	_	_	
175-11	27932-27936	    	_	_	_	_	
175-12	27937-27945	Disabled	_	_	_	_	
175-13	27945-27946	:	_	_	_	_	
175-14	27947-27950	The	_	_	_	_	
175-15	27951-27960	processor	_	_	_	_	
175-16	27961-27965	does	_	_	_	_	
175-17	27966-27969	not	_	_	_	_	
175-18	27970-27977	preload	_	_	_	_	
175-19	27978-27981	any	_	_	_	_	
175-20	27982-27987	cache	_	_	_	_	
175-21	27988-27992	data	_	_	_	_	
175-22	27992-27993	.	_	_	_	_	
175-23	27994-27995	●	_	_	_	_	
175-24	27995-27999	    	_	_	_	_	
175-25	28000-28007	Enabled	_	_	_	_	
175-26	28007-28008	:	_	_	_	_	
175-27	28009-28012	The	_	_	_	_	
175-28	28013-28016	XPT	_	_	_	_	
175-29	28017-28027	prefetcher	_	_	_	_	
175-30	28028-28036	preloads	_	_	_	_	
175-31	28037-28040	the	_	_	_	_	
175-32	28041-28046	Layer	_	_	_	_	
175-33	28047-28048	1	_	_	_	_	
175-34	28049-28054	cache	_	_	_	_	
175-35	28055-28059	with	_	_	_	_	
175-36	28060-28063	the	_	_	_	_	
175-37	28064-28068	data	_	_	_	_	
175-38	28069-28071	it	_	_	_	_	
175-39	28072-28082	determines	_	_	_	_	
175-40	28083-28085	to	_	_	_	_	
175-41	28086-28088	be	_	_	_	_	
175-42	28089-28092	the	_	_	_	_	
175-43	28093-28097	most	_	_	_	_	
175-44	28098-28106	relevant	_	_	_	_	
175-45	28106-28107	.	_	_	_	_	

#Text=Intel UltraPath Interconnect prefetch
#Text=Intel UltraPath Interconnect (UPI) prefetch is a mechanism to get the memory read started early on a Double-Data-Rate (DDR) bus.
176-1	28108-28113	Intel	_	_	_	_	
176-2	28114-28123	UltraPath	_	_	_	_	
176-3	28124-28136	Interconnect	_	_	_	_	
176-4	28137-28145	prefetch	_	_	_	_	
176-5	28146-28151	Intel	_	_	_	_	
176-6	28152-28161	UltraPath	_	_	_	_	
176-7	28162-28174	Interconnect	_	_	_	_	
176-8	28175-28176	(	_	_	_	_	
176-9	28176-28179	UPI	_	_	_	_	
176-10	28179-28180	)	_	_	_	_	
176-11	28181-28189	prefetch	_	_	_	_	
176-12	28190-28192	is	_	_	_	_	
176-13	28193-28194	a	_	_	_	_	
176-14	28195-28204	mechanism	_	_	_	_	
176-15	28205-28207	to	_	_	_	_	
176-16	28208-28211	get	_	_	_	_	
176-17	28212-28215	the	_	_	_	_	
176-18	28216-28222	memory	_	_	_	_	
176-19	28223-28227	read	_	_	_	_	
176-20	28228-28235	started	_	_	_	_	
176-21	28236-28241	early	_	_	_	_	
176-22	28242-28244	on	_	_	_	_	
176-23	28245-28246	a	_	_	_	_	
176-24	28247-28263	Double-Data-Rate	_	_	_	_	
176-25	28264-28265	(	_	_	_	_	
176-26	28265-28268	DDR	_	_	_	_	
176-27	28268-28269	)	_	_	_	_	
176-28	28270-28273	bus	_	_	_	_	
176-29	28273-28274	.	_	_	_	_	

#Text=The setting can be one of the following:
#Text=●     Disabled: The processor does not preload any cache data.
#Text=●     Enabled: The UPI prefetcher preloads the Layer 1 cache with the data it determines to be the most relevant.
177-1	28275-28278	The	_	_	_	_	
177-2	28279-28286	setting	_	_	_	_	
177-3	28287-28290	can	_	_	_	_	
177-4	28291-28293	be	_	_	_	_	
177-5	28294-28297	one	_	_	_	_	
177-6	28298-28300	of	_	_	_	_	
177-7	28301-28304	the	_	_	_	_	
177-8	28305-28314	following	_	_	_	_	
177-9	28314-28315	:	_	_	_	_	
177-10	28316-28317	●	_	_	_	_	
177-11	28317-28321	    	_	_	_	_	
177-12	28322-28330	Disabled	_	_	_	_	
177-13	28330-28331	:	_	_	_	_	
177-14	28332-28335	The	_	_	_	_	
177-15	28336-28345	processor	_	_	_	_	
177-16	28346-28350	does	_	_	_	_	
177-17	28351-28354	not	_	_	_	_	
177-18	28355-28362	preload	_	_	_	_	
177-19	28363-28366	any	_	_	_	_	
177-20	28367-28372	cache	_	_	_	_	
177-21	28373-28377	data	_	_	_	_	
177-22	28377-28378	.	_	_	_	_	
177-23	28379-28380	●	_	_	_	_	
177-24	28380-28384	    	_	_	_	_	
177-25	28385-28392	Enabled	_	_	_	_	
177-26	28392-28393	:	_	_	_	_	
177-27	28394-28397	The	_	_	_	_	
177-28	28398-28401	UPI	_	_	_	_	
177-29	28402-28412	prefetcher	_	_	_	_	
177-30	28413-28421	preloads	_	_	_	_	
177-31	28422-28425	the	_	_	_	_	
177-32	28426-28431	Layer	_	_	_	_	
177-33	28432-28433	1	_	_	_	_	
177-34	28434-28439	cache	_	_	_	_	
177-35	28440-28444	with	_	_	_	_	
177-36	28445-28448	the	_	_	_	_	
177-37	28449-28453	data	_	_	_	_	
177-38	28454-28456	it	_	_	_	_	
177-39	28457-28467	determines	_	_	_	_	
177-40	28468-28470	to	_	_	_	_	
177-41	28471-28473	be	_	_	_	_	
177-42	28474-28477	the	_	_	_	_	
177-43	28478-28482	most	_	_	_	_	
177-44	28483-28491	relevant	_	_	_	_	
177-45	28491-28492	.	_	_	_	_	

#Text=ADDDC Sparing
#Text=Adaptive Double Device Data Correction (ADDDC) is a memory RAS feature that enables dynamic mapping of failing DRAM by monitoring corrected errors and taking action before uncorrected errors can occur and cause an outage.
178-1	28493-28498	ADDDC	_	_	_	_	
178-2	28499-28506	Sparing	_	_	_	_	
178-3	28507-28515	Adaptive	_	_	_	_	
178-4	28516-28522	Double	_	_	_	_	
178-5	28523-28529	Device	_	_	_	_	
178-6	28530-28534	Data	_	_	_	_	
178-7	28535-28545	Correction	_	_	_	_	
178-8	28546-28547	(	_	_	_	_	
178-9	28547-28552	ADDDC	_	_	_	_	
178-10	28552-28553	)	_	_	_	_	
178-11	28554-28556	is	_	_	_	_	
178-12	28557-28558	a	_	_	_	_	
178-13	28559-28565	memory	_	_	_	_	
178-14	28566-28569	RAS	_	_	_	_	
178-15	28570-28577	feature	_	_	_	_	
178-16	28578-28582	that	_	_	_	_	
178-17	28583-28590	enables	_	_	_	_	
178-18	28591-28598	dynamic	_	_	_	_	
178-19	28599-28606	mapping	_	_	_	_	
178-20	28607-28609	of	_	_	_	_	
178-21	28610-28617	failing	_	_	_	_	
178-22	28618-28622	DRAM	_	_	_	_	
178-23	28623-28625	by	_	_	_	_	
178-24	28626-28636	monitoring	_	_	_	_	
178-25	28637-28646	corrected	_	_	_	_	
178-26	28647-28653	errors	_	_	_	_	
178-27	28654-28657	and	_	_	_	_	
178-28	28658-28664	taking	_	_	_	_	
178-29	28665-28671	action	_	_	_	_	
178-30	28672-28678	before	_	_	_	_	
178-31	28679-28690	uncorrected	_	_	_	_	
178-32	28691-28697	errors	_	_	_	_	
178-33	28698-28701	can	_	_	_	_	
178-34	28702-28707	occur	_	_	_	_	
178-35	28708-28711	and	_	_	_	_	
178-36	28712-28717	cause	_	_	_	_	
178-37	28718-28720	an	_	_	_	_	
178-38	28721-28727	outage	_	_	_	_	
178-39	28727-28728	.	_	_	_	_	

#Text=It is now enabled by default.
179-1	28729-28731	It	_	_	_	_	
179-2	28732-28734	is	_	_	_	_	
179-3	28735-28738	now	_	_	_	_	
179-4	28739-28746	enabled	_	_	_	_	
179-5	28747-28749	by	_	_	_	_	
179-6	28750-28757	default	_	_	_	_	
179-7	28757-28758	.	_	_	_	_	

#Text=After ADDDC sparing remaps a memory region, the system could incur marginal memory latency and bandwidth penalties on memory bandwidth intense workloads that target the impacted region.
180-1	28759-28764	After	_	_	_	_	
180-2	28765-28770	ADDDC	_	_	_	_	
180-3	28771-28778	sparing	_	_	_	_	
180-4	28779-28785	remaps	_	_	_	_	
180-5	28786-28787	a	_	_	_	_	
180-6	28788-28794	memory	_	_	_	_	
180-7	28795-28801	region	_	_	_	_	
180-8	28801-28802	,	_	_	_	_	
180-9	28803-28806	the	_	_	_	_	
180-10	28807-28813	system	_	_	_	_	
180-11	28814-28819	could	_	_	_	_	
180-12	28820-28825	incur	_	_	_	_	
180-13	28826-28834	marginal	_	_	_	_	
180-14	28835-28841	memory	_	_	_	_	
180-15	28842-28849	latency	_	_	_	_	
180-16	28850-28853	and	_	_	_	_	
180-17	28854-28863	bandwidth	_	_	_	_	
180-18	28864-28873	penalties	_	_	_	_	
180-19	28874-28876	on	_	_	_	_	
180-20	28877-28883	memory	_	_	_	_	
180-21	28884-28893	bandwidth	_	_	_	_	
180-22	28894-28901	intense	_	_	_	_	
180-23	28902-28911	workloads	_	_	_	_	
180-24	28912-28916	that	_	_	_	_	
180-25	28917-28923	target	_	_	_	_	
180-26	28924-28927	the	_	_	_	_	
180-27	28928-28936	impacted	_	_	_	_	
180-28	28937-28943	region	_	_	_	_	
180-29	28943-28944	.	_	_	_	_	

#Text=Cisco recommends scheduling proactive maintenance to replace a failed DIMM after an ADDDC RAS fault is reported.
181-1	28945-28950	Cisco	_	_	_	_	
181-2	28951-28961	recommends	_	_	_	_	
181-3	28962-28972	scheduling	_	_	_	_	
181-4	28973-28982	proactive	_	_	_	_	
181-5	28983-28994	maintenance	_	_	_	_	
181-6	28995-28997	to	_	_	_	_	
181-7	28998-29005	replace	_	_	_	_	
181-8	29006-29007	a	_	_	_	_	
181-9	29008-29014	failed	_	_	_	_	
181-10	29015-29019	DIMM	_	_	_	_	
181-11	29020-29025	after	_	_	_	_	
181-12	29026-29028	an	_	_	_	_	
181-13	29029-29034	ADDDC	_	_	_	_	
181-14	29035-29038	RAS	_	_	_	_	
181-15	29039-29044	fault	_	_	_	_	
181-16	29045-29047	is	_	_	_	_	
181-17	29048-29056	reported	_	_	_	_	
181-18	29056-29057	.	_	_	_	_	

#Text=Patrol scrub
#Text=You can specify whether the system actively searches for, and corrects, single-bit memory errors even in unused portions of the memory on the server.
182-1	29058-29064	Patrol	_	_	_	_	
182-2	29065-29070	scrub	_	_	_	_	
182-3	29071-29074	You	_	_	_	_	
182-4	29075-29078	can	_	_	_	_	
182-5	29079-29086	specify	_	_	_	_	
182-6	29087-29094	whether	_	_	_	_	
182-7	29095-29098	the	_	_	_	_	
182-8	29099-29105	system	_	_	_	_	
182-9	29106-29114	actively	_	_	_	_	
182-10	29115-29123	searches	_	_	_	_	
182-11	29124-29127	for	_	_	_	_	
182-12	29127-29128	,	_	_	_	_	
182-13	29129-29132	and	_	_	_	_	
182-14	29133-29141	corrects	_	_	_	_	
182-15	29141-29142	,	_	_	_	_	
182-16	29143-29153	single-bit	_	_	_	_	
182-17	29154-29160	memory	_	_	_	_	
182-18	29161-29167	errors	_	_	_	_	
182-19	29168-29172	even	_	_	_	_	
182-20	29173-29175	in	_	_	_	_	
182-21	29176-29182	unused	_	_	_	_	
182-22	29183-29191	portions	_	_	_	_	
182-23	29192-29194	of	_	_	_	_	
182-24	29195-29198	the	_	_	_	_	
182-25	29199-29205	memory	_	_	_	_	
182-26	29206-29208	on	_	_	_	_	
182-27	29209-29212	the	_	_	_	_	
182-28	29213-29219	server	_	_	_	_	
182-29	29219-29220	.	_	_	_	_	

#Text=The setting can be one of the following:
#Text=●     Disabled: The system checks for memory Error-Correcting Code (ECC) errors only when the CPU reads or writes a memory address.
#Text=●     Enabled: The system periodically reads and writes memory searching for ECC errors.
183-1	29221-29224	The	_	_	_	_	
183-2	29225-29232	setting	_	_	_	_	
183-3	29233-29236	can	_	_	_	_	
183-4	29237-29239	be	_	_	_	_	
183-5	29240-29243	one	_	_	_	_	
183-6	29244-29246	of	_	_	_	_	
183-7	29247-29250	the	_	_	_	_	
183-8	29251-29260	following	_	_	_	_	
183-9	29260-29261	:	_	_	_	_	
183-10	29262-29263	●	_	_	_	_	
183-11	29263-29267	    	_	_	_	_	
183-12	29268-29276	Disabled	_	_	_	_	
183-13	29276-29277	:	_	_	_	_	
183-14	29278-29281	The	_	_	_	_	
183-15	29282-29288	system	_	_	_	_	
183-16	29289-29295	checks	_	_	_	_	
183-17	29296-29299	for	_	_	_	_	
183-18	29300-29306	memory	_	_	_	_	
183-19	29307-29323	Error-Correcting	_	_	_	_	
183-20	29324-29328	Code	_	_	_	_	
183-21	29329-29330	(	_	_	_	_	
183-22	29330-29333	ECC	_	_	_	_	
183-23	29333-29334	)	_	_	_	_	
183-24	29335-29341	errors	_	_	_	_	
183-25	29342-29346	only	_	_	_	_	
183-26	29347-29351	when	_	_	_	_	
183-27	29352-29355	the	_	_	_	_	
183-28	29356-29359	CPU	_	_	_	_	
183-29	29360-29365	reads	_	_	_	_	
183-30	29366-29368	or	_	_	_	_	
183-31	29369-29375	writes	_	_	_	_	
183-32	29376-29377	a	_	_	_	_	
183-33	29378-29384	memory	_	_	_	_	
183-34	29385-29392	address	_	_	_	_	
183-35	29392-29393	.	_	_	_	_	
183-36	29394-29395	●	_	_	_	_	
183-37	29395-29399	    	_	_	_	_	
183-38	29400-29407	Enabled	_	_	_	_	
183-39	29407-29408	:	_	_	_	_	
183-40	29409-29412	The	_	_	_	_	
183-41	29413-29419	system	_	_	_	_	
183-42	29420-29432	periodically	_	_	_	_	
183-43	29433-29438	reads	_	_	_	_	
183-44	29439-29442	and	_	_	_	_	
183-45	29443-29449	writes	_	_	_	_	
183-46	29450-29456	memory	_	_	_	_	
183-47	29457-29466	searching	_	_	_	_	
183-48	29467-29470	for	_	_	_	_	
183-49	29471-29474	ECC	_	_	_	_	
183-50	29475-29481	errors	_	_	_	_	
183-51	29481-29482	.	_	_	_	_	

#Text=If any errors are found, the system attempts to fix them.
184-1	29483-29485	If	_	_	_	_	
184-2	29486-29489	any	_	_	_	_	
184-3	29490-29496	errors	_	_	_	_	
184-4	29497-29500	are	_	_	_	_	
184-5	29501-29506	found	_	_	_	_	
184-6	29506-29507	,	_	_	_	_	
184-7	29508-29511	the	_	_	_	_	
184-8	29512-29518	system	_	_	_	_	
184-9	29519-29527	attempts	_	_	_	_	
184-10	29528-29530	to	_	_	_	_	
184-11	29531-29534	fix	_	_	_	_	
184-12	29535-29539	them	_	_	_	_	
184-13	29539-29540	.	_	_	_	_	

#Text=This option may correct single-bit errors before they become multiple-bit errors, but it may adversely affect performance when the patrol-scrub process is running.
185-1	29541-29545	This	_	_	_	_	
185-2	29546-29552	option	_	_	_	_	
185-3	29553-29556	may	_	_	_	_	
185-4	29557-29564	correct	_	_	_	_	
185-5	29565-29575	single-bit	_	_	_	_	
185-6	29576-29582	errors	_	_	_	_	
185-7	29583-29589	before	_	_	_	_	
185-8	29590-29594	they	_	_	_	_	
185-9	29595-29601	become	_	_	_	_	
185-10	29602-29614	multiple-bit	_	_	_	_	
185-11	29615-29621	errors	_	_	_	_	
185-12	29621-29622	,	_	_	_	_	
185-13	29623-29626	but	_	_	_	_	
185-14	29627-29629	it	_	_	_	_	
185-15	29630-29633	may	_	_	_	_	
185-16	29634-29643	adversely	_	_	_	_	
185-17	29644-29650	affect	_	_	_	_	
185-18	29651-29662	performance	_	_	_	_	
185-19	29663-29667	when	_	_	_	_	
185-20	29668-29671	the	_	_	_	_	
185-21	29672-29684	patrol-scrub	_	_	_	_	
185-22	29685-29692	process	_	_	_	_	
185-23	29693-29695	is	_	_	_	_	
185-24	29696-29703	running	_	_	_	_	
185-25	29703-29704	.	_	_	_	_	

#Text=Demand scrub
#Text=Demand scrub occurs when the memory controller reads memory for data or instructions and the demand scrubbing logic detects a correctable error.
186-1	29705-29711	Demand	_	_	_	_	
186-2	29712-29717	scrub	_	_	_	_	
186-3	29718-29724	Demand	_	_	_	_	
186-4	29725-29730	scrub	_	_	_	_	
186-5	29731-29737	occurs	_	_	_	_	
186-6	29738-29742	when	_	_	_	_	
186-7	29743-29746	the	_	_	_	_	
186-8	29747-29753	memory	_	_	_	_	
186-9	29754-29764	controller	_	_	_	_	
186-10	29765-29770	reads	_	_	_	_	
186-11	29771-29777	memory	_	_	_	_	
186-12	29778-29781	for	_	_	_	_	
186-13	29782-29786	data	_	_	_	_	
186-14	29787-29789	or	_	_	_	_	
186-15	29790-29802	instructions	_	_	_	_	
186-16	29803-29806	and	_	_	_	_	
186-17	29807-29810	the	_	_	_	_	
186-18	29811-29817	demand	_	_	_	_	
186-19	29818-29827	scrubbing	_	_	_	_	
186-20	29828-29833	logic	_	_	_	_	
186-21	29834-29841	detects	_	_	_	_	
186-22	29842-29843	a	_	_	_	_	
186-23	29844-29855	correctable	_	_	_	_	
186-24	29856-29861	error	_	_	_	_	
186-25	29861-29862	.	_	_	_	_	

#Text=Correct data is forwarded to the memory controller and written to memory.
187-1	29863-29870	Correct	_	_	_	_	
187-2	29871-29875	data	_	_	_	_	
187-3	29876-29878	is	_	_	_	_	
187-4	29879-29888	forwarded	_	_	_	_	
187-5	29889-29891	to	_	_	_	_	
187-6	29892-29895	the	_	_	_	_	
187-7	29896-29902	memory	_	_	_	_	
187-8	29903-29913	controller	_	_	_	_	
187-9	29914-29917	and	_	_	_	_	
187-10	29918-29925	written	_	_	_	_	
187-11	29926-29928	to	_	_	_	_	
187-12	29929-29935	memory	_	_	_	_	
187-13	29935-29936	.	_	_	_	_	

#Text=With demand scrubbing disabled, the data being read into the memory controller will be corrected by the ECC logic, but no write to main memory occurs.
188-1	29937-29941	With	_	_	_	_	
188-2	29942-29948	demand	_	_	_	_	
188-3	29949-29958	scrubbing	_	_	_	_	
188-4	29959-29967	disabled	_	_	_	_	
188-5	29967-29968	,	_	_	_	_	
188-6	29969-29972	the	_	_	_	_	
188-7	29973-29977	data	_	_	_	_	
188-8	29978-29983	being	_	_	_	_	
188-9	29984-29988	read	_	_	_	_	
188-10	29989-29993	into	_	_	_	_	
188-11	29994-29997	the	_	_	_	_	
188-12	29998-30004	memory	_	_	_	_	
188-13	30005-30015	controller	_	_	_	_	
188-14	30016-30020	will	_	_	_	_	
188-15	30021-30023	be	_	_	_	_	
188-16	30024-30033	corrected	_	_	_	_	
188-17	30034-30036	by	_	_	_	_	
188-18	30037-30040	the	_	_	_	_	
188-19	30041-30044	ECC	_	_	_	_	
188-20	30045-30050	logic	_	_	_	_	
188-21	30050-30051	,	_	_	_	_	
188-22	30052-30055	but	_	_	_	_	
188-23	30056-30058	no	_	_	_	_	
188-24	30059-30064	write	_	_	_	_	
188-25	30065-30067	to	_	_	_	_	
188-26	30068-30072	main	_	_	_	_	
188-27	30073-30079	memory	_	_	_	_	
188-28	30080-30086	occurs	_	_	_	_	
188-29	30086-30087	.	_	_	_	_	

#Text=Because the data is not corrected in memory, subsequent read operations to the same data will need to be corrected.
189-1	30088-30095	Because	_	_	_	_	
189-2	30096-30099	the	_	_	_	_	
189-3	30100-30104	data	_	_	_	_	
189-4	30105-30107	is	_	_	_	_	
189-5	30108-30111	not	_	_	_	_	
189-6	30112-30121	corrected	_	_	_	_	
189-7	30122-30124	in	_	_	_	_	
189-8	30125-30131	memory	_	_	_	_	
189-9	30131-30132	,	_	_	_	_	
189-10	30133-30143	subsequent	_	_	_	_	
189-11	30144-30148	read	_	_	_	_	
189-12	30149-30159	operations	_	_	_	_	
189-13	30160-30162	to	_	_	_	_	
189-14	30163-30166	the	_	_	_	_	
189-15	30167-30171	same	_	_	_	_	
189-16	30172-30176	data	_	_	_	_	
189-17	30177-30181	will	_	_	_	_	
189-18	30182-30186	need	_	_	_	_	
189-19	30187-30189	to	_	_	_	_	
189-20	30190-30192	be	_	_	_	_	
189-21	30193-30202	corrected	_	_	_	_	
189-22	30202-30203	.	_	_	_	_	

#Text=Configuring the BIOS for optimized CPU hardware power management
#Text=This section summarizes the BIOS settings you can configure to optimize CPU power management.
190-1	30204-30215	Configuring	_	_	_	_	
190-2	30216-30219	the	_	_	_	_	
190-3	30220-30224	BIOS	_	_	_	_	
190-4	30225-30228	for	_	_	_	_	
190-5	30229-30238	optimized	_	_	_	_	
190-6	30239-30242	CPU	_	_	_	_	
190-7	30243-30251	hardware	_	_	_	_	
190-8	30252-30257	power	_	_	_	_	
190-9	30258-30268	management	_	_	_	_	
190-10	30269-30273	This	_	_	_	_	
190-11	30274-30281	section	_	_	_	_	
190-12	30282-30292	summarizes	_	_	_	_	
190-13	30293-30296	the	_	_	_	_	
190-14	30297-30301	BIOS	_	_	_	_	
190-15	30302-30310	settings	_	_	_	_	
190-16	30311-30314	you	_	_	_	_	
190-17	30315-30318	can	_	_	_	_	
190-18	30319-30328	configure	_	_	_	_	
190-19	30329-30331	to	_	_	_	_	
190-20	30332-30340	optimize	_	_	_	_	
190-21	30341-30344	CPU	_	_	_	_	
190-22	30345-30350	power	_	_	_	_	
190-23	30351-30361	management	_	_	_	_	
190-24	30361-30362	.	_	_	_	_	

#Text=It presents the settings optimized for maximum performance, low latency, and energy efficiency, summarized in Table 4.
191-1	30363-30365	It	_	_	_	_	
191-2	30366-30374	presents	_	_	_	_	
191-3	30375-30378	the	_	_	_	_	
191-4	30379-30387	settings	_	_	_	_	
191-5	30388-30397	optimized	_	_	_	_	
191-6	30398-30401	for	_	_	_	_	
191-7	30402-30409	maximum	_	_	_	_	
191-8	30410-30421	performance	_	_	_	_	
191-9	30421-30422	,	_	_	_	_	
191-10	30423-30426	low	_	_	_	_	
191-11	30427-30434	latency	_	_	_	_	
191-12	30434-30435	,	_	_	_	_	
191-13	30436-30439	and	_	_	_	_	
191-14	30440-30446	energy	_	_	_	_	
191-15	30447-30457	efficiency	_	_	_	_	
191-16	30457-30458	,	_	_	_	_	
191-17	30459-30469	summarized	_	_	_	_	
191-18	30470-30472	in	_	_	_	_	
191-19	30473-30478	Table	_	_	_	_	
191-20	30479-30480	4	_	_	_	_	
191-21	30480-30481	.	_	_	_	_	

#Text=Table 4.          
192-1	30482-30487	Table	_	_	_	_	
192-2	30488-30489	4	_	_	_	_	
192-3	30489-30490	.	_	_	_	_	
192-4	30490-30500	          	_	_	_	_	

#Text=BIOS recommendations for maximum performance, low latency, and energy efficiency.
193-1	30501-30505	BIOS	_	_	_	_	
193-2	30506-30521	recommendations	_	_	_	_	
193-3	30522-30525	for	_	_	_	_	
193-4	30526-30533	maximum	_	_	_	_	
193-5	30534-30545	performance	_	_	_	_	
193-6	30545-30546	,	_	_	_	_	
193-7	30547-30550	low	_	_	_	_	
193-8	30551-30558	latency	_	_	_	_	
193-9	30558-30559	,	_	_	_	_	
193-10	30560-30563	and	_	_	_	_	
193-11	30564-30570	energy	_	_	_	_	
193-12	30571-30581	efficiency	_	_	_	_	
193-13	30581-30582	.	_	_	_	_	

#Text=BIOS Options
#Text=BIOS Values (platform-default)
#Text=Maximum Performance
#Text=Low-Latency
#Text=Energy Efficiency
#Text=Processor Configuration
#Text=Intel SpeedStep Technology
#Text=Enabled
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Intel Hyper-Threading Tech
#Text=Enabled
#Text=Platform Default
#Text=Disabled
#Text=Platform Default
#Text=Intel Virtualization Technology (VT)
#Text=Enabled
#Text=Disabled
#Text=Disabled
#Text=Platform Default
#Text=Intel VT for Directed I/O
#Text=Enabled
#Text=Disabled
#Text=Disabled
#Text=Platform Default
#Text=CPU performance
#Text=Custom
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=LLC Prefetch
#Text=Disabled
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Direct cache access
#Text=Enabled
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Advanced Power Management Configuration
#Text=Power technology
#Text=Energy-Efficient
#Text=Custom
#Text=Custom
#Text=Custom
#Text=Intel Turbo Boost
#Text=Enabled
#Text=Platform Default
#Text=Platform Default
#Text=Disabled
#Text=P-STATE coordination
#Text=HW_ALL
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Energy Performance
#Text=Balanced Performance
#Text=Performance
#Text=Platform Default
#Text=Platform Default
#Text=Processor C State
#Text=Enabled
#Text=Disabled
#Text=Disabled
#Text=Platform Default
#Text=Processor C1E
#Text=Enabled
#Text=Disabled
#Text=Disabled
#Text=Platform Default
#Text=Processor C3
#Text=Enabled
#Text=Disabled
#Text=Disabled
#Text=Disabled
#Text=Processor C6
#Text=Enabled
#Text=Disabled
#Text=Disabled
#Text=Platform Default
#Text=Processor C7
#Text=Enabled
#Text=Disabled
#Text=Disabled
#Text=Disabled
#Text=Package C State limit
#Text=C0/C1 State
#Text=Platform Default
#Text=Platform Default
#Text=C6 Retention
#Text=Energy Performance Tuning
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=CPU hardware power mgmt
#Text=HWPW Native Mode
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Workload Configuration
#Text=I/O Sensitive
#Text=Balanced
#Text=Balanced
#Text=Platform Default
#Text=Autonomous Core C-State
#Text=Disabled
#Text=Platform Default
#Text=Platform Default
#Text=Enabled
#Text=Memory & UPI Configuration
#Text=NUMA Optimized
#Text=Enabled
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=IMC Interleaving
#Text=Auto
#Text=1-way Interleave
#Text=Platform Default
#Text=Platform Default
#Text=XPT Prefetch
#Text=Auto
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=UPI Prefetch
#Text=Enabled
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Sub Numa Clustering
#Text=Disabled
#Text=Enabled
#Text=Platform Default
#Text=Platform Default
#Text=Memory RAS configuration
#Text=ADDDC Sparing
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=ADDDC Sparing
#Text=Enabled
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Fan control policy
#Text=Fan control policies enable you to control the fan speed to reduce server power consumption and noise levels.
194-1	30583-30587	BIOS	_	_	_	_	
194-2	30588-30595	Options	_	_	_	_	
194-3	30596-30600	BIOS	_	_	_	_	
194-4	30601-30607	Values	_	_	_	_	
194-5	30608-30609	(	_	_	_	_	
194-6	30609-30625	platform-default	_	_	_	_	
194-7	30625-30626	)	_	_	_	_	
194-8	30627-30634	Maximum	_	_	_	_	
194-9	30635-30646	Performance	_	_	_	_	
194-10	30647-30658	Low-Latency	_	_	_	_	
194-11	30659-30665	Energy	_	_	_	_	
194-12	30666-30676	Efficiency	_	_	_	_	
194-13	30677-30686	Processor	_	_	_	_	
194-14	30687-30700	Configuration	_	_	_	_	
194-15	30701-30706	Intel	_	_	_	_	
194-16	30707-30716	SpeedStep	_	_	_	_	
194-17	30717-30727	Technology	_	_	_	_	
194-18	30728-30735	Enabled	_	_	_	_	
194-19	30736-30744	Platform	_	_	_	_	
194-20	30745-30752	Default	_	_	_	_	
194-21	30753-30761	Platform	_	_	_	_	
194-22	30762-30769	Default	_	_	_	_	
194-23	30770-30778	Platform	_	_	_	_	
194-24	30779-30786	Default	_	_	_	_	
194-25	30787-30792	Intel	_	_	_	_	
194-26	30793-30808	Hyper-Threading	_	_	_	_	
194-27	30809-30813	Tech	_	_	_	_	
194-28	30814-30821	Enabled	_	_	_	_	
194-29	30822-30830	Platform	_	_	_	_	
194-30	30831-30838	Default	_	_	_	_	
194-31	30839-30847	Disabled	_	_	_	_	
194-32	30848-30856	Platform	_	_	_	_	
194-33	30857-30864	Default	_	_	_	_	
194-34	30865-30870	Intel	_	_	_	_	
194-35	30871-30885	Virtualization	_	_	_	_	
194-36	30886-30896	Technology	_	_	_	_	
194-37	30897-30898	(	_	_	_	_	
194-38	30898-30900	VT	_	_	_	_	
194-39	30900-30901	)	_	_	_	_	
194-40	30902-30909	Enabled	_	_	_	_	
194-41	30910-30918	Disabled	_	_	_	_	
194-42	30919-30927	Disabled	_	_	_	_	
194-43	30928-30936	Platform	_	_	_	_	
194-44	30937-30944	Default	_	_	_	_	
194-45	30945-30950	Intel	_	_	_	_	
194-46	30951-30953	VT	_	_	_	_	
194-47	30954-30957	for	_	_	_	_	
194-48	30958-30966	Directed	_	_	_	_	
194-49	30967-30968	I	_	_	_	_	
194-50	30968-30969	/	_	_	_	_	
194-51	30969-30970	O	_	_	_	_	
194-52	30971-30978	Enabled	_	_	_	_	
194-53	30979-30987	Disabled	_	_	_	_	
194-54	30988-30996	Disabled	_	_	_	_	
194-55	30997-31005	Platform	_	_	_	_	
194-56	31006-31013	Default	_	_	_	_	
194-57	31014-31017	CPU	_	_	_	_	
194-58	31018-31029	performance	_	_	_	_	
194-59	31030-31036	Custom	_	_	_	_	
194-60	31037-31045	Platform	_	_	_	_	
194-61	31046-31053	Default	_	_	_	_	
194-62	31054-31062	Platform	_	_	_	_	
194-63	31063-31070	Default	_	_	_	_	
194-64	31071-31079	Platform	_	_	_	_	
194-65	31080-31087	Default	_	_	_	_	
194-66	31088-31091	LLC	_	_	_	_	
194-67	31092-31100	Prefetch	_	_	_	_	
194-68	31101-31109	Disabled	_	_	_	_	
194-69	31110-31118	Platform	_	_	_	_	
194-70	31119-31126	Default	_	_	_	_	
194-71	31127-31135	Platform	_	_	_	_	
194-72	31136-31143	Default	_	_	_	_	
194-73	31144-31152	Platform	_	_	_	_	
194-74	31153-31160	Default	_	_	_	_	
194-75	31161-31167	Direct	_	_	_	_	
194-76	31168-31173	cache	_	_	_	_	
194-77	31174-31180	access	_	_	_	_	
194-78	31181-31188	Enabled	_	_	_	_	
194-79	31189-31197	Platform	_	_	_	_	
194-80	31198-31205	Default	_	_	_	_	
194-81	31206-31214	Platform	_	_	_	_	
194-82	31215-31222	Default	_	_	_	_	
194-83	31223-31231	Platform	_	_	_	_	
194-84	31232-31239	Default	_	_	_	_	
194-85	31240-31248	Advanced	_	_	_	_	
194-86	31249-31254	Power	_	_	_	_	
194-87	31255-31265	Management	_	_	_	_	
194-88	31266-31279	Configuration	_	_	_	_	
194-89	31280-31285	Power	_	_	_	_	
194-90	31286-31296	technology	_	_	_	_	
194-91	31297-31313	Energy-Efficient	_	_	_	_	
194-92	31314-31320	Custom	_	_	_	_	
194-93	31321-31327	Custom	_	_	_	_	
194-94	31328-31334	Custom	_	_	_	_	
194-95	31335-31340	Intel	_	_	_	_	
194-96	31341-31346	Turbo	_	_	_	_	
194-97	31347-31352	Boost	_	_	_	_	
194-98	31353-31360	Enabled	_	_	_	_	
194-99	31361-31369	Platform	_	_	_	_	
194-100	31370-31377	Default	_	_	_	_	
194-101	31378-31386	Platform	_	_	_	_	
194-102	31387-31394	Default	_	_	_	_	
194-103	31395-31403	Disabled	_	_	_	_	
194-104	31404-31411	P-STATE	_	_	_	_	
194-105	31412-31424	coordination	_	_	_	_	
194-106	31425-31431	HW_ALL	_	_	_	_	
194-107	31432-31440	Platform	_	_	_	_	
194-108	31441-31448	Default	_	_	_	_	
194-109	31449-31457	Platform	_	_	_	_	
194-110	31458-31465	Default	_	_	_	_	
194-111	31466-31474	Platform	_	_	_	_	
194-112	31475-31482	Default	_	_	_	_	
194-113	31483-31489	Energy	_	_	_	_	
194-114	31490-31501	Performance	_	_	_	_	
194-115	31502-31510	Balanced	_	_	_	_	
194-116	31511-31522	Performance	_	_	_	_	
194-117	31523-31534	Performance	_	_	_	_	
194-118	31535-31543	Platform	_	_	_	_	
194-119	31544-31551	Default	_	_	_	_	
194-120	31552-31560	Platform	_	_	_	_	
194-121	31561-31568	Default	_	_	_	_	
194-122	31569-31578	Processor	_	_	_	_	
194-123	31579-31580	C	_	_	_	_	
194-124	31581-31586	State	_	_	_	_	
194-125	31587-31594	Enabled	_	_	_	_	
194-126	31595-31603	Disabled	_	_	_	_	
194-127	31604-31612	Disabled	_	_	_	_	
194-128	31613-31621	Platform	_	_	_	_	
194-129	31622-31629	Default	_	_	_	_	
194-130	31630-31639	Processor	_	_	_	_	
194-131	31640-31643	C1E	_	_	_	_	
194-132	31644-31651	Enabled	_	_	_	_	
194-133	31652-31660	Disabled	_	_	_	_	
194-134	31661-31669	Disabled	_	_	_	_	
194-135	31670-31678	Platform	_	_	_	_	
194-136	31679-31686	Default	_	_	_	_	
194-137	31687-31696	Processor	_	_	_	_	
194-138	31697-31699	C3	_	_	_	_	
194-139	31700-31707	Enabled	_	_	_	_	
194-140	31708-31716	Disabled	_	_	_	_	
194-141	31717-31725	Disabled	_	_	_	_	
194-142	31726-31734	Disabled	_	_	_	_	
194-143	31735-31744	Processor	_	_	_	_	
194-144	31745-31747	C6	_	_	_	_	
194-145	31748-31755	Enabled	_	_	_	_	
194-146	31756-31764	Disabled	_	_	_	_	
194-147	31765-31773	Disabled	_	_	_	_	
194-148	31774-31782	Platform	_	_	_	_	
194-149	31783-31790	Default	_	_	_	_	
194-150	31791-31800	Processor	_	_	_	_	
194-151	31801-31803	C7	_	_	_	_	
194-152	31804-31811	Enabled	_	_	_	_	
194-153	31812-31820	Disabled	_	_	_	_	
194-154	31821-31829	Disabled	_	_	_	_	
194-155	31830-31838	Disabled	_	_	_	_	
194-156	31839-31846	Package	_	_	_	_	
194-157	31847-31848	C	_	_	_	_	
194-158	31849-31854	State	_	_	_	_	
194-159	31855-31860	limit	_	_	_	_	
194-160	31861-31863	C0	_	_	_	_	
194-161	31863-31864	/	_	_	_	_	
194-162	31864-31866	C1	_	_	_	_	
194-163	31867-31872	State	_	_	_	_	
194-164	31873-31881	Platform	_	_	_	_	
194-165	31882-31889	Default	_	_	_	_	
194-166	31890-31898	Platform	_	_	_	_	
194-167	31899-31906	Default	_	_	_	_	
194-168	31907-31909	C6	_	_	_	_	
194-169	31910-31919	Retention	_	_	_	_	
194-170	31920-31926	Energy	_	_	_	_	
194-171	31927-31938	Performance	_	_	_	_	
194-172	31939-31945	Tuning	_	_	_	_	
194-173	31946-31954	Platform	_	_	_	_	
194-174	31955-31962	Default	_	_	_	_	
194-175	31963-31971	Platform	_	_	_	_	
194-176	31972-31979	Default	_	_	_	_	
194-177	31980-31988	Platform	_	_	_	_	
194-178	31989-31996	Default	_	_	_	_	
194-179	31997-32000	CPU	_	_	_	_	
194-180	32001-32009	hardware	_	_	_	_	
194-181	32010-32015	power	_	_	_	_	
194-182	32016-32020	mgmt	_	_	_	_	
194-183	32021-32025	HWPW	_	_	_	_	
194-184	32026-32032	Native	_	_	_	_	
194-185	32033-32037	Mode	_	_	_	_	
194-186	32038-32046	Platform	_	_	_	_	
194-187	32047-32054	Default	_	_	_	_	
194-188	32055-32063	Platform	_	_	_	_	
194-189	32064-32071	Default	_	_	_	_	
194-190	32072-32080	Platform	_	_	_	_	
194-191	32081-32088	Default	_	_	_	_	
194-192	32089-32097	Workload	_	_	_	_	
194-193	32098-32111	Configuration	_	_	_	_	
194-194	32112-32113	I	_	_	_	_	
194-195	32113-32114	/	_	_	_	_	
194-196	32114-32115	O	_	_	_	_	
194-197	32116-32125	Sensitive	_	_	_	_	
194-198	32126-32134	Balanced	_	_	_	_	
194-199	32135-32143	Balanced	_	_	_	_	
194-200	32144-32152	Platform	_	_	_	_	
194-201	32153-32160	Default	_	_	_	_	
194-202	32161-32171	Autonomous	_	_	_	_	
194-203	32172-32176	Core	_	_	_	_	
194-204	32177-32184	C-State	_	_	_	_	
194-205	32185-32193	Disabled	_	_	_	_	
194-206	32194-32202	Platform	_	_	_	_	
194-207	32203-32210	Default	_	_	_	_	
194-208	32211-32219	Platform	_	_	_	_	
194-209	32220-32227	Default	_	_	_	_	
194-210	32228-32235	Enabled	_	_	_	_	
194-211	32236-32242	Memory	_	_	_	_	
194-212	32243-32244	&	_	_	_	_	
194-213	32245-32248	UPI	_	_	_	_	
194-214	32249-32262	Configuration	_	_	_	_	
194-215	32263-32267	NUMA	_	_	_	_	
194-216	32268-32277	Optimized	_	_	_	_	
194-217	32278-32285	Enabled	_	_	_	_	
194-218	32286-32294	Platform	_	_	_	_	
194-219	32295-32302	Default	_	_	_	_	
194-220	32303-32311	Platform	_	_	_	_	
194-221	32312-32319	Default	_	_	_	_	
194-222	32320-32328	Platform	_	_	_	_	
194-223	32329-32336	Default	_	_	_	_	
194-224	32337-32340	IMC	_	_	_	_	
194-225	32341-32353	Interleaving	_	_	_	_	
194-226	32354-32358	Auto	_	_	_	_	
194-227	32359-32360	1	_	_	_	_	
194-228	32360-32361	-	_	_	_	_	
194-229	32361-32364	way	_	_	_	_	
194-230	32365-32375	Interleave	_	_	_	_	
194-231	32376-32384	Platform	_	_	_	_	
194-232	32385-32392	Default	_	_	_	_	
194-233	32393-32401	Platform	_	_	_	_	
194-234	32402-32409	Default	_	_	_	_	
194-235	32410-32413	XPT	_	_	_	_	
194-236	32414-32422	Prefetch	_	_	_	_	
194-237	32423-32427	Auto	_	_	_	_	
194-238	32428-32436	Platform	_	_	_	_	
194-239	32437-32444	Default	_	_	_	_	
194-240	32445-32453	Platform	_	_	_	_	
194-241	32454-32461	Default	_	_	_	_	
194-242	32462-32470	Platform	_	_	_	_	
194-243	32471-32478	Default	_	_	_	_	
194-244	32479-32482	UPI	_	_	_	_	
194-245	32483-32491	Prefetch	_	_	_	_	
194-246	32492-32499	Enabled	_	_	_	_	
194-247	32500-32508	Platform	_	_	_	_	
194-248	32509-32516	Default	_	_	_	_	
194-249	32517-32525	Platform	_	_	_	_	
194-250	32526-32533	Default	_	_	_	_	
194-251	32534-32542	Platform	_	_	_	_	
194-252	32543-32550	Default	_	_	_	_	
194-253	32551-32554	Sub	_	_	_	_	
194-254	32555-32559	Numa	_	_	_	_	
194-255	32560-32570	Clustering	_	_	_	_	
194-256	32571-32579	Disabled	_	_	_	_	
194-257	32580-32587	Enabled	_	_	_	_	
194-258	32588-32596	Platform	_	_	_	_	
194-259	32597-32604	Default	_	_	_	_	
194-260	32605-32613	Platform	_	_	_	_	
194-261	32614-32621	Default	_	_	_	_	
194-262	32622-32628	Memory	_	_	_	_	
194-263	32629-32632	RAS	_	_	_	_	
194-264	32633-32646	configuration	_	_	_	_	
194-265	32647-32652	ADDDC	_	_	_	_	
194-266	32653-32660	Sparing	_	_	_	_	
194-267	32661-32669	Platform	_	_	_	_	
194-268	32670-32677	Default	_	_	_	_	
194-269	32678-32686	Platform	_	_	_	_	
194-270	32687-32694	Default	_	_	_	_	
194-271	32695-32703	Platform	_	_	_	_	
194-272	32704-32711	Default	_	_	_	_	
194-273	32712-32717	ADDDC	_	_	_	_	
194-274	32718-32725	Sparing	_	_	_	_	
194-275	32726-32733	Enabled	_	_	_	_	
194-276	32734-32742	Platform	_	_	_	_	
194-277	32743-32750	Default	_	_	_	_	
194-278	32751-32759	Platform	_	_	_	_	
194-279	32760-32767	Default	_	_	_	_	
194-280	32768-32776	Platform	_	_	_	_	
194-281	32777-32784	Default	_	_	_	_	
194-282	32785-32788	Fan	_	_	_	_	
194-283	32789-32796	control	_	_	_	_	
194-284	32797-32803	policy	_	_	_	_	
194-285	32804-32807	Fan	_	_	_	_	
194-286	32808-32815	control	_	_	_	_	
194-287	32816-32824	policies	_	_	_	_	
194-288	32825-32831	enable	_	_	_	_	
194-289	32832-32835	you	_	_	_	_	
194-290	32836-32838	to	_	_	_	_	
194-291	32839-32846	control	_	_	_	_	
194-292	32847-32850	the	_	_	_	_	
194-293	32851-32854	fan	_	_	_	_	
194-294	32855-32860	speed	_	_	_	_	
194-295	32861-32863	to	_	_	_	_	
194-296	32864-32870	reduce	_	_	_	_	
194-297	32871-32877	server	_	_	_	_	
194-298	32878-32883	power	_	_	_	_	
194-299	32884-32895	consumption	_	_	_	_	
194-300	32896-32899	and	_	_	_	_	
194-301	32900-32905	noise	_	_	_	_	
194-302	32906-32912	levels	_	_	_	_	
194-303	32912-32913	.	_	_	_	_	

#Text=Prior to the fan policies, the fan speed increased automatically when the temperature of any server component exceeded the set threshold.
195-1	32914-32919	Prior	_	_	_	_	
195-2	32920-32922	to	_	_	_	_	
195-3	32923-32926	the	_	_	_	_	
195-4	32927-32930	fan	_	_	_	_	
195-5	32931-32939	policies	_	_	_	_	
195-6	32939-32940	,	_	_	_	_	
195-7	32941-32944	the	_	_	_	_	
195-8	32945-32948	fan	_	_	_	_	
195-9	32949-32954	speed	_	_	_	_	
195-10	32955-32964	increased	_	_	_	_	
195-11	32965-32978	automatically	_	_	_	_	
195-12	32979-32983	when	_	_	_	_	
195-13	32984-32987	the	_	_	_	_	
195-14	32988-32999	temperature	_	_	_	_	
195-15	33000-33002	of	_	_	_	_	
195-16	33003-33006	any	_	_	_	_	
195-17	33007-33013	server	_	_	_	_	
195-18	33014-33023	component	_	_	_	_	
195-19	33024-33032	exceeded	_	_	_	_	
195-20	33033-33036	the	_	_	_	_	
195-21	33037-33040	set	_	_	_	_	
195-22	33041-33050	threshold	_	_	_	_	
195-23	33050-33051	.	_	_	_	_	

#Text=To help ensure that the fan speeds were low, the threshold temperatures of components were usually set to high values.
196-1	33052-33054	To	_	_	_	_	
196-2	33055-33059	help	_	_	_	_	
196-3	33060-33066	ensure	_	_	_	_	
196-4	33067-33071	that	_	_	_	_	
196-5	33072-33075	the	_	_	_	_	
196-6	33076-33079	fan	_	_	_	_	
196-7	33080-33086	speeds	_	_	_	_	
196-8	33087-33091	were	_	_	_	_	
196-9	33092-33095	low	_	_	_	_	
196-10	33095-33096	,	_	_	_	_	
196-11	33097-33100	the	_	_	_	_	
196-12	33101-33110	threshold	_	_	_	_	
196-13	33111-33123	temperatures	_	_	_	_	
196-14	33124-33126	of	_	_	_	_	
196-15	33127-33137	components	_	_	_	_	
196-16	33138-33142	were	_	_	_	_	
196-17	33143-33150	usually	_	_	_	_	
196-18	33151-33154	set	_	_	_	_	
196-19	33155-33157	to	_	_	_	_	
196-20	33158-33162	high	_	_	_	_	
196-21	33163-33169	values	_	_	_	_	
196-22	33169-33170	.	_	_	_	_	

#Text=Although this behavior suited most server configurations, it did not address the following situations:
#Text=●     Maximum CPU performance: For high performance, certain CPUs must be cooled substantially below the set threshold temperature.
197-1	33171-33179	Although	_	_	_	_	
197-2	33180-33184	this	_	_	_	_	
197-3	33185-33193	behavior	_	_	_	_	
197-4	33194-33200	suited	_	_	_	_	
197-5	33201-33205	most	_	_	_	_	
197-6	33206-33212	server	_	_	_	_	
197-7	33213-33227	configurations	_	_	_	_	
197-8	33227-33228	,	_	_	_	_	
197-9	33229-33231	it	_	_	_	_	
197-10	33232-33235	did	_	_	_	_	
197-11	33236-33239	not	_	_	_	_	
197-12	33240-33247	address	_	_	_	_	
197-13	33248-33251	the	_	_	_	_	
197-14	33252-33261	following	_	_	_	_	
197-15	33262-33272	situations	_	_	_	_	
197-16	33272-33273	:	_	_	_	_	
197-17	33274-33275	●	_	_	_	_	
197-18	33275-33279	    	_	_	_	_	
197-19	33280-33287	Maximum	_	_	_	_	
197-20	33288-33291	CPU	_	_	_	_	
197-21	33292-33303	performance	_	_	_	_	
197-22	33303-33304	:	_	_	_	_	
197-23	33305-33308	For	_	_	_	_	
197-24	33309-33313	high	_	_	_	_	
197-25	33314-33325	performance	_	_	_	_	
197-26	33325-33326	,	_	_	_	_	
197-27	33327-33334	certain	_	_	_	_	
197-28	33335-33339	CPUs	_	_	_	_	
197-29	33340-33344	must	_	_	_	_	
197-30	33345-33347	be	_	_	_	_	
197-31	33348-33354	cooled	_	_	_	_	
197-32	33355-33368	substantially	_	_	_	_	
197-33	33369-33374	below	_	_	_	_	
197-34	33375-33378	the	_	_	_	_	
197-35	33379-33382	set	_	_	_	_	
197-36	33383-33392	threshold	_	_	_	_	
197-37	33393-33404	temperature	_	_	_	_	
197-38	33404-33405	.	_	_	_	_	

#Text=This cooling requires very high fan speeds, which results in increased power consumption and noise levels.
#Text=●     Low power consumption: To help ensure the lowest power consumption, fans must run very slowly and, in some cases, stop completely on servers that allow this behavior it.
198-1	33406-33410	This	_	_	_	_	
198-2	33411-33418	cooling	_	_	_	_	
198-3	33419-33427	requires	_	_	_	_	
198-4	33428-33432	very	_	_	_	_	
198-5	33433-33437	high	_	_	_	_	
198-6	33438-33441	fan	_	_	_	_	
198-7	33442-33448	speeds	_	_	_	_	
198-8	33448-33449	,	_	_	_	_	
198-9	33450-33455	which	_	_	_	_	
198-10	33456-33463	results	_	_	_	_	
198-11	33464-33466	in	_	_	_	_	
198-12	33467-33476	increased	_	_	_	_	
198-13	33477-33482	power	_	_	_	_	
198-14	33483-33494	consumption	_	_	_	_	
198-15	33495-33498	and	_	_	_	_	
198-16	33499-33504	noise	_	_	_	_	
198-17	33505-33511	levels	_	_	_	_	
198-18	33511-33512	.	_	_	_	_	
198-19	33513-33514	●	_	_	_	_	
198-20	33514-33518	    	_	_	_	_	
198-21	33519-33522	Low	_	_	_	_	
198-22	33523-33528	power	_	_	_	_	
198-23	33529-33540	consumption	_	_	_	_	
198-24	33540-33541	:	_	_	_	_	
198-25	33542-33544	To	_	_	_	_	
198-26	33545-33549	help	_	_	_	_	
198-27	33550-33556	ensure	_	_	_	_	
198-28	33557-33560	the	_	_	_	_	
198-29	33561-33567	lowest	_	_	_	_	
198-30	33568-33573	power	_	_	_	_	
198-31	33574-33585	consumption	_	_	_	_	
198-32	33585-33586	,	_	_	_	_	
198-33	33587-33591	fans	_	_	_	_	
198-34	33592-33596	must	_	_	_	_	
198-35	33597-33600	run	_	_	_	_	
198-36	33601-33605	very	_	_	_	_	
198-37	33606-33612	slowly	_	_	_	_	
198-38	33613-33616	and	_	_	_	_	
198-39	33616-33617	,	_	_	_	_	
198-40	33618-33620	in	_	_	_	_	
198-41	33621-33625	some	_	_	_	_	
198-42	33626-33631	cases	_	_	_	_	
198-43	33631-33632	,	_	_	_	_	
198-44	33633-33637	stop	_	_	_	_	
198-45	33638-33648	completely	_	_	_	_	
198-46	33649-33651	on	_	_	_	_	
198-47	33652-33659	servers	_	_	_	_	
198-48	33660-33664	that	_	_	_	_	
198-49	33665-33670	allow	_	_	_	_	
198-50	33671-33675	this	_	_	_	_	
198-51	33676-33684	behavior	_	_	_	_	
198-52	33685-33687	it	_	_	_	_	
198-53	33687-33688	.	_	_	_	_	

#Text=But slow fan speeds can cause servers to overheat.
199-1	33689-33692	But	_	_	_	_	
199-2	33693-33697	slow	_	_	_	_	
199-3	33698-33701	fan	_	_	_	_	
199-4	33702-33708	speeds	_	_	_	_	
199-5	33709-33712	can	_	_	_	_	
199-6	33713-33718	cause	_	_	_	_	
199-7	33719-33726	servers	_	_	_	_	
199-8	33727-33729	to	_	_	_	_	
199-9	33730-33738	overheat	_	_	_	_	
199-10	33738-33739	.	_	_	_	_	

#Text=To avoid this situation, you need to run fans at a speed that is moderately faster than the lowest possible speed.
200-1	33740-33742	To	_	_	_	_	
200-2	33743-33748	avoid	_	_	_	_	
200-3	33749-33753	this	_	_	_	_	
200-4	33754-33763	situation	_	_	_	_	
200-5	33763-33764	,	_	_	_	_	
200-6	33765-33768	you	_	_	_	_	
200-7	33769-33773	need	_	_	_	_	
200-8	33774-33776	to	_	_	_	_	
200-9	33777-33780	run	_	_	_	_	
200-10	33781-33785	fans	_	_	_	_	
200-11	33786-33788	at	_	_	_	_	
200-12	33789-33790	a	_	_	_	_	
200-13	33791-33796	speed	_	_	_	_	
200-14	33797-33801	that	_	_	_	_	
200-15	33802-33804	is	_	_	_	_	
200-16	33805-33815	moderately	_	_	_	_	
200-17	33816-33822	faster	_	_	_	_	
200-18	33823-33827	than	_	_	_	_	
200-19	33828-33831	the	_	_	_	_	
200-20	33832-33838	lowest	_	_	_	_	
200-21	33839-33847	possible	_	_	_	_	
200-22	33848-33853	speed	_	_	_	_	
200-23	33853-33854	.	_	_	_	_	

#Text=Following are the fan policies that you can choose:
#Text=●     Balanced: This is the default policy.
201-1	33855-33864	Following	_	_	_	_	
201-2	33865-33868	are	_	_	_	_	
201-3	33869-33872	the	_	_	_	_	
201-4	33873-33876	fan	_	_	_	_	
201-5	33877-33885	policies	_	_	_	_	
201-6	33886-33890	that	_	_	_	_	
201-7	33891-33894	you	_	_	_	_	
201-8	33895-33898	can	_	_	_	_	
201-9	33899-33905	choose	_	_	_	_	
201-10	33905-33906	:	_	_	_	_	
201-11	33907-33908	●	_	_	_	_	
201-12	33908-33912	    	_	_	_	_	
201-13	33913-33921	Balanced	_	_	_	_	
201-14	33921-33922	:	_	_	_	_	
201-15	33923-33927	This	_	_	_	_	
201-16	33928-33930	is	_	_	_	_	
201-17	33931-33934	the	_	_	_	_	
201-18	33935-33942	default	_	_	_	_	
201-19	33943-33949	policy	_	_	_	_	
201-20	33949-33950	.	_	_	_	_	

#Text=This setting can cool almost any server configuration, but it may not be suitable for servers with PCI Express (PCIe) cards, because these cards overheat easily.
#Text=●     Low Power: This setting is well suited for minimal-configuration servers that do not contain any PCIe cards.
#Text=●     High Power: This setting can be used for server configurations that require fan speeds ranging from 60 to 85 percent.
202-1	33951-33955	This	_	_	_	_	
202-2	33956-33963	setting	_	_	_	_	
202-3	33964-33967	can	_	_	_	_	
202-4	33968-33972	cool	_	_	_	_	
202-5	33973-33979	almost	_	_	_	_	
202-6	33980-33983	any	_	_	_	_	
202-7	33984-33990	server	_	_	_	_	
202-8	33991-34004	configuration	_	_	_	_	
202-9	34004-34005	,	_	_	_	_	
202-10	34006-34009	but	_	_	_	_	
202-11	34010-34012	it	_	_	_	_	
202-12	34013-34016	may	_	_	_	_	
202-13	34017-34020	not	_	_	_	_	
202-14	34021-34023	be	_	_	_	_	
202-15	34024-34032	suitable	_	_	_	_	
202-16	34033-34036	for	_	_	_	_	
202-17	34037-34044	servers	_	_	_	_	
202-18	34045-34049	with	_	_	_	_	
202-19	34050-34053	PCI	_	_	_	_	
202-20	34054-34061	Express	_	_	_	_	
202-21	34062-34063	(	_	_	_	_	
202-22	34063-34067	PCIe	_	_	_	_	
202-23	34067-34068	)	_	_	_	_	
202-24	34069-34074	cards	_	_	_	_	
202-25	34074-34075	,	_	_	_	_	
202-26	34076-34083	because	_	_	_	_	
202-27	34084-34089	these	_	_	_	_	
202-28	34090-34095	cards	_	_	_	_	
202-29	34096-34104	overheat	_	_	_	_	
202-30	34105-34111	easily	_	_	_	_	
202-31	34111-34112	.	_	_	_	_	
202-32	34113-34114	●	_	_	_	_	
202-33	34114-34118	    	_	_	_	_	
202-34	34119-34122	Low	_	_	_	_	
202-35	34123-34128	Power	_	_	_	_	
202-36	34128-34129	:	_	_	_	_	
202-37	34130-34134	This	_	_	_	_	
202-38	34135-34142	setting	_	_	_	_	
202-39	34143-34145	is	_	_	_	_	
202-40	34146-34150	well	_	_	_	_	
202-41	34151-34157	suited	_	_	_	_	
202-42	34158-34161	for	_	_	_	_	
202-43	34162-34183	minimal-configuration	_	_	_	_	
202-44	34184-34191	servers	_	_	_	_	
202-45	34192-34196	that	_	_	_	_	
202-46	34197-34199	do	_	_	_	_	
202-47	34200-34203	not	_	_	_	_	
202-48	34204-34211	contain	_	_	_	_	
202-49	34212-34215	any	_	_	_	_	
202-50	34216-34220	PCIe	_	_	_	_	
202-51	34221-34226	cards	_	_	_	_	
202-52	34226-34227	.	_	_	_	_	
202-53	34228-34229	●	_	_	_	_	
202-54	34229-34233	    	_	_	_	_	
202-55	34234-34238	High	_	_	_	_	
202-56	34239-34244	Power	_	_	_	_	
202-57	34244-34245	:	_	_	_	_	
202-58	34246-34250	This	_	_	_	_	
202-59	34251-34258	setting	_	_	_	_	
202-60	34259-34262	can	_	_	_	_	
202-61	34263-34265	be	_	_	_	_	
202-62	34266-34270	used	_	_	_	_	
202-63	34271-34274	for	_	_	_	_	
202-64	34275-34281	server	_	_	_	_	
202-65	34282-34296	configurations	_	_	_	_	
202-66	34297-34301	that	_	_	_	_	
202-67	34302-34309	require	_	_	_	_	
202-68	34310-34313	fan	_	_	_	_	
202-69	34314-34320	speeds	_	_	_	_	
202-70	34321-34328	ranging	_	_	_	_	
202-71	34329-34333	from	_	_	_	_	
202-72	34334-34336	60	_	_	_	_	
202-73	34337-34339	to	_	_	_	_	
202-74	34340-34342	85	_	_	_	_	
202-75	34343-34350	percent	_	_	_	_	
202-76	34350-34351	.	_	_	_	_	

#Text=This policy is well suited for servers that contain PCIe cards that easily overheat and have high temperatures.
203-1	34352-34356	This	_	_	_	_	
203-2	34357-34363	policy	_	_	_	_	
203-3	34364-34366	is	_	_	_	_	
203-4	34367-34371	well	_	_	_	_	
203-5	34372-34378	suited	_	_	_	_	
203-6	34379-34382	for	_	_	_	_	
203-7	34383-34390	servers	_	_	_	_	
203-8	34391-34395	that	_	_	_	_	
203-9	34396-34403	contain	_	_	_	_	
203-10	34404-34408	PCIe	_	_	_	_	
203-11	34409-34414	cards	_	_	_	_	
203-12	34415-34419	that	_	_	_	_	
203-13	34420-34426	easily	_	_	_	_	
203-14	34427-34435	overheat	_	_	_	_	
203-15	34436-34439	and	_	_	_	_	
203-16	34440-34444	have	_	_	_	_	
203-17	34445-34449	high	_	_	_	_	
203-18	34450-34462	temperatures	_	_	_	_	
203-19	34462-34463	.	_	_	_	_	

#Text=The minimum fan speed set with this policy varies for each server platform, but it is approximately in the range of 60 to 85 percent.
#Text=●     Maximum Power: This setting can be used for server configurations that require extremely high fan speeds ranging between 70 and 100 percent.
204-1	34464-34467	The	_	_	_	_	
204-2	34468-34475	minimum	_	_	_	_	
204-3	34476-34479	fan	_	_	_	_	
204-4	34480-34485	speed	_	_	_	_	
204-5	34486-34489	set	_	_	_	_	
204-6	34490-34494	with	_	_	_	_	
204-7	34495-34499	this	_	_	_	_	
204-8	34500-34506	policy	_	_	_	_	
204-9	34507-34513	varies	_	_	_	_	
204-10	34514-34517	for	_	_	_	_	
204-11	34518-34522	each	_	_	_	_	
204-12	34523-34529	server	_	_	_	_	
204-13	34530-34538	platform	_	_	_	_	
204-14	34538-34539	,	_	_	_	_	
204-15	34540-34543	but	_	_	_	_	
204-16	34544-34546	it	_	_	_	_	
204-17	34547-34549	is	_	_	_	_	
204-18	34550-34563	approximately	_	_	_	_	
204-19	34564-34566	in	_	_	_	_	
204-20	34567-34570	the	_	_	_	_	
204-21	34571-34576	range	_	_	_	_	
204-22	34577-34579	of	_	_	_	_	
204-23	34580-34582	60	_	_	_	_	
204-24	34583-34585	to	_	_	_	_	
204-25	34586-34588	85	_	_	_	_	
204-26	34589-34596	percent	_	_	_	_	
204-27	34596-34597	.	_	_	_	_	
204-28	34598-34599	●	_	_	_	_	
204-29	34599-34603	    	_	_	_	_	
204-30	34604-34611	Maximum	_	_	_	_	
204-31	34612-34617	Power	_	_	_	_	
204-32	34617-34618	:	_	_	_	_	
204-33	34619-34623	This	_	_	_	_	
204-34	34624-34631	setting	_	_	_	_	
204-35	34632-34635	can	_	_	_	_	
204-36	34636-34638	be	_	_	_	_	
204-37	34639-34643	used	_	_	_	_	
204-38	34644-34647	for	_	_	_	_	
204-39	34648-34654	server	_	_	_	_	
204-40	34655-34669	configurations	_	_	_	_	
204-41	34670-34674	that	_	_	_	_	
204-42	34675-34682	require	_	_	_	_	
204-43	34683-34692	extremely	_	_	_	_	
204-44	34693-34697	high	_	_	_	_	
204-45	34698-34701	fan	_	_	_	_	
204-46	34702-34708	speeds	_	_	_	_	
204-47	34709-34716	ranging	_	_	_	_	
204-48	34717-34724	between	_	_	_	_	
204-49	34725-34727	70	_	_	_	_	
204-50	34728-34731	and	_	_	_	_	
204-51	34732-34735	100	_	_	_	_	
204-52	34736-34743	percent	_	_	_	_	
204-53	34743-34744	.	_	_	_	_	

#Text=This policy is well suited for servers that contain PCIe cards that easily overheat and have extremely high temperatures.
205-1	34745-34749	This	_	_	_	_	
205-2	34750-34756	policy	_	_	_	_	
205-3	34757-34759	is	_	_	_	_	
205-4	34760-34764	well	_	_	_	_	
205-5	34765-34771	suited	_	_	_	_	
205-6	34772-34775	for	_	_	_	_	
205-7	34776-34783	servers	_	_	_	_	
205-8	34784-34788	that	_	_	_	_	
205-9	34789-34796	contain	_	_	_	_	
205-10	34797-34801	PCIe	_	_	_	_	
205-11	34802-34807	cards	_	_	_	_	
205-12	34808-34812	that	_	_	_	_	
205-13	34813-34819	easily	_	_	_	_	
205-14	34820-34828	overheat	_	_	_	_	
205-15	34829-34832	and	_	_	_	_	
205-16	34833-34837	have	_	_	_	_	
205-17	34838-34847	extremely	_	_	_	_	
205-18	34848-34852	high	_	_	_	_	
205-19	34853-34865	temperatures	_	_	_	_	
205-20	34865-34866	.	_	_	_	_	

#Text=The minimum fan speed set with this policy varies for each server platform, but it is approximately in the range of 70 to 100 percent.
206-1	34867-34870	The	_	_	_	_	
206-2	34871-34878	minimum	_	_	_	_	
206-3	34879-34882	fan	_	_	_	_	
206-4	34883-34888	speed	_	_	_	_	
206-5	34889-34892	set	_	_	_	_	
206-6	34893-34897	with	_	_	_	_	
206-7	34898-34902	this	_	_	_	_	
206-8	34903-34909	policy	_	_	_	_	
206-9	34910-34916	varies	_	_	_	_	
206-10	34917-34920	for	_	_	_	_	
206-11	34921-34925	each	_	_	_	_	
206-12	34926-34932	server	_	_	_	_	
206-13	34933-34941	platform	_	_	_	_	
206-14	34941-34942	,	_	_	_	_	
206-15	34943-34946	but	_	_	_	_	
206-16	34947-34949	it	_	_	_	_	
206-17	34950-34952	is	_	_	_	_	
206-18	34953-34966	approximately	_	_	_	_	
206-19	34967-34969	in	_	_	_	_	
206-20	34970-34973	the	_	_	_	_	
206-21	34974-34979	range	_	_	_	_	
206-22	34980-34982	of	_	_	_	_	
206-23	34983-34985	70	_	_	_	_	
206-24	34986-34988	to	_	_	_	_	
206-25	34989-34992	100	_	_	_	_	
206-26	34993-35000	percent	_	_	_	_	
206-27	35000-35001	.	_	_	_	_	

#Text=Note:      This policy is configurable for standalone Cisco UCS C-Series M5 servers using the Cisco® Integrated Management Controller (IMC) console and the Cisco IMC supervisor.
207-1	35002-35006	Note	_	_	_	_	
207-2	35006-35007	:	_	_	_	_	
207-3	35007-35012	     	_	_	_	_	
207-4	35013-35017	This	_	_	_	_	
207-5	35018-35024	policy	_	_	_	_	
207-6	35025-35027	is	_	_	_	_	
207-7	35028-35040	configurable	_	_	_	_	
207-8	35041-35044	for	_	_	_	_	
207-9	35045-35055	standalone	_	_	_	_	
207-10	35056-35061	Cisco	_	_	_	_	
207-11	35062-35065	UCS	_	_	_	_	
207-12	35066-35074	C-Series	_	_	_	_	
207-13	35075-35077	M5	_	_	_	_	
207-14	35078-35085	servers	_	_	_	_	
207-15	35086-35091	using	_	_	_	_	
207-16	35092-35095	the	_	_	_	_	
207-17	35096-35101	Cisco	_	_	_	_	
207-18	35101-35102	®	_	_	_	_	
207-19	35103-35113	Integrated	_	_	_	_	
207-20	35114-35124	Management	_	_	_	_	
207-21	35125-35135	Controller	_	_	_	_	
207-22	35136-35137	(	_	_	_	_	
207-23	35137-35140	IMC	_	_	_	_	
207-24	35140-35141	)	_	_	_	_	
207-25	35142-35149	console	_	_	_	_	
207-26	35150-35153	and	_	_	_	_	
207-27	35154-35157	the	_	_	_	_	
207-28	35158-35163	Cisco	_	_	_	_	
207-29	35164-35167	IMC	_	_	_	_	
207-30	35168-35178	supervisor	_	_	_	_	
207-31	35178-35179	.	_	_	_	_	

#Text=CIMC Web console Ò Compute Ò Power Policies Ò Configured Fan Policy.
208-1	35180-35184	CIMC	_	_	_	_	
208-2	35185-35188	Web	_	_	_	_	
208-3	35189-35196	console	_	_	_	_	
208-4	35197-35198	Ò	_	_	_	_	
208-5	35199-35206	Compute	_	_	_	_	
208-6	35207-35208	Ò	_	_	_	_	
208-7	35209-35214	Power	_	_	_	_	
208-8	35215-35223	Policies	_	_	_	_	
208-9	35224-35225	Ò	_	_	_	_	
208-10	35226-35236	Configured	_	_	_	_	
208-11	35237-35240	Fan	_	_	_	_	
208-12	35241-35247	Policy	_	_	_	_	
208-13	35247-35248	.	_	_	_	_	

#Text=For UCS Managed C series servers, it is configurable using Power Control Policies under.
209-1	35249-35252	For	_	_	_	_	
209-2	35253-35256	UCS	_	_	_	_	
209-3	35257-35264	Managed	_	_	_	_	
209-4	35265-35266	C	_	_	_	_	
209-5	35267-35273	series	_	_	_	_	
209-6	35274-35281	servers	_	_	_	_	
209-7	35281-35282	,	_	_	_	_	
209-8	35283-35285	it	_	_	_	_	
209-9	35286-35288	is	_	_	_	_	
209-10	35289-35301	configurable	_	_	_	_	
209-11	35302-35307	using	_	_	_	_	
209-12	35308-35313	Power	_	_	_	_	
209-13	35314-35321	Control	_	_	_	_	
209-14	35322-35330	Policies	_	_	_	_	
209-15	35331-35336	under	_	_	_	_	
209-16	35336-35337	.	_	_	_	_	

#Text=Servers Ò Policies Ò root Ò Power control Policies Ò Create Fan Power Control Policy Ò Fan speed Policy.
210-1	35338-35345	Servers	_	_	_	_	
210-2	35346-35347	Ò	_	_	_	_	
210-3	35348-35356	Policies	_	_	_	_	
210-4	35357-35358	Ò	_	_	_	_	
210-5	35359-35363	root	_	_	_	_	
210-6	35364-35365	Ò	_	_	_	_	
210-7	35366-35371	Power	_	_	_	_	
210-8	35372-35379	control	_	_	_	_	
210-9	35380-35388	Policies	_	_	_	_	
210-10	35389-35390	Ò	_	_	_	_	
210-11	35391-35397	Create	_	_	_	_	
210-12	35398-35401	Fan	_	_	_	_	
210-13	35402-35407	Power	_	_	_	_	
210-14	35408-35415	Control	_	_	_	_	
210-15	35416-35422	Policy	_	_	_	_	
210-16	35423-35424	Ò	_	_	_	_	
210-17	35425-35428	Fan	_	_	_	_	
210-18	35429-35434	speed	_	_	_	_	
210-19	35435-35441	Policy	_	_	_	_	
210-20	35441-35442	.	_	_	_	_	

#Text=Operating system tuning guidance for best performance
#Text=You can tune the OS to achieve the best performance.
211-1	35443-35452	Operating	_	_	_	_	
211-2	35453-35459	system	_	_	_	_	
211-3	35460-35466	tuning	_	_	_	_	
211-4	35467-35475	guidance	_	_	_	_	
211-5	35476-35479	for	_	_	_	_	
211-6	35480-35484	best	_	_	_	_	
211-7	35485-35496	performance	_	_	_	_	
211-8	35497-35500	You	_	_	_	_	
211-9	35501-35504	can	_	_	_	_	
211-10	35505-35509	tune	_	_	_	_	
211-11	35510-35513	the	_	_	_	_	
211-12	35514-35516	OS	_	_	_	_	
211-13	35517-35519	to	_	_	_	_	
211-14	35520-35527	achieve	_	_	_	_	
211-15	35528-35531	the	_	_	_	_	
211-16	35532-35536	best	_	_	_	_	
211-17	35537-35548	performance	_	_	_	_	
211-18	35548-35549	.	_	_	_	_	

#Text=For Linux, set the following:
#Text=●     x86_energy_perf_policy performance
#Text=When energy performance tuning is set to OS, the OS controls the Energy Performance Bias (EPB) policy.
212-1	35550-35553	For	_	_	_	_	
212-2	35554-35559	Linux	_	_	_	_	
212-3	35559-35560	,	_	_	_	_	
212-4	35561-35564	set	_	_	_	_	
212-5	35565-35568	the	_	_	_	_	
212-6	35569-35578	following	_	_	_	_	
212-7	35578-35579	:	_	_	_	_	
212-8	35580-35581	●	_	_	_	_	
212-9	35581-35585	    	_	_	_	_	
212-10	35586-35589	x86	_	_	_	_	
212-11	35589-35590	_	_	_	_	_	
212-12	35590-35608	energy_perf_policy	_	_	_	_	
212-13	35609-35620	performance	_	_	_	_	
212-14	35621-35625	When	_	_	_	_	
212-15	35626-35632	energy	_	_	_	_	
212-16	35633-35644	performance	_	_	_	_	
212-17	35645-35651	tuning	_	_	_	_	
212-18	35652-35654	is	_	_	_	_	
212-19	35655-35658	set	_	_	_	_	
212-20	35659-35661	to	_	_	_	_	
212-21	35662-35664	OS	_	_	_	_	
212-22	35664-35665	,	_	_	_	_	
212-23	35666-35669	the	_	_	_	_	
212-24	35670-35672	OS	_	_	_	_	
212-25	35673-35681	controls	_	_	_	_	
212-26	35682-35685	the	_	_	_	_	
212-27	35686-35692	Energy	_	_	_	_	
212-28	35693-35704	Performance	_	_	_	_	
212-29	35705-35709	Bias	_	_	_	_	
212-30	35710-35711	(	_	_	_	_	
212-31	35711-35714	EPB	_	_	_	_	
212-32	35714-35715	)	_	_	_	_	
212-33	35716-35722	policy	_	_	_	_	
212-34	35722-35723	.	_	_	_	_	

#Text=The EPB features controlled by the policy are Intel Turbo Boost override, memory clock enable (CKE), memory Output Status Register (OSR), Intel QuickPath Interconnect (QPI) L0p, C-state demotion, and I/O bandwidth P-limit.
213-1	35724-35727	The	_	_	_	_	
213-2	35728-35731	EPB	_	_	_	_	
213-3	35732-35740	features	_	_	_	_	
213-4	35741-35751	controlled	_	_	_	_	
213-5	35752-35754	by	_	_	_	_	
213-6	35755-35758	the	_	_	_	_	
213-7	35759-35765	policy	_	_	_	_	
213-8	35766-35769	are	_	_	_	_	
213-9	35770-35775	Intel	_	_	_	_	
213-10	35776-35781	Turbo	_	_	_	_	
213-11	35782-35787	Boost	_	_	_	_	
213-12	35788-35796	override	_	_	_	_	
213-13	35796-35797	,	_	_	_	_	
213-14	35798-35804	memory	_	_	_	_	
213-15	35805-35810	clock	_	_	_	_	
213-16	35811-35817	enable	_	_	_	_	
213-17	35818-35819	(	_	_	_	_	
213-18	35819-35822	CKE	_	_	_	_	
213-19	35822-35823	)	_	_	_	_	
213-20	35823-35824	,	_	_	_	_	
213-21	35825-35831	memory	_	_	_	_	
213-22	35832-35838	Output	_	_	_	_	
213-23	35839-35845	Status	_	_	_	_	
213-24	35846-35854	Register	_	_	_	_	
213-25	35855-35856	(	_	_	_	_	
213-26	35856-35859	OSR	_	_	_	_	
213-27	35859-35860	)	_	_	_	_	
213-28	35860-35861	,	_	_	_	_	
213-29	35862-35867	Intel	_	_	_	_	
213-30	35868-35877	QuickPath	_	_	_	_	
213-31	35878-35890	Interconnect	_	_	_	_	
213-32	35891-35892	(	_	_	_	_	
213-33	35892-35895	QPI	_	_	_	_	
213-34	35895-35896	)	_	_	_	_	
213-35	35897-35900	L0p	_	_	_	_	
213-36	35900-35901	,	_	_	_	_	
213-37	35902-35909	C-state	_	_	_	_	
213-38	35910-35918	demotion	_	_	_	_	
213-39	35918-35919	,	_	_	_	_	
213-40	35920-35923	and	_	_	_	_	
213-41	35924-35925	I	_	_	_	_	
213-42	35925-35926	/	_	_	_	_	
213-43	35926-35927	O	_	_	_	_	
213-44	35928-35937	bandwidth	_	_	_	_	
213-45	35938-35945	P-limit	_	_	_	_	
213-46	35945-35946	.	_	_	_	_	

#Text=The default OSPM profile is set to Performance, which will not sacrifice performance to save energy.
#Text=●     cpupower frequency-set -governor performance
#Text=The performance governor forces the CPU to use the highest possible clock frequency.
214-1	35947-35950	The	_	_	_	_	
214-2	35951-35958	default	_	_	_	_	
214-3	35959-35963	OSPM	_	_	_	_	
214-4	35964-35971	profile	_	_	_	_	
214-5	35972-35974	is	_	_	_	_	
214-6	35975-35978	set	_	_	_	_	
214-7	35979-35981	to	_	_	_	_	
214-8	35982-35993	Performance	_	_	_	_	
214-9	35993-35994	,	_	_	_	_	
214-10	35995-36000	which	_	_	_	_	
214-11	36001-36005	will	_	_	_	_	
214-12	36006-36009	not	_	_	_	_	
214-13	36010-36019	sacrifice	_	_	_	_	
214-14	36020-36031	performance	_	_	_	_	
214-15	36032-36034	to	_	_	_	_	
214-16	36035-36039	save	_	_	_	_	
214-17	36040-36046	energy	_	_	_	_	
214-18	36046-36047	.	_	_	_	_	
214-19	36048-36049	●	_	_	_	_	
214-20	36049-36053	    	_	_	_	_	
214-21	36054-36062	cpupower	_	_	_	_	
214-22	36063-36076	frequency-set	_	_	_	_	
214-23	36077-36078	-	_	_	_	_	
214-24	36078-36086	governor	_	_	_	_	
214-25	36087-36098	performance	_	_	_	_	
214-26	36099-36102	The	_	_	_	_	
214-27	36103-36114	performance	_	_	_	_	
214-28	36115-36123	governor	_	_	_	_	
214-29	36124-36130	forces	_	_	_	_	
214-30	36131-36134	the	_	_	_	_	
214-31	36135-36138	CPU	_	_	_	_	
214-32	36139-36141	to	_	_	_	_	
214-33	36142-36145	use	_	_	_	_	
214-34	36146-36149	the	_	_	_	_	
214-35	36150-36157	highest	_	_	_	_	
214-36	36158-36166	possible	_	_	_	_	
214-37	36167-36172	clock	_	_	_	_	
214-38	36173-36182	frequency	_	_	_	_	
214-39	36182-36183	.	_	_	_	_	

#Text=This frequency is statically set and will not change.
215-1	36184-36188	This	_	_	_	_	
215-2	36189-36198	frequency	_	_	_	_	
215-3	36199-36201	is	_	_	_	_	
215-4	36202-36212	statically	_	_	_	_	
215-5	36213-36216	set	_	_	_	_	
215-6	36217-36220	and	_	_	_	_	
215-7	36221-36225	will	_	_	_	_	
215-8	36226-36229	not	_	_	_	_	
215-9	36230-36236	change	_	_	_	_	
215-10	36236-36237	.	_	_	_	_	

#Text=Therefore, this particular governor offers no power-savings benefit.
216-1	36238-36247	Therefore	_	_	_	_	
216-2	36247-36248	,	_	_	_	_	
216-3	36249-36253	this	_	_	_	_	
216-4	36254-36264	particular	_	_	_	_	
216-5	36265-36273	governor	_	_	_	_	
216-6	36274-36280	offers	_	_	_	_	
216-7	36281-36283	no	_	_	_	_	
216-8	36284-36297	power-savings	_	_	_	_	
216-9	36298-36305	benefit	_	_	_	_	
216-10	36305-36306	.	_	_	_	_	

#Text=It is suitable only for hours of heavy workload, and even then, only during times in which the CPU is rarely (or never) idle.
217-1	36307-36309	It	_	_	_	_	
217-2	36310-36312	is	_	_	_	_	
217-3	36313-36321	suitable	_	_	_	_	
217-4	36322-36326	only	_	_	_	_	
217-5	36327-36330	for	_	_	_	_	
217-6	36331-36336	hours	_	_	_	_	
217-7	36337-36339	of	_	_	_	_	
217-8	36340-36345	heavy	_	_	_	_	
217-9	36346-36354	workload	_	_	_	_	
217-10	36354-36355	,	_	_	_	_	
217-11	36356-36359	and	_	_	_	_	
217-12	36360-36364	even	_	_	_	_	
217-13	36365-36369	then	_	_	_	_	
217-14	36369-36370	,	_	_	_	_	
217-15	36371-36375	only	_	_	_	_	
217-16	36376-36382	during	_	_	_	_	
217-17	36383-36388	times	_	_	_	_	
217-18	36389-36391	in	_	_	_	_	
217-19	36392-36397	which	_	_	_	_	
217-20	36398-36401	the	_	_	_	_	
217-21	36402-36405	CPU	_	_	_	_	
217-22	36406-36408	is	_	_	_	_	
217-23	36409-36415	rarely	_	_	_	_	
217-24	36416-36417	(	_	_	_	_	
217-25	36417-36419	or	_	_	_	_	
217-26	36420-36425	never	_	_	_	_	
217-27	36425-36426	)	_	_	_	_	
217-28	36427-36431	idle	_	_	_	_	
217-29	36431-36432	.	_	_	_	_	

#Text=The default setting is On Demand, which allows the CPU to achieve maximum clock frequency when the system load is high, and the minimum clock frequency when the system is idle.
218-1	36433-36436	The	_	_	_	_	
218-2	36437-36444	default	_	_	_	_	
218-3	36445-36452	setting	_	_	_	_	
218-4	36453-36455	is	_	_	_	_	
218-5	36456-36458	On	_	_	_	_	
218-6	36459-36465	Demand	_	_	_	_	
218-7	36465-36466	,	_	_	_	_	
218-8	36467-36472	which	_	_	_	_	
218-9	36473-36479	allows	_	_	_	_	
218-10	36480-36483	the	_	_	_	_	
218-11	36484-36487	CPU	_	_	_	_	
218-12	36488-36490	to	_	_	_	_	
218-13	36491-36498	achieve	_	_	_	_	
218-14	36499-36506	maximum	_	_	_	_	
218-15	36507-36512	clock	_	_	_	_	
218-16	36513-36522	frequency	_	_	_	_	
218-17	36523-36527	when	_	_	_	_	
218-18	36528-36531	the	_	_	_	_	
218-19	36532-36538	system	_	_	_	_	
218-20	36539-36543	load	_	_	_	_	
218-21	36544-36546	is	_	_	_	_	
218-22	36547-36551	high	_	_	_	_	
218-23	36551-36552	,	_	_	_	_	
218-24	36553-36556	and	_	_	_	_	
218-25	36557-36560	the	_	_	_	_	
218-26	36561-36568	minimum	_	_	_	_	
218-27	36569-36574	clock	_	_	_	_	
218-28	36575-36584	frequency	_	_	_	_	
218-29	36585-36589	when	_	_	_	_	
218-30	36590-36593	the	_	_	_	_	
218-31	36594-36600	system	_	_	_	_	
218-32	36601-36603	is	_	_	_	_	
218-33	36604-36608	idle	_	_	_	_	
218-34	36608-36609	.	_	_	_	_	

#Text=Although this setting allows the system to adjust power consumption according to system load, it does so at the expense of latency from frequency switching.
#Text=●     Edit /etc/init.d/grub.conf to set intel_pstate=disable
#Text=Intel_pstate is a part of the CPU performance scaling subsystem in the Linux kernel (CPUFreq).
219-1	36610-36618	Although	_	_	_	_	
219-2	36619-36623	this	_	_	_	_	
219-3	36624-36631	setting	_	_	_	_	
219-4	36632-36638	allows	_	_	_	_	
219-5	36639-36642	the	_	_	_	_	
219-6	36643-36649	system	_	_	_	_	
219-7	36650-36652	to	_	_	_	_	
219-8	36653-36659	adjust	_	_	_	_	
219-9	36660-36665	power	_	_	_	_	
219-10	36666-36677	consumption	_	_	_	_	
219-11	36678-36687	according	_	_	_	_	
219-12	36688-36690	to	_	_	_	_	
219-13	36691-36697	system	_	_	_	_	
219-14	36698-36702	load	_	_	_	_	
219-15	36702-36703	,	_	_	_	_	
219-16	36704-36706	it	_	_	_	_	
219-17	36707-36711	does	_	_	_	_	
219-18	36712-36714	so	_	_	_	_	
219-19	36715-36717	at	_	_	_	_	
219-20	36718-36721	the	_	_	_	_	
219-21	36722-36729	expense	_	_	_	_	
219-22	36730-36732	of	_	_	_	_	
219-23	36733-36740	latency	_	_	_	_	
219-24	36741-36745	from	_	_	_	_	
219-25	36746-36755	frequency	_	_	_	_	
219-26	36756-36765	switching	_	_	_	_	
219-27	36765-36766	.	_	_	_	_	
219-28	36767-36768	●	_	_	_	_	
219-29	36768-36772	    	_	_	_	_	
219-30	36773-36777	Edit	_	_	_	_	
219-31	36778-36779	/	_	_	_	_	
219-32	36779-36782	etc	_	_	_	_	
219-33	36782-36783	/	_	_	_	_	
219-34	36783-36789	init.d	_	_	_	_	
219-35	36789-36790	/	_	_	_	_	
219-36	36790-36799	grub.conf	_	_	_	_	
219-37	36800-36802	to	_	_	_	_	
219-38	36803-36806	set	_	_	_	_	
219-39	36807-36819	intel_pstate	*	parameter	_	_	
219-40	36819-36820	=	_	_	_	_	
219-41	36820-36827	disable	*	value	Associated-With	219-39	
219-42	36828-36840	Intel_pstate	_	_	_	_	
219-43	36841-36843	is	_	_	_	_	
219-44	36844-36845	a	_	_	_	_	
219-45	36846-36850	part	_	_	_	_	
219-46	36851-36853	of	_	_	_	_	
219-47	36854-36857	the	_	_	_	_	
219-48	36858-36861	CPU	_	_	_	_	
219-49	36862-36873	performance	_	_	_	_	
219-50	36874-36881	scaling	_	_	_	_	
219-51	36882-36891	subsystem	_	_	_	_	
219-52	36892-36894	in	_	_	_	_	
219-53	36895-36898	the	_	_	_	_	
219-54	36899-36904	Linux	_	_	_	_	
219-55	36905-36911	kernel	_	_	_	_	
219-56	36912-36913	(	_	_	_	_	
219-57	36913-36920	CPUFreq	_	_	_	_	
219-58	36920-36921	)	_	_	_	_	
219-59	36921-36922	.	_	_	_	_	

#Text=It is a power scaling driver is used automatically on later generations of Intel processors.
220-1	36923-36925	It	_	_	_	_	
220-2	36926-36928	is	_	_	_	_	
220-3	36929-36930	a	_	_	_	_	
220-4	36931-36936	power	_	_	_	_	
220-5	36937-36944	scaling	_	_	_	_	
220-6	36945-36951	driver	_	_	_	_	
220-7	36952-36954	is	_	_	_	_	
220-8	36955-36959	used	_	_	_	_	
220-9	36960-36973	automatically	_	_	_	_	
220-10	36974-36976	on	_	_	_	_	
220-11	36977-36982	later	_	_	_	_	
220-12	36983-36994	generations	_	_	_	_	
220-13	36995-36997	of	_	_	_	_	
220-14	36998-37003	Intel	_	_	_	_	
220-15	37004-37014	processors	_	_	_	_	
220-16	37014-37015	.	_	_	_	_	

#Text=This driver takes priority over other drivers and is built-in as opposed to being a module.
221-1	37016-37020	This	_	_	_	_	
221-2	37021-37027	driver	_	_	_	_	
221-3	37028-37033	takes	_	_	_	_	
221-4	37034-37042	priority	_	_	_	_	
221-5	37043-37047	over	_	_	_	_	
221-6	37048-37053	other	_	_	_	_	
221-7	37054-37061	drivers	_	_	_	_	
221-8	37062-37065	and	_	_	_	_	
221-9	37066-37068	is	_	_	_	_	
221-10	37069-37077	built-in	_	_	_	_	
221-11	37078-37080	as	_	_	_	_	
221-12	37081-37088	opposed	_	_	_	_	
221-13	37089-37091	to	_	_	_	_	
221-14	37092-37097	being	_	_	_	_	
221-15	37098-37099	a	_	_	_	_	
221-16	37100-37106	module	_	_	_	_	
221-17	37106-37107	.	_	_	_	_	

#Text=You can force pstate off by appending intel_pstate=disable to the kernel arguments (edit /etc/default/grub)
#Text=●     tuned-adm profile latency-performance
#Text=The tuned-adm tool allows users to easily switch among a number of profiles that have been designed to enhance performance for specific use cases.
222-1	37108-37111	You	_	_	_	_	
222-2	37112-37115	can	_	_	_	_	
222-3	37116-37121	force	_	_	_	_	
222-4	37122-37128	pstate	_	_	_	_	
222-5	37129-37132	off	_	_	_	_	
222-6	37133-37135	by	_	_	_	_	
222-7	37136-37145	appending	_	_	_	_	
222-8	37146-37158	intel_pstate	_	_	_	_	
222-9	37158-37159	=	_	_	_	_	
222-10	37159-37166	disable	_	_	_	_	
222-11	37167-37169	to	_	_	_	_	
222-12	37170-37173	the	_	_	_	_	
222-13	37174-37180	kernel	_	_	_	_	
222-14	37181-37190	arguments	_	_	_	_	
222-15	37191-37192	(	_	_	_	_	
222-16	37192-37196	edit	_	_	_	_	
222-17	37197-37198	/	_	_	_	_	
222-18	37198-37201	etc	_	_	_	_	
222-19	37201-37202	/	_	_	_	_	
222-20	37202-37209	default	_	_	_	_	
222-21	37209-37210	/	_	_	_	_	
222-22	37210-37214	grub	_	_	_	_	
222-23	37214-37215	)	_	_	_	_	
222-24	37216-37217	●	_	_	_	_	
222-25	37217-37221	    	_	_	_	_	
222-26	37222-37231	tuned-adm	_	_	_	_	
222-27	37232-37239	profile	_	_	_	_	
222-28	37240-37259	latency-performance	_	_	_	_	
222-29	37260-37263	The	_	_	_	_	
222-30	37264-37273	tuned-adm	_	_	_	_	
222-31	37274-37278	tool	_	_	_	_	
222-32	37279-37285	allows	_	_	_	_	
222-33	37286-37291	users	_	_	_	_	
222-34	37292-37294	to	_	_	_	_	
222-35	37295-37301	easily	_	_	_	_	
222-36	37302-37308	switch	_	_	_	_	
222-37	37309-37314	among	_	_	_	_	
222-38	37315-37316	a	_	_	_	_	
222-39	37317-37323	number	_	_	_	_	
222-40	37324-37326	of	_	_	_	_	
222-41	37327-37335	profiles	_	_	_	_	
222-42	37336-37340	that	_	_	_	_	
222-43	37341-37345	have	_	_	_	_	
222-44	37346-37350	been	_	_	_	_	
222-45	37351-37359	designed	_	_	_	_	
222-46	37360-37362	to	_	_	_	_	
222-47	37363-37370	enhance	_	_	_	_	
222-48	37371-37382	performance	_	_	_	_	
222-49	37383-37386	for	_	_	_	_	
222-50	37387-37395	specific	_	_	_	_	
222-51	37396-37399	use	_	_	_	_	
222-52	37400-37405	cases	_	_	_	_	
222-53	37405-37406	.	_	_	_	_	

#Text=You can apply the tuned-admin server profile for typical latency performance tuning.
223-1	37407-37410	You	_	_	_	_	
223-2	37411-37414	can	_	_	_	_	
223-3	37415-37420	apply	_	_	_	_	
223-4	37421-37424	the	_	_	_	_	
223-5	37425-37436	tuned-admin	_	_	_	_	
223-6	37437-37443	server	_	_	_	_	
223-7	37444-37451	profile	_	_	_	_	
223-8	37452-37455	for	_	_	_	_	
223-9	37456-37463	typical	_	_	_	_	
223-10	37464-37471	latency	_	_	_	_	
223-11	37472-37483	performance	_	_	_	_	
223-12	37484-37490	tuning	_	_	_	_	
223-13	37490-37491	.	_	_	_	_	

#Text=It disables the tuned and ktune power-saving mechanisms.
224-1	37492-37494	It	_	_	_	_	
224-2	37495-37503	disables	_	_	_	_	
224-3	37504-37507	the	_	_	_	_	
224-4	37508-37513	tuned	_	_	_	_	
224-5	37514-37517	and	_	_	_	_	
224-6	37518-37523	ktune	_	_	_	_	
224-7	37524-37536	power-saving	_	_	_	_	
224-8	37537-37547	mechanisms	_	_	_	_	
224-9	37547-37548	.	_	_	_	_	

#Text=The CPU speed mode changes to Performance.
225-1	37549-37552	The	_	_	_	_	
225-2	37553-37556	CPU	_	_	_	_	
225-3	37557-37562	speed	_	_	_	_	
225-4	37563-37567	mode	_	_	_	_	
225-5	37568-37575	changes	_	_	_	_	
225-6	37576-37578	to	_	_	_	_	
225-7	37579-37590	Performance	_	_	_	_	
225-8	37590-37591	.	_	_	_	_	

#Text=The I/O elevator is changed to Deadline for each device.
226-1	37592-37595	The	_	_	_	_	
226-2	37596-37597	I	_	_	_	_	
226-3	37597-37598	/	_	_	_	_	
226-4	37598-37599	O	_	_	_	_	
226-5	37600-37608	elevator	_	_	_	_	
226-6	37609-37611	is	_	_	_	_	
226-7	37612-37619	changed	_	_	_	_	
226-8	37620-37622	to	_	_	_	_	
226-9	37623-37631	Deadline	_	_	_	_	
226-10	37632-37635	for	_	_	_	_	
226-11	37636-37640	each	_	_	_	_	
226-12	37641-37647	device	_	_	_	_	
226-13	37647-37648	.	_	_	_	_	

#Text=The cpu_dma_latency parameter is registered with a value of 0 (the lowest possible latency) for power management QoS to limit latency where possible.
227-1	37649-37652	The	_	_	_	_	
227-2	37653-37668	cpu_dma_latency	_	_	_	_	
227-3	37669-37678	parameter	_	_	_	_	
227-4	37679-37681	is	_	_	_	_	
227-5	37682-37692	registered	_	_	_	_	
227-6	37693-37697	with	_	_	_	_	
227-7	37698-37699	a	_	_	_	_	
227-8	37700-37705	value	_	_	_	_	
227-9	37706-37708	of	_	_	_	_	
227-10	37709-37710	0	_	_	_	_	
227-11	37711-37712	(	_	_	_	_	
227-12	37712-37715	the	_	_	_	_	
227-13	37716-37722	lowest	_	_	_	_	
227-14	37723-37731	possible	_	_	_	_	
227-15	37732-37739	latency	_	_	_	_	
227-16	37739-37740	)	_	_	_	_	
227-17	37741-37744	for	_	_	_	_	
227-18	37745-37750	power	_	_	_	_	
227-19	37751-37761	management	_	_	_	_	
227-20	37762-37765	QoS	_	_	_	_	
227-21	37766-37768	to	_	_	_	_	
227-22	37769-37774	limit	_	_	_	_	
227-23	37775-37782	latency	_	_	_	_	
227-24	37783-37788	where	_	_	_	_	
227-25	37789-37797	possible	_	_	_	_	
227-26	37797-37798	.	_	_	_	_	

#Text=Use the following Linux tools to measure maximum turbo frequency and power states:
#Text=●     Turbostat: Turbostat is provided in the kernel-tools package.
228-1	37799-37802	Use	_	_	_	_	
228-2	37803-37806	the	_	_	_	_	
228-3	37807-37816	following	_	_	_	_	
228-4	37817-37822	Linux	_	_	_	_	
228-5	37823-37828	tools	_	_	_	_	
228-6	37829-37831	to	_	_	_	_	
228-7	37832-37839	measure	_	_	_	_	
228-8	37840-37847	maximum	_	_	_	_	
228-9	37848-37853	turbo	_	_	_	_	
228-10	37854-37863	frequency	_	_	_	_	
228-11	37864-37867	and	_	_	_	_	
228-12	37868-37873	power	_	_	_	_	
228-13	37874-37880	states	_	_	_	_	
228-14	37880-37881	:	_	_	_	_	
228-15	37882-37883	●	_	_	_	_	
228-16	37883-37887	    	_	_	_	_	
228-17	37888-37897	Turbostat	_	_	_	_	
228-18	37897-37898	:	_	_	_	_	
228-19	37899-37908	Turbostat	_	_	_	_	
228-20	37909-37911	is	_	_	_	_	
228-21	37912-37920	provided	_	_	_	_	
228-22	37921-37923	in	_	_	_	_	
228-23	37924-37927	the	_	_	_	_	
228-24	37928-37940	kernel-tools	_	_	_	_	
228-25	37941-37948	package	_	_	_	_	
228-26	37948-37949	.	_	_	_	_	

#Text=It reports on processor topology, frequency, idle power-state statistics, temperature, and power use on Intel 64 processors.
229-1	37950-37952	It	_	_	_	_	
229-2	37953-37960	reports	_	_	_	_	
229-3	37961-37963	on	_	_	_	_	
229-4	37964-37973	processor	_	_	_	_	
229-5	37974-37982	topology	_	_	_	_	
229-6	37982-37983	,	_	_	_	_	
229-7	37984-37993	frequency	_	_	_	_	
229-8	37993-37994	,	_	_	_	_	
229-9	37995-37999	idle	_	_	_	_	
229-10	38000-38011	power-state	_	_	_	_	
229-11	38012-38022	statistics	_	_	_	_	
229-12	38022-38023	,	_	_	_	_	
229-13	38024-38035	temperature	_	_	_	_	
229-14	38035-38036	,	_	_	_	_	
229-15	38037-38040	and	_	_	_	_	
229-16	38041-38046	power	_	_	_	_	
229-17	38047-38050	use	_	_	_	_	
229-18	38051-38053	on	_	_	_	_	
229-19	38054-38059	Intel	_	_	_	_	
229-20	38060-38062	64	_	_	_	_	
229-21	38063-38073	processors	_	_	_	_	
229-22	38073-38074	.	_	_	_	_	

#Text=It is useful for identifying servers that are inefficient in terms of power use or idle time.
230-1	38075-38077	It	_	_	_	_	
230-2	38078-38080	is	_	_	_	_	
230-3	38081-38087	useful	_	_	_	_	
230-4	38088-38091	for	_	_	_	_	
230-5	38092-38103	identifying	_	_	_	_	
230-6	38104-38111	servers	_	_	_	_	
230-7	38112-38116	that	_	_	_	_	
230-8	38117-38120	are	_	_	_	_	
230-9	38121-38132	inefficient	_	_	_	_	
230-10	38133-38135	in	_	_	_	_	
230-11	38136-38141	terms	_	_	_	_	
230-12	38142-38144	of	_	_	_	_	
230-13	38145-38150	power	_	_	_	_	
230-14	38151-38154	use	_	_	_	_	
230-15	38155-38157	or	_	_	_	_	
230-16	38158-38162	idle	_	_	_	_	
230-17	38163-38167	time	_	_	_	_	
230-18	38167-38168	.	_	_	_	_	

#Text=It also helps identify the rate of System Management Interrupts (SMIs) occurring on the system, and it can be used to verify the effects of power management tuning.
231-1	38169-38171	It	_	_	_	_	
231-2	38172-38176	also	_	_	_	_	
231-3	38177-38182	helps	_	_	_	_	
231-4	38183-38191	identify	_	_	_	_	
231-5	38192-38195	the	_	_	_	_	
231-6	38196-38200	rate	_	_	_	_	
231-7	38201-38203	of	_	_	_	_	
231-8	38204-38210	System	_	_	_	_	
231-9	38211-38221	Management	_	_	_	_	
231-10	38222-38232	Interrupts	_	_	_	_	
231-11	38233-38234	(	_	_	_	_	
231-12	38234-38238	SMIs	_	_	_	_	
231-13	38238-38239	)	_	_	_	_	
231-14	38240-38249	occurring	_	_	_	_	
231-15	38250-38252	on	_	_	_	_	
231-16	38253-38256	the	_	_	_	_	
231-17	38257-38263	system	_	_	_	_	
231-18	38263-38264	,	_	_	_	_	
231-19	38265-38268	and	_	_	_	_	
231-20	38269-38271	it	_	_	_	_	
231-21	38272-38275	can	_	_	_	_	
231-22	38276-38278	be	_	_	_	_	
231-23	38279-38283	used	_	_	_	_	
231-24	38284-38286	to	_	_	_	_	
231-25	38287-38293	verify	_	_	_	_	
231-26	38294-38297	the	_	_	_	_	
231-27	38298-38305	effects	_	_	_	_	
231-28	38306-38308	of	_	_	_	_	
231-29	38309-38314	power	_	_	_	_	
231-30	38315-38325	management	_	_	_	_	
231-31	38326-38332	tuning	_	_	_	_	
231-32	38332-38333	.	_	_	_	_	

#Text=Use this setting:
#Text=turbostat -S
#Text=●     Intel PTUmon: The Intel Performance Tuning Utility (PTU) is a cross-platform performance analysis tool set.
232-1	38334-38337	Use	_	_	_	_	
232-2	38338-38342	this	_	_	_	_	
232-3	38343-38350	setting	_	_	_	_	
232-4	38350-38351	:	_	_	_	_	
232-5	38352-38361	turbostat	_	_	_	_	
232-6	38362-38363	-	_	_	_	_	
232-7	38363-38364	S	_	_	_	_	
232-8	38365-38366	●	_	_	_	_	
232-9	38366-38370	    	_	_	_	_	
232-10	38371-38376	Intel	_	_	_	_	
232-11	38377-38383	PTUmon	_	_	_	_	
232-12	38383-38384	:	_	_	_	_	
232-13	38385-38388	The	_	_	_	_	
232-14	38389-38394	Intel	_	_	_	_	
232-15	38395-38406	Performance	_	_	_	_	
232-16	38407-38413	Tuning	_	_	_	_	
232-17	38414-38421	Utility	_	_	_	_	
232-18	38422-38423	(	_	_	_	_	
232-19	38423-38426	PTU	_	_	_	_	
232-20	38426-38427	)	_	_	_	_	
232-21	38428-38430	is	_	_	_	_	
232-22	38431-38432	a	_	_	_	_	
232-23	38433-38447	cross-platform	_	_	_	_	
232-24	38448-38459	performance	_	_	_	_	
232-25	38460-38468	analysis	_	_	_	_	
232-26	38469-38473	tool	_	_	_	_	
232-27	38474-38477	set	_	_	_	_	
232-28	38477-38478	.	_	_	_	_	

#Text=In addition to such traditional capabilities as tools to identify the hottest modules and functions of the application, track call sequences, and identify performance-critical source code, Intel PTU has new, more powerful data collection, analysis, and visualization capabilities.
233-1	38479-38481	In	_	_	_	_	
233-2	38482-38490	addition	_	_	_	_	
233-3	38491-38493	to	_	_	_	_	
233-4	38494-38498	such	_	_	_	_	
233-5	38499-38510	traditional	_	_	_	_	
233-6	38511-38523	capabilities	_	_	_	_	
233-7	38524-38526	as	_	_	_	_	
233-8	38527-38532	tools	_	_	_	_	
233-9	38533-38535	to	_	_	_	_	
233-10	38536-38544	identify	_	_	_	_	
233-11	38545-38548	the	_	_	_	_	
233-12	38549-38556	hottest	_	_	_	_	
233-13	38557-38564	modules	_	_	_	_	
233-14	38565-38568	and	_	_	_	_	
233-15	38569-38578	functions	_	_	_	_	
233-16	38579-38581	of	_	_	_	_	
233-17	38582-38585	the	_	_	_	_	
233-18	38586-38597	application	_	_	_	_	
233-19	38597-38598	,	_	_	_	_	
233-20	38599-38604	track	_	_	_	_	
233-21	38605-38609	call	_	_	_	_	
233-22	38610-38619	sequences	_	_	_	_	
233-23	38619-38620	,	_	_	_	_	
233-24	38621-38624	and	_	_	_	_	
233-25	38625-38633	identify	_	_	_	_	
233-26	38634-38654	performance-critical	_	_	_	_	
233-27	38655-38661	source	_	_	_	_	
233-28	38662-38666	code	_	_	_	_	
233-29	38666-38667	,	_	_	_	_	
233-30	38668-38673	Intel	_	_	_	_	
233-31	38674-38677	PTU	_	_	_	_	
233-32	38678-38681	has	_	_	_	_	
233-33	38682-38685	new	_	_	_	_	
233-34	38685-38686	,	_	_	_	_	
233-35	38687-38691	more	_	_	_	_	
233-36	38692-38700	powerful	_	_	_	_	
233-37	38701-38705	data	_	_	_	_	
233-38	38706-38716	collection	_	_	_	_	
233-39	38716-38717	,	_	_	_	_	
233-40	38718-38726	analysis	_	_	_	_	
233-41	38726-38727	,	_	_	_	_	
233-42	38728-38731	and	_	_	_	_	
233-43	38732-38745	visualization	_	_	_	_	
233-44	38746-38758	capabilities	_	_	_	_	
233-45	38758-38759	.	_	_	_	_	

#Text=Intel PTU offers processor hardware event counters for in-depth analysis of the memory system performance, architectural tuning, and other features.
234-1	38760-38765	Intel	_	_	_	_	
234-2	38766-38769	PTU	_	_	_	_	
234-3	38770-38776	offers	_	_	_	_	
234-4	38777-38786	processor	_	_	_	_	
234-5	38787-38795	hardware	_	_	_	_	
234-6	38796-38801	event	_	_	_	_	
234-7	38802-38810	counters	_	_	_	_	
234-8	38811-38814	for	_	_	_	_	
234-9	38815-38823	in-depth	_	_	_	_	
234-10	38824-38832	analysis	_	_	_	_	
234-11	38833-38835	of	_	_	_	_	
234-12	38836-38839	the	_	_	_	_	
234-13	38840-38846	memory	_	_	_	_	
234-14	38847-38853	system	_	_	_	_	
234-15	38854-38865	performance	_	_	_	_	
234-16	38865-38866	,	_	_	_	_	
234-17	38867-38880	architectural	_	_	_	_	
234-18	38881-38887	tuning	_	_	_	_	
234-19	38887-38888	,	_	_	_	_	
234-20	38889-38892	and	_	_	_	_	
234-21	38893-38898	other	_	_	_	_	
234-22	38899-38907	features	_	_	_	_	
234-23	38907-38908	.	_	_	_	_	

#Text=Use this setting:
#Text=ptumon -l -i 5000
#Text=Refer the following resources for more information about OS performance tuning:
#Text=●     Microsoft Windows and Hyper-V tuning is straightforward: set the power policy to High Performance.
235-1	38909-38912	Use	_	_	_	_	
235-2	38913-38917	this	_	_	_	_	
235-3	38918-38925	setting	_	_	_	_	
235-4	38925-38926	:	_	_	_	_	
235-5	38927-38933	ptumon	_	_	_	_	
235-6	38934-38935	-	_	_	_	_	
235-7	38935-38936	l	_	_	_	_	
235-8	38937-38938	-	_	_	_	_	
235-9	38938-38939	i	_	_	_	_	
235-10	38940-38944	5000	_	_	_	_	
235-11	38945-38950	Refer	_	_	_	_	
235-12	38951-38954	the	_	_	_	_	
235-13	38955-38964	following	_	_	_	_	
235-14	38965-38974	resources	_	_	_	_	
235-15	38975-38978	for	_	_	_	_	
235-16	38979-38983	more	_	_	_	_	
235-17	38984-38995	information	_	_	_	_	
235-18	38996-39001	about	_	_	_	_	
235-19	39002-39004	OS	_	_	_	_	
235-20	39005-39016	performance	_	_	_	_	
235-21	39017-39023	tuning	_	_	_	_	
235-22	39023-39024	:	_	_	_	_	
235-23	39025-39026	●	_	_	_	_	
235-24	39026-39030	    	_	_	_	_	
235-25	39031-39040	Microsoft	_	_	_	_	
235-26	39041-39048	Windows	_	_	_	_	
235-27	39049-39052	and	_	_	_	_	
235-28	39053-39060	Hyper-V	_	_	_	_	
235-29	39061-39067	tuning	_	_	_	_	
235-30	39068-39070	is	_	_	_	_	
235-31	39071-39086	straightforward	_	_	_	_	
235-32	39086-39087	:	_	_	_	_	
235-33	39088-39091	set	_	_	_	_	
235-34	39092-39095	the	_	_	_	_	
235-35	39096-39101	power	_	_	_	_	
235-36	39102-39108	policy	_	_	_	_	
235-37	39109-39111	to	_	_	_	_	
235-38	39112-39116	High	_	_	_	_	
235-39	39117-39128	Performance	_	_	_	_	
235-40	39128-39129	.	_	_	_	_	

#Text=See:
#Text=◦    Performance Tuning Guidelines for Microsoft Windows Server 2012 R2
#Text=◦    Performance Tuning Guidelines for Microsoft Windows Server 2016
#Text=●     VMware ESXi tuning is straightforward as well: set the power policy to High Performance.
236-1	39130-39133	See	_	_	_	_	
236-2	39133-39134	:	_	_	_	_	
236-3	39135-39136	◦	_	_	_	_	
236-4	39136-39139	   	_	_	_	_	
236-5	39140-39151	Performance	_	_	_	_	
236-6	39152-39158	Tuning	_	_	_	_	
236-7	39159-39169	Guidelines	_	_	_	_	
236-8	39170-39173	for	_	_	_	_	
236-9	39174-39183	Microsoft	_	_	_	_	
236-10	39184-39191	Windows	_	_	_	_	
236-11	39192-39198	Server	_	_	_	_	
236-12	39199-39203	2012	_	_	_	_	
236-13	39204-39206	R2	_	_	_	_	
236-14	39207-39208	◦	_	_	_	_	
236-15	39208-39211	   	_	_	_	_	
236-16	39212-39223	Performance	_	_	_	_	
236-17	39224-39230	Tuning	_	_	_	_	
236-18	39231-39241	Guidelines	_	_	_	_	
236-19	39242-39245	for	_	_	_	_	
236-20	39246-39255	Microsoft	_	_	_	_	
236-21	39256-39263	Windows	_	_	_	_	
236-22	39264-39270	Server	_	_	_	_	
236-23	39271-39275	2016	_	_	_	_	
236-24	39276-39277	●	_	_	_	_	
236-25	39277-39281	    	_	_	_	_	
236-26	39282-39288	VMware	_	_	_	_	
236-27	39289-39293	ESXi	_	_	_	_	
236-28	39294-39300	tuning	_	_	_	_	
236-29	39301-39303	is	_	_	_	_	
236-30	39304-39319	straightforward	_	_	_	_	
236-31	39320-39322	as	_	_	_	_	
236-32	39323-39327	well	_	_	_	_	
236-33	39327-39328	:	_	_	_	_	
236-34	39329-39332	set	_	_	_	_	
236-35	39333-39336	the	_	_	_	_	
236-36	39337-39342	power	_	_	_	_	
236-37	39343-39349	policy	_	_	_	_	
236-38	39350-39352	to	_	_	_	_	
236-39	39353-39357	High	_	_	_	_	
236-40	39358-39369	Performance	_	_	_	_	
236-41	39369-39370	.	_	_	_	_	

#Text=See:
#Text=◦    https://www.vmware.com/content/dam/digitalmarketing/vmware/en/pdf/techpaper/vmware-perfbest-practices-vsphere6-0-white-paper.pdf
#Text=●     To tune Citrix XenServer, set xenpm set-scaling-governor performance.
237-1	39371-39374	See	_	_	_	_	
237-2	39374-39375	:	_	_	_	_	
237-3	39376-39377	◦	_	_	_	_	
237-4	39377-39380	   	_	_	_	_	
237-5	39381-39386	https	_	_	_	_	
237-6	39386-39387	:	_	_	_	_	
237-7	39387-39388	/	_	_	_	_	
237-8	39388-39389	/	_	_	_	_	
237-9	39389-39403	www.vmware.com	_	_	_	_	
237-10	39403-39404	/	_	_	_	_	
237-11	39404-39411	content	_	_	_	_	
237-12	39411-39412	/	_	_	_	_	
237-13	39412-39415	dam	_	_	_	_	
237-14	39415-39416	/	_	_	_	_	
237-15	39416-39432	digitalmarketing	_	_	_	_	
237-16	39432-39433	/	_	_	_	_	
237-17	39433-39439	vmware	_	_	_	_	
237-18	39439-39440	/	_	_	_	_	
237-19	39440-39442	en	_	_	_	_	
237-20	39442-39443	/	_	_	_	_	
237-21	39443-39446	pdf	_	_	_	_	
237-22	39446-39447	/	_	_	_	_	
237-23	39447-39456	techpaper	_	_	_	_	
237-24	39456-39457	/	_	_	_	_	
237-25	39457-39491	vmware-perfbest-practices-vsphere6	_	_	_	_	
237-26	39491-39492	-	_	_	_	_	
237-27	39492-39493	0	_	_	_	_	
237-28	39493-39494	-	_	_	_	_	
237-29	39494-39509	white-paper.pdf	_	_	_	_	
237-30	39510-39511	●	_	_	_	_	
237-31	39511-39515	    	_	_	_	_	
237-32	39516-39518	To	_	_	_	_	
237-33	39519-39523	tune	_	_	_	_	
237-34	39524-39530	Citrix	_	_	_	_	
237-35	39531-39540	XenServer	_	_	_	_	
237-36	39540-39541	,	_	_	_	_	
237-37	39542-39545	set	_	_	_	_	
237-38	39546-39551	xenpm	_	_	_	_	
237-39	39552-39572	set-scaling-governor	_	_	_	_	
237-40	39573-39584	performance	_	_	_	_	
237-41	39584-39585	.	_	_	_	_	

#Text=See:
#Text=◦    https://support.citrix.com/article/CTX200390
#Text=●     To tune Red Hat Enterprise Linux, set CPU power to Performance.
238-1	39586-39589	See	_	_	_	_	
238-2	39589-39590	:	_	_	_	_	
238-3	39591-39592	◦	_	_	_	_	
238-4	39592-39595	   	_	_	_	_	
238-5	39596-39601	https	_	_	_	_	
238-6	39601-39602	:	_	_	_	_	
238-7	39602-39603	/	_	_	_	_	
238-8	39603-39604	/	_	_	_	_	
238-9	39604-39622	support.citrix.com	_	_	_	_	
238-10	39622-39623	/	_	_	_	_	
238-11	39623-39630	article	_	_	_	_	
238-12	39630-39631	/	_	_	_	_	
238-13	39631-39640	CTX200390	_	_	_	_	
238-14	39641-39642	●	_	_	_	_	
238-15	39642-39646	    	_	_	_	_	
238-16	39647-39649	To	_	_	_	_	
238-17	39650-39654	tune	_	_	_	_	
238-18	39655-39658	Red	_	_	_	_	
238-19	39659-39662	Hat	_	_	_	_	
238-20	39663-39673	Enterprise	_	_	_	_	
238-21	39674-39679	Linux	_	_	_	_	
238-22	39679-39680	,	_	_	_	_	
238-23	39681-39684	set	_	_	_	_	
238-24	39685-39688	CPU	_	_	_	_	
238-25	39689-39694	power	_	_	_	_	
238-26	39695-39697	to	_	_	_	_	
238-27	39698-39709	Performance	_	_	_	_	
238-28	39709-39710	.	_	_	_	_	

#Text=See:
#Text=◦    https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/pdf/Performance_Tuning_Guide/Red_Hat_Enterprise_Linux-7-Performance_Tuning_Guide-en-US.pdf
#Text=●     To tune SUSE Enterprise Linux, set CPU power to Performance.
239-1	39711-39714	See	_	_	_	_	
239-2	39714-39715	:	_	_	_	_	
239-3	39716-39717	◦	_	_	_	_	
239-4	39717-39720	   	_	_	_	_	
239-5	39721-39726	https	_	_	_	_	
239-6	39726-39727	:	_	_	_	_	
239-7	39727-39728	/	_	_	_	_	
239-8	39728-39729	/	_	_	_	_	
239-9	39729-39746	access.redhat.com	_	_	_	_	
239-10	39746-39747	/	_	_	_	_	
239-11	39747-39760	documentation	_	_	_	_	
239-12	39760-39761	/	_	_	_	_	
239-13	39761-39766	en-US	_	_	_	_	
239-14	39766-39767	/	_	_	_	_	
239-15	39767-39791	Red_Hat_Enterprise_Linux	_	_	_	_	
239-16	39791-39792	/	_	_	_	_	
239-17	39792-39793	7	_	_	_	_	
239-18	39793-39794	/	_	_	_	_	
239-19	39794-39797	pdf	_	_	_	_	
239-20	39797-39798	/	_	_	_	_	
239-21	39798-39822	Performance_Tuning_Guide	_	_	_	_	
239-22	39822-39823	/	_	_	_	_	
239-23	39823-39847	Red_Hat_Enterprise_Linux	_	_	_	_	
239-24	39847-39848	-	_	_	_	_	
239-25	39848-39849	7	_	_	_	_	
239-26	39849-39850	-	_	_	_	_	
239-27	39850-39884	Performance_Tuning_Guide-en-US.pdf	_	_	_	_	
239-28	39885-39886	●	_	_	_	_	
239-29	39886-39890	    	_	_	_	_	
239-30	39891-39893	To	_	_	_	_	
239-31	39894-39898	tune	_	_	_	_	
239-32	39899-39903	SUSE	_	_	_	_	
239-33	39904-39914	Enterprise	_	_	_	_	
239-34	39915-39920	Linux	_	_	_	_	
239-35	39920-39921	,	_	_	_	_	
239-36	39922-39925	set	_	_	_	_	
239-37	39926-39929	CPU	_	_	_	_	
239-38	39930-39935	power	_	_	_	_	
239-39	39936-39938	to	_	_	_	_	
239-40	39939-39950	Performance	_	_	_	_	
239-41	39950-39951	.	_	_	_	_	

#Text=See:
#Text=◦    https://www.suse.com/documentation/sles-12/pdfdoc/book_sle_tuning/book_sle_tuning.pdf
#Text=BIOS recommendations for various workload types
#Text=This document discusses BIOS settings for the following types of workloads:
#Text=●     Online transaction processing (OLTP)
#Text=●     Virtualization
#Text=●     High-Performance Computing (HPC)
#Text=●     Java Enterprise Edition (Java EE) application server
#Text=●     Analytics database Decision-Support System (DSS)
#Text=Table 5 summarizes the BIOS options and settings available for various workloads.
240-1	39952-39955	See	_	_	_	_	
240-2	39955-39956	:	_	_	_	_	
240-3	39957-39958	◦	_	_	_	_	
240-4	39958-39961	   	_	_	_	_	
240-5	39962-39967	https	_	_	_	_	
240-6	39967-39968	:	_	_	_	_	
240-7	39968-39969	/	_	_	_	_	
240-8	39969-39970	/	_	_	_	_	
240-9	39970-39982	www.suse.com	_	_	_	_	
240-10	39982-39983	/	_	_	_	_	
240-11	39983-39996	documentation	_	_	_	_	
240-12	39996-39997	/	_	_	_	_	
240-13	39997-40001	sles	_	_	_	_	
240-14	40001-40002	-	_	_	_	_	
240-15	40002-40004	12	_	_	_	_	
240-16	40004-40005	/	_	_	_	_	
240-17	40005-40011	pdfdoc	_	_	_	_	
240-18	40011-40012	/	_	_	_	_	
240-19	40012-40027	book_sle_tuning	_	_	_	_	
240-20	40027-40028	/	_	_	_	_	
240-21	40028-40047	book_sle_tuning.pdf	_	_	_	_	
240-22	40048-40052	BIOS	_	_	_	_	
240-23	40053-40068	recommendations	_	_	_	_	
240-24	40069-40072	for	_	_	_	_	
240-25	40073-40080	various	_	_	_	_	
240-26	40081-40089	workload	_	_	_	_	
240-27	40090-40095	types	_	_	_	_	
240-28	40096-40100	This	_	_	_	_	
240-29	40101-40109	document	_	_	_	_	
240-30	40110-40119	discusses	_	_	_	_	
240-31	40120-40124	BIOS	_	_	_	_	
240-32	40125-40133	settings	_	_	_	_	
240-33	40134-40137	for	_	_	_	_	
240-34	40138-40141	the	_	_	_	_	
240-35	40142-40151	following	_	_	_	_	
240-36	40152-40157	types	_	_	_	_	
240-37	40158-40160	of	_	_	_	_	
240-38	40161-40170	workloads	_	_	_	_	
240-39	40170-40171	:	_	_	_	_	
240-40	40172-40173	●	_	_	_	_	
240-41	40173-40177	    	_	_	_	_	
240-42	40178-40184	Online	_	_	_	_	
240-43	40185-40196	transaction	_	_	_	_	
240-44	40197-40207	processing	_	_	_	_	
240-45	40208-40209	(	_	_	_	_	
240-46	40209-40213	OLTP	_	_	_	_	
240-47	40213-40214	)	_	_	_	_	
240-48	40215-40216	●	_	_	_	_	
240-49	40216-40220	    	_	_	_	_	
240-50	40221-40235	Virtualization	_	_	_	_	
240-51	40236-40237	●	_	_	_	_	
240-52	40237-40241	    	_	_	_	_	
240-53	40242-40258	High-Performance	_	_	_	_	
240-54	40259-40268	Computing	_	_	_	_	
240-55	40269-40270	(	_	_	_	_	
240-56	40270-40273	HPC	_	_	_	_	
240-57	40273-40274	)	_	_	_	_	
240-58	40275-40276	●	_	_	_	_	
240-59	40276-40280	    	_	_	_	_	
240-60	40281-40285	Java	_	_	_	_	
240-61	40286-40296	Enterprise	_	_	_	_	
240-62	40297-40304	Edition	_	_	_	_	
240-63	40305-40306	(	_	_	_	_	
240-64	40306-40310	Java	_	_	_	_	
240-65	40311-40313	EE	_	_	_	_	
240-66	40313-40314	)	_	_	_	_	
240-67	40315-40326	application	_	_	_	_	
240-68	40327-40333	server	_	_	_	_	
240-69	40334-40335	●	_	_	_	_	
240-70	40335-40339	    	_	_	_	_	
240-71	40340-40349	Analytics	_	_	_	_	
240-72	40350-40358	database	_	_	_	_	
240-73	40359-40375	Decision-Support	_	_	_	_	
240-74	40376-40382	System	_	_	_	_	
240-75	40383-40384	(	_	_	_	_	
240-76	40384-40387	DSS	_	_	_	_	
240-77	40387-40388	)	_	_	_	_	
240-78	40389-40394	Table	_	_	_	_	
240-79	40395-40396	5	_	_	_	_	
240-80	40397-40407	summarizes	_	_	_	_	
240-81	40408-40411	the	_	_	_	_	
240-82	40412-40416	BIOS	_	_	_	_	
240-83	40417-40424	options	_	_	_	_	
240-84	40425-40428	and	_	_	_	_	
240-85	40429-40437	settings	_	_	_	_	
240-86	40438-40447	available	_	_	_	_	
240-87	40448-40451	for	_	_	_	_	
240-88	40452-40459	various	_	_	_	_	
240-89	40460-40469	workloads	_	_	_	_	
240-90	40469-40470	.	_	_	_	_	

#Text=Table 5.          
241-1	40471-40476	Table	_	_	_	_	
241-2	40477-40478	5	_	_	_	_	
241-3	40478-40479	.	_	_	_	_	
241-4	40479-40489	          	_	_	_	_	

#Text=BIOS options for various workloads
#Text=BIOS Options
#Text=BIOS Values (platform-default)
#Text=Online Transaction Processing (OLTP)
#Text=Virtualization
#Text=High-Performance Computing (HPC)
#Text=Java Application Servers
#Text=Analytic Database Systems (DSS)
#Text=Processor Configuration
#Text=Intel SpeedStep Technology
#Text=Enabled
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Intel Hyper-Threading Tech
#Text=Enabled
#Text=Platform Default
#Text=Platform Default
#Text=Disabled
#Text=Platform Default
#Text=Platform Default
#Text=Intel Virtualization Technology (VT)
#Text=Enabled
#Text=Platform Default
#Text=Platform Default
#Text=Disabled
#Text=Disabled
#Text=Platform Default
#Text=Intel VT for Directed I/O
#Text=Enabled
#Text=Platform Default
#Text=Platform Default
#Text=Disabled
#Text=Disabled
#Text=Disabled
#Text=CPU performance
#Text=Custom
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=LLC Prefetch
#Text=Disabled
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Direct cache access
#Text=Enabled
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Advanced Power Management Configuration
#Text=Power technology
#Text=Energy-Efficient
#Text=Custom
#Text=Custom
#Text=Platform Default
#Text=Custom
#Text=Custom
#Text=Intel Turbo Boost
#Text=Enabled
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=P-STATE coordination
#Text=HW_ALL
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Energy Performance
#Text=Balanced Performance
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Processor C State
#Text=Enabled
#Text=Disabled
#Text=Disabled
#Text=Platform Default
#Text=Disabled
#Text=Disabled
#Text=Processor C1E
#Text=Enabled
#Text=Disabled
#Text=Disabled
#Text=Platform Default
#Text=Disabled
#Text=Disabled
#Text=Processor C3
#Text=Enabled
#Text=Disabled
#Text=Disabled
#Text=Platform Default
#Text=Disabled
#Text=Disabled
#Text=Processor C6
#Text=Enabled
#Text=Disabled
#Text=Disabled
#Text=Platform Default
#Text=Disabled
#Text=Disabled
#Text=Processor C7
#Text=Enabled
#Text=Disabled
#Text=Disabled
#Text=Platform Default
#Text=Disabled
#Text=Disabled
#Text=Package C State limit
#Text=C0/C1 State
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Energy Performance Tuning
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=CPU hardware power mgmt
#Text=HWPW Native Mode
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Workload Configuration
#Text=I/O Sensitive
#Text=Platform-default
#Text=Platform Default
#Text=Balanced
#Text=Platform Default
#Text=Platform-default
#Text=Autonomous Core C-State
#Text=Disabled
#Text=Platform-default
#Text=Platform-default
#Text=Platform-default
#Text=Platform-default
#Text=Platform-default
#Text=Memory & UPI Configuration
#Text=NUMA Optimized
#Text=Enabled
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=IMC Interleaving
#Text=Auto
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=XPT Prefetch
#Text=Auto
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=UPI Prefetch
#Text=Enabled
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Sub Numa Clustering
#Text=Disabled
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Memory RAS configuration
#Text=ADDDC Sparing
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=ADDDC Sparing
#Text=Enabled
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=Platform Default
#Text=The following sections describe the BIOS tuning recommendations for all the workloads listed in Table 5.
242-1	40490-40494	BIOS	_	_	_	_	
242-2	40495-40502	options	_	_	_	_	
242-3	40503-40506	for	_	_	_	_	
242-4	40507-40514	various	_	_	_	_	
242-5	40515-40524	workloads	_	_	_	_	
242-6	40525-40529	BIOS	_	_	_	_	
242-7	40530-40537	Options	_	_	_	_	
242-8	40538-40542	BIOS	_	_	_	_	
242-9	40543-40549	Values	_	_	_	_	
242-10	40550-40551	(	_	_	_	_	
242-11	40551-40567	platform-default	_	_	_	_	
242-12	40567-40568	)	_	_	_	_	
242-13	40569-40575	Online	_	_	_	_	
242-14	40576-40587	Transaction	_	_	_	_	
242-15	40588-40598	Processing	_	_	_	_	
242-16	40599-40600	(	_	_	_	_	
242-17	40600-40604	OLTP	_	_	_	_	
242-18	40604-40605	)	_	_	_	_	
242-19	40606-40620	Virtualization	_	_	_	_	
242-20	40621-40637	High-Performance	_	_	_	_	
242-21	40638-40647	Computing	_	_	_	_	
242-22	40648-40649	(	_	_	_	_	
242-23	40649-40652	HPC	_	_	_	_	
242-24	40652-40653	)	_	_	_	_	
242-25	40654-40658	Java	_	_	_	_	
242-26	40659-40670	Application	_	_	_	_	
242-27	40671-40678	Servers	_	_	_	_	
242-28	40679-40687	Analytic	_	_	_	_	
242-29	40688-40696	Database	_	_	_	_	
242-30	40697-40704	Systems	_	_	_	_	
242-31	40705-40706	(	_	_	_	_	
242-32	40706-40709	DSS	_	_	_	_	
242-33	40709-40710	)	_	_	_	_	
242-34	40711-40720	Processor	_	_	_	_	
242-35	40721-40734	Configuration	_	_	_	_	
242-36	40735-40740	Intel	_	_	_	_	
242-37	40741-40750	SpeedStep	_	_	_	_	
242-38	40751-40761	Technology	_	_	_	_	
242-39	40762-40769	Enabled	_	_	_	_	
242-40	40770-40778	Platform	_	_	_	_	
242-41	40779-40786	Default	_	_	_	_	
242-42	40787-40795	Platform	_	_	_	_	
242-43	40796-40803	Default	_	_	_	_	
242-44	40804-40812	Platform	_	_	_	_	
242-45	40813-40820	Default	_	_	_	_	
242-46	40821-40829	Platform	_	_	_	_	
242-47	40830-40837	Default	_	_	_	_	
242-48	40838-40846	Platform	_	_	_	_	
242-49	40847-40854	Default	_	_	_	_	
242-50	40855-40860	Intel	_	_	_	_	
242-51	40861-40876	Hyper-Threading	_	_	_	_	
242-52	40877-40881	Tech	_	_	_	_	
242-53	40882-40889	Enabled	_	_	_	_	
242-54	40890-40898	Platform	_	_	_	_	
242-55	40899-40906	Default	_	_	_	_	
242-56	40907-40915	Platform	_	_	_	_	
242-57	40916-40923	Default	_	_	_	_	
242-58	40924-40932	Disabled	_	_	_	_	
242-59	40933-40941	Platform	_	_	_	_	
242-60	40942-40949	Default	_	_	_	_	
242-61	40950-40958	Platform	_	_	_	_	
242-62	40959-40966	Default	_	_	_	_	
242-63	40967-40972	Intel	_	_	_	_	
242-64	40973-40987	Virtualization	_	_	_	_	
242-65	40988-40998	Technology	_	_	_	_	
242-66	40999-41000	(	_	_	_	_	
242-67	41000-41002	VT	_	_	_	_	
242-68	41002-41003	)	_	_	_	_	
242-69	41004-41011	Enabled	_	_	_	_	
242-70	41012-41020	Platform	_	_	_	_	
242-71	41021-41028	Default	_	_	_	_	
242-72	41029-41037	Platform	_	_	_	_	
242-73	41038-41045	Default	_	_	_	_	
242-74	41046-41054	Disabled	_	_	_	_	
242-75	41055-41063	Disabled	_	_	_	_	
242-76	41064-41072	Platform	_	_	_	_	
242-77	41073-41080	Default	_	_	_	_	
242-78	41081-41086	Intel	_	_	_	_	
242-79	41087-41089	VT	_	_	_	_	
242-80	41090-41093	for	_	_	_	_	
242-81	41094-41102	Directed	_	_	_	_	
242-82	41103-41104	I	_	_	_	_	
242-83	41104-41105	/	_	_	_	_	
242-84	41105-41106	O	_	_	_	_	
242-85	41107-41114	Enabled	_	_	_	_	
242-86	41115-41123	Platform	_	_	_	_	
242-87	41124-41131	Default	_	_	_	_	
242-88	41132-41140	Platform	_	_	_	_	
242-89	41141-41148	Default	_	_	_	_	
242-90	41149-41157	Disabled	_	_	_	_	
242-91	41158-41166	Disabled	_	_	_	_	
242-92	41167-41175	Disabled	_	_	_	_	
242-93	41176-41179	CPU	_	_	_	_	
242-94	41180-41191	performance	_	_	_	_	
242-95	41192-41198	Custom	_	_	_	_	
242-96	41199-41207	Platform	_	_	_	_	
242-97	41208-41215	Default	_	_	_	_	
242-98	41216-41224	Platform	_	_	_	_	
242-99	41225-41232	Default	_	_	_	_	
242-100	41233-41241	Platform	_	_	_	_	
242-101	41242-41249	Default	_	_	_	_	
242-102	41250-41258	Platform	_	_	_	_	
242-103	41259-41266	Default	_	_	_	_	
242-104	41267-41275	Platform	_	_	_	_	
242-105	41276-41283	Default	_	_	_	_	
242-106	41284-41287	LLC	_	_	_	_	
242-107	41288-41296	Prefetch	_	_	_	_	
242-108	41297-41305	Disabled	_	_	_	_	
242-109	41306-41314	Platform	_	_	_	_	
242-110	41315-41322	Default	_	_	_	_	
242-111	41323-41331	Platform	_	_	_	_	
242-112	41332-41339	Default	_	_	_	_	
242-113	41340-41348	Platform	_	_	_	_	
242-114	41349-41356	Default	_	_	_	_	
242-115	41357-41365	Platform	_	_	_	_	
242-116	41366-41373	Default	_	_	_	_	
242-117	41374-41382	Platform	_	_	_	_	
242-118	41383-41390	Default	_	_	_	_	
242-119	41391-41397	Direct	_	_	_	_	
242-120	41398-41403	cache	_	_	_	_	
242-121	41404-41410	access	_	_	_	_	
242-122	41411-41418	Enabled	_	_	_	_	
242-123	41419-41427	Platform	_	_	_	_	
242-124	41428-41435	Default	_	_	_	_	
242-125	41436-41444	Platform	_	_	_	_	
242-126	41445-41452	Default	_	_	_	_	
242-127	41453-41461	Platform	_	_	_	_	
242-128	41462-41469	Default	_	_	_	_	
242-129	41470-41478	Platform	_	_	_	_	
242-130	41479-41486	Default	_	_	_	_	
242-131	41487-41495	Platform	_	_	_	_	
242-132	41496-41503	Default	_	_	_	_	
242-133	41504-41512	Advanced	_	_	_	_	
242-134	41513-41518	Power	_	_	_	_	
242-135	41519-41529	Management	_	_	_	_	
242-136	41530-41543	Configuration	_	_	_	_	
242-137	41544-41549	Power	_	_	_	_	
242-138	41550-41560	technology	_	_	_	_	
242-139	41561-41577	Energy-Efficient	_	_	_	_	
242-140	41578-41584	Custom	_	_	_	_	
242-141	41585-41591	Custom	_	_	_	_	
242-142	41592-41600	Platform	_	_	_	_	
242-143	41601-41608	Default	_	_	_	_	
242-144	41609-41615	Custom	_	_	_	_	
242-145	41616-41622	Custom	_	_	_	_	
242-146	41623-41628	Intel	_	_	_	_	
242-147	41629-41634	Turbo	_	_	_	_	
242-148	41635-41640	Boost	_	_	_	_	
242-149	41641-41648	Enabled	_	_	_	_	
242-150	41649-41657	Platform	_	_	_	_	
242-151	41658-41665	Default	_	_	_	_	
242-152	41666-41674	Platform	_	_	_	_	
242-153	41675-41682	Default	_	_	_	_	
242-154	41683-41691	Platform	_	_	_	_	
242-155	41692-41699	Default	_	_	_	_	
242-156	41700-41708	Platform	_	_	_	_	
242-157	41709-41716	Default	_	_	_	_	
242-158	41717-41725	Platform	_	_	_	_	
242-159	41726-41733	Default	_	_	_	_	
242-160	41734-41741	P-STATE	_	_	_	_	
242-161	41742-41754	coordination	_	_	_	_	
242-162	41755-41761	HW_ALL	_	_	_	_	
242-163	41762-41770	Platform	_	_	_	_	
242-164	41771-41778	Default	_	_	_	_	
242-165	41779-41787	Platform	_	_	_	_	
242-166	41788-41795	Default	_	_	_	_	
242-167	41796-41804	Platform	_	_	_	_	
242-168	41805-41812	Default	_	_	_	_	
242-169	41813-41821	Platform	_	_	_	_	
242-170	41822-41829	Default	_	_	_	_	
242-171	41830-41838	Platform	_	_	_	_	
242-172	41839-41846	Default	_	_	_	_	
242-173	41847-41853	Energy	_	_	_	_	
242-174	41854-41865	Performance	_	_	_	_	
242-175	41866-41874	Balanced	_	_	_	_	
242-176	41875-41886	Performance	_	_	_	_	
242-177	41887-41895	Platform	_	_	_	_	
242-178	41896-41903	Default	_	_	_	_	
242-179	41904-41912	Platform	_	_	_	_	
242-180	41913-41920	Default	_	_	_	_	
242-181	41921-41929	Platform	_	_	_	_	
242-182	41930-41937	Default	_	_	_	_	
242-183	41938-41946	Platform	_	_	_	_	
242-184	41947-41954	Default	_	_	_	_	
242-185	41955-41963	Platform	_	_	_	_	
242-186	41964-41971	Default	_	_	_	_	
242-187	41972-41981	Processor	_	_	_	_	
242-188	41982-41983	C	_	_	_	_	
242-189	41984-41989	State	_	_	_	_	
242-190	41990-41997	Enabled	_	_	_	_	
242-191	41998-42006	Disabled	_	_	_	_	
242-192	42007-42015	Disabled	_	_	_	_	
242-193	42016-42024	Platform	_	_	_	_	
242-194	42025-42032	Default	_	_	_	_	
242-195	42033-42041	Disabled	_	_	_	_	
242-196	42042-42050	Disabled	_	_	_	_	
242-197	42051-42060	Processor	_	_	_	_	
242-198	42061-42064	C1E	_	_	_	_	
242-199	42065-42072	Enabled	_	_	_	_	
242-200	42073-42081	Disabled	_	_	_	_	
242-201	42082-42090	Disabled	_	_	_	_	
242-202	42091-42099	Platform	_	_	_	_	
242-203	42100-42107	Default	_	_	_	_	
242-204	42108-42116	Disabled	_	_	_	_	
242-205	42117-42125	Disabled	_	_	_	_	
242-206	42126-42135	Processor	_	_	_	_	
242-207	42136-42138	C3	_	_	_	_	
242-208	42139-42146	Enabled	_	_	_	_	
242-209	42147-42155	Disabled	_	_	_	_	
242-210	42156-42164	Disabled	_	_	_	_	
242-211	42165-42173	Platform	_	_	_	_	
242-212	42174-42181	Default	_	_	_	_	
242-213	42182-42190	Disabled	_	_	_	_	
242-214	42191-42199	Disabled	_	_	_	_	
242-215	42200-42209	Processor	_	_	_	_	
242-216	42210-42212	C6	_	_	_	_	
242-217	42213-42220	Enabled	_	_	_	_	
242-218	42221-42229	Disabled	_	_	_	_	
242-219	42230-42238	Disabled	_	_	_	_	
242-220	42239-42247	Platform	_	_	_	_	
242-221	42248-42255	Default	_	_	_	_	
242-222	42256-42264	Disabled	_	_	_	_	
242-223	42265-42273	Disabled	_	_	_	_	
242-224	42274-42283	Processor	_	_	_	_	
242-225	42284-42286	C7	_	_	_	_	
242-226	42287-42294	Enabled	_	_	_	_	
242-227	42295-42303	Disabled	_	_	_	_	
242-228	42304-42312	Disabled	_	_	_	_	
242-229	42313-42321	Platform	_	_	_	_	
242-230	42322-42329	Default	_	_	_	_	
242-231	42330-42338	Disabled	_	_	_	_	
242-232	42339-42347	Disabled	_	_	_	_	
242-233	42348-42355	Package	_	_	_	_	
242-234	42356-42357	C	_	_	_	_	
242-235	42358-42363	State	_	_	_	_	
242-236	42364-42369	limit	_	_	_	_	
242-237	42370-42372	C0	_	_	_	_	
242-238	42372-42373	/	_	_	_	_	
242-239	42373-42375	C1	_	_	_	_	
242-240	42376-42381	State	_	_	_	_	
242-241	42382-42390	Platform	_	_	_	_	
242-242	42391-42398	Default	_	_	_	_	
242-243	42399-42407	Platform	_	_	_	_	
242-244	42408-42415	Default	_	_	_	_	
242-245	42416-42424	Platform	_	_	_	_	
242-246	42425-42432	Default	_	_	_	_	
242-247	42433-42441	Platform	_	_	_	_	
242-248	42442-42449	Default	_	_	_	_	
242-249	42450-42458	Platform	_	_	_	_	
242-250	42459-42466	Default	_	_	_	_	
242-251	42467-42473	Energy	_	_	_	_	
242-252	42474-42485	Performance	_	_	_	_	
242-253	42486-42492	Tuning	_	_	_	_	
242-254	42493-42501	Platform	_	_	_	_	
242-255	42502-42509	Default	_	_	_	_	
242-256	42510-42518	Platform	_	_	_	_	
242-257	42519-42526	Default	_	_	_	_	
242-258	42527-42535	Platform	_	_	_	_	
242-259	42536-42543	Default	_	_	_	_	
242-260	42544-42552	Platform	_	_	_	_	
242-261	42553-42560	Default	_	_	_	_	
242-262	42561-42569	Platform	_	_	_	_	
242-263	42570-42577	Default	_	_	_	_	
242-264	42578-42581	CPU	_	_	_	_	
242-265	42582-42590	hardware	_	_	_	_	
242-266	42591-42596	power	_	_	_	_	
242-267	42597-42601	mgmt	_	_	_	_	
242-268	42602-42606	HWPW	_	_	_	_	
242-269	42607-42613	Native	_	_	_	_	
242-270	42614-42618	Mode	_	_	_	_	
242-271	42619-42627	Platform	_	_	_	_	
242-272	42628-42635	Default	_	_	_	_	
242-273	42636-42644	Platform	_	_	_	_	
242-274	42645-42652	Default	_	_	_	_	
242-275	42653-42661	Platform	_	_	_	_	
242-276	42662-42669	Default	_	_	_	_	
242-277	42670-42678	Platform	_	_	_	_	
242-278	42679-42686	Default	_	_	_	_	
242-279	42687-42695	Platform	_	_	_	_	
242-280	42696-42703	Default	_	_	_	_	
242-281	42704-42712	Workload	_	_	_	_	
242-282	42713-42726	Configuration	_	_	_	_	
242-283	42727-42728	I	_	_	_	_	
242-284	42728-42729	/	_	_	_	_	
242-285	42729-42730	O	_	_	_	_	
242-286	42731-42740	Sensitive	_	_	_	_	
242-287	42741-42757	Platform-default	_	_	_	_	
242-288	42758-42766	Platform	_	_	_	_	
242-289	42767-42774	Default	_	_	_	_	
242-290	42775-42783	Balanced	_	_	_	_	
242-291	42784-42792	Platform	_	_	_	_	
242-292	42793-42800	Default	_	_	_	_	
242-293	42801-42817	Platform-default	_	_	_	_	
242-294	42818-42828	Autonomous	_	_	_	_	
242-295	42829-42833	Core	_	_	_	_	
242-296	42834-42841	C-State	_	_	_	_	
242-297	42842-42850	Disabled	_	_	_	_	
242-298	42851-42867	Platform-default	_	_	_	_	
242-299	42868-42884	Platform-default	_	_	_	_	
242-300	42885-42901	Platform-default	_	_	_	_	
242-301	42902-42918	Platform-default	_	_	_	_	
242-302	42919-42935	Platform-default	_	_	_	_	
242-303	42936-42942	Memory	_	_	_	_	
242-304	42943-42944	&	_	_	_	_	
242-305	42945-42948	UPI	_	_	_	_	
242-306	42949-42962	Configuration	_	_	_	_	
242-307	42963-42967	NUMA	_	_	_	_	
242-308	42968-42977	Optimized	_	_	_	_	
242-309	42978-42985	Enabled	_	_	_	_	
242-310	42986-42994	Platform	_	_	_	_	
242-311	42995-43002	Default	_	_	_	_	
242-312	43003-43011	Platform	_	_	_	_	
242-313	43012-43019	Default	_	_	_	_	
242-314	43020-43028	Platform	_	_	_	_	
242-315	43029-43036	Default	_	_	_	_	
242-316	43037-43045	Platform	_	_	_	_	
242-317	43046-43053	Default	_	_	_	_	
242-318	43054-43062	Platform	_	_	_	_	
242-319	43063-43070	Default	_	_	_	_	
242-320	43071-43074	IMC	_	_	_	_	
242-321	43075-43087	Interleaving	_	_	_	_	
242-322	43088-43092	Auto	_	_	_	_	
242-323	43093-43101	Platform	_	_	_	_	
242-324	43102-43109	Default	_	_	_	_	
242-325	43110-43118	Platform	_	_	_	_	
242-326	43119-43126	Default	_	_	_	_	
242-327	43127-43135	Platform	_	_	_	_	
242-328	43136-43143	Default	_	_	_	_	
242-329	43144-43152	Platform	_	_	_	_	
242-330	43153-43160	Default	_	_	_	_	
242-331	43161-43169	Platform	_	_	_	_	
242-332	43170-43177	Default	_	_	_	_	
242-333	43178-43181	XPT	_	_	_	_	
242-334	43182-43190	Prefetch	_	_	_	_	
242-335	43191-43195	Auto	_	_	_	_	
242-336	43196-43204	Platform	_	_	_	_	
242-337	43205-43212	Default	_	_	_	_	
242-338	43213-43221	Platform	_	_	_	_	
242-339	43222-43229	Default	_	_	_	_	
242-340	43230-43238	Platform	_	_	_	_	
242-341	43239-43246	Default	_	_	_	_	
242-342	43247-43255	Platform	_	_	_	_	
242-343	43256-43263	Default	_	_	_	_	
242-344	43264-43272	Platform	_	_	_	_	
242-345	43273-43280	Default	_	_	_	_	
242-346	43281-43284	UPI	_	_	_	_	
242-347	43285-43293	Prefetch	_	_	_	_	
242-348	43294-43301	Enabled	_	_	_	_	
242-349	43302-43310	Platform	_	_	_	_	
242-350	43311-43318	Default	_	_	_	_	
242-351	43319-43327	Platform	_	_	_	_	
242-352	43328-43335	Default	_	_	_	_	
242-353	43336-43344	Platform	_	_	_	_	
242-354	43345-43352	Default	_	_	_	_	
242-355	43353-43361	Platform	_	_	_	_	
242-356	43362-43369	Default	_	_	_	_	
242-357	43370-43378	Platform	_	_	_	_	
242-358	43379-43386	Default	_	_	_	_	
242-359	43387-43390	Sub	_	_	_	_	
242-360	43391-43395	Numa	_	_	_	_	
242-361	43396-43406	Clustering	_	_	_	_	
242-362	43407-43415	Disabled	_	_	_	_	
242-363	43416-43424	Platform	_	_	_	_	
242-364	43425-43432	Default	_	_	_	_	
242-365	43433-43441	Platform	_	_	_	_	
242-366	43442-43449	Default	_	_	_	_	
242-367	43450-43458	Platform	_	_	_	_	
242-368	43459-43466	Default	_	_	_	_	
242-369	43467-43475	Platform	_	_	_	_	
242-370	43476-43483	Default	_	_	_	_	
242-371	43484-43492	Platform	_	_	_	_	
242-372	43493-43500	Default	_	_	_	_	
242-373	43501-43507	Memory	_	_	_	_	
242-374	43508-43511	RAS	_	_	_	_	
242-375	43512-43525	configuration	_	_	_	_	
242-376	43526-43531	ADDDC	_	_	_	_	
242-377	43532-43539	Sparing	_	_	_	_	
242-378	43540-43548	Platform	_	_	_	_	
242-379	43549-43556	Default	_	_	_	_	
242-380	43557-43565	Platform	_	_	_	_	
242-381	43566-43573	Default	_	_	_	_	
242-382	43574-43582	Platform	_	_	_	_	
242-383	43583-43590	Default	_	_	_	_	
242-384	43591-43599	Platform	_	_	_	_	
242-385	43600-43607	Default	_	_	_	_	
242-386	43608-43616	Platform	_	_	_	_	
242-387	43617-43624	Default	_	_	_	_	
242-388	43625-43630	ADDDC	_	_	_	_	
242-389	43631-43638	Sparing	_	_	_	_	
242-390	43639-43646	Enabled	_	_	_	_	
242-391	43647-43655	Platform	_	_	_	_	
242-392	43656-43663	Default	_	_	_	_	
242-393	43664-43672	Platform	_	_	_	_	
242-394	43673-43680	Default	_	_	_	_	
242-395	43681-43689	Platform	_	_	_	_	
242-396	43690-43697	Default	_	_	_	_	
242-397	43698-43706	Platform	_	_	_	_	
242-398	43707-43714	Default	_	_	_	_	
242-399	43715-43723	Platform	_	_	_	_	
242-400	43724-43731	Default	_	_	_	_	
242-401	43732-43735	The	_	_	_	_	
242-402	43736-43745	following	_	_	_	_	
242-403	43746-43754	sections	_	_	_	_	
242-404	43755-43763	describe	_	_	_	_	
242-405	43764-43767	the	_	_	_	_	
242-406	43768-43772	BIOS	_	_	_	_	
242-407	43773-43779	tuning	_	_	_	_	
242-408	43780-43795	recommendations	_	_	_	_	
242-409	43796-43799	for	_	_	_	_	
242-410	43800-43803	all	_	_	_	_	
242-411	43804-43807	the	_	_	_	_	
242-412	43808-43817	workloads	_	_	_	_	
242-413	43818-43824	listed	_	_	_	_	
242-414	43825-43827	in	_	_	_	_	
242-415	43828-43833	Table	_	_	_	_	
242-416	43834-43835	5	_	_	_	_	
242-417	43835-43836	.	_	_	_	_	

#Text=Online transaction processing workloads
#Text=OLTP systems contain the operational data needed to control and run important transactional business tasks.
243-1	43837-43843	Online	_	_	_	_	
243-2	43844-43855	transaction	_	_	_	_	
243-3	43856-43866	processing	_	_	_	_	
243-4	43867-43876	workloads	_	_	_	_	
243-5	43877-43881	OLTP	_	_	_	_	
243-6	43882-43889	systems	_	_	_	_	
243-7	43890-43897	contain	_	_	_	_	
243-8	43898-43901	the	_	_	_	_	
243-9	43902-43913	operational	_	_	_	_	
243-10	43914-43918	data	_	_	_	_	
243-11	43919-43925	needed	_	_	_	_	
243-12	43926-43928	to	_	_	_	_	
243-13	43929-43936	control	_	_	_	_	
243-14	43937-43940	and	_	_	_	_	
243-15	43941-43944	run	_	_	_	_	
243-16	43945-43954	important	_	_	_	_	
243-17	43955-43968	transactional	_	_	_	_	
243-18	43969-43977	business	_	_	_	_	
243-19	43978-43983	tasks	_	_	_	_	
243-20	43983-43984	.	_	_	_	_	

#Text=These systems are characterized by their ability to complete various concurrent database transactions and process real-time data.
244-1	43985-43990	These	_	_	_	_	
244-2	43991-43998	systems	_	_	_	_	
244-3	43999-44002	are	_	_	_	_	
244-4	44003-44016	characterized	_	_	_	_	
244-5	44017-44019	by	_	_	_	_	
244-6	44020-44025	their	_	_	_	_	
244-7	44026-44033	ability	_	_	_	_	
244-8	44034-44036	to	_	_	_	_	
244-9	44037-44045	complete	_	_	_	_	
244-10	44046-44053	various	_	_	_	_	
244-11	44054-44064	concurrent	_	_	_	_	
244-12	44065-44073	database	_	_	_	_	
244-13	44074-44086	transactions	_	_	_	_	
244-14	44087-44090	and	_	_	_	_	
244-15	44091-44098	process	_	_	_	_	
244-16	44099-44108	real-time	_	_	_	_	
244-17	44109-44113	data	_	_	_	_	
244-18	44113-44114	.	_	_	_	_	

#Text=They are designed to provide optimal data processing speed.
245-1	44115-44119	They	_	_	_	_	
245-2	44120-44123	are	_	_	_	_	
245-3	44124-44132	designed	_	_	_	_	
245-4	44133-44135	to	_	_	_	_	
245-5	44136-44143	provide	_	_	_	_	
245-6	44144-44151	optimal	_	_	_	_	
245-7	44152-44156	data	_	_	_	_	
245-8	44157-44167	processing	_	_	_	_	
245-9	44168-44173	speed	_	_	_	_	
245-10	44173-44174	.	_	_	_	_	

#Text=OLTP systems are often decentralized to avoid single points of failure.
246-1	44175-44179	OLTP	_	_	_	_	
246-2	44180-44187	systems	_	_	_	_	
246-3	44188-44191	are	_	_	_	_	
246-4	44192-44197	often	_	_	_	_	
246-5	44198-44211	decentralized	_	_	_	_	
246-6	44212-44214	to	_	_	_	_	
246-7	44215-44220	avoid	_	_	_	_	
246-8	44221-44227	single	_	_	_	_	
246-9	44228-44234	points	_	_	_	_	
246-10	44235-44237	of	_	_	_	_	
246-11	44238-44245	failure	_	_	_	_	
246-12	44245-44246	.	_	_	_	_	

#Text=Spreading the work over multiple servers can also support greater transaction processing volume and reduce response time.
247-1	44247-44256	Spreading	_	_	_	_	
247-2	44257-44260	the	_	_	_	_	
247-3	44261-44265	work	_	_	_	_	
247-4	44266-44270	over	_	_	_	_	
247-5	44271-44279	multiple	_	_	_	_	
247-6	44280-44287	servers	_	_	_	_	
247-7	44288-44291	can	_	_	_	_	
247-8	44292-44296	also	_	_	_	_	
247-9	44297-44304	support	_	_	_	_	
247-10	44305-44312	greater	_	_	_	_	
247-11	44313-44324	transaction	_	_	_	_	
247-12	44325-44335	processing	_	_	_	_	
247-13	44336-44342	volume	_	_	_	_	
247-14	44343-44346	and	_	_	_	_	
247-15	44347-44353	reduce	_	_	_	_	
247-16	44354-44362	response	_	_	_	_	
247-17	44363-44367	time	_	_	_	_	
247-18	44367-44368	.	_	_	_	_	

#Text=Processor and memory settings for Cisco UCS managed servers: OLTP
#Text=Obtaining peak performance requires some system-level tuning.
248-1	44369-44378	Processor	_	_	_	_	
248-2	44379-44382	and	_	_	_	_	
248-3	44383-44389	memory	_	_	_	_	
248-4	44390-44398	settings	_	_	_	_	
248-5	44399-44402	for	_	_	_	_	
248-6	44403-44408	Cisco	_	_	_	_	
248-7	44409-44412	UCS	_	_	_	_	
248-8	44413-44420	managed	_	_	_	_	
248-9	44421-44428	servers	_	_	_	_	
248-10	44428-44429	:	_	_	_	_	
248-11	44430-44434	OLTP	_	_	_	_	
248-12	44435-44444	Obtaining	_	_	_	_	
248-13	44445-44449	peak	_	_	_	_	
248-14	44450-44461	performance	_	_	_	_	
248-15	44462-44470	requires	_	_	_	_	
248-16	44471-44475	some	_	_	_	_	
248-17	44476-44488	system-level	_	_	_	_	
248-18	44489-44495	tuning	_	_	_	_	
248-19	44495-44496	.	_	_	_	_	

#Text=Figure 1 Highlights the BIOS selections that are recommended for optimizing OLTP workloads on Cisco UCS M5 platforms managed by Cisco UCS Manager.
249-1	44497-44503	Figure	_	_	_	_	
249-2	44504-44505	1	_	_	_	_	
249-3	44506-44516	Highlights	_	_	_	_	
249-4	44517-44520	the	_	_	_	_	
249-5	44521-44525	BIOS	_	_	_	_	
249-6	44526-44536	selections	_	_	_	_	
249-7	44537-44541	that	_	_	_	_	
249-8	44542-44545	are	_	_	_	_	
249-9	44546-44557	recommended	_	_	_	_	
249-10	44558-44561	for	_	_	_	_	
249-11	44562-44572	optimizing	_	_	_	_	
249-12	44573-44577	OLTP	_	_	_	_	
249-13	44578-44587	workloads	_	_	_	_	
249-14	44588-44590	on	_	_	_	_	
249-15	44591-44596	Cisco	_	_	_	_	
249-16	44597-44600	UCS	_	_	_	_	
249-17	44601-44603	M5	_	_	_	_	
249-18	44604-44613	platforms	_	_	_	_	
249-19	44614-44621	managed	_	_	_	_	
249-20	44622-44624	by	_	_	_	_	
249-21	44625-44630	Cisco	_	_	_	_	
249-22	44631-44634	UCS	_	_	_	_	
249-23	44635-44642	Manager	_	_	_	_	
249-24	44642-44643	.	_	_	_	_	

#Text=Rest of the BIOS settings are configured as “Platform Default”.
250-1	44644-44648	Rest	_	_	_	_	
250-2	44649-44651	of	_	_	_	_	
250-3	44652-44655	the	_	_	_	_	
250-4	44656-44660	BIOS	_	_	_	_	
250-5	44661-44669	settings	_	_	_	_	
250-6	44670-44673	are	_	_	_	_	
250-7	44674-44684	configured	_	_	_	_	
250-8	44685-44687	as	_	_	_	_	
250-9	44688-44689	“	_	_	_	_	
250-10	44689-44697	Platform	_	_	_	_	
250-11	44698-44705	Default	_	_	_	_	
250-12	44705-44706	”	_	_	_	_	
250-13	44706-44707	.	_	_	_	_	

#Text=Figure 1.
251-1	44708-44714	Figure	_	_	_	_	
251-2	44715-44716	1	_	_	_	_	
251-3	44716-44717	.	_	_	_	_	

#Text=Processor settings for OLTP workloads
#Text=The Intel Turbo Boost and SpeedStep technologies are powerful management features that adjust the CPU voltage and frequency settings to optimize performance and power consumption dynamically.
252-1	44718-44727	Processor	_	_	_	_	
252-2	44728-44736	settings	_	_	_	_	
252-3	44737-44740	for	_	_	_	_	
252-4	44741-44745	OLTP	_	_	_	_	
252-5	44746-44755	workloads	_	_	_	_	
252-6	44756-44759	The	_	_	_	_	
252-7	44760-44765	Intel	_	_	_	_	
252-8	44766-44771	Turbo	_	_	_	_	
252-9	44772-44777	Boost	_	_	_	_	
252-10	44778-44781	and	_	_	_	_	
252-11	44782-44791	SpeedStep	_	_	_	_	
252-12	44792-44804	technologies	_	_	_	_	
252-13	44805-44808	are	_	_	_	_	
252-14	44809-44817	powerful	_	_	_	_	
252-15	44818-44828	management	_	_	_	_	
252-16	44829-44837	features	_	_	_	_	
252-17	44838-44842	that	_	_	_	_	
252-18	44843-44849	adjust	_	_	_	_	
252-19	44850-44853	the	_	_	_	_	
252-20	44854-44857	CPU	_	_	_	_	
252-21	44858-44865	voltage	_	_	_	_	
252-22	44866-44869	and	_	_	_	_	
252-23	44870-44879	frequency	_	_	_	_	
252-24	44880-44888	settings	_	_	_	_	
252-25	44889-44891	to	_	_	_	_	
252-26	44892-44900	optimize	_	_	_	_	
252-27	44901-44912	performance	_	_	_	_	
252-28	44913-44916	and	_	_	_	_	
252-29	44917-44922	power	_	_	_	_	
252-30	44923-44934	consumption	_	_	_	_	
252-31	44935-44946	dynamically	_	_	_	_	
252-32	44946-44947	.	_	_	_	_	

#Text=During periods of low CPU consumption, Intel SpeedStep can reduce the CPU frequency by reducing power consumption.
253-1	44948-44954	During	_	_	_	_	
253-2	44955-44962	periods	_	_	_	_	
253-3	44963-44965	of	_	_	_	_	
253-4	44966-44969	low	_	_	_	_	
253-5	44970-44973	CPU	_	_	_	_	
253-6	44974-44985	consumption	_	_	_	_	
253-7	44985-44986	,	_	_	_	_	
253-8	44987-44992	Intel	_	_	_	_	
253-9	44993-45002	SpeedStep	_	_	_	_	
253-10	45003-45006	can	_	_	_	_	
253-11	45007-45013	reduce	_	_	_	_	
253-12	45014-45017	the	_	_	_	_	
253-13	45018-45021	CPU	_	_	_	_	
253-14	45022-45031	frequency	_	_	_	_	
253-15	45032-45034	by	_	_	_	_	
253-16	45035-45043	reducing	_	_	_	_	
253-17	45044-45049	power	_	_	_	_	
253-18	45050-45061	consumption	_	_	_	_	
253-19	45061-45062	.	_	_	_	_	

#Text=Intel Turbo Boost increases the processing speed to accommodate higher demand in situations in which CPU utilization is extremely high.
254-1	45063-45068	Intel	_	_	_	_	
254-2	45069-45074	Turbo	_	_	_	_	
254-3	45075-45080	Boost	_	_	_	_	
254-4	45081-45090	increases	_	_	_	_	
254-5	45091-45094	the	_	_	_	_	
254-6	45095-45105	processing	_	_	_	_	
254-7	45106-45111	speed	_	_	_	_	
254-8	45112-45114	to	_	_	_	_	
254-9	45115-45126	accommodate	_	_	_	_	
254-10	45127-45133	higher	_	_	_	_	
254-11	45134-45140	demand	_	_	_	_	
254-12	45141-45143	in	_	_	_	_	
254-13	45144-45154	situations	_	_	_	_	
254-14	45155-45157	in	_	_	_	_	
254-15	45158-45163	which	_	_	_	_	
254-16	45164-45167	CPU	_	_	_	_	
254-17	45168-45179	utilization	_	_	_	_	
254-18	45180-45182	is	_	_	_	_	
254-19	45183-45192	extremely	_	_	_	_	
254-20	45193-45197	high	_	_	_	_	
254-21	45197-45198	.	_	_	_	_	

#Text=Each core has 20 to 30 percent more processing capability when Intel Turbo Boost is enabled.
255-1	45199-45203	Each	_	_	_	_	
255-2	45204-45208	core	_	_	_	_	
255-3	45209-45212	has	_	_	_	_	
255-4	45213-45215	20	_	_	_	_	
255-5	45216-45218	to	_	_	_	_	
255-6	45219-45221	30	_	_	_	_	
255-7	45222-45229	percent	_	_	_	_	
255-8	45230-45234	more	_	_	_	_	
255-9	45235-45245	processing	_	_	_	_	
255-10	45246-45256	capability	_	_	_	_	
255-11	45257-45261	when	_	_	_	_	
255-12	45262-45267	Intel	_	_	_	_	
255-13	45268-45273	Turbo	_	_	_	_	
255-14	45274-45279	Boost	_	_	_	_	
255-15	45280-45282	is	_	_	_	_	
255-16	45283-45290	enabled	_	_	_	_	
255-17	45290-45291	.	_	_	_	_	

#Text=For example, the Cisco UCS M5 platforms installed with the Intel Xeon Scalable Platinum 8168 CPU operates at a base frequency of 2.7 GHz.
256-1	45292-45295	For	_	_	_	_	
256-2	45296-45303	example	_	_	_	_	
256-3	45303-45304	,	_	_	_	_	
256-4	45305-45308	the	_	_	_	_	
256-5	45309-45314	Cisco	_	_	_	_	
256-6	45315-45318	UCS	_	_	_	_	
256-7	45319-45321	M5	_	_	_	_	
256-8	45322-45331	platforms	_	_	_	_	
256-9	45332-45341	installed	_	_	_	_	
256-10	45342-45346	with	_	_	_	_	
256-11	45347-45350	the	_	_	_	_	
256-12	45351-45356	Intel	_	_	_	_	
256-13	45357-45361	Xeon	_	_	_	_	
256-14	45362-45370	Scalable	_	_	_	_	
256-15	45371-45379	Platinum	_	_	_	_	
256-16	45380-45384	8168	_	_	_	_	
256-17	45385-45388	CPU	_	_	_	_	
256-18	45389-45397	operates	_	_	_	_	
256-19	45398-45400	at	_	_	_	_	
256-20	45401-45402	a	_	_	_	_	
256-21	45403-45407	base	_	_	_	_	
256-22	45408-45417	frequency	_	_	_	_	
256-23	45418-45420	of	_	_	_	_	
256-24	45421-45424	2.7	_	_	_	_	
256-25	45425-45428	GHz	_	_	_	_	
256-26	45428-45429	.	_	_	_	_	

#Text=If Intel Turbo Boost is enabled, the system can achieve frequencies as high as 3.7 GHz.
257-1	45430-45432	If	_	_	_	_	
257-2	45433-45438	Intel	_	_	_	_	
257-3	45439-45444	Turbo	_	_	_	_	
257-4	45445-45450	Boost	_	_	_	_	
257-5	45451-45453	is	_	_	_	_	
257-6	45454-45461	enabled	_	_	_	_	
257-7	45461-45462	,	_	_	_	_	
257-8	45463-45466	the	_	_	_	_	
257-9	45467-45473	system	_	_	_	_	
257-10	45474-45477	can	_	_	_	_	
257-11	45478-45485	achieve	_	_	_	_	
257-12	45486-45497	frequencies	_	_	_	_	
257-13	45498-45500	as	_	_	_	_	
257-14	45501-45505	high	_	_	_	_	
257-15	45506-45508	as	_	_	_	_	
257-16	45509-45512	3.7	_	_	_	_	
257-17	45513-45516	GHz	_	_	_	_	
257-18	45516-45517	.	_	_	_	_	

#Text=When you tune for consistent performance for OLTP applications on a system that does not run at close to 100 percent CPU utilization, you should enable Intel SpeedStep and Turbo Boost and disable C-states.
258-1	45518-45522	When	_	_	_	_	
258-2	45523-45526	you	_	_	_	_	
258-3	45527-45531	tune	_	_	_	_	
258-4	45532-45535	for	_	_	_	_	
258-5	45536-45546	consistent	_	_	_	_	
258-6	45547-45558	performance	_	_	_	_	
258-7	45559-45562	for	_	_	_	_	
258-8	45563-45567	OLTP	_	_	_	_	
258-9	45568-45580	applications	_	_	_	_	
258-10	45581-45583	on	_	_	_	_	
258-11	45584-45585	a	_	_	_	_	
258-12	45586-45592	system	_	_	_	_	
258-13	45593-45597	that	_	_	_	_	
258-14	45598-45602	does	_	_	_	_	
258-15	45603-45606	not	_	_	_	_	
258-16	45607-45610	run	_	_	_	_	
258-17	45611-45613	at	_	_	_	_	
258-18	45614-45619	close	_	_	_	_	
258-19	45620-45622	to	_	_	_	_	
258-20	45623-45626	100	_	_	_	_	
258-21	45627-45634	percent	_	_	_	_	
258-22	45635-45638	CPU	_	_	_	_	
258-23	45639-45650	utilization	_	_	_	_	
258-24	45650-45651	,	_	_	_	_	
258-25	45652-45655	you	_	_	_	_	
258-26	45656-45662	should	_	_	_	_	
258-27	45663-45669	enable	_	_	_	_	
258-28	45670-45675	Intel	_	_	_	_	
258-29	45676-45685	SpeedStep	_	_	_	_	
258-30	45686-45689	and	_	_	_	_	
258-31	45690-45695	Turbo	_	_	_	_	
258-32	45696-45701	Boost	_	_	_	_	
258-33	45702-45705	and	_	_	_	_	
258-34	45706-45713	disable	_	_	_	_	
258-35	45714-45722	C-states	_	_	_	_	
258-36	45722-45723	.	_	_	_	_	

#Text=Although this configuration foregoes power savings during idle times, it keeps all CPU cores running at a consistent speed and delivers the most consistent and predictable performance.
259-1	45724-45732	Although	_	_	_	_	
259-2	45733-45737	this	_	_	_	_	
259-3	45738-45751	configuration	_	_	_	_	
259-4	45752-45760	foregoes	_	_	_	_	
259-5	45761-45766	power	_	_	_	_	
259-6	45767-45774	savings	_	_	_	_	
259-7	45775-45781	during	_	_	_	_	
259-8	45782-45786	idle	_	_	_	_	
259-9	45787-45792	times	_	_	_	_	
259-10	45792-45793	,	_	_	_	_	
259-11	45794-45796	it	_	_	_	_	
259-12	45797-45802	keeps	_	_	_	_	
259-13	45803-45806	all	_	_	_	_	
259-14	45807-45810	CPU	_	_	_	_	
259-15	45811-45816	cores	_	_	_	_	
259-16	45817-45824	running	_	_	_	_	
259-17	45825-45827	at	_	_	_	_	
259-18	45828-45829	a	_	_	_	_	
259-19	45830-45840	consistent	_	_	_	_	
259-20	45841-45846	speed	_	_	_	_	
259-21	45847-45850	and	_	_	_	_	
259-22	45851-45859	delivers	_	_	_	_	
259-23	45860-45863	the	_	_	_	_	
259-24	45864-45868	most	_	_	_	_	
259-25	45869-45879	consistent	_	_	_	_	
259-26	45880-45883	and	_	_	_	_	
259-27	45884-45895	predictable	_	_	_	_	
259-28	45896-45907	performance	_	_	_	_	
259-29	45907-45908	.	_	_	_	_	

#Text=Enabling Intel Hyper-Threading Technology helps OLTP systems handle I/O-intensive workloads by allowing the processing of multiple threads per CPU core.
260-1	45909-45917	Enabling	_	_	_	_	
260-2	45918-45923	Intel	_	_	_	_	
260-3	45924-45939	Hyper-Threading	_	_	_	_	
260-4	45940-45950	Technology	_	_	_	_	
260-5	45951-45956	helps	_	_	_	_	
260-6	45957-45961	OLTP	_	_	_	_	
260-7	45962-45969	systems	_	_	_	_	
260-8	45970-45976	handle	_	_	_	_	
260-9	45977-45978	I	_	_	_	_	
260-10	45978-45979	/	_	_	_	_	
260-11	45979-45990	O-intensive	_	_	_	_	
260-12	45991-46000	workloads	_	_	_	_	
260-13	46001-46003	by	_	_	_	_	
260-14	46004-46012	allowing	_	_	_	_	
260-15	46013-46016	the	_	_	_	_	
260-16	46017-46027	processing	_	_	_	_	
260-17	46028-46030	of	_	_	_	_	
260-18	46031-46039	multiple	_	_	_	_	
260-19	46040-46047	threads	_	_	_	_	
260-20	46048-46051	per	_	_	_	_	
260-21	46052-46055	CPU	_	_	_	_	
260-22	46056-46060	core	_	_	_	_	
260-23	46060-46061	.	_	_	_	_	

#Text=OLTP applications typically are multithreaded, with each thread performing a small amount of work that may include I/O operations.
261-1	46062-46066	OLTP	_	_	_	_	
261-2	46067-46079	applications	_	_	_	_	
261-3	46080-46089	typically	_	_	_	_	
261-4	46090-46093	are	_	_	_	_	
261-5	46094-46107	multithreaded	_	_	_	_	
261-6	46107-46108	,	_	_	_	_	
261-7	46109-46113	with	_	_	_	_	
261-8	46114-46118	each	_	_	_	_	
261-9	46119-46125	thread	_	_	_	_	
261-10	46126-46136	performing	_	_	_	_	
261-11	46137-46138	a	_	_	_	_	
261-12	46139-46144	small	_	_	_	_	
261-13	46145-46151	amount	_	_	_	_	
261-14	46152-46154	of	_	_	_	_	
261-15	46155-46159	work	_	_	_	_	
261-16	46160-46164	that	_	_	_	_	
261-17	46165-46168	may	_	_	_	_	
261-18	46169-46176	include	_	_	_	_	
261-19	46177-46178	I	_	_	_	_	
261-20	46178-46179	/	_	_	_	_	
261-21	46179-46180	O	_	_	_	_	
261-22	46181-46191	operations	_	_	_	_	
261-23	46191-46192	.	_	_	_	_	

#Text=A large number of threads results in a considerable amount of context switching, but with Intel Hyper-Threading, the effect of context switching is reduced.
262-1	46193-46194	A	_	_	_	_	
262-2	46195-46200	large	_	_	_	_	
262-3	46201-46207	number	_	_	_	_	
262-4	46208-46210	of	_	_	_	_	
262-5	46211-46218	threads	_	_	_	_	
262-6	46219-46226	results	_	_	_	_	
262-7	46227-46229	in	_	_	_	_	
262-8	46230-46231	a	_	_	_	_	
262-9	46232-46244	considerable	_	_	_	_	
262-10	46245-46251	amount	_	_	_	_	
262-11	46252-46254	of	_	_	_	_	
262-12	46255-46262	context	_	_	_	_	
262-13	46263-46272	switching	_	_	_	_	
262-14	46272-46273	,	_	_	_	_	
262-15	46274-46277	but	_	_	_	_	
262-16	46278-46282	with	_	_	_	_	
262-17	46283-46288	Intel	_	_	_	_	
262-18	46289-46304	Hyper-Threading	_	_	_	_	
262-19	46304-46305	,	_	_	_	_	
262-20	46306-46309	the	_	_	_	_	
262-21	46310-46316	effect	_	_	_	_	
262-22	46317-46319	of	_	_	_	_	
262-23	46320-46327	context	_	_	_	_	
262-24	46328-46337	switching	_	_	_	_	
262-25	46338-46340	is	_	_	_	_	
262-26	46341-46348	reduced	_	_	_	_	
262-27	46348-46349	.	_	_	_	_	

#Text=When Intel Direct Cache Access is enabled (Figure 2), the I/O controller places data directly into the CPU cache to reduce the cache misses while processing OLTP workloads.
263-1	46350-46354	When	_	_	_	_	
263-2	46355-46360	Intel	_	_	_	_	
263-3	46361-46367	Direct	_	_	_	_	
263-4	46368-46373	Cache	_	_	_	_	
263-5	46374-46380	Access	_	_	_	_	
263-6	46381-46383	is	_	_	_	_	
263-7	46384-46391	enabled	_	_	_	_	
263-8	46392-46393	(	_	_	_	_	
263-9	46393-46399	Figure	_	_	_	_	
263-10	46400-46401	2	_	_	_	_	
263-11	46401-46402	)	_	_	_	_	
263-12	46402-46403	,	_	_	_	_	
263-13	46404-46407	the	_	_	_	_	
263-14	46408-46409	I	_	_	_	_	
263-15	46409-46410	/	_	_	_	_	
263-16	46410-46411	O	_	_	_	_	
263-17	46412-46422	controller	_	_	_	_	
263-18	46423-46429	places	_	_	_	_	
263-19	46430-46434	data	_	_	_	_	
263-20	46435-46443	directly	_	_	_	_	
263-21	46444-46448	into	_	_	_	_	
263-22	46449-46452	the	_	_	_	_	
263-23	46453-46456	CPU	_	_	_	_	
263-24	46457-46462	cache	_	_	_	_	
263-25	46463-46465	to	_	_	_	_	
263-26	46466-46472	reduce	_	_	_	_	
263-27	46473-46476	the	_	_	_	_	
263-28	46477-46482	cache	_	_	_	_	
263-29	46483-46489	misses	_	_	_	_	
263-30	46490-46495	while	_	_	_	_	
263-31	46496-46506	processing	_	_	_	_	
263-32	46507-46511	OLTP	_	_	_	_	
263-33	46512-46521	workloads	_	_	_	_	
263-34	46521-46522	.	_	_	_	_	

#Text=This approach results in improved application performance.
264-1	46523-46527	This	_	_	_	_	
264-2	46528-46536	approach	_	_	_	_	
264-3	46537-46544	results	_	_	_	_	
264-4	46545-46547	in	_	_	_	_	
264-5	46548-46556	improved	_	_	_	_	
264-6	46557-46568	application	_	_	_	_	
264-7	46569-46580	performance	_	_	_	_	
264-8	46580-46581	.	_	_	_	_	

#Text=Figure 2.
265-1	46582-46588	Figure	_	_	_	_	
265-2	46589-46590	2	_	_	_	_	
265-3	46590-46591	.	_	_	_	_	

#Text=Intel Directed I/O settings for OLTP workloads
#Text=If you are deploying the system in a virtualized environment and the OLTP application uses a directed I/O path, make sure that the VT for Directed IO option is enabled.
266-1	46592-46597	Intel	_	_	_	_	
266-2	46598-46606	Directed	_	_	_	_	
266-3	46607-46608	I	_	_	_	_	
266-4	46608-46609	/	_	_	_	_	
266-5	46609-46610	O	_	_	_	_	
266-6	46611-46619	settings	_	_	_	_	
266-7	46620-46623	for	_	_	_	_	
266-8	46624-46628	OLTP	_	_	_	_	
266-9	46629-46638	workloads	_	_	_	_	
266-10	46639-46641	If	_	_	_	_	
266-11	46642-46645	you	_	_	_	_	
266-12	46646-46649	are	_	_	_	_	
266-13	46650-46659	deploying	_	_	_	_	
266-14	46660-46663	the	_	_	_	_	
266-15	46664-46670	system	_	_	_	_	
266-16	46671-46673	in	_	_	_	_	
266-17	46674-46675	a	_	_	_	_	
266-18	46676-46687	virtualized	_	_	_	_	
266-19	46688-46699	environment	_	_	_	_	
266-20	46700-46703	and	_	_	_	_	
266-21	46704-46707	the	_	_	_	_	
266-22	46708-46712	OLTP	_	_	_	_	
266-23	46713-46724	application	_	_	_	_	
266-24	46725-46729	uses	_	_	_	_	
266-25	46730-46731	a	_	_	_	_	
266-26	46732-46740	directed	_	_	_	_	
266-27	46741-46742	I	_	_	_	_	
266-28	46742-46743	/	_	_	_	_	
266-29	46743-46744	O	_	_	_	_	
266-30	46745-46749	path	_	_	_	_	
266-31	46749-46750	,	_	_	_	_	
266-32	46751-46755	make	_	_	_	_	
266-33	46756-46760	sure	_	_	_	_	
266-34	46761-46765	that	_	_	_	_	
266-35	46766-46769	the	_	_	_	_	
266-36	46770-46772	VT	_	_	_	_	
266-37	46773-46776	for	_	_	_	_	
266-38	46777-46785	Directed	_	_	_	_	
266-39	46786-46788	IO	_	_	_	_	
266-40	46789-46795	option	_	_	_	_	
266-41	46796-46798	is	_	_	_	_	
266-42	46799-46806	enabled	_	_	_	_	
266-43	46806-46807	.	_	_	_	_	

#Text=By default, these options are enabled.
267-1	46808-46810	By	_	_	_	_	
267-2	46811-46818	default	_	_	_	_	
267-3	46818-46819	,	_	_	_	_	
267-4	46820-46825	these	_	_	_	_	
267-5	46826-46833	options	_	_	_	_	
267-6	46834-46837	are	_	_	_	_	
267-7	46838-46845	enabled	_	_	_	_	
267-8	46845-46846	.	_	_	_	_	

#Text=Note:      This feature is applicable only if the OLTP system is running in a virtualized environment.
268-1	46847-46851	Note	_	_	_	_	
268-2	46851-46852	:	_	_	_	_	
268-3	46852-46857	     	_	_	_	_	
268-4	46858-46862	This	_	_	_	_	
268-5	46863-46870	feature	_	_	_	_	
268-6	46871-46873	is	_	_	_	_	
268-7	46874-46884	applicable	_	_	_	_	
268-8	46885-46889	only	_	_	_	_	
268-9	46890-46892	if	_	_	_	_	
268-10	46893-46896	the	_	_	_	_	
268-11	46897-46901	OLTP	_	_	_	_	
268-12	46902-46908	system	_	_	_	_	
268-13	46909-46911	is	_	_	_	_	
268-14	46912-46919	running	_	_	_	_	
268-15	46920-46922	in	_	_	_	_	
268-16	46923-46924	a	_	_	_	_	
268-17	46925-46936	virtualized	_	_	_	_	
268-18	46937-46948	environment	_	_	_	_	
268-19	46948-46949	.	_	_	_	_	

#Text=Figure 3 shows the recommended settings for optimizing memory for OLTP workloads on servers managed by Cisco UCS Manager.
269-1	46950-46956	Figure	_	_	_	_	
269-2	46957-46958	3	_	_	_	_	
269-3	46959-46964	shows	_	_	_	_	
269-4	46965-46968	the	_	_	_	_	
269-5	46969-46980	recommended	_	_	_	_	
269-6	46981-46989	settings	_	_	_	_	
269-7	46990-46993	for	_	_	_	_	
269-8	46994-47004	optimizing	_	_	_	_	
269-9	47005-47011	memory	_	_	_	_	
269-10	47012-47015	for	_	_	_	_	
269-11	47016-47020	OLTP	_	_	_	_	
269-12	47021-47030	workloads	_	_	_	_	
269-13	47031-47033	on	_	_	_	_	
269-14	47034-47041	servers	_	_	_	_	
269-15	47042-47049	managed	_	_	_	_	
269-16	47050-47052	by	_	_	_	_	
269-17	47053-47058	Cisco	_	_	_	_	
269-18	47059-47062	UCS	_	_	_	_	
269-19	47063-47070	Manager	_	_	_	_	
269-20	47070-47071	.	_	_	_	_	

#Text=Figure 3.
270-1	47072-47078	Figure	_	_	_	_	
270-2	47079-47080	3	_	_	_	_	
270-3	47080-47081	.	_	_	_	_	

#Text=Memory settings for OLTP workloads
#Text=Processor and memory settings for standalone Cisco UCS C-Series servers: OLTP
#Text=Figures 4 and 5 show the processor selections that are recommended for OLTP workloads on standalone Cisco UCS C-Series M5 servers.
271-1	47082-47088	Memory	_	_	_	_	
271-2	47089-47097	settings	_	_	_	_	
271-3	47098-47101	for	_	_	_	_	
271-4	47102-47106	OLTP	_	_	_	_	
271-5	47107-47116	workloads	_	_	_	_	
271-6	47117-47126	Processor	_	_	_	_	
271-7	47127-47130	and	_	_	_	_	
271-8	47131-47137	memory	_	_	_	_	
271-9	47138-47146	settings	_	_	_	_	
271-10	47147-47150	for	_	_	_	_	
271-11	47151-47161	standalone	_	_	_	_	
271-12	47162-47167	Cisco	_	_	_	_	
271-13	47168-47171	UCS	_	_	_	_	
271-14	47172-47180	C-Series	_	_	_	_	
271-15	47181-47188	servers	_	_	_	_	
271-16	47188-47189	:	_	_	_	_	
271-17	47190-47194	OLTP	_	_	_	_	
271-18	47195-47202	Figures	_	_	_	_	
271-19	47203-47204	4	_	_	_	_	
271-20	47205-47208	and	_	_	_	_	
271-21	47209-47210	5	_	_	_	_	
271-22	47211-47215	show	_	_	_	_	
271-23	47216-47219	the	_	_	_	_	
271-24	47220-47229	processor	_	_	_	_	
271-25	47230-47240	selections	_	_	_	_	
271-26	47241-47245	that	_	_	_	_	
271-27	47246-47249	are	_	_	_	_	
271-28	47250-47261	recommended	_	_	_	_	
271-29	47262-47265	for	_	_	_	_	
271-30	47266-47270	OLTP	_	_	_	_	
271-31	47271-47280	workloads	_	_	_	_	
271-32	47281-47283	on	_	_	_	_	
271-33	47284-47294	standalone	_	_	_	_	
271-34	47295-47300	Cisco	_	_	_	_	
271-35	47301-47304	UCS	_	_	_	_	
271-36	47305-47313	C-Series	_	_	_	_	
271-37	47314-47316	M5	_	_	_	_	
271-38	47317-47324	servers	_	_	_	_	
271-39	47324-47325	.	_	_	_	_	

#Text=Figure 4.
272-1	47326-47332	Figure	_	_	_	_	
272-2	47333-47334	4	_	_	_	_	
272-3	47334-47335	.	_	_	_	_	

#Text=Processor settings for OLTP workloads
#Text=Figure 5.
273-1	47336-47345	Processor	_	_	_	_	
273-2	47346-47354	settings	_	_	_	_	
273-3	47355-47358	for	_	_	_	_	
273-4	47359-47363	OLTP	_	_	_	_	
273-5	47364-47373	workloads	_	_	_	_	
273-6	47374-47380	Figure	_	_	_	_	
273-7	47381-47382	5	_	_	_	_	
273-8	47382-47383	.	_	_	_	_	

#Text=Power and performance settings for OLTP workloads
#Text=Figure 6 shows memory settings for OLTP workloads for standalone Cisco UCS C-Series servers.
274-1	47384-47389	Power	_	_	_	_	
274-2	47390-47393	and	_	_	_	_	
274-3	47394-47405	performance	_	_	_	_	
274-4	47406-47414	settings	_	_	_	_	
274-5	47415-47418	for	_	_	_	_	
274-6	47419-47423	OLTP	_	_	_	_	
274-7	47424-47433	workloads	_	_	_	_	
274-8	47434-47440	Figure	_	_	_	_	
274-9	47441-47442	6	_	_	_	_	
274-10	47443-47448	shows	_	_	_	_	
274-11	47449-47455	memory	_	_	_	_	
274-12	47456-47464	settings	_	_	_	_	
274-13	47465-47468	for	_	_	_	_	
274-14	47469-47473	OLTP	_	_	_	_	
274-15	47474-47483	workloads	_	_	_	_	
274-16	47484-47487	for	_	_	_	_	
274-17	47488-47498	standalone	_	_	_	_	
274-18	47499-47504	Cisco	_	_	_	_	
274-19	47505-47508	UCS	_	_	_	_	
274-20	47509-47517	C-Series	_	_	_	_	
274-21	47518-47525	servers	_	_	_	_	
274-22	47525-47526	.	_	_	_	_	

#Text=Figure 6.
275-1	47527-47533	Figure	_	_	_	_	
275-2	47534-47535	6	_	_	_	_	
275-3	47535-47536	.	_	_	_	_	

#Text=Memory settings for OLTP workloads
#Text=OLTP applications have a random memory-access pattern and benefit greatly from larger and faster memory.
276-1	47537-47543	Memory	_	_	_	_	
276-2	47544-47552	settings	_	_	_	_	
276-3	47553-47556	for	_	_	_	_	
276-4	47557-47561	OLTP	_	_	_	_	
276-5	47562-47571	workloads	_	_	_	_	
276-6	47572-47576	OLTP	_	_	_	_	
276-7	47577-47589	applications	_	_	_	_	
276-8	47590-47594	have	_	_	_	_	
276-9	47595-47596	a	_	_	_	_	
276-10	47597-47603	random	_	_	_	_	
276-11	47604-47617	memory-access	_	_	_	_	
276-12	47618-47625	pattern	_	_	_	_	
276-13	47626-47629	and	_	_	_	_	
276-14	47630-47637	benefit	_	_	_	_	
276-15	47638-47645	greatly	_	_	_	_	
276-16	47646-47650	from	_	_	_	_	
276-17	47651-47657	larger	_	_	_	_	
276-18	47658-47661	and	_	_	_	_	
276-19	47662-47668	faster	_	_	_	_	
276-20	47669-47675	memory	_	_	_	_	
276-21	47675-47676	.	_	_	_	_	

#Text=Therefore, Cisco recommends setting memory RAS features to maximum performance for optimal system performance.
277-1	47677-47686	Therefore	_	_	_	_	
277-2	47686-47687	,	_	_	_	_	
277-3	47688-47693	Cisco	_	_	_	_	
277-4	47694-47704	recommends	_	_	_	_	
277-5	47705-47712	setting	_	_	_	_	
277-6	47713-47719	memory	_	_	_	_	
277-7	47720-47723	RAS	_	_	_	_	
277-8	47724-47732	features	_	_	_	_	
277-9	47733-47735	to	_	_	_	_	
277-10	47736-47743	maximum	_	_	_	_	
277-11	47744-47755	performance	_	_	_	_	
277-12	47756-47759	for	_	_	_	_	
277-13	47760-47767	optimal	_	_	_	_	
277-14	47768-47774	system	_	_	_	_	
277-15	47775-47786	performance	_	_	_	_	
277-16	47786-47787	.	_	_	_	_	

#Text=In OLTP transactions, if these modes are enabled, I/O operations will be serviced at the highest frequency and will have reduced memory latency.
278-1	47788-47790	In	_	_	_	_	
278-2	47791-47795	OLTP	_	_	_	_	
278-3	47796-47808	transactions	_	_	_	_	
278-4	47808-47809	,	_	_	_	_	
278-5	47810-47812	if	_	_	_	_	
278-6	47813-47818	these	_	_	_	_	
278-7	47819-47824	modes	_	_	_	_	
278-8	47825-47828	are	_	_	_	_	
278-9	47829-47836	enabled	_	_	_	_	
278-10	47836-47837	,	_	_	_	_	
278-11	47838-47839	I	_	_	_	_	
278-12	47839-47840	/	_	_	_	_	
278-13	47840-47841	O	_	_	_	_	
278-14	47842-47852	operations	_	_	_	_	
278-15	47853-47857	will	_	_	_	_	
278-16	47858-47860	be	_	_	_	_	
278-17	47861-47869	serviced	_	_	_	_	
278-18	47870-47872	at	_	_	_	_	
278-19	47873-47876	the	_	_	_	_	
278-20	47877-47884	highest	_	_	_	_	
278-21	47885-47894	frequency	_	_	_	_	
278-22	47895-47898	and	_	_	_	_	
278-23	47899-47903	will	_	_	_	_	
278-24	47904-47908	have	_	_	_	_	
278-25	47909-47916	reduced	_	_	_	_	
278-26	47917-47923	memory	_	_	_	_	
278-27	47924-47931	latency	_	_	_	_	
278-28	47931-47932	.	_	_	_	_	

#Text=Note:      If the DIMM pairs in the server have the same type, size, and organization and are populated across the Scalable Memory Interconnect (SMI) channels, you can enable the lockstep mode, an option on the Select Memory RAS menu, to reduce memory-access latency and achieve better performance.
279-1	47933-47937	Note	_	_	_	_	
279-2	47937-47938	:	_	_	_	_	
279-3	47938-47943	     	_	_	_	_	
279-4	47944-47946	If	_	_	_	_	
279-5	47947-47950	the	_	_	_	_	
279-6	47951-47955	DIMM	_	_	_	_	
279-7	47956-47961	pairs	_	_	_	_	
279-8	47962-47964	in	_	_	_	_	
279-9	47965-47968	the	_	_	_	_	
279-10	47969-47975	server	_	_	_	_	
279-11	47976-47980	have	_	_	_	_	
279-12	47981-47984	the	_	_	_	_	
279-13	47985-47989	same	_	_	_	_	
279-14	47990-47994	type	_	_	_	_	
279-15	47994-47995	,	_	_	_	_	
279-16	47996-48000	size	_	_	_	_	
279-17	48000-48001	,	_	_	_	_	
279-18	48002-48005	and	_	_	_	_	
279-19	48006-48018	organization	_	_	_	_	
279-20	48019-48022	and	_	_	_	_	
279-21	48023-48026	are	_	_	_	_	
279-22	48027-48036	populated	_	_	_	_	
279-23	48037-48043	across	_	_	_	_	
279-24	48044-48047	the	_	_	_	_	
279-25	48048-48056	Scalable	_	_	_	_	
279-26	48057-48063	Memory	_	_	_	_	
279-27	48064-48076	Interconnect	_	_	_	_	
279-28	48077-48078	(	_	_	_	_	
279-29	48078-48081	SMI	_	_	_	_	
279-30	48081-48082	)	_	_	_	_	
279-31	48083-48091	channels	_	_	_	_	
279-32	48091-48092	,	_	_	_	_	
279-33	48093-48096	you	_	_	_	_	
279-34	48097-48100	can	_	_	_	_	
279-35	48101-48107	enable	_	_	_	_	
279-36	48108-48111	the	_	_	_	_	
279-37	48112-48120	lockstep	_	_	_	_	
279-38	48121-48125	mode	_	_	_	_	
279-39	48125-48126	,	_	_	_	_	
279-40	48127-48129	an	_	_	_	_	
279-41	48130-48136	option	_	_	_	_	
279-42	48137-48139	on	_	_	_	_	
279-43	48140-48143	the	_	_	_	_	
279-44	48144-48150	Select	_	_	_	_	
279-45	48151-48157	Memory	_	_	_	_	
279-46	48158-48161	RAS	_	_	_	_	
279-47	48162-48166	menu	_	_	_	_	
279-48	48166-48167	,	_	_	_	_	
279-49	48168-48170	to	_	_	_	_	
279-50	48171-48177	reduce	_	_	_	_	
279-51	48178-48191	memory-access	_	_	_	_	
279-52	48192-48199	latency	_	_	_	_	
279-53	48200-48203	and	_	_	_	_	
279-54	48204-48211	achieve	_	_	_	_	
279-55	48212-48218	better	_	_	_	_	
279-56	48219-48230	performance	_	_	_	_	
279-57	48230-48231	.	_	_	_	_	

#Text=Virtualization workloads
#Text=Intel Virtualization Technology provides manageability, security, and flexibility in IT environments that use software-based virtualization solutions.
280-1	48232-48246	Virtualization	_	_	_	_	
280-2	48247-48256	workloads	_	_	_	_	
280-3	48257-48262	Intel	_	_	_	_	
280-4	48263-48277	Virtualization	_	_	_	_	
280-5	48278-48288	Technology	_	_	_	_	
280-6	48289-48297	provides	_	_	_	_	
280-7	48298-48311	manageability	_	_	_	_	
280-8	48311-48312	,	_	_	_	_	
280-9	48313-48321	security	_	_	_	_	
280-10	48321-48322	,	_	_	_	_	
280-11	48323-48326	and	_	_	_	_	
280-12	48327-48338	flexibility	_	_	_	_	
280-13	48339-48341	in	_	_	_	_	
280-14	48342-48344	IT	_	_	_	_	
280-15	48345-48357	environments	_	_	_	_	
280-16	48358-48362	that	_	_	_	_	
280-17	48363-48366	use	_	_	_	_	
280-18	48367-48381	software-based	_	_	_	_	
280-19	48382-48396	virtualization	_	_	_	_	
280-20	48397-48406	solutions	_	_	_	_	
280-21	48406-48407	.	_	_	_	_	

#Text=With this technology, a single server can be partitioned and can be projected as several independent servers, allowing the server to run different applications on the operating system simultaneously.
281-1	48408-48412	With	_	_	_	_	
281-2	48413-48417	this	_	_	_	_	
281-3	48418-48428	technology	_	_	_	_	
281-4	48428-48429	,	_	_	_	_	
281-5	48430-48431	a	_	_	_	_	
281-6	48432-48438	single	_	_	_	_	
281-7	48439-48445	server	_	_	_	_	
281-8	48446-48449	can	_	_	_	_	
281-9	48450-48452	be	_	_	_	_	
281-10	48453-48464	partitioned	_	_	_	_	
281-11	48465-48468	and	_	_	_	_	
281-12	48469-48472	can	_	_	_	_	
281-13	48473-48475	be	_	_	_	_	
281-14	48476-48485	projected	_	_	_	_	
281-15	48486-48488	as	_	_	_	_	
281-16	48489-48496	several	_	_	_	_	
281-17	48497-48508	independent	_	_	_	_	
281-18	48509-48516	servers	_	_	_	_	
281-19	48516-48517	,	_	_	_	_	
281-20	48518-48526	allowing	_	_	_	_	
281-21	48527-48530	the	_	_	_	_	
281-22	48531-48537	server	_	_	_	_	
281-23	48538-48540	to	_	_	_	_	
281-24	48541-48544	run	_	_	_	_	
281-25	48545-48554	different	_	_	_	_	
281-26	48555-48567	applications	_	_	_	_	
281-27	48568-48570	on	_	_	_	_	
281-28	48571-48574	the	_	_	_	_	
281-29	48575-48584	operating	_	_	_	_	
281-30	48585-48591	system	_	_	_	_	
281-31	48592-48606	simultaneously	_	_	_	_	
281-32	48606-48607	.	_	_	_	_	

#Text=Processor and memory settings for Cisco UCS managed servers: Virtualization
#Text=Figure 7 Highlights the BIOS selections that are recommended for virtualized workloads on Cisco UCS M5 platforms managed by Cisco UCS manager.
282-1	48608-48617	Processor	_	_	_	_	
282-2	48618-48621	and	_	_	_	_	
282-3	48622-48628	memory	_	_	_	_	
282-4	48629-48637	settings	_	_	_	_	
282-5	48638-48641	for	_	_	_	_	
282-6	48642-48647	Cisco	_	_	_	_	
282-7	48648-48651	UCS	_	_	_	_	
282-8	48652-48659	managed	_	_	_	_	
282-9	48660-48667	servers	_	_	_	_	
282-10	48667-48668	:	_	_	_	_	
282-11	48669-48683	Virtualization	_	_	_	_	
282-12	48684-48690	Figure	_	_	_	_	
282-13	48691-48692	7	_	_	_	_	
282-14	48693-48703	Highlights	_	_	_	_	
282-15	48704-48707	the	_	_	_	_	
282-16	48708-48712	BIOS	_	_	_	_	
282-17	48713-48723	selections	_	_	_	_	
282-18	48724-48728	that	_	_	_	_	
282-19	48729-48732	are	_	_	_	_	
282-20	48733-48744	recommended	_	_	_	_	
282-21	48745-48748	for	_	_	_	_	
282-22	48749-48760	virtualized	_	_	_	_	
282-23	48761-48770	workloads	_	_	_	_	
282-24	48771-48773	on	_	_	_	_	
282-25	48774-48779	Cisco	_	_	_	_	
282-26	48780-48783	UCS	_	_	_	_	
282-27	48784-48786	M5	_	_	_	_	
282-28	48787-48796	platforms	_	_	_	_	
282-29	48797-48804	managed	_	_	_	_	
282-30	48805-48807	by	_	_	_	_	
282-31	48808-48813	Cisco	_	_	_	_	
282-32	48814-48817	UCS	_	_	_	_	
282-33	48818-48825	manager	_	_	_	_	
282-34	48825-48826	.	_	_	_	_	

#Text=Rest of the BIOS settings are configured as “Platform Default”.
283-1	48827-48831	Rest	_	_	_	_	
283-2	48832-48834	of	_	_	_	_	
283-3	48835-48838	the	_	_	_	_	
283-4	48839-48843	BIOS	_	_	_	_	
283-5	48844-48852	settings	_	_	_	_	
283-6	48853-48856	are	_	_	_	_	
283-7	48857-48867	configured	_	_	_	_	
283-8	48868-48870	as	_	_	_	_	
283-9	48871-48872	“	_	_	_	_	
283-10	48872-48880	Platform	_	_	_	_	
283-11	48881-48888	Default	_	_	_	_	
283-12	48888-48889	”	_	_	_	_	
283-13	48889-48890	.	_	_	_	_	

#Text=Figure 7.
284-1	48891-48897	Figure	_	_	_	_	
284-2	48898-48899	7	_	_	_	_	
284-3	48899-48900	.	_	_	_	_	

#Text=Processor settings for virtualized workloads
#Text=Most of the CPU and memory settings for virtualized workloads are the same as those for OLTP workloads.
285-1	48901-48910	Processor	_	_	_	_	
285-2	48911-48919	settings	_	_	_	_	
285-3	48920-48923	for	_	_	_	_	
285-4	48924-48935	virtualized	_	_	_	_	
285-5	48936-48945	workloads	_	_	_	_	
285-6	48946-48950	Most	_	_	_	_	
285-7	48951-48953	of	_	_	_	_	
285-8	48954-48957	the	_	_	_	_	
285-9	48958-48961	CPU	_	_	_	_	
285-10	48962-48965	and	_	_	_	_	
285-11	48966-48972	memory	_	_	_	_	
285-12	48973-48981	settings	_	_	_	_	
285-13	48982-48985	for	_	_	_	_	
285-14	48986-48997	virtualized	_	_	_	_	
285-15	48998-49007	workloads	_	_	_	_	
285-16	49008-49011	are	_	_	_	_	
285-17	49012-49015	the	_	_	_	_	
285-18	49016-49020	same	_	_	_	_	
285-19	49021-49023	as	_	_	_	_	
285-20	49024-49029	those	_	_	_	_	
285-21	49030-49033	for	_	_	_	_	
285-22	49034-49038	OLTP	_	_	_	_	
285-23	49039-49048	workloads	_	_	_	_	
285-24	49048-49049	.	_	_	_	_	

#Text=It is important to enable Intel Virtualization Technology in the BIOS to support virtualization workloads.
286-1	49050-49052	It	_	_	_	_	
286-2	49053-49055	is	_	_	_	_	
286-3	49056-49065	important	_	_	_	_	
286-4	49066-49068	to	_	_	_	_	
286-5	49069-49075	enable	_	_	_	_	
286-6	49076-49081	Intel	_	_	_	_	
286-7	49082-49096	Virtualization	_	_	_	_	
286-8	49097-49107	Technology	_	_	_	_	
286-9	49108-49110	in	_	_	_	_	
286-10	49111-49114	the	_	_	_	_	
286-11	49115-49119	BIOS	_	_	_	_	
286-12	49120-49122	to	_	_	_	_	
286-13	49123-49130	support	_	_	_	_	
286-14	49131-49145	virtualization	_	_	_	_	
286-15	49146-49155	workloads	_	_	_	_	
286-16	49155-49156	.	_	_	_	_	

#Text=Make sure that the Intel VT-d option is enabled.
287-1	49157-49161	Make	_	_	_	_	
287-2	49162-49166	sure	_	_	_	_	
287-3	49167-49171	that	_	_	_	_	
287-4	49172-49175	the	_	_	_	_	
287-5	49176-49181	Intel	_	_	_	_	
287-6	49182-49186	VT-d	_	_	_	_	
287-7	49187-49193	option	_	_	_	_	
287-8	49194-49196	is	_	_	_	_	
287-9	49197-49204	enabled	_	_	_	_	
287-10	49204-49205	.	_	_	_	_	

#Text=The CPUs that support hardware virtualization allow the processor to run multiple operating systems in the virtual machines.
288-1	49206-49209	The	_	_	_	_	
288-2	49210-49214	CPUs	_	_	_	_	
288-3	49215-49219	that	_	_	_	_	
288-4	49220-49227	support	_	_	_	_	
288-5	49228-49236	hardware	_	_	_	_	
288-6	49237-49251	virtualization	_	_	_	_	
288-7	49252-49257	allow	_	_	_	_	
288-8	49258-49261	the	_	_	_	_	
288-9	49262-49271	processor	_	_	_	_	
288-10	49272-49274	to	_	_	_	_	
288-11	49275-49278	run	_	_	_	_	
288-12	49279-49287	multiple	_	_	_	_	
288-13	49288-49297	operating	_	_	_	_	
288-14	49298-49305	systems	_	_	_	_	
288-15	49306-49308	in	_	_	_	_	
288-16	49309-49312	the	_	_	_	_	
288-17	49313-49320	virtual	_	_	_	_	
288-18	49321-49329	machines	_	_	_	_	
288-19	49329-49330	.	_	_	_	_	

#Text=This feature involves some overhead because the performance of a virtual operating system is comparatively slower than that of the native OS.
289-1	49331-49335	This	_	_	_	_	
289-2	49336-49343	feature	_	_	_	_	
289-3	49344-49352	involves	_	_	_	_	
289-4	49353-49357	some	_	_	_	_	
289-5	49358-49366	overhead	_	_	_	_	
289-6	49367-49374	because	_	_	_	_	
289-7	49375-49378	the	_	_	_	_	
289-8	49379-49390	performance	_	_	_	_	
289-9	49391-49393	of	_	_	_	_	
289-10	49394-49395	a	_	_	_	_	
289-11	49396-49403	virtual	_	_	_	_	
289-12	49404-49413	operating	_	_	_	_	
289-13	49414-49420	system	_	_	_	_	
289-14	49421-49423	is	_	_	_	_	
289-15	49424-49437	comparatively	_	_	_	_	
289-16	49438-49444	slower	_	_	_	_	
289-17	49445-49449	than	_	_	_	_	
289-18	49450-49454	that	_	_	_	_	
289-19	49455-49457	of	_	_	_	_	
289-20	49458-49461	the	_	_	_	_	
289-21	49462-49468	native	_	_	_	_	
289-22	49469-49471	OS	_	_	_	_	
289-23	49471-49472	.	_	_	_	_	

#Text=To enhance performance, be sure to enable Intel Turbo Boost and Hyper-Threading for the processors.
290-1	49473-49475	To	_	_	_	_	
290-2	49476-49483	enhance	_	_	_	_	
290-3	49484-49495	performance	_	_	_	_	
290-4	49495-49496	,	_	_	_	_	
290-5	49497-49499	be	_	_	_	_	
290-6	49500-49504	sure	_	_	_	_	
290-7	49505-49507	to	_	_	_	_	
290-8	49508-49514	enable	_	_	_	_	
290-9	49515-49520	Intel	_	_	_	_	
290-10	49521-49526	Turbo	_	_	_	_	
290-11	49527-49532	Boost	_	_	_	_	
290-12	49533-49536	and	_	_	_	_	
290-13	49537-49552	Hyper-Threading	_	_	_	_	
290-14	49553-49556	for	_	_	_	_	
290-15	49557-49560	the	_	_	_	_	
290-16	49561-49571	processors	_	_	_	_	
290-17	49571-49572	.	_	_	_	_	

#Text=The cache prefetching mechanisms (Data-Prefetch-Logic [DPL] prefetch, hardware prefetch, Layer 2 streaming prefetch, and adjacent-cache-line prefetch) usually help increase system performance, especially when memory-access patterns are regular.
291-1	49573-49576	The	_	_	_	_	
291-2	49577-49582	cache	_	_	_	_	
291-3	49583-49594	prefetching	_	_	_	_	
291-4	49595-49605	mechanisms	_	_	_	_	
291-5	49606-49607	(	_	_	_	_	
291-6	49607-49626	Data-Prefetch-Logic	_	_	_	_	
291-7	49627-49628	[	_	_	_	_	
291-8	49628-49631	DPL	_	_	_	_	
291-9	49631-49632	]	_	_	_	_	
291-10	49633-49641	prefetch	_	_	_	_	
291-11	49641-49642	,	_	_	_	_	
291-12	49643-49651	hardware	_	_	_	_	
291-13	49652-49660	prefetch	_	_	_	_	
291-14	49660-49661	,	_	_	_	_	
291-15	49662-49667	Layer	_	_	_	_	
291-16	49668-49669	2	_	_	_	_	
291-17	49670-49679	streaming	_	_	_	_	
291-18	49680-49688	prefetch	_	_	_	_	
291-19	49688-49689	,	_	_	_	_	
291-20	49690-49693	and	_	_	_	_	
291-21	49694-49713	adjacent-cache-line	_	_	_	_	
291-22	49714-49722	prefetch	_	_	_	_	
291-23	49722-49723	)	_	_	_	_	
291-24	49724-49731	usually	_	_	_	_	
291-25	49732-49736	help	_	_	_	_	
291-26	49737-49745	increase	_	_	_	_	
291-27	49746-49752	system	_	_	_	_	
291-28	49753-49764	performance	_	_	_	_	
291-29	49764-49765	,	_	_	_	_	
291-30	49766-49776	especially	_	_	_	_	
291-31	49777-49781	when	_	_	_	_	
291-32	49782-49795	memory-access	_	_	_	_	
291-33	49796-49804	patterns	_	_	_	_	
291-34	49805-49808	are	_	_	_	_	
291-35	49809-49816	regular	_	_	_	_	
291-36	49816-49817	.	_	_	_	_	

#Text=Intel Directed I/O for virtualized workloads
#Text=Figure 8 shows the recommended Intel Directed I/O settings for virtualized workloads in Cisco UCS M5 platforms.
292-1	49818-49823	Intel	_	_	_	_	
292-2	49824-49832	Directed	_	_	_	_	
292-3	49833-49834	I	_	_	_	_	
292-4	49834-49835	/	_	_	_	_	
292-5	49835-49836	O	_	_	_	_	
292-6	49837-49840	for	_	_	_	_	
292-7	49841-49852	virtualized	_	_	_	_	
292-8	49853-49862	workloads	_	_	_	_	
292-9	49863-49869	Figure	_	_	_	_	
292-10	49870-49871	8	_	_	_	_	
292-11	49872-49877	shows	_	_	_	_	
292-12	49878-49881	the	_	_	_	_	
292-13	49882-49893	recommended	_	_	_	_	
292-14	49894-49899	Intel	_	_	_	_	
292-15	49900-49908	Directed	_	_	_	_	
292-16	49909-49910	I	_	_	_	_	
292-17	49910-49911	/	_	_	_	_	
292-18	49911-49912	O	_	_	_	_	
292-19	49913-49921	settings	_	_	_	_	
292-20	49922-49925	for	_	_	_	_	
292-21	49926-49937	virtualized	_	_	_	_	
292-22	49938-49947	workloads	_	_	_	_	
292-23	49948-49950	in	_	_	_	_	
292-24	49951-49956	Cisco	_	_	_	_	
292-25	49957-49960	UCS	_	_	_	_	
292-26	49961-49963	M5	_	_	_	_	
292-27	49964-49973	platforms	_	_	_	_	
292-28	49973-49974	.	_	_	_	_	

#Text=Figure 8.
293-1	49975-49981	Figure	_	_	_	_	
293-2	49982-49983	8	_	_	_	_	
293-3	49983-49984	.	_	_	_	_	

#Text=Intel Directed I/O settings for virtualized workloads
#Text=With Cisco Data Center Virtual Machine Fabric Extender VM-FEX technology, virtual machines can now directly write to the virtual network interface cards (vNICs) when the Intel Directed I/O option is enabled at the BIOS level.
294-1	49985-49990	Intel	_	_	_	_	
294-2	49991-49999	Directed	_	_	_	_	
294-3	50000-50001	I	_	_	_	_	
294-4	50001-50002	/	_	_	_	_	
294-5	50002-50003	O	_	_	_	_	
294-6	50004-50012	settings	_	_	_	_	
294-7	50013-50016	for	_	_	_	_	
294-8	50017-50028	virtualized	_	_	_	_	
294-9	50029-50038	workloads	_	_	_	_	
294-10	50039-50043	With	_	_	_	_	
294-11	50044-50049	Cisco	_	_	_	_	
294-12	50050-50054	Data	_	_	_	_	
294-13	50055-50061	Center	_	_	_	_	
294-14	50062-50069	Virtual	_	_	_	_	
294-15	50070-50077	Machine	_	_	_	_	
294-16	50078-50084	Fabric	_	_	_	_	
294-17	50085-50093	Extender	_	_	_	_	
294-18	50094-50100	VM-FEX	_	_	_	_	
294-19	50101-50111	technology	_	_	_	_	
294-20	50111-50112	,	_	_	_	_	
294-21	50113-50120	virtual	_	_	_	_	
294-22	50121-50129	machines	_	_	_	_	
294-23	50130-50133	can	_	_	_	_	
294-24	50134-50137	now	_	_	_	_	
294-25	50138-50146	directly	_	_	_	_	
294-26	50147-50152	write	_	_	_	_	
294-27	50153-50155	to	_	_	_	_	
294-28	50156-50159	the	_	_	_	_	
294-29	50160-50167	virtual	_	_	_	_	
294-30	50168-50175	network	_	_	_	_	
294-31	50176-50185	interface	_	_	_	_	
294-32	50186-50191	cards	_	_	_	_	
294-33	50192-50193	(	_	_	_	_	
294-34	50193-50198	vNICs	_	_	_	_	
294-35	50198-50199	)	_	_	_	_	
294-36	50200-50204	when	_	_	_	_	
294-37	50205-50208	the	_	_	_	_	
294-38	50209-50214	Intel	_	_	_	_	
294-39	50215-50223	Directed	_	_	_	_	
294-40	50224-50225	I	_	_	_	_	
294-41	50225-50226	/	_	_	_	_	
294-42	50226-50227	O	_	_	_	_	
294-43	50228-50234	option	_	_	_	_	
294-44	50235-50237	is	_	_	_	_	
294-45	50238-50245	enabled	_	_	_	_	
294-46	50246-50248	at	_	_	_	_	
294-47	50249-50252	the	_	_	_	_	
294-48	50253-50257	BIOS	_	_	_	_	
294-49	50258-50263	level	_	_	_	_	
294-50	50263-50264	.	_	_	_	_	

#Text=Memory settings for virtualized workloads
#Text=Figure 9 shows the recommended memory settings for virtualized workloads in Cisco UCS M5 servers.
295-1	50265-50271	Memory	_	_	_	_	
295-2	50272-50280	settings	_	_	_	_	
295-3	50281-50284	for	_	_	_	_	
295-4	50285-50296	virtualized	_	_	_	_	
295-5	50297-50306	workloads	_	_	_	_	
295-6	50307-50313	Figure	_	_	_	_	
295-7	50314-50315	9	_	_	_	_	
295-8	50316-50321	shows	_	_	_	_	
295-9	50322-50325	the	_	_	_	_	
295-10	50326-50337	recommended	_	_	_	_	
295-11	50338-50344	memory	_	_	_	_	
295-12	50345-50353	settings	_	_	_	_	
295-13	50354-50357	for	_	_	_	_	
295-14	50358-50369	virtualized	_	_	_	_	
295-15	50370-50379	workloads	_	_	_	_	
295-16	50380-50382	in	_	_	_	_	
295-17	50383-50388	Cisco	_	_	_	_	
295-18	50389-50392	UCS	_	_	_	_	
295-19	50393-50395	M5	_	_	_	_	
295-20	50396-50403	servers	_	_	_	_	
295-21	50403-50404	.	_	_	_	_	

#Text=Figure 9.
296-1	50405-50411	Figure	_	_	_	_	
296-2	50412-50413	9	_	_	_	_	
296-3	50413-50414	.	_	_	_	_	

#Text=Memory settings for virtualized workloads
#Text=When running applications that access memory randomly, set the Select Memory RAS option to Maximum Performance.
297-1	50415-50421	Memory	_	_	_	_	
297-2	50422-50430	settings	_	_	_	_	
297-3	50431-50434	for	_	_	_	_	
297-4	50435-50446	virtualized	_	_	_	_	
297-5	50447-50456	workloads	_	_	_	_	
297-6	50457-50461	When	_	_	_	_	
297-7	50462-50469	running	_	_	_	_	
297-8	50470-50482	applications	_	_	_	_	
297-9	50483-50487	that	_	_	_	_	
297-10	50488-50494	access	_	_	_	_	
297-11	50495-50501	memory	_	_	_	_	
297-12	50502-50510	randomly	_	_	_	_	
297-13	50510-50511	,	_	_	_	_	
297-14	50512-50515	set	_	_	_	_	
297-15	50516-50519	the	_	_	_	_	
297-16	50520-50526	Select	_	_	_	_	
297-17	50527-50533	Memory	_	_	_	_	
297-18	50534-50537	RAS	_	_	_	_	
297-19	50538-50544	option	_	_	_	_	
297-20	50545-50547	to	_	_	_	_	
297-21	50548-50555	Maximum	_	_	_	_	
297-22	50556-50567	Performance	_	_	_	_	
297-23	50567-50568	.	_	_	_	_	

#Text=This setting helps achieve optimal system performance.
298-1	50569-50573	This	_	_	_	_	
298-2	50574-50581	setting	_	_	_	_	
298-3	50582-50587	helps	_	_	_	_	
298-4	50588-50595	achieve	_	_	_	_	
298-5	50596-50603	optimal	_	_	_	_	
298-6	50604-50610	system	_	_	_	_	
298-7	50611-50622	performance	_	_	_	_	
298-8	50622-50623	.	_	_	_	_	

#Text=In virtualized environments, run the memory at the highest frequency to reduce memory latency.
299-1	50624-50626	In	_	_	_	_	
299-2	50627-50638	virtualized	_	_	_	_	
299-3	50639-50651	environments	_	_	_	_	
299-4	50651-50652	,	_	_	_	_	
299-5	50653-50656	run	_	_	_	_	
299-6	50657-50660	the	_	_	_	_	
299-7	50661-50667	memory	_	_	_	_	
299-8	50668-50670	at	_	_	_	_	
299-9	50671-50674	the	_	_	_	_	
299-10	50675-50682	highest	_	_	_	_	
299-11	50683-50692	frequency	_	_	_	_	
299-12	50693-50695	to	_	_	_	_	
299-13	50696-50702	reduce	_	_	_	_	
299-14	50703-50709	memory	_	_	_	_	
299-15	50710-50717	latency	_	_	_	_	
299-16	50717-50718	.	_	_	_	_	

#Text=Processor and memory settings for standalone Cisco UCS C-Series servers: Virtualization
#Text=Figures 10 and 11 show processor and power and performance settings for virtualized workloads in standalone Cisco UCS C-Series M5 servers.
300-1	50719-50728	Processor	_	_	_	_	
300-2	50729-50732	and	_	_	_	_	
300-3	50733-50739	memory	_	_	_	_	
300-4	50740-50748	settings	_	_	_	_	
300-5	50749-50752	for	_	_	_	_	
300-6	50753-50763	standalone	_	_	_	_	
300-7	50764-50769	Cisco	_	_	_	_	
300-8	50770-50773	UCS	_	_	_	_	
300-9	50774-50782	C-Series	_	_	_	_	
300-10	50783-50790	servers	_	_	_	_	
300-11	50790-50791	:	_	_	_	_	
300-12	50792-50806	Virtualization	_	_	_	_	
300-13	50807-50814	Figures	_	_	_	_	
300-14	50815-50817	10	_	_	_	_	
300-15	50818-50821	and	_	_	_	_	
300-16	50822-50824	11	_	_	_	_	
300-17	50825-50829	show	_	_	_	_	
300-18	50830-50839	processor	_	_	_	_	
300-19	50840-50843	and	_	_	_	_	
300-20	50844-50849	power	_	_	_	_	
300-21	50850-50853	and	_	_	_	_	
300-22	50854-50865	performance	_	_	_	_	
300-23	50866-50874	settings	_	_	_	_	
300-24	50875-50878	for	_	_	_	_	
300-25	50879-50890	virtualized	_	_	_	_	
300-26	50891-50900	workloads	_	_	_	_	
300-27	50901-50903	in	_	_	_	_	
300-28	50904-50914	standalone	_	_	_	_	
300-29	50915-50920	Cisco	_	_	_	_	
300-30	50921-50924	UCS	_	_	_	_	
300-31	50925-50933	C-Series	_	_	_	_	
300-32	50934-50936	M5	_	_	_	_	
300-33	50937-50944	servers	_	_	_	_	
300-34	50944-50945	.	_	_	_	_	

#Text=Figure 10.
301-1	50946-50952	Figure	_	_	_	_	
301-2	50953-50955	10	_	_	_	_	
301-3	50955-50956	.	_	_	_	_	

#Text=Processor settings for virtualized workloads
#Text=Figure 11.
302-1	50957-50966	Processor	_	_	_	_	
302-2	50967-50975	settings	_	_	_	_	
302-3	50976-50979	for	_	_	_	_	
302-4	50980-50991	virtualized	_	_	_	_	
302-5	50992-51001	workloads	_	_	_	_	
302-6	51002-51008	Figure	_	_	_	_	
302-7	51009-51011	11	_	_	_	_	
302-8	51011-51012	.	_	_	_	_	

#Text=Power and performance settings for virtualized workloads
#Text=Memory settings for virtualized workloads
#Text=Figure 12 shows memory settings for virtualized workloads in standalone Cisco UCS C-Series M5 servers.
303-1	51013-51018	Power	_	_	_	_	
303-2	51019-51022	and	_	_	_	_	
303-3	51023-51034	performance	_	_	_	_	
303-4	51035-51043	settings	_	_	_	_	
303-5	51044-51047	for	_	_	_	_	
303-6	51048-51059	virtualized	_	_	_	_	
303-7	51060-51069	workloads	_	_	_	_	
303-8	51070-51076	Memory	_	_	_	_	
303-9	51077-51085	settings	_	_	_	_	
303-10	51086-51089	for	_	_	_	_	
303-11	51090-51101	virtualized	_	_	_	_	
303-12	51102-51111	workloads	_	_	_	_	
303-13	51112-51118	Figure	_	_	_	_	
303-14	51119-51121	12	_	_	_	_	
303-15	51122-51127	shows	_	_	_	_	
303-16	51128-51134	memory	_	_	_	_	
303-17	51135-51143	settings	_	_	_	_	
303-18	51144-51147	for	_	_	_	_	
303-19	51148-51159	virtualized	_	_	_	_	
303-20	51160-51169	workloads	_	_	_	_	
303-21	51170-51172	in	_	_	_	_	
303-22	51173-51183	standalone	_	_	_	_	
303-23	51184-51189	Cisco	_	_	_	_	
303-24	51190-51193	UCS	_	_	_	_	
303-25	51194-51202	C-Series	_	_	_	_	
303-26	51203-51205	M5	_	_	_	_	
303-27	51206-51213	servers	_	_	_	_	
303-28	51213-51214	.	_	_	_	_	

#Text=Figure 12.
304-1	51215-51221	Figure	_	_	_	_	
304-2	51222-51224	12	_	_	_	_	
304-3	51224-51225	.	_	_	_	_	

#Text=Memory settings for virtualized workloads
#Text=High-performance computing workloads
#Text=HPC refers to cluster-based computing that uses multiple individual nodes that are connected and that work in parallel to reduce the amount of time required to process large data sets that would otherwise take exponentially longer to run on any one system.
305-1	51226-51232	Memory	_	_	_	_	
305-2	51233-51241	settings	_	_	_	_	
305-3	51242-51245	for	_	_	_	_	
305-4	51246-51257	virtualized	_	_	_	_	
305-5	51258-51267	workloads	_	_	_	_	
305-6	51268-51284	High-performance	_	_	_	_	
305-7	51285-51294	computing	_	_	_	_	
305-8	51295-51304	workloads	_	_	_	_	
305-9	51305-51308	HPC	_	_	_	_	
305-10	51309-51315	refers	_	_	_	_	
305-11	51316-51318	to	_	_	_	_	
305-12	51319-51332	cluster-based	_	_	_	_	
305-13	51333-51342	computing	_	_	_	_	
305-14	51343-51347	that	_	_	_	_	
305-15	51348-51352	uses	_	_	_	_	
305-16	51353-51361	multiple	_	_	_	_	
305-17	51362-51372	individual	_	_	_	_	
305-18	51373-51378	nodes	_	_	_	_	
305-19	51379-51383	that	_	_	_	_	
305-20	51384-51387	are	_	_	_	_	
305-21	51388-51397	connected	_	_	_	_	
305-22	51398-51401	and	_	_	_	_	
305-23	51402-51406	that	_	_	_	_	
305-24	51407-51411	work	_	_	_	_	
305-25	51412-51414	in	_	_	_	_	
305-26	51415-51423	parallel	_	_	_	_	
305-27	51424-51426	to	_	_	_	_	
305-28	51427-51433	reduce	_	_	_	_	
305-29	51434-51437	the	_	_	_	_	
305-30	51438-51444	amount	_	_	_	_	
305-31	51445-51447	of	_	_	_	_	
305-32	51448-51452	time	_	_	_	_	
305-33	51453-51461	required	_	_	_	_	
305-34	51462-51464	to	_	_	_	_	
305-35	51465-51472	process	_	_	_	_	
305-36	51473-51478	large	_	_	_	_	
305-37	51479-51483	data	_	_	_	_	
305-38	51484-51488	sets	_	_	_	_	
305-39	51489-51493	that	_	_	_	_	
305-40	51494-51499	would	_	_	_	_	
305-41	51500-51509	otherwise	_	_	_	_	
305-42	51510-51514	take	_	_	_	_	
305-43	51515-51528	exponentially	_	_	_	_	
305-44	51529-51535	longer	_	_	_	_	
305-45	51536-51538	to	_	_	_	_	
305-46	51539-51542	run	_	_	_	_	
305-47	51543-51545	on	_	_	_	_	
305-48	51546-51549	any	_	_	_	_	
305-49	51550-51553	one	_	_	_	_	
305-50	51554-51560	system	_	_	_	_	
305-51	51560-51561	.	_	_	_	_	

#Text=HPC workloads are computation intensive and typically also network-I/O intensive.
306-1	51562-51565	HPC	_	_	_	_	
306-2	51566-51575	workloads	_	_	_	_	
306-3	51576-51579	are	_	_	_	_	
306-4	51580-51591	computation	_	_	_	_	
306-5	51592-51601	intensive	_	_	_	_	
306-6	51602-51605	and	_	_	_	_	
306-7	51606-51615	typically	_	_	_	_	
306-8	51616-51620	also	_	_	_	_	
306-9	51621-51630	network-I	_	_	_	_	
306-10	51630-51631	/	_	_	_	_	
306-11	51631-51632	O	_	_	_	_	
306-12	51633-51642	intensive	_	_	_	_	
306-13	51642-51643	.	_	_	_	_	

#Text=HPC workloads require high-quality CPU components and high-speed, low-latency network fabrics for their Message Passing Interface (MPI) connections.
307-1	51644-51647	HPC	_	_	_	_	
307-2	51648-51657	workloads	_	_	_	_	
307-3	51658-51665	require	_	_	_	_	
307-4	51666-51678	high-quality	_	_	_	_	
307-5	51679-51682	CPU	_	_	_	_	
307-6	51683-51693	components	_	_	_	_	
307-7	51694-51697	and	_	_	_	_	
307-8	51698-51708	high-speed	_	_	_	_	
307-9	51708-51709	,	_	_	_	_	
307-10	51710-51721	low-latency	_	_	_	_	
307-11	51722-51729	network	_	_	_	_	
307-12	51730-51737	fabrics	_	_	_	_	
307-13	51738-51741	for	_	_	_	_	
307-14	51742-51747	their	_	_	_	_	
307-15	51748-51755	Message	_	_	_	_	
307-16	51756-51763	Passing	_	_	_	_	
307-17	51764-51773	Interface	_	_	_	_	
307-18	51774-51775	(	_	_	_	_	
307-19	51775-51778	MPI	_	_	_	_	
307-20	51778-51779	)	_	_	_	_	
307-21	51780-51791	connections	_	_	_	_	
307-22	51791-51792	.	_	_	_	_	

#Text=Computing clusters include a head node that provides a single point for administering, deploying, monitoring, and managing the cluster.
308-1	51793-51802	Computing	_	_	_	_	
308-2	51803-51811	clusters	_	_	_	_	
308-3	51812-51819	include	_	_	_	_	
308-4	51820-51821	a	_	_	_	_	
308-5	51822-51826	head	_	_	_	_	
308-6	51827-51831	node	_	_	_	_	
308-7	51832-51836	that	_	_	_	_	
308-8	51837-51845	provides	_	_	_	_	
308-9	51846-51847	a	_	_	_	_	
308-10	51848-51854	single	_	_	_	_	
308-11	51855-51860	point	_	_	_	_	
308-12	51861-51864	for	_	_	_	_	
308-13	51865-51878	administering	_	_	_	_	
308-14	51878-51879	,	_	_	_	_	
308-15	51880-51889	deploying	_	_	_	_	
308-16	51889-51890	,	_	_	_	_	
308-17	51891-51901	monitoring	_	_	_	_	
308-18	51901-51902	,	_	_	_	_	
308-19	51903-51906	and	_	_	_	_	
308-20	51907-51915	managing	_	_	_	_	
308-21	51916-51919	the	_	_	_	_	
308-22	51920-51927	cluster	_	_	_	_	
308-23	51927-51928	.	_	_	_	_	

#Text=Clusters also have an internal workload management component, known as the scheduler, that manages all incoming work items (referred to as jobs).
309-1	51929-51937	Clusters	_	_	_	_	
309-2	51938-51942	also	_	_	_	_	
309-3	51943-51947	have	_	_	_	_	
309-4	51948-51950	an	_	_	_	_	
309-5	51951-51959	internal	_	_	_	_	
309-6	51960-51968	workload	_	_	_	_	
309-7	51969-51979	management	_	_	_	_	
309-8	51980-51989	component	_	_	_	_	
309-9	51989-51990	,	_	_	_	_	
309-10	51991-51996	known	_	_	_	_	
309-11	51997-51999	as	_	_	_	_	
309-12	52000-52003	the	_	_	_	_	
309-13	52004-52013	scheduler	_	_	_	_	
309-14	52013-52014	,	_	_	_	_	
309-15	52015-52019	that	_	_	_	_	
309-16	52020-52027	manages	_	_	_	_	
309-17	52028-52031	all	_	_	_	_	
309-18	52032-52040	incoming	_	_	_	_	
309-19	52041-52045	work	_	_	_	_	
309-20	52046-52051	items	_	_	_	_	
309-21	52052-52053	(	_	_	_	_	
309-22	52053-52061	referred	_	_	_	_	
309-23	52062-52064	to	_	_	_	_	
309-24	52065-52067	as	_	_	_	_	
309-25	52068-52072	jobs	_	_	_	_	
309-26	52072-52073	)	_	_	_	_	
309-27	52073-52074	.	_	_	_	_	

#Text=Typically, HPC workloads require large numbers of nodes with nonblocking MPI networks so that they can scale.
310-1	52075-52084	Typically	_	_	_	_	
310-2	52084-52085	,	_	_	_	_	
310-3	52086-52089	HPC	_	_	_	_	
310-4	52090-52099	workloads	_	_	_	_	
310-5	52100-52107	require	_	_	_	_	
310-6	52108-52113	large	_	_	_	_	
310-7	52114-52121	numbers	_	_	_	_	
310-8	52122-52124	of	_	_	_	_	
310-9	52125-52130	nodes	_	_	_	_	
310-10	52131-52135	with	_	_	_	_	
310-11	52136-52147	nonblocking	_	_	_	_	
310-12	52148-52151	MPI	_	_	_	_	
310-13	52152-52160	networks	_	_	_	_	
310-14	52161-52163	so	_	_	_	_	
310-15	52164-52168	that	_	_	_	_	
310-16	52169-52173	they	_	_	_	_	
310-17	52174-52177	can	_	_	_	_	
310-18	52178-52183	scale	_	_	_	_	
310-19	52183-52184	.	_	_	_	_	

#Text=Scalability of nodes is the single most important factor in determining the achieved usable performance of a cluster.
311-1	52185-52196	Scalability	_	_	_	_	
311-2	52197-52199	of	_	_	_	_	
311-3	52200-52205	nodes	_	_	_	_	
311-4	52206-52208	is	_	_	_	_	
311-5	52209-52212	the	_	_	_	_	
311-6	52213-52219	single	_	_	_	_	
311-7	52220-52224	most	_	_	_	_	
311-8	52225-52234	important	_	_	_	_	
311-9	52235-52241	factor	_	_	_	_	
311-10	52242-52244	in	_	_	_	_	
311-11	52245-52256	determining	_	_	_	_	
311-12	52257-52260	the	_	_	_	_	
311-13	52261-52269	achieved	_	_	_	_	
311-14	52270-52276	usable	_	_	_	_	
311-15	52277-52288	performance	_	_	_	_	
311-16	52289-52291	of	_	_	_	_	
311-17	52292-52293	a	_	_	_	_	
311-18	52294-52301	cluster	_	_	_	_	
311-19	52301-52302	.	_	_	_	_	

#Text=Processor and memory settings for Cisco UCS managed servers: HPC
#Text=Figure 13 Highlights the BIOS selections that are recommended for HPC workloads on Cisco UCS M5 platforms managed by Cisco UCS Manager.
312-1	52303-52312	Processor	_	_	_	_	
312-2	52313-52316	and	_	_	_	_	
312-3	52317-52323	memory	_	_	_	_	
312-4	52324-52332	settings	_	_	_	_	
312-5	52333-52336	for	_	_	_	_	
312-6	52337-52342	Cisco	_	_	_	_	
312-7	52343-52346	UCS	_	_	_	_	
312-8	52347-52354	managed	_	_	_	_	
312-9	52355-52362	servers	_	_	_	_	
312-10	52362-52363	:	_	_	_	_	
312-11	52364-52367	HPC	_	_	_	_	
312-12	52368-52374	Figure	_	_	_	_	
312-13	52375-52377	13	_	_	_	_	
312-14	52378-52388	Highlights	_	_	_	_	
312-15	52389-52392	the	_	_	_	_	
312-16	52393-52397	BIOS	_	_	_	_	
312-17	52398-52408	selections	_	_	_	_	
312-18	52409-52413	that	_	_	_	_	
312-19	52414-52417	are	_	_	_	_	
312-20	52418-52429	recommended	_	_	_	_	
312-21	52430-52433	for	_	_	_	_	
312-22	52434-52437	HPC	_	_	_	_	
312-23	52438-52447	workloads	_	_	_	_	
312-24	52448-52450	on	_	_	_	_	
312-25	52451-52456	Cisco	_	_	_	_	
312-26	52457-52460	UCS	_	_	_	_	
312-27	52461-52463	M5	_	_	_	_	
312-28	52464-52473	platforms	_	_	_	_	
312-29	52474-52481	managed	_	_	_	_	
312-30	52482-52484	by	_	_	_	_	
312-31	52485-52490	Cisco	_	_	_	_	
312-32	52491-52494	UCS	_	_	_	_	
312-33	52495-52502	Manager	_	_	_	_	
312-34	52502-52503	.	_	_	_	_	

#Text=Rest of the BIOS settings are configured as “Platform Default”.
313-1	52504-52508	Rest	_	_	_	_	
313-2	52509-52511	of	_	_	_	_	
313-3	52512-52515	the	_	_	_	_	
313-4	52516-52520	BIOS	_	_	_	_	
313-5	52521-52529	settings	_	_	_	_	
313-6	52530-52533	are	_	_	_	_	
313-7	52534-52544	configured	_	_	_	_	
313-8	52545-52547	as	_	_	_	_	
313-9	52548-52549	“	_	_	_	_	
313-10	52549-52557	Platform	_	_	_	_	
313-11	52558-52565	Default	_	_	_	_	
313-12	52565-52566	”	_	_	_	_	
313-13	52566-52567	.	_	_	_	_	

#Text=Figure 13.
314-1	52568-52574	Figure	_	_	_	_	
314-2	52575-52577	13	_	_	_	_	
314-3	52577-52578	.	_	_	_	_	

#Text=Processor settings for HPC workloads
#Text=You should enable Intel Turbo Boost technology for HPC workloads to increase the computing power.
315-1	52579-52588	Processor	_	_	_	_	
315-2	52589-52597	settings	_	_	_	_	
315-3	52598-52601	for	_	_	_	_	
315-4	52602-52605	HPC	_	_	_	_	
315-5	52606-52615	workloads	_	_	_	_	
315-6	52616-52619	You	_	_	_	_	
315-7	52620-52626	should	_	_	_	_	
315-8	52627-52633	enable	_	_	_	_	
315-9	52634-52639	Intel	_	_	_	_	
315-10	52640-52645	Turbo	_	_	_	_	
315-11	52646-52651	Boost	_	_	_	_	
315-12	52652-52662	technology	_	_	_	_	
315-13	52663-52666	for	_	_	_	_	
315-14	52667-52670	HPC	_	_	_	_	
315-15	52671-52680	workloads	_	_	_	_	
315-16	52681-52683	to	_	_	_	_	
315-17	52684-52692	increase	_	_	_	_	
315-18	52693-52696	the	_	_	_	_	
315-19	52697-52706	computing	_	_	_	_	
315-20	52707-52712	power	_	_	_	_	
315-21	52712-52713	.	_	_	_	_	

#Text=When Intel Turbo Boost is enabled, each core provides higher computing frequency potential, allowing a greater number of parallel requests to be processed efficiently.
316-1	52714-52718	When	_	_	_	_	
316-2	52719-52724	Intel	_	_	_	_	
316-3	52725-52730	Turbo	_	_	_	_	
316-4	52731-52736	Boost	_	_	_	_	
316-5	52737-52739	is	_	_	_	_	
316-6	52740-52747	enabled	_	_	_	_	
316-7	52747-52748	,	_	_	_	_	
316-8	52749-52753	each	_	_	_	_	
316-9	52754-52758	core	_	_	_	_	
316-10	52759-52767	provides	_	_	_	_	
316-11	52768-52774	higher	_	_	_	_	
316-12	52775-52784	computing	_	_	_	_	
316-13	52785-52794	frequency	_	_	_	_	
316-14	52795-52804	potential	_	_	_	_	
316-15	52804-52805	,	_	_	_	_	
316-16	52806-52814	allowing	_	_	_	_	
316-17	52815-52816	a	_	_	_	_	
316-18	52817-52824	greater	_	_	_	_	
316-19	52825-52831	number	_	_	_	_	
316-20	52832-52834	of	_	_	_	_	
316-21	52835-52843	parallel	_	_	_	_	
316-22	52844-52852	requests	_	_	_	_	
316-23	52853-52855	to	_	_	_	_	
316-24	52856-52858	be	_	_	_	_	
316-25	52859-52868	processed	_	_	_	_	
316-26	52869-52880	efficiently	_	_	_	_	
316-27	52880-52881	.	_	_	_	_	

#Text=Intel SpeedStep is enabled because it is required for Intel Turbo Boost to function.
317-1	52882-52887	Intel	_	_	_	_	
317-2	52888-52897	SpeedStep	_	_	_	_	
317-3	52898-52900	is	_	_	_	_	
317-4	52901-52908	enabled	_	_	_	_	
317-5	52909-52916	because	_	_	_	_	
317-6	52917-52919	it	_	_	_	_	
317-7	52920-52922	is	_	_	_	_	
317-8	52923-52931	required	_	_	_	_	
317-9	52932-52935	for	_	_	_	_	
317-10	52936-52941	Intel	_	_	_	_	
317-11	52942-52947	Turbo	_	_	_	_	
317-12	52948-52953	Boost	_	_	_	_	
317-13	52954-52956	to	_	_	_	_	
317-14	52957-52965	function	_	_	_	_	
317-15	52965-52966	.	_	_	_	_	

#Text=HPC workloads typically do not benefit from Intel Hyper-Threading.
318-1	52967-52970	HPC	_	_	_	_	
318-2	52971-52980	workloads	_	_	_	_	
318-3	52981-52990	typically	_	_	_	_	
318-4	52991-52993	do	_	_	_	_	
318-5	52994-52997	not	_	_	_	_	
318-6	52998-53005	benefit	_	_	_	_	
318-7	53006-53010	from	_	_	_	_	
318-8	53011-53016	Intel	_	_	_	_	
318-9	53017-53032	Hyper-Threading	_	_	_	_	
318-10	53032-53033	.	_	_	_	_	

#Text=Additional threads only serve to create resource contention within the microarchitecture of the CPU.
319-1	53034-53044	Additional	_	_	_	_	
319-2	53045-53052	threads	_	_	_	_	
319-3	53053-53057	only	_	_	_	_	
319-4	53058-53063	serve	_	_	_	_	
319-5	53064-53066	to	_	_	_	_	
319-6	53067-53073	create	_	_	_	_	
319-7	53074-53082	resource	_	_	_	_	
319-8	53083-53093	contention	_	_	_	_	
319-9	53094-53100	within	_	_	_	_	
319-10	53101-53104	the	_	_	_	_	
319-11	53105-53122	microarchitecture	_	_	_	_	
319-12	53123-53125	of	_	_	_	_	
319-13	53126-53129	the	_	_	_	_	
319-14	53130-53133	CPU	_	_	_	_	
319-15	53133-53134	.	_	_	_	_	

#Text=Generally, Intel Hyper-Threading has the greatest impact on workloads in which threads are forced to wait for completion of back-end I/O requests, to reduce thread contention for CPU resources.
320-1	53135-53144	Generally	_	_	_	_	
320-2	53144-53145	,	_	_	_	_	
320-3	53146-53151	Intel	_	_	_	_	
320-4	53152-53167	Hyper-Threading	_	_	_	_	
320-5	53168-53171	has	_	_	_	_	
320-6	53172-53175	the	_	_	_	_	
320-7	53176-53184	greatest	_	_	_	_	
320-8	53185-53191	impact	_	_	_	_	
320-9	53192-53194	on	_	_	_	_	
320-10	53195-53204	workloads	_	_	_	_	
320-11	53205-53207	in	_	_	_	_	
320-12	53208-53213	which	_	_	_	_	
320-13	53214-53221	threads	_	_	_	_	
320-14	53222-53225	are	_	_	_	_	
320-15	53226-53232	forced	_	_	_	_	
320-16	53233-53235	to	_	_	_	_	
320-17	53236-53240	wait	_	_	_	_	
320-18	53241-53244	for	_	_	_	_	
320-19	53245-53255	completion	_	_	_	_	
320-20	53256-53258	of	_	_	_	_	
320-21	53259-53267	back-end	_	_	_	_	
320-22	53268-53269	I	_	_	_	_	
320-23	53269-53270	/	_	_	_	_	
320-24	53270-53271	O	_	_	_	_	
320-25	53272-53280	requests	_	_	_	_	
320-26	53280-53281	,	_	_	_	_	
320-27	53282-53284	to	_	_	_	_	
320-28	53285-53291	reduce	_	_	_	_	
320-29	53292-53298	thread	_	_	_	_	
320-30	53299-53309	contention	_	_	_	_	
320-31	53310-53313	for	_	_	_	_	
320-32	53314-53317	CPU	_	_	_	_	
320-33	53318-53327	resources	_	_	_	_	
320-34	53327-53328	.	_	_	_	_	

#Text=Enabling the processor power state C6 helps save power when the CPU is idle.
321-1	53329-53337	Enabling	_	_	_	_	
321-2	53338-53341	the	_	_	_	_	
321-3	53342-53351	processor	_	_	_	_	
321-4	53352-53357	power	_	_	_	_	
321-5	53358-53363	state	_	_	_	_	
321-6	53364-53366	C6	_	_	_	_	
321-7	53367-53372	helps	_	_	_	_	
321-8	53373-53377	save	_	_	_	_	
321-9	53378-53383	power	_	_	_	_	
321-10	53384-53388	when	_	_	_	_	
321-11	53389-53392	the	_	_	_	_	
321-12	53393-53396	CPU	_	_	_	_	
321-13	53397-53399	is	_	_	_	_	
321-14	53400-53404	idle	_	_	_	_	
321-15	53404-53405	.	_	_	_	_	

#Text=Because HPC is computing intensive, the CPU will likely seldom go into an idle state.
322-1	53406-53413	Because	_	_	_	_	
322-2	53414-53417	HPC	_	_	_	_	
322-3	53418-53420	is	_	_	_	_	
322-4	53421-53430	computing	_	_	_	_	
322-5	53431-53440	intensive	_	_	_	_	
322-6	53440-53441	,	_	_	_	_	
322-7	53442-53445	the	_	_	_	_	
322-8	53446-53449	CPU	_	_	_	_	
322-9	53450-53454	will	_	_	_	_	
322-10	53455-53461	likely	_	_	_	_	
322-11	53462-53468	seldom	_	_	_	_	
322-12	53469-53471	go	_	_	_	_	
322-13	53472-53476	into	_	_	_	_	
322-14	53477-53479	an	_	_	_	_	
322-15	53480-53484	idle	_	_	_	_	
322-16	53485-53490	state	_	_	_	_	
322-17	53490-53491	.	_	_	_	_	

#Text=However, enabling C-states saves CPU power in the event that there are any inactive requests.
323-1	53492-53499	However	_	_	_	_	
323-2	53499-53500	,	_	_	_	_	
323-3	53501-53509	enabling	_	_	_	_	
323-4	53510-53518	C-states	_	_	_	_	
323-5	53519-53524	saves	_	_	_	_	
323-6	53525-53528	CPU	_	_	_	_	
323-7	53529-53534	power	_	_	_	_	
323-8	53535-53537	in	_	_	_	_	
323-9	53538-53541	the	_	_	_	_	
323-10	53542-53547	event	_	_	_	_	
323-11	53548-53552	that	_	_	_	_	
323-12	53553-53558	there	_	_	_	_	
323-13	53559-53562	are	_	_	_	_	
323-14	53563-53566	any	_	_	_	_	
323-15	53567-53575	inactive	_	_	_	_	
323-16	53576-53584	requests	_	_	_	_	
323-17	53584-53585	.	_	_	_	_	

#Text=You should set CPU Performance to HPC mode to handle more random, parallel requests by HPC applications.
324-1	53586-53589	You	_	_	_	_	
324-2	53590-53596	should	_	_	_	_	
324-3	53597-53600	set	_	_	_	_	
324-4	53601-53604	CPU	_	_	_	_	
324-5	53605-53616	Performance	_	_	_	_	
324-6	53617-53619	to	_	_	_	_	
324-7	53620-53623	HPC	_	_	_	_	
324-8	53624-53628	mode	_	_	_	_	
324-9	53629-53631	to	_	_	_	_	
324-10	53632-53638	handle	_	_	_	_	
324-11	53639-53643	more	_	_	_	_	
324-12	53644-53650	random	_	_	_	_	
324-13	53650-53651	,	_	_	_	_	
324-14	53652-53660	parallel	_	_	_	_	
324-15	53661-53669	requests	_	_	_	_	
324-16	53670-53672	by	_	_	_	_	
324-17	53673-53676	HPC	_	_	_	_	
324-18	53677-53689	applications	_	_	_	_	
324-19	53689-53690	.	_	_	_	_	

#Text=If HPC performs more in-memory processing (for example, for video data), you should enable the prefetcher options so that they can handle multiple parallel requests.
325-1	53691-53693	If	_	_	_	_	
325-2	53694-53697	HPC	_	_	_	_	
325-3	53698-53706	performs	_	_	_	_	
325-4	53707-53711	more	_	_	_	_	
325-5	53712-53721	in-memory	_	_	_	_	
325-6	53722-53732	processing	_	_	_	_	
325-7	53733-53734	(	_	_	_	_	
325-8	53734-53737	for	_	_	_	_	
325-9	53738-53745	example	_	_	_	_	
325-10	53745-53746	,	_	_	_	_	
325-11	53747-53750	for	_	_	_	_	
325-12	53751-53756	video	_	_	_	_	
325-13	53757-53761	data	_	_	_	_	
325-14	53761-53762	)	_	_	_	_	
325-15	53762-53763	,	_	_	_	_	
325-16	53764-53767	you	_	_	_	_	
325-17	53768-53774	should	_	_	_	_	
325-18	53775-53781	enable	_	_	_	_	
325-19	53782-53785	the	_	_	_	_	
325-20	53786-53796	prefetcher	_	_	_	_	
325-21	53797-53804	options	_	_	_	_	
325-22	53805-53807	so	_	_	_	_	
325-23	53808-53812	that	_	_	_	_	
325-24	53813-53817	they	_	_	_	_	
325-25	53818-53821	can	_	_	_	_	
325-26	53822-53828	handle	_	_	_	_	
325-27	53829-53837	multiple	_	_	_	_	
325-28	53838-53846	parallel	_	_	_	_	
325-29	53847-53855	requests	_	_	_	_	
325-30	53855-53856	.	_	_	_	_	

#Text=This configuration also helps retain some hot data in the Layer 2 cache, and it improves HPC performance (CPU performance).
326-1	53857-53861	This	_	_	_	_	
326-2	53862-53875	configuration	_	_	_	_	
326-3	53876-53880	also	_	_	_	_	
326-4	53881-53886	helps	_	_	_	_	
326-5	53887-53893	retain	_	_	_	_	
326-6	53894-53898	some	_	_	_	_	
326-7	53899-53902	hot	_	_	_	_	
326-8	53903-53907	data	_	_	_	_	
326-9	53908-53910	in	_	_	_	_	
326-10	53911-53914	the	_	_	_	_	
326-11	53915-53920	Layer	_	_	_	_	
326-12	53921-53922	2	_	_	_	_	
326-13	53923-53928	cache	_	_	_	_	
326-14	53928-53929	,	_	_	_	_	
326-15	53930-53933	and	_	_	_	_	
326-16	53934-53936	it	_	_	_	_	
326-17	53937-53945	improves	_	_	_	_	
326-18	53946-53949	HPC	_	_	_	_	
326-19	53950-53961	performance	_	_	_	_	
326-20	53962-53963	(	_	_	_	_	
326-21	53963-53966	CPU	_	_	_	_	
326-22	53967-53978	performance	_	_	_	_	
326-23	53978-53979	)	_	_	_	_	
326-24	53979-53980	.	_	_	_	_	

#Text=HPC requires a high-bandwidth I/O network.
327-1	53981-53984	HPC	_	_	_	_	
327-2	53985-53993	requires	_	_	_	_	
327-3	53994-53995	a	_	_	_	_	
327-4	53996-54010	high-bandwidth	_	_	_	_	
327-5	54011-54012	I	_	_	_	_	
327-6	54012-54013	/	_	_	_	_	
327-7	54013-54014	O	_	_	_	_	
327-8	54015-54022	network	_	_	_	_	
327-9	54022-54023	.	_	_	_	_	

#Text=When you enable DCA support, network packets go directly into the Layer 3 processor cache instead of the main memory.
328-1	54024-54028	When	_	_	_	_	
328-2	54029-54032	you	_	_	_	_	
328-3	54033-54039	enable	_	_	_	_	
328-4	54040-54043	DCA	_	_	_	_	
328-5	54044-54051	support	_	_	_	_	
328-6	54051-54052	,	_	_	_	_	
328-7	54053-54060	network	_	_	_	_	
328-8	54061-54068	packets	_	_	_	_	
328-9	54069-54071	go	_	_	_	_	
328-10	54072-54080	directly	_	_	_	_	
328-11	54081-54085	into	_	_	_	_	
328-12	54086-54089	the	_	_	_	_	
328-13	54090-54095	Layer	_	_	_	_	
328-14	54096-54097	3	_	_	_	_	
328-15	54098-54107	processor	_	_	_	_	
328-16	54108-54113	cache	_	_	_	_	
328-17	54114-54121	instead	_	_	_	_	
328-18	54122-54124	of	_	_	_	_	
328-19	54125-54128	the	_	_	_	_	
328-20	54129-54133	main	_	_	_	_	
328-21	54134-54140	memory	_	_	_	_	
328-22	54140-54141	.	_	_	_	_	

#Text=This approach reduces the number of HPC I/O cycles generated by HPC workloads when certain Ethernet adapters are used, which in turn increases system performance.
329-1	54142-54146	This	_	_	_	_	
329-2	54147-54155	approach	_	_	_	_	
329-3	54156-54163	reduces	_	_	_	_	
329-4	54164-54167	the	_	_	_	_	
329-5	54168-54174	number	_	_	_	_	
329-6	54175-54177	of	_	_	_	_	
329-7	54178-54181	HPC	_	_	_	_	
329-8	54182-54183	I	_	_	_	_	
329-9	54183-54184	/	_	_	_	_	
329-10	54184-54185	O	_	_	_	_	
329-11	54186-54192	cycles	_	_	_	_	
329-12	54193-54202	generated	_	_	_	_	
329-13	54203-54205	by	_	_	_	_	
329-14	54206-54209	HPC	_	_	_	_	
329-15	54210-54219	workloads	_	_	_	_	
329-16	54220-54224	when	_	_	_	_	
329-17	54225-54232	certain	_	_	_	_	
329-18	54233-54241	Ethernet	_	_	_	_	
329-19	54242-54250	adapters	_	_	_	_	
329-20	54251-54254	are	_	_	_	_	
329-21	54255-54259	used	_	_	_	_	
329-22	54259-54260	,	_	_	_	_	
329-23	54261-54266	which	_	_	_	_	
329-24	54267-54269	in	_	_	_	_	
329-25	54270-54274	turn	_	_	_	_	
329-26	54275-54284	increases	_	_	_	_	
329-27	54285-54291	system	_	_	_	_	
329-28	54292-54303	performance	_	_	_	_	
329-29	54303-54304	.	_	_	_	_	

#Text=You can set the Energy Performance option to Maximum Performance, Balanced Performance, Balanced Power, or Power Saver.
330-1	54305-54308	You	_	_	_	_	
330-2	54309-54312	can	_	_	_	_	
330-3	54313-54316	set	_	_	_	_	
330-4	54317-54320	the	_	_	_	_	
330-5	54321-54327	Energy	_	_	_	_	
330-6	54328-54339	Performance	_	_	_	_	
330-7	54340-54346	option	_	_	_	_	
330-8	54347-54349	to	_	_	_	_	
330-9	54350-54357	Maximum	_	_	_	_	
330-10	54358-54369	Performance	_	_	_	_	
330-11	54369-54370	,	_	_	_	_	
330-12	54371-54379	Balanced	_	_	_	_	
330-13	54380-54391	Performance	_	_	_	_	
330-14	54391-54392	,	_	_	_	_	
330-15	54393-54401	Balanced	_	_	_	_	
330-16	54402-54407	Power	_	_	_	_	
330-17	54407-54408	,	_	_	_	_	
330-18	54409-54411	or	_	_	_	_	
330-19	54412-54417	Power	_	_	_	_	
330-20	54418-54423	Saver	_	_	_	_	
330-21	54423-54424	.	_	_	_	_	

#Text=Test results demonstrate that most applications run best with the Balanced Performance setting.
331-1	54425-54429	Test	_	_	_	_	
331-2	54430-54437	results	_	_	_	_	
331-3	54438-54449	demonstrate	_	_	_	_	
331-4	54450-54454	that	_	_	_	_	
331-5	54455-54459	most	_	_	_	_	
331-6	54460-54472	applications	_	_	_	_	
331-7	54473-54476	run	_	_	_	_	
331-8	54477-54481	best	_	_	_	_	
331-9	54482-54486	with	_	_	_	_	
331-10	54487-54490	the	_	_	_	_	
331-11	54491-54499	Balanced	_	_	_	_	
331-12	54500-54511	Performance	_	_	_	_	
331-13	54512-54519	setting	_	_	_	_	
331-14	54519-54520	.	_	_	_	_	

#Text=Applications that are highly I/O sensitive perform best when the Energy Performance option is set to Maximum Performance.
332-1	54521-54533	Applications	_	_	_	_	
332-2	54534-54538	that	_	_	_	_	
332-3	54539-54542	are	_	_	_	_	
332-4	54543-54549	highly	_	_	_	_	
332-5	54550-54551	I	_	_	_	_	
332-6	54551-54552	/	_	_	_	_	
332-7	54552-54553	O	_	_	_	_	
332-8	54554-54563	sensitive	_	_	_	_	
332-9	54564-54571	perform	_	_	_	_	
332-10	54572-54576	best	_	_	_	_	
332-11	54577-54581	when	_	_	_	_	
332-12	54582-54585	the	_	_	_	_	
332-13	54586-54592	Energy	_	_	_	_	
332-14	54593-54604	Performance	_	_	_	_	
332-15	54605-54611	option	_	_	_	_	
332-16	54612-54614	is	_	_	_	_	
332-17	54615-54618	set	_	_	_	_	
332-18	54619-54621	to	_	_	_	_	
332-19	54622-54629	Maximum	_	_	_	_	
332-20	54630-54641	Performance	_	_	_	_	
332-21	54641-54642	.	_	_	_	_	

#Text=Intel Directed I/O for HPC workloads
#Text=Figure 14 shows the recommended Intel Directed I/O settings for HPC workloads in Cisco UCS M5 platforms.
333-1	54643-54648	Intel	_	_	_	_	
333-2	54649-54657	Directed	_	_	_	_	
333-3	54658-54659	I	_	_	_	_	
333-4	54659-54660	/	_	_	_	_	
333-5	54660-54661	O	_	_	_	_	
333-6	54662-54665	for	_	_	_	_	
333-7	54666-54669	HPC	_	_	_	_	
333-8	54670-54679	workloads	_	_	_	_	
333-9	54680-54686	Figure	_	_	_	_	
333-10	54687-54689	14	_	_	_	_	
333-11	54690-54695	shows	_	_	_	_	
333-12	54696-54699	the	_	_	_	_	
333-13	54700-54711	recommended	_	_	_	_	
333-14	54712-54717	Intel	_	_	_	_	
333-15	54718-54726	Directed	_	_	_	_	
333-16	54727-54728	I	_	_	_	_	
333-17	54728-54729	/	_	_	_	_	
333-18	54729-54730	O	_	_	_	_	
333-19	54731-54739	settings	_	_	_	_	
333-20	54740-54743	for	_	_	_	_	
333-21	54744-54747	HPC	_	_	_	_	
333-22	54748-54757	workloads	_	_	_	_	
333-23	54758-54760	in	_	_	_	_	
333-24	54761-54766	Cisco	_	_	_	_	
333-25	54767-54770	UCS	_	_	_	_	
333-26	54771-54773	M5	_	_	_	_	
333-27	54774-54783	platforms	_	_	_	_	
333-28	54783-54784	.	_	_	_	_	

#Text=Figure 14.
334-1	54785-54791	Figure	_	_	_	_	
334-2	54792-54794	14	_	_	_	_	
334-3	54794-54795	.	_	_	_	_	

#Text=Intel Directed I/O settings for HPC workloads
#Text=Memory settings for HPC workloads
#Text=Figure 15 shows the memory settings for HPC workloads on Cisco UCS M5 servers.
335-1	54796-54801	Intel	_	_	_	_	
335-2	54802-54810	Directed	_	_	_	_	
335-3	54811-54812	I	_	_	_	_	
335-4	54812-54813	/	_	_	_	_	
335-5	54813-54814	O	_	_	_	_	
335-6	54815-54823	settings	_	_	_	_	
335-7	54824-54827	for	_	_	_	_	
335-8	54828-54831	HPC	_	_	_	_	
335-9	54832-54841	workloads	_	_	_	_	
335-10	54842-54848	Memory	_	_	_	_	
335-11	54849-54857	settings	_	_	_	_	
335-12	54858-54861	for	_	_	_	_	
335-13	54862-54865	HPC	_	_	_	_	
335-14	54866-54875	workloads	_	_	_	_	
335-15	54876-54882	Figure	_	_	_	_	
335-16	54883-54885	15	_	_	_	_	
335-17	54886-54891	shows	_	_	_	_	
335-18	54892-54895	the	_	_	_	_	
335-19	54896-54902	memory	_	_	_	_	
335-20	54903-54911	settings	_	_	_	_	
335-21	54912-54915	for	_	_	_	_	
335-22	54916-54919	HPC	_	_	_	_	
335-23	54920-54929	workloads	_	_	_	_	
335-24	54930-54932	on	_	_	_	_	
335-25	54933-54938	Cisco	_	_	_	_	
335-26	54939-54942	UCS	_	_	_	_	
335-27	54943-54945	M5	_	_	_	_	
335-28	54946-54953	servers	_	_	_	_	
335-29	54953-54954	.	_	_	_	_	

#Text=Figure 15.
336-1	54955-54961	Figure	_	_	_	_	
336-2	54962-54964	15	_	_	_	_	
336-3	54964-54965	.	_	_	_	_	

#Text=Memory settings for HPC workloads
#Text=The NUMA option should be enabled for HPC workloads so that NUMA can determine the memory allocation for each thread run by the HPC applications.
337-1	54966-54972	Memory	_	_	_	_	
337-2	54973-54981	settings	_	_	_	_	
337-3	54982-54985	for	_	_	_	_	
337-4	54986-54989	HPC	_	_	_	_	
337-5	54990-54999	workloads	_	_	_	_	
337-6	55000-55003	The	_	_	_	_	
337-7	55004-55008	NUMA	_	_	_	_	
337-8	55009-55015	option	_	_	_	_	
337-9	55016-55022	should	_	_	_	_	
337-10	55023-55025	be	_	_	_	_	
337-11	55026-55033	enabled	_	_	_	_	
337-12	55034-55037	for	_	_	_	_	
337-13	55038-55041	HPC	_	_	_	_	
337-14	55042-55051	workloads	_	_	_	_	
337-15	55052-55054	so	_	_	_	_	
337-16	55055-55059	that	_	_	_	_	
337-17	55060-55064	NUMA	_	_	_	_	
337-18	55065-55068	can	_	_	_	_	
337-19	55069-55078	determine	_	_	_	_	
337-20	55079-55082	the	_	_	_	_	
337-21	55083-55089	memory	_	_	_	_	
337-22	55090-55100	allocation	_	_	_	_	
337-23	55101-55104	for	_	_	_	_	
337-24	55105-55109	each	_	_	_	_	
337-25	55110-55116	thread	_	_	_	_	
337-26	55117-55120	run	_	_	_	_	
337-27	55121-55123	by	_	_	_	_	
337-28	55124-55127	the	_	_	_	_	
337-29	55128-55131	HPC	_	_	_	_	
337-30	55132-55144	applications	_	_	_	_	
337-31	55144-55145	.	_	_	_	_	

#Text=Because HPC workloads perform mostly in-memory processing, you should set DIMMs to run at the highest available frequency to process the data more quickly.
338-1	55146-55153	Because	_	_	_	_	
338-2	55154-55157	HPC	_	_	_	_	
338-3	55158-55167	workloads	_	_	_	_	
338-4	55168-55175	perform	_	_	_	_	
338-5	55176-55182	mostly	_	_	_	_	
338-6	55183-55192	in-memory	_	_	_	_	
338-7	55193-55203	processing	_	_	_	_	
338-8	55203-55204	,	_	_	_	_	
338-9	55205-55208	you	_	_	_	_	
338-10	55209-55215	should	_	_	_	_	
338-11	55216-55219	set	_	_	_	_	
338-12	55220-55225	DIMMs	_	_	_	_	
338-13	55226-55228	to	_	_	_	_	
338-14	55229-55232	run	_	_	_	_	
338-15	55233-55235	at	_	_	_	_	
338-16	55236-55239	the	_	_	_	_	
338-17	55240-55247	highest	_	_	_	_	
338-18	55248-55257	available	_	_	_	_	
338-19	55258-55267	frequency	_	_	_	_	
338-20	55268-55270	to	_	_	_	_	
338-21	55271-55278	process	_	_	_	_	
338-22	55279-55282	the	_	_	_	_	
338-23	55283-55287	data	_	_	_	_	
338-24	55288-55292	more	_	_	_	_	
338-25	55293-55300	quickly	_	_	_	_	
338-26	55300-55301	.	_	_	_	_	

#Text=Processor and memory settings for standalone Cisco UCS C-Series servers: HPC
#Text=Figures 16 and 17 show the recommended processor and power and performance settings for HPC workloads in standalone Cisco UCS C-Series M5 servers.
339-1	55302-55311	Processor	_	_	_	_	
339-2	55312-55315	and	_	_	_	_	
339-3	55316-55322	memory	_	_	_	_	
339-4	55323-55331	settings	_	_	_	_	
339-5	55332-55335	for	_	_	_	_	
339-6	55336-55346	standalone	_	_	_	_	
339-7	55347-55352	Cisco	_	_	_	_	
339-8	55353-55356	UCS	_	_	_	_	
339-9	55357-55365	C-Series	_	_	_	_	
339-10	55366-55373	servers	_	_	_	_	
339-11	55373-55374	:	_	_	_	_	
339-12	55375-55378	HPC	_	_	_	_	
339-13	55379-55386	Figures	_	_	_	_	
339-14	55387-55389	16	_	_	_	_	
339-15	55390-55393	and	_	_	_	_	
339-16	55394-55396	17	_	_	_	_	
339-17	55397-55401	show	_	_	_	_	
339-18	55402-55405	the	_	_	_	_	
339-19	55406-55417	recommended	_	_	_	_	
339-20	55418-55427	processor	_	_	_	_	
339-21	55428-55431	and	_	_	_	_	
339-22	55432-55437	power	_	_	_	_	
339-23	55438-55441	and	_	_	_	_	
339-24	55442-55453	performance	_	_	_	_	
339-25	55454-55462	settings	_	_	_	_	
339-26	55463-55466	for	_	_	_	_	
339-27	55467-55470	HPC	_	_	_	_	
339-28	55471-55480	workloads	_	_	_	_	
339-29	55481-55483	in	_	_	_	_	
339-30	55484-55494	standalone	_	_	_	_	
339-31	55495-55500	Cisco	_	_	_	_	
339-32	55501-55504	UCS	_	_	_	_	
339-33	55505-55513	C-Series	_	_	_	_	
339-34	55514-55516	M5	_	_	_	_	
339-35	55517-55524	servers	_	_	_	_	
339-36	55524-55525	.	_	_	_	_	

#Text=Figure 16.
340-1	55526-55532	Figure	_	_	_	_	
340-2	55533-55535	16	_	_	_	_	
340-3	55535-55536	.	_	_	_	_	

#Text=Processor settings for HPC workloads
#Text=Figure 17.
341-1	55537-55546	Processor	_	_	_	_	
341-2	55547-55555	settings	_	_	_	_	
341-3	55556-55559	for	_	_	_	_	
341-4	55560-55563	HPC	_	_	_	_	
341-5	55564-55573	workloads	_	_	_	_	
341-6	55574-55580	Figure	_	_	_	_	
341-7	55581-55583	17	_	_	_	_	
341-8	55583-55584	.	_	_	_	_	

#Text=Power and performance settings for HPC workloads
#Text=Figures 18 shows memory settings for HPC workloads for standalone Cisco UCS C-Series M5 servers.
342-1	55585-55590	Power	_	_	_	_	
342-2	55591-55594	and	_	_	_	_	
342-3	55595-55606	performance	_	_	_	_	
342-4	55607-55615	settings	_	_	_	_	
342-5	55616-55619	for	_	_	_	_	
342-6	55620-55623	HPC	_	_	_	_	
342-7	55624-55633	workloads	_	_	_	_	
342-8	55634-55641	Figures	_	_	_	_	
342-9	55642-55644	18	_	_	_	_	
342-10	55645-55650	shows	_	_	_	_	
342-11	55651-55657	memory	_	_	_	_	
342-12	55658-55666	settings	_	_	_	_	
342-13	55667-55670	for	_	_	_	_	
342-14	55671-55674	HPC	_	_	_	_	
342-15	55675-55684	workloads	_	_	_	_	
342-16	55685-55688	for	_	_	_	_	
342-17	55689-55699	standalone	_	_	_	_	
342-18	55700-55705	Cisco	_	_	_	_	
342-19	55706-55709	UCS	_	_	_	_	
342-20	55710-55718	C-Series	_	_	_	_	
342-21	55719-55721	M5	_	_	_	_	
342-22	55722-55729	servers	_	_	_	_	
342-23	55729-55730	.	_	_	_	_	

#Text=Figure 18.
343-1	55731-55737	Figure	_	_	_	_	
343-2	55738-55740	18	_	_	_	_	
343-3	55740-55741	.	_	_	_	_	

#Text=Memory settings for HPC workloads
#Text=Java Enterprise Edition application server workloads
#Text=Java EE (previously referred to as the J2EE) defines the core set of APIs and features of Java application servers.
344-1	55742-55748	Memory	_	_	_	_	
344-2	55749-55757	settings	_	_	_	_	
344-3	55758-55761	for	_	_	_	_	
344-4	55762-55765	HPC	_	_	_	_	
344-5	55766-55775	workloads	_	_	_	_	
344-6	55776-55780	Java	_	_	_	_	
344-7	55781-55791	Enterprise	_	_	_	_	
344-8	55792-55799	Edition	_	_	_	_	
344-9	55800-55811	application	_	_	_	_	
344-10	55812-55818	server	_	_	_	_	
344-11	55819-55828	workloads	_	_	_	_	
344-12	55829-55833	Java	_	_	_	_	
344-13	55834-55836	EE	_	_	_	_	
344-14	55837-55838	(	_	_	_	_	
344-15	55838-55848	previously	_	_	_	_	
344-16	55849-55857	referred	_	_	_	_	
344-17	55858-55860	to	_	_	_	_	
344-18	55861-55863	as	_	_	_	_	
344-19	55864-55867	the	_	_	_	_	
344-20	55868-55872	J2EE	_	_	_	_	
344-21	55872-55873	)	_	_	_	_	
344-22	55874-55881	defines	_	_	_	_	
344-23	55882-55885	the	_	_	_	_	
344-24	55886-55890	core	_	_	_	_	
344-25	55891-55894	set	_	_	_	_	
344-26	55895-55897	of	_	_	_	_	
344-27	55898-55902	APIs	_	_	_	_	
344-28	55903-55906	and	_	_	_	_	
344-29	55907-55915	features	_	_	_	_	
344-30	55916-55918	of	_	_	_	_	
344-31	55919-55923	Java	_	_	_	_	
344-32	55924-55935	application	_	_	_	_	
344-33	55936-55943	servers	_	_	_	_	
344-34	55943-55944	.	_	_	_	_	

#Text=Usually, Java EE applications are client-server or server-side applications and require a Java EE application server.
345-1	55945-55952	Usually	_	_	_	_	
345-2	55952-55953	,	_	_	_	_	
345-3	55954-55958	Java	_	_	_	_	
345-4	55959-55961	EE	_	_	_	_	
345-5	55962-55974	applications	_	_	_	_	
345-6	55975-55978	are	_	_	_	_	
345-7	55979-55992	client-server	_	_	_	_	
345-8	55993-55995	or	_	_	_	_	
345-9	55996-56007	server-side	_	_	_	_	
345-10	56008-56020	applications	_	_	_	_	
345-11	56021-56024	and	_	_	_	_	
345-12	56025-56032	require	_	_	_	_	
345-13	56033-56034	a	_	_	_	_	
345-14	56035-56039	Java	_	_	_	_	
345-15	56040-56042	EE	_	_	_	_	
345-16	56043-56054	application	_	_	_	_	
345-17	56055-56061	server	_	_	_	_	
345-18	56061-56062	.	_	_	_	_	

#Text=Java EE application servers are distinguished by the following characteristics:
#Text=●     They are fully compliant application servers that implement the full Java EE stack specifications with features such as JBoss Enterprise.
346-1	56063-56067	Java	_	_	_	_	
346-2	56068-56070	EE	_	_	_	_	
346-3	56071-56082	application	_	_	_	_	
346-4	56083-56090	servers	_	_	_	_	
346-5	56091-56094	are	_	_	_	_	
346-6	56095-56108	distinguished	_	_	_	_	
346-7	56109-56111	by	_	_	_	_	
346-8	56112-56115	the	_	_	_	_	
346-9	56116-56125	following	_	_	_	_	
346-10	56126-56141	characteristics	_	_	_	_	
346-11	56141-56142	:	_	_	_	_	
346-12	56143-56144	●	_	_	_	_	
346-13	56144-56148	    	_	_	_	_	
346-14	56149-56153	They	_	_	_	_	
346-15	56154-56157	are	_	_	_	_	
346-16	56158-56163	fully	_	_	_	_	
346-17	56164-56173	compliant	_	_	_	_	
346-18	56174-56185	application	_	_	_	_	
346-19	56186-56193	servers	_	_	_	_	
346-20	56194-56198	that	_	_	_	_	
346-21	56199-56208	implement	_	_	_	_	
346-22	56209-56212	the	_	_	_	_	
346-23	56213-56217	full	_	_	_	_	
346-24	56218-56222	Java	_	_	_	_	
346-25	56223-56225	EE	_	_	_	_	
346-26	56226-56231	stack	_	_	_	_	
346-27	56232-56246	specifications	_	_	_	_	
346-28	56247-56251	with	_	_	_	_	
346-29	56252-56260	features	_	_	_	_	
346-30	56261-56265	such	_	_	_	_	
346-31	56266-56268	as	_	_	_	_	
346-32	56269-56274	JBoss	_	_	_	_	
346-33	56275-56285	Enterprise	_	_	_	_	
346-34	56285-56286	.	_	_	_	_	

#Text=Examples of fully compliant application servers are Apache Geronimo and JBoss Application Server.
#Text=●     They are web application servers that support only the web tier of Java EE, including the servlet.
347-1	56287-56295	Examples	_	_	_	_	
347-2	56296-56298	of	_	_	_	_	
347-3	56299-56304	fully	_	_	_	_	
347-4	56305-56314	compliant	_	_	_	_	
347-5	56315-56326	application	_	_	_	_	
347-6	56327-56334	servers	_	_	_	_	
347-7	56335-56338	are	_	_	_	_	
347-8	56339-56345	Apache	_	_	_	_	
347-9	56346-56354	Geronimo	_	_	_	_	
347-10	56355-56358	and	_	_	_	_	
347-11	56359-56364	JBoss	_	_	_	_	
347-12	56365-56376	Application	_	_	_	_	
347-13	56377-56383	Server	_	_	_	_	
347-14	56383-56384	.	_	_	_	_	
347-15	56385-56386	●	_	_	_	_	
347-16	56386-56390	    	_	_	_	_	
347-17	56391-56395	They	_	_	_	_	
347-18	56396-56399	are	_	_	_	_	
347-19	56400-56403	web	_	_	_	_	
347-20	56404-56415	application	_	_	_	_	
347-21	56416-56423	servers	_	_	_	_	
347-22	56424-56428	that	_	_	_	_	
347-23	56429-56436	support	_	_	_	_	
347-24	56437-56441	only	_	_	_	_	
347-25	56442-56445	the	_	_	_	_	
347-26	56446-56449	web	_	_	_	_	
347-27	56450-56454	tier	_	_	_	_	
347-28	56455-56457	of	_	_	_	_	
347-29	56458-56462	Java	_	_	_	_	
347-30	56463-56465	EE	_	_	_	_	
347-31	56465-56466	,	_	_	_	_	
347-32	56467-56476	including	_	_	_	_	
347-33	56477-56480	the	_	_	_	_	
347-34	56481-56488	servlet	_	_	_	_	
347-35	56488-56489	.	_	_	_	_	

#Text=Examples of fully compliant application servers are Apache Tomcat and Jetty.
348-1	56490-56498	Examples	_	_	_	_	
348-2	56499-56501	of	_	_	_	_	
348-3	56502-56507	fully	_	_	_	_	
348-4	56508-56517	compliant	_	_	_	_	
348-5	56518-56529	application	_	_	_	_	
348-6	56530-56537	servers	_	_	_	_	
348-7	56538-56541	are	_	_	_	_	
348-8	56542-56548	Apache	_	_	_	_	
348-9	56549-56555	Tomcat	_	_	_	_	
348-10	56556-56559	and	_	_	_	_	
348-11	56560-56565	Jetty	_	_	_	_	
348-12	56565-56566	.	_	_	_	_	

#Text=Processor and memory settings for Cisco UCS managed servers: Java EE
#Text=Figure 19 Highlights the BIOS selections that are recommended for Java EE application servers on Cisco UCS M5 servers managed by Cisco UCS Manager.
349-1	56567-56576	Processor	_	_	_	_	
349-2	56577-56580	and	_	_	_	_	
349-3	56581-56587	memory	_	_	_	_	
349-4	56588-56596	settings	_	_	_	_	
349-5	56597-56600	for	_	_	_	_	
349-6	56601-56606	Cisco	_	_	_	_	
349-7	56607-56610	UCS	_	_	_	_	
349-8	56611-56618	managed	_	_	_	_	
349-9	56619-56626	servers	_	_	_	_	
349-10	56626-56627	:	_	_	_	_	
349-11	56628-56632	Java	_	_	_	_	
349-12	56633-56635	EE	_	_	_	_	
349-13	56636-56642	Figure	_	_	_	_	
349-14	56643-56645	19	_	_	_	_	
349-15	56646-56656	Highlights	_	_	_	_	
349-16	56657-56660	the	_	_	_	_	
349-17	56661-56665	BIOS	_	_	_	_	
349-18	56666-56676	selections	_	_	_	_	
349-19	56677-56681	that	_	_	_	_	
349-20	56682-56685	are	_	_	_	_	
349-21	56686-56697	recommended	_	_	_	_	
349-22	56698-56701	for	_	_	_	_	
349-23	56702-56706	Java	_	_	_	_	
349-24	56707-56709	EE	_	_	_	_	
349-25	56710-56721	application	_	_	_	_	
349-26	56722-56729	servers	_	_	_	_	
349-27	56730-56732	on	_	_	_	_	
349-28	56733-56738	Cisco	_	_	_	_	
349-29	56739-56742	UCS	_	_	_	_	
349-30	56743-56745	M5	_	_	_	_	
349-31	56746-56753	servers	_	_	_	_	
349-32	56754-56761	managed	_	_	_	_	
349-33	56762-56764	by	_	_	_	_	
349-34	56765-56770	Cisco	_	_	_	_	
349-35	56771-56774	UCS	_	_	_	_	
349-36	56775-56782	Manager	_	_	_	_	
349-37	56782-56783	.	_	_	_	_	

#Text=Rest of the BIOS settings are configured as “Platform Default”.
350-1	56784-56788	Rest	_	_	_	_	
350-2	56789-56791	of	_	_	_	_	
350-3	56792-56795	the	_	_	_	_	
350-4	56796-56800	BIOS	_	_	_	_	
350-5	56801-56809	settings	_	_	_	_	
350-6	56810-56813	are	_	_	_	_	
350-7	56814-56824	configured	_	_	_	_	
350-8	56825-56827	as	_	_	_	_	
350-9	56828-56829	“	_	_	_	_	
350-10	56829-56837	Platform	_	_	_	_	
350-11	56838-56845	Default	_	_	_	_	
350-12	56845-56846	”	_	_	_	_	
350-13	56846-56847	.	_	_	_	_	

#Text=Figure 19.
351-1	56848-56854	Figure	_	_	_	_	
351-2	56855-56857	19	_	_	_	_	
351-3	56857-56858	.	_	_	_	_	

#Text=Processor settings for Java EE application workloads
#Text=Intel Turbo Boost Technology enables higher CPU frequency, which helps accelerate processing of application requests.
352-1	56859-56868	Processor	_	_	_	_	
352-2	56869-56877	settings	_	_	_	_	
352-3	56878-56881	for	_	_	_	_	
352-4	56882-56886	Java	_	_	_	_	
352-5	56887-56889	EE	_	_	_	_	
352-6	56890-56901	application	_	_	_	_	
352-7	56902-56911	workloads	_	_	_	_	
352-8	56912-56917	Intel	_	_	_	_	
352-9	56918-56923	Turbo	_	_	_	_	
352-10	56924-56929	Boost	_	_	_	_	
352-11	56930-56940	Technology	_	_	_	_	
352-12	56941-56948	enables	_	_	_	_	
352-13	56949-56955	higher	_	_	_	_	
352-14	56956-56959	CPU	_	_	_	_	
352-15	56960-56969	frequency	_	_	_	_	
352-16	56969-56970	,	_	_	_	_	
352-17	56971-56976	which	_	_	_	_	
352-18	56977-56982	helps	_	_	_	_	
352-19	56983-56993	accelerate	_	_	_	_	
352-20	56994-57004	processing	_	_	_	_	
352-21	57005-57007	of	_	_	_	_	
352-22	57008-57019	application	_	_	_	_	
352-23	57020-57028	requests	_	_	_	_	
352-24	57028-57029	.	_	_	_	_	

#Text=This feature helps reduce end-user response time.
353-1	57030-57034	This	_	_	_	_	
353-2	57035-57042	feature	_	_	_	_	
353-3	57043-57048	helps	_	_	_	_	
353-4	57049-57055	reduce	_	_	_	_	
353-5	57056-57064	end-user	_	_	_	_	
353-6	57065-57073	response	_	_	_	_	
353-7	57074-57078	time	_	_	_	_	
353-8	57078-57079	.	_	_	_	_	

#Text=Business scenarios such as batch processes run at a certain time of the day benefit from Intel Turbo Boost.
354-1	57080-57088	Business	_	_	_	_	
354-2	57089-57098	scenarios	_	_	_	_	
354-3	57099-57103	such	_	_	_	_	
354-4	57104-57106	as	_	_	_	_	
354-5	57107-57112	batch	_	_	_	_	
354-6	57113-57122	processes	_	_	_	_	
354-7	57123-57126	run	_	_	_	_	
354-8	57127-57129	at	_	_	_	_	
354-9	57130-57131	a	_	_	_	_	
354-10	57132-57139	certain	_	_	_	_	
354-11	57140-57144	time	_	_	_	_	
354-12	57145-57147	of	_	_	_	_	
354-13	57148-57151	the	_	_	_	_	
354-14	57152-57155	day	_	_	_	_	
354-15	57156-57163	benefit	_	_	_	_	
354-16	57164-57168	from	_	_	_	_	
354-17	57169-57174	Intel	_	_	_	_	
354-18	57175-57180	Turbo	_	_	_	_	
354-19	57181-57186	Boost	_	_	_	_	
354-20	57186-57187	.	_	_	_	_	

#Text=It enables CPU cores to achieve at higher frequency clock speeds, which helps lower batch processing time, thereby helping the business complete and generate business reports more quickly.
355-1	57188-57190	It	_	_	_	_	
355-2	57191-57198	enables	_	_	_	_	
355-3	57199-57202	CPU	_	_	_	_	
355-4	57203-57208	cores	_	_	_	_	
355-5	57209-57211	to	_	_	_	_	
355-6	57212-57219	achieve	_	_	_	_	
355-7	57220-57222	at	_	_	_	_	
355-8	57223-57229	higher	_	_	_	_	
355-9	57230-57239	frequency	_	_	_	_	
355-10	57240-57245	clock	_	_	_	_	
355-11	57246-57252	speeds	_	_	_	_	
355-12	57252-57253	,	_	_	_	_	
355-13	57254-57259	which	_	_	_	_	
355-14	57260-57265	helps	_	_	_	_	
355-15	57266-57271	lower	_	_	_	_	
355-16	57272-57277	batch	_	_	_	_	
355-17	57278-57288	processing	_	_	_	_	
355-18	57289-57293	time	_	_	_	_	
355-19	57293-57294	,	_	_	_	_	
355-20	57295-57302	thereby	_	_	_	_	
355-21	57303-57310	helping	_	_	_	_	
355-22	57311-57314	the	_	_	_	_	
355-23	57315-57323	business	_	_	_	_	
355-24	57324-57332	complete	_	_	_	_	
355-25	57333-57336	and	_	_	_	_	
355-26	57337-57345	generate	_	_	_	_	
355-27	57346-57354	business	_	_	_	_	
355-28	57355-57362	reports	_	_	_	_	
355-29	57363-57367	more	_	_	_	_	
355-30	57368-57375	quickly	_	_	_	_	
355-31	57375-57376	.	_	_	_	_	

#Text=You should enable all the C-states.
356-1	57377-57380	You	_	_	_	_	
356-2	57381-57387	should	_	_	_	_	
356-3	57388-57394	enable	_	_	_	_	
356-4	57395-57398	all	_	_	_	_	
356-5	57399-57402	the	_	_	_	_	
356-6	57403-57411	C-states	_	_	_	_	
356-7	57411-57412	.	_	_	_	_	

#Text=This configuration helps reduce power consumption because only active cores will process requests during nonpeak hours.
357-1	57413-57417	This	_	_	_	_	
357-2	57418-57431	configuration	_	_	_	_	
357-3	57432-57437	helps	_	_	_	_	
357-4	57438-57444	reduce	_	_	_	_	
357-5	57445-57450	power	_	_	_	_	
357-6	57451-57462	consumption	_	_	_	_	
357-7	57463-57470	because	_	_	_	_	
357-8	57471-57475	only	_	_	_	_	
357-9	57476-57482	active	_	_	_	_	
357-10	57483-57488	cores	_	_	_	_	
357-11	57489-57493	will	_	_	_	_	
357-12	57494-57501	process	_	_	_	_	
357-13	57502-57510	requests	_	_	_	_	
357-14	57511-57517	during	_	_	_	_	
357-15	57518-57525	nonpeak	_	_	_	_	
357-16	57526-57531	hours	_	_	_	_	
357-17	57531-57532	.	_	_	_	_	

#Text=If the application demands more CPU cores, the inactive cores will become active, which helps increase throughput.
358-1	57533-57535	If	_	_	_	_	
358-2	57536-57539	the	_	_	_	_	
358-3	57540-57551	application	_	_	_	_	
358-4	57552-57559	demands	_	_	_	_	
358-5	57560-57564	more	_	_	_	_	
358-6	57565-57568	CPU	_	_	_	_	
358-7	57569-57574	cores	_	_	_	_	
358-8	57574-57575	,	_	_	_	_	
358-9	57576-57579	the	_	_	_	_	
358-10	57580-57588	inactive	_	_	_	_	
358-11	57589-57594	cores	_	_	_	_	
358-12	57595-57599	will	_	_	_	_	
358-13	57600-57606	become	_	_	_	_	
358-14	57607-57613	active	_	_	_	_	
358-15	57613-57614	,	_	_	_	_	
358-16	57615-57620	which	_	_	_	_	
358-17	57621-57626	helps	_	_	_	_	
358-18	57627-57635	increase	_	_	_	_	
358-19	57636-57646	throughput	_	_	_	_	
358-20	57646-57647	.	_	_	_	_	

#Text=The CPU Performance option should be set to Enterprise.
359-1	57648-57651	The	_	_	_	_	
359-2	57652-57655	CPU	_	_	_	_	
359-3	57656-57667	Performance	_	_	_	_	
359-4	57668-57674	option	_	_	_	_	
359-5	57675-57681	should	_	_	_	_	
359-6	57682-57684	be	_	_	_	_	
359-7	57685-57688	set	_	_	_	_	
359-8	57689-57691	to	_	_	_	_	
359-9	57692-57702	Enterprise	_	_	_	_	
359-10	57702-57703	.	_	_	_	_	

#Text=When a web server needs to process a large amount of data in a system, the data-access pattern is predictable (mostly sequential or adjacent lines are accessed).
360-1	57704-57708	When	_	_	_	_	
360-2	57709-57710	a	_	_	_	_	
360-3	57711-57714	web	_	_	_	_	
360-4	57715-57721	server	_	_	_	_	
360-5	57722-57727	needs	_	_	_	_	
360-6	57728-57730	to	_	_	_	_	
360-7	57731-57738	process	_	_	_	_	
360-8	57739-57740	a	_	_	_	_	
360-9	57741-57746	large	_	_	_	_	
360-10	57747-57753	amount	_	_	_	_	
360-11	57754-57756	of	_	_	_	_	
360-12	57757-57761	data	_	_	_	_	
360-13	57762-57764	in	_	_	_	_	
360-14	57765-57766	a	_	_	_	_	
360-15	57767-57773	system	_	_	_	_	
360-16	57773-57774	,	_	_	_	_	
360-17	57775-57778	the	_	_	_	_	
360-18	57779-57790	data-access	_	_	_	_	
360-19	57791-57798	pattern	_	_	_	_	
360-20	57799-57801	is	_	_	_	_	
360-21	57802-57813	predictable	_	_	_	_	
360-22	57814-57815	(	_	_	_	_	
360-23	57815-57821	mostly	_	_	_	_	
360-24	57822-57832	sequential	_	_	_	_	
360-25	57833-57835	or	_	_	_	_	
360-26	57836-57844	adjacent	_	_	_	_	
360-27	57845-57850	lines	_	_	_	_	
360-28	57851-57854	are	_	_	_	_	
360-29	57855-57863	accessed	_	_	_	_	
360-30	57863-57864	)	_	_	_	_	
360-31	57864-57865	.	_	_	_	_	

#Text=In this situation, it is desirable to enable the prefetchers (MLC and DCU) by setting CPU Performance to Enterprise, to reduce access latency for memory-bound operations.
361-1	57866-57868	In	_	_	_	_	
361-2	57869-57873	this	_	_	_	_	
361-3	57874-57883	situation	_	_	_	_	
361-4	57883-57884	,	_	_	_	_	
361-5	57885-57887	it	_	_	_	_	
361-6	57888-57890	is	_	_	_	_	
361-7	57891-57900	desirable	_	_	_	_	
361-8	57901-57903	to	_	_	_	_	
361-9	57904-57910	enable	_	_	_	_	
361-10	57911-57914	the	_	_	_	_	
361-11	57915-57926	prefetchers	_	_	_	_	
361-12	57927-57928	(	_	_	_	_	
361-13	57928-57931	MLC	_	_	_	_	
361-14	57932-57935	and	_	_	_	_	
361-15	57936-57939	DCU	_	_	_	_	
361-16	57939-57940	)	_	_	_	_	
361-17	57941-57943	by	_	_	_	_	
361-18	57944-57951	setting	_	_	_	_	
361-19	57952-57955	CPU	_	_	_	_	
361-20	57956-57967	Performance	_	_	_	_	
361-21	57968-57970	to	_	_	_	_	
361-22	57971-57981	Enterprise	_	_	_	_	
361-23	57981-57982	,	_	_	_	_	
361-24	57983-57985	to	_	_	_	_	
361-25	57986-57992	reduce	_	_	_	_	
361-26	57993-57999	access	_	_	_	_	
361-27	58000-58007	latency	_	_	_	_	
361-28	58008-58011	for	_	_	_	_	
361-29	58012-58024	memory-bound	_	_	_	_	
361-30	58025-58035	operations	_	_	_	_	
361-31	58035-58036	.	_	_	_	_	

#Text=Intel Directed I/O for Java application workloads
#Text=Figure 20 shows the recommended Intel Directed I/O settings for Java application workloads in Cisco UCS M5 servers.
362-1	58037-58042	Intel	_	_	_	_	
362-2	58043-58051	Directed	_	_	_	_	
362-3	58052-58053	I	_	_	_	_	
362-4	58053-58054	/	_	_	_	_	
362-5	58054-58055	O	_	_	_	_	
362-6	58056-58059	for	_	_	_	_	
362-7	58060-58064	Java	_	_	_	_	
362-8	58065-58076	application	_	_	_	_	
362-9	58077-58086	workloads	_	_	_	_	
362-10	58087-58093	Figure	_	_	_	_	
362-11	58094-58096	20	_	_	_	_	
362-12	58097-58102	shows	_	_	_	_	
362-13	58103-58106	the	_	_	_	_	
362-14	58107-58118	recommended	_	_	_	_	
362-15	58119-58124	Intel	_	_	_	_	
362-16	58125-58133	Directed	_	_	_	_	
362-17	58134-58135	I	_	_	_	_	
362-18	58135-58136	/	_	_	_	_	
362-19	58136-58137	O	_	_	_	_	
362-20	58138-58146	settings	_	_	_	_	
362-21	58147-58150	for	_	_	_	_	
362-22	58151-58155	Java	_	_	_	_	
362-23	58156-58167	application	_	_	_	_	
362-24	58168-58177	workloads	_	_	_	_	
362-25	58178-58180	in	_	_	_	_	
362-26	58181-58186	Cisco	_	_	_	_	
362-27	58187-58190	UCS	_	_	_	_	
362-28	58191-58193	M5	_	_	_	_	
362-29	58194-58201	servers	_	_	_	_	
362-30	58201-58202	.	_	_	_	_	

#Text=Figure 20.
363-1	58203-58209	Figure	_	_	_	_	
363-2	58210-58212	20	_	_	_	_	
363-3	58212-58213	.	_	_	_	_	

#Text=Intel Directed I/O settings for Java application workloads
#Text=Memory settings for Java EE application server workloads
#Text=Figure 21 shows the recommended memory settings for Java EE application servers for Cisco UCS M5 servers managed by Cisco UCS Manager.
364-1	58214-58219	Intel	_	_	_	_	
364-2	58220-58228	Directed	_	_	_	_	
364-3	58229-58230	I	_	_	_	_	
364-4	58230-58231	/	_	_	_	_	
364-5	58231-58232	O	_	_	_	_	
364-6	58233-58241	settings	_	_	_	_	
364-7	58242-58245	for	_	_	_	_	
364-8	58246-58250	Java	_	_	_	_	
364-9	58251-58262	application	_	_	_	_	
364-10	58263-58272	workloads	_	_	_	_	
364-11	58273-58279	Memory	_	_	_	_	
364-12	58280-58288	settings	_	_	_	_	
364-13	58289-58292	for	_	_	_	_	
364-14	58293-58297	Java	_	_	_	_	
364-15	58298-58300	EE	_	_	_	_	
364-16	58301-58312	application	_	_	_	_	
364-17	58313-58319	server	_	_	_	_	
364-18	58320-58329	workloads	_	_	_	_	
364-19	58330-58336	Figure	_	_	_	_	
364-20	58337-58339	21	_	_	_	_	
364-21	58340-58345	shows	_	_	_	_	
364-22	58346-58349	the	_	_	_	_	
364-23	58350-58361	recommended	_	_	_	_	
364-24	58362-58368	memory	_	_	_	_	
364-25	58369-58377	settings	_	_	_	_	
364-26	58378-58381	for	_	_	_	_	
364-27	58382-58386	Java	_	_	_	_	
364-28	58387-58389	EE	_	_	_	_	
364-29	58390-58401	application	_	_	_	_	
364-30	58402-58409	servers	_	_	_	_	
364-31	58410-58413	for	_	_	_	_	
364-32	58414-58419	Cisco	_	_	_	_	
364-33	58420-58423	UCS	_	_	_	_	
364-34	58424-58426	M5	_	_	_	_	
364-35	58427-58434	servers	_	_	_	_	
364-36	58435-58442	managed	_	_	_	_	
364-37	58443-58445	by	_	_	_	_	
364-38	58446-58451	Cisco	_	_	_	_	
364-39	58452-58455	UCS	_	_	_	_	
364-40	58456-58463	Manager	_	_	_	_	
364-41	58463-58464	.	_	_	_	_	

#Text=Figure 21.
365-1	58465-58471	Figure	_	_	_	_	
365-2	58472-58474	21	_	_	_	_	
365-3	58474-58475	.	_	_	_	_	

#Text=Memory settings for Java EE application workloads
#Text=Set the DDR mode to Performance so that the DIMMs work at the highest available frequency for the installed memory and CPU combination.
366-1	58476-58482	Memory	_	_	_	_	
366-2	58483-58491	settings	_	_	_	_	
366-3	58492-58495	for	_	_	_	_	
366-4	58496-58500	Java	_	_	_	_	
366-5	58501-58503	EE	_	_	_	_	
366-6	58504-58515	application	_	_	_	_	
366-7	58516-58525	workloads	_	_	_	_	
366-8	58526-58529	Set	_	_	_	_	
366-9	58530-58533	the	_	_	_	_	
366-10	58534-58537	DDR	_	_	_	_	
366-11	58538-58542	mode	_	_	_	_	
366-12	58543-58545	to	_	_	_	_	
366-13	58546-58557	Performance	_	_	_	_	
366-14	58558-58560	so	_	_	_	_	
366-15	58561-58565	that	_	_	_	_	
366-16	58566-58569	the	_	_	_	_	
366-17	58570-58575	DIMMs	_	_	_	_	
366-18	58576-58580	work	_	_	_	_	
366-19	58581-58583	at	_	_	_	_	
366-20	58584-58587	the	_	_	_	_	
366-21	58588-58595	highest	_	_	_	_	
366-22	58596-58605	available	_	_	_	_	
366-23	58606-58615	frequency	_	_	_	_	
366-24	58616-58619	for	_	_	_	_	
366-25	58620-58623	the	_	_	_	_	
366-26	58624-58633	installed	_	_	_	_	
366-27	58634-58640	memory	_	_	_	_	
366-28	58641-58644	and	_	_	_	_	
366-29	58645-58648	CPU	_	_	_	_	
366-30	58649-58660	combination	_	_	_	_	
366-31	58660-58661	.	_	_	_	_	

#Text=In-memory enterprise applications such as Terracotta Ehcache benefit from the high memory speed.
367-1	58662-58671	In-memory	_	_	_	_	
367-2	58672-58682	enterprise	_	_	_	_	
367-3	58683-58695	applications	_	_	_	_	
367-4	58696-58700	such	_	_	_	_	
367-5	58701-58703	as	_	_	_	_	
367-6	58704-58714	Terracotta	_	_	_	_	
367-7	58715-58722	Ehcache	_	_	_	_	
367-8	58723-58730	benefit	_	_	_	_	
367-9	58731-58735	from	_	_	_	_	
367-10	58736-58739	the	_	_	_	_	
367-11	58740-58744	high	_	_	_	_	
367-12	58745-58751	memory	_	_	_	_	
367-13	58752-58757	speed	_	_	_	_	
367-14	58757-58758	.	_	_	_	_	

#Text=If this mode is enabled in web server workloads, I/O operations will be serviced at the highest frequency, and memory latency will be reduced.
368-1	58759-58761	If	_	_	_	_	
368-2	58762-58766	this	_	_	_	_	
368-3	58767-58771	mode	_	_	_	_	
368-4	58772-58774	is	_	_	_	_	
368-5	58775-58782	enabled	_	_	_	_	
368-6	58783-58785	in	_	_	_	_	
368-7	58786-58789	web	_	_	_	_	
368-8	58790-58796	server	_	_	_	_	
368-9	58797-58806	workloads	_	_	_	_	
368-10	58806-58807	,	_	_	_	_	
368-11	58808-58809	I	_	_	_	_	
368-12	58809-58810	/	_	_	_	_	
368-13	58810-58811	O	_	_	_	_	
368-14	58812-58822	operations	_	_	_	_	
368-15	58823-58827	will	_	_	_	_	
368-16	58828-58830	be	_	_	_	_	
368-17	58831-58839	serviced	_	_	_	_	
368-18	58840-58842	at	_	_	_	_	
368-19	58843-58846	the	_	_	_	_	
368-20	58847-58854	highest	_	_	_	_	
368-21	58855-58864	frequency	_	_	_	_	
368-22	58864-58865	,	_	_	_	_	
368-23	58866-58869	and	_	_	_	_	
368-24	58870-58876	memory	_	_	_	_	
368-25	58877-58884	latency	_	_	_	_	
368-26	58885-58889	will	_	_	_	_	
368-27	58890-58892	be	_	_	_	_	
368-28	58893-58900	reduced	_	_	_	_	
368-29	58900-58901	.	_	_	_	_	

#Text=Processor and memory settings for standalone Cisco UCS C-Series servers: Java EE
#Text=Figures 22 and 23 show processor and performance and power settings for Java EE applications in standalone Cisco UCS C-Series M5 servers.
369-1	58902-58911	Processor	_	_	_	_	
369-2	58912-58915	and	_	_	_	_	
369-3	58916-58922	memory	_	_	_	_	
369-4	58923-58931	settings	_	_	_	_	
369-5	58932-58935	for	_	_	_	_	
369-6	58936-58946	standalone	_	_	_	_	
369-7	58947-58952	Cisco	_	_	_	_	
369-8	58953-58956	UCS	_	_	_	_	
369-9	58957-58965	C-Series	_	_	_	_	
369-10	58966-58973	servers	_	_	_	_	
369-11	58973-58974	:	_	_	_	_	
369-12	58975-58979	Java	_	_	_	_	
369-13	58980-58982	EE	_	_	_	_	
369-14	58983-58990	Figures	_	_	_	_	
369-15	58991-58993	22	_	_	_	_	
369-16	58994-58997	and	_	_	_	_	
369-17	58998-59000	23	_	_	_	_	
369-18	59001-59005	show	_	_	_	_	
369-19	59006-59015	processor	_	_	_	_	
369-20	59016-59019	and	_	_	_	_	
369-21	59020-59031	performance	_	_	_	_	
369-22	59032-59035	and	_	_	_	_	
369-23	59036-59041	power	_	_	_	_	
369-24	59042-59050	settings	_	_	_	_	
369-25	59051-59054	for	_	_	_	_	
369-26	59055-59059	Java	_	_	_	_	
369-27	59060-59062	EE	_	_	_	_	
369-28	59063-59075	applications	_	_	_	_	
369-29	59076-59078	in	_	_	_	_	
369-30	59079-59089	standalone	_	_	_	_	
369-31	59090-59095	Cisco	_	_	_	_	
369-32	59096-59099	UCS	_	_	_	_	
369-33	59100-59108	C-Series	_	_	_	_	
369-34	59109-59111	M5	_	_	_	_	
369-35	59112-59119	servers	_	_	_	_	
369-36	59119-59120	.	_	_	_	_	

#Text=Figure 22.
370-1	59121-59127	Figure	_	_	_	_	
370-2	59128-59130	22	_	_	_	_	
370-3	59130-59131	.	_	_	_	_	

#Text=Processor settings for Java EE application workloads
#Text=Figure 23.
371-1	59132-59141	Processor	_	_	_	_	
371-2	59142-59150	settings	_	_	_	_	
371-3	59151-59154	for	_	_	_	_	
371-4	59155-59159	Java	_	_	_	_	
371-5	59160-59162	EE	_	_	_	_	
371-6	59163-59174	application	_	_	_	_	
371-7	59175-59184	workloads	_	_	_	_	
371-8	59185-59191	Figure	_	_	_	_	
371-9	59192-59194	23	_	_	_	_	
371-10	59194-59195	.	_	_	_	_	

#Text=Power and performance settings for Java EE application workloads
#Text=Figure 24 shows memory settings for Java EE applications for standalone Cisco UCS C-Series M5 servers.
372-1	59196-59201	Power	_	_	_	_	
372-2	59202-59205	and	_	_	_	_	
372-3	59206-59217	performance	_	_	_	_	
372-4	59218-59226	settings	_	_	_	_	
372-5	59227-59230	for	_	_	_	_	
372-6	59231-59235	Java	_	_	_	_	
372-7	59236-59238	EE	_	_	_	_	
372-8	59239-59250	application	_	_	_	_	
372-9	59251-59260	workloads	_	_	_	_	
372-10	59261-59267	Figure	_	_	_	_	
372-11	59268-59270	24	_	_	_	_	
372-12	59271-59276	shows	_	_	_	_	
372-13	59277-59283	memory	_	_	_	_	
372-14	59284-59292	settings	_	_	_	_	
372-15	59293-59296	for	_	_	_	_	
372-16	59297-59301	Java	_	_	_	_	
372-17	59302-59304	EE	_	_	_	_	
372-18	59305-59317	applications	_	_	_	_	
372-19	59318-59321	for	_	_	_	_	
372-20	59322-59332	standalone	_	_	_	_	
372-21	59333-59338	Cisco	_	_	_	_	
372-22	59339-59342	UCS	_	_	_	_	
372-23	59343-59351	C-Series	_	_	_	_	
372-24	59352-59354	M5	_	_	_	_	
372-25	59355-59362	servers	_	_	_	_	
372-26	59362-59363	.	_	_	_	_	

#Text=Figure 24.
373-1	59364-59370	Figure	_	_	_	_	
373-2	59371-59373	24	_	_	_	_	
373-3	59373-59374	.	_	_	_	_	

#Text=Memory settings for Java EE application workloads
#Text=Analytics database decision-support system workloads
#Text=An analytics database is a read-only system that stores historical data for business metrics such as sales performance and inventory levels.
374-1	59375-59381	Memory	_	_	_	_	
374-2	59382-59390	settings	_	_	_	_	
374-3	59391-59394	for	_	_	_	_	
374-4	59395-59399	Java	_	_	_	_	
374-5	59400-59402	EE	_	_	_	_	
374-6	59403-59414	application	_	_	_	_	
374-7	59415-59424	workloads	_	_	_	_	
374-8	59425-59434	Analytics	_	_	_	_	
374-9	59435-59443	database	_	_	_	_	
374-10	59444-59460	decision-support	_	_	_	_	
374-11	59461-59467	system	_	_	_	_	
374-12	59468-59477	workloads	_	_	_	_	
374-13	59478-59480	An	_	_	_	_	
374-14	59481-59490	analytics	_	_	_	_	
374-15	59491-59499	database	_	_	_	_	
374-16	59500-59502	is	_	_	_	_	
374-17	59503-59504	a	_	_	_	_	
374-18	59505-59514	read-only	_	_	_	_	
374-19	59515-59521	system	_	_	_	_	
374-20	59522-59526	that	_	_	_	_	
374-21	59527-59533	stores	_	_	_	_	
374-22	59534-59544	historical	_	_	_	_	
374-23	59545-59549	data	_	_	_	_	
374-24	59550-59553	for	_	_	_	_	
374-25	59554-59562	business	_	_	_	_	
374-26	59563-59570	metrics	_	_	_	_	
374-27	59571-59575	such	_	_	_	_	
374-28	59576-59578	as	_	_	_	_	
374-29	59579-59584	sales	_	_	_	_	
374-30	59585-59596	performance	_	_	_	_	
374-31	59597-59600	and	_	_	_	_	
374-32	59601-59610	inventory	_	_	_	_	
374-33	59611-59617	levels	_	_	_	_	
374-34	59617-59618	.	_	_	_	_	

#Text=An analytics database is specifically designed to support Business Intelligence (BI) and analytics applications, typically as part of a data warehouse or data mart.
375-1	59619-59621	An	_	_	_	_	
375-2	59622-59631	analytics	_	_	_	_	
375-3	59632-59640	database	_	_	_	_	
375-4	59641-59643	is	_	_	_	_	
375-5	59644-59656	specifically	_	_	_	_	
375-6	59657-59665	designed	_	_	_	_	
375-7	59666-59668	to	_	_	_	_	
375-8	59669-59676	support	_	_	_	_	
375-9	59677-59685	Business	_	_	_	_	
375-10	59686-59698	Intelligence	_	_	_	_	
375-11	59699-59700	(	_	_	_	_	
375-12	59700-59702	BI	_	_	_	_	
375-13	59702-59703	)	_	_	_	_	
375-14	59704-59707	and	_	_	_	_	
375-15	59708-59717	analytics	_	_	_	_	
375-16	59718-59730	applications	_	_	_	_	
375-17	59730-59731	,	_	_	_	_	
375-18	59732-59741	typically	_	_	_	_	
375-19	59742-59744	as	_	_	_	_	
375-20	59745-59749	part	_	_	_	_	
375-21	59750-59752	of	_	_	_	_	
375-22	59753-59754	a	_	_	_	_	
375-23	59755-59759	data	_	_	_	_	
375-24	59760-59769	warehouse	_	_	_	_	
375-25	59770-59772	or	_	_	_	_	
375-26	59773-59777	data	_	_	_	_	
375-27	59778-59782	mart	_	_	_	_	
375-28	59782-59783	.	_	_	_	_	

#Text=This feature differentiates it from operational, transactional, and OLTP databases, which are used for transaction processing: order entry and other “run the business” applications.
376-1	59784-59788	This	_	_	_	_	
376-2	59789-59796	feature	_	_	_	_	
376-3	59797-59811	differentiates	_	_	_	_	
376-4	59812-59814	it	_	_	_	_	
376-5	59815-59819	from	_	_	_	_	
376-6	59820-59831	operational	_	_	_	_	
376-7	59831-59832	,	_	_	_	_	
376-8	59833-59846	transactional	_	_	_	_	
376-9	59846-59847	,	_	_	_	_	
376-10	59848-59851	and	_	_	_	_	
376-11	59852-59856	OLTP	_	_	_	_	
376-12	59857-59866	databases	_	_	_	_	
376-13	59866-59867	,	_	_	_	_	
376-14	59868-59873	which	_	_	_	_	
376-15	59874-59877	are	_	_	_	_	
376-16	59878-59882	used	_	_	_	_	
376-17	59883-59886	for	_	_	_	_	
376-18	59887-59898	transaction	_	_	_	_	
376-19	59899-59909	processing	_	_	_	_	
376-20	59909-59910	:	_	_	_	_	
376-21	59911-59916	order	_	_	_	_	
376-22	59917-59922	entry	_	_	_	_	
376-23	59923-59926	and	_	_	_	_	
376-24	59927-59932	other	_	_	_	_	
376-25	59933-59934	“	_	_	_	_	
376-26	59934-59937	run	_	_	_	_	
376-27	59938-59941	the	_	_	_	_	
376-28	59942-59950	business	_	_	_	_	
376-29	59950-59951	”	_	_	_	_	
376-30	59952-59964	applications	_	_	_	_	
376-31	59964-59965	.	_	_	_	_	

#Text=Processor and memory settings for Cisco UCS managed servers: DSS
#Text=Figure 25 Highlights the BIOS selections that are recommended for analytics database systems on Cisco UCS M5 servers managed by Cisco UCS Manager.
377-1	59966-59975	Processor	_	_	_	_	
377-2	59976-59979	and	_	_	_	_	
377-3	59980-59986	memory	_	_	_	_	
377-4	59987-59995	settings	_	_	_	_	
377-5	59996-59999	for	_	_	_	_	
377-6	60000-60005	Cisco	_	_	_	_	
377-7	60006-60009	UCS	_	_	_	_	
377-8	60010-60017	managed	_	_	_	_	
377-9	60018-60025	servers	_	_	_	_	
377-10	60025-60026	:	_	_	_	_	
377-11	60027-60030	DSS	_	_	_	_	
377-12	60031-60037	Figure	_	_	_	_	
377-13	60038-60040	25	_	_	_	_	
377-14	60041-60051	Highlights	_	_	_	_	
377-15	60052-60055	the	_	_	_	_	
377-16	60056-60060	BIOS	_	_	_	_	
377-17	60061-60071	selections	_	_	_	_	
377-18	60072-60076	that	_	_	_	_	
377-19	60077-60080	are	_	_	_	_	
377-20	60081-60092	recommended	_	_	_	_	
377-21	60093-60096	for	_	_	_	_	
377-22	60097-60106	analytics	_	_	_	_	
377-23	60107-60115	database	_	_	_	_	
377-24	60116-60123	systems	_	_	_	_	
377-25	60124-60126	on	_	_	_	_	
377-26	60127-60132	Cisco	_	_	_	_	
377-27	60133-60136	UCS	_	_	_	_	
377-28	60137-60139	M5	_	_	_	_	
377-29	60140-60147	servers	_	_	_	_	
377-30	60148-60155	managed	_	_	_	_	
377-31	60156-60158	by	_	_	_	_	
377-32	60159-60164	Cisco	_	_	_	_	
377-33	60165-60168	UCS	_	_	_	_	
377-34	60169-60176	Manager	_	_	_	_	
377-35	60176-60177	.	_	_	_	_	

#Text=Rest of the BIOS settings are configured as “Platform Default”.
378-1	60178-60182	Rest	_	_	_	_	
378-2	60183-60185	of	_	_	_	_	
378-3	60186-60189	the	_	_	_	_	
378-4	60190-60194	BIOS	_	_	_	_	
378-5	60195-60203	settings	_	_	_	_	
378-6	60204-60207	are	_	_	_	_	
378-7	60208-60218	configured	_	_	_	_	
378-8	60219-60221	as	_	_	_	_	
378-9	60222-60223	“	_	_	_	_	
378-10	60223-60231	Platform	_	_	_	_	
378-11	60232-60239	Default	_	_	_	_	
378-12	60239-60240	”	_	_	_	_	
378-13	60240-60241	.	_	_	_	_	

#Text=Figure 25.
379-1	60242-60248	Figure	_	_	_	_	
379-2	60249-60251	25	_	_	_	_	
379-3	60251-60252	.	_	_	_	_	

#Text=Processor settings for analytics database DSS workloads
#Text=Intel Directed I/O for analytics database DSS workloads
#Text=Figure 26 shows the recommended Intel Directed I/O settings for analytics database DSS workloads on Cisco UCS M5 servers managed by Cisco UCS Manager.
380-1	60253-60262	Processor	_	_	_	_	
380-2	60263-60271	settings	_	_	_	_	
380-3	60272-60275	for	_	_	_	_	
380-4	60276-60285	analytics	_	_	_	_	
380-5	60286-60294	database	_	_	_	_	
380-6	60295-60298	DSS	_	_	_	_	
380-7	60299-60308	workloads	_	_	_	_	
380-8	60309-60314	Intel	_	_	_	_	
380-9	60315-60323	Directed	_	_	_	_	
380-10	60324-60325	I	_	_	_	_	
380-11	60325-60326	/	_	_	_	_	
380-12	60326-60327	O	_	_	_	_	
380-13	60328-60331	for	_	_	_	_	
380-14	60332-60341	analytics	_	_	_	_	
380-15	60342-60350	database	_	_	_	_	
380-16	60351-60354	DSS	_	_	_	_	
380-17	60355-60364	workloads	_	_	_	_	
380-18	60365-60371	Figure	_	_	_	_	
380-19	60372-60374	26	_	_	_	_	
380-20	60375-60380	shows	_	_	_	_	
380-21	60381-60384	the	_	_	_	_	
380-22	60385-60396	recommended	_	_	_	_	
380-23	60397-60402	Intel	_	_	_	_	
380-24	60403-60411	Directed	_	_	_	_	
380-25	60412-60413	I	_	_	_	_	
380-26	60413-60414	/	_	_	_	_	
380-27	60414-60415	O	_	_	_	_	
380-28	60416-60424	settings	_	_	_	_	
380-29	60425-60428	for	_	_	_	_	
380-30	60429-60438	analytics	_	_	_	_	
380-31	60439-60447	database	_	_	_	_	
380-32	60448-60451	DSS	_	_	_	_	
380-33	60452-60461	workloads	_	_	_	_	
380-34	60462-60464	on	_	_	_	_	
380-35	60465-60470	Cisco	_	_	_	_	
380-36	60471-60474	UCS	_	_	_	_	
380-37	60475-60477	M5	_	_	_	_	
380-38	60478-60485	servers	_	_	_	_	
380-39	60486-60493	managed	_	_	_	_	
380-40	60494-60496	by	_	_	_	_	
380-41	60497-60502	Cisco	_	_	_	_	
380-42	60503-60506	UCS	_	_	_	_	
380-43	60507-60514	Manager	_	_	_	_	
380-44	60514-60515	.	_	_	_	_	

#Text=Figure 26.
381-1	60516-60522	Figure	_	_	_	_	
381-2	60523-60525	26	_	_	_	_	
381-3	60525-60526	.	_	_	_	_	

#Text=Intel Directed I/O settings for analytics database DSS workloads
#Text=Memory settings for analytics database DSS workloads
#Text=Figure 27 show the recommended memory settings for analytics database DSS workloads on Cisco UCS M5 servers managed by Cisco UCS Manager.
382-1	60527-60532	Intel	_	_	_	_	
382-2	60533-60541	Directed	_	_	_	_	
382-3	60542-60543	I	_	_	_	_	
382-4	60543-60544	/	_	_	_	_	
382-5	60544-60545	O	_	_	_	_	
382-6	60546-60554	settings	_	_	_	_	
382-7	60555-60558	for	_	_	_	_	
382-8	60559-60568	analytics	_	_	_	_	
382-9	60569-60577	database	_	_	_	_	
382-10	60578-60581	DSS	_	_	_	_	
382-11	60582-60591	workloads	_	_	_	_	
382-12	60592-60598	Memory	_	_	_	_	
382-13	60599-60607	settings	_	_	_	_	
382-14	60608-60611	for	_	_	_	_	
382-15	60612-60621	analytics	_	_	_	_	
382-16	60622-60630	database	_	_	_	_	
382-17	60631-60634	DSS	_	_	_	_	
382-18	60635-60644	workloads	_	_	_	_	
382-19	60645-60651	Figure	_	_	_	_	
382-20	60652-60654	27	_	_	_	_	
382-21	60655-60659	show	_	_	_	_	
382-22	60660-60663	the	_	_	_	_	
382-23	60664-60675	recommended	_	_	_	_	
382-24	60676-60682	memory	_	_	_	_	
382-25	60683-60691	settings	_	_	_	_	
382-26	60692-60695	for	_	_	_	_	
382-27	60696-60705	analytics	_	_	_	_	
382-28	60706-60714	database	_	_	_	_	
382-29	60715-60718	DSS	_	_	_	_	
382-30	60719-60728	workloads	_	_	_	_	
382-31	60729-60731	on	_	_	_	_	
382-32	60732-60737	Cisco	_	_	_	_	
382-33	60738-60741	UCS	_	_	_	_	
382-34	60742-60744	M5	_	_	_	_	
382-35	60745-60752	servers	_	_	_	_	
382-36	60753-60760	managed	_	_	_	_	
382-37	60761-60763	by	_	_	_	_	
382-38	60764-60769	Cisco	_	_	_	_	
382-39	60770-60773	UCS	_	_	_	_	
382-40	60774-60781	Manager	_	_	_	_	
382-41	60781-60782	.	_	_	_	_	

#Text=Figure 27.
383-1	60783-60789	Figure	_	_	_	_	
383-2	60790-60792	27	_	_	_	_	
383-3	60792-60793	.	_	_	_	_	

#Text=Memory settings for analytics database DSS workloads
#Text=Processor and memory settings for standalone Cisco UCS C-Series servers: DSS
#Text=Figures 28 and 29 show processor and performance and power settings for analytics database DSS workloads on standalone Cisco UCS C-Series M5 servers.
384-1	60794-60800	Memory	_	_	_	_	
384-2	60801-60809	settings	_	_	_	_	
384-3	60810-60813	for	_	_	_	_	
384-4	60814-60823	analytics	_	_	_	_	
384-5	60824-60832	database	_	_	_	_	
384-6	60833-60836	DSS	_	_	_	_	
384-7	60837-60846	workloads	_	_	_	_	
384-8	60847-60856	Processor	_	_	_	_	
384-9	60857-60860	and	_	_	_	_	
384-10	60861-60867	memory	_	_	_	_	
384-11	60868-60876	settings	_	_	_	_	
384-12	60877-60880	for	_	_	_	_	
384-13	60881-60891	standalone	_	_	_	_	
384-14	60892-60897	Cisco	_	_	_	_	
384-15	60898-60901	UCS	_	_	_	_	
384-16	60902-60910	C-Series	_	_	_	_	
384-17	60911-60918	servers	_	_	_	_	
384-18	60918-60919	:	_	_	_	_	
384-19	60920-60923	DSS	_	_	_	_	
384-20	60924-60931	Figures	_	_	_	_	
384-21	60932-60934	28	_	_	_	_	
384-22	60935-60938	and	_	_	_	_	
384-23	60939-60941	29	_	_	_	_	
384-24	60942-60946	show	_	_	_	_	
384-25	60947-60956	processor	_	_	_	_	
384-26	60957-60960	and	_	_	_	_	
384-27	60961-60972	performance	_	_	_	_	
384-28	60973-60976	and	_	_	_	_	
384-29	60977-60982	power	_	_	_	_	
384-30	60983-60991	settings	_	_	_	_	
384-31	60992-60995	for	_	_	_	_	
384-32	60996-61005	analytics	_	_	_	_	
384-33	61006-61014	database	_	_	_	_	
384-34	61015-61018	DSS	_	_	_	_	
384-35	61019-61028	workloads	_	_	_	_	
384-36	61029-61031	on	_	_	_	_	
384-37	61032-61042	standalone	_	_	_	_	
384-38	61043-61048	Cisco	_	_	_	_	
384-39	61049-61052	UCS	_	_	_	_	
384-40	61053-61061	C-Series	_	_	_	_	
384-41	61062-61064	M5	_	_	_	_	
384-42	61065-61072	servers	_	_	_	_	
384-43	61072-61073	.	_	_	_	_	

#Text=Figure 28.
385-1	61074-61080	Figure	_	_	_	_	
385-2	61081-61083	28	_	_	_	_	
385-3	61083-61084	.	_	_	_	_	

#Text=Processor settings for analytics database DSS workloads
#Text=Figure 29.
386-1	61085-61094	Processor	_	_	_	_	
386-2	61095-61103	settings	_	_	_	_	
386-3	61104-61107	for	_	_	_	_	
386-4	61108-61117	analytics	_	_	_	_	
386-5	61118-61126	database	_	_	_	_	
386-6	61127-61130	DSS	_	_	_	_	
386-7	61131-61140	workloads	_	_	_	_	
386-8	61141-61147	Figure	_	_	_	_	
386-9	61148-61150	29	_	_	_	_	
386-10	61150-61151	.	_	_	_	_	

#Text=Power and performance settings for analytics database DSS workloads
#Text=Figure 30 shows memory settings for analytics database DSS workloads in standalone Cisco UCS C-Series M5 servers.
387-1	61152-61157	Power	_	_	_	_	
387-2	61158-61161	and	_	_	_	_	
387-3	61162-61173	performance	_	_	_	_	
387-4	61174-61182	settings	_	_	_	_	
387-5	61183-61186	for	_	_	_	_	
387-6	61187-61196	analytics	_	_	_	_	
387-7	61197-61205	database	_	_	_	_	
387-8	61206-61209	DSS	_	_	_	_	
387-9	61210-61219	workloads	_	_	_	_	
387-10	61220-61226	Figure	_	_	_	_	
387-11	61227-61229	30	_	_	_	_	
387-12	61230-61235	shows	_	_	_	_	
387-13	61236-61242	memory	_	_	_	_	
387-14	61243-61251	settings	_	_	_	_	
387-15	61252-61255	for	_	_	_	_	
387-16	61256-61265	analytics	_	_	_	_	
387-17	61266-61274	database	_	_	_	_	
387-18	61275-61278	DSS	_	_	_	_	
387-19	61279-61288	workloads	_	_	_	_	
387-20	61289-61291	in	_	_	_	_	
387-21	61292-61302	standalone	_	_	_	_	
387-22	61303-61308	Cisco	_	_	_	_	
387-23	61309-61312	UCS	_	_	_	_	
387-24	61313-61321	C-Series	_	_	_	_	
387-25	61322-61324	M5	_	_	_	_	
387-26	61325-61332	servers	_	_	_	_	
387-27	61332-61333	.	_	_	_	_	

#Text=Figure 30.
388-1	61334-61340	Figure	_	_	_	_	
388-2	61341-61343	30	_	_	_	_	
388-3	61343-61344	.	_	_	_	_	

#Text=Memory settings for analytics database DSS workloads
#Text=Conclusion
#Text=When tuning system BIOS settings for performance, you need to consider a number of processor and memory options.
389-1	61345-61351	Memory	_	_	_	_	
389-2	61352-61360	settings	_	_	_	_	
389-3	61361-61364	for	_	_	_	_	
389-4	61365-61374	analytics	_	_	_	_	
389-5	61375-61383	database	_	_	_	_	
389-6	61384-61387	DSS	_	_	_	_	
389-7	61388-61397	workloads	_	_	_	_	
389-8	61398-61408	Conclusion	_	_	_	_	
389-9	61409-61413	When	_	_	_	_	
389-10	61414-61420	tuning	_	_	_	_	
389-11	61421-61427	system	_	_	_	_	
389-12	61428-61432	BIOS	_	_	_	_	
389-13	61433-61441	settings	_	_	_	_	
389-14	61442-61445	for	_	_	_	_	
389-15	61446-61457	performance	_	_	_	_	
389-16	61457-61458	,	_	_	_	_	
389-17	61459-61462	you	_	_	_	_	
389-18	61463-61467	need	_	_	_	_	
389-19	61468-61470	to	_	_	_	_	
389-20	61471-61479	consider	_	_	_	_	
389-21	61480-61481	a	_	_	_	_	
389-22	61482-61488	number	_	_	_	_	
389-23	61489-61491	of	_	_	_	_	
389-24	61492-61501	processor	_	_	_	_	
389-25	61502-61505	and	_	_	_	_	
389-26	61506-61512	memory	_	_	_	_	
389-27	61513-61520	options	_	_	_	_	
389-28	61520-61521	.	_	_	_	_	

#Text=If the best performance is your goal, be sure to choose options that optimize for performance in preference to power savings, and experiment with other options such as CPU prefetchers, CPU power management, and CPU hyperthreading.
390-1	61522-61524	If	_	_	_	_	
390-2	61525-61528	the	_	_	_	_	
390-3	61529-61533	best	_	_	_	_	
390-4	61534-61545	performance	_	_	_	_	
390-5	61546-61548	is	_	_	_	_	
390-6	61549-61553	your	_	_	_	_	
390-7	61554-61558	goal	_	_	_	_	
390-8	61558-61559	,	_	_	_	_	
390-9	61560-61562	be	_	_	_	_	
390-10	61563-61567	sure	_	_	_	_	
390-11	61568-61570	to	_	_	_	_	
390-12	61571-61577	choose	_	_	_	_	
390-13	61578-61585	options	_	_	_	_	
390-14	61586-61590	that	_	_	_	_	
390-15	61591-61599	optimize	_	_	_	_	
390-16	61600-61603	for	_	_	_	_	
390-17	61604-61615	performance	_	_	_	_	
390-18	61616-61618	in	_	_	_	_	
390-19	61619-61629	preference	_	_	_	_	
390-20	61630-61632	to	_	_	_	_	
390-21	61633-61638	power	_	_	_	_	
390-22	61639-61646	savings	_	_	_	_	
390-23	61646-61647	,	_	_	_	_	
390-24	61648-61651	and	_	_	_	_	
390-25	61652-61662	experiment	_	_	_	_	
390-26	61663-61667	with	_	_	_	_	
390-27	61668-61673	other	_	_	_	_	
390-28	61674-61681	options	_	_	_	_	
390-29	61682-61686	such	_	_	_	_	
390-30	61687-61689	as	_	_	_	_	
390-31	61690-61693	CPU	_	_	_	_	
390-32	61694-61705	prefetchers	_	_	_	_	
390-33	61705-61706	,	_	_	_	_	
390-34	61707-61710	CPU	_	_	_	_	
390-35	61711-61716	power	_	_	_	_	
390-36	61717-61727	management	_	_	_	_	
390-37	61727-61728	,	_	_	_	_	
390-38	61729-61732	and	_	_	_	_	
390-39	61733-61736	CPU	_	_	_	_	
390-40	61737-61751	hyperthreading	_	_	_	_	
390-41	61751-61752	.	_	_	_	_	

#Text=For more information
#Text=For more information about Cisco UCS B-Series and C-Series M5 servers, see:
#Text=●     Cisco UCS B200 M5 Blade Server: https://www.cisco.com/c/dam/en/us/products/collateral/servers-unified-computing/ucs-b-series-blade-servers/b200m5-specsheet.pdf
#Text=●     Cisco UCS C220 M5 Rack Server: https://www.cisco.com/c/dam/en/us/products/collateral/servers-unified-computing/ucs-c-series-rack-servers/c220m5-sff-specsheet.pdf
#Text=●     Cisco UCS C240 M5 Rack Server: https://www.cisco.com/c/dam/en/us/products/collateral/servers-unified-computing/ucs-c-series-rack-servers/c240m5-sff-specsheet.pdf
#Text=●     Cisco UCS B480 M5 Blade Server: https://www.cisco.com/c/dam/en/us/products/collateral/servers-unified-computing/ucs-b-series-blade-servers/b480m5-specsheet.pdf
#Text=●     Cisco UCS C480 M5 Rack Server: https://www.cisco.com/c/dam/en/us/products/collateral/servers-unified-computing/ucs-c-series-rack-servers/c480-m5-high-performance-specsheet.pdf
#Text=Our experts recommend
#Text=Cisco UCS B200 M6 Blade Server At-a-Glance
#Text=Cisco UCS M6 Servers with 3rd Gen Intel Xeon CPUs FAQ
#Text=Learn more
#Text=Follow Us
#Text=News & EventsNewsroomEventsBlogsCommunity
#Text=About Us
#Text=About Us
#Text=About Cisco
#Text=Customer stories
#Text=Investor relations
#Text=Social responsibility
#Text=Environmental sustainability
#Text=The Trust Center
#Text=Contact Us
#Text=Contact Us
#Text=Contact Cisco
#Text=Meet our partners
#Text=Find a reseller
#Text=Work with Us
#Text=Careers
#Text=We Are Cisco
#Text=Partner with Cisco
#Text=Cisco Sites
#Text=Meraki
#Text=All new Webex
#Text=Cisco Umbrella
#Text=Contacts
#Text=Feedback
#Text=Help
#Text=Site Map
#Text=Terms & Conditions
#Text=Privacy
#Text=Privacy Statement
#Text=Cookies
#Text=Cookies
#Text=Trademarks
391-1	61753-61756	For	_	_	_	_	
391-2	61757-61761	more	_	_	_	_	
391-3	61762-61773	information	_	_	_	_	
391-4	61774-61777	For	_	_	_	_	
391-5	61778-61782	more	_	_	_	_	
391-6	61783-61794	information	_	_	_	_	
391-7	61795-61800	about	_	_	_	_	
391-8	61801-61806	Cisco	_	_	_	_	
391-9	61807-61810	UCS	_	_	_	_	
391-10	61811-61819	B-Series	_	_	_	_	
391-11	61820-61823	and	_	_	_	_	
391-12	61824-61832	C-Series	_	_	_	_	
391-13	61833-61835	M5	_	_	_	_	
391-14	61836-61843	servers	_	_	_	_	
391-15	61843-61844	,	_	_	_	_	
391-16	61845-61848	see	_	_	_	_	
391-17	61848-61849	:	_	_	_	_	
391-18	61850-61851	●	_	_	_	_	
391-19	61851-61855	    	_	_	_	_	
391-20	61856-61861	Cisco	_	_	_	_	
391-21	61862-61865	UCS	_	_	_	_	
391-22	61866-61870	B200	_	_	_	_	
391-23	61871-61873	M5	_	_	_	_	
391-24	61874-61879	Blade	_	_	_	_	
391-25	61880-61886	Server	_	_	_	_	
391-26	61886-61887	:	_	_	_	_	
391-27	61888-61893	https	_	_	_	_	
391-28	61893-61894	:	_	_	_	_	
391-29	61894-61895	/	_	_	_	_	
391-30	61895-61896	/	_	_	_	_	
391-31	61896-61909	www.cisco.com	_	_	_	_	
391-32	61909-61910	/	_	_	_	_	
391-33	61910-61911	c	_	_	_	_	
391-34	61911-61912	/	_	_	_	_	
391-35	61912-61915	dam	_	_	_	_	
391-36	61915-61916	/	_	_	_	_	
391-37	61916-61918	en	_	_	_	_	
391-38	61918-61919	/	_	_	_	_	
391-39	61919-61921	us	_	_	_	_	
391-40	61921-61922	/	_	_	_	_	
391-41	61922-61930	products	_	_	_	_	
391-42	61930-61931	/	_	_	_	_	
391-43	61931-61941	collateral	_	_	_	_	
391-44	61941-61942	/	_	_	_	_	
391-45	61942-61967	servers-unified-computing	_	_	_	_	
391-46	61967-61968	/	_	_	_	_	
391-47	61968-61994	ucs-b-series-blade-servers	_	_	_	_	
391-48	61994-61995	/	_	_	_	_	
391-49	61995-62001	b200m5	_	_	_	_	
391-50	62001-62002	-	_	_	_	_	
391-51	62002-62015	specsheet.pdf	_	_	_	_	
391-52	62016-62017	●	_	_	_	_	
391-53	62017-62021	    	_	_	_	_	
391-54	62022-62027	Cisco	_	_	_	_	
391-55	62028-62031	UCS	_	_	_	_	
391-56	62032-62036	C220	_	_	_	_	
391-57	62037-62039	M5	_	_	_	_	
391-58	62040-62044	Rack	_	_	_	_	
391-59	62045-62051	Server	_	_	_	_	
391-60	62051-62052	:	_	_	_	_	
391-61	62053-62058	https	_	_	_	_	
391-62	62058-62059	:	_	_	_	_	
391-63	62059-62060	/	_	_	_	_	
391-64	62060-62061	/	_	_	_	_	
391-65	62061-62074	www.cisco.com	_	_	_	_	
391-66	62074-62075	/	_	_	_	_	
391-67	62075-62076	c	_	_	_	_	
391-68	62076-62077	/	_	_	_	_	
391-69	62077-62080	dam	_	_	_	_	
391-70	62080-62081	/	_	_	_	_	
391-71	62081-62083	en	_	_	_	_	
391-72	62083-62084	/	_	_	_	_	
391-73	62084-62086	us	_	_	_	_	
391-74	62086-62087	/	_	_	_	_	
391-75	62087-62095	products	_	_	_	_	
391-76	62095-62096	/	_	_	_	_	
391-77	62096-62106	collateral	_	_	_	_	
391-78	62106-62107	/	_	_	_	_	
391-79	62107-62132	servers-unified-computing	_	_	_	_	
391-80	62132-62133	/	_	_	_	_	
391-81	62133-62158	ucs-c-series-rack-servers	_	_	_	_	
391-82	62158-62159	/	_	_	_	_	
391-83	62159-62165	c220m5	_	_	_	_	
391-84	62165-62166	-	_	_	_	_	
391-85	62166-62183	sff-specsheet.pdf	_	_	_	_	
391-86	62184-62185	●	_	_	_	_	
391-87	62185-62189	    	_	_	_	_	
391-88	62190-62195	Cisco	_	_	_	_	
391-89	62196-62199	UCS	_	_	_	_	
391-90	62200-62204	C240	_	_	_	_	
391-91	62205-62207	M5	_	_	_	_	
391-92	62208-62212	Rack	_	_	_	_	
391-93	62213-62219	Server	_	_	_	_	
391-94	62219-62220	:	_	_	_	_	
391-95	62221-62226	https	_	_	_	_	
391-96	62226-62227	:	_	_	_	_	
391-97	62227-62228	/	_	_	_	_	
391-98	62228-62229	/	_	_	_	_	
391-99	62229-62242	www.cisco.com	_	_	_	_	
391-100	62242-62243	/	_	_	_	_	
391-101	62243-62244	c	_	_	_	_	
391-102	62244-62245	/	_	_	_	_	
391-103	62245-62248	dam	_	_	_	_	
391-104	62248-62249	/	_	_	_	_	
391-105	62249-62251	en	_	_	_	_	
391-106	62251-62252	/	_	_	_	_	
391-107	62252-62254	us	_	_	_	_	
391-108	62254-62255	/	_	_	_	_	
391-109	62255-62263	products	_	_	_	_	
391-110	62263-62264	/	_	_	_	_	
391-111	62264-62274	collateral	_	_	_	_	
391-112	62274-62275	/	_	_	_	_	
391-113	62275-62300	servers-unified-computing	_	_	_	_	
391-114	62300-62301	/	_	_	_	_	
391-115	62301-62326	ucs-c-series-rack-servers	_	_	_	_	
391-116	62326-62327	/	_	_	_	_	
391-117	62327-62333	c240m5	_	_	_	_	
391-118	62333-62334	-	_	_	_	_	
391-119	62334-62351	sff-specsheet.pdf	_	_	_	_	
391-120	62352-62353	●	_	_	_	_	
391-121	62353-62357	    	_	_	_	_	
391-122	62358-62363	Cisco	_	_	_	_	
391-123	62364-62367	UCS	_	_	_	_	
391-124	62368-62372	B480	_	_	_	_	
391-125	62373-62375	M5	_	_	_	_	
391-126	62376-62381	Blade	_	_	_	_	
391-127	62382-62388	Server	_	_	_	_	
391-128	62388-62389	:	_	_	_	_	
391-129	62390-62395	https	_	_	_	_	
391-130	62395-62396	:	_	_	_	_	
391-131	62396-62397	/	_	_	_	_	
391-132	62397-62398	/	_	_	_	_	
391-133	62398-62411	www.cisco.com	_	_	_	_	
391-134	62411-62412	/	_	_	_	_	
391-135	62412-62413	c	_	_	_	_	
391-136	62413-62414	/	_	_	_	_	
391-137	62414-62417	dam	_	_	_	_	
391-138	62417-62418	/	_	_	_	_	
391-139	62418-62420	en	_	_	_	_	
391-140	62420-62421	/	_	_	_	_	
391-141	62421-62423	us	_	_	_	_	
391-142	62423-62424	/	_	_	_	_	
391-143	62424-62432	products	_	_	_	_	
391-144	62432-62433	/	_	_	_	_	
391-145	62433-62443	collateral	_	_	_	_	
391-146	62443-62444	/	_	_	_	_	
391-147	62444-62469	servers-unified-computing	_	_	_	_	
391-148	62469-62470	/	_	_	_	_	
391-149	62470-62496	ucs-b-series-blade-servers	_	_	_	_	
391-150	62496-62497	/	_	_	_	_	
391-151	62497-62503	b480m5	_	_	_	_	
391-152	62503-62504	-	_	_	_	_	
391-153	62504-62517	specsheet.pdf	_	_	_	_	
391-154	62518-62519	●	_	_	_	_	
391-155	62519-62523	    	_	_	_	_	
391-156	62524-62529	Cisco	_	_	_	_	
391-157	62530-62533	UCS	_	_	_	_	
391-158	62534-62538	C480	_	_	_	_	
391-159	62539-62541	M5	_	_	_	_	
391-160	62542-62546	Rack	_	_	_	_	
391-161	62547-62553	Server	_	_	_	_	
391-162	62553-62554	:	_	_	_	_	
391-163	62555-62560	https	_	_	_	_	
391-164	62560-62561	:	_	_	_	_	
391-165	62561-62562	/	_	_	_	_	
391-166	62562-62563	/	_	_	_	_	
391-167	62563-62576	www.cisco.com	_	_	_	_	
391-168	62576-62577	/	_	_	_	_	
391-169	62577-62578	c	_	_	_	_	
391-170	62578-62579	/	_	_	_	_	
391-171	62579-62582	dam	_	_	_	_	
391-172	62582-62583	/	_	_	_	_	
391-173	62583-62585	en	_	_	_	_	
391-174	62585-62586	/	_	_	_	_	
391-175	62586-62588	us	_	_	_	_	
391-176	62588-62589	/	_	_	_	_	
391-177	62589-62597	products	_	_	_	_	
391-178	62597-62598	/	_	_	_	_	
391-179	62598-62608	collateral	_	_	_	_	
391-180	62608-62609	/	_	_	_	_	
391-181	62609-62634	servers-unified-computing	_	_	_	_	
391-182	62634-62635	/	_	_	_	_	
391-183	62635-62660	ucs-c-series-rack-servers	_	_	_	_	
391-184	62660-62661	/	_	_	_	_	
391-185	62661-62665	c480	_	_	_	_	
391-186	62665-62666	-	_	_	_	_	
391-187	62666-62668	m5	_	_	_	_	
391-188	62668-62669	-	_	_	_	_	
391-189	62669-62699	high-performance-specsheet.pdf	_	_	_	_	
391-190	62700-62703	Our	_	_	_	_	
391-191	62704-62711	experts	_	_	_	_	
391-192	62712-62721	recommend	_	_	_	_	
391-193	62722-62727	Cisco	_	_	_	_	
391-194	62728-62731	UCS	_	_	_	_	
391-195	62732-62736	B200	_	_	_	_	
391-196	62737-62739	M6	_	_	_	_	
391-197	62740-62745	Blade	_	_	_	_	
391-198	62746-62752	Server	_	_	_	_	
391-199	62753-62764	At-a-Glance	_	_	_	_	
391-200	62765-62770	Cisco	_	_	_	_	
391-201	62771-62774	UCS	_	_	_	_	
391-202	62775-62777	M6	_	_	_	_	
391-203	62778-62785	Servers	_	_	_	_	
391-204	62786-62790	with	_	_	_	_	
391-205	62791-62794	3rd	_	_	_	_	
391-206	62795-62798	Gen	_	_	_	_	
391-207	62799-62804	Intel	_	_	_	_	
391-208	62805-62809	Xeon	_	_	_	_	
391-209	62810-62814	CPUs	_	_	_	_	
391-210	62815-62818	FAQ	_	_	_	_	
391-211	62819-62824	Learn	_	_	_	_	
391-212	62825-62829	more	_	_	_	_	
391-213	62830-62836	Follow	_	_	_	_	
391-214	62837-62839	Us	_	_	_	_	
391-215	62840-62844	News	_	_	_	_	
391-216	62845-62846	&	_	_	_	_	
391-217	62847-62881	EventsNewsroomEventsBlogsCommunity	_	_	_	_	
391-218	62882-62887	About	_	_	_	_	
391-219	62888-62890	Us	_	_	_	_	
391-220	62891-62896	About	_	_	_	_	
391-221	62897-62899	Us	_	_	_	_	
391-222	62900-62905	About	_	_	_	_	
391-223	62906-62911	Cisco	_	_	_	_	
391-224	62912-62920	Customer	_	_	_	_	
391-225	62921-62928	stories	_	_	_	_	
391-226	62929-62937	Investor	_	_	_	_	
391-227	62938-62947	relations	_	_	_	_	
391-228	62948-62954	Social	_	_	_	_	
391-229	62955-62969	responsibility	_	_	_	_	
391-230	62970-62983	Environmental	_	_	_	_	
391-231	62984-62998	sustainability	_	_	_	_	
391-232	62999-63002	The	_	_	_	_	
391-233	63003-63008	Trust	_	_	_	_	
391-234	63009-63015	Center	_	_	_	_	
391-235	63016-63023	Contact	_	_	_	_	
391-236	63024-63026	Us	_	_	_	_	
391-237	63027-63034	Contact	_	_	_	_	
391-238	63035-63037	Us	_	_	_	_	
391-239	63038-63045	Contact	_	_	_	_	
391-240	63046-63051	Cisco	_	_	_	_	
391-241	63052-63056	Meet	_	_	_	_	
391-242	63057-63060	our	_	_	_	_	
391-243	63061-63069	partners	_	_	_	_	
391-244	63070-63074	Find	_	_	_	_	
391-245	63075-63076	a	_	_	_	_	
391-246	63077-63085	reseller	_	_	_	_	
391-247	63086-63090	Work	_	_	_	_	
391-248	63091-63095	with	_	_	_	_	
391-249	63096-63098	Us	_	_	_	_	
391-250	63099-63106	Careers	_	_	_	_	
391-251	63107-63109	We	_	_	_	_	
391-252	63110-63113	Are	_	_	_	_	
391-253	63114-63119	Cisco	_	_	_	_	
391-254	63120-63127	Partner	_	_	_	_	
391-255	63128-63132	with	_	_	_	_	
391-256	63133-63138	Cisco	_	_	_	_	
391-257	63139-63144	Cisco	_	_	_	_	
391-258	63145-63150	Sites	_	_	_	_	
391-259	63151-63157	Meraki	_	_	_	_	
391-260	63158-63161	All	_	_	_	_	
391-261	63162-63165	new	_	_	_	_	
391-262	63166-63171	Webex	_	_	_	_	
391-263	63172-63177	Cisco	_	_	_	_	
391-264	63178-63186	Umbrella	_	_	_	_	
391-265	63187-63195	Contacts	_	_	_	_	
391-266	63196-63204	Feedback	_	_	_	_	
391-267	63205-63209	Help	_	_	_	_	
391-268	63210-63214	Site	_	_	_	_	
391-269	63215-63218	Map	_	_	_	_	
391-270	63219-63224	Terms	_	_	_	_	
391-271	63225-63226	&	_	_	_	_	
391-272	63227-63237	Conditions	_	_	_	_	
391-273	63238-63245	Privacy	_	_	_	_	
391-274	63246-63253	Privacy	_	_	_	_	
391-275	63254-63263	Statement	_	_	_	_	
391-276	63264-63271	Cookies	_	_	_	_	
391-277	63272-63279	Cookies	_	_	_	_	
391-278	63280-63290	Trademarks	_	_	_	_	
