#FORMAT=WebAnno TSV 3.3


#Text=Distributed Systems Authority - Ideas behind Reliable, Scalable, and Maintenable Systems Skip to content Distributed Systems Authority Ideas behind Reliable, Scalable, and Maintenable Systems Blog
1-1	0-11	Distributed	
1-2	12-19	Systems	
1-3	20-29	Authority	
1-4	30-31	-	
1-5	32-37	Ideas	
1-6	38-44	behind	
1-7	45-53	Reliable	
1-8	53-54	,	
1-9	55-63	Scalable	
1-10	63-64	,	
1-11	65-68	and	
1-12	69-80	Maintenable	
1-13	81-88	Systems	
1-14	89-93	Skip	
1-15	94-96	to	
1-16	97-104	content	
1-17	105-116	Distributed	
1-18	117-124	Systems	
1-19	125-134	Authority	
1-20	135-140	Ideas	
1-21	141-147	behind	
1-22	148-156	Reliable	
1-23	156-157	,	
1-24	158-166	Scalable	
1-25	166-167	,	
1-26	168-171	and	
1-27	172-183	Maintenable	
1-28	184-191	Systems	
1-29	192-196	Blog	

#Text=Videos Distributed Systems Authority Ideas behind Reliable, Scalable, and Maintenable Systems Toggle Navigation Toggle Navigation Blog Videos Search for...
2-1	197-203	Videos	
2-2	204-215	Distributed	
2-3	216-223	Systems	
2-4	224-233	Authority	
2-5	234-239	Ideas	
2-6	240-246	behind	
2-7	247-255	Reliable	
2-8	255-256	,	
2-9	257-265	Scalable	
2-10	265-266	,	
2-11	267-270	and	
2-12	271-282	Maintenable	
2-13	283-290	Systems	
2-14	291-297	Toggle	
2-15	298-308	Navigation	
2-16	309-315	Toggle	
2-17	316-326	Navigation	
2-18	327-331	Blog	
2-19	332-338	Videos	
2-20	339-345	Search	
2-21	346-349	for	
2-22	349-350	.	
2-23	350-351	.	
2-24	351-352	.	

#Text=MySQL High Performance Part 3 – EXPLAIN Queriesby Lucian OpreaJanuary 7, 2021January 10, 2021Introduction Once we have a candidate query for optimization, we need to analyze why it is slow, or why it impacts the system soo much.… Read More »MySQL High Performance Part 3 – EXPLAIN Queries MySQL High Performance Part 2 – Finding Candidates for Query Optimizationsby Lucian OpreaJanuary 7, 2021January 10, 2021Key Takeaways The Performance Schema is a gold mine for finding querying to optimize becuase it allows us to collecting the necessary data to make… Read More »MySQL High Performance Part 2 – Finding Candidates for Query Optimizations
3-1	353-358	MySQL	
3-2	359-363	High	
3-3	364-375	Performance	
3-4	376-380	Part	
3-5	381-382	3	
3-6	383-384	–	
3-7	385-392	EXPLAIN	
3-8	393-402	Queriesby	
3-9	403-409	Lucian	
3-10	410-422	OpreaJanuary	
3-11	423-424	7	
3-12	424-425	,	
3-13	426-437	2021January	
3-14	438-440	10	
3-15	440-441	,	
3-16	442-458	2021Introduction	
3-17	459-463	Once	
3-18	464-466	we	
3-19	467-471	have	
3-20	472-473	a	
3-21	474-483	candidate	
3-22	484-489	query	
3-23	490-493	for	
3-24	494-506	optimization	
3-25	506-507	,	
3-26	508-510	we	
3-27	511-515	need	
3-28	516-518	to	
3-29	519-526	analyze	
3-30	527-530	why	
3-31	531-533	it	
3-32	534-536	is	
3-33	537-541	slow	
3-34	541-542	,	
3-35	543-545	or	
3-36	546-549	why	
3-37	550-552	it	
3-38	553-560	impacts	
3-39	561-564	the	
3-40	565-571	system	
3-41	572-575	soo	
3-42	576-580	much	
3-43	580-581	.	
3-44	581-582	…	
3-45	582-583	 	
3-46	583-587	Read	
3-47	588-592	More	
3-48	593-594	»	
3-49	594-599	MySQL	
3-50	600-604	High	
3-51	605-616	Performance	
3-52	617-621	Part	
3-53	622-623	3	
3-54	624-625	–	
3-55	626-633	EXPLAIN	
3-56	634-641	Queries	
3-57	642-647	MySQL	
3-58	648-652	High	
3-59	653-664	Performance	
3-60	665-669	Part	
3-61	670-671	2	
3-62	672-673	–	
3-63	674-681	Finding	
3-64	682-692	Candidates	
3-65	693-696	for	
3-66	697-702	Query	
3-67	703-718	Optimizationsby	
3-68	719-725	Lucian	
3-69	726-738	OpreaJanuary	
3-70	739-740	7	
3-71	740-741	,	
3-72	742-753	2021January	
3-73	754-756	10	
3-74	756-757	,	
3-75	758-765	2021Key	
3-76	766-775	Takeaways	
3-77	776-779	The	
3-78	780-791	Performance	
3-79	792-798	Schema	
3-80	799-801	is	
3-81	802-803	a	
3-82	804-808	gold	
3-83	809-813	mine	
3-84	814-817	for	
3-85	818-825	finding	
3-86	826-834	querying	
3-87	835-837	to	
3-88	838-846	optimize	
3-89	847-854	becuase	
3-90	855-857	it	
3-91	858-864	allows	
3-92	865-867	us	
3-93	868-870	to	
3-94	871-881	collecting	
3-95	882-885	the	
3-96	886-895	necessary	
3-97	896-900	data	
3-98	901-903	to	
3-99	904-908	make	
3-100	908-909	…	
3-101	909-910	 	
3-102	910-914	Read	
3-103	915-919	More	
3-104	920-921	»	
3-105	921-926	MySQL	
3-106	927-931	High	
3-107	932-943	Performance	
3-108	944-948	Part	
3-109	949-950	2	
3-110	951-952	–	
3-111	953-960	Finding	
3-112	961-971	Candidates	
3-113	972-975	for	
3-114	976-981	Query	
3-115	982-995	Optimizations	

#Text=MySQL Performance Tuning Part 1 – Architectureby Lucian OpreaJanuary 1, 2021January 10, 2021Key Takeaways We need to understand MySQL design so that we can work with it, and not against it. Everything in InnoDB is an index.… Read More »MySQL Performance Tuning Part 1 – Architecture DCA – Describe and demonstrate how to deploy a service on a Docker overlay networkby Lucian OpreaJune 1, 2020July 21, 2020In this article, we’re going to cover 2 main subjects of the networking domain for the Docker Certified Associate DCA certification. Describe and demonstrate how… Read More »DCA – Describe and demonstrate how to deploy a service on a Docker overlay network
4-1	996-1001	MySQL	
4-2	1002-1013	Performance	
4-3	1014-1020	Tuning	
4-4	1021-1025	Part	
4-5	1026-1027	1	
4-6	1028-1029	–	
4-7	1030-1044	Architectureby	
4-8	1045-1051	Lucian	
4-9	1052-1064	OpreaJanuary	
4-10	1065-1066	1	
4-11	1066-1067	,	
4-12	1068-1079	2021January	
4-13	1080-1082	10	
4-14	1082-1083	,	
4-15	1084-1091	2021Key	
4-16	1092-1101	Takeaways	
4-17	1102-1104	We	
4-18	1105-1109	need	
4-19	1110-1112	to	
4-20	1113-1123	understand	
4-21	1124-1129	MySQL	
4-22	1130-1136	design	
4-23	1137-1139	so	
4-24	1140-1144	that	
4-25	1145-1147	we	
4-26	1148-1151	can	
4-27	1152-1156	work	
4-28	1157-1161	with	
4-29	1162-1164	it	
4-30	1164-1165	,	
4-31	1166-1169	and	
4-32	1170-1173	not	
4-33	1174-1181	against	
4-34	1182-1184	it	
4-35	1184-1185	.	
4-36	1186-1196	Everything	
4-37	1197-1199	in	
4-38	1200-1206	InnoDB	
4-39	1207-1209	is	
4-40	1210-1212	an	
4-41	1213-1218	index	
4-42	1218-1219	.	
4-43	1219-1220	…	
4-44	1220-1221	 	
4-45	1221-1225	Read	
4-46	1226-1230	More	
4-47	1231-1232	»	
4-48	1232-1237	MySQL	
4-49	1238-1249	Performance	
4-50	1250-1256	Tuning	
4-51	1257-1261	Part	
4-52	1262-1263	1	
4-53	1264-1265	–	
4-54	1266-1278	Architecture	
4-55	1279-1282	DCA	
4-56	1283-1284	–	
4-57	1285-1293	Describe	
4-58	1294-1297	and	
4-59	1298-1309	demonstrate	
4-60	1310-1313	how	
4-61	1314-1316	to	
4-62	1317-1323	deploy	
4-63	1324-1325	a	
4-64	1326-1333	service	
4-65	1334-1336	on	
4-66	1337-1338	a	
4-67	1339-1345	Docker	
4-68	1346-1353	overlay	
4-69	1354-1363	networkby	
4-70	1364-1370	Lucian	
4-71	1371-1380	OpreaJune	
4-72	1381-1382	1	
4-73	1382-1383	,	
4-74	1384-1392	2020July	
4-75	1393-1395	21	
4-76	1395-1396	,	
4-77	1397-1403	2020In	
4-78	1404-1408	this	
4-79	1409-1416	article	
4-80	1416-1417	,	
4-81	1418-1420	we	
4-82	1420-1421	’	
4-83	1421-1423	re	
4-84	1424-1429	going	
4-85	1430-1432	to	
4-86	1433-1438	cover	
4-87	1439-1440	2	
4-88	1441-1445	main	
4-89	1446-1454	subjects	
4-90	1455-1457	of	
4-91	1458-1461	the	
4-92	1462-1472	networking	
4-93	1473-1479	domain	
4-94	1480-1483	for	
4-95	1484-1487	the	
4-96	1488-1494	Docker	
4-97	1495-1504	Certified	
4-98	1505-1514	Associate	
4-99	1515-1518	DCA	
4-100	1519-1532	certification	
4-101	1532-1533	.	
4-102	1534-1542	Describe	
4-103	1543-1546	and	
4-104	1547-1558	demonstrate	
4-105	1559-1562	how	
4-106	1562-1563	…	
4-107	1563-1564	 	
4-108	1564-1568	Read	
4-109	1569-1573	More	
4-110	1574-1575	»	
4-111	1575-1578	DCA	
4-112	1579-1580	–	
4-113	1581-1589	Describe	
4-114	1590-1593	and	
4-115	1594-1605	demonstrate	
4-116	1606-1609	how	
4-117	1610-1612	to	
4-118	1613-1619	deploy	
4-119	1620-1621	a	
4-120	1622-1629	service	
4-121	1630-1632	on	
4-122	1633-1634	a	
4-123	1635-1641	Docker	
4-124	1642-1649	overlay	
4-125	1650-1657	network	

#Text=Solr 8 Facet Query – Hands-On Exampleby Lucian OpreaMay 2, 2020May 31, 2020Faceted search has become a critical feature for enhancing user search experience for all types of search applications. This article gives you an introduction to… Read More »Solr 8 Facet Query – Hands-On Example Server Tuning Guideline – PostgreSQL 12 High Performance Guide (Part 10/12)by Lucian OpreaDecember 8, 2019December 8, 20192 CommentsKey takeaways The default values in the server configuration file have small memory settings. You should carefully modify primary memory configurations, shared_buffers and work_mem, in… Read More »Server Tuning Guideline – PostgreSQL 12 High Performance Guide (Part 10/12)
5-1	1658-1662	Solr	
5-2	1663-1664	8	
5-3	1665-1670	Facet	
5-4	1671-1676	Query	
5-5	1677-1678	–	
5-6	1679-1687	Hands-On	
5-7	1688-1697	Exampleby	
5-8	1698-1704	Lucian	
5-9	1705-1713	OpreaMay	
5-10	1714-1715	2	
5-11	1715-1716	,	
5-12	1717-1724	2020May	
5-13	1725-1727	31	
5-14	1727-1728	,	
5-15	1729-1740	2020Faceted	
5-16	1741-1747	search	
5-17	1748-1751	has	
5-18	1752-1758	become	
5-19	1759-1760	a	
5-20	1761-1769	critical	
5-21	1770-1777	feature	
5-22	1778-1781	for	
5-23	1782-1791	enhancing	
5-24	1792-1796	user	
5-25	1797-1803	search	
5-26	1804-1814	experience	
5-27	1815-1818	for	
5-28	1819-1822	all	
5-29	1823-1828	types	
5-30	1829-1831	of	
5-31	1832-1838	search	
5-32	1839-1851	applications	
5-33	1851-1852	.	
5-34	1853-1857	This	
5-35	1858-1865	article	
5-36	1866-1871	gives	
5-37	1872-1875	you	
5-38	1876-1878	an	
5-39	1879-1891	introduction	
5-40	1892-1894	to	
5-41	1894-1895	…	
5-42	1895-1896	 	
5-43	1896-1900	Read	
5-44	1901-1905	More	
5-45	1906-1907	»	
5-46	1907-1911	Solr	
5-47	1912-1913	8	
5-48	1914-1919	Facet	
5-49	1920-1925	Query	
5-50	1926-1927	–	
5-51	1928-1936	Hands-On	
5-52	1937-1944	Example	
5-53	1945-1951	Server	
5-54	1952-1958	Tuning	
5-55	1959-1968	Guideline	
5-56	1969-1970	–	
5-57	1971-1981	PostgreSQL	
5-58	1982-1984	12	
5-59	1985-1989	High	
5-60	1990-2001	Performance	
5-61	2002-2007	Guide	
5-62	2008-2009	(	
5-63	2009-2013	Part	
5-64	2014-2016	10	
5-65	2016-2017	/	
5-66	2017-2019	12	
5-67	2019-2020	)	
5-68	2020-2022	by	
5-69	2023-2029	Lucian	
5-70	2030-2043	OpreaDecember	
5-71	2044-2045	8	
5-72	2045-2046	,	
5-73	2047-2059	2019December	
5-74	2060-2061	8	
5-75	2061-2062	,	
5-76	2063-2068	20192	
5-77	2069-2080	CommentsKey	
5-78	2081-2090	takeaways	
5-79	2091-2094	The	
5-80	2095-2102	default	
5-81	2103-2109	values	
5-82	2110-2112	in	
5-83	2113-2116	the	
5-84	2117-2123	server	
5-85	2124-2137	configuration	
5-86	2138-2142	file	
5-87	2143-2147	have	
5-88	2148-2153	small	
5-89	2154-2160	memory	
5-90	2161-2169	settings	
5-91	2169-2170	.	
5-92	2171-2174	You	
5-93	2175-2181	should	
5-94	2182-2191	carefully	
5-95	2192-2198	modify	
5-96	2199-2206	primary	
5-97	2207-2213	memory	
5-98	2214-2228	configurations	
5-99	2228-2229	,	
5-100	2230-2244	shared_buffers	
5-101	2245-2248	and	
5-102	2249-2257	work_mem	
5-103	2257-2258	,	
5-104	2259-2261	in	
5-105	2261-2262	…	
5-106	2262-2263	 	
5-107	2263-2267	Read	
5-108	2268-2272	More	
5-109	2273-2274	»	
5-110	2274-2280	Server	
5-111	2281-2287	Tuning	
5-112	2288-2297	Guideline	
5-113	2298-2299	–	
5-114	2300-2310	PostgreSQL	
5-115	2311-2313	12	
5-116	2314-2318	High	
5-117	2319-2330	Performance	
5-118	2331-2336	Guide	
5-119	2337-2338	(	
5-120	2338-2342	Part	
5-121	2343-2345	10	
5-122	2345-2346	/	
5-123	2346-2348	12	
5-124	2348-2349	)	

#Text=Query Optimizations Tips – PostgreSQL 12 High Performance Guide (Part 9/12)by Lucian OpreaNovember 28, 2019January 18, 2020Key Takeaways First question the semantic correctness of a statement before attacking the performance problem We should avoid SELECT *, ORDER BY and DISTINCT unless… Read More »Query Optimizations Tips – PostgreSQL 12 High Performance Guide (Part 9/12) Spotting Query Problems – PostgreSQL 12 High Performance Guide (Part 8/12)by Lucian OpreaNovember 2, 2019November 2, 2019Key takeaways: Queries are executed as a series of nodes that each do a small task, such as fetching data aggregation or sorting. Sequential scans… Read More »Spotting Query Problems – PostgreSQL 12 High Performance Guide (Part 8/12)
6-1	2350-2355	Query	
6-2	2356-2369	Optimizations	
6-3	2370-2374	Tips	
6-4	2375-2376	–	
6-5	2377-2387	PostgreSQL	
6-6	2388-2390	12	
6-7	2391-2395	High	
6-8	2396-2407	Performance	
6-9	2408-2413	Guide	
6-10	2414-2415	(	
6-11	2415-2419	Part	
6-12	2420-2421	9	
6-13	2421-2422	/	
6-14	2422-2424	12	
6-15	2424-2425	)	
6-16	2425-2427	by	
6-17	2428-2434	Lucian	
6-18	2435-2448	OpreaNovember	
6-19	2449-2451	28	
6-20	2451-2452	,	
6-21	2453-2464	2019January	
6-22	2465-2467	18	
6-23	2467-2468	,	
6-24	2469-2476	2020Key	
6-25	2477-2486	Takeaways	
6-26	2487-2492	First	
6-27	2493-2501	question	
6-28	2502-2505	the	
6-29	2506-2514	semantic	
6-30	2515-2526	correctness	
6-31	2527-2529	of	
6-32	2530-2531	a	
6-33	2532-2541	statement	
6-34	2542-2548	before	
6-35	2549-2558	attacking	
6-36	2559-2562	the	
6-37	2563-2574	performance	
6-38	2575-2582	problem	
6-39	2583-2585	We	
6-40	2586-2592	should	
6-41	2593-2598	avoid	
6-42	2599-2605	SELECT	
6-43	2606-2607	*	
6-44	2607-2608	,	
6-45	2609-2614	ORDER	
6-46	2615-2617	BY	
6-47	2618-2621	and	
6-48	2622-2630	DISTINCT	
6-49	2631-2637	unless	
6-50	2637-2638	…	
6-51	2638-2639	 	
6-52	2639-2643	Read	
6-53	2644-2648	More	
6-54	2649-2650	»	
6-55	2650-2655	Query	
6-56	2656-2669	Optimizations	
6-57	2670-2674	Tips	
6-58	2675-2676	–	
6-59	2677-2687	PostgreSQL	
6-60	2688-2690	12	
6-61	2691-2695	High	
6-62	2696-2707	Performance	
6-63	2708-2713	Guide	
6-64	2714-2715	(	
6-65	2715-2719	Part	
6-66	2720-2721	9	
6-67	2721-2722	/	
6-68	2722-2724	12	
6-69	2724-2725	)	
6-70	2726-2734	Spotting	
6-71	2735-2740	Query	
6-72	2741-2749	Problems	
6-73	2750-2751	–	
6-74	2752-2762	PostgreSQL	
6-75	2763-2765	12	
6-76	2766-2770	High	
6-77	2771-2782	Performance	
6-78	2783-2788	Guide	
6-79	2789-2790	(	
6-80	2790-2794	Part	
6-81	2795-2796	8	
6-82	2796-2797	/	
6-83	2797-2799	12	
6-84	2799-2800	)	
6-85	2800-2802	by	
6-86	2803-2809	Lucian	
6-87	2810-2823	OpreaNovember	
6-88	2824-2825	2	
6-89	2825-2826	,	
6-90	2827-2839	2019November	
6-91	2840-2841	2	
6-92	2841-2842	,	
6-93	2843-2850	2019Key	
6-94	2851-2860	takeaways	
6-95	2860-2861	:	
6-96	2862-2869	Queries	
6-97	2870-2873	are	
6-98	2874-2882	executed	
6-99	2883-2885	as	
6-100	2886-2887	a	
6-101	2888-2894	series	
6-102	2895-2897	of	
6-103	2898-2903	nodes	
6-104	2904-2908	that	
6-105	2909-2913	each	
6-106	2914-2916	do	
6-107	2917-2918	a	
6-108	2919-2924	small	
6-109	2925-2929	task	
6-110	2929-2930	,	
6-111	2931-2935	such	
6-112	2936-2938	as	
6-113	2939-2947	fetching	
6-114	2948-2952	data	
6-115	2953-2964	aggregation	
6-116	2965-2967	or	
6-117	2968-2975	sorting	
6-118	2975-2976	.	
6-119	2977-2987	Sequential	
6-120	2988-2993	scans	
6-121	2993-2994	…	
6-122	2994-2995	 	
6-123	2995-2999	Read	
6-124	3000-3004	More	
6-125	3005-3006	»	
6-126	3006-3014	Spotting	
6-127	3015-3020	Query	
6-128	3021-3029	Problems	
6-129	3030-3031	–	
6-130	3032-3042	PostgreSQL	
6-131	3043-3045	12	
6-132	3046-3050	High	
6-133	3051-3062	Performance	
6-134	3063-3068	Guide	
6-135	3069-3070	(	
6-136	3070-3074	Part	
6-137	3075-3076	8	
6-138	3076-3077	/	
6-139	3077-3079	12	
6-140	3079-3080	)	

#Text=Making Use of Statistics – PostgreSQL 12 High Performance Guide (Part 7/12)by Lucian OpreaOctober 24, 2019January 10, 2020Key takeaways: The database statistics are exposed using views. The fastest way to spot performance issues is by using the pg_stat_statements view Particularly valuable statistics… Read More »Making Use of Statistics – PostgreSQL 12 High Performance Guide (Part 7/12) Index Optimization Techniques – PostgreSQL 12 High Performance Guide (Part 6/12)by Lucian OpreaOctober 19, 2019October 23, 2019Key takeaways Adding an index increases overhead every time you add or change rows in a table. Each index needs to satisfy enough queries to… Read More »Index Optimization Techniques – PostgreSQL 12 High Performance Guide (Part 6/12)
7-1	3081-3087	Making	
7-2	3088-3091	Use	
7-3	3092-3094	of	
7-4	3095-3105	Statistics	
7-5	3106-3107	–	
7-6	3108-3118	PostgreSQL	
7-7	3119-3121	12	
7-8	3122-3126	High	
7-9	3127-3138	Performance	
7-10	3139-3144	Guide	
7-11	3145-3146	(	
7-12	3146-3150	Part	
7-13	3151-3152	7	
7-14	3152-3153	/	
7-15	3153-3155	12	
7-16	3155-3156	)	
7-17	3156-3158	by	
7-18	3159-3165	Lucian	
7-19	3166-3178	OpreaOctober	
7-20	3179-3181	24	
7-21	3181-3182	,	
7-22	3183-3194	2019January	
7-23	3195-3197	10	
7-24	3197-3198	,	
7-25	3199-3206	2020Key	
7-26	3207-3216	takeaways	
7-27	3216-3217	:	
7-28	3218-3221	The	
7-29	3222-3230	database	
7-30	3231-3241	statistics	
7-31	3242-3245	are	
7-32	3246-3253	exposed	
7-33	3254-3259	using	
7-34	3260-3265	views	
7-35	3265-3266	.	
7-36	3267-3270	The	
7-37	3271-3278	fastest	
7-38	3279-3282	way	
7-39	3283-3285	to	
7-40	3286-3290	spot	
7-41	3291-3302	performance	
7-42	3303-3309	issues	
7-43	3310-3312	is	
7-44	3313-3315	by	
7-45	3316-3321	using	
7-46	3322-3325	the	
7-47	3326-3344	pg_stat_statements	
7-48	3345-3349	view	
7-49	3350-3362	Particularly	
7-50	3363-3371	valuable	
7-51	3372-3382	statistics	
7-52	3382-3383	…	
7-53	3383-3384	 	
7-54	3384-3388	Read	
7-55	3389-3393	More	
7-56	3394-3395	»	
7-57	3395-3401	Making	
7-58	3402-3405	Use	
7-59	3406-3408	of	
7-60	3409-3419	Statistics	
7-61	3420-3421	–	
7-62	3422-3432	PostgreSQL	
7-63	3433-3435	12	
7-64	3436-3440	High	
7-65	3441-3452	Performance	
7-66	3453-3458	Guide	
7-67	3459-3460	(	
7-68	3460-3464	Part	
7-69	3465-3466	7	
7-70	3466-3467	/	
7-71	3467-3469	12	
7-72	3469-3470	)	
7-73	3471-3476	Index	
7-74	3477-3489	Optimization	
7-75	3490-3500	Techniques	
7-76	3501-3502	–	
7-77	3503-3513	PostgreSQL	
7-78	3514-3516	12	
7-79	3517-3521	High	
7-80	3522-3533	Performance	
7-81	3534-3539	Guide	
7-82	3540-3541	(	
7-83	3541-3545	Part	
7-84	3546-3547	6	
7-85	3547-3548	/	
7-86	3548-3550	12	
7-87	3550-3551	)	
7-88	3551-3553	by	
7-89	3554-3560	Lucian	
7-90	3561-3573	OpreaOctober	
7-91	3574-3576	19	
7-92	3576-3577	,	
7-93	3578-3589	2019October	
7-94	3590-3592	23	
7-95	3592-3593	,	
7-96	3594-3601	2019Key	
7-97	3602-3611	takeaways	
7-98	3612-3618	Adding	
7-99	3619-3621	an	
7-100	3622-3627	index	
7-101	3628-3637	increases	
7-102	3638-3646	overhead	
7-103	3647-3652	every	
7-104	3653-3657	time	
7-105	3658-3661	you	
7-106	3662-3665	add	
7-107	3666-3668	or	
7-108	3669-3675	change	
7-109	3676-3680	rows	
7-110	3681-3683	in	
7-111	3684-3685	a	
7-112	3686-3691	table	
7-113	3691-3692	.	
7-114	3693-3697	Each	
7-115	3698-3703	index	
7-116	3704-3709	needs	
7-117	3710-3712	to	
7-118	3713-3720	satisfy	
7-119	3721-3727	enough	
7-120	3728-3735	queries	
7-121	3736-3738	to	
7-122	3738-3739	…	
7-123	3739-3740	 	
7-124	3740-3744	Read	
7-125	3745-3749	More	
7-126	3750-3751	»	
7-127	3751-3756	Index	
7-128	3757-3769	Optimization	
7-129	3770-3780	Techniques	
7-130	3781-3782	–	
7-131	3783-3793	PostgreSQL	
7-132	3794-3796	12	
7-133	3797-3801	High	
7-134	3802-3813	Performance	
7-135	3814-3819	Guide	
7-136	3820-3821	(	
7-137	3821-3825	Part	
7-138	3826-3827	6	
7-139	3827-3828	/	
7-140	3828-3830	12	
7-141	3830-3831	)	

#Text=Next » PostgreSQL High Performance Tuning Guide Course Use the following coupon to get 66% percent off. "LEARNING202104" Check the Full Course Search for: Recent Posts
8-1	3832-3836	Next	
8-2	3837-3838	»	
8-3	3839-3849	PostgreSQL	
8-4	3850-3854	High	
8-5	3855-3866	Performance	
8-6	3867-3873	Tuning	
8-7	3874-3879	Guide	
8-8	3880-3886	Course	
8-9	3887-3890	Use	
8-10	3891-3894	the	
8-11	3895-3904	following	
8-12	3905-3911	coupon	
8-13	3912-3914	to	
8-14	3915-3918	get	
8-15	3919-3922	66%	
8-16	3923-3930	percent	
8-17	3931-3934	off	
8-18	3934-3935	.	
8-19	3936-3937	"	
8-20	3937-3951	LEARNING202104	
8-21	3951-3952	"	
8-22	3953-3958	Check	
8-23	3959-3962	the	
8-24	3963-3967	Full	
8-25	3968-3974	Course	
8-26	3975-3981	Search	
8-27	3982-3985	for	
8-28	3985-3986	:	
8-29	3987-3993	Recent	
8-30	3994-3999	Posts	

#Text=MySQL High Performance Part 3 – EXPLAIN Queries MySQL High Performance Part 2 – Finding Candidates for Query Optimizations MySQL Performance Tuning Part 1 – Architecture DCA – Describe and demonstrate how to deploy a service on a Docker overlay network Solr 8 Facet Query – Hands-On Example
9-1	4000-4005	MySQL	
9-2	4006-4010	High	
9-3	4011-4022	Performance	
9-4	4023-4027	Part	
9-5	4028-4029	3	
9-6	4030-4031	–	
9-7	4032-4039	EXPLAIN	
9-8	4040-4047	Queries	
9-9	4048-4053	MySQL	
9-10	4054-4058	High	
9-11	4059-4070	Performance	
9-12	4071-4075	Part	
9-13	4076-4077	2	
9-14	4078-4079	–	
9-15	4080-4087	Finding	
9-16	4088-4098	Candidates	
9-17	4099-4102	for	
9-18	4103-4108	Query	
9-19	4109-4122	Optimizations	
9-20	4123-4128	MySQL	
9-21	4129-4140	Performance	
9-22	4141-4147	Tuning	
9-23	4148-4152	Part	
9-24	4153-4154	1	
9-25	4155-4156	–	
9-26	4157-4169	Architecture	
9-27	4170-4173	DCA	
9-28	4174-4175	–	
9-29	4176-4184	Describe	
9-30	4185-4188	and	
9-31	4189-4200	demonstrate	
9-32	4201-4204	how	
9-33	4205-4207	to	
9-34	4208-4214	deploy	
9-35	4215-4216	a	
9-36	4217-4224	service	
9-37	4225-4227	on	
9-38	4228-4229	a	
9-39	4230-4236	Docker	
9-40	4237-4244	overlay	
9-41	4245-4252	network	
9-42	4253-4257	Solr	
9-43	4258-4259	8	
9-44	4260-4265	Facet	
9-45	4266-4271	Query	
9-46	4272-4273	–	
9-47	4274-4282	Hands-On	
9-48	4283-4290	Example	
