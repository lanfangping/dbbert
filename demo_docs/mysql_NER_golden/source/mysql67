How to Force Index on a SQL Server Query? - Interview Question of the Week #281 - SQL Authority with Pinal Dave
April Discount: Comprehensive Database Performance Health Check | TestimonialsConsultingTrainingFree VideosAll ArticlesInterview Questions and AnswersSQL Tips and TricksSQL PerformanceSQL PuzzleBig DataBlog StatsSQL BooksSearch SQLAuthorityDownloadsHire MeHealth CheckTrainingHow to Force Index on a SQL Server Query? – Interview Question of the Week #281June 14, 2020Pinal DaveSQL Interview Questions and Answers2 CommentsQuestion: How to Force Index on a SQL Server Query?Answer: I personally do not like to force an index on any query. As a matter of fact, I have enough bad experience with this one. I always recommend in my Comprehensive Database Performance Health Check, I always discuss why index hints and query hints are not recommended in my health check consulting engagement.Here is how you can force an index to be used with a query with the help of an index hint.SELECT *
FROM [WideWorldImporters].[Sales].[Invoices]
WITH(INDEX([FK_Sales_Invoices_AccountsPersonID]))
WHERE CustomerID = 191In the above query, we are forcing the index FK_Sales_Invoices_AccountsPersonID to the index. We can always pass the name of the index in the WITH clause and that index will be used for the query. If the index does not exist, it will give you an error, so it is a good idea to check if the index exists before the query is executed.It is not required that you have to use the name of the index in the SQL Query. You can also use the number as well.SELECT *
FROM [WideWorldImporters].[Sales].[Invoices]
WITH(INDEX(0))
WHERE CustomerID = 191For example, the above query will use the clustered index (if exists) or a heap to retrieve data from the table.You can replace the index id zero with the other index number (greater than 1) which will represent the non-clustered index on the table.SELECT *
FROM [WideWorldImporters].[Sales].[Invoices]
WITH(INDEX(2))
WHERE CustomerID = 191For example, the above query will use the first non clustered index and use it to retrieve the data. The id of the index you can check in the sys.index table.UPDATE: If a clustered index exists, INDEX(0) forces a clustered index scan and INDEX(1) forces a clustered index scan or seek. If no clustered index exists, INDEX(0) forces a table scan and INDEX(1) is interpreted as an error. (Thanks to Carsten Saastamoinen-Jakobsen)Once again, I want to reiterate that the index hint is not a good way to get started with the coding. You need to make sure that your query is re-written in such a way that it uses the most optimal index.Reference: Pinal Dave (https://blog.sqlauthority.com)
Clustered Index, Query Hint, SQL Index, SQL Scripts, SQL ServerPrevious PostCan a Database Have Multiple Files with Extension MDF? – Interview Question of the Week #279Next PostDoes BIT Datatype Equal to 1 or TRUE in SQL Server? – Interview Question of the Week #282Related PostsSQL SERVER – GROUP BY Columns with XMLPATH – Comma Delimit Multiple RowsOctober 3, 2014Interview Question of the Week #007 – How to Reindex Every Table of the Database?February 15, 2015SQL SERVER – Get the List of Object Dependencies – sp_depends and information_schema.routinesFebruary 4, 2010 2 Comments. Leave new
Carsten Saastamoinen-Jakobsen June 21, 2020 12:20 pmSELECT * FROM [WideWorldImporters].[Sales].[Invoices] WITH(INDEX(1)) WHERE CustomerID = 191For example, the above query will use the first non clustered index and use it to retrieve the data.It’s wrong! The rules are:If a clustered index exists, INDEX(0) forces a clustered index scan and INDEX(1) forces a clustered index scan or seek. If no clustered index exists, INDEX(0) forces a table scan and INDEX(1) is interpreted as an error. Reply
Pinal Dave June 21, 2020 1:12 pmYou are correct. I wanted to know use index(2) but ended up using index 1 in example. So now to make my blog correct, I will add your note there.Thanks Carsten. Reply
Leave a Reply Cancel reply
Pinal Dave is an SQL Server Performance Tuning Expert and independent consultant with over 17 years of hands-on experience. He holds a Masters of Science degree and numerous database certifications.Pinal has authored 12 SQL Server database books and 37 Pluralsight courses. To freely share his knowledge and help others build their expertise, Pinal has also written more than 5,500 database tech articles on his blog at https://blog.sqlauthority.com.Pinal is an experienced and dedicated professional with a deep commitment to flawless customer service. If you need help with any SQL Server Performance Tuning Issues, please feel free to reach out at pinal@sqlauthority.com.Pinal is also a CrossFit Level 1 Trainer (CF-L1) and CrossFit Level 2 Trainer (CF-L2).Nupur Dave is a social media enthusiast and an independent consultant. She primarily focuses on the database domain, helping clients build short and long term multi-channel campaigns to drive leads for their sales pipeline.Exclusive NewsletterWebsite Is your SQL Server running slow and you want to speed it up without sharing server credentials? In my Comprehensive Database Performance Health Check, we can work together remotely and resolve your biggest performance troublemakers in less than 4 hours.Once you learn my business secrets, you will fix the majority of problems in the future.Have you ever opened any PowerPoint deck when you face SQL Server Performance Tuning emergencies? SQL Server Performance Tuning Practical Workshop is my MOST popular training with no PowerPoint presentations and 100% practical demonstrations.Essentially I share my business secrets to optimize SQL Server performance.
SQL Interview Q & ATestimonialsSearchPrivacy Policy© 2006 – 2021 All rights reserved. pinal @ SQLAuthority.com
Menu
Go to mobile version
