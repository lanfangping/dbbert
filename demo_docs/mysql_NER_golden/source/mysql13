Optimizing Drupal to load faster (Server, MySQL, caching, theming, HTML) | Managing site performance and scalability | Drupal Wiki guide on Drupal.org
Skip to main content
Skip to search
Drupal.org home
Why Drupal?For developers
For marketers
For agencies
Case studies
About Drupal
Drupal 9
In the news
BuildDownload & Extend
Browse Repository
Documentation
Modules
Themes
Distributions
Issue queues
SolutionsBy industry
By feature
Case studies
For hosting
ServicesMarketplace
Hosting
Training
CommunityPortal
Contributor guide
Organizations
Forum
Promote Drupal
Community Case Studies
Drupal Swag
Core Development & Strategic Initiatives
ResourcesUser guide
Documentation
Support
Security
Jobs
Events
Newsletter
Project News
Partner Press
Drupal 9
Diversity, Equity, and Inclusion Resources
GiveDrupal Association
Supporters
Promote Drupal
Join us
Contributor guide
About Drupal.org
EventsDrupalCon North America
Community Events
Drupical
DrupalFest
Try DrupalDemo online
Download
Return to content
Search form
Search
Log in
Create account
Documentation
Search
Drupal WikiDrupal 7Managing site performance and scalability
Celebrate 20 years of Drupal with us! April is DrupalFest, a month-long series of virtual events focused on community, contribution, and the positive impacts made possible with Drupal.
Add your DrupalFest event to the calendar
Advertising sustains the DA. Ads are hidden for members. Join today
On this page
Basic settings
Theme optimization
Coding standard and proper use of already existing core API
Secure codes
DB Query optimization in codes
DB table optimization
Disable unnecessary modules
Remove unnecessary contents and others
Cache modules
Make changes according to Google Pagespeed and yahoo YSlow suggestions
MySQL Settings
Apache settings
Also we can check this options :
1) Turn Page Caching On
2) Turn Views caching on
Managing site performance and scalability
Planning for Performance
Caching to improve performance
Changing PHP memory limits
Content Delivery Network [CDN]
Design for Low Bandwidth
Increase upload size in your php.ini
Optimizing Drupal to load faster (Server, MySQL, caching, theming, HTML)
Optimizing MySQL
Randomizing MySQL Users For Exceeded max_questions Error
Server tuning considerations
Tuning php.ini for Drupal
Optimizing Drupal to load faster (Server, MySQL, caching, theming, HTML)
Last updated on
25 March 2021
Basic settings
Configure cron job (for Drupal 6 http://drupal.org/project/poormanscron)
Make sure all cache tables are clearing properly especially cache_form
Enable cache options in performance page
(For Drupal 6, http://drupal.org/project/advagg )
Theme optimization
Manually Remove blankspaces and comments from .tpl
No indentation in .tpl
Turn on CSS and JS aggregation in the performance page
Manually reduce css file size by removing duplicate and combine similar together
Move codes to functions which should be in a custom common module. Use functions for similar problems instead of coding separately. Refer core API
Coding standard and proper use of already existing core API
http://drupal.org/coding-standards
https://drupalize.me/videos/understanding-drupal-coding-standards?p=2012
Secure codes
http://drupal.org/writing-secure-code
DB Query optimization in codes
Join db queries whenever possible
For Db update and insert, use core API
Use drupal standard http://drupal.org/coding-standards
DB table optimization
http://drupal.org/project/db_maintenance
Disable unnecessary modules
Devel
Statistics
Update status
Use syslog instead of Database logging
Remove unnecessary contents and others
Cache modules
Make use of object caches to reduce database overhead, e.g. Memcache, Redis or APC
https://drupal.org/project/authcache
Some module may help improve
http://drupal.org/project/ajaxblocks (not available with Drupal 8 & 9 )
Make changes according to Google Pagespeed and yahoo YSlow suggestions
MySQL Settings
Cache Size say 32MB in MySQL
Use https://github.com/initlabopen/mysqlconfigurer for fully automated MySQL performance tuning
Apache settings
DNS lookup : OFF
Set FollowSymLinks everywhere and never set SymLinksIfOwnerMatch
Avoid content negotiation. Or use type-map files rather than Options MultiViews directive
KeepAlive on, and KeepAliveTimeout very low (1 or 2 sec)
Disable or comment access.log settings
Enable mod_deflate or mod_gzip
Install APC server with higher memory limit apc.shm_size = 64
Also we can check this options :
1) Turn Page Caching On
What page caching does is that instead of using a bunch of database queries to get the data used in making a typical web page, the rendered contents of the web page are stored in a separate database cache table so that it can be recalled quicker. If you have 10 people visiting the site from different computers, Drupal first looks into the database cache table to see if the page is there, if it is, it just gives them the page. Think of saving the output of 50 separate queries so that is accessible with a single query. You obviously are reducing the SQL queries required by a lot. What the page cache table actually stores is HTML content.
Page Caching is that it only works to optimize the page load time for Anonymous users. This is because when you are logged in, you might have blocks that show up on the page that are customized for you, if it served everybody the same page, they would see your customized information (think of a My Recent Posts block), so Drupal does not use the Page Cache for Authenticated users automatically. This allows you to turn Page Caching on and still get the benefit for Anonymous user page load times, but does not break the site for Authenticated users. There are other caching options that will help with Authenticated user page performance, we will talk about those later.
To enable Page Caching, you go to Configuration | Development and select the checkbox next to "Cache pages for anonymous users".
2) Turn Views caching on
As mentioned when talking about Page Caching only working for anonymous users above, there are other caching options for helping with Authenticated user page performance. One of those options is to turn on caching for blocks and pages that you create using the Views module. This allows you to cache the output of the query used to generate the view, or the end HTML output of your View, and you can tune the cache for them separately. And realize too that this means you can cache portions of a page if you are using one or several Views blocks in the page, it will just cache that block in the page, not the whole page.
See more @ https://www.lullabot.com/articles/a-beginners-guide-to-caching-data-in-d...
Help improve this page
Page status:
No known problems
You can:
Log in, click Edit, and edit this page
Log in, click Discuss, update the Page status value, and suggest an improvement
Log in and create a Documentation issue with your suggestion
Drupal’s online documentation is © 2000-2021 by the individual contributors and can be used in accordance with the Creative Commons License, Attribution-ShareAlike 2.0. PHP code is distributed under the GNU General Public License.
Thank you to these Drupal contributors
Top Drupal contributor Acquia would like to thank their partners for their contributions to Drupal.
Infrastructure management for Drupal.org provided by
News itemsNews
Planet Drupal
Social media
Sign up for Drupal news
Security advisories
Jobs
Our communityCommunity
Services, Training & Hosting
Contributor guide
Groups & meetups
DrupalCon
Code of conduct
DocumentationDocumentation
Drupal Guide
Drupal User Guide
Developer docs
API.Drupal.org
Drupal code baseDownload & Extend
Drupal core
Modules
Themes
Distributions
Governance of communityAbout
Web accessibility
Drupal Association
About Drupal.org
Terms of service
Privacy policy
Drupal is a registered trademark of Dries Buytaert.
