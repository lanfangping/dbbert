#FORMAT=WebAnno TSV 3.3


#Text=How to Force Index on a SQL Server Query?
1-1	0-3	How	
1-2	4-6	to	
1-3	7-12	Force	
1-4	13-18	Index	
1-5	19-21	on	
1-6	22-23	a	
1-7	24-27	SQL	
1-8	28-34	Server	
1-9	35-40	Query	
1-10	40-41	?	

#Text=- Interview Question of the Week #281 - SQL Authority with Pinal Dave
#Text=April Discount: Comprehensive Database Performance Health Check | TestimonialsConsultingTrainingFree VideosAll ArticlesInterview Questions and AnswersSQL Tips and TricksSQL PerformanceSQL PuzzleBig DataBlog StatsSQL BooksSearch SQLAuthorityDownloadsHire MeHealth CheckTrainingHow to Force Index on a SQL Server Query?
2-1	42-43	-	
2-2	44-53	Interview	
2-3	54-62	Question	
2-4	63-65	of	
2-5	66-69	the	
2-6	70-74	Week	
2-7	75-79	#281	
2-8	80-81	-	
2-9	82-85	SQL	
2-10	86-95	Authority	
2-11	96-100	with	
2-12	101-106	Pinal	
2-13	107-111	Dave	
2-14	112-117	April	
2-15	118-126	Discount	
2-16	126-127	:	
2-17	128-141	Comprehensive	
2-18	142-150	Database	
2-19	151-162	Performance	
2-20	163-169	Health	
2-21	170-175	Check	
2-22	176-177	|	
2-23	178-212	TestimonialsConsultingTrainingFree	
2-24	213-222	VideosAll	
2-25	223-240	ArticlesInterview	
2-26	241-250	Questions	
2-27	251-254	and	
2-28	255-265	AnswersSQL	
2-29	266-270	Tips	
2-30	271-274	and	
2-31	275-284	TricksSQL	
2-32	285-299	PerformanceSQL	
2-33	300-309	PuzzleBig	
2-34	310-318	DataBlog	
2-35	319-327	StatsSQL	
2-36	328-339	BooksSearch	
2-37	340-365	SQLAuthorityDownloadsHire	
2-38	366-374	MeHealth	
2-39	375-391	CheckTrainingHow	
2-40	392-394	to	
2-41	395-400	Force	
2-42	401-406	Index	
2-43	407-409	on	
2-44	410-411	a	
2-45	412-415	SQL	
2-46	416-422	Server	
2-47	423-428	Query	
2-48	428-429	?	

#Text=– Interview Question of the Week #281June 14, 2020Pinal DaveSQL Interview Questions and Answers2 CommentsQuestion: How to Force Index on a SQL Server Query?
3-1	430-431	–	
3-2	432-441	Interview	
3-3	442-450	Question	
3-4	451-453	of	
3-5	454-457	the	
3-6	458-462	Week	
3-7	463-471	#281June	
3-8	472-474	14	
3-9	474-475	,	
3-10	476-485	2020Pinal	
3-11	486-493	DaveSQL	
3-12	494-503	Interview	
3-13	504-513	Questions	
3-14	514-517	and	
3-15	518-526	Answers2	
3-16	527-543	CommentsQuestion	
3-17	543-544	:	
3-18	545-548	How	
3-19	549-551	to	
3-20	552-557	Force	
3-21	558-563	Index	
3-22	564-566	on	
3-23	567-568	a	
3-24	569-572	SQL	
3-25	573-579	Server	
3-26	580-585	Query	
3-27	585-586	?	

#Text=Answer: I personally do not like to force an index on any query.
4-1	586-592	Answer	
4-2	592-593	:	
4-3	594-595	I	
4-4	596-606	personally	
4-5	607-609	do	
4-6	610-613	not	
4-7	614-618	like	
4-8	619-621	to	
4-9	622-627	force	
4-10	628-630	an	
4-11	631-636	index	
4-12	637-639	on	
4-13	640-643	any	
4-14	644-649	query	
4-15	649-650	.	

#Text=As a matter of fact, I have enough bad experience with this one.
5-1	651-653	As	
5-2	654-655	a	
5-3	656-662	matter	
5-4	663-665	of	
5-5	666-670	fact	
5-6	670-671	,	
5-7	672-673	I	
5-8	674-678	have	
5-9	679-685	enough	
5-10	686-689	bad	
5-11	690-700	experience	
5-12	701-705	with	
5-13	706-710	this	
5-14	711-714	one	
5-15	714-715	.	

#Text=I always recommend in my Comprehensive Database Performance Health Check, I always discuss why index hints and query hints are not recommended in my health check consulting engagement.Here is how you can force an index to be used with a query with the help of an index hint.SELECT *
#Text=FROM [WideWorldImporters].
6-1	716-717	I	
6-2	718-724	always	
6-3	725-734	recommend	
6-4	735-737	in	
6-5	738-740	my	
6-6	741-754	Comprehensive	
6-7	755-763	Database	
6-8	764-775	Performance	
6-9	776-782	Health	
6-10	783-788	Check	
6-11	788-789	,	
6-12	790-791	I	
6-13	792-798	always	
6-14	799-806	discuss	
6-15	807-810	why	
6-16	811-816	index	
6-17	817-822	hints	
6-18	823-826	and	
6-19	827-832	query	
6-20	833-838	hints	
6-21	839-842	are	
6-22	843-846	not	
6-23	847-858	recommended	
6-24	859-861	in	
6-25	862-864	my	
6-26	865-871	health	
6-27	872-877	check	
6-28	878-888	consulting	
6-29	889-904	engagement.Here	
6-30	905-907	is	
6-31	908-911	how	
6-32	912-915	you	
6-33	916-919	can	
6-34	920-925	force	
6-35	926-928	an	
6-36	929-934	index	
6-37	935-937	to	
6-38	938-940	be	
6-39	941-945	used	
6-40	946-950	with	
6-41	951-952	a	
6-42	953-958	query	
6-43	959-963	with	
6-44	964-967	the	
6-45	968-972	help	
6-46	973-975	of	
6-47	976-978	an	
6-48	979-984	index	
6-49	985-996	hint.SELECT	
6-50	997-998	*	
6-51	999-1003	FROM	
6-52	1004-1005	[	
6-53	1005-1023	WideWorldImporters	
6-54	1023-1024	]	
6-55	1024-1025	.	

#Text=[Sales].
7-1	1025-1026	[	
7-2	1026-1031	Sales	
7-3	1031-1032	]	
7-4	1032-1033	.	

#Text=[Invoices]
#Text=WITH(INDEX([FK_Sales_Invoices_AccountsPersonID]))
#Text=WHERE CustomerID = 191In the above query, we are forcing the index FK_Sales_Invoices_AccountsPersonID to the index.
8-1	1033-1034	[	
8-2	1034-1042	Invoices	
8-3	1042-1043	]	
8-4	1044-1048	WITH	
8-5	1048-1049	(	
8-6	1049-1054	INDEX	
8-7	1054-1055	(	
8-8	1055-1056	[	
8-9	1056-1090	FK_Sales_Invoices_AccountsPersonID	
8-10	1090-1091	]	
8-11	1091-1092	)	
8-12	1092-1093	)	
8-13	1094-1099	WHERE	
8-14	1100-1110	CustomerID	
8-15	1111-1112	=	
8-16	1113-1118	191In	
8-17	1119-1122	the	
8-18	1123-1128	above	
8-19	1129-1134	query	
8-20	1134-1135	,	
8-21	1136-1138	we	
8-22	1139-1142	are	
8-23	1143-1150	forcing	
8-24	1151-1154	the	
8-25	1155-1160	index	
8-26	1161-1195	FK_Sales_Invoices_AccountsPersonID	
8-27	1196-1198	to	
8-28	1199-1202	the	
8-29	1203-1208	index	
8-30	1208-1209	.	

#Text=We can always pass the name of the index in the WITH clause and that index will be used for the query.
9-1	1210-1212	We	
9-2	1213-1216	can	
9-3	1217-1223	always	
9-4	1224-1228	pass	
9-5	1229-1232	the	
9-6	1233-1237	name	
9-7	1238-1240	of	
9-8	1241-1244	the	
9-9	1245-1250	index	
9-10	1251-1253	in	
9-11	1254-1257	the	
9-12	1258-1262	WITH	
9-13	1263-1269	clause	
9-14	1270-1273	and	
9-15	1274-1278	that	
9-16	1279-1284	index	
9-17	1285-1289	will	
9-18	1290-1292	be	
9-19	1293-1297	used	
9-20	1298-1301	for	
9-21	1302-1305	the	
9-22	1306-1311	query	
9-23	1311-1312	.	

#Text=If the index does not exist, it will give you an error, so it is a good idea to check if the index exists before the query is executed.It is not required that you have to use the name of the index in the SQL Query.
10-1	1313-1315	If	
10-2	1316-1319	the	
10-3	1320-1325	index	
10-4	1326-1330	does	
10-5	1331-1334	not	
10-6	1335-1340	exist	
10-7	1340-1341	,	
10-8	1342-1344	it	
10-9	1345-1349	will	
10-10	1350-1354	give	
10-11	1355-1358	you	
10-12	1359-1361	an	
10-13	1362-1367	error	
10-14	1367-1368	,	
10-15	1369-1371	so	
10-16	1372-1374	it	
10-17	1375-1377	is	
10-18	1378-1379	a	
10-19	1380-1384	good	
10-20	1385-1389	idea	
10-21	1390-1392	to	
10-22	1393-1398	check	
10-23	1399-1401	if	
10-24	1402-1405	the	
10-25	1406-1411	index	
10-26	1412-1418	exists	
10-27	1419-1425	before	
10-28	1426-1429	the	
10-29	1430-1435	query	
10-30	1436-1438	is	
10-31	1439-1450	executed.It	
10-32	1451-1453	is	
10-33	1454-1457	not	
10-34	1458-1466	required	
10-35	1467-1471	that	
10-36	1472-1475	you	
10-37	1476-1480	have	
10-38	1481-1483	to	
10-39	1484-1487	use	
10-40	1488-1491	the	
10-41	1492-1496	name	
10-42	1497-1499	of	
10-43	1500-1503	the	
10-44	1504-1509	index	
10-45	1510-1512	in	
10-46	1513-1516	the	
10-47	1517-1520	SQL	
10-48	1521-1526	Query	
10-49	1526-1527	.	

#Text=You can also use the number as well.SELECT *
#Text=FROM [WideWorldImporters].
11-1	1528-1531	You	
11-2	1532-1535	can	
11-3	1536-1540	also	
11-4	1541-1544	use	
11-5	1545-1548	the	
11-6	1549-1555	number	
11-7	1556-1558	as	
11-8	1559-1570	well.SELECT	
11-9	1571-1572	*	
11-10	1573-1577	FROM	
11-11	1578-1579	[	
11-12	1579-1597	WideWorldImporters	
11-13	1597-1598	]	
11-14	1598-1599	.	

#Text=[Sales].
12-1	1599-1600	[	
12-2	1600-1605	Sales	
12-3	1605-1606	]	
12-4	1606-1607	.	

#Text=[Invoices]
#Text=WITH(INDEX(0))
#Text=WHERE CustomerID = 191For example, the above query will use the clustered index (if exists) or a heap to retrieve data from the table.You can replace the index id zero with the other index number (greater than 1) which will represent the non-clustered index on the table.SELECT *
#Text=FROM [WideWorldImporters].
13-1	1607-1608	[	
13-2	1608-1616	Invoices	
13-3	1616-1617	]	
13-4	1618-1622	WITH	
13-5	1622-1623	(	
13-6	1623-1628	INDEX	
13-7	1628-1629	(	
13-8	1629-1630	0	
13-9	1630-1631	)	
13-10	1631-1632	)	
13-11	1633-1638	WHERE	
13-12	1639-1649	CustomerID	
13-13	1650-1651	=	
13-14	1652-1658	191For	
13-15	1659-1666	example	
13-16	1666-1667	,	
13-17	1668-1671	the	
13-18	1672-1677	above	
13-19	1678-1683	query	
13-20	1684-1688	will	
13-21	1689-1692	use	
13-22	1693-1696	the	
13-23	1697-1706	clustered	
13-24	1707-1712	index	
13-25	1713-1714	(	
13-26	1714-1716	if	
13-27	1717-1723	exists	
13-28	1723-1724	)	
13-29	1725-1727	or	
13-30	1728-1729	a	
13-31	1730-1734	heap	
13-32	1735-1737	to	
13-33	1738-1746	retrieve	
13-34	1747-1751	data	
13-35	1752-1756	from	
13-36	1757-1760	the	
13-37	1761-1770	table.You	
13-38	1771-1774	can	
13-39	1775-1782	replace	
13-40	1783-1786	the	
13-41	1787-1792	index	
13-42	1793-1795	id	
13-43	1796-1800	zero	
13-44	1801-1805	with	
13-45	1806-1809	the	
13-46	1810-1815	other	
13-47	1816-1821	index	
13-48	1822-1828	number	
13-49	1829-1830	(	
13-50	1830-1837	greater	
13-51	1838-1842	than	
13-52	1843-1844	1	
13-53	1844-1845	)	
13-54	1846-1851	which	
13-55	1852-1856	will	
13-56	1857-1866	represent	
13-57	1867-1870	the	
13-58	1871-1884	non-clustered	
13-59	1885-1890	index	
13-60	1891-1893	on	
13-61	1894-1897	the	
13-62	1898-1910	table.SELECT	
13-63	1911-1912	*	
13-64	1913-1917	FROM	
13-65	1918-1919	[	
13-66	1919-1937	WideWorldImporters	
13-67	1937-1938	]	
13-68	1938-1939	.	

#Text=[Sales].
14-1	1939-1940	[	
14-2	1940-1945	Sales	
14-3	1945-1946	]	
14-4	1946-1947	.	

#Text=[Invoices]
#Text=WITH(INDEX(2))
#Text=WHERE CustomerID = 191For example, the above query will use the first non clustered index and use it to retrieve the data.
15-1	1947-1948	[	
15-2	1948-1956	Invoices	
15-3	1956-1957	]	
15-4	1958-1962	WITH	
15-5	1962-1963	(	
15-6	1963-1968	INDEX	
15-7	1968-1969	(	
15-8	1969-1970	2	
15-9	1970-1971	)	
15-10	1971-1972	)	
15-11	1973-1978	WHERE	
15-12	1979-1989	CustomerID	
15-13	1990-1991	=	
15-14	1992-1998	191For	
15-15	1999-2006	example	
15-16	2006-2007	,	
15-17	2008-2011	the	
15-18	2012-2017	above	
15-19	2018-2023	query	
15-20	2024-2028	will	
15-21	2029-2032	use	
15-22	2033-2036	the	
15-23	2037-2042	first	
15-24	2043-2046	non	
15-25	2047-2056	clustered	
15-26	2057-2062	index	
15-27	2063-2066	and	
15-28	2067-2070	use	
15-29	2071-2073	it	
15-30	2074-2076	to	
15-31	2077-2085	retrieve	
15-32	2086-2089	the	
15-33	2090-2094	data	
15-34	2094-2095	.	

#Text=The id of the index you can check in the sys.index table.UPDATE: If a clustered index exists, INDEX(0) forces a clustered index scan and INDEX(1) forces a clustered index scan or seek.
16-1	2096-2099	The	
16-2	2100-2102	id	
16-3	2103-2105	of	
16-4	2106-2109	the	
16-5	2110-2115	index	
16-6	2116-2119	you	
16-7	2120-2123	can	
16-8	2124-2129	check	
16-9	2130-2132	in	
16-10	2133-2136	the	
16-11	2137-2146	sys.index	
16-12	2147-2159	table.UPDATE	
16-13	2159-2160	:	
16-14	2161-2163	If	
16-15	2164-2165	a	
16-16	2166-2175	clustered	
16-17	2176-2181	index	
16-18	2182-2188	exists	
16-19	2188-2189	,	
16-20	2190-2195	INDEX	
16-21	2195-2196	(	
16-22	2196-2197	0	
16-23	2197-2198	)	
16-24	2199-2205	forces	
16-25	2206-2207	a	
16-26	2208-2217	clustered	
16-27	2218-2223	index	
16-28	2224-2228	scan	
16-29	2229-2232	and	
16-30	2233-2238	INDEX	
16-31	2238-2239	(	
16-32	2239-2240	1	
16-33	2240-2241	)	
16-34	2242-2248	forces	
16-35	2249-2250	a	
16-36	2251-2260	clustered	
16-37	2261-2266	index	
16-38	2267-2271	scan	
16-39	2272-2274	or	
16-40	2275-2279	seek	
16-41	2279-2280	.	

#Text=If no clustered index exists, INDEX(0) forces a table scan and INDEX(1) is interpreted as an error.
17-1	2281-2283	If	
17-2	2284-2286	no	
17-3	2287-2296	clustered	
17-4	2297-2302	index	
17-5	2303-2309	exists	
17-6	2309-2310	,	
17-7	2311-2316	INDEX	
17-8	2316-2317	(	
17-9	2317-2318	0	
17-10	2318-2319	)	
17-11	2320-2326	forces	
17-12	2327-2328	a	
17-13	2329-2334	table	
17-14	2335-2339	scan	
17-15	2340-2343	and	
17-16	2344-2349	INDEX	
17-17	2349-2350	(	
17-18	2350-2351	1	
17-19	2351-2352	)	
17-20	2353-2355	is	
17-21	2356-2367	interpreted	
17-22	2368-2370	as	
17-23	2371-2373	an	
17-24	2374-2379	error	
17-25	2379-2380	.	

#Text=(Thanks to Carsten Saastamoinen-Jakobsen)Once again, I want to reiterate that the index hint is not a good way to get started with the coding.
18-1	2381-2382	(	
18-2	2382-2388	Thanks	
18-3	2389-2391	to	
18-4	2392-2399	Carsten	
18-5	2400-2421	Saastamoinen-Jakobsen	
18-6	2421-2422	)	
18-7	2422-2426	Once	
18-8	2427-2432	again	
18-9	2432-2433	,	
18-10	2434-2435	I	
18-11	2436-2440	want	
18-12	2441-2443	to	
18-13	2444-2453	reiterate	
18-14	2454-2458	that	
18-15	2459-2462	the	
18-16	2463-2468	index	
18-17	2469-2473	hint	
18-18	2474-2476	is	
18-19	2477-2480	not	
18-20	2481-2482	a	
18-21	2483-2487	good	
18-22	2488-2491	way	
18-23	2492-2494	to	
18-24	2495-2498	get	
18-25	2499-2506	started	
18-26	2507-2511	with	
18-27	2512-2515	the	
18-28	2516-2522	coding	
18-29	2522-2523	.	

#Text=You need to make sure that your query is re-written in such a way that it uses the most optimal index.Reference: Pinal Dave (https://blog.sqlauthority.com)
#Text=Clustered Index, Query Hint, SQL Index, SQL Scripts, SQL ServerPrevious PostCan a Database Have Multiple Files with Extension MDF?
19-1	2524-2527	You	
19-2	2528-2532	need	
19-3	2533-2535	to	
19-4	2536-2540	make	
19-5	2541-2545	sure	
19-6	2546-2550	that	
19-7	2551-2555	your	
19-8	2556-2561	query	
19-9	2562-2564	is	
19-10	2565-2575	re-written	
19-11	2576-2578	in	
19-12	2579-2583	such	
19-13	2584-2585	a	
19-14	2586-2589	way	
19-15	2590-2594	that	
19-16	2595-2597	it	
19-17	2598-2602	uses	
19-18	2603-2606	the	
19-19	2607-2611	most	
19-20	2612-2619	optimal	
19-21	2620-2635	index.Reference	
19-22	2635-2636	:	
19-23	2636-2637	 	
19-24	2637-2642	Pinal	
19-25	2643-2647	Dave	
19-26	2648-2649	(	
19-27	2649-2654	https	
19-28	2654-2655	:	
19-29	2655-2656	/	
19-30	2656-2657	/	
19-31	2657-2678	blog.sqlauthority.com	
19-32	2678-2679	)	
19-33	2680-2689	Clustered	
19-34	2690-2695	Index	
19-35	2695-2696	,	
19-36	2697-2702	Query	
19-37	2703-2707	Hint	
19-38	2707-2708	,	
19-39	2709-2712	SQL	
19-40	2713-2718	Index	
19-41	2718-2719	,	
19-42	2720-2723	SQL	
19-43	2724-2731	Scripts	
19-44	2731-2732	,	
19-45	2733-2736	SQL	
19-46	2737-2751	ServerPrevious	
19-47	2752-2759	PostCan	
19-48	2760-2761	a	
19-49	2762-2770	Database	
19-50	2771-2775	Have	
19-51	2776-2784	Multiple	
19-52	2785-2790	Files	
19-53	2791-2795	with	
19-54	2796-2805	Extension	
19-55	2806-2809	MDF	
19-56	2809-2810	?	

#Text=– Interview Question of the Week #279Next PostDoes BIT Datatype Equal to 1 or TRUE in SQL Server?
20-1	2811-2812	–	
20-2	2813-2822	Interview	
20-3	2823-2831	Question	
20-4	2832-2834	of	
20-5	2835-2838	the	
20-6	2839-2843	Week	
20-7	2844-2852	#279Next	
20-8	2853-2861	PostDoes	
20-9	2862-2865	BIT	
20-10	2866-2874	Datatype	
20-11	2875-2880	Equal	
20-12	2881-2883	to	
20-13	2884-2885	1	
20-14	2886-2888	or	
20-15	2889-2893	TRUE	
20-16	2894-2896	in	
20-17	2897-2900	SQL	
20-18	2901-2907	Server	
20-19	2907-2908	?	

#Text=– Interview Question of the Week #282Related PostsSQL SERVER – GROUP BY Columns with XMLPATH – Comma Delimit Multiple RowsOctober 3, 2014Interview Question of the Week #007 – How to Reindex Every Table of the Database?
21-1	2909-2910	–	
21-2	2911-2920	Interview	
21-3	2921-2929	Question	
21-4	2930-2932	of	
21-5	2933-2936	the	
21-6	2937-2941	Week	
21-7	2942-2953	#282Related	
21-8	2954-2962	PostsSQL	
21-9	2963-2969	SERVER	
21-10	2970-2971	–	
21-11	2972-2977	GROUP	
21-12	2978-2980	BY	
21-13	2981-2988	Columns	
21-14	2989-2993	with	
21-15	2994-3001	XMLPATH	
21-16	3002-3003	–	
21-17	3004-3009	Comma	
21-18	3010-3017	Delimit	
21-19	3018-3026	Multiple	
21-20	3027-3038	RowsOctober	
21-21	3039-3040	3	
21-22	3040-3041	,	
21-23	3042-3055	2014Interview	
21-24	3056-3064	Question	
21-25	3065-3067	of	
21-26	3068-3071	the	
21-27	3072-3076	Week	
21-28	3077-3081	#007	
21-29	3082-3083	–	
21-30	3084-3087	How	
21-31	3088-3090	to	
21-32	3091-3098	Reindex	
21-33	3099-3104	Every	
21-34	3105-3110	Table	
21-35	3111-3113	of	
21-36	3114-3117	the	
21-37	3118-3126	Database	
21-38	3126-3127	?	

#Text=February 15, 2015SQL SERVER – Get the List of Object Dependencies – sp_depends and information_schema.routinesFebruary 4, 2010 2 Comments.
22-1	3127-3135	February	
22-2	3136-3138	15	
22-3	3138-3139	,	
22-4	3140-3147	2015SQL	
22-5	3148-3154	SERVER	
22-6	3155-3156	–	
22-7	3157-3160	Get	
22-8	3161-3164	the	
22-9	3165-3169	List	
22-10	3170-3172	of	
22-11	3173-3179	Object	
22-12	3180-3192	Dependencies	
22-13	3193-3194	–	
22-14	3195-3205	sp_depends	
22-15	3206-3209	and	
22-16	3210-3245	information_schema.routinesFebruary	
22-17	3246-3247	4	
22-18	3247-3248	,	
22-19	3249-3253	2010	
22-20	3254-3255	2	
22-21	3256-3264	Comments	
22-22	3264-3265	.	

#Text=Leave new
#Text=Carsten Saastamoinen-Jakobsen June 21, 2020 12:20 pmSELECT * FROM [WideWorldImporters].
23-1	3266-3271	Leave	
23-2	3272-3275	new	
23-3	3276-3283	Carsten	
23-4	3284-3305	Saastamoinen-Jakobsen	
23-5	3306-3310	June	
23-6	3311-3313	21	
23-7	3313-3314	,	
23-8	3315-3319	2020	
23-9	3320-3322	12	
23-10	3322-3323	:	
23-11	3323-3325	20	
23-12	3326-3334	pmSELECT	
23-13	3335-3336	*	
23-14	3337-3341	FROM	
23-15	3342-3343	[	
23-16	3343-3361	WideWorldImporters	
23-17	3361-3362	]	
23-18	3362-3363	.	

#Text=[Sales].
24-1	3363-3364	[	
24-2	3364-3369	Sales	
24-3	3369-3370	]	
24-4	3370-3371	.	

#Text=[Invoices] WITH(INDEX(1)) WHERE CustomerID = 191For example, the above query will use the first non clustered index and use it to retrieve the data.It’s wrong!
25-1	3371-3372	[	
25-2	3372-3380	Invoices	
25-3	3380-3381	]	
25-4	3382-3386	WITH	
25-5	3386-3387	(	
25-6	3387-3392	INDEX	
25-7	3392-3393	(	
25-8	3393-3394	1	
25-9	3394-3395	)	
25-10	3395-3396	)	
25-11	3397-3402	WHERE	
25-12	3403-3413	CustomerID	
25-13	3414-3415	=	
25-14	3416-3422	191For	
25-15	3423-3430	example	
25-16	3430-3431	,	
25-17	3432-3435	the	
25-18	3436-3441	above	
25-19	3442-3447	query	
25-20	3448-3452	will	
25-21	3453-3456	use	
25-22	3457-3460	the	
25-23	3461-3466	first	
25-24	3467-3470	non	
25-25	3471-3480	clustered	
25-26	3481-3486	index	
25-27	3487-3490	and	
25-28	3491-3494	use	
25-29	3495-3497	it	
25-30	3498-3500	to	
25-31	3501-3509	retrieve	
25-32	3510-3513	the	
25-33	3514-3521	data.It	
25-34	3521-3522	’	
25-35	3522-3523	s	
25-36	3524-3529	wrong	
25-37	3529-3530	!	

#Text=The rules are:If a clustered index exists, INDEX(0) forces a clustered index scan and INDEX(1) forces a clustered index scan or seek.
26-1	3531-3534	The	
26-2	3535-3540	rules	
26-3	3541-3544	are	
26-4	3544-3545	:	
26-5	3545-3547	If	
26-6	3548-3549	a	
26-7	3550-3559	clustered	
26-8	3560-3565	index	
26-9	3566-3572	exists	
26-10	3572-3573	,	
26-11	3574-3579	INDEX	
26-12	3579-3580	(	
26-13	3580-3581	0	
26-14	3581-3582	)	
26-15	3583-3589	forces	
26-16	3590-3591	a	
26-17	3592-3601	clustered	
26-18	3602-3607	index	
26-19	3608-3612	scan	
26-20	3613-3616	and	
26-21	3617-3622	INDEX	
26-22	3622-3623	(	
26-23	3623-3624	1	
26-24	3624-3625	)	
26-25	3626-3632	forces	
26-26	3633-3634	a	
26-27	3635-3644	clustered	
26-28	3645-3650	index	
26-29	3651-3655	scan	
26-30	3656-3658	or	
26-31	3659-3663	seek	
26-32	3663-3664	.	

#Text=If no clustered index exists, INDEX(0) forces a table scan and INDEX(1) is interpreted as an error.
27-1	3665-3667	If	
27-2	3668-3670	no	
27-3	3671-3680	clustered	
27-4	3681-3686	index	
27-5	3687-3693	exists	
27-6	3693-3694	,	
27-7	3695-3700	INDEX	
27-8	3700-3701	(	
27-9	3701-3702	0	
27-10	3702-3703	)	
27-11	3704-3710	forces	
27-12	3711-3712	a	
27-13	3713-3718	table	
27-14	3719-3723	scan	
27-15	3724-3727	and	
27-16	3728-3733	INDEX	
27-17	3733-3734	(	
27-18	3734-3735	1	
27-19	3735-3736	)	
27-20	3737-3739	is	
27-21	3740-3751	interpreted	
27-22	3752-3754	as	
27-23	3755-3757	an	
27-24	3758-3763	error	
27-25	3763-3764	.	

#Text=Reply
#Text=Pinal Dave June 21, 2020 1:12 pmYou are correct.
28-1	3765-3770	Reply	
28-2	3771-3776	Pinal	
28-3	3777-3781	Dave	
28-4	3782-3786	June	
28-5	3787-3789	21	
28-6	3789-3790	,	
28-7	3791-3795	2020	
28-8	3796-3797	1	
28-9	3797-3798	:	
28-10	3798-3800	12	
28-11	3801-3806	pmYou	
28-12	3807-3810	are	
28-13	3811-3818	correct	
28-14	3818-3819	.	

#Text=I wanted to know use index(2) but ended up using index 1 in example.
29-1	3820-3821	I	
29-2	3822-3828	wanted	
29-3	3829-3831	to	
29-4	3832-3836	know	
29-5	3837-3840	use	
29-6	3841-3846	index	
29-7	3846-3847	(	
29-8	3847-3848	2	
29-9	3848-3849	)	
29-10	3850-3853	but	
29-11	3854-3859	ended	
29-12	3860-3862	up	
29-13	3863-3868	using	
29-14	3869-3874	index	
29-15	3875-3876	1	
29-16	3877-3879	in	
29-17	3880-3887	example	
29-18	3887-3888	.	

#Text=So now to make my blog correct, I will add your note there.Thanks Carsten.
30-1	3889-3891	So	
30-2	3892-3895	now	
30-3	3896-3898	to	
30-4	3899-3903	make	
30-5	3904-3906	my	
30-6	3907-3911	blog	
30-7	3912-3919	correct	
30-8	3919-3920	,	
30-9	3921-3922	I	
30-10	3923-3927	will	
30-11	3928-3931	add	
30-12	3932-3936	your	
30-13	3937-3941	note	
30-14	3942-3954	there.Thanks	
30-15	3955-3962	Carsten	
30-16	3962-3963	.	

#Text=Reply
#Text=Leave a Reply Cancel reply
#Text=Pinal Dave is an SQL Server Performance Tuning Expert and independent consultant with over 17 years of hands-on experience.
31-1	3964-3969	Reply	
31-2	3970-3975	Leave	
31-3	3976-3977	a	
31-4	3978-3983	Reply	
31-5	3984-3990	Cancel	
31-6	3991-3996	reply	
31-7	3997-4002	Pinal	
31-8	4003-4007	Dave	
31-9	4007-4008	 	
31-10	4008-4010	is	
31-11	4011-4013	an	
31-12	4014-4017	SQL	
31-13	4018-4024	Server	
31-14	4025-4036	Performance	
31-15	4037-4043	Tuning	
31-16	4044-4050	Expert	
31-17	4051-4054	and	
31-18	4055-4066	independent	
31-19	4067-4077	consultant	
31-20	4078-4082	with	
31-21	4083-4087	over	
31-22	4088-4090	17	
31-23	4091-4096	years	
31-24	4097-4099	of	
31-25	4100-4108	hands-on	
31-26	4109-4119	experience	
31-27	4119-4120	.	

#Text=He holds a Masters of Science degree and numerous database certifications.Pinal has authored 12 SQL Server database books and 37 Pluralsight courses.
32-1	4121-4123	He	
32-2	4124-4129	holds	
32-3	4130-4131	a	
32-4	4132-4139	Masters	
32-5	4140-4142	of	
32-6	4143-4150	Science	
32-7	4151-4157	degree	
32-8	4158-4161	and	
32-9	4162-4170	numerous	
32-10	4171-4179	database	
32-11	4180-4200	certifications.Pinal	
32-12	4201-4204	has	
32-13	4205-4213	authored	
32-14	4214-4216	12	
32-15	4217-4220	SQL	
32-16	4221-4227	Server	
32-17	4228-4236	database	
32-18	4237-4242	books	
32-19	4243-4246	and	
32-20	4247-4249	37	
32-21	4250-4261	Pluralsight	
32-22	4262-4269	courses	
32-23	4269-4270	.	

#Text=To freely share his knowledge and help others build their expertise, Pinal has also written more than 5,500 database tech articles on his blog at https://blog.sqlauthority.com.Pinal is an experienced and dedicated professional with a deep commitment to flawless customer service.
33-1	4271-4273	To	
33-2	4274-4280	freely	
33-3	4281-4286	share	
33-4	4287-4290	his	
33-5	4291-4300	knowledge	
33-6	4301-4304	and	
33-7	4305-4309	help	
33-8	4310-4316	others	
33-9	4317-4322	build	
33-10	4323-4328	their	
33-11	4329-4338	expertise	
33-12	4338-4339	,	
33-13	4340-4345	Pinal	
33-14	4346-4349	has	
33-15	4350-4354	also	
33-16	4355-4362	written	
33-17	4363-4367	more	
33-18	4368-4372	than	
33-19	4373-4378	5,500	
33-20	4379-4387	database	
33-21	4388-4392	tech	
33-22	4393-4401	articles	
33-23	4402-4404	on	
33-24	4405-4408	his	
33-25	4409-4413	blog	
33-26	4414-4416	at	
33-27	4417-4422	https	
33-28	4422-4423	:	
33-29	4423-4424	/	
33-30	4424-4425	/	
33-31	4425-4452	blog.sqlauthority.com.Pinal	
33-32	4453-4455	is	
33-33	4456-4458	an	
33-34	4459-4470	experienced	
33-35	4471-4474	and	
33-36	4475-4484	dedicated	
33-37	4485-4497	professional	
33-38	4498-4502	with	
33-39	4503-4504	a	
33-40	4505-4509	deep	
33-41	4510-4520	commitment	
33-42	4521-4523	to	
33-43	4524-4532	flawless	
33-44	4533-4541	customer	
33-45	4542-4549	service	
33-46	4549-4550	.	

#Text=If you need help with any SQL Server Performance Tuning Issues, please feel free to reach out at pinal@sqlauthority.com.Pinal is also a CrossFit Level 1 Trainer (CF-L1) and CrossFit Level 2 Trainer (CF-L2).Nupur Dave is a social media enthusiast and an independent consultant.
34-1	4551-4553	If	
34-2	4554-4557	you	
34-3	4558-4562	need	
34-4	4563-4567	help	
34-5	4568-4572	with	
34-6	4573-4576	any	
34-7	4577-4580	SQL	
34-8	4581-4587	Server	
34-9	4588-4599	Performance	
34-10	4600-4606	Tuning	
34-11	4607-4613	Issues	
34-12	4613-4614	,	
34-13	4615-4621	please	
34-14	4622-4626	feel	
34-15	4627-4631	free	
34-16	4632-4634	to	
34-17	4635-4640	reach	
34-18	4641-4644	out	
34-19	4645-4647	at	
34-20	4648-4653	pinal	
34-21	4653-4654	@	
34-22	4654-4676	sqlauthority.com.Pinal	
34-23	4677-4679	is	
34-24	4680-4684	also	
34-25	4685-4686	a	
34-26	4687-4695	CrossFit	
34-27	4696-4701	Level	
34-28	4702-4703	1	
34-29	4704-4711	Trainer	
34-30	4712-4713	(	
34-31	4713-4718	CF-L1	
34-32	4718-4719	)	
34-33	4720-4723	and	
34-34	4724-4732	CrossFit	
34-35	4733-4738	Level	
34-36	4739-4740	2	
34-37	4741-4748	Trainer	
34-38	4749-4750	(	
34-39	4750-4755	CF-L2	
34-40	4755-4756	)	
34-41	4756-4757	.	
34-42	4757-4762	Nupur	
34-43	4763-4767	Dave	
34-44	4768-4770	is	
34-45	4771-4772	a	
34-46	4773-4779	social	
34-47	4780-4785	media	
34-48	4786-4796	enthusiast	
34-49	4797-4800	and	
34-50	4801-4803	an	
34-51	4804-4815	independent	
34-52	4816-4826	consultant	
34-53	4826-4827	.	

#Text=She primarily focuses on the database domain, helping clients build short and long term multi-channel campaigns to drive leads for their sales pipeline.Exclusive NewsletterWebsite Is your SQL Server running slow and you want to speed it up without sharing server credentials?
35-1	4828-4831	She	
35-2	4832-4841	primarily	
35-3	4842-4849	focuses	
35-4	4850-4852	on	
35-5	4853-4856	the	
35-6	4857-4865	database	
35-7	4866-4872	domain	
35-8	4872-4873	,	
35-9	4874-4881	helping	
35-10	4882-4889	clients	
35-11	4890-4895	build	
35-12	4896-4901	short	
35-13	4902-4905	and	
35-14	4906-4910	long	
35-15	4911-4915	term	
35-16	4916-4929	multi-channel	
35-17	4930-4939	campaigns	
35-18	4940-4942	to	
35-19	4943-4948	drive	
35-20	4949-4954	leads	
35-21	4955-4958	for	
35-22	4959-4964	their	
35-23	4965-4970	sales	
35-24	4971-4989	pipeline.Exclusive	
35-25	4990-5007	NewsletterWebsite	
35-26	5008-5010	Is	
35-27	5011-5015	your	
35-28	5016-5019	SQL	
35-29	5020-5026	Server	
35-30	5027-5034	running	
35-31	5035-5039	slow	
35-32	5040-5043	and	
35-33	5044-5047	you	
35-34	5048-5052	want	
35-35	5053-5055	to	
35-36	5056-5061	speed	
35-37	5062-5064	it	
35-38	5065-5067	up	
35-39	5068-5075	without	
35-40	5076-5083	sharing	
35-41	5084-5090	server	
35-42	5091-5102	credentials	
35-43	5102-5103	?	

#Text=In my Comprehensive Database Performance Health Check, we can work together remotely and resolve your biggest performance troublemakers in less than 4 hours.Once you learn my business secrets, you will fix the majority of problems in the future.Have you ever opened any PowerPoint deck when you face SQL Server Performance Tuning emergencies?
36-1	5104-5106	In	
36-2	5107-5109	my	
36-3	5110-5123	Comprehensive	
36-4	5124-5132	Database	
36-5	5133-5144	Performance	
36-6	5145-5151	Health	
36-7	5152-5157	Check	
36-8	5157-5158	,	
36-9	5159-5161	we	
36-10	5162-5165	can	
36-11	5166-5170	work	
36-12	5171-5179	together	
36-13	5180-5188	remotely	
36-14	5189-5192	and	
36-15	5193-5200	resolve	
36-16	5201-5205	your	
36-17	5206-5213	biggest	
36-18	5214-5225	performance	
36-19	5226-5239	troublemakers	
36-20	5240-5242	in	
36-21	5243-5247	less	
36-22	5248-5252	than	
36-23	5253-5254	4	
36-24	5255-5265	hours.Once	
36-25	5266-5269	you	
36-26	5270-5275	learn	
36-27	5276-5278	my	
36-28	5279-5287	business	
36-29	5288-5295	secrets	
36-30	5295-5296	,	
36-31	5297-5300	you	
36-32	5301-5305	will	
36-33	5306-5309	fix	
36-34	5310-5313	the	
36-35	5314-5322	majority	
36-36	5323-5325	of	
36-37	5326-5334	problems	
36-38	5335-5337	in	
36-39	5338-5341	the	
36-40	5342-5353	future.Have	
36-41	5354-5357	you	
36-42	5358-5362	ever	
36-43	5363-5369	opened	
36-44	5370-5373	any	
36-45	5374-5384	PowerPoint	
36-46	5385-5389	deck	
36-47	5390-5394	when	
36-48	5395-5398	you	
36-49	5399-5403	face	
36-50	5404-5407	SQL	
36-51	5408-5414	Server	
36-52	5415-5426	Performance	
36-53	5427-5433	Tuning	
36-54	5434-5445	emergencies	
36-55	5445-5446	?	

#Text=SQL Server Performance Tuning Practical Workshop is my MOST popular training with no PowerPoint presentations and 100% practical demonstrations.Essentially I share my business secrets to optimize SQL Server performance.
37-1	5447-5450	SQL	
37-2	5451-5457	Server	
37-3	5458-5469	Performance	
37-4	5470-5476	Tuning	
37-5	5477-5486	Practical	
37-6	5487-5495	Workshop	
37-7	5496-5498	is	
37-8	5499-5501	my	
37-9	5502-5506	MOST	
37-10	5507-5514	popular	
37-11	5515-5523	training	
37-12	5524-5528	with	
37-13	5529-5531	no	
37-14	5532-5542	PowerPoint	
37-15	5543-5556	presentations	
37-16	5557-5560	and	
37-17	5561-5565	100%	
37-18	5566-5575	practical	
37-19	5576-5602	demonstrations.Essentially	
37-20	5603-5604	I	
37-21	5605-5610	share	
37-22	5611-5613	my	
37-23	5614-5622	business	
37-24	5623-5630	secrets	
37-25	5631-5633	to	
37-26	5634-5642	optimize	
37-27	5643-5646	SQL	
37-28	5647-5653	Server	
37-29	5654-5665	performance	
37-30	5665-5666	.	

#Text=SQL Interview Q & ATestimonialsSearchPrivacy Policy© 2006 – 2021 All rights reserved. pinal @ SQLAuthority.com
#Text=Menu
#Text=Go to mobile version
38-1	5667-5670	SQL	
38-2	5670-5671	 	
38-3	5671-5680	Interview	
38-4	5680-5681	 	
38-5	5681-5682	Q	
38-6	5682-5683	 	
38-7	5683-5684	&	
38-8	5684-5685	 	
38-9	5685-5711	ATestimonialsSearchPrivacy	
38-10	5712-5718	Policy	
38-11	5718-5719	©	
38-12	5720-5724	2006	
38-13	5725-5726	–	
38-14	5727-5731	2021	
38-15	5732-5735	All	
38-16	5736-5742	rights	
38-17	5743-5751	reserved	
38-18	5751-5752	.	
38-19	5753-5758	pinal	
38-20	5759-5760	@	
38-21	5761-5777	SQLAuthority.com	
38-22	5778-5782	Menu	
38-23	5783-5785	Go	
38-24	5786-5788	to	
38-25	5789-5795	mobile	
38-26	5796-5803	version	
