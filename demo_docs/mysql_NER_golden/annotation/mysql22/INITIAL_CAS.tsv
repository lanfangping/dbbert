#FORMAT=WebAnno TSV 3.3


#Text=MySQL InnoDB performance improvement: InnoDB buffer pool instances - Updated!
1-1	0-5	MySQL	
1-2	6-12	InnoDB	
1-3	13-24	performance	
1-4	25-36	improvement	
1-5	36-37	:	
1-6	38-44	InnoDB	
1-7	45-51	buffer	
1-8	52-56	pool	
1-9	57-66	instances	
1-10	67-68	-	
1-11	69-76	Updated	
1-12	76-77	!	

#Text=- Sysadmins of the North
#Text=Skip to content
#Text=Sysadmins of the NorthTechnical blog, where topics include: computer, server, web, sysadmin, MySQL, database, virtualization, optimization and security
#Text=Home
#Text=Welcome
#Text=Privacy Policy
#Text=Code base
#Text=PowerShellPowerShell code snippets, examples and info for Windows Server administrators.
2-1	78-79	-	
2-2	80-89	Sysadmins	
2-3	90-92	of	
2-4	93-96	the	
2-5	97-102	North	
2-6	103-107	Skip	
2-7	108-110	to	
2-8	111-118	content	
2-9	119-128	Sysadmins	
2-10	129-131	of	
2-11	132-135	the	
2-12	136-150	NorthTechnical	
2-13	151-155	blog	
2-14	155-156	,	
2-15	157-162	where	
2-16	163-169	topics	
2-17	170-177	include	
2-18	177-178	:	
2-19	179-187	computer	
2-20	187-188	,	
2-21	189-195	server	
2-22	195-196	,	
2-23	197-200	web	
2-24	200-201	,	
2-25	202-210	sysadmin	
2-26	210-211	,	
2-27	212-217	MySQL	
2-28	217-218	,	
2-29	219-227	database	
2-30	227-228	,	
2-31	229-243	virtualization	
2-32	243-244	,	
2-33	245-257	optimization	
2-34	258-261	and	
2-35	262-270	security	
2-36	271-275	Home	
2-37	276-283	Welcome	
2-38	284-291	Privacy	
2-39	292-298	Policy	
2-40	299-303	Code	
2-41	304-308	base	
2-42	309-329	PowerShellPowerShell	
2-43	330-334	code	
2-44	335-343	snippets	
2-45	343-344	,	
2-46	345-353	examples	
2-47	354-357	and	
2-48	358-362	info	
2-49	363-366	for	
2-50	367-374	Windows	
2-51	375-381	Server	
2-52	382-396	administrators	
2-53	396-397	.	

#Text=Maybe some AppCmd and DISM as well.
3-1	398-403	Maybe	
3-2	404-408	some	
3-3	409-415	AppCmd	
3-4	416-419	and	
3-5	420-424	DISM	
3-6	425-427	as	
3-7	428-432	well	
3-8	432-433	.	

#Text=GNU Linux
#Text=MySQLMySQL performance tuning and optimization: optimize MySQL server and database
#Text=Security
#Text=Windows Server
#Text=WordPress
#Text=Donate
#Text=Search for...
4-1	434-437	GNU	
4-2	438-443	Linux	
4-3	444-454	MySQLMySQL	
4-4	455-466	performance	
4-5	467-473	tuning	
4-6	474-477	and	
4-7	478-490	optimization	
4-8	490-491	:	
4-9	492-500	optimize	
4-10	501-506	MySQL	
4-11	507-513	server	
4-12	514-517	and	
4-13	518-526	database	
4-14	527-535	Security	
4-15	536-543	Windows	
4-16	544-550	Server	
4-17	551-560	WordPress	
4-18	561-567	Donate	
4-19	568-574	Search	
4-20	575-578	for	
4-21	578-579	.	
4-22	579-580	.	
4-23	580-581	.	

#Text=Sysadmins of the NorthTechnical blog, where topics include: computer, server, web, sysadmin, MySQL, database, virtualization, optimization and security
#Text=Toggle Navigation
#Text=Search for...
5-1	582-591	Sysadmins	
5-2	592-594	of	
5-3	595-598	the	
5-4	599-613	NorthTechnical	
5-5	614-618	blog	
5-6	618-619	,	
5-7	620-625	where	
5-8	626-632	topics	
5-9	633-640	include	
5-10	640-641	:	
5-11	642-650	computer	
5-12	650-651	,	
5-13	652-658	server	
5-14	658-659	,	
5-15	660-663	web	
5-16	663-664	,	
5-17	665-673	sysadmin	
5-18	673-674	,	
5-19	675-680	MySQL	
5-20	680-681	,	
5-21	682-690	database	
5-22	690-691	,	
5-23	692-706	virtualization	
5-24	706-707	,	
5-25	708-720	optimization	
5-26	721-724	and	
5-27	725-733	security	
5-28	734-740	Toggle	
5-29	741-751	Navigation	
5-30	752-758	Search	
5-31	759-762	for	
5-32	762-763	.	
5-33	763-764	.	
5-34	764-765	.	

#Text=Toggle Navigation
#Text=Home
#Text=Welcome
#Text=Privacy Policy
#Text=Code base
#Text=PowerShellPowerShell code snippets, examples and info for Windows Server administrators.
6-1	766-772	Toggle	
6-2	773-783	Navigation	
6-3	784-788	Home	
6-4	789-796	Welcome	
6-5	797-804	Privacy	
6-6	805-811	Policy	
6-7	812-816	Code	
6-8	817-821	base	
6-9	822-842	PowerShellPowerShell	
6-10	843-847	code	
6-11	848-856	snippets	
6-12	856-857	,	
6-13	858-866	examples	
6-14	867-870	and	
6-15	871-875	info	
6-16	876-879	for	
6-17	880-887	Windows	
6-18	888-894	Server	
6-19	895-909	administrators	
6-20	909-910	.	

#Text=Maybe some AppCmd and DISM as well.
7-1	911-916	Maybe	
7-2	917-921	some	
7-3	922-928	AppCmd	
7-4	929-932	and	
7-5	933-937	DISM	
7-6	938-940	as	
7-7	941-945	well	
7-8	945-946	.	

#Text=GNU Linux
#Text=MySQLMySQL performance tuning and optimization: optimize MySQL server and database
#Text=Security
#Text=Windows Server
#Text=WordPress
#Text=Donate
#Text=You are here:
#Text=Saotn.org » MySQL » MySQL InnoDB performance improvement: InnoDB buffer pool instances – Updated!
8-1	947-950	GNU	
8-2	951-956	Linux	
8-3	957-967	MySQLMySQL	
8-4	968-979	performance	
8-5	980-986	tuning	
8-6	987-990	and	
8-7	991-1003	optimization	
8-8	1003-1004	:	
8-9	1005-1013	optimize	
8-10	1014-1019	MySQL	
8-11	1020-1026	server	
8-12	1027-1030	and	
8-13	1031-1039	database	
8-14	1040-1048	Security	
8-15	1049-1056	Windows	
8-16	1057-1063	Server	
8-17	1064-1073	WordPress	
8-18	1074-1080	Donate	
8-19	1081-1084	You	
8-20	1085-1088	are	
8-21	1089-1093	here	
8-22	1093-1094	:	
8-23	1095-1104	Saotn.org	
8-24	1105-1106	»	
8-25	1107-1112	MySQL	
8-26	1113-1114	»	
8-27	1115-1120	MySQL	
8-28	1121-1127	InnoDB	
8-29	1128-1139	performance	
8-30	1140-1151	improvement	
8-31	1151-1152	:	
8-32	1153-1159	InnoDB	
8-33	1160-1166	buffer	
8-34	1167-1171	pool	
8-35	1172-1181	instances	
8-36	1182-1183	–	
8-37	1184-1191	Updated	
8-38	1191-1192	!	

#Text=MySQL InnoDB performance improvement: InnoDB buffer pool instances – Updated! 
9-1	1192-1197	MySQL	
9-2	1198-1204	InnoDB	
9-3	1205-1216	performance	
9-4	1217-1228	improvement	
9-5	1228-1229	:	
9-6	1230-1236	InnoDB	
9-7	1237-1243	buffer	
9-8	1244-1248	pool	
9-9	1249-1258	instances	
9-10	1259-1260	–	
9-11	1261-1268	Updated	
9-12	1268-1269	!	
9-13	1269-1270	 	

#Text=Jan ReilinkMySQL10 June 20163 June 2020
#Text=Are you running into MySQL load problems?
10-1	1270-1273	Jan	
10-2	1274-1288	ReilinkMySQL10	
10-3	1289-1293	June	
10-4	1294-1299	20163	
10-5	1300-1304	June	
10-6	1305-1309	2020	
10-7	1310-1313	Are	
10-8	1314-1317	you	
10-9	1318-1325	running	
10-10	1326-1330	into	
10-11	1331-1336	MySQL	
10-12	1337-1341	load	
10-13	1342-1350	problems	
10-14	1350-1351	?	

#Text=Learn how to tune MySQL servers for a heavy InnoDB workload, by configuring innodb_buffer_pool_instances.
11-1	1352-1357	Learn	
11-2	1358-1361	how	
11-3	1362-1364	to	
11-4	1365-1369	tune	
11-5	1370-1375	MySQL	
11-6	1376-1383	servers	
11-7	1384-1387	for	
11-8	1388-1389	a	
11-9	1390-1395	heavy	
11-10	1396-1402	InnoDB	
11-11	1403-1411	workload	
11-12	1411-1412	,	
11-13	1413-1415	by	
11-14	1416-1427	configuring	
11-15	1428-1456	innodb_buffer_pool_instances	
11-16	1456-1457	.	

#Text=Dividing the InnoDB buffer pool into multiple instances improves Disk I/O.
12-1	1458-1466	Dividing	
12-2	1467-1470	the	
12-3	1471-1477	InnoDB	
12-4	1478-1484	buffer	
12-5	1485-1489	pool	
12-6	1490-1494	into	
12-7	1495-1503	multiple	
12-8	1504-1513	instances	
12-9	1514-1522	improves	
12-10	1523-1527	Disk	
12-11	1528-1529	I	
12-12	1529-1530	/	
12-13	1530-1531	O	
12-14	1531-1532	.	

#Text=By doing so, you run your database and website more efficiently and faster.
13-1	1533-1535	By	
13-2	1536-1541	doing	
13-3	1542-1544	so	
13-4	1544-1545	,	
13-5	1546-1549	you	
13-6	1550-1553	run	
13-7	1554-1558	your	
13-8	1559-1567	database	
13-9	1568-1571	and	
13-10	1572-1579	website	
13-11	1580-1584	more	
13-12	1585-1596	efficiently	
13-13	1597-1600	and	
13-14	1601-1607	faster	
13-15	1607-1608	.	

#Text=Here is a little help for you.
14-1	1609-1613	Here	
14-2	1614-1616	is	
14-3	1617-1618	a	
14-4	1619-1625	little	
14-5	1626-1630	help	
14-6	1631-1634	for	
14-7	1635-1638	you	
14-8	1638-1639	.	

#Text=Tune MySQL InnoDB buffer pool instances & size for heavy workloads#
#Text=All for more InnoDB Disk I/O performance on MySQL 5.5+.
15-1	1640-1644	Tune	
15-2	1645-1650	MySQL	
15-3	1651-1657	InnoDB	
15-4	1658-1664	buffer	
15-5	1665-1669	pool	
15-6	1670-1679	instances	
15-7	1680-1681	&	
15-8	1682-1686	size	
15-9	1687-1690	for	
15-10	1691-1696	heavy	
15-11	1697-1706	workloads	
15-12	1706-1707	#	
15-13	1708-1711	All	
15-14	1712-1715	for	
15-15	1716-1720	more	
15-16	1721-1727	InnoDB	
15-17	1728-1732	Disk	
15-18	1733-1734	I	
15-19	1734-1735	/	
15-20	1735-1736	O	
15-21	1737-1748	performance	
15-22	1749-1751	on	
15-23	1752-1757	MySQL	
15-24	1758-1761	5.5	
15-25	1761-1762	+	
15-26	1762-1763	.	

#Text=Tuning MySQL servers is an ever ongoing process.
16-1	1764-1770	Tuning	
16-2	1770-1771	 	
16-3	1771-1776	MySQL	
16-4	1777-1784	servers	
16-5	1785-1787	is	
16-6	1788-1790	an	
16-7	1791-1795	ever	
16-8	1796-1803	ongoing	
16-9	1804-1811	process	
16-10	1811-1812	.	

#Text=Every new MySQL version brings new configuration settings you can use to improve its performance.
17-1	1813-1818	Every	
17-2	1819-1822	new	
17-3	1823-1828	MySQL	
17-4	1829-1836	version	
17-5	1837-1843	brings	
17-6	1844-1847	new	
17-7	1848-1861	configuration	
17-8	1862-1870	settings	
17-9	1871-1874	you	
17-10	1875-1878	can	
17-11	1879-1882	use	
17-12	1883-1885	to	
17-13	1886-1893	improve	
17-14	1894-1897	its	
17-15	1898-1909	performance	
17-16	1909-1910	.	

#Text=As a MySQL DBA you want your database server and databases to perform better than well, don’t you?
18-1	1911-1913	As	
18-2	1914-1915	a	
18-3	1916-1921	MySQL	
18-4	1922-1925	DBA	
18-5	1926-1929	you	
18-6	1930-1934	want	
18-7	1935-1939	your	
18-8	1940-1948	database	
18-9	1949-1955	server	
18-10	1956-1959	and	
18-11	1960-1969	databases	
18-12	1970-1972	to	
18-13	1973-1980	perform	
18-14	1981-1987	better	
18-15	1988-1992	than	
18-16	1993-1997	well	
18-17	1997-1998	,	
18-18	1999-2002	don	
18-19	2002-2003	’	
18-20	2003-2004	t	
18-21	2005-2008	you	
18-22	2008-2009	?	

#Text=MariaDB/MySQL 5.5.4 introduces new configuration settings for the InnoDB storage engine.
19-1	2010-2017	MariaDB	
19-2	2017-2018	/	
19-3	2018-2023	MySQL	
19-4	2024-2029	5.5.4	
19-5	2030-2040	introduces	
19-6	2041-2044	new	
19-7	2045-2058	configuration	
19-8	2059-2067	settings	
19-9	2068-2071	for	
19-10	2072-2075	the	
19-11	2076-2082	InnoDB	
19-12	2083-2090	storage	
19-13	2091-2097	engine	
19-14	2097-2098	.	

#Text=This can greatly improve MySQL’s InnoDB performance, both in read and write operations.
20-1	2099-2103	This	
20-2	2104-2107	can	
20-3	2108-2115	greatly	
20-4	2116-2123	improve	
20-5	2124-2129	MySQL	
20-6	2129-2130	’	
20-7	2130-2131	s	
20-8	2132-2138	InnoDB	
20-9	2139-2150	performance	
20-10	2150-2151	,	
20-11	2152-2156	both	
20-12	2157-2159	in	
20-13	2160-2164	read	
20-14	2165-2168	and	
20-15	2169-2174	write	
20-16	2175-2185	operations	
20-17	2185-2186	.	

#Text=One of those settings is innodb_buffer_pool_instances.
21-1	2187-2190	One	
21-2	2191-2193	of	
21-3	2194-2199	those	
21-4	2200-2208	settings	
21-5	2209-2211	is	
21-6	2212-2240	innodb_buffer_pool_instances	
21-7	2240-2241	.	

#Text=The innodb_buffer_pool_instances divides the InnoDB buffer pool into separate instances.
22-1	2242-2245	The	
22-2	2246-2274	innodb_buffer_pool_instances	
22-3	2275-2282	divides	
22-4	2283-2286	the	
22-5	2287-2293	InnoDB	
22-6	2294-2300	buffer	
22-7	2301-2305	pool	
22-8	2306-2310	into	
22-9	2311-2319	separate	
22-10	2320-2329	instances	
22-11	2329-2330	.	

#Text=Dividing your buffer pool into separate instances can improve concurrency, by reducing contention as different threads read and write to cached pages.
23-1	2331-2339	Dividing	
23-2	2340-2344	your	
23-3	2345-2351	buffer	
23-4	2352-2356	pool	
23-5	2357-2361	into	
23-6	2362-2370	separate	
23-7	2371-2380	instances	
23-8	2381-2384	can	
23-9	2385-2392	improve	
23-10	2393-2404	concurrency	
23-11	2404-2405	,	
23-12	2406-2408	by	
23-13	2409-2417	reducing	
23-14	2418-2428	contention	
23-15	2429-2431	as	
23-16	2432-2441	different	
23-17	2442-2449	threads	
23-18	2450-2454	read	
23-19	2455-2458	and	
23-20	2459-2464	write	
23-21	2465-2467	to	
23-22	2468-2474	cached	
23-23	2475-2480	pages	
23-24	2480-2481	.	

#Text=Multiple buffer pool instances are configured using the innodb_buffer_pool_instances configuration option.
24-1	2482-2490	Multiple	
24-2	2491-2497	buffer	
24-3	2498-2502	pool	
24-4	2503-2512	instances	
24-5	2513-2516	are	
24-6	2517-2527	configured	
24-7	2528-2533	using	
24-8	2534-2537	the	
24-9	2538-2566	innodb_buffer_pool_instances	
24-10	2567-2580	configuration	
24-11	2581-2587	option	
24-12	2587-2588	.	

#Text=You might also want to adjust the innodb_buffer_pool_size value:
#Text=The larger the InnoDB buffer pool, the more InnoDB acts like an in-memory database.
25-1	2589-2592	You	
25-2	2593-2598	might	
25-3	2599-2603	also	
25-4	2604-2608	want	
25-5	2609-2611	to	
25-6	2612-2618	adjust	
25-7	2619-2622	the	
25-8	2623-2646	innodb_buffer_pool_size	
25-9	2647-2652	value	
25-10	2652-2653	:	
25-11	2654-2657	The	
25-12	2658-2664	larger	
25-13	2665-2668	the	
25-14	2669-2675	InnoDB	
25-15	2676-2682	buffer	
25-16	2683-2687	pool	
25-17	2687-2688	,	
25-18	2689-2692	the	
25-19	2693-2697	more	
25-20	2698-2704	InnoDB	
25-21	2705-2709	acts	
25-22	2710-2714	like	
25-23	2715-2717	an	
25-24	2718-2727	in-memory	
25-25	2728-2736	database	
25-26	2736-2737	.	

#Text=It reads data from disk once and then accesses the data from memory during subsequent reads.
26-1	2738-2740	It	
26-2	2741-2746	reads	
26-3	2747-2751	data	
26-4	2752-2756	from	
26-5	2757-2761	disk	
26-6	2762-2766	once	
26-7	2767-2770	and	
26-8	2771-2775	then	
26-9	2776-2784	accesses	
26-10	2785-2788	the	
26-11	2789-2793	data	
26-12	2794-2798	from	
26-13	2799-2805	memory	
26-14	2806-2812	during	
26-15	2813-2823	subsequent	
26-16	2824-2829	reads	
26-17	2829-2830	.	

#Text=Buffer pool size is configured using the innodb_buffer_pool_size configuration option.
27-1	2831-2837	Buffer	
27-2	2838-2842	pool	
27-3	2843-2847	size	
27-4	2848-2850	is	
27-5	2851-2861	configured	
27-6	2862-2867	using	
27-7	2868-2871	the	
27-8	2872-2895	innodb_buffer_pool_size	
27-9	2896-2909	configuration	
27-10	2910-2916	option	
27-11	2916-2917	.	

#Text=Back to increasing innodb_buffer_pool_instances:
#Text=The innodb_buffer_pool_instances divides the InnoDB buffer pool in a number of regions.
28-1	2918-2922	Back	
28-2	2923-2925	to	
28-3	2926-2936	increasing	
28-4	2937-2965	innodb_buffer_pool_instances	
28-5	2965-2966	:	
28-6	2967-2970	The	
28-7	2971-2999	innodb_buffer_pool_instances	
28-8	3000-3007	divides	
28-9	3008-3011	the	
28-10	3012-3018	InnoDB	
28-11	3019-3025	buffer	
28-12	3026-3030	pool	
28-13	3031-3033	in	
28-14	3034-3035	a	
28-15	3036-3042	number	
28-16	3043-3045	of	
28-17	3046-3053	regions	
28-18	3053-3054	.	

#Text=The number of regions that the InnoDB buffer pool is divided into.
29-1	3055-3058	The	
29-2	3059-3065	number	
29-3	3066-3068	of	
29-4	3069-3076	regions	
29-5	3077-3081	that	
29-6	3082-3085	the	
29-7	3086-3092	InnoDB	
29-8	3093-3099	buffer	
29-9	3100-3104	pool	
29-10	3105-3107	is	
29-11	3108-3115	divided	
29-12	3116-3120	into	
29-13	3120-3121	.	

#Text=For systems with buffer pools in the multi-gigabyte range, dividing the buffer pool into separate instances can improve concurrency, by reducing contention as different threads read and write to cached pages.
30-1	3122-3125	For	
30-2	3126-3133	systems	
30-3	3134-3138	with	
30-4	3139-3145	buffer	
30-5	3146-3151	pools	
30-6	3152-3154	in	
30-7	3155-3158	the	
30-8	3159-3173	multi-gigabyte	
30-9	3174-3179	range	
30-10	3179-3180	,	
30-11	3181-3189	dividing	
30-12	3190-3193	the	
30-13	3194-3200	buffer	
30-14	3201-3205	pool	
30-15	3206-3210	into	
30-16	3211-3219	separate	
30-17	3220-3229	instances	
30-18	3230-3233	can	
30-19	3234-3241	improve	
30-20	3242-3253	concurrency	
30-21	3253-3254	,	
30-22	3255-3257	by	
30-23	3258-3266	reducing	
30-24	3267-3277	contention	
30-25	3278-3280	as	
30-26	3281-3290	different	
30-27	3291-3298	threads	
30-28	3299-3303	read	
30-29	3304-3307	and	
30-30	3308-3313	write	
30-31	3314-3316	to	
30-32	3317-3323	cached	
30-33	3324-3329	pages	
30-34	3329-3330	.	

#Text=Each page that is stored in or read from the buffer pool is assigned to one of the buffer pool instances randomly, using a hashing function.
31-1	3331-3335	Each	
31-2	3336-3340	page	
31-3	3341-3345	that	
31-4	3346-3348	is	
31-5	3349-3355	stored	
31-6	3356-3358	in	
31-7	3359-3361	or	
31-8	3362-3366	read	
31-9	3367-3371	from	
31-10	3372-3375	the	
31-11	3376-3382	buffer	
31-12	3383-3387	pool	
31-13	3388-3390	is	
31-14	3391-3399	assigned	
31-15	3400-3402	to	
31-16	3403-3406	one	
31-17	3407-3409	of	
31-18	3410-3413	the	
31-19	3414-3420	buffer	
31-20	3421-3425	pool	
31-21	3426-3435	instances	
31-22	3436-3444	randomly	
31-23	3444-3445	,	
31-24	3446-3451	using	
31-25	3452-3453	a	
31-26	3454-3461	hashing	
31-27	3462-3470	function	
31-28	3470-3471	.	

#Text=Each buffer pool manages its own free lists, flush lists, LRUs, and all other data structures connected to a buffer pool, and is protected by its own buffer pool mutex.This option takes effect only when you set the innodb_buffer_pool_size to a size of 1 gigabyte or more.
32-1	3472-3476	Each	
32-2	3477-3483	buffer	
32-3	3484-3488	pool	
32-4	3489-3496	manages	
32-5	3497-3500	its	
32-6	3501-3504	own	
32-7	3505-3509	free	
32-8	3510-3515	lists	
32-9	3515-3516	,	
32-10	3517-3522	flush	
32-11	3523-3528	lists	
32-12	3528-3529	,	
32-13	3530-3534	LRUs	
32-14	3534-3535	,	
32-15	3536-3539	and	
32-16	3540-3543	all	
32-17	3544-3549	other	
32-18	3550-3554	data	
32-19	3555-3565	structures	
32-20	3566-3575	connected	
32-21	3576-3578	to	
32-22	3579-3580	a	
32-23	3581-3587	buffer	
32-24	3588-3592	pool	
32-25	3592-3593	,	
32-26	3594-3597	and	
32-27	3598-3600	is	
32-28	3601-3610	protected	
32-29	3611-3613	by	
32-30	3614-3617	its	
32-31	3618-3621	own	
32-32	3622-3628	buffer	
32-33	3629-3633	pool	
32-34	3634-3644	mutex.This	
32-35	3645-3651	option	
32-36	3652-3657	takes	
32-37	3658-3664	effect	
32-38	3665-3669	only	
32-39	3670-3674	when	
32-40	3675-3678	you	
32-41	3679-3682	set	
32-42	3683-3686	the	
32-43	3687-3710	innodb_buffer_pool_size	
32-44	3711-3713	to	
32-45	3714-3715	a	
32-46	3716-3720	size	
32-47	3721-3723	of	
32-48	3724-3725	1	
32-49	3726-3734	gigabyte	
32-50	3735-3737	or	
32-51	3738-3742	more	
32-52	3742-3743	.	

#Text=The total size you specify is divided among all the buffer pools.
33-1	3744-3747	The	
33-2	3748-3753	total	
33-3	3754-3758	size	
33-4	3759-3762	you	
33-5	3763-3770	specify	
33-6	3771-3773	is	
33-7	3774-3781	divided	
33-8	3782-3787	among	
33-9	3788-3791	all	
33-10	3792-3795	the	
33-11	3796-3802	buffer	
33-12	3803-3808	pools	
33-13	3808-3809	.	

#Text=For best efficiency, specify a combination of innodb_buffer_pool_instances and innodb_buffer_pool_size so that each buffer pool instance is at least 1 gigabyte.
34-1	3810-3813	For	
34-2	3814-3818	best	
34-3	3819-3829	efficiency	
34-4	3829-3830	,	
34-5	3831-3838	specify	
34-6	3839-3840	a	
34-7	3841-3852	combination	
34-8	3853-3855	of	
34-9	3856-3884	innodb_buffer_pool_instances	
34-10	3885-3888	and	
34-11	3889-3912	innodb_buffer_pool_size	
34-12	3913-3915	so	
34-13	3916-3920	that	
34-14	3921-3925	each	
34-15	3926-3932	buffer	
34-16	3933-3937	pool	
34-17	3938-3946	instance	
34-18	3947-3949	is	
34-19	3950-3952	at	
34-20	3953-3958	least	
34-21	3959-3960	1	
34-22	3961-3969	gigabyte	
34-23	3969-3970	.	

#Text=In MySQL versions prior to 5.5.4 this was not configurable and thus set to just one instance.
35-1	3971-3973	In	
35-2	3974-3979	MySQL	
35-3	3980-3988	versions	
35-4	3989-3994	prior	
35-5	3995-3997	to	
35-6	3998-4003	5.5.4	
35-7	4004-4008	this	
35-8	4009-4012	was	
35-9	4013-4016	not	
35-10	4017-4029	configurable	
35-11	4030-4033	and	
35-12	4034-4038	thus	
35-13	4039-4042	set	
35-14	4043-4045	to	
35-15	4046-4050	just	
35-16	4051-4054	one	
35-17	4055-4063	instance	
35-18	4063-4064	.	

#Text=Now
#Text=you can increase innodb_buffer_pool_size, and you can divide the InnoDB buffer pool into multiple regions by setting innodb_buffer_pool_instances to 2, 3, 4 or 8.
36-1	4065-4068	Now	
36-2	4069-4072	you	
36-3	4073-4076	can	
36-4	4077-4085	increase	
36-5	4086-4109	innodb_buffer_pool_size	
36-6	4109-4110	,	
36-7	4111-4114	and	
36-8	4115-4118	you	
36-9	4119-4122	can	
36-10	4123-4129	divide	
36-11	4130-4133	the	
36-12	4134-4140	InnoDB	
36-13	4141-4147	buffer	
36-14	4148-4152	pool	
36-15	4153-4157	into	
36-16	4158-4166	multiple	
36-17	4167-4174	regions	
36-18	4175-4177	by	
36-19	4178-4185	setting	
36-20	4186-4214	innodb_buffer_pool_instances	
36-21	4215-4217	to	
36-22	4218-4219	2	
36-23	4219-4220	,	
36-24	4221-4222	3	
36-25	4222-4223	,	
36-26	4224-4225	4	
36-27	4226-4228	or	
36-28	4229-4230	8	
36-29	4230-4231	.	

#Text=As long as innodb_buffer_pool_size is set high enough, and you have enough memory available in your MySQL database server.
37-1	4232-4234	As	
37-2	4235-4239	long	
37-3	4240-4242	as	
37-4	4243-4266	innodb_buffer_pool_size	
37-5	4267-4269	is	
37-6	4270-4273	set	
37-7	4274-4278	high	
37-8	4279-4285	enough	
37-9	4285-4286	,	
37-10	4287-4290	and	
37-11	4291-4294	you	
37-12	4295-4299	have	
37-13	4300-4306	enough	
37-14	4307-4313	memory	
37-15	4314-4323	available	
37-16	4324-4326	in	
37-17	4327-4331	your	
37-18	4332-4337	MySQL	
37-19	4338-4346	database	
37-20	4347-4353	server	
37-21	4353-4354	.	

#Text=This increases
#Text=InnoDB read/write threads.
38-1	4355-4359	This	
38-2	4360-4369	increases	
38-3	4370-4376	InnoDB	
38-4	4377-4381	read	
38-5	4381-4382	/	
38-6	4382-4387	write	
38-7	4388-4395	threads	
38-8	4395-4396	.	

#Text=To enable multiple buffer pool instances, set the innodb_buffer_pool_instances configuration option to a value greater than 1 (the default) up to 64 (the maximum).
39-1	4397-4399	To	
39-2	4400-4406	enable	
39-3	4407-4415	multiple	
39-4	4416-4422	buffer	
39-5	4423-4427	pool	
39-6	4428-4437	instances	
39-7	4437-4438	,	
39-8	4439-4442	set	
39-9	4443-4446	the	
39-10	4447-4475	innodb_buffer_pool_instances	
39-11	4476-4489	configuration	
39-12	4490-4496	option	
39-13	4497-4499	to	
39-14	4500-4501	a	
39-15	4502-4507	value	
39-16	4508-4515	greater	
39-17	4516-4520	than	
39-18	4521-4522	1	
39-19	4523-4524	(	
39-20	4524-4527	the	
39-21	4528-4535	default	
39-22	4535-4536	)	
39-23	4537-4539	up	
39-24	4540-4542	to	
39-25	4543-4545	64	
39-26	4546-4547	(	
39-27	4547-4550	the	
39-28	4551-4558	maximum	
39-29	4558-4559	)	
39-30	4559-4560	.	

#Text=For example, you can set innodb_buffer_pool_size to 6 GB and innodb_buffer_pool_instances to 4 in your my.cnf MySQL configuration file:
#Text=; InnoDB buffer pool size in bytes.
40-1	4561-4564	For	
40-2	4565-4572	example	
40-3	4572-4573	,	
40-4	4574-4577	you	
40-5	4578-4581	can	
40-6	4582-4585	set	
40-7	4586-4609	innodb_buffer_pool_size	
40-8	4610-4612	to	
40-9	4613-4614	6	
40-10	4615-4617	GB	
40-11	4618-4621	and	
40-12	4622-4650	innodb_buffer_pool_instances	
40-13	4651-4653	to	
40-14	4654-4655	4	
40-15	4656-4658	in	
40-16	4659-4663	your	
40-17	4664-4670	my.cnf	
40-18	4671-4676	MySQL	
40-19	4677-4690	configuration	
40-20	4691-4695	file	
40-21	4695-4696	:	
40-22	4697-4698	;	
40-23	4699-4705	InnoDB	
40-24	4706-4712	buffer	
40-25	4713-4717	pool	
40-26	4718-4722	size	
40-27	4723-4725	in	
40-28	4726-4731	bytes	
40-29	4731-4732	.	

#Text=The primary value to adjust on a database server,
#Text=; can be set up to 80% of the total memory in these environments
#Text=innodb_buffer_pool_size = 6000M
#Text=If innodb_buffer_pool_size is set to more than 1GB, innodb_buffer_pool_instances
#Text=; divides the InnoDB buffer pool into this many instances.
#Text=innodb_buffer_pool_instances = 4Code language: TOML, also INI (ini)
#Text=In this example, I’ve used an innodb_buffer_pool_size of 6000M (6 GB), so there is 1500M available per innodb_buffer_pool_instance, which is more than the minimum 1 GB.
41-1	4733-4736	The	
41-2	4737-4744	primary	
41-3	4745-4750	value	
41-4	4751-4753	to	
41-5	4754-4760	adjust	
41-6	4761-4763	on	
41-7	4764-4765	a	
41-8	4766-4774	database	
41-9	4775-4781	server	
41-10	4781-4782	,	
41-11	4783-4784	;	
41-12	4785-4788	can	
41-13	4789-4791	be	
41-14	4792-4795	set	
41-15	4796-4798	up	
41-16	4799-4801	to	
41-17	4802-4805	80%	
41-18	4806-4808	of	
41-19	4809-4812	the	
41-20	4813-4818	total	
41-21	4819-4825	memory	
41-22	4826-4828	in	
41-23	4829-4834	these	
41-24	4835-4847	environments	
41-25	4848-4871	innodb_buffer_pool_size	
41-26	4872-4873	=	
41-27	4874-4879	6000M	
41-28	4880-4882	If	
41-29	4883-4906	innodb_buffer_pool_size	
41-30	4907-4909	is	
41-31	4910-4913	set	
41-32	4914-4916	to	
41-33	4917-4921	more	
41-34	4922-4926	than	
41-35	4927-4930	1GB	
41-36	4930-4931	,	
41-37	4932-4960	innodb_buffer_pool_instances	
41-38	4961-4962	;	
41-39	4963-4970	divides	
41-40	4971-4974	the	
41-41	4975-4981	InnoDB	
41-42	4982-4988	buffer	
41-43	4989-4993	pool	
41-44	4994-4998	into	
41-45	4999-5003	this	
41-46	5004-5008	many	
41-47	5009-5018	instances	
41-48	5018-5019	.	
41-49	5020-5048	innodb_buffer_pool_instances	
41-50	5049-5050	=	
41-51	5051-5056	4Code	
41-52	5057-5065	language	
41-53	5065-5066	:	
41-54	5067-5071	TOML	
41-55	5071-5072	,	
41-56	5073-5077	also	
41-57	5078-5081	INI	
41-58	5082-5083	(	
41-59	5083-5086	ini	
41-60	5086-5087	)	
41-61	5088-5090	In	
41-62	5091-5095	this	
41-63	5096-5103	example	
41-64	5103-5104	,	
41-65	5105-5106	I	
41-66	5106-5107	’	
41-67	5107-5109	ve	
41-68	5110-5114	used	
41-69	5115-5117	an	
41-70	5118-5141	innodb_buffer_pool_size	
41-71	5142-5144	of	
41-72	5145-5150	6000M	
41-73	5151-5152	(	
41-74	5152-5153	6	
41-75	5154-5156	GB	
41-76	5156-5157	)	
41-77	5157-5158	,	
41-78	5159-5161	so	
41-79	5162-5167	there	
41-80	5168-5170	is	
41-81	5171-5176	1500M	
41-82	5177-5186	available	
41-83	5187-5190	per	
41-84	5191-5218	innodb_buffer_pool_instance	
41-85	5218-5219	,	
41-86	5220-5225	which	
41-87	5226-5228	is	
41-88	5229-5233	more	
41-89	5234-5238	than	
41-90	5239-5242	the	
41-91	5243-5250	minimum	
41-92	5251-5252	1	
41-93	5253-5255	GB	
41-94	5255-5256	.	

#Text=As a rule of thumb, set your innodb_buffer_pool_size to approximately 70 – 80% of the RAM available.
42-1	5257-5259	As	
42-2	5260-5261	a	
42-3	5262-5266	rule	
42-4	5267-5269	of	
42-5	5270-5275	thumb	
42-6	5275-5276	,	
42-7	5277-5280	set	
42-8	5281-5285	your	
42-9	5286-5309	innodb_buffer_pool_size	
42-10	5310-5312	to	
42-11	5313-5326	approximately	
42-12	5327-5329	70	
42-13	5330-5331	–	
42-14	5332-5335	80%	
42-15	5336-5338	of	
42-16	5339-5342	the	
42-17	5343-5346	RAM	
42-18	5347-5356	available	
42-19	5356-5357	.	

#Text=Innodb_buffer_pool_instances defaults#
#Text=Various MySQL versions have different innodb_buffer_pool_instances default values, here is an overview – listing – for you:
#Text=MySQL version# InnoDB buffer pool instancesNotesMySQL 5.5 (<= 5.5.4)1not configurableMySQL 5.51–MySQL 5.6 (<= 5.6.5)1–MySQL 5.6 (>= 5.6.6)8or 1 if innodb_buffer_pool_size < 1GBMySQL 5.78or 1 if innodb_buffer_pool_size < 1GBMariaDB 10 (<= MariaDB 10.0.3)1–MariaDB 10 (>= MariaDB 10.0.4)8–InnoDB read and write I/O threads in MySQL#
#Text=Besides innodb_buffer_pool_instances, you can also increase the number of InnoDB read I/O threads and write I/O threads.
43-1	5358-5386	Innodb_buffer_pool_instances	
43-2	5387-5395	defaults	
43-3	5395-5396	#	
43-4	5397-5404	Various	
43-5	5405-5410	MySQL	
43-6	5411-5419	versions	
43-7	5420-5424	have	
43-8	5425-5434	different	
43-9	5435-5463	innodb_buffer_pool_instances	
43-10	5464-5471	default	
43-11	5472-5478	values	
43-12	5478-5479	,	
43-13	5480-5484	here	
43-14	5485-5487	is	
43-15	5488-5490	an	
43-16	5491-5499	overview	
43-17	5500-5501	–	
43-18	5502-5509	listing	
43-19	5510-5511	–	
43-20	5512-5515	for	
43-21	5516-5519	you	
43-22	5519-5520	:	
43-23	5521-5526	MySQL	
43-24	5527-5534	version	
43-25	5534-5535	#	
43-26	5536-5542	InnoDB	
43-27	5543-5549	buffer	
43-28	5550-5554	pool	
43-29	5555-5574	instancesNotesMySQL	
43-30	5575-5578	5.5	
43-31	5579-5580	(	
43-32	5580-5581	<	
43-33	5581-5582	=	
43-34	5583-5588	5.5.4	
43-35	5588-5589	)	
43-36	5589-5593	1not	
43-37	5594-5611	configurableMySQL	
43-38	5612-5616	5.51	
43-39	5616-5617	–	
43-40	5617-5622	MySQL	
43-41	5623-5626	5.6	
43-42	5627-5628	(	
43-43	5628-5629	<	
43-44	5629-5630	=	
43-45	5631-5636	5.6.5	
43-46	5636-5637	)	
43-47	5637-5638	1	
43-48	5638-5639	–	
43-49	5639-5644	MySQL	
43-50	5645-5648	5.6	
43-51	5649-5650	(	
43-52	5650-5651	>	
43-53	5651-5652	=	
43-54	5653-5658	5.6.6	
43-55	5658-5659	)	
43-56	5659-5662	8or	
43-57	5663-5664	1	
43-58	5665-5667	if	
43-59	5668-5691	innodb_buffer_pool_size	
43-60	5692-5693	<	
43-61	5694-5702	1GBMySQL	
43-62	5703-5709	5.78or	
43-63	5710-5711	1	
43-64	5712-5714	if	
43-65	5715-5738	innodb_buffer_pool_size	
43-66	5739-5740	<	
43-67	5741-5751	1GBMariaDB	
43-68	5752-5754	10	
43-69	5755-5756	(	
43-70	5756-5757	<	
43-71	5757-5758	=	
43-72	5759-5766	MariaDB	
43-73	5767-5773	10.0.3	
43-74	5773-5774	)	
43-75	5774-5775	1	
43-76	5775-5776	–	
43-77	5776-5783	MariaDB	
43-78	5784-5786	10	
43-79	5787-5788	(	
43-80	5788-5789	>	
43-81	5789-5790	=	
43-82	5791-5798	MariaDB	
43-83	5799-5805	10.0.4	
43-84	5805-5806	)	
43-85	5806-5807	8	
43-86	5807-5808	–	
43-87	5808-5814	InnoDB	
43-88	5815-5819	read	
43-89	5820-5823	and	
43-90	5824-5829	write	
43-91	5830-5831	I	
43-92	5831-5832	/	
43-93	5832-5833	O	
43-94	5834-5841	threads	
43-95	5842-5844	in	
43-96	5845-5850	MySQL	
43-97	5850-5851	#	
43-98	5852-5859	Besides	
43-99	5860-5888	innodb_buffer_pool_instances	
43-100	5888-5889	,	
43-101	5890-5893	you	
43-102	5894-5897	can	
43-103	5898-5902	also	
43-104	5903-5911	increase	
43-105	5912-5915	the	
43-106	5916-5922	number	
43-107	5923-5925	of	
43-108	5926-5932	InnoDB	
43-109	5933-5937	read	
43-110	5938-5939	I	
43-111	5939-5940	/	
43-112	5940-5941	O	
43-113	5942-5949	threads	
43-114	5950-5953	and	
43-115	5954-5959	write	
43-116	5960-5961	I	
43-117	5961-5962	/	
43-118	5962-5963	O	
43-119	5964-5971	threads	
43-120	5971-5972	.	

#Text=These are configured with innodb_write_io_threads and innodb_read_io_threads.
44-1	5973-5978	These	
44-2	5979-5982	are	
44-3	5983-5993	configured	
44-4	5994-5998	with	
44-5	5999-6022	innodb_write_io_threads	
44-6	6023-6026	and	
44-7	6027-6049	innodb_read_io_threads	
44-8	6049-6050	.	

#Text=Both settings default to 4 threads.
45-1	6051-6055	Both	
45-2	6056-6064	settings	
45-3	6065-6072	default	
45-4	6073-6075	to	
45-5	6076-6077	4	
45-6	6078-6085	threads	
45-7	6085-6086	.	

#Text=We can increase these to, for example, 8:
#Text=; Number of I/O threads for writes
#Text=innodb_write_io_threads = 8
#Text=; Number of I/O threads for reads
#Text=innodb_read_io_threads = 8Code language: TOML, also INI (ini)
#Text=innodb_read_io_threads
#Text=The number of I/O threads for read operations in InnoDB.
46-1	6087-6089	We	
46-2	6090-6093	can	
46-3	6094-6102	increase	
46-4	6103-6108	these	
46-5	6109-6111	to	
46-6	6111-6112	,	
46-7	6113-6116	for	
46-8	6117-6124	example	
46-9	6124-6125	,	
46-10	6126-6127	8	
46-11	6127-6128	:	
46-12	6129-6130	;	
46-13	6131-6137	Number	
46-14	6138-6140	of	
46-15	6141-6142	I	
46-16	6142-6143	/	
46-17	6143-6144	O	
46-18	6145-6152	threads	
46-19	6153-6156	for	
46-20	6157-6163	writes	
46-21	6164-6187	innodb_write_io_threads	
46-22	6188-6189	=	
46-23	6190-6191	8	
46-24	6192-6193	;	
46-25	6194-6200	Number	
46-26	6201-6203	of	
46-27	6204-6205	I	
46-28	6205-6206	/	
46-29	6206-6207	O	
46-30	6208-6215	threads	
46-31	6216-6219	for	
46-32	6220-6225	reads	
46-33	6226-6248	innodb_read_io_threads	
46-34	6249-6250	=	
46-35	6251-6256	8Code	
46-36	6257-6265	language	
46-37	6265-6266	:	
46-38	6267-6271	TOML	
46-39	6271-6272	,	
46-40	6273-6277	also	
46-41	6278-6281	INI	
46-42	6282-6283	(	
46-43	6283-6286	ini	
46-44	6286-6287	)	
46-45	6288-6310	innodb_read_io_threads	
46-46	6311-6314	The	
46-47	6315-6321	number	
46-48	6322-6324	of	
46-49	6325-6326	I	
46-50	6326-6327	/	
46-51	6327-6328	O	
46-52	6329-6336	threads	
46-53	6337-6340	for	
46-54	6341-6345	read	
46-55	6346-6356	operations	
46-56	6357-6359	in	
46-57	6360-6366	InnoDB	
46-58	6366-6367	.	

#Text=The default value is 4.
#Text=innodb_write_io_threads
#Text=The number of I/O threads for write operations in InnoDB.
47-1	6368-6371	The	
47-2	6372-6379	default	
47-3	6380-6385	value	
47-4	6386-6388	is	
47-5	6389-6390	4	
47-6	6390-6391	.	
47-7	6392-6415	innodb_write_io_threads	
47-8	6416-6419	The	
47-9	6420-6426	number	
47-10	6427-6429	of	
47-11	6430-6431	I	
47-12	6431-6432	/	
47-13	6432-6433	O	
47-14	6434-6441	threads	
47-15	6442-6445	for	
47-16	6446-6451	write	
47-17	6452-6462	operations	
47-18	6463-6465	in	
47-19	6466-6472	InnoDB	
47-20	6472-6473	.	

#Text=The default value is 4.
48-1	6474-6477	The	
48-2	6478-6485	default	
48-3	6486-6491	value	
48-4	6492-6494	is	
48-5	6495-6496	4	
48-6	6496-6497	.	

#Text=When should you increase the number of innodb_read_io_threads?
49-1	6498-6502	When	
49-2	6503-6509	should	
49-3	6510-6513	you	
49-4	6514-6522	increase	
49-5	6523-6526	the	
49-6	6527-6533	number	
49-7	6534-6536	of	
49-8	6537-6559	innodb_read_io_threads	
49-9	6559-6560	?	

#Text=When you see more than 64 × innodb_read_io_threads pending read requests in SHOW ENGINE INNODB STATUS, you might gain by increasing the value of innodb_read_io_threads.
50-1	6561-6565	When	
50-2	6566-6569	you	
50-3	6570-6573	see	
50-4	6574-6578	more	
50-5	6579-6583	than	
50-6	6584-6586	64	
50-7	6587-6588	×	
50-8	6589-6611	innodb_read_io_threads	
50-9	6612-6619	pending	
50-10	6620-6624	read	
50-11	6625-6633	requests	
50-12	6634-6636	in	
50-13	6637-6641	SHOW	
50-14	6642-6648	ENGINE	
50-15	6649-6655	INNODB	
50-16	6656-6662	STATUS	
50-17	6662-6663	,	
50-18	6664-6667	you	
50-19	6668-6673	might	
50-20	6674-6678	gain	
50-21	6679-6681	by	
50-22	6682-6692	increasing	
50-23	6693-6696	the	
50-24	6697-6702	value	
50-25	6703-6705	of	
50-26	6706-6728	innodb_read_io_threads	
50-27	6728-6729	.	

#Text=Optimizing InnoDB Disk I/O#
#Text=If you follow the best practices for database design and the tuning techniques for SQL operations, but your database is still slowed by heavy disk I/O activity, explore these low-level techniques related to disk I/O.
51-1	6730-6740	Optimizing	
51-2	6741-6747	InnoDB	
51-3	6748-6752	Disk	
51-4	6753-6754	I	
51-5	6754-6755	/	
51-6	6755-6756	O	
51-7	6756-6757	#	
51-8	6758-6760	If	
51-9	6761-6764	you	
51-10	6765-6771	follow	
51-11	6772-6775	the	
51-12	6776-6780	best	
51-13	6781-6790	practices	
51-14	6791-6794	for	
51-15	6795-6803	database	
51-16	6804-6810	design	
51-17	6811-6814	and	
51-18	6815-6818	the	
51-19	6819-6825	tuning	
51-20	6826-6836	techniques	
51-21	6837-6840	for	
51-22	6841-6844	SQL	
51-23	6845-6855	operations	
51-24	6855-6856	,	
51-25	6857-6860	but	
51-26	6861-6865	your	
51-27	6866-6874	database	
51-28	6875-6877	is	
51-29	6878-6883	still	
51-30	6884-6890	slowed	
51-31	6891-6893	by	
51-32	6894-6899	heavy	
51-33	6900-6904	disk	
51-34	6905-6906	I	
51-35	6906-6907	/	
51-36	6907-6908	O	
51-37	6909-6917	activity	
51-38	6917-6918	,	
51-39	6919-6926	explore	
51-40	6927-6932	these	
51-41	6933-6942	low-level	
51-42	6943-6953	techniques	
51-43	6954-6961	related	
51-44	6962-6964	to	
51-45	6965-6969	disk	
51-46	6970-6971	I	
51-47	6971-6972	/	
51-48	6972-6973	O	
51-49	6973-6974	.	

#Text=If the Unix top tool or the Windows Task Manager shows that the CPU usage percentage with your workload is less than 70%, your workload is probably disk-bound, Optimizing InnoDB Disk I/O.
52-1	6975-6977	If	
52-2	6978-6981	the	
52-3	6982-6986	Unix	
52-4	6987-6990	top	
52-5	6991-6995	tool	
52-6	6996-6998	or	
52-7	6999-7002	the	
52-8	7003-7010	Windows	
52-9	7011-7015	Task	
52-10	7016-7023	Manager	
52-11	7024-7029	shows	
52-12	7030-7034	that	
52-13	7035-7038	the	
52-14	7039-7042	CPU	
52-15	7043-7048	usage	
52-16	7049-7059	percentage	
52-17	7060-7064	with	
52-18	7065-7069	your	
52-19	7070-7078	workload	
52-20	7079-7081	is	
52-21	7082-7086	less	
52-22	7087-7091	than	
52-23	7092-7095	70%	
52-24	7095-7096	,	
52-25	7097-7101	your	
52-26	7102-7110	workload	
52-27	7111-7113	is	
52-28	7114-7122	probably	
52-29	7123-7133	disk-bound	
52-30	7133-7134	,	
52-31	7135-7145	Optimizing	
52-32	7146-7152	InnoDB	
52-33	7153-7157	Disk	
52-34	7158-7159	I	
52-35	7159-7160	/	
52-36	7160-7161	O	
52-37	7161-7162	.	

#Text=Starting from MariaDB 10.0, the default number of innodb_buffer_pool_instances is 8.
53-1	7163-7171	Starting	
53-2	7172-7176	from	
53-3	7177-7184	MariaDB	
53-4	7185-7189	10.0	
53-5	7189-7190	,	
53-6	7191-7194	the	
53-7	7195-7202	default	
53-8	7203-7209	number	
53-9	7210-7212	of	
53-10	7213-7241	innodb_buffer_pool_instances	
53-11	7242-7244	is	
53-12	7245-7246	8	
53-13	7246-7247	.	

#Text=This means you have to configure your innodb_buffer_pool_size to at least 8 GB, see the defaults above.
54-1	7248-7252	This	
54-2	7253-7258	means	
54-3	7259-7262	you	
54-4	7263-7267	have	
54-5	7268-7270	to	
54-6	7271-7280	configure	
54-7	7281-7285	your	
54-8	7286-7309	innodb_buffer_pool_size	
54-9	7310-7312	to	
54-10	7313-7315	at	
54-11	7316-7321	least	
54-12	7322-7323	8	
54-13	7324-7326	GB	
54-14	7326-7327	,	
54-15	7328-7331	see	
54-16	7332-7335	the	
54-17	7336-7344	defaults	
54-18	7345-7350	above	
54-19	7350-7351	.	

#Text=Protip, don’t over optimize: never make too many configuration changes at once.
55-1	7352-7358	Protip	
55-2	7358-7359	,	
55-3	7360-7363	don	
55-4	7363-7364	’	
55-5	7364-7365	t	
55-6	7366-7370	over	
55-7	7371-7379	optimize	
55-8	7379-7380	:	
55-9	7381-7386	never	
55-10	7387-7391	make	
55-11	7392-7395	too	
55-12	7396-7400	many	
55-13	7401-7414	configuration	
55-14	7415-7422	changes	
55-15	7423-7425	at	
55-16	7426-7430	once	
55-17	7430-7431	.	

#Text=After changing one or two settings, let the server run for a few days so you can learn the implications of the changes.
56-1	7432-7437	After	
56-2	7438-7446	changing	
56-3	7447-7450	one	
56-4	7451-7453	or	
56-5	7454-7457	two	
56-6	7458-7466	settings	
56-7	7466-7467	,	
56-8	7468-7471	let	
56-9	7472-7475	the	
56-10	7476-7482	server	
56-11	7483-7486	run	
56-12	7487-7490	for	
56-13	7491-7492	a	
56-14	7493-7496	few	
56-15	7497-7501	days	
56-16	7502-7504	so	
56-17	7505-7508	you	
56-18	7509-7512	can	
56-19	7513-7518	learn	
56-20	7519-7522	the	
56-21	7523-7535	implications	
56-22	7536-7538	of	
56-23	7539-7542	the	
56-24	7543-7550	changes	
56-25	7550-7551	.	

#Text=Then, if necessary, make additional changes to the configuration.
57-1	7552-7556	Then	
57-2	7556-7557	,	
57-3	7558-7560	if	
57-4	7561-7570	necessary	
57-5	7570-7571	,	
57-6	7572-7576	make	
57-7	7577-7587	additional	
57-8	7588-7595	changes	
57-9	7596-7598	to	
57-10	7599-7602	the	
57-11	7603-7616	configuration	
57-12	7616-7617	.	

#Text=Convert MyISAM to InnoDB tables for WordPress using a pluginFor WordPress, I created a plugin to convert MyISAM tables to InnoDB, that now is incorporated into the Vevida Optimizer WordPress plugin.
58-1	7618-7625	Convert	
58-2	7626-7632	MyISAM	
58-3	7633-7635	to	
58-4	7636-7642	InnoDB	
58-5	7643-7649	tables	
58-6	7650-7653	for	
58-7	7654-7663	WordPress	
58-8	7664-7669	using	
58-9	7670-7671	a	
58-10	7672-7681	pluginFor	
58-11	7682-7691	WordPress	
58-12	7691-7692	,	
58-13	7693-7694	I	
58-14	7695-7702	created	
58-15	7703-7704	a	
58-16	7705-7711	plugin	
58-17	7712-7714	to	
58-18	7715-7722	convert	
58-19	7723-7729	MyISAM	
58-20	7730-7736	tables	
58-21	7737-7739	to	
58-22	7740-7746	InnoDB	
58-23	7746-7747	,	
58-24	7748-7752	that	
58-25	7753-7756	now	
58-26	7757-7759	is	
58-27	7760-7772	incorporated	
58-28	7773-7777	into	
58-29	7778-7781	the	
58-30	7782-7788	Vevida	
58-31	7789-7798	Optimizer	
58-32	7799-7808	WordPress	
58-33	7809-7815	plugin	
58-34	7815-7816	.	

#Text=The Vevida Optimizer plugin extends the automatic update feature already present in WordPress.
59-1	7817-7820	The	
59-2	7821-7827	Vevida	
59-3	7828-7837	Optimizer	
59-4	7838-7844	plugin	
59-5	7845-7852	extends	
59-6	7853-7856	the	
59-7	7857-7866	automatic	
59-8	7867-7873	update	
59-9	7874-7881	feature	
59-10	7882-7889	already	
59-11	7890-7897	present	
59-12	7898-7900	in	
59-13	7901-7910	WordPress	
59-14	7910-7911	.	

#Text=WordPress core updates can be switched on or off, themes and translations can be automatically updated, and the plugin updates can be configured on a per-plugin basis.
60-1	7912-7921	WordPress	
60-2	7922-7926	core	
60-3	7927-7934	updates	
60-4	7935-7938	can	
60-5	7939-7941	be	
60-6	7942-7950	switched	
60-7	7951-7953	on	
60-8	7954-7956	or	
60-9	7957-7960	off	
60-10	7960-7961	,	
60-11	7962-7968	themes	
60-12	7969-7972	and	
60-13	7973-7985	translations	
60-14	7986-7989	can	
60-15	7990-7992	be	
60-16	7993-8006	automatically	
60-17	8007-8014	updated	
60-18	8014-8015	,	
60-19	8016-8019	and	
60-20	8020-8023	the	
60-21	8024-8030	plugin	
60-22	8031-8038	updates	
60-23	8039-8042	can	
60-24	8043-8045	be	
60-25	8046-8056	configured	
60-26	8057-8059	on	
60-27	8060-8061	a	
60-28	8062-8072	per-plugin	
60-29	8073-8078	basis	
60-30	8078-8079	.	

#Text=Extra tips for MySQL performance tuning#
#Text=Besides optimizing InnoDB for a high-performance workload, there is more you can do to tune MySQL server and database performance.
61-1	8080-8085	Extra	
61-2	8086-8090	tips	
61-3	8091-8094	for	
61-4	8095-8100	MySQL	
61-5	8101-8112	performance	
61-6	8113-8119	tuning	
61-7	8119-8120	#	
61-8	8121-8128	Besides	
61-9	8129-8139	optimizing	
61-10	8140-8146	InnoDB	
61-11	8147-8150	for	
61-12	8151-8152	a	
61-13	8153-8169	high-performance	
61-14	8170-8178	workload	
61-15	8178-8179	,	
61-16	8180-8185	there	
61-17	8186-8188	is	
61-18	8189-8193	more	
61-19	8194-8197	you	
61-20	8198-8201	can	
61-21	8202-8204	do	
61-22	8205-8207	to	
61-23	8208-8212	tune	
61-24	8213-8218	MySQL	
61-25	8219-8225	server	
61-26	8226-8229	and	
61-27	8230-8238	database	
61-28	8239-8250	performance	
61-29	8250-8251	.	

#Text=Here are some extra MySQL configuration tips for you.
62-1	8252-8256	Here	
62-2	8257-8260	are	
62-3	8261-8265	some	
62-4	8266-8271	extra	
62-5	8272-8277	MySQL	
62-6	8278-8291	configuration	
62-7	8292-8296	tips	
62-8	8297-8300	for	
62-9	8301-8304	you	
62-10	8304-8305	.	

#Text=Some information might be outdated and obsolete but may hold valuable information for tuning your MySQL server.
63-1	8306-8310	Some	
63-2	8311-8322	information	
63-3	8323-8328	might	
63-4	8329-8331	be	
63-5	8332-8340	outdated	
63-6	8341-8344	and	
63-7	8345-8353	obsolete	
63-8	8354-8357	but	
63-9	8358-8361	may	
63-10	8362-8366	hold	
63-11	8367-8375	valuable	
63-12	8376-8387	information	
63-13	8388-8391	for	
63-14	8392-8398	tuning	
63-15	8399-8403	your	
63-16	8404-8409	MySQL	
63-17	8410-8416	server	
63-18	8416-8417	.	

#Text=Note: this is a translation and rewrite of my older Dutch post “MySQL performance en optimalisatie tips“, which is now deleted and links to here.
64-1	8418-8422	Note	
64-2	8422-8423	:	
64-3	8424-8428	this	
64-4	8429-8431	is	
64-5	8432-8433	a	
64-6	8434-8445	translation	
64-7	8446-8449	and	
64-8	8450-8457	rewrite	
64-9	8458-8460	of	
64-10	8461-8463	my	
64-11	8464-8469	older	
64-12	8470-8475	Dutch	
64-13	8476-8480	post	
64-14	8481-8482	“	
64-15	8482-8487	MySQL	
64-16	8488-8499	performance	
64-17	8500-8502	en	
64-18	8503-8516	optimalisatie	
64-19	8517-8521	tips	
64-20	8521-8522	“	
64-21	8522-8523	,	
64-22	8524-8529	which	
64-23	8530-8532	is	
64-24	8533-8536	now	
64-25	8537-8544	deleted	
64-26	8545-8548	and	
64-27	8549-8554	links	
64-28	8555-8557	to	
64-29	8558-8562	here	
64-30	8562-8563	.	

#Text=Just in case you were wondering why you arrived here instead of the Dutch post after clicking a link :-)
#Text=1: No two MySQL servers are the same#
#Text=When optimizing MySQL database servers, keep in mind that no server is equal to another.
65-1	8564-8568	Just	
65-2	8569-8571	in	
65-3	8572-8576	case	
65-4	8577-8580	you	
65-5	8581-8585	were	
65-6	8586-8595	wondering	
65-7	8596-8599	why	
65-8	8600-8603	you	
65-9	8604-8611	arrived	
65-10	8612-8616	here	
65-11	8617-8624	instead	
65-12	8625-8627	of	
65-13	8628-8631	the	
65-14	8632-8637	Dutch	
65-15	8638-8642	post	
65-16	8643-8648	after	
65-17	8649-8657	clicking	
65-18	8658-8659	a	
65-19	8660-8664	link	
65-20	8665-8666	:	
65-21	8666-8667	-	
65-22	8667-8668	)	
65-23	8669-8670	1	
65-24	8670-8671	:	
65-25	8672-8674	No	
65-26	8675-8678	two	
65-27	8679-8684	MySQL	
65-28	8685-8692	servers	
65-29	8693-8696	are	
65-30	8697-8700	the	
65-31	8701-8705	same	
65-32	8705-8706	#	
65-33	8707-8711	When	
65-34	8712-8722	optimizing	
65-35	8723-8728	MySQL	
65-36	8729-8737	database	
65-37	8738-8745	servers	
65-38	8745-8746	,	
65-39	8747-8751	keep	
65-40	8752-8754	in	
65-41	8755-8759	mind	
65-42	8760-8764	that	
65-43	8765-8767	no	
65-44	8768-8774	server	
65-45	8775-8777	is	
65-46	8778-8783	equal	
65-47	8784-8786	to	
65-48	8787-8794	another	
65-49	8794-8795	.	

#Text=Settings that work well on one server, may degrade performance on a second.
66-1	8796-8804	Settings	
66-2	8805-8809	that	
66-3	8810-8814	work	
66-4	8815-8819	well	
66-5	8820-8822	on	
66-6	8823-8826	one	
66-7	8827-8833	server	
66-8	8833-8834	,	
66-9	8835-8838	may	
66-10	8839-8846	degrade	
66-11	8847-8858	performance	
66-12	8859-8861	on	
66-13	8862-8863	a	
66-14	8864-8870	second	
66-15	8870-8871	.	

#Text=If you manage multiple servers with its configuration under version control (e.g almost -or exactly- the same MySQL configuration for all servers), choose what works best on all servers.
67-1	8872-8874	If	
67-2	8875-8878	you	
67-3	8879-8885	manage	
67-4	8886-8894	multiple	
67-5	8895-8902	servers	
67-6	8903-8907	with	
67-7	8908-8911	its	
67-8	8912-8925	configuration	
67-9	8926-8931	under	
67-10	8932-8939	version	
67-11	8940-8947	control	
67-12	8948-8949	(	
67-13	8949-8952	e.g	
67-14	8953-8959	almost	
67-15	8960-8961	-	
67-16	8961-8963	or	
67-17	8964-8971	exactly	
67-18	8971-8972	-	
67-19	8973-8976	the	
67-20	8977-8981	same	
67-21	8982-8987	MySQL	
67-22	8988-9001	configuration	
67-23	9002-9005	for	
67-24	9006-9009	all	
67-25	9010-9017	servers	
67-26	9017-9018	)	
67-27	9018-9019	,	
67-28	9020-9026	choose	
67-29	9027-9031	what	
67-30	9032-9037	works	
67-31	9038-9042	best	
67-32	9043-9045	on	
67-33	9046-9049	all	
67-34	9050-9057	servers	
67-35	9057-9058	.	

#Text=To determine what you can improve, you first need to know how the server performs now.
68-1	9059-9061	To	
68-2	9062-9071	determine	
68-3	9072-9076	what	
68-4	9077-9080	you	
68-5	9081-9084	can	
68-6	9085-9092	improve	
68-7	9092-9093	,	
68-8	9094-9097	you	
68-9	9098-9103	first	
68-10	9104-9108	need	
68-11	9109-9111	to	
68-12	9112-9116	know	
68-13	9117-9120	how	
68-14	9121-9124	the	
68-15	9125-9131	server	
68-16	9132-9140	performs	
68-17	9141-9144	now	
68-18	9144-9145	.	

#Text=You can use some MySQL commands for this on your MySQL cli (data comes from my very old post).
#Text=mysql> SHOW STATUS LIKE '%key_read%';
#Text=+-------------------+-------------+
#Text=| Variable_name
#Text=| Value
#Text=+-------------------+-------------+
#Text=| Key_read_requests | 11810240259 |
#Text=| Key_reads
#Text=| 9260357
#Text=+-------------------+-------------+Code language: SQL (Structured Query Language) (sql)
#Text=These two variables and values relate to the configured key_buffer_size
#Text=In this old example, the database server has 4 GB of RAM and a configured key_buffer_size of 512 MB.
69-1	9146-9149	You	
69-2	9150-9153	can	
69-3	9154-9157	use	
69-4	9158-9162	some	
69-5	9163-9168	MySQL	
69-6	9169-9177	commands	
69-7	9178-9181	for	
69-8	9182-9186	this	
69-9	9187-9189	on	
69-10	9190-9194	your	
69-11	9195-9200	MySQL	
69-12	9201-9204	cli	
69-13	9205-9206	(	
69-14	9206-9210	data	
69-15	9211-9216	comes	
69-16	9217-9221	from	
69-17	9222-9224	my	
69-18	9225-9229	very	
69-19	9230-9233	old	
69-20	9234-9238	post	
69-21	9238-9239	)	
69-22	9239-9240	.	
69-23	9241-9246	mysql	
69-24	9246-9247	>	
69-25	9248-9252	SHOW	
69-26	9253-9259	STATUS	
69-27	9260-9264	LIKE	
69-28	9265-9266	'	
69-29	9266-9267	%	
69-30	9267-9275	key_read	
69-31	9275-9276	%	
69-32	9276-9277	'	
69-33	9277-9278	;	
69-34	9279-9280	+	
69-35	9280-9281	-	
69-36	9281-9282	-	
69-37	9282-9283	-	
69-38	9283-9284	-	
69-39	9284-9285	-	
69-40	9285-9286	-	
69-41	9286-9287	-	
69-42	9287-9288	-	
69-43	9288-9289	-	
69-44	9289-9290	-	
69-45	9290-9291	-	
69-46	9291-9292	-	
69-47	9292-9293	-	
69-48	9293-9294	-	
69-49	9294-9295	-	
69-50	9295-9296	-	
69-51	9296-9297	-	
69-52	9297-9298	-	
69-53	9298-9299	-	
69-54	9299-9300	+	
69-55	9300-9301	-	
69-56	9301-9302	-	
69-57	9302-9303	-	
69-58	9303-9304	-	
69-59	9304-9305	-	
69-60	9305-9306	-	
69-61	9306-9307	-	
69-62	9307-9308	-	
69-63	9308-9309	-	
69-64	9309-9310	-	
69-65	9310-9311	-	
69-66	9311-9312	-	
69-67	9312-9313	-	
69-68	9313-9314	+	
69-69	9315-9316	|	
69-70	9317-9330	Variable_name	
69-71	9331-9332	|	
69-72	9333-9338	Value	
69-73	9339-9340	+	
69-74	9340-9341	-	
69-75	9341-9342	-	
69-76	9342-9343	-	
69-77	9343-9344	-	
69-78	9344-9345	-	
69-79	9345-9346	-	
69-80	9346-9347	-	
69-81	9347-9348	-	
69-82	9348-9349	-	
69-83	9349-9350	-	
69-84	9350-9351	-	
69-85	9351-9352	-	
69-86	9352-9353	-	
69-87	9353-9354	-	
69-88	9354-9355	-	
69-89	9355-9356	-	
69-90	9356-9357	-	
69-91	9357-9358	-	
69-92	9358-9359	-	
69-93	9359-9360	+	
69-94	9360-9361	-	
69-95	9361-9362	-	
69-96	9362-9363	-	
69-97	9363-9364	-	
69-98	9364-9365	-	
69-99	9365-9366	-	
69-100	9366-9367	-	
69-101	9367-9368	-	
69-102	9368-9369	-	
69-103	9369-9370	-	
69-104	9370-9371	-	
69-105	9371-9372	-	
69-106	9372-9373	-	
69-107	9373-9374	+	
69-108	9375-9376	|	
69-109	9377-9394	Key_read_requests	
69-110	9395-9396	|	
69-111	9397-9408	11810240259	
69-112	9409-9410	|	
69-113	9411-9412	|	
69-114	9413-9422	Key_reads	
69-115	9423-9424	|	
69-116	9425-9432	9260357	
69-117	9433-9434	+	
69-118	9434-9435	-	
69-119	9435-9436	-	
69-120	9436-9437	-	
69-121	9437-9438	-	
69-122	9438-9439	-	
69-123	9439-9440	-	
69-124	9440-9441	-	
69-125	9441-9442	-	
69-126	9442-9443	-	
69-127	9443-9444	-	
69-128	9444-9445	-	
69-129	9445-9446	-	
69-130	9446-9447	-	
69-131	9447-9448	-	
69-132	9448-9449	-	
69-133	9449-9450	-	
69-134	9450-9451	-	
69-135	9451-9452	-	
69-136	9452-9453	-	
69-137	9453-9454	+	
69-138	9454-9455	-	
69-139	9455-9456	-	
69-140	9456-9457	-	
69-141	9457-9458	-	
69-142	9458-9459	-	
69-143	9459-9460	-	
69-144	9460-9461	-	
69-145	9461-9462	-	
69-146	9462-9463	-	
69-147	9463-9464	-	
69-148	9464-9465	-	
69-149	9465-9466	-	
69-150	9466-9467	-	
69-151	9467-9468	+	
69-152	9468-9472	Code	
69-153	9473-9481	language	
69-154	9481-9482	:	
69-155	9483-9486	SQL	
69-156	9487-9488	(	
69-157	9488-9498	Structured	
69-158	9499-9504	Query	
69-159	9505-9513	Language	
69-160	9513-9514	)	
69-161	9515-9516	(	
69-162	9516-9519	sql	
69-163	9519-9520	)	
69-164	9521-9526	These	
69-165	9527-9530	two	
69-166	9531-9540	variables	
69-167	9541-9544	and	
69-168	9545-9551	values	
69-169	9552-9558	relate	
69-170	9559-9561	to	
69-171	9562-9565	the	
69-172	9566-9576	configured	
69-173	9577-9592	key_buffer_size	
69-174	9593-9595	In	
69-175	9596-9600	this	
69-176	9601-9604	old	
69-177	9605-9612	example	
69-178	9612-9613	,	
69-179	9614-9617	the	
69-180	9618-9626	database	
69-181	9627-9633	server	
69-182	9634-9637	has	
69-183	9638-9639	4	
69-184	9640-9642	GB	
69-185	9643-9645	of	
69-186	9646-9649	RAM	
69-187	9650-9653	and	
69-188	9654-9655	a	
69-189	9656-9666	configured	
69-190	9667-9682	key_buffer_size	
69-191	9683-9685	of	
69-192	9686-9689	512	
69-193	9690-9692	MB	
69-194	9692-9693	.	

#Text=The ratio (Key_read_requests / Key_reads) is approximately 1/1275, which is good but the key_buffer_size value may be increased to 768 MB.
70-1	9694-9697	The	
70-2	9698-9703	ratio	
70-3	9704-9705	(	
70-4	9705-9722	Key_read_requests	
70-5	9723-9724	/	
70-6	9725-9734	Key_reads	
70-7	9734-9735	)	
70-8	9736-9738	is	
70-9	9739-9752	approximately	
70-10	9753-9754	1	
70-11	9754-9755	/	
70-12	9755-9759	1275	
70-13	9759-9760	,	
70-14	9761-9766	which	
70-15	9767-9769	is	
70-16	9770-9774	good	
70-17	9775-9778	but	
70-18	9779-9782	the	
70-19	9783-9798	key_buffer_size	
70-20	9799-9804	value	
70-21	9805-9808	may	
70-22	9809-9811	be	
70-23	9812-9821	increased	
70-24	9822-9824	to	
70-25	9825-9828	768	
70-26	9829-9831	MB	
70-27	9831-9832	.	

#Text=Even though this is not yet necessary.
#Text=mysql> SHOW STATUS LIKE 'thread%';
#Text=+-------------------+---------+
#Text=| Variable_name
#Text=| Value
#Text=+-------------------+---------+
#Text=| Threads_cached
#Text=| 0
#Text=| Threads_connected | 76
#Text=| Threads_created
#Text=| 6234040 |
#Text=| Threads_running
#Text=| 2
#Text=+-------------------+---------+Code language: SQL (Structured Query Language) (sql)
#Text=These Threads_* variable values show you there are currently 76 connected threads, of which only 2 are really running a thread (executing a statement).
71-1	9833-9837	Even	
71-2	9838-9844	though	
71-3	9845-9849	this	
71-4	9850-9852	is	
71-5	9853-9856	not	
71-6	9857-9860	yet	
71-7	9861-9870	necessary	
71-8	9870-9871	.	
71-9	9872-9877	mysql	
71-10	9877-9878	>	
71-11	9879-9883	SHOW	
71-12	9884-9890	STATUS	
71-13	9891-9895	LIKE	
71-14	9896-9897	'	
71-15	9897-9903	thread	
71-16	9903-9904	%	
71-17	9904-9905	'	
71-18	9905-9906	;	
71-19	9907-9908	+	
71-20	9908-9909	-	
71-21	9909-9910	-	
71-22	9910-9911	-	
71-23	9911-9912	-	
71-24	9912-9913	-	
71-25	9913-9914	-	
71-26	9914-9915	-	
71-27	9915-9916	-	
71-28	9916-9917	-	
71-29	9917-9918	-	
71-30	9918-9919	-	
71-31	9919-9920	-	
71-32	9920-9921	-	
71-33	9921-9922	-	
71-34	9922-9923	-	
71-35	9923-9924	-	
71-36	9924-9925	-	
71-37	9925-9926	-	
71-38	9926-9927	-	
71-39	9927-9928	+	
71-40	9928-9929	-	
71-41	9929-9930	-	
71-42	9930-9931	-	
71-43	9931-9932	-	
71-44	9932-9933	-	
71-45	9933-9934	-	
71-46	9934-9935	-	
71-47	9935-9936	-	
71-48	9936-9937	-	
71-49	9937-9938	+	
71-50	9939-9940	|	
71-51	9941-9954	Variable_name	
71-52	9955-9956	|	
71-53	9957-9962	Value	
71-54	9963-9964	+	
71-55	9964-9965	-	
71-56	9965-9966	-	
71-57	9966-9967	-	
71-58	9967-9968	-	
71-59	9968-9969	-	
71-60	9969-9970	-	
71-61	9970-9971	-	
71-62	9971-9972	-	
71-63	9972-9973	-	
71-64	9973-9974	-	
71-65	9974-9975	-	
71-66	9975-9976	-	
71-67	9976-9977	-	
71-68	9977-9978	-	
71-69	9978-9979	-	
71-70	9979-9980	-	
71-71	9980-9981	-	
71-72	9981-9982	-	
71-73	9982-9983	-	
71-74	9983-9984	+	
71-75	9984-9985	-	
71-76	9985-9986	-	
71-77	9986-9987	-	
71-78	9987-9988	-	
71-79	9988-9989	-	
71-80	9989-9990	-	
71-81	9990-9991	-	
71-82	9991-9992	-	
71-83	9992-9993	-	
71-84	9993-9994	+	
71-85	9995-9996	|	
71-86	9997-10011	Threads_cached	
71-87	10012-10013	|	
71-88	10014-10015	0	
71-89	10016-10017	|	
71-90	10018-10035	Threads_connected	
71-91	10036-10037	|	
71-92	10038-10040	76	
71-93	10041-10042	|	
71-94	10043-10058	Threads_created	
71-95	10059-10060	|	
71-96	10061-10068	6234040	
71-97	10069-10070	|	
71-98	10071-10072	|	
71-99	10073-10088	Threads_running	
71-100	10089-10090	|	
71-101	10091-10092	2	
71-102	10093-10094	+	
71-103	10094-10095	-	
71-104	10095-10096	-	
71-105	10096-10097	-	
71-106	10097-10098	-	
71-107	10098-10099	-	
71-108	10099-10100	-	
71-109	10100-10101	-	
71-110	10101-10102	-	
71-111	10102-10103	-	
71-112	10103-10104	-	
71-113	10104-10105	-	
71-114	10105-10106	-	
71-115	10106-10107	-	
71-116	10107-10108	-	
71-117	10108-10109	-	
71-118	10109-10110	-	
71-119	10110-10111	-	
71-120	10111-10112	-	
71-121	10112-10113	-	
71-122	10113-10114	+	
71-123	10114-10115	-	
71-124	10115-10116	-	
71-125	10116-10117	-	
71-126	10117-10118	-	
71-127	10118-10119	-	
71-128	10119-10120	-	
71-129	10120-10121	-	
71-130	10121-10122	-	
71-131	10122-10123	-	
71-132	10123-10124	+	
71-133	10124-10128	Code	
71-134	10129-10137	language	
71-135	10137-10138	:	
71-136	10139-10142	SQL	
71-137	10143-10144	(	
71-138	10144-10154	Structured	
71-139	10155-10160	Query	
71-140	10161-10169	Language	
71-141	10169-10170	)	
71-142	10171-10172	(	
71-143	10172-10175	sql	
71-144	10175-10176	)	
71-145	10177-10182	These	
71-146	10183-10190	Threads	
71-147	10190-10191	_	
71-148	10191-10192	*	
71-149	10193-10201	variable	
71-150	10202-10208	values	
71-151	10209-10213	show	
71-152	10214-10217	you	
71-153	10218-10223	there	
71-154	10224-10227	are	
71-155	10228-10237	currently	
71-156	10238-10240	76	
71-157	10241-10250	connected	
71-158	10251-10258	threads	
71-159	10258-10259	,	
71-160	10260-10262	of	
71-161	10263-10268	which	
71-162	10269-10273	only	
71-163	10274-10275	2	
71-164	10276-10279	are	
71-165	10280-10286	really	
71-166	10287-10294	running	
71-167	10295-10296	a	
71-168	10297-10303	thread	
71-169	10304-10305	(	
71-170	10305-10314	executing	
71-171	10315-10316	a	
71-172	10317-10326	statement	
71-173	10326-10327	)	
71-174	10327-10328	.	

#Text=This means 74 connections are idle.
72-1	10329-10333	This	
72-2	10334-10339	means	
72-3	10340-10342	74	
72-4	10343-10354	connections	
72-5	10355-10358	are	
72-6	10359-10363	idle	
72-7	10363-10364	.	

#Text=Here you can also see that there is no “thread cache” set up for MySQL: Threads_cached | 0
#Text=You can use the MySQL Server System variable thread_cache_size to configure how many threads must be cached by MySQL.
73-1	10365-10369	Here	
73-2	10370-10373	you	
73-3	10374-10377	can	
73-4	10378-10382	also	
73-5	10383-10386	see	
73-6	10387-10391	that	
73-7	10392-10397	there	
73-8	10398-10400	is	
73-9	10401-10403	no	
73-10	10404-10405	“	
73-11	10405-10411	thread	
73-12	10412-10417	cache	
73-13	10417-10418	”	
73-14	10419-10422	set	
73-15	10423-10425	up	
73-16	10426-10429	for	
73-17	10430-10435	MySQL	
73-18	10435-10436	:	
73-19	10437-10451	Threads_cached	
73-20	10452-10453	|	
73-21	10454-10455	0	
73-22	10456-10459	You	
73-23	10460-10463	can	
73-24	10464-10467	use	
73-25	10468-10471	the	
73-26	10472-10477	MySQL	
73-27	10478-10484	Server	
73-28	10485-10491	System	
73-29	10492-10500	variable	
73-30	10501-10518	thread_cache_size	
73-31	10519-10521	to	
73-32	10522-10531	configure	
73-33	10532-10535	how	
73-34	10536-10540	many	
73-35	10541-10548	threads	
73-36	10549-10553	must	
73-37	10554-10556	be	
73-38	10557-10563	cached	
73-39	10564-10566	by	
73-40	10567-10572	MySQL	
73-41	10572-10573	.	

#Text=This is one of those configuration settings that, probably, provides the least performance gain, but still…
#Text=Don’t set this one too high, somewhere between 20 and 40 is often good enough:
#Text=thread_cache_size = 20Code language: TOML, also INI (ini)
#Text=When you execute the previous statement again, the values will be:
#Text=mysql> SHOW STATUS LIKE 'thread%';
#Text=+-------------------+-------+
#Text=| Variable_name
#Text=| Value |
#Text=+-------------------+-------+
#Text=| Threads_cached
#Text=| 14
#Text=| Threads_connected | 98
#Text=| Threads_created
#Text=| 2896
#Text=| Threads_running
#Text=| 1
#Text=+-------------------+-------+Code language: SQL (Structured Query Language) (sql)
#Text=You now have 14 threads cached :)
#Text=2: Miscellaneous MySQL configuration settings#
#Text=A few words on some miscellaneous configuration settings.
#Text=2.1: tmp_table_size and max_heap_table_sizeThe default tmp_table_size and max_heap_table_size values are 16M.
74-1	10574-10578	This	
74-2	10579-10581	is	
74-3	10582-10585	one	
74-4	10586-10588	of	
74-5	10589-10594	those	
74-6	10595-10608	configuration	
74-7	10609-10617	settings	
74-8	10618-10622	that	
74-9	10622-10623	,	
74-10	10624-10632	probably	
74-11	10632-10633	,	
74-12	10634-10642	provides	
74-13	10643-10646	the	
74-14	10647-10652	least	
74-15	10653-10664	performance	
74-16	10665-10669	gain	
74-17	10669-10670	,	
74-18	10671-10674	but	
74-19	10675-10680	still	
74-20	10680-10681	…	
74-21	10682-10685	Don	
74-22	10685-10686	’	
74-23	10686-10687	t	
74-24	10688-10691	set	
74-25	10692-10696	this	
74-26	10697-10700	one	
74-27	10701-10704	too	
74-28	10705-10709	high	
74-29	10709-10710	,	
74-30	10711-10720	somewhere	
74-31	10721-10728	between	
74-32	10729-10731	20	
74-33	10732-10735	and	
74-34	10736-10738	40	
74-35	10739-10741	is	
74-36	10742-10747	often	
74-37	10748-10752	good	
74-38	10753-10759	enough	
74-39	10759-10760	:	
74-40	10761-10778	thread_cache_size	
74-41	10779-10780	=	
74-42	10781-10787	20Code	
74-43	10788-10796	language	
74-44	10796-10797	:	
74-45	10798-10802	TOML	
74-46	10802-10803	,	
74-47	10804-10808	also	
74-48	10809-10812	INI	
74-49	10813-10814	(	
74-50	10814-10817	ini	
74-51	10817-10818	)	
74-52	10819-10823	When	
74-53	10824-10827	you	
74-54	10828-10835	execute	
74-55	10836-10839	the	
74-56	10840-10848	previous	
74-57	10849-10858	statement	
74-58	10859-10864	again	
74-59	10864-10865	,	
74-60	10866-10869	the	
74-61	10870-10876	values	
74-62	10877-10881	will	
74-63	10882-10884	be	
74-64	10884-10885	:	
74-65	10886-10891	mysql	
74-66	10891-10892	>	
74-67	10893-10897	SHOW	
74-68	10898-10904	STATUS	
74-69	10905-10909	LIKE	
74-70	10910-10911	'	
74-71	10911-10917	thread	
74-72	10917-10918	%	
74-73	10918-10919	'	
74-74	10919-10920	;	
74-75	10921-10922	+	
74-76	10922-10923	-	
74-77	10923-10924	-	
74-78	10924-10925	-	
74-79	10925-10926	-	
74-80	10926-10927	-	
74-81	10927-10928	-	
74-82	10928-10929	-	
74-83	10929-10930	-	
74-84	10930-10931	-	
74-85	10931-10932	-	
74-86	10932-10933	-	
74-87	10933-10934	-	
74-88	10934-10935	-	
74-89	10935-10936	-	
74-90	10936-10937	-	
74-91	10937-10938	-	
74-92	10938-10939	-	
74-93	10939-10940	-	
74-94	10940-10941	-	
74-95	10941-10942	+	
74-96	10942-10943	-	
74-97	10943-10944	-	
74-98	10944-10945	-	
74-99	10945-10946	-	
74-100	10946-10947	-	
74-101	10947-10948	-	
74-102	10948-10949	-	
74-103	10949-10950	+	
74-104	10951-10952	|	
74-105	10953-10966	Variable_name	
74-106	10967-10968	|	
74-107	10969-10974	Value	
74-108	10975-10976	|	
74-109	10977-10978	+	
74-110	10978-10979	-	
74-111	10979-10980	-	
74-112	10980-10981	-	
74-113	10981-10982	-	
74-114	10982-10983	-	
74-115	10983-10984	-	
74-116	10984-10985	-	
74-117	10985-10986	-	
74-118	10986-10987	-	
74-119	10987-10988	-	
74-120	10988-10989	-	
74-121	10989-10990	-	
74-122	10990-10991	-	
74-123	10991-10992	-	
74-124	10992-10993	-	
74-125	10993-10994	-	
74-126	10994-10995	-	
74-127	10995-10996	-	
74-128	10996-10997	-	
74-129	10997-10998	+	
74-130	10998-10999	-	
74-131	10999-11000	-	
74-132	11000-11001	-	
74-133	11001-11002	-	
74-134	11002-11003	-	
74-135	11003-11004	-	
74-136	11004-11005	-	
74-137	11005-11006	+	
74-138	11007-11008	|	
74-139	11009-11023	Threads_cached	
74-140	11024-11025	|	
74-141	11026-11028	14	
74-142	11029-11030	|	
74-143	11031-11048	Threads_connected	
74-144	11049-11050	|	
74-145	11051-11053	98	
74-146	11054-11055	|	
74-147	11056-11071	Threads_created	
74-148	11072-11073	|	
74-149	11074-11078	2896	
74-150	11079-11080	|	
74-151	11081-11096	Threads_running	
74-152	11097-11098	|	
74-153	11099-11100	1	
74-154	11101-11102	+	
74-155	11102-11103	-	
74-156	11103-11104	-	
74-157	11104-11105	-	
74-158	11105-11106	-	
74-159	11106-11107	-	
74-160	11107-11108	-	
74-161	11108-11109	-	
74-162	11109-11110	-	
74-163	11110-11111	-	
74-164	11111-11112	-	
74-165	11112-11113	-	
74-166	11113-11114	-	
74-167	11114-11115	-	
74-168	11115-11116	-	
74-169	11116-11117	-	
74-170	11117-11118	-	
74-171	11118-11119	-	
74-172	11119-11120	-	
74-173	11120-11121	-	
74-174	11121-11122	+	
74-175	11122-11123	-	
74-176	11123-11124	-	
74-177	11124-11125	-	
74-178	11125-11126	-	
74-179	11126-11127	-	
74-180	11127-11128	-	
74-181	11128-11129	-	
74-182	11129-11130	+	
74-183	11130-11134	Code	
74-184	11135-11143	language	
74-185	11143-11144	:	
74-186	11145-11148	SQL	
74-187	11149-11150	(	
74-188	11150-11160	Structured	
74-189	11161-11166	Query	
74-190	11167-11175	Language	
74-191	11175-11176	)	
74-192	11177-11178	(	
74-193	11178-11181	sql	
74-194	11181-11182	)	
74-195	11183-11186	You	
74-196	11187-11190	now	
74-197	11191-11195	have	
74-198	11196-11198	14	
74-199	11199-11206	threads	
74-200	11207-11213	cached	
74-201	11214-11215	:	
74-202	11215-11216	)	
74-203	11217-11218	2	
74-204	11218-11219	:	
74-205	11220-11233	Miscellaneous	
74-206	11234-11239	MySQL	
74-207	11240-11253	configuration	
74-208	11254-11262	settings	
74-209	11262-11263	#	
74-210	11264-11265	A	
74-211	11266-11269	few	
74-212	11270-11275	words	
74-213	11276-11278	on	
74-214	11279-11283	some	
74-215	11284-11297	miscellaneous	
74-216	11298-11311	configuration	
74-217	11312-11320	settings	
74-218	11320-11321	.	
74-219	11322-11325	2.1	
74-220	11325-11326	:	
74-221	11327-11341	tmp_table_size	
74-222	11342-11345	and	
74-223	11346-11368	max_heap_table_sizeThe	
74-224	11369-11376	default	
74-225	11377-11391	tmp_table_size	
74-226	11392-11395	and	
74-227	11396-11415	max_heap_table_size	
74-228	11416-11422	values	
74-229	11423-11426	are	
74-230	11427-11430	16M	
74-231	11430-11431	.	

#Text=These two have to be equal in size!
75-1	11432-11437	These	
75-2	11438-11441	two	
75-3	11442-11446	have	
75-4	11447-11449	to	
75-5	11450-11452	be	
75-6	11453-11458	equal	
75-7	11459-11461	in	
75-8	11462-11466	size	
75-9	11466-11467	!	

#Text=It sets the maximum size for internal in-memory tables, resulting in less creation of temporarily MyISAM tables on the file system.
76-1	11468-11470	It	
76-2	11471-11475	sets	
76-3	11476-11479	the	
76-4	11480-11487	maximum	
76-5	11488-11492	size	
76-6	11493-11496	for	
76-7	11497-11505	internal	
76-8	11506-11515	in-memory	
76-9	11516-11522	tables	
76-10	11522-11523	,	
76-11	11524-11533	resulting	
76-12	11534-11536	in	
76-13	11537-11541	less	
76-14	11542-11550	creation	
76-15	11551-11553	of	
76-16	11554-11565	temporarily	
76-17	11566-11572	MyISAM	
76-18	11573-11579	tables	
76-19	11580-11582	on	
76-20	11583-11586	the	
76-21	11587-11591	file	
76-22	11592-11598	system	
76-23	11598-11599	.	

#Text=That in return, results in less disk I/O.
#Text=https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_tmp_table_sizehttps://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_max_heap_table_size2.2: join_buffer_sizeThe join_buffer_size sets a maximum buffer size for plain index scans, range index scans and joins without indices (and therefore perform full table scans).
77-1	11600-11604	That	
77-2	11605-11607	in	
77-3	11608-11614	return	
77-4	11614-11615	,	
77-5	11616-11623	results	
77-6	11624-11626	in	
77-7	11627-11631	less	
77-8	11632-11636	disk	
77-9	11637-11638	I	
77-10	11638-11639	/	
77-11	11639-11640	O	
77-12	11640-11641	.	
77-13	11642-11647	https	
77-14	11647-11648	:	
77-15	11648-11649	/	
77-16	11649-11650	/	
77-17	11650-11663	dev.mysql.com	
77-18	11663-11664	/	
77-19	11664-11667	doc	
77-20	11667-11668	/	
77-21	11668-11674	refman	
77-22	11674-11675	/	
77-23	11675-11678	8.0	
77-24	11678-11679	/	
77-25	11679-11681	en	
77-26	11681-11682	/	
77-27	11682-11710	server-system-variables.html	
77-28	11710-11711	#	
77-29	11711-11737	sysvar_tmp_table_sizehttps	
77-30	11737-11738	:	
77-31	11738-11739	/	
77-32	11739-11740	/	
77-33	11740-11753	dev.mysql.com	
77-34	11753-11754	/	
77-35	11754-11757	doc	
77-36	11757-11758	/	
77-37	11758-11764	refman	
77-38	11764-11765	/	
77-39	11765-11768	8.0	
77-40	11768-11769	/	
77-41	11769-11771	en	
77-42	11771-11772	/	
77-43	11772-11800	server-system-variables.html	
77-44	11800-11801	#	
77-45	11801-11830	sysvar_max_heap_table_size2.2	
77-46	11830-11831	:	
77-47	11832-11851	join_buffer_sizeThe	
77-48	11852-11868	join_buffer_size	
77-49	11869-11873	sets	
77-50	11874-11875	a	
77-51	11876-11883	maximum	
77-52	11884-11890	buffer	
77-53	11891-11895	size	
77-54	11896-11899	for	
77-55	11900-11905	plain	
77-56	11906-11911	index	
77-57	11912-11917	scans	
77-58	11917-11918	,	
77-59	11919-11924	range	
77-60	11925-11930	index	
77-61	11931-11936	scans	
77-62	11937-11940	and	
77-63	11941-11946	joins	
77-64	11947-11954	without	
77-65	11955-11962	indices	
77-66	11963-11964	(	
77-67	11964-11967	and	
77-68	11968-11977	therefore	
77-69	11978-11985	perform	
77-70	11986-11990	full	
77-71	11991-11996	table	
77-72	11997-12002	scans	
77-73	12002-12003	)	
77-74	12003-12004	.	

#Text=Keep this one low, 1M for example.
#Text=3.
78-1	12005-12009	Keep	
78-2	12010-12014	this	
78-3	12015-12018	one	
78-4	12019-12022	low	
78-5	12022-12023	,	
78-6	12024-12026	1M	
78-7	12027-12030	for	
78-8	12031-12038	example	
78-9	12038-12039	.	
78-10	12040-12041	3	
78-11	12041-12042	.	

#Text=Use Diagnostics for improvements#
#Text=It is important to frequently run diagnostics and/or look up diagnostic data (for example in your information_scheme table).
79-1	12043-12046	Use	
79-2	12047-12058	Diagnostics	
79-3	12059-12062	for	
79-4	12063-12075	improvements	
79-5	12075-12076	#	
79-6	12077-12079	It	
79-7	12080-12082	is	
79-8	12083-12092	important	
79-9	12093-12095	to	
79-10	12096-12106	frequently	
79-11	12107-12110	run	
79-12	12111-12122	diagnostics	
79-13	12123-12126	and	
79-14	12126-12127	/	
79-15	12127-12129	or	
79-16	12130-12134	look	
79-17	12135-12137	up	
79-18	12138-12148	diagnostic	
79-19	12149-12153	data	
79-20	12154-12155	(	
79-21	12155-12158	for	
79-22	12159-12166	example	
79-23	12167-12169	in	
79-24	12170-12174	your	
79-25	12175-12193	information_scheme	
79-26	12194-12199	table	
79-27	12199-12200	)	
79-28	12200-12201	.	

#Text=Percona has a lot of information about some key metrics:
#Text=https://www.percona.com/doc/percona-server/8.0/index.html#diagnostics-improvementsMySQL tuning, the conclusion#
#Text=Tuning MySQL and the InnoDB storage engine is an important step in further optimizing your hosting environment.
80-1	12202-12209	Percona	
80-2	12210-12213	has	
80-3	12214-12215	a	
80-4	12216-12219	lot	
80-5	12220-12222	of	
80-6	12223-12234	information	
80-7	12235-12240	about	
80-8	12241-12245	some	
80-9	12246-12249	key	
80-10	12250-12257	metrics	
80-11	12257-12258	:	
80-12	12259-12264	https	
80-13	12264-12265	:	
80-14	12265-12266	/	
80-15	12266-12267	/	
80-16	12267-12282	www.percona.com	
80-17	12282-12283	/	
80-18	12283-12286	doc	
80-19	12286-12287	/	
80-20	12287-12301	percona-server	
80-21	12301-12302	/	
80-22	12302-12305	8.0	
80-23	12305-12306	/	
80-24	12306-12316	index.html	
80-25	12316-12317	#	
80-26	12317-12346	diagnostics-improvementsMySQL	
80-27	12347-12353	tuning	
80-28	12353-12354	,	
80-29	12355-12358	the	
80-30	12359-12369	conclusion	
80-31	12369-12370	#	
80-32	12371-12377	Tuning	
80-33	12378-12383	MySQL	
80-34	12384-12387	and	
80-35	12388-12391	the	
80-36	12392-12398	InnoDB	
80-37	12399-12406	storage	
80-38	12407-12413	engine	
80-39	12414-12416	is	
80-40	12417-12419	an	
80-41	12420-12429	important	
80-42	12430-12434	step	
80-43	12435-12437	in	
80-44	12438-12445	further	
80-45	12446-12456	optimizing	
80-46	12457-12461	your	
80-47	12462-12469	hosting	
80-48	12470-12481	environment	
80-49	12481-12482	.	

#Text=Every new MySQL version brings new settings to improve your MySQL configuration, so be sure to read those changelogs.
81-1	12483-12488	Every	
81-2	12489-12492	new	
81-3	12493-12498	MySQL	
81-4	12499-12506	version	
81-5	12507-12513	brings	
81-6	12514-12517	new	
81-7	12518-12526	settings	
81-8	12527-12529	to	
81-9	12530-12537	improve	
81-10	12538-12542	your	
81-11	12543-12548	MySQL	
81-12	12549-12562	configuration	
81-13	12562-12563	,	
81-14	12564-12566	so	
81-15	12567-12569	be	
81-16	12570-12574	sure	
81-17	12575-12577	to	
81-18	12578-12582	read	
81-19	12583-12588	those	
81-20	12589-12599	changelogs	
81-21	12599-12600	.	

#Text=In this article we went over InnoDB Buffer Pool Size and InnoDB Buffer Pool Instances.
82-1	12601-12603	In	
82-2	12604-12608	this	
82-3	12609-12616	article	
82-4	12617-12619	we	
82-5	12620-12624	went	
82-6	12625-12629	over	
82-7	12630-12636	InnoDB	
82-8	12637-12643	Buffer	
82-9	12644-12648	Pool	
82-10	12649-12653	Size	
82-11	12654-12657	and	
82-12	12658-12664	InnoDB	
82-13	12665-12671	Buffer	
82-14	12672-12676	Pool	
82-15	12677-12686	Instances	
82-16	12686-12687	.	

#Text=Setting these properly greatly improves your MySQL server’s performance!
83-1	12688-12695	Setting	
83-2	12696-12701	these	
83-3	12702-12710	properly	
83-4	12711-12718	greatly	
83-5	12719-12727	improves	
83-6	12728-12732	your	
83-7	12733-12738	MySQL	
83-8	12739-12745	server	
83-9	12745-12746	’	
83-10	12746-12747	s	
83-11	12748-12759	performance	
83-12	12759-12760	!	

#Text=But never (ever, ever) over-optimize!
84-1	12761-12764	But	
84-2	12765-12770	never	
84-3	12771-12772	(	
84-4	12772-12776	ever	
84-5	12776-12777	,	
84-6	12778-12782	ever	
84-7	12782-12783	)	
84-8	12784-12797	over-optimize	
84-9	12797-12798	!	

#Text=Please don’t make too many configuration changes at once.
85-1	12799-12805	Please	
85-2	12806-12809	don	
85-3	12809-12810	’	
85-4	12810-12811	t	
85-5	12812-12816	make	
85-6	12817-12820	too	
85-7	12821-12825	many	
85-8	12826-12839	configuration	
85-9	12840-12847	changes	
85-10	12848-12850	at	
85-11	12851-12855	once	
85-12	12855-12856	.	

#Text=Make one or two and restart mysqld.
86-1	12857-12861	Make	
86-2	12862-12865	one	
86-3	12866-12868	or	
86-4	12869-12872	two	
86-5	12873-12876	and	
86-6	12877-12884	restart	
86-7	12885-12891	mysqld	
86-8	12891-12892	.	

#Text=After monitoring your system for a few days, running with the new configuration, you have data available to further optimize other MySQL settings.
87-1	12893-12898	After	
87-2	12899-12909	monitoring	
87-3	12910-12914	your	
87-4	12915-12921	system	
87-5	12922-12925	for	
87-6	12926-12927	a	
87-7	12928-12931	few	
87-8	12932-12936	days	
87-9	12936-12937	,	
87-10	12938-12945	running	
87-11	12946-12950	with	
87-12	12951-12954	the	
87-13	12955-12958	new	
87-14	12959-12972	configuration	
87-15	12972-12973	,	
87-16	12974-12977	you	
87-17	12978-12982	have	
87-18	12983-12987	data	
87-19	12988-12997	available	
87-20	12998-13000	to	
87-21	13001-13008	further	
87-22	13009-13017	optimize	
87-23	13018-13023	other	
87-24	13024-13029	MySQL	
87-25	13030-13038	settings	
87-26	13038-13039	.	

#Text=With InnoDB being the default storage engine, you also have to make sure you make use of this storage engine in MySQL.
88-1	13040-13044	With	
88-2	13045-13051	InnoDB	
88-3	13052-13057	being	
88-4	13058-13061	the	
88-5	13062-13069	default	
88-6	13070-13077	storage	
88-7	13078-13084	engine	
88-8	13084-13085	,	
88-9	13086-13089	you	
88-10	13090-13094	also	
88-11	13095-13099	have	
88-12	13100-13102	to	
88-13	13103-13107	make	
88-14	13108-13112	sure	
88-15	13113-13116	you	
88-16	13117-13121	make	
88-17	13122-13125	use	
88-18	13126-13128	of	
88-19	13129-13133	this	
88-20	13134-13141	storage	
88-21	13142-13148	engine	
88-22	13149-13151	in	
88-23	13152-13157	MySQL	
88-24	13157-13158	.	

#Text=Therefore it is important to convert old MyISAM tables to InnoDB.
89-1	13159-13168	Therefore	
89-2	13169-13171	it	
89-3	13172-13174	is	
89-4	13175-13184	important	
89-5	13185-13187	to	
89-6	13188-13195	convert	
89-7	13196-13199	old	
89-8	13200-13206	MyISAM	
89-9	13207-13213	tables	
89-10	13214-13216	to	
89-11	13217-13223	InnoDB	
89-12	13223-13224	.	

#Text=Tags:InnoDBlinuxMySQLoptimizationquery_cache
#Text=4 thoughts on “MySQL InnoDB performance improvement: InnoDB buffer pool instances – Updated!”
90-1	13225-13229	Tags	
90-2	13229-13230	:	
90-3	13230-13269	InnoDBlinuxMySQLoptimizationquery_cache	
90-4	13270-13271	4	
90-5	13272-13280	thoughts	
90-6	13281-13283	on	
90-7	13284-13285	“	
90-8	13285-13290	MySQL	
90-9	13291-13297	InnoDB	
90-10	13298-13309	performance	
90-11	13310-13321	improvement	
90-12	13321-13322	:	
90-13	13323-13329	InnoDB	
90-14	13330-13336	buffer	
90-15	13337-13341	pool	
90-16	13342-13351	instances	
90-17	13352-13353	–	
90-18	13354-13361	Updated	
90-19	13361-13362	!	
90-20	13362-13363	”	

#Text=Dmitry Kapustin
#Text=2 June 2020 at 23:30
#Text=The use of Query Cache was justified when using MyISAM tables, which were completely locked during update/insert/delete data.
91-1	13364-13370	Dmitry	
91-2	13371-13379	Kapustin	
91-3	13380-13381	2	
91-4	13382-13386	June	
91-5	13387-13391	2020	
91-6	13392-13394	at	
91-7	13395-13397	23	
91-8	13397-13398	:	
91-9	13398-13400	30	
91-10	13401-13404	The	
91-11	13405-13408	use	
91-12	13409-13411	of	
91-13	13412-13417	Query	
91-14	13418-13423	Cache	
91-15	13424-13427	was	
91-16	13428-13437	justified	
91-17	13438-13442	when	
91-18	13443-13448	using	
91-19	13449-13455	MyISAM	
91-20	13456-13462	tables	
91-21	13462-13463	,	
91-22	13464-13469	which	
91-23	13470-13474	were	
91-24	13475-13485	completely	
91-25	13486-13492	locked	
91-26	13493-13499	during	
91-27	13500-13506	update	
91-28	13506-13507	/	
91-29	13507-13513	insert	
91-30	13513-13514	/	
91-31	13514-13520	delete	
91-32	13521-13525	data	
91-33	13525-13526	.	

#Text=When using InnoDB tables on the highload progect, the Query Cache on the contrary, only interferes and dramatically degrades server performance.
92-1	13527-13531	When	
92-2	13532-13537	using	
92-3	13538-13544	InnoDB	
92-4	13545-13551	tables	
92-5	13552-13554	on	
92-6	13555-13558	the	
92-7	13559-13567	highload	
92-8	13568-13575	progect	
92-9	13575-13576	,	
92-10	13577-13580	the	
92-11	13581-13586	Query	
92-12	13587-13592	Cache	
92-13	13593-13595	on	
92-14	13596-13599	the	
92-15	13600-13608	contrary	
92-16	13608-13609	,	
92-17	13610-13614	only	
92-18	13615-13625	interferes	
92-19	13626-13629	and	
92-20	13630-13642	dramatically	
92-21	13643-13651	degrades	
92-22	13652-13658	server	
92-23	13659-13670	performance	
92-24	13670-13671	.	

#Text=Therefore, Query Cache is disabled by default in new versions of the MySQL Server.
93-1	13672-13681	Therefore	
93-2	13681-13682	,	
93-3	13683-13688	Query	
93-4	13689-13694	Cache	
93-5	13695-13697	is	
93-6	13698-13706	disabled	
93-7	13707-13709	by	
93-8	13710-13717	default	
93-9	13718-13720	in	
93-10	13721-13724	new	
93-11	13725-13733	versions	
93-12	13734-13736	of	
93-13	13737-13740	the	
93-14	13741-13746	MySQL	
93-15	13747-13753	Server	
93-16	13753-13754	.	

#Text=Reply
#Text=Jan Reilink
#Text=3 June 2020 at 08:45
#Text=Hi Dmitry, thank you for your comment.
94-1	13755-13760	Reply	
94-2	13761-13764	Jan	
94-3	13765-13772	Reilink	
94-4	13773-13774	3	
94-5	13775-13779	June	
94-6	13780-13784	2020	
94-7	13785-13787	at	
94-8	13788-13790	08	
94-9	13790-13791	:	
94-10	13791-13793	45	
94-11	13794-13796	Hi	
94-12	13797-13803	Dmitry	
94-13	13803-13804	,	
94-14	13805-13810	thank	
94-15	13811-13814	you	
94-16	13815-13818	for	
94-17	13819-13823	your	
94-18	13824-13831	comment	
94-19	13831-13832	.	

#Text=I thought I removed all references to query_cache.
95-1	13833-13834	I	
95-2	13835-13842	thought	
95-3	13843-13844	I	
95-4	13845-13852	removed	
95-5	13853-13856	all	
95-6	13857-13867	references	
95-7	13868-13870	to	
95-8	13871-13882	query_cache	
95-9	13882-13883	.	

#Text=Nowadays Query Cache is removed from MySQL, because it’s only for the MyISAM table engine and not for InnoDB.
96-1	13884-13892	Nowadays	
96-2	13893-13898	Query	
96-3	13899-13904	Cache	
96-4	13905-13907	is	
96-5	13908-13915	removed	
96-6	13916-13920	from	
96-7	13921-13926	MySQL	
96-8	13926-13927	,	
96-9	13928-13935	because	
96-10	13936-13938	it	
96-11	13938-13939	’	
96-12	13939-13940	s	
96-13	13941-13945	only	
96-14	13946-13949	for	
96-15	13950-13953	the	
96-16	13954-13960	MyISAM	
96-17	13961-13966	table	
96-18	13967-13973	engine	
96-19	13974-13977	and	
96-20	13978-13981	not	
96-21	13982-13985	for	
96-22	13986-13992	InnoDB	
96-23	13992-13993	.	

#Text=Unfortunately I forgot one, and that’s gone now.
97-1	13994-14007	Unfortunately	
97-2	14008-14009	I	
97-3	14010-14016	forgot	
97-4	14017-14020	one	
97-5	14020-14021	,	
97-6	14022-14025	and	
97-7	14026-14030	that	
97-8	14030-14031	’	
97-9	14031-14032	s	
97-10	14033-14037	gone	
97-11	14038-14041	now	
97-12	14041-14042	.	

#Text=Reply
#Text=Unca.Alby
#Text=14 October 2019 at 21:32
#Text=I understand you used “courier” font for the configuration parameters so that they will display differently and be obvious that it’s a “computer term”, but you also need to be careful about the size of that font.
98-1	14043-14048	Reply	
98-2	14049-14058	Unca.Alby	
98-3	14059-14061	14	
98-4	14062-14069	October	
98-5	14070-14074	2019	
98-6	14075-14077	at	
98-7	14078-14080	21	
98-8	14080-14081	:	
98-9	14081-14083	32	
98-10	14084-14085	I	
98-11	14086-14096	understand	
98-12	14097-14100	you	
98-13	14101-14105	used	
98-14	14106-14107	“	
98-15	14107-14114	courier	
98-16	14114-14115	”	
98-17	14116-14120	font	
98-18	14121-14124	for	
98-19	14125-14128	the	
98-20	14129-14142	configuration	
98-21	14143-14153	parameters	
98-22	14154-14156	so	
98-23	14157-14161	that	
98-24	14162-14166	they	
98-25	14167-14171	will	
98-26	14172-14179	display	
98-27	14180-14191	differently	
98-28	14192-14195	and	
98-29	14196-14198	be	
98-30	14199-14206	obvious	
98-31	14207-14211	that	
98-32	14212-14214	it	
98-33	14214-14215	’	
98-34	14215-14216	s	
98-35	14217-14218	a	
98-36	14219-14220	“	
98-37	14220-14228	computer	
98-38	14229-14233	term	
98-39	14233-14234	”	
98-40	14234-14235	,	
98-41	14236-14239	but	
98-42	14240-14243	you	
98-43	14244-14248	also	
98-44	14249-14253	need	
98-45	14254-14256	to	
98-46	14257-14259	be	
98-47	14260-14267	careful	
98-48	14268-14273	about	
98-49	14274-14277	the	
98-50	14278-14282	size	
98-51	14283-14285	of	
98-52	14286-14290	that	
98-53	14291-14295	font	
98-54	14295-14296	.	

#Text=As it is now, the “computer terms” are HALF the size of the normal text!
99-1	14297-14299	As	
99-2	14300-14302	it	
99-3	14303-14305	is	
99-4	14306-14309	now	
99-5	14309-14310	,	
99-6	14311-14314	the	
99-7	14315-14316	“	
99-8	14316-14324	computer	
99-9	14325-14330	terms	
99-10	14330-14331	”	
99-11	14332-14335	are	
99-12	14336-14340	HALF	
99-13	14341-14344	the	
99-14	14345-14349	size	
99-15	14350-14352	of	
99-16	14353-14356	the	
99-17	14357-14363	normal	
99-18	14364-14368	text	
99-19	14368-14369	!	

#Text=It makes reading your post quite a bit more difficult.
100-1	14370-14372	It	
100-2	14373-14378	makes	
100-3	14379-14386	reading	
100-4	14387-14391	your	
100-5	14392-14396	post	
100-6	14397-14402	quite	
100-7	14403-14404	a	
100-8	14405-14408	bit	
100-9	14409-14413	more	
100-10	14414-14423	difficult	
100-11	14423-14424	.	

#Text=It’s like walking down a road with holes to trip in every few feet.
101-1	14425-14427	It	
101-2	14427-14428	’	
101-3	14428-14429	s	
101-4	14430-14434	like	
101-5	14435-14442	walking	
101-6	14443-14447	down	
101-7	14448-14449	a	
101-8	14450-14454	road	
101-9	14455-14459	with	
101-10	14460-14465	holes	
101-11	14466-14468	to	
101-12	14469-14473	trip	
101-13	14474-14476	in	
101-14	14477-14482	every	
101-15	14483-14486	few	
101-16	14487-14491	feet	
101-17	14491-14492	.	

#Text=Reply
#Text=Jan Reilink
#Text=15 October 2019 at 14:26
#Text=Thanks for your constructive criticism, I’ve increased the pre and code font-size to 16px (which was 14).
102-1	14493-14498	Reply	
102-2	14499-14502	Jan	
102-3	14503-14510	Reilink	
102-4	14511-14513	15	
102-5	14514-14521	October	
102-6	14522-14526	2019	
102-7	14527-14529	at	
102-8	14530-14532	14	
102-9	14532-14533	:	
102-10	14533-14535	26	
102-11	14536-14542	Thanks	
102-12	14543-14546	for	
102-13	14547-14551	your	
102-14	14552-14564	constructive	
102-15	14565-14574	criticism	
102-16	14574-14575	,	
102-17	14576-14577	I	
102-18	14577-14578	’	
102-19	14578-14580	ve	
102-20	14581-14590	increased	
102-21	14591-14594	the	
102-22	14595-14598	pre	
102-23	14599-14602	and	
102-24	14603-14607	code	
102-25	14608-14617	font-size	
102-26	14618-14620	to	
102-27	14621-14625	16px	
102-28	14626-14627	(	
102-29	14627-14632	which	
102-30	14633-14636	was	
102-31	14637-14639	14	
102-32	14639-14640	)	
102-33	14640-14641	.	

#Text=Is this better?
103-1	14642-14644	Is	
103-2	14645-14649	this	
103-3	14650-14656	better	
103-4	14656-14657	?	

#Text=Reply
#Text=Leave a Reply Cancel replyYour email address will not be published.
104-1	14658-14663	Reply	
104-2	14664-14669	Leave	
104-3	14670-14671	a	
104-4	14672-14677	Reply	
104-5	14678-14684	Cancel	
104-6	14685-14694	replyYour	
104-7	14695-14700	email	
104-8	14701-14708	address	
104-9	14709-14713	will	
104-10	14714-14717	not	
104-11	14718-14720	be	
104-12	14721-14730	published	
104-13	14730-14731	.	

#Text=Required fields are marked *Comment Name *
#Text=Email *
#Text=Website
#Text=Save my name, email, and website in this browser for the next time I comment.
#Text=previousKMS Migration from 2008 R2 to Windows Server 2012 R2 and KMS Activation Known IssuesnextSSL in WordPress: how to move WordPress to HTTPS?
105-1	14732-14740	Required	
105-2	14741-14747	fields	
105-3	14748-14751	are	
105-4	14752-14758	marked	
105-5	14759-14760	*	
105-6	14760-14767	Comment	
105-7	14768-14772	Name	
105-8	14773-14774	*	
105-9	14775-14780	Email	
105-10	14781-14782	*	
105-11	14783-14790	Website	
105-12	14791-14795	Save	
105-13	14796-14798	my	
105-14	14799-14803	name	
105-15	14803-14804	,	
105-16	14805-14810	email	
105-17	14810-14811	,	
105-18	14812-14815	and	
105-19	14816-14823	website	
105-20	14824-14826	in	
105-21	14827-14831	this	
105-22	14832-14839	browser	
105-23	14840-14843	for	
105-24	14844-14847	the	
105-25	14848-14852	next	
105-26	14853-14857	time	
105-27	14858-14859	I	
105-28	14860-14867	comment	
105-29	14867-14868	.	
105-30	14869-14880	previousKMS	
105-31	14881-14890	Migration	
105-32	14891-14895	from	
105-33	14896-14900	2008	
105-34	14901-14903	R2	
105-35	14904-14906	to	
105-36	14907-14914	Windows	
105-37	14915-14921	Server	
105-38	14922-14926	2012	
105-39	14927-14929	R2	
105-40	14930-14933	and	
105-41	14934-14937	KMS	
105-42	14938-14948	Activation	
105-43	14949-14954	Known	
105-44	14955-14968	IssuesnextSSL	
105-45	14969-14971	in	
105-46	14972-14981	WordPress	
105-47	14981-14982	:	
105-48	14983-14986	how	
105-49	14987-14989	to	
105-50	14990-14994	move	
105-51	14995-15004	WordPress	
105-52	15005-15007	to	
105-53	15008-15013	HTTPS	
105-54	15013-15014	?	

#Text=The definitive guide
#Text=NavigationHome
#Text=Welcome
#Text=Privacy Policy
#Text=Code base
#Text=PowerShell
#Text=GNU Linux
#Text=MySQL
#Text=Security
#Text=Windows Server
#Text=WordPress
#Text=Donate
#Text=Recent Posts
#Text=Getting more out your Windows Performance Counters monitoring for web applications – part 3
#Text=ASP.NET web application monitoring in Zabbix, part 2
#Text=Monitor IIS application pools in Zabbix, part 1
#Text=Disable Joomla Contacts component (com_contact) in MySQL / phpMyAdmin
#Text=Disable WordPress XCloner Plugin logger in MySQL / phpMyAdmin
#Text=Force HSTS in Apache .htaccess
#Text=.NET Core 2.1, 3.1, and .NET 5.0 updates are coming to Microsoft Update
#Text=Proudly hosted by
#Text=Tags.htaccess (18)
#Text=AppCmd (10)
#Text=ASP.NET (15)
#Text=Bash (19)
#Text=IIS (61)
#Text=linux (21)
#Text=MySQL (34)
#Text=OPcache (8)
#Text=optimization (18)
#Text=performance (14)
#Text=PHP (55)
#Text=plugin (14)
#Text=PowerShell (49)
#Text=security (44)
#Text=SQL Server (10)
#Text=SSL (15)
#Text=URL Rewrite (17)
#Text=web.config (21)
#Text=web application security (17)
#Text=website (17)
#Text=WinCache (9)
#Text=Windows (17)
#Text=Windows 10 (9)
#Text=Windows Server 2016 (8)
#Text=WordPress (30)
#Text=Tip: also visit
#Text=Sysadmins of the North
#Text=ITFAQ-nl, internet en computers uitgelegd in eenvoudig Nederlands!
106-1	15015-15018	The	
106-2	15019-15029	definitive	
106-3	15030-15035	guide	
106-4	15036-15050	NavigationHome	
106-5	15051-15058	Welcome	
106-6	15059-15066	Privacy	
106-7	15067-15073	Policy	
106-8	15074-15078	Code	
106-9	15079-15083	base	
106-10	15084-15094	PowerShell	
106-11	15095-15098	GNU	
106-12	15099-15104	Linux	
106-13	15105-15110	MySQL	
106-14	15111-15119	Security	
106-15	15120-15127	Windows	
106-16	15128-15134	Server	
106-17	15135-15144	WordPress	
106-18	15145-15151	Donate	
106-19	15152-15158	Recent	
106-20	15159-15164	Posts	
106-21	15165-15172	Getting	
106-22	15173-15177	more	
106-23	15178-15181	out	
106-24	15182-15186	your	
106-25	15187-15194	Windows	
106-26	15195-15206	Performance	
106-27	15207-15215	Counters	
106-28	15216-15226	monitoring	
106-29	15227-15230	for	
106-30	15231-15234	web	
106-31	15235-15247	applications	
106-32	15248-15249	–	
106-33	15250-15254	part	
106-34	15255-15256	3	
106-35	15257-15264	ASP.NET	
106-36	15265-15268	web	
106-37	15269-15280	application	
106-38	15281-15291	monitoring	
106-39	15292-15294	in	
106-40	15295-15301	Zabbix	
106-41	15301-15302	,	
106-42	15303-15307	part	
106-43	15308-15309	2	
106-44	15310-15317	Monitor	
106-45	15318-15321	IIS	
106-46	15322-15333	application	
106-47	15334-15339	pools	
106-48	15340-15342	in	
106-49	15343-15349	Zabbix	
106-50	15349-15350	,	
106-51	15351-15355	part	
106-52	15356-15357	1	
106-53	15358-15365	Disable	
106-54	15366-15372	Joomla	
106-55	15373-15381	Contacts	
106-56	15382-15391	component	
106-57	15392-15393	(	
106-58	15393-15404	com_contact	
106-59	15404-15405	)	
106-60	15406-15408	in	
106-61	15409-15414	MySQL	
106-62	15415-15416	/	
106-63	15417-15427	phpMyAdmin	
106-64	15428-15435	Disable	
106-65	15436-15445	WordPress	
106-66	15446-15453	XCloner	
106-67	15454-15460	Plugin	
106-68	15461-15467	logger	
106-69	15468-15470	in	
106-70	15471-15476	MySQL	
106-71	15477-15478	/	
106-72	15479-15489	phpMyAdmin	
106-73	15490-15495	Force	
106-74	15496-15500	HSTS	
106-75	15501-15503	in	
106-76	15504-15510	Apache	
106-77	15511-15512	.	
106-78	15512-15520	htaccess	
106-79	15521-15522	.	
106-80	15522-15525	NET	
106-81	15526-15530	Core	
106-82	15531-15534	2.1	
106-83	15534-15535	,	
106-84	15536-15539	3.1	
106-85	15539-15540	,	
106-86	15541-15544	and	
106-87	15545-15546	.	
106-88	15546-15549	NET	
106-89	15550-15553	5.0	
106-90	15554-15561	updates	
106-91	15562-15565	are	
106-92	15566-15572	coming	
106-93	15573-15575	to	
106-94	15576-15585	Microsoft	
106-95	15586-15592	Update	
106-96	15593-15600	Proudly	
106-97	15601-15607	hosted	
106-98	15608-15610	by	
106-99	15611-15624	Tags.htaccess	
106-100	15625-15626	(	
106-101	15626-15628	18	
106-102	15628-15629	)	
106-103	15630-15636	AppCmd	
106-104	15637-15638	(	
106-105	15638-15640	10	
106-106	15640-15641	)	
106-107	15642-15649	ASP.NET	
106-108	15650-15651	(	
106-109	15651-15653	15	
106-110	15653-15654	)	
106-111	15655-15659	Bash	
106-112	15660-15661	(	
106-113	15661-15663	19	
106-114	15663-15664	)	
106-115	15665-15668	IIS	
106-116	15669-15670	(	
106-117	15670-15672	61	
106-118	15672-15673	)	
106-119	15674-15679	linux	
106-120	15680-15681	(	
106-121	15681-15683	21	
106-122	15683-15684	)	
106-123	15685-15690	MySQL	
106-124	15691-15692	(	
106-125	15692-15694	34	
106-126	15694-15695	)	
106-127	15696-15703	OPcache	
106-128	15704-15705	(	
106-129	15705-15706	8	
106-130	15706-15707	)	
106-131	15708-15720	optimization	
106-132	15721-15722	(	
106-133	15722-15724	18	
106-134	15724-15725	)	
106-135	15726-15737	performance	
106-136	15738-15739	(	
106-137	15739-15741	14	
106-138	15741-15742	)	
106-139	15743-15746	PHP	
106-140	15747-15748	(	
106-141	15748-15750	55	
106-142	15750-15751	)	
106-143	15752-15758	plugin	
106-144	15759-15760	(	
106-145	15760-15762	14	
106-146	15762-15763	)	
106-147	15764-15774	PowerShell	
106-148	15775-15776	(	
106-149	15776-15778	49	
106-150	15778-15779	)	
106-151	15780-15788	security	
106-152	15789-15790	(	
106-153	15790-15792	44	
106-154	15792-15793	)	
106-155	15794-15797	SQL	
106-156	15798-15804	Server	
106-157	15805-15806	(	
106-158	15806-15808	10	
106-159	15808-15809	)	
106-160	15810-15813	SSL	
106-161	15814-15815	(	
106-162	15815-15817	15	
106-163	15817-15818	)	
106-164	15819-15822	URL	
106-165	15823-15830	Rewrite	
106-166	15831-15832	(	
106-167	15832-15834	17	
106-168	15834-15835	)	
106-169	15836-15846	web.config	
106-170	15847-15848	(	
106-171	15848-15850	21	
106-172	15850-15851	)	
106-173	15852-15855	web	
106-174	15856-15867	application	
106-175	15868-15876	security	
106-176	15877-15878	(	
106-177	15878-15880	17	
106-178	15880-15881	)	
106-179	15882-15889	website	
106-180	15890-15891	(	
106-181	15891-15893	17	
106-182	15893-15894	)	
106-183	15895-15903	WinCache	
106-184	15904-15905	(	
106-185	15905-15906	9	
106-186	15906-15907	)	
106-187	15908-15915	Windows	
106-188	15916-15917	(	
106-189	15917-15919	17	
106-190	15919-15920	)	
106-191	15921-15928	Windows	
106-192	15929-15931	10	
106-193	15932-15933	(	
106-194	15933-15934	9	
106-195	15934-15935	)	
106-196	15936-15943	Windows	
106-197	15944-15950	Server	
106-198	15951-15955	2016	
106-199	15956-15957	(	
106-200	15957-15958	8	
106-201	15958-15959	)	
106-202	15960-15969	WordPress	
106-203	15970-15971	(	
106-204	15971-15973	30	
106-205	15973-15974	)	
106-206	15975-15978	Tip	
106-207	15978-15979	:	
106-208	15980-15984	also	
106-209	15985-15990	visit	
106-210	15991-16000	Sysadmins	
106-211	16001-16003	of	
106-212	16004-16007	the	
106-213	16008-16013	North	
106-214	16014-16022	ITFAQ-nl	
106-215	16022-16023	,	
106-216	16024-16032	internet	
106-217	16033-16035	en	
106-218	16036-16045	computers	
106-219	16046-16055	uitgelegd	
106-220	16056-16058	in	
106-221	16059-16068	eenvoudig	
106-222	16069-16079	Nederlands	
106-223	16079-16080	!	

#Text=WordPress hosting
#Text=ASP.NET & ASP.NET Core hosting – @Vevida
#Text=Reilink.nl
#Text=Search for:
#Text=Thanks!
107-1	16081-16090	WordPress	
107-2	16091-16098	hosting	
107-3	16099-16106	ASP.NET	
107-4	16107-16108	&	
107-5	16109-16116	ASP.NET	
107-6	16117-16121	Core	
107-7	16122-16129	hosting	
107-8	16130-16131	–	
107-9	16132-16133	@	
107-10	16133-16139	Vevida	
107-11	16140-16150	Reilink.nl	
107-12	16151-16157	Search	
107-13	16158-16161	for	
107-14	16161-16162	:	
107-15	16163-16169	Thanks	
107-16	16169-16170	!	

#Text=Thank you for your visit!
108-1	16171-16176	Thank	
108-2	16177-16180	you	
108-3	16181-16184	for	
108-4	16185-16189	your	
108-5	16190-16195	visit	
108-6	16195-16196	!	

#Text=Don’t forget to share this site with your family, friends and co-workers :-)
#Text=Donations are more than welcome and will be used for research new posts and hosting.
109-1	16197-16200	Don	
109-2	16200-16201	’	
109-3	16201-16202	t	
109-4	16203-16209	forget	
109-5	16210-16212	to	
109-6	16213-16218	share	
109-7	16219-16223	this	
109-8	16224-16228	site	
109-9	16229-16233	with	
109-10	16234-16238	your	
109-11	16239-16245	family	
109-12	16245-16246	,	
109-13	16247-16254	friends	
109-14	16255-16258	and	
109-15	16259-16269	co-workers	
109-16	16270-16271	:	
109-17	16271-16272	-	
109-18	16272-16273	)	
109-19	16274-16283	Donations	
109-20	16284-16287	are	
109-21	16288-16292	more	
109-22	16293-16297	than	
109-23	16298-16305	welcome	
109-24	16306-16309	and	
109-25	16310-16314	will	
109-26	16315-16317	be	
109-27	16318-16322	used	
109-28	16323-16326	for	
109-29	16327-16335	research	
109-30	16336-16339	new	
109-31	16340-16345	posts	
109-32	16346-16349	and	
109-33	16350-16357	hosting	
109-34	16357-16358	.	

#Text=If you like this site or encourage its development, please use the form above.
110-1	16359-16361	If	
110-2	16362-16365	you	
110-3	16366-16370	like	
110-4	16371-16375	this	
110-5	16376-16380	site	
110-6	16381-16383	or	
110-7	16384-16393	encourage	
110-8	16394-16397	its	
110-9	16398-16409	development	
110-10	16409-16410	,	
110-11	16411-16417	please	
110-12	16418-16421	use	
110-13	16422-16425	the	
110-14	16426-16430	form	
110-15	16431-16436	above	
110-16	16436-16437	.	

#Text=Or you can transfer a direct donation via Paypal or bank wire-transfer IBAN: NL31 ABNA 0432217258 (Jan Reilink).
111-1	16438-16440	Or	
111-2	16441-16444	you	
111-3	16445-16448	can	
111-4	16449-16457	transfer	
111-5	16458-16459	a	
111-6	16460-16466	direct	
111-7	16467-16475	donation	
111-8	16476-16479	via	
111-9	16480-16486	Paypal	
111-10	16487-16489	or	
111-11	16490-16494	bank	
111-12	16495-16508	wire-transfer	
111-13	16509-16513	IBAN	
111-14	16513-16514	:	
111-15	16515-16519	NL31	
111-16	16520-16524	ABNA	
111-17	16525-16535	0432217258	
111-18	16536-16537	(	
111-19	16537-16540	Jan	
111-20	16541-16548	Reilink	
111-21	16548-16549	)	
111-22	16549-16550	.	

#Text=Thanks!
112-1	16551-16557	Thanks	
112-2	16557-16558	!	

#Text=:-)
#Text=Search
#Text=Search for:
#Text=Archives Archives
#Text=Select Month
#Text=April 2021  (1)
#Text=February 2021  (2)
#Text=January 2021  (2)
#Text=December 2020  (2)
#Text=November 2020  (1)
#Text=October 2020  (2)
#Text=September 2020  (1)
#Text=August 2020  (1)
#Text=July 2020  (1)
#Text=June 2020  (1)
#Text=May 2020  (3)
#Text=March 2020  (1)
#Text=February 2020  (1)
#Text=January 2020  (3)
#Text=December 2019  (2)
#Text=November 2019  (1)
#Text=October 2019  (1)
#Text=September 2019  (1)
#Text=August 2019  (1)
#Text=June 2019  (1)
#Text=April 2019  (1)
#Text=March 2019  (1)
#Text=December 2018  (1)
#Text=November 2018  (3)
#Text=October 2018  (4)
#Text=August 2018  (2)
#Text=March 2018  (2)
#Text=February 2018  (3)
#Text=January 2018  (1)
#Text=September 2017  (1)
#Text=August 2017  (4)
#Text=July 2017  (1)
#Text=June 2017  (1)
#Text=May 2017  (7)
#Text=March 2017  (1)
#Text=December 2016  (1)
#Text=October 2016  (5)
#Text=September 2016  (2)
#Text=August 2016  (4)
#Text=July 2016  (2)
#Text=June 2016  (2)
#Text=May 2016  (6)
#Text=April 2016  (4)
#Text=March 2016  (1)
#Text=February 2016  (4)
#Text=January 2016  (1)
#Text=December 2015  (4)
#Text=November 2015  (2)
#Text=October 2015  (2)
#Text=September 2015  (1)
#Text=August 2015  (1)
#Text=July 2015  (3)
#Text=June 2015  (2)
#Text=April 2015  (5)
#Text=March 2015  (4)
#Text=February 2015  (2)
#Text=January 2015  (4)
#Text=December 2014  (4)
#Text=November 2014  (3)
#Text=October 2014  (4)
#Text=September 2014  (4)
#Text=August 2014  (3)
#Text=July 2014  (5)
#Text=June 2014  (9)
#Text=May 2014  (9)
#Text=April 2014  (12)
#Text=March 2014  (2)
#Text=February 2014  (1)
#Text=January 2014  (3)
#Text=November 2013  (3)
#Text=October 2013  (1)
#Text=September 2013  (2)
#Text=July 2013  (4)
#Text=June 2013  (3)
#Text=May 2013  (1)
#Text=April 2013  (1)
#Text=March 2013  (2)
#Text=February 2013  (6)
#Text=January 2013  (1)
#Text=September 2012  (1)
#Text=August 2012  (1)
#Text=July 2012  (2)
#Text=May 2012  (1)
#Text=March 2012  (1)
#Text=January 2012  (1)
#Text=December 2011  (1)
#Text=November 2011  (3)
#Text=October 2011  (1)
#Text=September 2011  (1)
#Text=August 2011  (2)
#Text=Neve | Powered by WordPress
#Text=Home
#Text=Code base
#Text=GNU Linux
#Text=Security
#Text=Windows Server
#Text=WordPress
#Text=Donate
113-1	16559-16560	:	
113-2	16560-16561	-	
113-3	16561-16562	)	
113-4	16563-16569	Search	
113-5	16570-16576	Search	
113-6	16577-16580	for	
113-7	16580-16581	:	
113-8	16582-16590	Archives	
113-9	16591-16599	Archives	
113-10	16600-16606	Select	
113-11	16607-16612	Month	
113-12	16613-16618	April	
113-13	16619-16623	2021	
113-14	16624-16625	 	
113-15	16625-16626	(	
113-16	16626-16627	1	
113-17	16627-16628	)	
113-18	16629-16637	February	
113-19	16638-16642	2021	
113-20	16643-16644	 	
113-21	16644-16645	(	
113-22	16645-16646	2	
113-23	16646-16647	)	
113-24	16648-16655	January	
113-25	16656-16660	2021	
113-26	16661-16662	 	
113-27	16662-16663	(	
113-28	16663-16664	2	
113-29	16664-16665	)	
113-30	16666-16674	December	
113-31	16675-16679	2020	
113-32	16680-16681	 	
113-33	16681-16682	(	
113-34	16682-16683	2	
113-35	16683-16684	)	
113-36	16685-16693	November	
113-37	16694-16698	2020	
113-38	16699-16700	 	
113-39	16700-16701	(	
113-40	16701-16702	1	
113-41	16702-16703	)	
113-42	16704-16711	October	
113-43	16712-16716	2020	
113-44	16717-16718	 	
113-45	16718-16719	(	
113-46	16719-16720	2	
113-47	16720-16721	)	
113-48	16722-16731	September	
113-49	16732-16736	2020	
113-50	16737-16738	 	
113-51	16738-16739	(	
113-52	16739-16740	1	
113-53	16740-16741	)	
113-54	16742-16748	August	
113-55	16749-16753	2020	
113-56	16754-16755	 	
113-57	16755-16756	(	
113-58	16756-16757	1	
113-59	16757-16758	)	
113-60	16759-16763	July	
113-61	16764-16768	2020	
113-62	16769-16770	 	
113-63	16770-16771	(	
113-64	16771-16772	1	
113-65	16772-16773	)	
113-66	16774-16778	June	
113-67	16779-16783	2020	
113-68	16784-16785	 	
113-69	16785-16786	(	
113-70	16786-16787	1	
113-71	16787-16788	)	
113-72	16789-16792	May	
113-73	16793-16797	2020	
113-74	16798-16799	 	
113-75	16799-16800	(	
113-76	16800-16801	3	
113-77	16801-16802	)	
113-78	16803-16808	March	
113-79	16809-16813	2020	
113-80	16814-16815	 	
113-81	16815-16816	(	
113-82	16816-16817	1	
113-83	16817-16818	)	
113-84	16819-16827	February	
113-85	16828-16832	2020	
113-86	16833-16834	 	
113-87	16834-16835	(	
113-88	16835-16836	1	
113-89	16836-16837	)	
113-90	16838-16845	January	
113-91	16846-16850	2020	
113-92	16851-16852	 	
113-93	16852-16853	(	
113-94	16853-16854	3	
113-95	16854-16855	)	
113-96	16856-16864	December	
113-97	16865-16869	2019	
113-98	16870-16871	 	
113-99	16871-16872	(	
113-100	16872-16873	2	
113-101	16873-16874	)	
113-102	16875-16883	November	
113-103	16884-16888	2019	
113-104	16889-16890	 	
113-105	16890-16891	(	
113-106	16891-16892	1	
113-107	16892-16893	)	
113-108	16894-16901	October	
113-109	16902-16906	2019	
113-110	16907-16908	 	
113-111	16908-16909	(	
113-112	16909-16910	1	
113-113	16910-16911	)	
113-114	16912-16921	September	
113-115	16922-16926	2019	
113-116	16927-16928	 	
113-117	16928-16929	(	
113-118	16929-16930	1	
113-119	16930-16931	)	
113-120	16932-16938	August	
113-121	16939-16943	2019	
113-122	16944-16945	 	
113-123	16945-16946	(	
113-124	16946-16947	1	
113-125	16947-16948	)	
113-126	16949-16953	June	
113-127	16954-16958	2019	
113-128	16959-16960	 	
113-129	16960-16961	(	
113-130	16961-16962	1	
113-131	16962-16963	)	
113-132	16964-16969	April	
113-133	16970-16974	2019	
113-134	16975-16976	 	
113-135	16976-16977	(	
113-136	16977-16978	1	
113-137	16978-16979	)	
113-138	16980-16985	March	
113-139	16986-16990	2019	
113-140	16991-16992	 	
113-141	16992-16993	(	
113-142	16993-16994	1	
113-143	16994-16995	)	
113-144	16996-17004	December	
113-145	17005-17009	2018	
113-146	17010-17011	 	
113-147	17011-17012	(	
113-148	17012-17013	1	
113-149	17013-17014	)	
113-150	17015-17023	November	
113-151	17024-17028	2018	
113-152	17029-17030	 	
113-153	17030-17031	(	
113-154	17031-17032	3	
113-155	17032-17033	)	
113-156	17034-17041	October	
113-157	17042-17046	2018	
113-158	17047-17048	 	
113-159	17048-17049	(	
113-160	17049-17050	4	
113-161	17050-17051	)	
113-162	17052-17058	August	
113-163	17059-17063	2018	
113-164	17064-17065	 	
113-165	17065-17066	(	
113-166	17066-17067	2	
113-167	17067-17068	)	
113-168	17069-17074	March	
113-169	17075-17079	2018	
113-170	17080-17081	 	
113-171	17081-17082	(	
113-172	17082-17083	2	
113-173	17083-17084	)	
113-174	17085-17093	February	
113-175	17094-17098	2018	
113-176	17099-17100	 	
113-177	17100-17101	(	
113-178	17101-17102	3	
113-179	17102-17103	)	
113-180	17104-17111	January	
113-181	17112-17116	2018	
113-182	17117-17118	 	
113-183	17118-17119	(	
113-184	17119-17120	1	
113-185	17120-17121	)	
113-186	17122-17131	September	
113-187	17132-17136	2017	
113-188	17137-17138	 	
113-189	17138-17139	(	
113-190	17139-17140	1	
113-191	17140-17141	)	
113-192	17142-17148	August	
113-193	17149-17153	2017	
113-194	17154-17155	 	
113-195	17155-17156	(	
113-196	17156-17157	4	
113-197	17157-17158	)	
113-198	17159-17163	July	
113-199	17164-17168	2017	
113-200	17169-17170	 	
113-201	17170-17171	(	
113-202	17171-17172	1	
113-203	17172-17173	)	
113-204	17174-17178	June	
113-205	17179-17183	2017	
113-206	17184-17185	 	
113-207	17185-17186	(	
113-208	17186-17187	1	
113-209	17187-17188	)	
113-210	17189-17192	May	
113-211	17193-17197	2017	
113-212	17198-17199	 	
113-213	17199-17200	(	
113-214	17200-17201	7	
113-215	17201-17202	)	
113-216	17203-17208	March	
113-217	17209-17213	2017	
113-218	17214-17215	 	
113-219	17215-17216	(	
113-220	17216-17217	1	
113-221	17217-17218	)	
113-222	17219-17227	December	
113-223	17228-17232	2016	
113-224	17233-17234	 	
113-225	17234-17235	(	
113-226	17235-17236	1	
113-227	17236-17237	)	
113-228	17238-17245	October	
113-229	17246-17250	2016	
113-230	17251-17252	 	
113-231	17252-17253	(	
113-232	17253-17254	5	
113-233	17254-17255	)	
113-234	17256-17265	September	
113-235	17266-17270	2016	
113-236	17271-17272	 	
113-237	17272-17273	(	
113-238	17273-17274	2	
113-239	17274-17275	)	
113-240	17276-17282	August	
113-241	17283-17287	2016	
113-242	17288-17289	 	
113-243	17289-17290	(	
113-244	17290-17291	4	
113-245	17291-17292	)	
113-246	17293-17297	July	
113-247	17298-17302	2016	
113-248	17303-17304	 	
113-249	17304-17305	(	
113-250	17305-17306	2	
113-251	17306-17307	)	
113-252	17308-17312	June	
113-253	17313-17317	2016	
113-254	17318-17319	 	
113-255	17319-17320	(	
113-256	17320-17321	2	
113-257	17321-17322	)	
113-258	17323-17326	May	
113-259	17327-17331	2016	
113-260	17332-17333	 	
113-261	17333-17334	(	
113-262	17334-17335	6	
113-263	17335-17336	)	
113-264	17337-17342	April	
113-265	17343-17347	2016	
113-266	17348-17349	 	
113-267	17349-17350	(	
113-268	17350-17351	4	
113-269	17351-17352	)	
113-270	17353-17358	March	
113-271	17359-17363	2016	
113-272	17364-17365	 	
113-273	17365-17366	(	
113-274	17366-17367	1	
113-275	17367-17368	)	
113-276	17369-17377	February	
113-277	17378-17382	2016	
113-278	17383-17384	 	
113-279	17384-17385	(	
113-280	17385-17386	4	
113-281	17386-17387	)	
113-282	17388-17395	January	
113-283	17396-17400	2016	
113-284	17401-17402	 	
113-285	17402-17403	(	
113-286	17403-17404	1	
113-287	17404-17405	)	
113-288	17406-17414	December	
113-289	17415-17419	2015	
113-290	17420-17421	 	
113-291	17421-17422	(	
113-292	17422-17423	4	
113-293	17423-17424	)	
113-294	17425-17433	November	
113-295	17434-17438	2015	
113-296	17439-17440	 	
113-297	17440-17441	(	
113-298	17441-17442	2	
113-299	17442-17443	)	
113-300	17444-17451	October	
113-301	17452-17456	2015	
113-302	17457-17458	 	
113-303	17458-17459	(	
113-304	17459-17460	2	
113-305	17460-17461	)	
113-306	17462-17471	September	
113-307	17472-17476	2015	
113-308	17477-17478	 	
113-309	17478-17479	(	
113-310	17479-17480	1	
113-311	17480-17481	)	
113-312	17482-17488	August	
113-313	17489-17493	2015	
113-314	17494-17495	 	
113-315	17495-17496	(	
113-316	17496-17497	1	
113-317	17497-17498	)	
113-318	17499-17503	July	
113-319	17504-17508	2015	
113-320	17509-17510	 	
113-321	17510-17511	(	
113-322	17511-17512	3	
113-323	17512-17513	)	
113-324	17514-17518	June	
113-325	17519-17523	2015	
113-326	17524-17525	 	
113-327	17525-17526	(	
113-328	17526-17527	2	
113-329	17527-17528	)	
113-330	17529-17534	April	
113-331	17535-17539	2015	
113-332	17540-17541	 	
113-333	17541-17542	(	
113-334	17542-17543	5	
113-335	17543-17544	)	
113-336	17545-17550	March	
113-337	17551-17555	2015	
113-338	17556-17557	 	
113-339	17557-17558	(	
113-340	17558-17559	4	
113-341	17559-17560	)	
113-342	17561-17569	February	
113-343	17570-17574	2015	
113-344	17575-17576	 	
113-345	17576-17577	(	
113-346	17577-17578	2	
113-347	17578-17579	)	
113-348	17580-17587	January	
113-349	17588-17592	2015	
113-350	17593-17594	 	
113-351	17594-17595	(	
113-352	17595-17596	4	
113-353	17596-17597	)	
113-354	17598-17606	December	
113-355	17607-17611	2014	
113-356	17612-17613	 	
113-357	17613-17614	(	
113-358	17614-17615	4	
113-359	17615-17616	)	
113-360	17617-17625	November	
113-361	17626-17630	2014	
113-362	17631-17632	 	
113-363	17632-17633	(	
113-364	17633-17634	3	
113-365	17634-17635	)	
113-366	17636-17643	October	
113-367	17644-17648	2014	
113-368	17649-17650	 	
113-369	17650-17651	(	
113-370	17651-17652	4	
113-371	17652-17653	)	
113-372	17654-17663	September	
113-373	17664-17668	2014	
113-374	17669-17670	 	
113-375	17670-17671	(	
113-376	17671-17672	4	
113-377	17672-17673	)	
113-378	17674-17680	August	
113-379	17681-17685	2014	
113-380	17686-17687	 	
113-381	17687-17688	(	
113-382	17688-17689	3	
113-383	17689-17690	)	
113-384	17691-17695	July	
113-385	17696-17700	2014	
113-386	17701-17702	 	
113-387	17702-17703	(	
113-388	17703-17704	5	
113-389	17704-17705	)	
113-390	17706-17710	June	
113-391	17711-17715	2014	
113-392	17716-17717	 	
113-393	17717-17718	(	
113-394	17718-17719	9	
113-395	17719-17720	)	
113-396	17721-17724	May	
113-397	17725-17729	2014	
113-398	17730-17731	 	
113-399	17731-17732	(	
113-400	17732-17733	9	
113-401	17733-17734	)	
113-402	17735-17740	April	
113-403	17741-17745	2014	
113-404	17746-17747	 	
113-405	17747-17748	(	
113-406	17748-17750	12	
113-407	17750-17751	)	
113-408	17752-17757	March	
113-409	17758-17762	2014	
113-410	17763-17764	 	
113-411	17764-17765	(	
113-412	17765-17766	2	
113-413	17766-17767	)	
113-414	17768-17776	February	
113-415	17777-17781	2014	
113-416	17782-17783	 	
113-417	17783-17784	(	
113-418	17784-17785	1	
113-419	17785-17786	)	
113-420	17787-17794	January	
113-421	17795-17799	2014	
113-422	17800-17801	 	
113-423	17801-17802	(	
113-424	17802-17803	3	
113-425	17803-17804	)	
113-426	17805-17813	November	
113-427	17814-17818	2013	
113-428	17819-17820	 	
113-429	17820-17821	(	
113-430	17821-17822	3	
113-431	17822-17823	)	
113-432	17824-17831	October	
113-433	17832-17836	2013	
113-434	17837-17838	 	
113-435	17838-17839	(	
113-436	17839-17840	1	
113-437	17840-17841	)	
113-438	17842-17851	September	
113-439	17852-17856	2013	
113-440	17857-17858	 	
113-441	17858-17859	(	
113-442	17859-17860	2	
113-443	17860-17861	)	
113-444	17862-17866	July	
113-445	17867-17871	2013	
113-446	17872-17873	 	
113-447	17873-17874	(	
113-448	17874-17875	4	
113-449	17875-17876	)	
113-450	17877-17881	June	
113-451	17882-17886	2013	
113-452	17887-17888	 	
113-453	17888-17889	(	
113-454	17889-17890	3	
113-455	17890-17891	)	
113-456	17892-17895	May	
113-457	17896-17900	2013	
113-458	17901-17902	 	
113-459	17902-17903	(	
113-460	17903-17904	1	
113-461	17904-17905	)	
113-462	17906-17911	April	
113-463	17912-17916	2013	
113-464	17917-17918	 	
113-465	17918-17919	(	
113-466	17919-17920	1	
113-467	17920-17921	)	
113-468	17922-17927	March	
113-469	17928-17932	2013	
113-470	17933-17934	 	
113-471	17934-17935	(	
113-472	17935-17936	2	
113-473	17936-17937	)	
113-474	17938-17946	February	
113-475	17947-17951	2013	
113-476	17952-17953	 	
113-477	17953-17954	(	
113-478	17954-17955	6	
113-479	17955-17956	)	
113-480	17957-17964	January	
113-481	17965-17969	2013	
113-482	17970-17971	 	
113-483	17971-17972	(	
113-484	17972-17973	1	
113-485	17973-17974	)	
113-486	17975-17984	September	
113-487	17985-17989	2012	
113-488	17990-17991	 	
113-489	17991-17992	(	
113-490	17992-17993	1	
113-491	17993-17994	)	
113-492	17995-18001	August	
113-493	18002-18006	2012	
113-494	18007-18008	 	
113-495	18008-18009	(	
113-496	18009-18010	1	
113-497	18010-18011	)	
113-498	18012-18016	July	
113-499	18017-18021	2012	
113-500	18022-18023	 	
113-501	18023-18024	(	
113-502	18024-18025	2	
113-503	18025-18026	)	
113-504	18027-18030	May	
113-505	18031-18035	2012	
113-506	18036-18037	 	
113-507	18037-18038	(	
113-508	18038-18039	1	
113-509	18039-18040	)	
113-510	18041-18046	March	
113-511	18047-18051	2012	
113-512	18052-18053	 	
113-513	18053-18054	(	
113-514	18054-18055	1	
113-515	18055-18056	)	
113-516	18057-18064	January	
113-517	18065-18069	2012	
113-518	18070-18071	 	
113-519	18071-18072	(	
113-520	18072-18073	1	
113-521	18073-18074	)	
113-522	18075-18083	December	
113-523	18084-18088	2011	
113-524	18089-18090	 	
113-525	18090-18091	(	
113-526	18091-18092	1	
113-527	18092-18093	)	
113-528	18094-18102	November	
113-529	18103-18107	2011	
113-530	18108-18109	 	
113-531	18109-18110	(	
113-532	18110-18111	3	
113-533	18111-18112	)	
113-534	18113-18120	October	
113-535	18121-18125	2011	
113-536	18126-18127	 	
113-537	18127-18128	(	
113-538	18128-18129	1	
113-539	18129-18130	)	
113-540	18131-18140	September	
113-541	18141-18145	2011	
113-542	18146-18147	 	
113-543	18147-18148	(	
113-544	18148-18149	1	
113-545	18149-18150	)	
113-546	18151-18157	August	
113-547	18158-18162	2011	
113-548	18163-18164	 	
113-549	18164-18165	(	
113-550	18165-18166	2	
113-551	18166-18167	)	
113-552	18168-18172	Neve	
113-553	18173-18174	|	
113-554	18175-18182	Powered	
113-555	18183-18185	by	
113-556	18186-18195	WordPress	
113-557	18196-18200	Home	
113-558	18201-18205	Code	
113-559	18206-18210	base	
113-560	18211-18214	GNU	
113-561	18215-18220	Linux	
113-562	18221-18229	Security	
113-563	18230-18237	Windows	
113-564	18238-18244	Server	
113-565	18245-18254	WordPress	
113-566	18255-18261	Donate	
