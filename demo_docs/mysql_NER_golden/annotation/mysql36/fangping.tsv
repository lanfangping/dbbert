#FORMAT=WebAnno TSV 3.3


#Text=WordPress Speed Optimization Guide: Web Hosting | Jelastic
#Text=MENU
#Text=For service providers
#Text=test
#Text=Cloud Hosting Business
#Text=WordPress-as-a-Service
#Text=Kubernetes-as-a-Service
#Text=Application-as-a-Service
#Text=Current Hosting Partners
#Text=Licensing Details
#Text=Request Demo
#Text=Products
#Text=Cloud Options
#Text=Multi-Cloud
#Text=Hybrid Cloud
#Text=Private Cloud
#Text=Lite Private Cloud
#Text=Public Cloud
#Text=PaaS Editions Comparison
#Text=Services
#Text=Platform-as-a-Service
#Text=WordPress-as-a-Service
#Text=Container-as-a-Service
#Text=Kubernetes-as-a-Service
#Text=Application-as-a-Service
#Text=Marketplace
#Text=Functionality
#Text=Runtimes
#Text=Java Hosting
#Text=PHP Hosting
#Text=Node.js Hosting
#Text=Ruby Hosting
#Text=Python Hosting
#Text=Go Hosting
#Text=Windows Hosting
#Text=Features
#Text=Automatic Vertical Scaling
#Text=Horizontal Scaling
#Text=Auto-Scalable Clustering
#Text=Container Types
#Text=Supported Stacks
#Text=Automatic Hibernation
#Text=Two-Factor Authentication
#Text=Self-Service Portal
#Text=Load Balancing
#Text=Traffic Distribution
#Text=Elastic Storage
#Text=Private GitLab
#Text=Cloud Scripting
#Text=Built-In Billing
#Text=Pricing
#Text=test
#Text=Pay-Per-Use in Public Cloud
#Text=Revenue Sharing for Partners
#Text=Private & Multi-Cloud Licensing
#Text=Support
#Text=Resources
#Text=Blog
#Text=Dev Docs
#Text=Ops Docs
#Text=Cloud Scripting Docs
#Text=Video
#Text=About Us
#Text=Company
#Text=Hosting Partners List
#Text=Use Cases
#Text=Whitepapers
#Text=Events
#Text=Get in Touch
#Text=Contact
#Text=Forum
#Text=Twitter
#Text=Facebook
#Text=LinkedIn
#Text=Get Started
#Text=test
#Text=Sign Up
#Text=Request Private Cloud
#Text=Start Cloud Hosting Partnership
#Text=Request Multi-Cloud PaaS
#Text=Get Auto-Scalable Clusters
#Text=Activate Extra Functionality
#Text=WordPress Speed Optimization Guide: Web Hosting
#Text=By Tetiana Fydorenchyk |
#Text=May 28, 2020
#Text=Having a fast business website is essential for both Google ranking and overall conversion rate.
1-1	0-9	WordPress	
1-2	10-15	Speed	
1-3	16-28	Optimization	
1-4	29-34	Guide	
1-5	34-35	:	
1-6	36-39	Web	
1-7	40-47	Hosting	
1-8	48-49	|	
1-9	50-58	Jelastic	
1-10	59-63	MENU	
1-11	64-67	For	
1-12	68-75	service	
1-13	76-85	providers	
1-14	86-90	test	
1-15	91-96	Cloud	
1-16	97-104	Hosting	
1-17	105-113	Business	
1-18	114-136	WordPress-as-a-Service	
1-19	137-160	Kubernetes-as-a-Service	
1-20	161-185	Application-as-a-Service	
1-21	186-193	Current	
1-22	194-201	Hosting	
1-23	202-210	Partners	
1-24	211-220	Licensing	
1-25	221-228	Details	
1-26	229-236	Request	
1-27	237-241	Demo	
1-28	242-250	Products	
1-29	251-256	Cloud	
1-30	257-264	Options	
1-31	265-276	Multi-Cloud	
1-32	277-283	Hybrid	
1-33	284-289	Cloud	
1-34	290-297	Private	
1-35	298-303	Cloud	
1-36	304-308	Lite	
1-37	309-316	Private	
1-38	317-322	Cloud	
1-39	323-329	Public	
1-40	330-335	Cloud	
1-41	336-340	PaaS	
1-42	341-349	Editions	
1-43	350-360	Comparison	
1-44	361-369	Services	
1-45	370-391	Platform-as-a-Service	
1-46	392-414	WordPress-as-a-Service	
1-47	415-437	Container-as-a-Service	
1-48	438-461	Kubernetes-as-a-Service	
1-49	462-486	Application-as-a-Service	
1-50	487-498	Marketplace	
1-51	499-512	Functionality	
1-52	513-521	Runtimes	
1-53	522-526	Java	
1-54	527-534	Hosting	
1-55	535-538	PHP	
1-56	539-546	Hosting	
1-57	547-554	Node.js	
1-58	555-562	Hosting	
1-59	563-567	Ruby	
1-60	568-575	Hosting	
1-61	576-582	Python	
1-62	583-590	Hosting	
1-63	591-593	Go	
1-64	594-601	Hosting	
1-65	602-609	Windows	
1-66	610-617	Hosting	
1-67	618-626	Features	
1-68	627-636	Automatic	
1-69	637-645	Vertical	
1-70	646-653	Scaling	
1-71	654-664	Horizontal	
1-72	665-672	Scaling	
1-73	673-686	Auto-Scalable	
1-74	687-697	Clustering	
1-75	698-707	Container	
1-76	708-713	Types	
1-77	714-723	Supported	
1-78	724-730	Stacks	
1-79	731-740	Automatic	
1-80	741-752	Hibernation	
1-81	753-763	Two-Factor	
1-82	764-778	Authentication	
1-83	779-791	Self-Service	
1-84	792-798	Portal	
1-85	799-803	Load	
1-86	804-813	Balancing	
1-87	814-821	Traffic	
1-88	822-834	Distribution	
1-89	835-842	Elastic	
1-90	843-850	Storage	
1-91	851-858	Private	
1-92	859-865	GitLab	
1-93	866-871	Cloud	
1-94	872-881	Scripting	
1-95	882-890	Built-In	
1-96	891-898	Billing	
1-97	899-906	Pricing	
1-98	907-911	test	
1-99	912-923	Pay-Per-Use	
1-100	924-926	in	
1-101	927-933	Public	
1-102	934-939	Cloud	
1-103	940-947	Revenue	
1-104	948-955	Sharing	
1-105	956-959	for	
1-106	960-968	Partners	
1-107	969-976	Private	
1-108	977-978	&	
1-109	979-990	Multi-Cloud	
1-110	991-1000	Licensing	
1-111	1001-1008	Support	
1-112	1009-1018	Resources	
1-113	1019-1023	Blog	
1-114	1024-1027	Dev	
1-115	1028-1032	Docs	
1-116	1033-1036	Ops	
1-117	1037-1041	Docs	
1-118	1042-1047	Cloud	
1-119	1048-1057	Scripting	
1-120	1058-1062	Docs	
1-121	1063-1068	Video	
1-122	1069-1074	About	
1-123	1075-1077	Us	
1-124	1078-1085	Company	
1-125	1086-1093	Hosting	
1-126	1094-1102	Partners	
1-127	1103-1107	List	
1-128	1108-1111	Use	
1-129	1112-1117	Cases	
1-130	1118-1129	Whitepapers	
1-131	1130-1136	Events	
1-132	1137-1140	Get	
1-133	1141-1143	in	
1-134	1144-1149	Touch	
1-135	1150-1157	Contact	
1-136	1158-1163	Forum	
1-137	1164-1171	Twitter	
1-138	1172-1180	Facebook	
1-139	1181-1189	LinkedIn	
1-140	1190-1193	Get	
1-141	1194-1201	Started	
1-142	1202-1206	test	
1-143	1207-1211	Sign	
1-144	1212-1214	Up	
1-145	1215-1222	Request	
1-146	1223-1230	Private	
1-147	1231-1236	Cloud	
1-148	1237-1242	Start	
1-149	1243-1248	Cloud	
1-150	1249-1256	Hosting	
1-151	1257-1268	Partnership	
1-152	1269-1276	Request	
1-153	1277-1288	Multi-Cloud	
1-154	1289-1293	PaaS	
1-155	1294-1297	Get	
1-156	1298-1311	Auto-Scalable	
1-157	1312-1320	Clusters	
1-158	1321-1329	Activate	
1-159	1330-1335	Extra	
1-160	1336-1349	Functionality	
1-161	1350-1359	WordPress	
1-162	1360-1365	Speed	
1-163	1366-1378	Optimization	
1-164	1379-1384	Guide	
1-165	1384-1385	:	
1-166	1386-1389	Web	
1-167	1390-1397	Hosting	
1-168	1398-1400	By	
1-169	1401-1408	Tetiana	
1-170	1409-1420	Fydorenchyk	
1-171	1421-1422	|	
1-172	1423-1426	May	
1-173	1427-1429	28	
1-174	1429-1430	,	
1-175	1431-1435	2020	
1-176	1436-1442	Having	
1-177	1443-1444	a	
1-178	1445-1449	fast	
1-179	1450-1458	business	
1-180	1459-1466	website	
1-181	1467-1469	is	
1-182	1470-1479	essential	
1-183	1480-1483	for	
1-184	1484-1488	both	
1-185	1489-1495	Google	
1-186	1496-1503	ranking	
1-187	1504-1507	and	
1-188	1508-1515	overall	
1-189	1516-1526	conversion	
1-190	1527-1531	rate	
1-191	1531-1532	.	

#Text=Due to Kissmetrics, 40% of site visitors will abandon a page that takes three or more seconds to load.
2-1	1533-1536	Due	
2-2	1537-1539	to	
2-3	1540-1551	Kissmetrics	
2-4	1551-1552	,	
2-5	1553-1556	40%	
2-6	1557-1559	of	
2-7	1560-1564	site	
2-8	1565-1573	visitors	
2-9	1574-1578	will	
2-10	1579-1586	abandon	
2-11	1587-1588	a	
2-12	1589-1593	page	
2-13	1594-1598	that	
2-14	1599-1604	takes	
2-15	1605-1610	three	
2-16	1611-1613	or	
2-17	1614-1618	more	
2-18	1619-1626	seconds	
2-19	1627-1629	to	
2-20	1630-1634	load	
2-21	1634-1635	.	

#Text=Earlier, the BBC calculated that they lost an additional 10% of users for every extra second their site took to load. 
3-1	1636-1643	Earlier	
3-2	1643-1644	,	
3-3	1645-1648	the	
3-4	1649-1652	BBC	
3-5	1653-1663	calculated	
3-6	1664-1668	that	
3-7	1669-1673	they	
3-8	1674-1678	lost	
3-9	1679-1681	an	
3-10	1682-1692	additional	
3-11	1693-1696	10%	
3-12	1697-1699	of	
3-13	1700-1705	users	
3-14	1706-1709	for	
3-15	1710-1715	every	
3-16	1716-1721	extra	
3-17	1722-1728	second	
3-18	1729-1734	their	
3-19	1735-1739	site	
3-20	1740-1744	took	
3-21	1745-1747	to	
3-22	1748-1752	load	
3-23	1752-1753	.	
3-24	1753-1754	 	

#Text=In order to help our readers and customers in gaining higher speed results, we decided to publish a set of articles dedicated to the improvement of website performance using great hints from The Ultimate WordPress Speed Optimization Guide written by Johnny Nguyen. 
4-1	1754-1756	In	
4-2	1757-1762	order	
4-3	1763-1765	to	
4-4	1766-1770	help	
4-5	1771-1774	our	
4-6	1775-1782	readers	
4-7	1783-1786	and	
4-8	1787-1796	customers	
4-9	1797-1799	in	
4-10	1800-1807	gaining	
4-11	1808-1814	higher	
4-12	1815-1820	speed	
4-13	1821-1828	results	
4-14	1828-1829	,	
4-15	1830-1832	we	
4-16	1833-1840	decided	
4-17	1841-1843	to	
4-18	1844-1851	publish	
4-19	1852-1853	a	
4-20	1854-1857	set	
4-21	1858-1860	of	
4-22	1861-1869	articles	
4-23	1870-1879	dedicated	
4-24	1880-1882	to	
4-25	1883-1886	the	
4-26	1887-1898	improvement	
4-27	1899-1901	of	
4-28	1902-1909	website	
4-29	1910-1921	performance	
4-30	1922-1927	using	
4-31	1928-1933	great	
4-32	1934-1939	hints	
4-33	1940-1944	from	
4-34	1945-1948	The	
4-35	1949-1957	Ultimate	
4-36	1958-1967	WordPress	
4-37	1968-1973	Speed	
4-38	1974-1986	Optimization	
4-39	1987-1992	Guide	
4-40	1993-2000	written	
4-41	2001-2003	by	
4-42	2004-2010	Johnny	
4-43	2011-2017	Nguyen	
4-44	2017-2018	.	
4-45	2018-2019	 	

#Text=“Faster websites make more money, rank better, and improve overall user experience!”
5-1	2019-2020	“	
5-2	2020-2026	Faster	
5-3	2027-2035	websites	
5-4	2036-2040	make	
5-5	2041-2045	more	
5-6	2046-2051	money	
5-7	2051-2052	,	
5-8	2053-2057	rank	
5-9	2058-2064	better	
5-10	2064-2065	,	
5-11	2066-2069	and	
5-12	2070-2077	improve	
5-13	2078-2085	overall	
5-14	2086-2090	user	
5-15	2091-2101	experience	
5-16	2101-2102	!	
5-17	2102-2103	”	

#Text=says Johnny.Today we will start with the web hosting optimization part.
6-1	2104-2108	says	
6-2	2109-2121	Johnny.Today	
6-3	2122-2124	we	
6-4	2125-2129	will	
6-5	2130-2135	start	
6-6	2136-2140	with	
6-7	2141-2144	the	
6-8	2145-2148	web	
6-9	2149-2156	hosting	
6-10	2157-2169	optimization	
6-11	2170-2174	part	
6-12	2174-2175	.	

#Text=Each point will be marked with the level of required skills to implement and the impact it will bring.SKILL:BEGINNER – can Google and follow instructions.INTERMEDIATE – working as WordPress contractor.ADVANCED – programmer or server-admin.IMPACT:LOW – maybe 100-200ms difference.
7-1	2176-2180	Each	
7-2	2181-2186	point	
7-3	2187-2191	will	
7-4	2192-2194	be	
7-5	2195-2201	marked	
7-6	2202-2206	with	
7-7	2207-2210	the	
7-8	2211-2216	level	
7-9	2217-2219	of	
7-10	2220-2228	required	
7-11	2229-2235	skills	
7-12	2236-2238	to	
7-13	2239-2248	implement	
7-14	2249-2252	and	
7-15	2253-2256	the	
7-16	2257-2263	impact	
7-17	2264-2266	it	
7-18	2267-2271	will	
7-19	2272-2283	bring.SKILL	
7-20	2283-2284	:	
7-21	2284-2292	BEGINNER	
7-22	2293-2294	–	
7-23	2295-2298	can	
7-24	2299-2305	Google	
7-25	2306-2309	and	
7-26	2310-2316	follow	
7-27	2317-2342	instructions.INTERMEDIATE	
7-28	2343-2344	–	
7-29	2345-2352	working	
7-30	2353-2355	as	
7-31	2356-2365	WordPress	
7-32	2366-2385	contractor.ADVANCED	
7-33	2386-2387	–	
7-34	2388-2398	programmer	
7-35	2399-2401	or	
7-36	2402-2421	server-admin.IMPACT	
7-37	2421-2422	:	
7-38	2422-2425	LOW	
7-39	2426-2427	–	
7-40	2428-2433	maybe	
7-41	2434-2437	100	
7-42	2437-2438	-	
7-43	2438-2443	200ms	
7-44	2444-2454	difference	
7-45	2454-2455	.	

#Text=Possibly unnoticeable.MEDIUM – around 500ms difference.HIGH – 1 second difference or more.Your webhosting speed determines how fast it can process code, and how many visitors it can handle.
8-1	2456-2464	Possibly	
8-2	2465-2484	unnoticeable.MEDIUM	
8-3	2485-2486	–	
8-4	2487-2493	around	
8-5	2494-2499	500ms	
8-6	2500-2515	difference.HIGH	
8-7	2516-2517	–	
8-8	2518-2519	1	
8-9	2520-2526	second	
8-10	2527-2537	difference	
8-11	2538-2540	or	
8-12	2541-2550	more.Your	
8-13	2551-2561	webhosting	
8-14	2562-2567	speed	
8-15	2568-2578	determines	
8-16	2579-2582	how	
8-17	2583-2587	fast	
8-18	2588-2590	it	
8-19	2591-2594	can	
8-20	2595-2602	process	
8-21	2603-2607	code	
8-22	2607-2608	,	
8-23	2609-2612	and	
8-24	2613-2616	how	
8-25	2617-2621	many	
8-26	2622-2630	visitors	
8-27	2631-2633	it	
8-28	2634-2637	can	
8-29	2638-2644	handle	
8-30	2644-2645	.	

#Text=Compare your website to a car.
9-1	2646-2653	Compare	
9-2	2654-2658	your	
9-3	2659-2666	website	
9-4	2667-2669	to	
9-5	2670-2671	a	
9-6	2672-2675	car	
9-7	2675-2676	.	

#Text=To make a car go faster, you either A) get a stronger engine and/or B) lighten the weight.
10-1	2677-2679	To	
10-2	2680-2684	make	
10-3	2685-2686	a	
10-4	2687-2690	car	
10-5	2691-2693	go	
10-6	2694-2700	faster	
10-7	2700-2701	,	
10-8	2702-2705	you	
10-9	2706-2712	either	
10-10	2713-2714	A	
10-11	2714-2715	)	
10-12	2716-2719	get	
10-13	2720-2721	a	
10-14	2722-2730	stronger	
10-15	2731-2737	engine	
10-16	2738-2741	and	
10-17	2741-2742	/	
10-18	2742-2744	or	
10-19	2745-2746	B	
10-20	2746-2747	)	
10-21	2748-2755	lighten	
10-22	2756-2759	the	
10-23	2760-2766	weight	
10-24	2766-2767	.	

#Text=For websites, the web-server is the “engine” and the code is the”weight”.The goal is to improve our web-server “engine” while decreasing code “weight”, ok?
11-1	2768-2771	For	
11-2	2772-2780	websites	
11-3	2780-2781	,	
11-4	2782-2785	the	
11-5	2786-2796	web-server	
11-6	2797-2799	is	
11-7	2800-2803	the	
11-8	2804-2805	“	
11-9	2805-2811	engine	
11-10	2811-2812	”	
11-11	2813-2816	and	
11-12	2817-2820	the	
11-13	2821-2825	code	
11-14	2826-2828	is	
11-15	2829-2832	the	
11-16	2832-2833	”	
11-17	2833-2839	weight	
11-18	2839-2840	”	
11-19	2840-2841	.	
11-20	2841-2844	The	
11-21	2845-2849	goal	
11-22	2850-2852	is	
11-23	2853-2855	to	
11-24	2856-2863	improve	
11-25	2864-2867	our	
11-26	2868-2878	web-server	
11-27	2879-2880	“	
11-28	2880-2886	engine	
11-29	2886-2887	”	
11-30	2888-2893	while	
11-31	2894-2904	decreasing	
11-32	2905-2909	code	
11-33	2910-2911	“	
11-34	2911-2917	weight	
11-35	2917-2918	”	
11-36	2918-2919	,	
11-37	2920-2922	ok	
11-38	2922-2923	?	

#Text=Changing your webhosting is one of the easiest ways to improve speed.
12-1	2923-2931	Changing	
12-2	2932-2936	your	
12-3	2937-2947	webhosting	
12-4	2948-2950	is	
12-5	2951-2954	one	
12-6	2955-2957	of	
12-7	2958-2961	the	
12-8	2962-2969	easiest	
12-9	2970-2974	ways	
12-10	2975-2977	to	
12-11	2978-2985	improve	
12-12	2986-2991	speed	
12-13	2991-2992	.	

#Text=Those of you on cheap $5/month shared webhosting will benefit the most from moving to a managed hosting service or even your own VPS.
13-1	2993-2998	Those	
13-2	2999-3001	of	
13-3	3002-3005	you	
13-4	3006-3008	on	
13-5	3009-3014	cheap	
13-6	3015-3017	$5	
13-7	3017-3018	/	
13-8	3018-3023	month	
13-9	3024-3030	shared	
13-10	3031-3041	webhosting	
13-11	3042-3046	will	
13-12	3047-3054	benefit	
13-13	3055-3058	the	
13-14	3059-3063	most	
13-15	3064-3068	from	
13-16	3069-3075	moving	
13-17	3076-3078	to	
13-18	3079-3080	a	
13-19	3081-3088	managed	
13-20	3089-3096	hosting	
13-21	3097-3104	service	
13-22	3105-3107	or	
13-23	3108-3112	even	
13-24	3113-3117	your	
13-25	3118-3121	own	
13-26	3122-3125	VPS	
13-27	3125-3126	.	

#Text=The difference will be night and day without any site changes.
14-1	3127-3130	The	
14-2	3131-3141	difference	
14-3	3142-3146	will	
14-4	3147-3149	be	
14-5	3150-3155	night	
14-6	3156-3159	and	
14-7	3160-3163	day	
14-8	3164-3171	without	
14-9	3172-3175	any	
14-10	3176-3180	site	
14-11	3181-3188	changes	
14-12	3188-3189	.	

#Text=Moving from managed hosting to an optimized VPS or dedicated “bare metal” server will be another night-and-day jump. 
15-1	3190-3196	Moving	
15-2	3197-3201	from	
15-3	3202-3209	managed	
15-4	3210-3217	hosting	
15-5	3218-3220	to	
15-6	3221-3223	an	
15-7	3224-3233	optimized	
15-8	3234-3237	VPS	
15-9	3238-3240	or	
15-10	3241-3250	dedicated	
15-11	3251-3252	“	
15-12	3252-3256	bare	
15-13	3257-3262	metal	
15-14	3262-3263	”	
15-15	3264-3270	server	
15-16	3271-3275	will	
15-17	3276-3278	be	
15-18	3279-3286	another	
15-19	3287-3300	night-and-day	
15-20	3301-3305	jump	
15-21	3305-3306	.	
15-22	3306-3307	 	

#Text=The difference isn’t only speed but also a matter of cost (savings).
16-1	3307-3310	The	
16-2	3311-3321	difference	
16-3	3322-3325	isn	
16-4	3325-3326	’	
16-5	3326-3327	t	
16-6	3328-3332	only	
16-7	3333-3338	speed	
16-8	3339-3342	but	
16-9	3343-3347	also	
16-10	3348-3349	a	
16-11	3350-3356	matter	
16-12	3357-3359	of	
16-13	3360-3364	cost	
16-14	3365-3366	(	
16-15	3366-3373	savings	
16-16	3373-3374	)	
16-17	3374-3375	.	

#Text=A fast server can handle more visitors than a slow one.
17-1	3376-3377	A	
17-2	3378-3382	fast	
17-3	3383-3389	server	
17-4	3390-3393	can	
17-5	3394-3400	handle	
17-6	3401-3405	more	
17-7	3406-3414	visitors	
17-8	3415-3419	than	
17-9	3420-3421	a	
17-10	3422-3426	slow	
17-11	3427-3430	one	
17-12	3430-3431	.	

#Text=If your server can handle double the traffic, theoretically the bill can be twice as cheap.
18-1	3432-3434	If	
18-2	3435-3439	your	
18-3	3440-3446	server	
18-4	3447-3450	can	
18-5	3451-3457	handle	
18-6	3458-3464	double	
18-7	3465-3468	the	
18-8	3469-3476	traffic	
18-9	3476-3477	,	
18-10	3478-3491	theoretically	
18-11	3492-3495	the	
18-12	3496-3500	bill	
18-13	3501-3504	can	
18-14	3505-3507	be	
18-15	3508-3513	twice	
18-16	3514-3516	as	
18-17	3517-3522	cheap	
18-18	3522-3523	.	

#Text=Not a big deal for a small site but what about a huge ecommerce site with a $1k/month server bill?
19-1	3524-3527	Not	
19-2	3528-3529	a	
19-3	3530-3533	big	
19-4	3534-3538	deal	
19-5	3539-3542	for	
19-6	3543-3544	a	
19-7	3545-3550	small	
19-8	3551-3555	site	
19-9	3556-3559	but	
19-10	3560-3564	what	
19-11	3565-3570	about	
19-12	3571-3572	a	
19-13	3573-3577	huge	
19-14	3578-3587	ecommerce	
19-15	3588-3592	site	
19-16	3593-3597	with	
19-17	3598-3599	a	
19-18	3600-3603	$1k	
19-19	3603-3604	/	
19-20	3604-3609	month	
19-21	3610-3616	server	
19-22	3617-3621	bill	
19-23	3621-3622	?	

#Text=50% cost reduction sounds mighty attractive!
20-1	3623-3626	50%	
20-2	3627-3631	cost	
20-3	3632-3641	reduction	
20-4	3642-3648	sounds	
20-5	3649-3655	mighty	
20-6	3656-3666	attractive	
20-7	3666-3667	!	

#Text=1.
21-1	3667-3668	1	
21-2	3668-3669	.	

#Text=Choose nearby datacenter location (BEG, LOW-MED)Obviously, you should pick a server location that’s closest to your visitors.
22-1	3670-3676	Choose	
22-2	3677-3683	nearby	
22-3	3684-3694	datacenter	
22-4	3695-3703	location	
22-5	3704-3705	(	
22-6	3705-3708	BEG	
22-7	3708-3709	,	
22-8	3710-3717	LOW-MED	
22-9	3717-3718	)	
22-10	3718-3727	Obviously	
22-11	3727-3728	,	
22-12	3729-3732	you	
22-13	3733-3739	should	
22-14	3740-3744	pick	
22-15	3745-3746	a	
22-16	3747-3753	server	
22-17	3754-3762	location	
22-18	3763-3767	that	
22-19	3767-3768	’	
22-20	3768-3769	s	
22-21	3770-3777	closest	
22-22	3778-3780	to	
22-23	3781-3785	your	
22-24	3786-3794	visitors	
22-25	3794-3795	.	

#Text=Ideally, you don’t want your DNS ping time more than 100ms from the server to your visitor’s computer.
23-1	3796-3803	Ideally	
23-2	3803-3804	,	
23-3	3805-3808	you	
23-4	3809-3812	don	
23-5	3812-3813	’	
23-6	3813-3814	t	
23-7	3815-3819	want	
23-8	3820-3824	your	
23-9	3825-3828	DNS	
23-10	3829-3833	ping	
23-11	3834-3838	time	
23-12	3839-3843	more	
23-13	3844-3848	than	
23-14	3849-3854	100ms	
23-15	3855-3859	from	
23-16	3860-3863	the	
23-17	3864-3870	server	
23-18	3871-3873	to	
23-19	3874-3878	your	
23-20	3879-3886	visitor	
23-21	3886-3887	’	
23-22	3887-3888	s	
23-23	3889-3897	computer	
23-24	3897-3898	.	

#Text=There are many implications depending on your needs.Local businesses should get a server as close to their visitors as possible.
24-1	3899-3904	There	
24-2	3905-3908	are	
24-3	3909-3913	many	
24-4	3914-3926	implications	
24-5	3927-3936	depending	
24-6	3937-3939	on	
24-7	3940-3944	your	
24-8	3945-3956	needs.Local	
24-9	3957-3967	businesses	
24-10	3968-3974	should	
24-11	3975-3978	get	
24-12	3979-3980	a	
24-13	3981-3987	server	
24-14	3988-3990	as	
24-15	3991-3996	close	
24-16	3997-3999	to	
24-17	4000-4005	their	
24-18	4006-4014	visitors	
24-19	4015-4017	as	
24-20	4018-4026	possible	
24-21	4026-4027	.	

#Text=Keep it within 100ms or less, within 50ms is better.
25-1	4028-4032	Keep	
25-2	4033-4035	it	
25-3	4036-4042	within	
25-4	4043-4048	100ms	
25-5	4049-4051	or	
25-6	4052-4056	less	
25-7	4056-4057	,	
25-8	4058-4064	within	
25-9	4065-4069	50ms	
25-10	4070-4072	is	
25-11	4073-4079	better	
25-12	4079-4080	.	

#Text=Check ping times with WonderNetwork.The USA is about 80ms from coast to coast.
26-1	4081-4086	Check	
26-2	4087-4091	ping	
26-3	4092-4097	times	
26-4	4098-4102	with	
26-5	4103-4120	WonderNetwork.The	
26-6	4121-4124	USA	
26-7	4125-4127	is	
26-8	4128-4133	about	
26-9	4134-4138	80ms	
26-10	4139-4143	from	
26-11	4144-4149	coast	
26-12	4150-4152	to	
26-13	4153-4158	coast	
26-14	4158-4159	.	

#Text=Canada and Mexico are close enough as well.All of Western Europe is only 40-50ms, very close.Asia is within 80ms between most countries.India/Pakistan, Australia/NZ, Africa are somewhat isolated.
27-1	4160-4166	Canada	
27-2	4167-4170	and	
27-3	4171-4177	Mexico	
27-4	4178-4181	are	
27-5	4182-4187	close	
27-6	4188-4194	enough	
27-7	4195-4197	as	
27-8	4198-4206	well.All	
27-9	4207-4209	of	
27-10	4210-4217	Western	
27-11	4218-4224	Europe	
27-12	4225-4227	is	
27-13	4228-4232	only	
27-14	4233-4235	40	
27-15	4235-4236	-	
27-16	4236-4240	50ms	
27-17	4240-4241	,	
27-18	4242-4246	very	
27-19	4247-4257	close.Asia	
27-20	4258-4260	is	
27-21	4261-4267	within	
27-22	4268-4272	80ms	
27-23	4273-4280	between	
27-24	4281-4285	most	
27-25	4286-4301	countries.India	
27-26	4301-4302	/	
27-27	4302-4310	Pakistan	
27-28	4310-4311	,	
27-29	4312-4321	Australia	
27-30	4321-4322	/	
27-31	4322-4324	NZ	
27-32	4324-4325	,	
27-33	4326-4332	Africa	
27-34	4333-4336	are	
27-35	4337-4345	somewhat	
27-36	4346-4354	isolated	
27-37	4354-4355	.	

#Text=Local businesses there need a local datacenter.
28-1	4356-4361	Local	
28-2	4362-4372	businesses	
28-3	4373-4378	there	
28-4	4379-4383	need	
28-5	4384-4385	a	
28-6	4386-4391	local	
28-7	4392-4402	datacenter	
28-8	4402-4403	.	

#Text=Even Singapore to Australia is borderline “far” by DNS standards (~150ms).South America can be unreliable infrastructure.
29-1	4404-4408	Even	
29-2	4409-4418	Singapore	
29-3	4419-4421	to	
29-4	4422-4431	Australia	
29-5	4432-4434	is	
29-6	4435-4445	borderline	
29-7	4446-4447	“	
29-8	4447-4450	far	
29-9	4450-4451	”	
29-10	4452-4454	by	
29-11	4455-4458	DNS	
29-12	4459-4468	standards	
29-13	4469-4470	(	
29-14	4470-4471	~	
29-15	4471-4476	150ms	
29-16	4476-4477	)	
29-17	4477-4478	.	
29-18	4478-4483	South	
29-19	4484-4491	America	
29-20	4492-4495	can	
29-21	4496-4498	be	
29-22	4499-4509	unreliable	
29-23	4510-4524	infrastructure	
29-24	4524-4525	.	

#Text=For that reason, many companies in Central/South America still use US-based datacenters like in California, Texas, or Florida (Miami).If you have worldwide traffic (including Asia/Pacific) and no particular core region, I like USA west coast as perfect location for fast traffic to Europe and Asia.If you have only USA & Europe traffic and no particular core region, I like USA east coast for fast traffic to Europe.It’s also good to have a webhosting company on the same timezone as your core audience.
30-1	4526-4529	For	
30-2	4530-4534	that	
30-3	4535-4541	reason	
30-4	4541-4542	,	
30-5	4543-4547	many	
30-6	4548-4557	companies	
30-7	4558-4560	in	
30-8	4561-4568	Central	
30-9	4568-4569	/	
30-10	4569-4574	South	
30-11	4575-4582	America	
30-12	4583-4588	still	
30-13	4589-4592	use	
30-14	4593-4601	US-based	
30-15	4602-4613	datacenters	
30-16	4614-4618	like	
30-17	4619-4621	in	
30-18	4622-4632	California	
30-19	4632-4633	,	
30-20	4634-4639	Texas	
30-21	4639-4640	,	
30-22	4641-4643	or	
30-23	4644-4651	Florida	
30-24	4652-4653	(	
30-25	4653-4658	Miami	
30-26	4658-4659	)	
30-27	4659-4660	.	
30-28	4660-4662	If	
30-29	4663-4666	you	
30-30	4667-4671	have	
30-31	4672-4681	worldwide	
30-32	4682-4689	traffic	
30-33	4690-4691	(	
30-34	4691-4700	including	
30-35	4701-4705	Asia	
30-36	4705-4706	/	
30-37	4706-4713	Pacific	
30-38	4713-4714	)	
30-39	4715-4718	and	
30-40	4719-4721	no	
30-41	4722-4732	particular	
30-42	4733-4737	core	
30-43	4738-4744	region	
30-44	4744-4745	,	
30-45	4746-4747	I	
30-46	4748-4752	like	
30-47	4753-4756	USA	
30-48	4757-4761	west	
30-49	4762-4767	coast	
30-50	4768-4770	as	
30-51	4771-4778	perfect	
30-52	4779-4787	location	
30-53	4788-4791	for	
30-54	4792-4796	fast	
30-55	4797-4804	traffic	
30-56	4805-4807	to	
30-57	4808-4814	Europe	
30-58	4815-4818	and	
30-59	4819-4826	Asia.If	
30-60	4827-4830	you	
30-61	4831-4835	have	
30-62	4836-4840	only	
30-63	4841-4844	USA	
30-64	4845-4846	&	
30-65	4847-4853	Europe	
30-66	4854-4861	traffic	
30-67	4862-4865	and	
30-68	4866-4868	no	
30-69	4869-4879	particular	
30-70	4880-4884	core	
30-71	4885-4891	region	
30-72	4891-4892	,	
30-73	4893-4894	I	
30-74	4895-4899	like	
30-75	4900-4903	USA	
30-76	4904-4908	east	
30-77	4909-4914	coast	
30-78	4915-4918	for	
30-79	4919-4923	fast	
30-80	4924-4931	traffic	
30-81	4932-4934	to	
30-82	4935-4944	Europe.It	
30-83	4944-4945	’	
30-84	4945-4946	s	
30-85	4947-4951	also	
30-86	4952-4956	good	
30-87	4957-4959	to	
30-88	4960-4964	have	
30-89	4965-4966	a	
30-90	4967-4977	webhosting	
30-91	4978-4985	company	
30-92	4986-4988	on	
30-93	4989-4992	the	
30-94	4993-4997	same	
30-95	4998-5006	timezone	
30-96	5007-5009	as	
30-97	5010-5014	your	
30-98	5015-5019	core	
30-99	5020-5028	audience	
30-100	5028-5029	.	

#Text=That way they can (quickly) support or troubleshoot issues when most of your visitors are awake.Those of you thinking a CDN can make up for far server location (that’s not necessarily true!)
31-1	5030-5034	That	
31-2	5035-5038	way	
31-3	5039-5043	they	
31-4	5044-5047	can	
31-5	5048-5049	(	
31-6	5049-5056	quickly	
31-7	5056-5057	)	
31-8	5058-5065	support	
31-9	5066-5068	or	
31-10	5069-5081	troubleshoot	
31-11	5082-5088	issues	
31-12	5089-5093	when	
31-13	5094-5098	most	
31-14	5099-5101	of	
31-15	5102-5106	your	
31-16	5107-5115	visitors	
31-17	5116-5119	are	
31-18	5120-5131	awake.Those	
31-19	5132-5134	of	
31-20	5135-5138	you	
31-21	5139-5147	thinking	
31-22	5148-5149	a	
31-23	5150-5153	CDN	
31-24	5154-5157	can	
31-25	5158-5162	make	
31-26	5163-5165	up	
31-27	5166-5169	for	
31-28	5170-5173	far	
31-29	5174-5180	server	
31-30	5181-5189	location	
31-31	5190-5191	(	
31-32	5191-5195	that	
31-33	5195-5196	’	
31-34	5196-5197	s	
31-35	5198-5201	not	
31-36	5202-5213	necessarily	
31-37	5214-5218	true	
31-38	5218-5219	!	
31-39	5219-5220	)	

#Text=Those of you hunting for dedicated nodes…the best is TIER-4 datacenter with four 9’s (99.9999% uptime guarantee).
32-1	5220-5225	Those	
32-2	5226-5228	of	
32-3	5229-5232	you	
32-4	5233-5240	hunting	
32-5	5241-5244	for	
32-6	5245-5254	dedicated	
32-7	5255-5260	nodes	
32-8	5260-5261	…	
32-9	5261-5264	the	
32-10	5265-5269	best	
32-11	5270-5272	is	
32-12	5273-5277	TIER	
32-13	5277-5278	-	
32-14	5278-5279	4	
32-15	5280-5290	datacenter	
32-16	5291-5295	with	
32-17	5296-5300	four	
32-18	5301-5302	9	
32-19	5302-5303	’	
32-20	5303-5304	s	
32-21	5305-5306	(	
32-22	5306-5314	99.9999%	
32-23	5315-5321	uptime	
32-24	5322-5331	guarantee	
32-25	5331-5332	)	
32-26	5332-5333	.	

#Text=But good luck getting those guaranteed!
33-1	5334-5337	But	
33-2	5338-5342	good	
33-3	5343-5347	luck	
33-4	5348-5355	getting	
33-5	5356-5361	those	
33-6	5362-5372	guaranteed	
33-7	5372-5373	!	

#Text=Uptime calculator (99.9% uptime means 43min downtime per month)Nearest.host – cool site showing nearby server companies.2.
34-1	5373-5379	Uptime	
34-2	5380-5390	calculator	
34-3	5391-5392	(	
34-4	5392-5397	99.9%	
34-5	5398-5404	uptime	
34-6	5405-5410	means	
34-7	5411-5416	43min	
34-8	5417-5425	downtime	
34-9	5426-5429	per	
34-10	5430-5435	month	
34-11	5435-5436	)	
34-12	5436-5448	Nearest.host	
34-13	5449-5450	–	
34-14	5451-5455	cool	
34-15	5456-5460	site	
34-16	5461-5468	showing	
34-17	5469-5475	nearby	
34-18	5476-5482	server	
34-19	5483-5492	companies	
34-20	5492-5494	.2	
34-21	5494-5495	.	

#Text=Choose the right website hosting service (BEG, HIGH)Shared hosting ($5-30/month) – fine for small sites and low traffic up to 100k hits/month.
35-1	5496-5502	Choose	
35-2	5503-5506	the	
35-3	5507-5512	right	
35-4	5513-5520	website	
35-5	5521-5528	hosting	
35-6	5529-5536	service	
35-7	5537-5538	(	
35-8	5538-5541	BEG	
35-9	5541-5542	,	
35-10	5543-5547	HIGH	
35-11	5547-5548	)	
35-12	5548-5554	Shared	
35-13	5555-5562	hosting	
35-14	5563-5564	(	
35-15	5564-5566	$5	
35-16	5566-5567	-	
35-17	5567-5569	30	
35-18	5569-5570	/	
35-19	5570-5575	month	
35-20	5575-5576	)	
35-21	5577-5578	–	
35-22	5579-5583	fine	
35-23	5584-5587	for	
35-24	5588-5593	small	
35-25	5594-5599	sites	
35-26	5600-5603	and	
35-27	5604-5607	low	
35-28	5608-5615	traffic	
35-29	5616-5618	up	
35-30	5619-5621	to	
35-31	5622-5626	100k	
35-32	5627-5631	hits	
35-33	5631-5632	/	
35-34	5632-5637	month	
35-35	5637-5638	.	

#Text=No access to server configurations.VPS/cloud hosting ($30-300/month) – great for medium sites and traffic up to 30 million hits/month.Dedicated (bare metal) server ($200/month & up) – great for large sites with TONS of traffic.Buy the best that you can comfortably afford.
36-1	5639-5641	No	
36-2	5642-5648	access	
36-3	5649-5651	to	
36-4	5652-5658	server	
36-5	5659-5677	configurations.VPS	
36-6	5677-5678	/	
36-7	5678-5683	cloud	
36-8	5684-5691	hosting	
36-9	5692-5693	(	
36-10	5693-5696	$30	
36-11	5696-5697	-	
36-12	5697-5700	300	
36-13	5700-5701	/	
36-14	5701-5706	month	
36-15	5706-5707	)	
36-16	5708-5709	–	
36-17	5710-5715	great	
36-18	5716-5719	for	
36-19	5720-5726	medium	
36-20	5727-5732	sites	
36-21	5733-5736	and	
36-22	5737-5744	traffic	
36-23	5745-5747	up	
36-24	5748-5750	to	
36-25	5751-5753	30	
36-26	5754-5761	million	
36-27	5762-5766	hits	
36-28	5766-5767	/	
36-29	5767-5782	month.Dedicated	
36-30	5783-5784	(	
36-31	5784-5788	bare	
36-32	5789-5794	metal	
36-33	5794-5795	)	
36-34	5796-5802	server	
36-35	5803-5804	(	
36-36	5804-5808	$200	
36-37	5808-5809	/	
36-38	5809-5814	month	
36-39	5815-5816	&	
36-40	5817-5819	up	
36-41	5819-5820	)	
36-42	5821-5822	–	
36-43	5823-5828	great	
36-44	5829-5832	for	
36-45	5833-5838	large	
36-46	5839-5844	sites	
36-47	5845-5849	with	
36-48	5850-5854	TONS	
36-49	5855-5857	of	
36-50	5858-5869	traffic.Buy	
36-51	5870-5873	the	
36-52	5874-5878	best	
36-53	5879-5883	that	
36-54	5884-5887	you	
36-55	5888-5891	can	
36-56	5892-5903	comfortably	
36-57	5904-5910	afford	
36-58	5910-5911	.	

#Text=A small website doesn’t need much power but it’s still noticeable when you get a better server and appreciated more than you think.
37-1	5912-5913	A	
37-2	5914-5919	small	
37-3	5920-5927	website	
37-4	5928-5933	doesn	
37-5	5933-5934	’	
37-6	5934-5935	t	
37-7	5936-5940	need	
37-8	5941-5945	much	
37-9	5946-5951	power	
37-10	5952-5955	but	
37-11	5956-5958	it	
37-12	5958-5959	’	
37-13	5959-5960	s	
37-14	5961-5966	still	
37-15	5967-5977	noticeable	
37-16	5978-5982	when	
37-17	5983-5986	you	
37-18	5987-5990	get	
37-19	5991-5992	a	
37-20	5993-5999	better	
37-21	6000-6006	server	
37-22	6007-6010	and	
37-23	6011-6022	appreciated	
37-24	6023-6027	more	
37-25	6028-6032	than	
37-26	6033-6036	you	
37-27	6037-6042	think	
37-28	6042-6043	.	

#Text=Think of a new phone that opens apps just a fraction of a second quicker.
38-1	6044-6049	Think	
38-2	6050-6052	of	
38-3	6053-6054	a	
38-4	6055-6058	new	
38-5	6059-6064	phone	
38-6	6065-6069	that	
38-7	6070-6075	opens	
38-8	6076-6080	apps	
38-9	6081-6085	just	
38-10	6086-6087	a	
38-11	6088-6096	fraction	
38-12	6097-6099	of	
38-13	6100-6101	a	
38-14	6102-6108	second	
38-15	6109-6116	quicker	
38-16	6116-6117	.	

#Text=You really can feel the difference and it improves user experience tremendously.Shared webhosting is usually slow because they stuff hundreds of customers/websites onto the same server (maximize profits).
39-1	6118-6121	You	
39-2	6122-6128	really	
39-3	6129-6132	can	
39-4	6133-6137	feel	
39-5	6138-6141	the	
39-6	6142-6152	difference	
39-7	6153-6156	and	
39-8	6157-6159	it	
39-9	6160-6168	improves	
39-10	6169-6173	user	
39-11	6174-6184	experience	
39-12	6185-6204	tremendously.Shared	
39-13	6205-6215	webhosting	
39-14	6216-6218	is	
39-15	6219-6226	usually	
39-16	6227-6231	slow	
39-17	6232-6239	because	
39-18	6240-6244	they	
39-19	6245-6250	stuff	
39-20	6251-6259	hundreds	
39-21	6260-6262	of	
39-22	6263-6272	customers	
39-23	6272-6273	/	
39-24	6273-6281	websites	
39-25	6282-6286	onto	
39-26	6287-6290	the	
39-27	6291-6295	same	
39-28	6296-6302	server	
39-29	6303-6304	(	
39-30	6304-6312	maximize	
39-31	6313-6320	profits	
39-32	6320-6321	)	
39-33	6321-6322	.	

#Text=This increases slowdowns, unexpected crashes or server restarts, security attacks, and your email IP getting marked as spam.Shared hosting environments are also slow because they load many scripts/modules to maximize compatibility for as many users as possible.
40-1	6323-6327	This	
40-2	6328-6337	increases	
40-3	6338-6347	slowdowns	
40-4	6347-6348	,	
40-5	6349-6359	unexpected	
40-6	6360-6367	crashes	
40-7	6368-6370	or	
40-8	6371-6377	server	
40-9	6378-6386	restarts	
40-10	6386-6387	,	
40-11	6388-6396	security	
40-12	6397-6404	attacks	
40-13	6404-6405	,	
40-14	6406-6409	and	
40-15	6410-6414	your	
40-16	6415-6420	email	
40-17	6421-6423	IP	
40-18	6424-6431	getting	
40-19	6432-6438	marked	
40-20	6439-6441	as	
40-21	6442-6453	spam.Shared	
40-22	6454-6461	hosting	
40-23	6462-6474	environments	
40-24	6475-6478	are	
40-25	6479-6483	also	
40-26	6484-6488	slow	
40-27	6489-6496	because	
40-28	6497-6501	they	
40-29	6502-6506	load	
40-30	6507-6511	many	
40-31	6512-6519	scripts	
40-32	6519-6520	/	
40-33	6520-6527	modules	
40-34	6528-6530	to	
40-35	6531-6539	maximize	
40-36	6540-6553	compatibility	
40-37	6554-6557	for	
40-38	6558-6560	as	
40-39	6561-6565	many	
40-40	6566-6571	users	
40-41	6572-6574	as	
40-42	6575-6583	possible	
40-43	6583-6584	.	

#Text=And without dedicated resources, your visitors end up waiting in line while the server is busy handling other websites first.VPS/Dedicated servers are faster because there’s more resources available per account and your resources are serving only your websites.
41-1	6585-6588	And	
41-2	6589-6596	without	
41-3	6597-6606	dedicated	
41-4	6607-6616	resources	
41-5	6616-6617	,	
41-6	6618-6622	your	
41-7	6623-6631	visitors	
41-8	6632-6635	end	
41-9	6636-6638	up	
41-10	6639-6646	waiting	
41-11	6647-6649	in	
41-12	6650-6654	line	
41-13	6655-6660	while	
41-14	6661-6664	the	
41-15	6665-6671	server	
41-16	6672-6674	is	
41-17	6675-6679	busy	
41-18	6680-6688	handling	
41-19	6689-6694	other	
41-20	6695-6703	websites	
41-21	6704-6713	first.VPS	
41-22	6713-6714	/	
41-23	6714-6723	Dedicated	
41-24	6724-6731	servers	
41-25	6732-6735	are	
41-26	6736-6742	faster	
41-27	6743-6750	because	
41-28	6751-6756	there	
41-29	6756-6757	’	
41-30	6757-6758	s	
41-31	6759-6763	more	
41-32	6764-6773	resources	
41-33	6774-6783	available	
41-34	6784-6787	per	
41-35	6788-6795	account	
41-36	6796-6799	and	
41-37	6800-6804	your	
41-38	6805-6814	resources	
41-39	6815-6818	are	
41-40	6819-6826	serving	
41-41	6827-6831	only	
41-42	6832-6836	your	
41-43	6837-6845	websites	
41-44	6845-6846	.	

#Text=You have more control over your environment, can configure it for your needs.
42-1	6847-6850	You	
42-2	6851-6855	have	
42-3	6856-6860	more	
42-4	6861-6868	control	
42-5	6869-6873	over	
42-6	6874-6878	your	
42-7	6879-6890	environment	
42-8	6890-6891	,	
42-9	6892-6895	can	
42-10	6896-6905	configure	
42-11	6906-6908	it	
42-12	6909-6912	for	
42-13	6913-6917	your	
42-14	6918-6923	needs	
42-15	6923-6924	.	

#Text=VPS/dedicated can be costly or difficult to manage for regular users.
43-1	6925-6928	VPS	
43-2	6928-6929	/	
43-3	6929-6938	dedicated	
43-4	6939-6942	can	
43-5	6943-6945	be	
43-6	6946-6952	costly	
43-7	6953-6955	or	
43-8	6956-6965	difficult	
43-9	6966-6968	to	
43-10	6969-6975	manage	
43-11	6976-6979	for	
43-12	6980-6987	regular	
43-13	6988-6993	users	
43-14	6993-6994	.	

#Text=There are cloud-panel services to help manage it and also fully-managed services where they take care of everything for you.Those unable to handle technical responsibilities of VPS can go for “premium shared hosting”.
44-1	6995-7000	There	
44-2	7001-7004	are	
44-3	7005-7016	cloud-panel	
44-4	7017-7025	services	
44-5	7026-7028	to	
44-6	7029-7033	help	
44-7	7034-7040	manage	
44-8	7041-7043	it	
44-9	7044-7047	and	
44-10	7048-7052	also	
44-11	7053-7066	fully-managed	
44-12	7067-7075	services	
44-13	7076-7081	where	
44-14	7082-7086	they	
44-15	7087-7091	take	
44-16	7092-7096	care	
44-17	7097-7099	of	
44-18	7100-7110	everything	
44-19	7111-7114	for	
44-20	7115-7124	you.Those	
44-21	7125-7131	unable	
44-22	7132-7134	to	
44-23	7135-7141	handle	
44-24	7142-7151	technical	
44-25	7152-7168	responsibilities	
44-26	7169-7171	of	
44-27	7172-7175	VPS	
44-28	7176-7179	can	
44-29	7180-7182	go	
44-30	7183-7186	for	
44-31	7187-7188	“	
44-32	7188-7195	premium	
44-33	7196-7202	shared	
44-34	7203-7210	hosting	
44-35	7210-7211	”	
44-36	7211-7212	.	

#Text=They don’t crowd the server as much but the performance (while better than regular shared hosting) will still be far behind a VPS.3.
45-1	7213-7217	They	
45-2	7218-7221	don	
45-3	7221-7222	’	
45-4	7222-7223	t	
45-5	7224-7229	crowd	
45-6	7230-7233	the	
45-7	7234-7240	server	
45-8	7241-7243	as	
45-9	7244-7248	much	
45-10	7249-7252	but	
45-11	7253-7256	the	
45-12	7257-7268	performance	
45-13	7269-7270	(	
45-14	7270-7275	while	
45-15	7276-7282	better	
45-16	7283-7287	than	
45-17	7288-7295	regular	
45-18	7296-7302	shared	
45-19	7303-7310	hosting	
45-20	7310-7311	)	
45-21	7312-7316	will	
45-22	7317-7322	still	
45-23	7323-7325	be	
45-24	7326-7329	far	
45-25	7330-7336	behind	
45-26	7337-7338	a	
45-27	7339-7342	VPS	
45-28	7342-7344	.3	
45-29	7344-7345	.	

#Text=Choose a high performance web server (INT-ADV, HIGH)Use any web server software but Apache.
46-1	7346-7352	Choose	
46-2	7353-7354	a	
46-3	7355-7359	high	
46-4	7360-7371	performance	
46-5	7372-7375	web	
46-6	7376-7382	server	
46-7	7383-7384	(	
46-8	7384-7391	INT-ADV	
46-9	7391-7392	,	
46-10	7393-7397	HIGH	
46-11	7397-7398	)	
46-12	7398-7401	Use	
46-13	7402-7405	any	
46-14	7406-7409	web	
46-15	7410-7416	server	
46-16	7417-7425	software	
46-17	7426-7429	but	
46-18	7430-7436	Apache	
46-19	7436-7437	.	

#Text=The best is NGINX or LiteSpeed, or highly-optimized Apache (rare to find).
47-1	7438-7441	The	
47-2	7442-7446	best	
47-3	7447-7449	is	
47-4	7450-7455	NGINX	
47-5	7456-7458	or	
47-6	7459-7468	LiteSpeed	
47-7	7468-7469	,	
47-8	7470-7472	or	
47-9	7473-7489	highly-optimized	
47-10	7490-7496	Apache	
47-11	7497-7498	(	
47-12	7498-7502	rare	
47-13	7503-7505	to	
47-14	7506-7510	find	
47-15	7510-7511	)	
47-16	7511-7512	.	

#Text=The higher your traffic, the more noticeable the difference.NGINX shines at simple sites.
48-1	7513-7516	The	
48-2	7517-7523	higher	
48-3	7524-7528	your	
48-4	7529-7536	traffic	
48-5	7536-7537	,	
48-6	7538-7541	the	
48-7	7542-7546	more	
48-8	7547-7557	noticeable	
48-9	7558-7561	the	
48-10	7562-7578	difference.NGINX	
48-11	7579-7585	shines	
48-12	7586-7588	at	
48-13	7589-7595	simple	
48-14	7596-7601	sites	
48-15	7601-7602	.	

#Text=Just set it and go.
49-1	7603-7607	Just	
49-2	7608-7611	set	
49-3	7612-7614	it	
49-4	7615-7618	and	
49-5	7619-7621	go	
49-6	7621-7622	.	

#Text=Not much settings to optimize.
50-1	7623-7626	Not	
50-2	7627-7631	much	
50-3	7632-7640	settings	
50-4	7641-7643	to	
50-5	7644-7652	optimize	
50-6	7652-7653	.	

#Text=But once you have a complicated site, NGINX is a mixed bag.
51-1	7654-7657	But	
51-2	7658-7662	once	
51-3	7663-7666	you	
51-4	7667-7671	have	
51-5	7672-7673	a	
51-6	7674-7685	complicated	
51-7	7686-7690	site	
51-8	7690-7691	,	
51-9	7692-7697	NGINX	
51-10	7698-7700	is	
51-11	7701-7702	a	
51-12	7703-7708	mixed	
51-13	7709-7712	bag	
51-14	7712-7713	.	

#Text=Some NGINX features aren’t easy to configure.
52-1	7714-7718	Some	
52-2	7719-7724	NGINX	
52-3	7725-7733	features	
52-4	7734-7738	aren	
52-5	7738-7739	’	
52-6	7739-7740	t	
52-7	7741-7745	easy	
52-8	7746-7748	to	
52-9	7749-7758	configure	
52-10	7758-7759	.	

#Text=If you have a server-admin to fine-tune, it’s great but many people don’t.LiteSpeed has more easy-accessible features than NGINX.
53-1	7760-7762	If	
53-2	7763-7766	you	
53-3	7767-7771	have	
53-4	7772-7773	a	
53-5	7774-7786	server-admin	
53-6	7787-7789	to	
53-7	7790-7799	fine-tune	
53-8	7799-7800	,	
53-9	7801-7803	it	
53-10	7803-7804	’	
53-11	7804-7805	s	
53-12	7806-7811	great	
53-13	7812-7815	but	
53-14	7816-7820	many	
53-15	7821-7827	people	
53-16	7828-7831	don	
53-17	7831-7832	’	
53-18	7832-7843	t.LiteSpeed	
53-19	7844-7847	has	
53-20	7848-7852	more	
53-21	7853-7868	easy-accessible	
53-22	7869-7877	features	
53-23	7878-7882	than	
53-24	7883-7888	NGINX	
53-25	7888-7889	.	

#Text=Like when you need some things cached but not others, or dealing with server-level redirects via htaccess.
54-1	7890-7894	Like	
54-2	7895-7899	when	
54-3	7900-7903	you	
54-4	7904-7908	need	
54-5	7909-7913	some	
54-6	7914-7920	things	
54-7	7921-7927	cached	
54-8	7928-7931	but	
54-9	7932-7935	not	
54-10	7936-7942	others	
54-11	7942-7943	,	
54-12	7944-7946	or	
54-13	7947-7954	dealing	
54-14	7955-7959	with	
54-15	7960-7972	server-level	
54-16	7973-7982	redirects	
54-17	7983-7986	via	
54-18	7987-7995	htaccess	
54-19	7995-7996	.	

#Text=LiteSpeed also has a WordPress cache plugin which NGINX doesn’t.
55-1	7997-8006	LiteSpeed	
55-2	8007-8011	also	
55-3	8012-8015	has	
55-4	8016-8017	a	
55-5	8018-8027	WordPress	
55-6	8028-8033	cache	
55-7	8034-8040	plugin	
55-8	8041-8046	which	
55-9	8047-8052	NGINX	
55-10	8053-8058	doesn	
55-11	8058-8059	’	
55-12	8059-8060	t	
55-13	8060-8061	.	

#Text=That’s a HUGE advantage.
56-1	8062-8066	That	
56-2	8066-8067	’	
56-3	8067-8068	s	
56-4	8069-8070	a	
56-5	8071-8075	HUGE	
56-6	8076-8085	advantage	
56-7	8085-8086	.	

#Text=(I personally prefer LiteSpeed.)OpenLiteSpeed is the free community version of LiteSpeed.
57-1	8087-8088	(	
57-2	8088-8089	I	
57-3	8090-8100	personally	
57-4	8101-8107	prefer	
57-5	8108-8117	LiteSpeed	
57-6	8117-8118	.	
57-7	8118-8119	)	
57-8	8119-8132	OpenLiteSpeed	
57-9	8133-8135	is	
57-10	8136-8139	the	
57-11	8140-8144	free	
57-12	8145-8154	community	
57-13	8155-8162	version	
57-14	8163-8165	of	
57-15	8166-8175	LiteSpeed	
57-16	8175-8176	.	

#Text=It’s a great alternative for those wanting the free price of NGINX but the powerful LiteSpeed cache plugin.Some webhosts have the Apache+NGINX hybrid stack.
58-1	8177-8179	It	
58-2	8179-8180	’	
58-3	8180-8181	s	
58-4	8182-8183	a	
58-5	8184-8189	great	
58-6	8190-8201	alternative	
58-7	8202-8205	for	
58-8	8206-8211	those	
58-9	8212-8219	wanting	
58-10	8220-8223	the	
58-11	8224-8228	free	
58-12	8229-8234	price	
58-13	8235-8237	of	
58-14	8238-8243	NGINX	
58-15	8244-8247	but	
58-16	8248-8251	the	
58-17	8252-8260	powerful	
58-18	8261-8270	LiteSpeed	
58-19	8271-8276	cache	
58-20	8277-8288	plugin.Some	
58-21	8289-8297	webhosts	
58-22	8298-8302	have	
58-23	8303-8306	the	
58-24	8307-8313	Apache	
58-25	8313-8314	+	
58-26	8314-8319	NGINX	
58-27	8320-8326	hybrid	
58-28	8327-8332	stack	
58-29	8332-8333	.	

#Text=I feel those are outdated now and makes for unnecessarily slower/heavier stack.If using Apache, MPM events are best (compared to worker or prefork).Keep your webserver updated.
59-1	8334-8335	I	
59-2	8336-8340	feel	
59-3	8341-8346	those	
59-4	8347-8350	are	
59-5	8351-8359	outdated	
59-6	8360-8363	now	
59-7	8364-8367	and	
59-8	8368-8373	makes	
59-9	8374-8377	for	
59-10	8378-8391	unnecessarily	
59-11	8392-8398	slower	
59-12	8398-8399	/	
59-13	8399-8406	heavier	
59-14	8407-8415	stack.If	
59-15	8416-8421	using	
59-16	8422-8428	Apache	
59-17	8428-8429	,	
59-18	8430-8433	MPM	
59-19	8434-8440	events	
59-20	8441-8444	are	
59-21	8445-8449	best	
59-22	8450-8451	(	
59-23	8451-8459	compared	
59-24	8460-8462	to	
59-25	8463-8469	worker	
59-26	8470-8472	or	
59-27	8473-8480	prefork	
59-28	8480-8481	)	
59-29	8481-8482	.	
59-30	8482-8486	Keep	
59-31	8487-8491	your	
59-32	8492-8501	webserver	
59-33	8502-8509	updated	
59-34	8509-8510	.	

#Text=Later versions can speed up certain protocols and processes noticeably.4.
60-1	8511-8516	Later	
60-2	8517-8525	versions	
60-3	8526-8529	can	
60-4	8530-8535	speed	
60-5	8536-8538	up	
60-6	8539-8546	certain	
60-7	8547-8556	protocols	
60-8	8557-8560	and	
60-9	8561-8570	processes	
60-10	8571-8581	noticeably	
60-11	8581-8583	.4	
60-12	8583-8584	.	

#Text=Web server configuration (ADV, MED-HIGH)Most web servers come with safe/functional configurations right off the bat.
61-1	8585-8588	Web	
61-2	8589-8595	server	
61-3	8596-8609	configuration	
61-4	8610-8611	(	
61-5	8611-8614	ADV	
61-6	8614-8615	,	
61-7	8616-8624	MED-HIGH	
61-8	8624-8625	)	
61-9	8625-8629	Most	
61-10	8630-8633	web	
61-11	8634-8641	servers	
61-12	8642-8646	come	
61-13	8647-8651	with	
61-14	8652-8656	safe	
61-15	8656-8657	/	
61-16	8657-8667	functional	
61-17	8668-8682	configurations	
61-18	8683-8688	right	
61-19	8689-8692	off	
61-20	8693-8696	the	
61-21	8697-8700	bat	
61-22	8700-8701	.	

#Text=Adequate for the average small site with little traffic.
62-1	8702-8710	Adequate	
62-2	8711-8714	for	
62-3	8715-8718	the	
62-4	8719-8726	average	
62-5	8727-8732	small	
62-6	8733-8737	site	
62-7	8738-8742	with	
62-8	8743-8749	little	
62-9	8750-8757	traffic	
62-10	8757-8758	.	

#Text=It’s when you get more traffic and more security attacks, or have more demanding apps that fine-tuning the configurations makes a big difference.Timeout – 30 to 60 seconds is a safe start.
63-1	8759-8761	It	
63-2	8761-8762	’	
63-3	8762-8763	s	
63-4	8764-8768	when	
63-5	8769-8772	you	
63-6	8773-8776	get	
63-7	8777-8781	more	
63-8	8782-8789	traffic	
63-9	8790-8793	and	
63-10	8794-8798	more	
63-11	8799-8807	security	
63-12	8808-8815	attacks	
63-13	8815-8816	,	
63-14	8817-8819	or	
63-15	8820-8824	have	
63-16	8825-8829	more	
63-17	8830-8839	demanding	
63-18	8840-8844	apps	
63-19	8845-8849	that	
63-20	8850-8861	fine-tuning	
63-21	8862-8865	the	
63-22	8866-8880	configurations	
63-23	8881-8886	makes	
63-24	8887-8888	a	
63-25	8889-8892	big	
63-26	8893-8911	difference.Timeout	
63-27	8912-8913	–	
63-28	8914-8916	30	
63-29	8917-8919	to	
63-30	8920-8922	60	
63-31	8923-8930	seconds	
63-32	8931-8933	is	
63-33	8934-8935	a	
63-34	8936-8940	safe	
63-35	8941-8946	start	
63-36	8946-8947	.	

#Text=You can increase up to 600 or beyond if needed for long processes (import, export, backups).
64-1	8948-8951	You	
64-2	8952-8955	can	
64-3	8956-8964	increase	
64-4	8965-8967	up	
64-5	8968-8970	to	
64-6	8971-8974	600	
64-7	8975-8977	or	
64-8	8978-8984	beyond	
64-9	8985-8987	if	
64-10	8988-8994	needed	
64-11	8995-8998	for	
64-12	8999-9003	long	
64-13	9004-9013	processes	
64-14	9014-9015	(	
64-15	9015-9021	import	
64-16	9021-9022	,	
64-17	9023-9029	export	
64-18	9029-9030	,	
64-19	9031-9038	backups	
64-20	9038-9039	)	
64-21	9039-9040	.	

#Text=Keep in mind that allows poorly-coded processes or hack exploits to run out your server resources.# of child processes allowed – depends on the server environment.
65-1	9041-9045	Keep	
65-2	9046-9048	in	
65-3	9049-9053	mind	
65-4	9054-9058	that	
65-5	9059-9065	allows	
65-6	9066-9078	poorly-coded	
65-7	9079-9088	processes	
65-8	9089-9091	or	
65-9	9092-9096	hack	
65-10	9097-9105	exploits	
65-11	9106-9108	to	
65-12	9109-9112	run	
65-13	9113-9116	out	
65-14	9117-9121	your	
65-15	9122-9128	server	
65-16	9129-9138	resources	
65-17	9138-9139	.	
65-18	9139-9140	#	
65-19	9141-9143	of	
65-20	9144-9149	child	
65-21	9150-9159	processes	
65-22	9160-9167	allowed	
65-23	9168-9169	–	
65-24	9170-9177	depends	
65-25	9178-9180	on	
65-26	9181-9184	the	
65-27	9185-9191	server	
65-28	9192-9203	environment	
65-29	9203-9204	.	

#Text=Default should be fine.Concurrent connections allowed – anywhere from 1-20k.
66-1	9205-9212	Default	
66-2	9213-9219	should	
66-3	9220-9222	be	
66-4	9223-9238	fine.Concurrent	
66-5	9239-9250	connections	
66-6	9251-9258	allowed	
66-7	9259-9260	–	
66-8	9261-9269	anywhere	
66-9	9270-9274	from	
66-10	9275-9276	1	
66-11	9276-9277	-	
66-12	9277-9280	20k	
66-13	9280-9281	.	

#Text=Higher is not necessarily better!
67-1	9282-9288	Higher	
67-2	9289-9291	is	
67-3	9292-9295	not	
67-4	9296-9307	necessarily	
67-5	9308-9314	better	
67-6	9314-9315	!	

#Text=Keep alive – on, off, or LiteSpeed’s “smart keep-alive”.
68-1	9315-9319	Keep	
68-2	9320-9325	alive	
68-3	9326-9327	–	
68-4	9328-9330	on	
68-5	9330-9331	,	
68-6	9332-9335	off	
68-7	9335-9336	,	
68-8	9337-9339	or	
68-9	9340-9349	LiteSpeed	
68-10	9349-9350	’	
68-11	9350-9351	s	
68-12	9352-9353	“	
68-13	9353-9358	smart	
68-14	9359-9369	keep-alive	
68-15	9369-9370	”	
68-16	9370-9371	.	

#Text=I think “on” is safer.
69-1	9372-9373	I	
69-2	9374-9379	think	
69-3	9380-9381	“	
69-4	9381-9383	on	
69-5	9383-9384	”	
69-6	9385-9387	is	
69-7	9388-9393	safer	
69-8	9393-9394	.	

#Text=If you have LiteSpeed, the smart keep-alive is awesome!
70-1	9395-9397	If	
70-2	9398-9401	you	
70-3	9402-9406	have	
70-4	9407-9416	LiteSpeed	
70-5	9416-9417	,	
70-6	9418-9421	the	
70-7	9422-9427	smart	
70-8	9428-9438	keep-alive	
70-9	9439-9441	is	
70-10	9442-9449	awesome	
70-11	9449-9450	!	

#Text=Keep alive timeout – 3-5 seconds is a safe start.
71-1	9450-9454	Keep	
71-2	9455-9460	alive	
71-3	9461-9468	timeout	
71-4	9469-9470	–	
71-5	9471-9472	3	
71-6	9472-9473	-	
71-7	9473-9474	5	
71-8	9475-9482	seconds	
71-9	9483-9485	is	
71-10	9486-9487	a	
71-11	9488-9492	safe	
71-12	9493-9498	start	
71-13	9498-9499	.	

#Text=Increase if needed.How many threads, body/buffer size, workers, clients, etc….all that you can look up online.
72-1	9500-9508	Increase	
72-2	9509-9511	if	
72-3	9512-9522	needed.How	
72-4	9523-9527	many	
72-5	9528-9535	threads	
72-6	9535-9536	,	
72-7	9537-9541	body	
72-8	9541-9542	/	
72-9	9542-9548	buffer	
72-10	9549-9553	size	
72-11	9553-9554	,	
72-12	9555-9562	workers	
72-13	9562-9563	,	
72-14	9564-9571	clients	
72-15	9571-9572	,	
72-16	9573-9576	etc	
72-17	9576-9577	…	
72-18	9577-9578	.	
72-19	9578-9581	all	
72-20	9582-9586	that	
72-21	9587-9590	you	
72-22	9591-9594	can	
72-23	9595-9599	look	
72-24	9600-9602	up	
72-25	9603-9609	online	
72-26	9609-9610	.	

#Text=It depends on your server size and use scenario.
73-1	9611-9613	It	
73-2	9614-9621	depends	
73-3	9622-9624	on	
73-4	9625-9629	your	
73-5	9630-9636	server	
73-6	9637-9641	size	
73-7	9642-9645	and	
73-8	9646-9649	use	
73-9	9650-9658	scenario	
73-10	9658-9659	.	

#Text=Jump on forums and ask around or have a sys-admin configure for you.
74-1	9660-9664	Jump	
74-2	9665-9667	on	
74-3	9668-9674	forums	
74-4	9675-9678	and	
74-5	9679-9682	ask	
74-6	9683-9689	around	
74-7	9690-9692	or	
74-8	9693-9697	have	
74-9	9698-9699	a	
74-10	9700-9709	sys-admin	
74-11	9710-9719	configure	
74-12	9720-9723	for	
74-13	9724-9727	you	
74-14	9727-9728	.	

#Text=Keep in mind different admins have their own ways of configuring.The most important distinction for me is to decide whether this server should be set aggressive or conservative:AGGRESSIVE configuration – gives every site as much resources as possible.
75-1	9729-9733	Keep	
75-2	9734-9736	in	
75-3	9737-9741	mind	
75-4	9742-9751	different	
75-5	9752-9758	admins	
75-6	9759-9763	have	
75-7	9764-9769	their	
75-8	9770-9773	own	
75-9	9774-9778	ways	
75-10	9779-9781	of	
75-11	9782-9797	configuring.The	
75-12	9798-9802	most	
75-13	9803-9812	important	
75-14	9813-9824	distinction	
75-15	9825-9828	for	
75-16	9829-9831	me	
75-17	9832-9834	is	
75-18	9835-9837	to	
75-19	9838-9844	decide	
75-20	9845-9852	whether	
75-21	9853-9857	this	
75-22	9858-9864	server	
75-23	9865-9871	should	
75-24	9872-9874	be	
75-25	9875-9878	set	
75-26	9879-9889	aggressive	
75-27	9890-9892	or	
75-28	9893-9905	conservative	
75-29	9905-9906	:	
75-30	9906-9916	AGGRESSIVE	
75-31	9917-9930	configuration	
75-32	9931-9932	–	
75-33	9933-9938	gives	
75-34	9939-9944	every	
75-35	9945-9949	site	
75-36	9950-9952	as	
75-37	9953-9957	much	
75-38	9958-9967	resources	
75-39	9968-9970	as	
75-40	9971-9979	possible	
75-41	9979-9980	.	

#Text=Good for low-tenant or dedicated servers.CONSERVATIVE configuration – gives every site as little resources as possible.
76-1	9981-9985	Good	
76-2	9986-9989	for	
76-3	9990-10000	low-tenant	
76-4	10001-10003	or	
76-5	10004-10013	dedicated	
76-6	10014-10034	servers.CONSERVATIVE	
76-7	10035-10048	configuration	
76-8	10049-10050	–	
76-9	10051-10056	gives	
76-10	10057-10062	every	
76-11	10063-10067	site	
76-12	10068-10070	as	
76-13	10071-10077	little	
76-14	10078-10087	resources	
76-15	10088-10090	as	
76-16	10091-10099	possible	
76-17	10099-10100	.	

#Text=Good for high-tenant or shared servers.5.
77-1	10101-10105	Good	
77-2	10106-10109	for	
77-3	10110-10121	high-tenant	
77-4	10122-10124	or	
77-5	10125-10131	shared	
77-6	10132-10139	servers	
77-7	10139-10141	.5	
77-8	10141-10142	.	

#Text=Disable unused services (INT, HIGH)Many servers are automatically set up with all features running to make things easy for you.
78-1	10143-10150	Disable	
78-2	10151-10157	unused	
78-3	10158-10166	services	
78-4	10167-10168	(	
78-5	10168-10171	INT	
78-6	10171-10172	,	
78-7	10173-10177	HIGH	
78-8	10177-10178	)	
78-9	10178-10182	Many	
78-10	10183-10190	servers	
78-11	10191-10194	are	
78-12	10195-10208	automatically	
78-13	10209-10212	set	
78-14	10213-10215	up	
78-15	10216-10220	with	
78-16	10221-10224	all	
78-17	10225-10233	features	
78-18	10234-10241	running	
78-19	10242-10244	to	
78-20	10245-10249	make	
78-21	10250-10256	things	
78-22	10257-10261	easy	
78-23	10262-10265	for	
78-24	10266-10269	you	
78-25	10269-10270	.	

#Text=But they’re just like brand new computers with pre-installed software.
79-1	10271-10274	But	
79-2	10275-10279	they	
79-3	10279-10280	’	
79-4	10280-10282	re	
79-5	10283-10287	just	
79-6	10288-10292	like	
79-7	10293-10298	brand	
79-8	10299-10302	new	
79-9	10303-10312	computers	
79-10	10313-10317	with	
79-11	10318-10331	pre-installed	
79-12	10332-10340	software	
79-13	10340-10341	.	

#Text=Get rid of the ones you don’t use.
80-1	10342-10345	Get	
80-2	10346-10349	rid	
80-3	10350-10352	of	
80-4	10353-10356	the	
80-5	10357-10361	ones	
80-6	10362-10365	you	
80-7	10366-10369	don	
80-8	10369-10370	’	
80-9	10370-10371	t	
80-10	10372-10375	use	
80-11	10375-10376	.	

#Text=Even if they don’t use much memory, they can still be bombarded by hackers and that eats resources.DNS – disable if you’re using external DNS service.
81-1	10377-10381	Even	
81-2	10382-10384	if	
81-3	10385-10389	they	
81-4	10390-10393	don	
81-5	10393-10394	’	
81-6	10394-10395	t	
81-7	10396-10399	use	
81-8	10400-10404	much	
81-9	10405-10411	memory	
81-10	10411-10412	,	
81-11	10413-10417	they	
81-12	10418-10421	can	
81-13	10422-10427	still	
81-14	10428-10430	be	
81-15	10431-10440	bombarded	
81-16	10441-10443	by	
81-17	10444-10451	hackers	
81-18	10452-10455	and	
81-19	10456-10460	that	
81-20	10461-10465	eats	
81-21	10466-10479	resources.DNS	
81-22	10480-10481	–	
81-23	10482-10489	disable	
81-24	10490-10492	if	
81-25	10493-10496	you	
81-26	10496-10497	’	
81-27	10497-10499	re	
81-28	10500-10505	using	
81-29	10506-10514	external	
81-30	10515-10518	DNS	
81-31	10519-10526	service	
81-32	10526-10527	.	

#Text=(Cloudflare, DNSME, etc.)Email – disable if you’re using 3rd-party email.
82-1	10528-10529	(	
82-2	10529-10539	Cloudflare	
82-3	10539-10540	,	
82-4	10541-10546	DNSME	
82-5	10546-10547	,	
82-6	10548-10551	etc	
82-7	10551-10552	.	
82-8	10552-10553	)	
82-9	10553-10558	Email	
82-10	10559-10560	–	
82-11	10561-10568	disable	
82-12	10569-10571	if	
82-13	10572-10575	you	
82-14	10575-10576	’	
82-15	10576-10578	re	
82-16	10579-10584	using	
82-17	10585-10594	3rd-party	
82-18	10595-10600	email	
82-19	10600-10601	.	

#Text=(G-Suite, MXroute, etc.)FTP/SFTP – disable if not using.Memcache/Redis – disable if you don’t use it.Other services – Varnish, Elastipress, etc.If you want to be OCD, scan your system for all listening ports and services.6.
83-1	10602-10603	(	
83-2	10603-10610	G-Suite	
83-3	10610-10611	,	
83-4	10612-10619	MXroute	
83-5	10619-10620	,	
83-6	10621-10624	etc	
83-7	10624-10625	.	
83-8	10625-10626	)	
83-9	10626-10629	FTP	
83-10	10629-10630	/	
83-11	10630-10634	SFTP	
83-12	10635-10636	–	
83-13	10637-10644	disable	
83-14	10645-10647	if	
83-15	10648-10651	not	
83-16	10652-10666	using.Memcache	
83-17	10666-10667	/	
83-18	10667-10672	Redis	
83-19	10673-10674	–	
83-20	10675-10682	disable	
83-21	10683-10685	if	
83-22	10686-10689	you	
83-23	10690-10693	don	
83-24	10693-10694	’	
83-25	10694-10695	t	
83-26	10696-10699	use	
83-27	10700-10708	it.Other	
83-28	10709-10717	services	
83-29	10718-10719	–	
83-30	10720-10727	Varnish	
83-31	10727-10728	,	
83-32	10729-10740	Elastipress	
83-33	10740-10741	,	
83-34	10742-10748	etc.If	
83-35	10749-10752	you	
83-36	10753-10757	want	
83-37	10758-10760	to	
83-38	10761-10763	be	
83-39	10764-10767	OCD	
83-40	10767-10768	,	
83-41	10769-10773	scan	
83-42	10774-10778	your	
83-43	10779-10785	system	
83-44	10786-10789	for	
83-45	10790-10793	all	
83-46	10794-10803	listening	
83-47	10804-10809	ports	
83-48	10810-10813	and	
83-49	10814-10822	services	
83-50	10822-10824	.6	
83-51	10824-10825	.	

#Text=Remove unused server modules (ADV, LOW)Want to be even more OCD?
84-1	10826-10832	Remove	
84-2	10833-10839	unused	
84-3	10840-10846	server	
84-4	10847-10854	modules	
84-5	10855-10856	(	
84-6	10856-10859	ADV	
84-7	10859-10860	,	
84-8	10861-10864	LOW	
84-9	10864-10865	)	
84-10	10865-10869	Want	
84-11	10870-10872	to	
84-12	10873-10875	be	
84-13	10876-10880	even	
84-14	10881-10885	more	
84-15	10886-10889	OCD	
84-16	10889-10890	?	

#Text=Disable every single module not used by the server.
85-1	10891-10898	Disable	
85-2	10899-10904	every	
85-3	10905-10911	single	
85-4	10912-10918	module	
85-5	10919-10922	not	
85-6	10923-10927	used	
85-7	10928-10930	by	
85-8	10931-10934	the	
85-9	10935-10941	server	
85-10	10941-10942	.	

#Text=Some of them are junk unused server stuff; others are unused Linux distro stuff.
86-1	10943-10947	Some	
86-2	10948-10950	of	
86-3	10951-10955	them	
86-4	10956-10959	are	
86-5	10960-10964	junk	
86-6	10965-10971	unused	
86-7	10972-10978	server	
86-8	10979-10984	stuff	
86-9	10984-10985	;	
86-10	10986-10992	others	
86-11	10993-10996	are	
86-12	10997-11003	unused	
86-13	11004-11009	Linux	
86-14	11010-11016	distro	
86-15	11017-11022	stuff	
86-16	11022-11023	.	

#Text=Old school Apache-compatible stacks or unoptimized control panels tend to have many unused modules enabled by default (while also not enabling ones you might need).Read documentation and check online before blindly removing or replacing them.
87-1	11024-11027	Old	
87-2	11028-11034	school	
87-3	11035-11052	Apache-compatible	
87-4	11053-11059	stacks	
87-5	11060-11062	or	
87-6	11063-11074	unoptimized	
87-7	11075-11082	control	
87-8	11083-11089	panels	
87-9	11090-11094	tend	
87-10	11095-11097	to	
87-11	11098-11102	have	
87-12	11103-11107	many	
87-13	11108-11114	unused	
87-14	11115-11122	modules	
87-15	11123-11130	enabled	
87-16	11131-11133	by	
87-17	11134-11141	default	
87-18	11142-11143	(	
87-19	11143-11148	while	
87-20	11149-11153	also	
87-21	11154-11157	not	
87-22	11158-11166	enabling	
87-23	11167-11171	ones	
87-24	11172-11175	you	
87-25	11176-11181	might	
87-26	11182-11186	need	
87-27	11186-11187	)	
87-28	11187-11188	.	
87-29	11188-11192	Read	
87-30	11193-11206	documentation	
87-31	11207-11210	and	
87-32	11211-11216	check	
87-33	11217-11223	online	
87-34	11224-11230	before	
87-35	11231-11238	blindly	
87-36	11239-11247	removing	
87-37	11248-11250	or	
87-38	11251-11260	replacing	
87-39	11261-11265	them	
87-40	11265-11266	.	

#Text=The danger is you disable things you need (or worse, one that improves performance).
88-1	11267-11270	The	
88-2	11271-11277	danger	
88-3	11278-11280	is	
88-4	11281-11284	you	
88-5	11285-11292	disable	
88-6	11293-11299	things	
88-7	11300-11303	you	
88-8	11304-11308	need	
88-9	11309-11310	(	
88-10	11310-11312	or	
88-11	11313-11318	worse	
88-12	11318-11319	,	
88-13	11320-11323	one	
88-14	11324-11328	that	
88-15	11329-11337	improves	
88-16	11338-11349	performance	
88-17	11349-11350	)	
88-18	11350-11351	.	

#Text=You should make a list of disabled services/modules to reference later or give to a contractor when troubleshooting.7.
89-1	11352-11355	You	
89-2	11356-11362	should	
89-3	11363-11367	make	
89-4	11368-11369	a	
89-5	11370-11374	list	
89-6	11375-11377	of	
89-7	11378-11386	disabled	
89-8	11387-11395	services	
89-9	11395-11396	/	
89-10	11396-11403	modules	
89-11	11404-11406	to	
89-12	11407-11416	reference	
89-13	11417-11422	later	
89-14	11423-11425	or	
89-15	11426-11430	give	
89-16	11431-11433	to	
89-17	11434-11435	a	
89-18	11436-11446	contractor	
89-19	11447-11451	when	
89-20	11452-11467	troubleshooting	
89-21	11467-11469	.7	
89-22	11469-11470	.	

#Text=Use the latest PHP version (INT-ADV, HIGH)The PHP version alone makes a HUGE difference.Use the latest PHP version possible!
90-1	11471-11474	Use	
90-2	11475-11478	the	
90-3	11479-11485	latest	
90-4	11486-11489	PHP	
90-5	11490-11497	version	
90-6	11498-11499	(	
90-7	11499-11506	INT-ADV	
90-8	11506-11507	,	
90-9	11508-11512	HIGH	
90-10	11512-11513	)	
90-11	11513-11516	The	
90-12	11517-11520	PHP	
90-13	11521-11528	version	
90-14	11529-11534	alone	
90-15	11535-11540	makes	
90-16	11541-11542	a	
90-17	11543-11547	HUGE	
90-18	11548-11562	difference.Use	
90-19	11563-11566	the	
90-20	11567-11573	latest	
90-21	11574-11577	PHP	
90-22	11578-11585	version	
90-23	11586-11594	possible	
90-24	11594-11595	!	

#Text=(Easily-configured from your webhosting control panel)For example, PHP 7.0 is 3 times faster than PHP 5.6.Even PHP 7.3 is 10% faster than PHP 7.2.At the time of this writing, PHP 7.4 is available.Be wary of any webhosts still using old PHP!
91-1	11596-11597	(	
91-2	11597-11614	Easily-configured	
91-3	11615-11619	from	
91-4	11620-11624	your	
91-5	11625-11635	webhosting	
91-6	11636-11643	control	
91-7	11644-11649	panel	
91-8	11649-11650	)	
91-9	11650-11653	For	
91-10	11654-11661	example	
91-11	11661-11662	,	
91-12	11663-11666	PHP	
91-13	11667-11670	7.0	
91-14	11671-11673	is	
91-15	11674-11675	3	
91-16	11676-11681	times	
91-17	11682-11688	faster	
91-18	11689-11693	than	
91-19	11694-11697	PHP	
91-20	11698-11701	5.6	
91-21	11701-11702	.	
91-22	11702-11706	Even	
91-23	11707-11710	PHP	
91-24	11711-11714	7.3	
91-25	11715-11717	is	
91-26	11718-11721	10%	
91-27	11722-11728	faster	
91-28	11729-11733	than	
91-29	11734-11737	PHP	
91-30	11738-11741	7.2	
91-31	11741-11742	.	
91-32	11742-11744	At	
91-33	11745-11748	the	
91-34	11749-11753	time	
91-35	11754-11756	of	
91-36	11757-11761	this	
91-37	11762-11769	writing	
91-38	11769-11770	,	
91-39	11771-11774	PHP	
91-40	11775-11778	7.4	
91-41	11779-11781	is	
91-42	11782-11794	available.Be	
91-43	11795-11799	wary	
91-44	11800-11802	of	
91-45	11803-11806	any	
91-46	11807-11815	webhosts	
91-47	11816-11821	still	
91-48	11822-11827	using	
91-49	11828-11831	old	
91-50	11832-11835	PHP	
91-51	11835-11836	!	

#Text=Keeping your website PHP version updated is not only for speed but also security.
92-1	11836-11843	Keeping	
92-2	11844-11848	your	
92-3	11849-11856	website	
92-4	11857-11860	PHP	
92-5	11861-11868	version	
92-6	11869-11876	updated	
92-7	11877-11879	is	
92-8	11880-11883	not	
92-9	11884-11888	only	
92-10	11889-11892	for	
92-11	11893-11898	speed	
92-12	11899-11902	but	
92-13	11903-11907	also	
92-14	11908-11916	security	
92-15	11916-11917	.	

#Text=The only issue is some themes or plugins may not be compatible with the latest PHP version.
93-1	11918-11921	The	
93-2	11922-11926	only	
93-3	11927-11932	issue	
93-4	11933-11935	is	
93-5	11936-11940	some	
93-6	11941-11947	themes	
93-7	11948-11950	or	
93-8	11951-11958	plugins	
93-9	11959-11962	may	
93-10	11963-11966	not	
93-11	11967-11969	be	
93-12	11970-11980	compatible	
93-13	11981-11985	with	
93-14	11986-11989	the	
93-15	11990-11996	latest	
93-16	11997-12000	PHP	
93-17	12001-12008	version	
93-18	12008-12009	.	

#Text=You’ll know because your site doesn’t work right, or looks weird.
94-1	12010-12013	You	
94-2	12013-12014	’	
94-3	12014-12016	ll	
94-4	12017-12021	know	
94-5	12022-12029	because	
94-6	12030-12034	your	
94-7	12035-12039	site	
94-8	12040-12045	doesn	
94-9	12045-12046	’	
94-10	12046-12047	t	
94-11	12048-12052	work	
94-12	12053-12058	right	
94-13	12058-12059	,	
94-14	12060-12062	or	
94-15	12063-12068	looks	
94-16	12069-12074	weird	
94-17	12074-12075	.	

#Text=So test carefully and keep themes/plugins updated, which helps them stay compatible with the latest PHP.8.
95-1	12076-12078	So	
95-2	12079-12083	test	
95-3	12084-12093	carefully	
95-4	12094-12097	and	
95-5	12098-12102	keep	
95-6	12103-12109	themes	
95-7	12109-12110	/	
95-8	12110-12117	plugins	
95-9	12118-12125	updated	
95-10	12125-12126	,	
95-11	12127-12132	which	
95-12	12133-12138	helps	
95-13	12139-12143	them	
95-14	12144-12148	stay	
95-15	12149-12159	compatible	
95-16	12160-12164	with	
95-17	12165-12168	the	
95-18	12169-12175	latest	
95-19	12176-12179	PHP	
95-20	12179-12181	.8	
95-21	12181-12182	.	

#Text=Recommended php.ini configurations (INT, MED)Most of you (on shared hosting) won’t even have access to these settings or know how to set them.
96-1	12183-12194	Recommended	
96-2	12195-12202	php.ini	
96-3	12203-12217	configurations	
96-4	12218-12219	(	
96-5	12219-12222	INT	
96-6	12222-12223	,	
96-7	12224-12227	MED	
96-8	12227-12228	)	
96-9	12228-12232	Most	
96-10	12233-12235	of	
96-11	12236-12239	you	
96-12	12240-12241	(	
96-13	12241-12243	on	
96-14	12244-12250	shared	
96-15	12251-12258	hosting	
96-16	12258-12259	)	
96-17	12260-12263	won	
96-18	12263-12264	’	
96-19	12264-12265	t	
96-20	12266-12270	even	
96-21	12271-12275	have	
96-22	12276-12282	access	
96-23	12283-12285	to	
96-24	12286-12291	these	
96-25	12292-12300	settings	
96-26	12301-12303	or	
96-27	12304-12308	know	
96-28	12309-12312	how	
96-29	12313-12315	to	
96-30	12316-12319	set	
96-31	12320-12324	them	
96-32	12324-12325	.	

#Text=But nonetheless, here are my recommendations.max_execution_time – lower (30-60 sec) is better to prevent resources hogs from lagging out the server.
97-1	12326-12329	But	
97-2	12330-12341	nonetheless	
97-3	12341-12342	,	
97-4	12343-12347	here	
97-5	12348-12351	are	
97-6	12352-12354	my	
97-7	12355-12389	recommendations.max_execution_time	
97-8	12390-12391	–	
97-9	12392-12397	lower	
97-10	12398-12399	(	
97-11	12399-12401	30	
97-12	12401-12402	-	
97-13	12402-12404	60	
97-14	12405-12408	sec	
97-15	12408-12409	)	
97-16	12410-12412	is	
97-17	12413-12419	better	
97-18	12420-12422	to	
97-19	12423-12430	prevent	
97-20	12431-12440	resources	
97-21	12441-12445	hogs	
97-22	12446-12450	from	
97-23	12451-12458	lagging	
97-24	12459-12462	out	
97-25	12463-12466	the	
97-26	12467-12473	server	
97-27	12473-12474	.	

#Text=But you may need higher execution times for long processes like imports, exports, backups.max_input_time – lower (60 sec) is better.
98-1	12475-12478	But	
98-2	12479-12482	you	
98-3	12483-12486	may	
98-4	12487-12491	need	
98-5	12492-12498	higher	
98-6	12499-12508	execution	
98-7	12509-12514	times	
98-8	12515-12518	for	
98-9	12519-12523	long	
98-10	12524-12533	processes	
98-11	12534-12538	like	
98-12	12539-12546	imports	
98-13	12546-12547	,	
98-14	12548-12555	exports	
98-15	12555-12556	,	
98-16	12557-12579	backups.max_input_time	
98-17	12580-12581	–	
98-18	12582-12587	lower	
98-19	12588-12589	(	
98-20	12589-12591	60	
98-21	12592-12595	sec	
98-22	12595-12596	)	
98-23	12597-12599	is	
98-24	12600-12606	better	
98-25	12606-12607	.	

#Text=Increase only if you’re trying to import something that takes forever.max_input_vars – set to “1000”, unless some plugins need higher.memory_limit – try “256M” to be safe.
99-1	12608-12616	Increase	
99-2	12617-12621	only	
99-3	12622-12624	if	
99-4	12625-12628	you	
99-5	12628-12629	’	
99-6	12629-12631	re	
99-7	12632-12638	trying	
99-8	12639-12641	to	
99-9	12642-12648	import	
99-10	12649-12658	something	
99-11	12659-12663	that	
99-12	12664-12669	takes	
99-13	12670-12692	forever.max_input_vars	
99-14	12693-12694	–	
99-15	12695-12698	set	
99-16	12699-12701	to	
99-17	12702-12703	“	
99-18	12703-12707	1000	
99-19	12707-12708	”	
99-20	12708-12709	,	
99-21	12710-12716	unless	
99-22	12717-12721	some	
99-23	12722-12729	plugins	
99-24	12730-12734	need	
99-25	12735-12754	higher.memory_limit	
99-26	12755-12756	–	
99-27	12757-12760	try	
99-28	12761-12762	“	
99-29	12762-12766	256M	
99-30	12766-12767	”	
99-31	12768-12770	to	
99-32	12771-12773	be	
99-33	12774-12778	safe	
99-34	12778-12779	.	

#Text=Raise if you have heavy plugins.
100-1	12780-12785	Raise	
100-2	12786-12788	if	
100-3	12789-12792	you	
100-4	12793-12797	have	
100-5	12798-12803	heavy	
100-6	12804-12811	plugins	
100-7	12811-12812	.	

#Text=I like to set lower so I’m notified immediately when there are memory hogs.
101-1	12813-12814	I	
101-2	12815-12819	like	
101-3	12820-12822	to	
101-4	12823-12826	set	
101-5	12827-12832	lower	
101-6	12833-12835	so	
101-7	12836-12837	I	
101-8	12837-12838	’	
101-9	12838-12839	m	
101-10	12840-12848	notified	
101-11	12849-12860	immediately	
101-12	12861-12865	when	
101-13	12866-12871	there	
101-14	12872-12875	are	
101-15	12876-12882	memory	
101-16	12883-12887	hogs	
101-17	12887-12888	.	

#Text=The “error_log” will tell you if you need more.zlib.output_compression – may or may not help.
102-1	12889-12892	The	
102-2	12893-12894	“	
102-3	12894-12903	error_log	
102-4	12903-12904	”	
102-5	12905-12909	will	
102-6	12910-12914	tell	
102-7	12915-12918	you	
102-8	12919-12921	if	
102-9	12922-12925	you	
102-10	12926-12930	need	
102-11	12931-12959	more.zlib.output_compression	
102-12	12960-12961	–	
102-13	12962-12965	may	
102-14	12966-12968	or	
102-15	12969-12972	may	
102-16	12973-12976	not	
102-17	12977-12981	help	
102-18	12981-12982	.	

#Text=I leave it off.9.
103-1	12983-12984	I	
103-2	12985-12990	leave	
103-3	12991-12993	it	
103-4	12994-12997	off	
103-5	12997-12999	.9	
103-6	12999-13000	.	

#Text=Use an updated MySQL fork version (INT-ADV, LOW)Most people only know of MySQL, which is now acquired/owned by Oracle.
104-1	13001-13004	Use	
104-2	13005-13007	an	
104-3	13008-13015	updated	
104-4	13016-13021	MySQL	
104-5	13022-13026	fork	
104-6	13027-13034	version	
104-7	13035-13036	(	
104-8	13036-13043	INT-ADV	
104-9	13043-13044	,	
104-10	13045-13048	LOW	
104-11	13048-13049	)	
104-12	13049-13053	Most	
104-13	13054-13060	people	
104-14	13061-13065	only	
104-15	13066-13070	know	
104-16	13071-13073	of	
104-17	13074-13079	MySQL	
104-18	13079-13080	,	
104-19	13081-13086	which	
104-20	13087-13089	is	
104-21	13090-13093	now	
104-22	13094-13102	acquired	
104-23	13102-13103	/	
104-24	13103-13108	owned	
104-25	13109-13111	by	
104-26	13112-13118	Oracle	
104-27	13118-13119	.	

#Text=There’s also MariaDB (a fork of MySQL by its original creators) and Percona, and also others.MySQL 8 is much better than MySQL 5.7.But it’s better if you can use MariaDB over MySQL.
105-1	13120-13125	There	
105-2	13125-13126	’	
105-3	13126-13127	s	
105-4	13128-13132	also	
105-5	13133-13140	MariaDB	
105-6	13141-13142	(	
105-7	13142-13143	a	
105-8	13144-13148	fork	
105-9	13149-13151	of	
105-10	13152-13157	MySQL	
105-11	13158-13160	by	
105-12	13161-13164	its	
105-13	13165-13173	original	
105-14	13174-13182	creators	
105-15	13182-13183	)	
105-16	13184-13187	and	
105-17	13188-13195	Percona	
105-18	13195-13196	,	
105-19	13197-13200	and	
105-20	13201-13205	also	
105-21	13206-13218	others.MySQL	
105-22	13219-13220	8	
105-23	13221-13223	is	
105-24	13224-13228	much	
105-25	13229-13235	better	
105-26	13236-13240	than	
105-27	13241-13246	MySQL	
105-28	13247-13250	5.7	
105-29	13250-13251	.	
105-30	13251-13254	But	
105-31	13255-13257	it	
105-32	13257-13258	’	
105-33	13258-13259	s	
105-34	13260-13266	better	
105-35	13267-13269	if	
105-36	13270-13273	you	
105-37	13274-13277	can	
105-38	13278-13281	use	
105-39	13282-13289	MariaDB	
105-40	13290-13294	over	
105-41	13295-13300	MySQL	
105-42	13300-13301	.	

#Text=Community-friendly and better performance than vanilla MySQL 5.7.Use the latest MariaDB version that you can.Whatever you do, just don’t use MySQL 5.7.What about Percona?
106-1	13302-13320	Community-friendly	
106-2	13321-13324	and	
106-3	13325-13331	better	
106-4	13332-13343	performance	
106-5	13344-13348	than	
106-6	13349-13356	vanilla	
106-7	13357-13362	MySQL	
106-8	13363-13366	5.7	
106-9	13366-13367	.	
106-10	13367-13370	Use	
106-11	13371-13374	the	
106-12	13375-13381	latest	
106-13	13382-13389	MariaDB	
106-14	13390-13397	version	
106-15	13398-13402	that	
106-16	13403-13406	you	
106-17	13407-13419	can.Whatever	
106-18	13420-13423	you	
106-19	13424-13426	do	
106-20	13426-13427	,	
106-21	13428-13432	just	
106-22	13433-13436	don	
106-23	13436-13437	’	
106-24	13437-13438	t	
106-25	13439-13442	use	
106-26	13443-13448	MySQL	
106-27	13449-13452	5.7	
106-28	13452-13453	.	
106-29	13453-13457	What	
106-30	13458-13463	about	
106-31	13464-13471	Percona	
106-32	13471-13472	?	

#Text=What about the other 3rd-party MySQL-compatible forks?
107-1	13473-13477	What	
107-2	13478-13483	about	
107-3	13484-13487	the	
107-4	13488-13493	other	
107-5	13494-13503	3rd-party	
107-6	13504-13520	MySQL-compatible	
107-7	13521-13526	forks	
107-8	13526-13527	?	

#Text=For most sites, it makes little difference if any.
108-1	13528-13531	For	
108-2	13532-13536	most	
108-3	13537-13542	sites	
108-4	13542-13543	,	
108-5	13544-13546	it	
108-6	13547-13552	makes	
108-7	13553-13559	little	
108-8	13560-13570	difference	
108-9	13571-13573	if	
108-10	13574-13577	any	
108-11	13577-13578	.	

#Text=Don’t forget to backup your database before changing or upgrading MySQL.MySQL vs MariaDB vs Percona10.
109-1	13579-13582	Don	
109-2	13582-13583	’	
109-3	13583-13584	t	
109-4	13585-13591	forget	
109-5	13592-13594	to	
109-6	13595-13601	backup	
109-7	13602-13606	your	
109-8	13607-13615	database	
109-9	13616-13622	before	
109-10	13623-13631	changing	
109-11	13632-13634	or	
109-12	13635-13644	upgrading	
109-13	13645-13656	MySQL.MySQL	
109-14	13657-13659	vs	
109-15	13660-13667	MariaDB	
109-16	13668-13670	vs	
109-17	13671-13680	Percona10	
109-18	13680-13681	.	

#Text=Convert MySQL tables from MyISAM to InnoDB (BEG, LOW)Make sure your tables are set to InnoDB instead of MyISAM.InnoDB is newer and regarded as being better overall (faster, safer).MyISAM can be faster in some scenarios (when mostly read-only).You can convert manually in phpMyAdmin or use a plugin (Servebolt Optimizer or LiteSpeed Cache).
110-1	13682-13689	Convert	
110-2	13690-13695	MySQL	
110-3	13696-13702	tables	
110-4	13703-13707	from	
110-5	13708-13714	MyISAM	
110-6	13715-13717	to	
110-7	13718-13724	InnoDB	
110-8	13725-13726	(	
110-9	13726-13729	BEG	
110-10	13729-13730	,	
110-11	13731-13734	LOW	
110-12	13734-13735	)	
110-13	13735-13739	Make	
110-14	13740-13744	sure	
110-15	13745-13749	your	
110-16	13750-13756	tables	
110-17	13757-13760	are	
110-18	13761-13764	set	
110-19	13765-13767	to	
110-20	13768-13774	InnoDB	
110-21	13775-13782	instead	
110-22	13783-13785	of	
110-23	13786-13799	MyISAM.InnoDB	
110-24	13800-13802	is	
110-25	13803-13808	newer	
110-26	13809-13812	and	
110-27	13813-13821	regarded	
110-28	13822-13824	as	
110-29	13825-13830	being	
110-30	13831-13837	better	
110-31	13838-13845	overall	
110-32	13846-13847	(	
110-33	13847-13853	faster	
110-34	13853-13854	,	
110-35	13855-13860	safer	
110-36	13860-13861	)	
110-37	13861-13862	.	
110-38	13862-13868	MyISAM	
110-39	13869-13872	can	
110-40	13873-13875	be	
110-41	13876-13882	faster	
110-42	13883-13885	in	
110-43	13886-13890	some	
110-44	13891-13900	scenarios	
110-45	13901-13902	(	
110-46	13902-13906	when	
110-47	13907-13913	mostly	
110-48	13914-13923	read-only	
110-49	13923-13924	)	
110-50	13924-13925	.	
110-51	13925-13928	You	
110-52	13929-13932	can	
110-53	13933-13940	convert	
110-54	13941-13949	manually	
110-55	13950-13952	in	
110-56	13953-13963	phpMyAdmin	
110-57	13964-13966	or	
110-58	13967-13970	use	
110-59	13971-13972	a	
110-60	13973-13979	plugin	
110-61	13980-13981	(	
110-62	13981-13990	Servebolt	
110-63	13991-14000	Optimizer	
110-64	14001-14003	or	
110-65	14004-14013	LiteSpeed	
110-66	14014-14019	Cache	
110-67	14019-14020	)	
110-68	14020-14021	.	

#Text=Can delete the plugin afterwards if you don’t need it.11.
111-1	14022-14025	Can	
111-2	14026-14032	delete	
111-3	14033-14036	the	
111-4	14037-14043	plugin	
111-5	14044-14054	afterwards	
111-6	14055-14057	if	
111-7	14058-14061	you	
111-8	14062-14065	don	
111-9	14065-14066	’	
111-10	14066-14067	t	
111-11	14068-14072	need	
111-12	14073-14075	it	
111-13	14075-14078	.11	
111-14	14078-14079	.	

#Text=Tuning MySQL configurations (ADV, LOW)Usually not required (or noticeably-beneficial) for the average site but can help tremendously for large sites with high traffic and varying query lengths.You can run MySQLTuner for general recommendations or ask around the sys-admin community to see what everyone else uses.Buffer size, packet size, cache, connections, cache, stack, etc…are all among the general things to tune.Simple Linode guide.When trying out random configurations online or copying somebody else’s, please make sure their environment is similar to yours.
112-1	14080-14086	Tuning	
112-2	14087-14092	MySQL	
112-3	14093-14107	configurations	
112-4	14108-14109	(	
112-5	14109-14112	ADV	
112-6	14112-14113	,	
112-7	14114-14117	LOW	
112-8	14117-14118	)	
112-9	14118-14125	Usually	
112-10	14126-14129	not	
112-11	14130-14138	required	
112-12	14139-14140	(	
112-13	14140-14142	or	
112-14	14143-14164	noticeably-beneficial	
112-15	14164-14165	)	
112-16	14166-14169	for	
112-17	14170-14173	the	
112-18	14174-14181	average	
112-19	14182-14186	site	
112-20	14187-14190	but	
112-21	14191-14194	can	
112-22	14195-14199	help	
112-23	14200-14212	tremendously	
112-24	14213-14216	for	
112-25	14217-14222	large	
112-26	14223-14228	sites	
112-27	14229-14233	with	
112-28	14234-14238	high	
112-29	14239-14246	traffic	
112-30	14247-14250	and	
112-31	14251-14258	varying	
112-32	14259-14264	query	
112-33	14265-14276	lengths.You	
112-34	14277-14280	can	
112-35	14281-14284	run	
112-36	14285-14295	MySQLTuner	
112-37	14296-14299	for	
112-38	14300-14307	general	
112-39	14308-14323	recommendations	
112-40	14324-14326	or	
112-41	14327-14330	ask	
112-42	14331-14337	around	
112-43	14338-14341	the	
112-44	14342-14351	sys-admin	
112-45	14352-14361	community	
112-46	14362-14364	to	
112-47	14365-14368	see	
112-48	14369-14373	what	
112-49	14374-14382	everyone	
112-50	14383-14387	else	
112-51	14388-14399	uses.Buffer	
112-52	14400-14404	size	
112-53	14404-14405	,	
112-54	14406-14412	packet	
112-55	14413-14417	size	
112-56	14417-14418	,	
112-57	14419-14424	cache	
112-58	14424-14425	,	
112-59	14426-14437	connections	
112-60	14437-14438	,	
112-61	14439-14444	cache	
112-62	14444-14445	,	
112-63	14446-14451	stack	
112-64	14451-14452	,	
112-65	14453-14456	etc	
112-66	14456-14457	…	
112-67	14457-14460	are	
112-68	14461-14464	all	
112-69	14465-14470	among	
112-70	14471-14474	the	
112-71	14475-14482	general	
112-72	14483-14489	things	
112-73	14490-14492	to	
112-74	14493-14504	tune.Simple	
112-75	14505-14511	Linode	
112-76	14512-14522	guide.When	
112-77	14523-14529	trying	
112-78	14530-14533	out	
112-79	14534-14540	random	
112-80	14541-14555	configurations	
112-81	14556-14562	online	
112-82	14563-14565	or	
112-83	14566-14573	copying	
112-84	14574-14582	somebody	
112-85	14583-14587	else	
112-86	14587-14588	’	
112-87	14588-14589	s	
112-88	14589-14590	,	
112-89	14591-14597	please	
112-90	14598-14602	make	
112-91	14603-14607	sure	
112-92	14608-14613	their	
112-93	14614-14625	environment	
112-94	14626-14628	is	
112-95	14629-14636	similar	
112-96	14637-14639	to	
112-97	14640-14645	yours	
112-98	14645-14646	.	

#Text=The main distinctions are:server size, resources availablehow many clients/sites on serverhow many end users on serverhow much traffichow big are the siteswhat kind of read/write behaviorIt’s important to know whether their settings are for efficiency (high-tenant webhost) or aggressive performance (low-tenant webserver).12.
113-1	14647-14650	The	
113-2	14651-14655	main	
113-3	14656-14668	distinctions	
113-4	14669-14672	are	
113-5	14672-14673	:	
113-6	14673-14679	server	
113-7	14680-14684	size	
113-8	14684-14685	,	
113-9	14686-14695	resources	
113-10	14696-14708	availablehow	
113-11	14709-14713	many	
113-12	14714-14721	clients	
113-13	14721-14722	/	
113-14	14722-14727	sites	
113-15	14728-14730	on	
113-16	14731-14740	serverhow	
113-17	14741-14745	many	
113-18	14746-14749	end	
113-19	14750-14755	users	
113-20	14756-14758	on	
113-21	14759-14768	serverhow	
113-22	14769-14773	much	
113-23	14774-14784	traffichow	
113-24	14785-14788	big	
113-25	14789-14792	are	
113-26	14793-14796	the	
113-27	14797-14806	siteswhat	
113-28	14807-14811	kind	
113-29	14812-14814	of	
113-30	14815-14819	read	
113-31	14819-14820	/	
113-32	14820-14825	write	
113-33	14826-14836	behaviorIt	
113-34	14836-14837	’	
113-35	14837-14838	s	
113-36	14839-14848	important	
113-37	14849-14851	to	
113-38	14852-14856	know	
113-39	14857-14864	whether	
113-40	14865-14870	their	
113-41	14871-14879	settings	
113-42	14880-14883	are	
113-43	14884-14887	for	
113-44	14888-14898	efficiency	
113-45	14899-14900	(	
113-46	14900-14911	high-tenant	
113-47	14912-14919	webhost	
113-48	14919-14920	)	
113-49	14921-14923	or	
113-50	14924-14934	aggressive	
113-51	14935-14946	performance	
113-52	14947-14948	(	
113-53	14948-14958	low-tenant	
113-54	14959-14968	webserver	
113-55	14968-14969	)	
113-56	14969-14972	.12	
113-57	14972-14973	.	

#Text=Server full-page caching (ADV, HIGH)Full-page caching can help speed-up any website.
114-1	14974-14980	Server	
114-2	14981-14990	full-page	
114-3	14991-14998	caching	
114-4	14999-15000	(	
114-5	15000-15003	ADV	
114-6	15003-15004	,	
114-7	15005-15009	HIGH	
114-8	15009-15010	)	
114-9	15010-15019	Full-page	
114-10	15020-15027	caching	
114-11	15028-15031	can	
114-12	15032-15036	help	
114-13	15037-15045	speed-up	
114-14	15046-15049	any	
114-15	15050-15057	website	
114-16	15057-15058	.	

#Text=But caching directly from the server is much more powerful and resource-efficient than PHP/application-level caching done through a plugin.Some Apache or NGINX servers use Varnish – ugghhh, outdated.
115-1	15059-15062	But	
115-2	15063-15070	caching	
115-3	15071-15079	directly	
115-4	15080-15084	from	
115-5	15085-15088	the	
115-6	15089-15095	server	
115-7	15096-15098	is	
115-8	15099-15103	much	
115-9	15104-15108	more	
115-10	15109-15117	powerful	
115-11	15118-15121	and	
115-12	15122-15140	resource-efficient	
115-13	15141-15145	than	
115-14	15146-15149	PHP	
115-15	15149-15150	/	
115-16	15150-15167	application-level	
115-17	15168-15175	caching	
115-18	15176-15180	done	
115-19	15181-15188	through	
115-20	15189-15190	a	
115-21	15191-15202	plugin.Some	
115-22	15203-15209	Apache	
115-23	15210-15212	or	
115-24	15213-15218	NGINX	
115-25	15219-15226	servers	
115-26	15227-15230	use	
115-27	15231-15238	Varnish	
115-28	15239-15240	–	
115-29	15241-15247	ugghhh	
115-30	15247-15248	,	
115-31	15249-15257	outdated	
115-32	15257-15258	.	

#Text=Don’t use Varnish proxy.
116-1	15259-15262	Don	
116-2	15262-15263	’	
116-3	15263-15264	t	
116-4	15265-15268	use	
116-5	15269-15276	Varnish	
116-6	15277-15282	proxy	
116-7	15282-15283	.	

#Text=Just upgrade to pure-LiteSpeed or pure-NGINX stack.LiteSpeed servers can use LiteSpeed cache – powerful, many features, and comes with a handy WordPress cache plugin (called “LiteSpeed Cache”).NGINX servers can use FastCGI – great, super fast!
117-1	15284-15288	Just	
117-2	15289-15296	upgrade	
117-3	15297-15299	to	
117-4	15300-15314	pure-LiteSpeed	
117-5	15315-15317	or	
117-6	15318-15328	pure-NGINX	
117-7	15329-15344	stack.LiteSpeed	
117-8	15345-15352	servers	
117-9	15353-15356	can	
117-10	15357-15360	use	
117-11	15361-15370	LiteSpeed	
117-12	15371-15376	cache	
117-13	15377-15378	–	
117-14	15379-15387	powerful	
117-15	15387-15388	,	
117-16	15389-15393	many	
117-17	15394-15402	features	
117-18	15402-15403	,	
117-19	15404-15407	and	
117-20	15408-15413	comes	
117-21	15414-15418	with	
117-22	15419-15420	a	
117-23	15421-15426	handy	
117-24	15427-15436	WordPress	
117-25	15437-15442	cache	
117-26	15443-15449	plugin	
117-27	15450-15451	(	
117-28	15451-15457	called	
117-29	15458-15459	“	
117-30	15459-15468	LiteSpeed	
117-31	15469-15474	Cache	
117-32	15474-15475	”	
117-33	15475-15476	)	
117-34	15476-15477	.	
117-35	15477-15482	NGINX	
117-36	15483-15490	servers	
117-37	15491-15494	can	
117-38	15495-15498	use	
117-39	15499-15506	FastCGI	
117-40	15507-15508	–	
117-41	15509-15514	great	
117-42	15514-15515	,	
117-43	15516-15521	super	
117-44	15522-15526	fast	
117-45	15526-15527	!	

#Text=While there’s no official NGINX cache plugin for WordPress, there are various “NGINX helper” plugins to facilitate basic cache functions (like purging).To be safe, you should disable caching on pages with forms, carts, or checkouts.
118-1	15528-15533	While	
118-2	15534-15539	there	
118-3	15539-15540	’	
118-4	15540-15541	s	
118-5	15542-15544	no	
118-6	15545-15553	official	
118-7	15554-15559	NGINX	
118-8	15560-15565	cache	
118-9	15566-15572	plugin	
118-10	15573-15576	for	
118-11	15577-15586	WordPress	
118-12	15586-15587	,	
118-13	15588-15593	there	
118-14	15594-15597	are	
118-15	15598-15605	various	
118-16	15606-15607	“	
118-17	15607-15612	NGINX	
118-18	15613-15619	helper	
118-19	15619-15620	”	
118-20	15621-15628	plugins	
118-21	15629-15631	to	
118-22	15632-15642	facilitate	
118-23	15643-15648	basic	
118-24	15649-15654	cache	
118-25	15655-15664	functions	
118-26	15665-15666	(	
118-27	15666-15670	like	
118-28	15671-15678	purging	
118-29	15678-15679	)	
118-30	15679-15680	.	
118-31	15680-15682	To	
118-32	15683-15685	be	
118-33	15686-15690	safe	
118-34	15690-15691	,	
118-35	15692-15695	you	
118-36	15696-15702	should	
118-37	15703-15710	disable	
118-38	15711-15718	caching	
118-39	15719-15721	on	
118-40	15722-15727	pages	
118-41	15728-15732	with	
118-42	15733-15738	forms	
118-43	15738-15739	,	
118-44	15740-15745	carts	
118-45	15745-15746	,	
118-46	15747-15749	or	
118-47	15750-15759	checkouts	
118-48	15759-15760	.	

#Text=Private pages (for logged-in users) CAN be cached but don’t mess with that unless you have that much private traffic and ready to spend hours configuring private cache.You can only enable server-level caching if you own or have access to the server.
119-1	15761-15768	Private	
119-2	15769-15774	pages	
119-3	15775-15776	(	
119-4	15776-15779	for	
119-5	15780-15789	logged-in	
119-6	15790-15795	users	
119-7	15795-15796	)	
119-8	15797-15800	CAN	
119-9	15801-15803	be	
119-10	15804-15810	cached	
119-11	15811-15814	but	
119-12	15815-15818	don	
119-13	15818-15819	’	
119-14	15819-15820	t	
119-15	15821-15825	mess	
119-16	15826-15830	with	
119-17	15831-15835	that	
119-18	15836-15842	unless	
119-19	15843-15846	you	
119-20	15847-15851	have	
119-21	15852-15856	that	
119-22	15857-15861	much	
119-23	15862-15869	private	
119-24	15870-15877	traffic	
119-25	15878-15881	and	
119-26	15882-15887	ready	
119-27	15888-15890	to	
119-28	15891-15896	spend	
119-29	15897-15902	hours	
119-30	15903-15914	configuring	
119-31	15915-15922	private	
119-32	15923-15932	cache.You	
119-33	15933-15936	can	
119-34	15937-15941	only	
119-35	15942-15948	enable	
119-36	15949-15961	server-level	
119-37	15962-15969	caching	
119-38	15970-15972	if	
119-39	15973-15976	you	
119-40	15977-15980	own	
119-41	15981-15983	or	
119-42	15984-15988	have	
119-43	15989-15995	access	
119-44	15996-15998	to	
119-45	15999-16002	the	
119-46	16003-16009	server	
119-47	16009-16010	.	

#Text=Otherwise, your webhost decides what caching options you have.Shared hosting usually allows all caching plugins.Managed hosting usually limits you to only their proprietary one.13.
120-1	16011-16020	Otherwise	
120-2	16020-16021	,	
120-3	16022-16026	your	
120-4	16027-16034	webhost	
120-5	16035-16042	decides	
120-6	16043-16047	what	
120-7	16048-16055	caching	
120-8	16056-16063	options	
120-9	16064-16067	you	
120-10	16068-16079	have.Shared	
120-11	16080-16087	hosting	
120-12	16088-16095	usually	
120-13	16096-16102	allows	
120-14	16103-16106	all	
120-15	16107-16114	caching	
120-16	16115-16130	plugins.Managed	
120-17	16131-16138	hosting	
120-18	16139-16146	usually	
120-19	16147-16153	limits	
120-20	16154-16157	you	
120-21	16158-16160	to	
120-22	16161-16165	only	
120-23	16166-16171	their	
120-24	16172-16183	proprietary	
120-25	16184-16187	one	
120-26	16187-16190	.13	
120-27	16190-16191	.	

#Text=Memory object-caching (ADV, LOW-HIGH)Object-caching caches only the database queries instead of the entire page html.
121-1	16192-16198	Memory	
121-2	16199-16213	object-caching	
121-3	16214-16215	(	
121-4	16215-16218	ADV	
121-5	16218-16219	,	
121-6	16220-16228	LOW-HIGH	
121-7	16228-16229	)	
121-8	16229-16243	Object-caching	
121-9	16244-16250	caches	
121-10	16251-16255	only	
121-11	16256-16259	the	
121-12	16260-16268	database	
121-13	16269-16276	queries	
121-14	16277-16284	instead	
121-15	16285-16287	of	
121-16	16288-16291	the	
121-17	16292-16298	entire	
121-18	16299-16303	page	
121-19	16304-16308	html	
121-20	16308-16309	.	

#Text=This technically makes it “slower” than full-page caching (since you’re not caching the entire page) but useful for speeding up dynamic pages or private pages (logged-in users, admin backend) that can’t be static-cached.Any site with lots of constantly-refreshed data on frontend, or lots of numbers and reports on backend…would stand to benefit from object caching.
122-1	16310-16314	This	
122-2	16315-16326	technically	
122-3	16327-16332	makes	
122-4	16333-16335	it	
122-5	16336-16337	“	
122-6	16337-16343	slower	
122-7	16343-16344	”	
122-8	16345-16349	than	
122-9	16350-16359	full-page	
122-10	16360-16367	caching	
122-11	16368-16369	(	
122-12	16369-16374	since	
122-13	16375-16378	you	
122-14	16378-16379	’	
122-15	16379-16381	re	
122-16	16382-16385	not	
122-17	16386-16393	caching	
122-18	16394-16397	the	
122-19	16398-16404	entire	
122-20	16405-16409	page	
122-21	16409-16410	)	
122-22	16411-16414	but	
122-23	16415-16421	useful	
122-24	16422-16425	for	
122-25	16426-16434	speeding	
122-26	16435-16437	up	
122-27	16438-16445	dynamic	
122-28	16446-16451	pages	
122-29	16452-16454	or	
122-30	16455-16462	private	
122-31	16463-16468	pages	
122-32	16469-16470	(	
122-33	16470-16479	logged-in	
122-34	16480-16485	users	
122-35	16485-16486	,	
122-36	16487-16492	admin	
122-37	16493-16500	backend	
122-38	16500-16501	)	
122-39	16502-16506	that	
122-40	16507-16510	can	
122-41	16510-16511	’	
122-42	16511-16512	t	
122-43	16513-16515	be	
122-44	16516-16533	static-cached.Any	
122-45	16534-16538	site	
122-46	16539-16543	with	
122-47	16544-16548	lots	
122-48	16549-16551	of	
122-49	16552-16572	constantly-refreshed	
122-50	16573-16577	data	
122-51	16578-16580	on	
122-52	16581-16589	frontend	
122-53	16589-16590	,	
122-54	16591-16593	or	
122-55	16594-16598	lots	
122-56	16599-16601	of	
122-57	16602-16609	numbers	
122-58	16610-16613	and	
122-59	16614-16621	reports	
122-60	16622-16624	on	
122-61	16625-16632	backend	
122-62	16632-16633	…	
122-63	16633-16638	would	
122-64	16639-16644	stand	
122-65	16645-16647	to	
122-66	16648-16655	benefit	
122-67	16656-16660	from	
122-68	16661-16667	object	
122-69	16668-16675	caching	
122-70	16675-16676	.	

#Text=Mostly-static sites or low-traffic sites would not benefit from object-caching at all; don’t use it on them…it can make them slower!
123-1	16677-16690	Mostly-static	
123-2	16691-16696	sites	
123-3	16697-16699	or	
123-4	16700-16711	low-traffic	
123-5	16712-16717	sites	
123-6	16718-16723	would	
123-7	16724-16727	not	
123-8	16728-16735	benefit	
123-9	16736-16740	from	
123-10	16741-16755	object-caching	
123-11	16756-16758	at	
123-12	16759-16762	all	
123-13	16762-16763	;	
123-14	16764-16767	don	
123-15	16767-16768	’	
123-16	16768-16769	t	
123-17	16770-16773	use	
123-18	16774-16776	it	
123-19	16777-16779	on	
123-20	16780-16784	them	
123-21	16784-16785	…	
123-22	16785-16787	it	
123-23	16788-16791	can	
123-24	16792-16796	make	
123-25	16797-16801	them	
123-26	16802-16808	slower	
123-27	16808-16809	!	

#Text=Redis is the gold standard in object caching now.
124-1	16809-16814	Redis	
124-2	16815-16817	is	
124-3	16818-16821	the	
124-4	16822-16826	gold	
124-5	16827-16835	standard	
124-6	16836-16838	in	
124-7	16839-16845	object	
124-8	16846-16853	caching	
124-9	16854-16857	now	
124-10	16857-16858	.	

#Text=It’s superior to the older memcache in almost every way.Memcache is only used in rare situations where Redis doesn’t work or is slower.If your data doesn’t change much, you can set longer object caching times (e.g. 60 mins and up).
125-1	16859-16861	It	
125-2	16861-16862	’	
125-3	16862-16863	s	
125-4	16864-16872	superior	
125-5	16873-16875	to	
125-6	16876-16879	the	
125-7	16880-16885	older	
125-8	16886-16894	memcache	
125-9	16895-16897	in	
125-10	16898-16904	almost	
125-11	16905-16910	every	
125-12	16911-16923	way.Memcache	
125-13	16924-16926	is	
125-14	16927-16931	only	
125-15	16932-16936	used	
125-16	16937-16939	in	
125-17	16940-16944	rare	
125-18	16945-16955	situations	
125-19	16956-16961	where	
125-20	16962-16967	Redis	
125-21	16968-16973	doesn	
125-22	16973-16974	’	
125-23	16974-16975	t	
125-24	16976-16980	work	
125-25	16981-16983	or	
125-26	16984-16986	is	
125-27	16987-16996	slower.If	
125-28	16997-17001	your	
125-29	17002-17006	data	
125-30	17007-17012	doesn	
125-31	17012-17013	’	
125-32	17013-17014	t	
125-33	17015-17021	change	
125-34	17022-17026	much	
125-35	17026-17027	,	
125-36	17028-17031	you	
125-37	17032-17035	can	
125-38	17036-17039	set	
125-39	17040-17046	longer	
125-40	17047-17053	object	
125-41	17054-17061	caching	
125-42	17062-17067	times	
125-43	17068-17069	(	
125-44	17069-17072	e.g	
125-45	17072-17073	.	
125-46	17074-17076	60	
125-47	17077-17081	mins	
125-48	17082-17085	and	
125-49	17086-17088	up	
125-50	17088-17089	)	
125-51	17089-17090	.	

#Text=Longer times means fewer database queries.Otherwise, stick with the default 5-10 mins to be safe…unless you don’t mind users seeing stale data.Object caching can be managed by WordPress plugins.
126-1	17091-17097	Longer	
126-2	17098-17103	times	
126-3	17104-17109	means	
126-4	17110-17115	fewer	
126-5	17116-17124	database	
126-6	17125-17142	queries.Otherwise	
126-7	17142-17143	,	
126-8	17144-17149	stick	
126-9	17150-17154	with	
126-10	17155-17158	the	
126-11	17159-17166	default	
126-12	17167-17168	5	
126-13	17168-17169	-	
126-14	17169-17171	10	
126-15	17172-17176	mins	
126-16	17177-17179	to	
126-17	17180-17182	be	
126-18	17183-17187	safe	
126-19	17187-17188	…	
126-20	17188-17194	unless	
126-21	17195-17198	you	
126-22	17199-17202	don	
126-23	17202-17203	’	
126-24	17203-17204	t	
126-25	17205-17209	mind	
126-26	17210-17215	users	
126-27	17216-17222	seeing	
126-28	17223-17228	stale	
126-29	17229-17240	data.Object	
126-30	17241-17248	caching	
126-31	17249-17252	can	
126-32	17253-17255	be	
126-33	17256-17263	managed	
126-34	17264-17266	by	
126-35	17267-17276	WordPress	
126-36	17277-17284	plugins	
126-37	17284-17285	.	

#Text=Most ideal if you have one cache plugin to manage both full-page caching and object caching.You can get ~25% faster object caching by using a Unix SocketUNIX sockets are run from a lower-level layer on the OSI networking model and therefore faster than standard TCP sockets.Redis and Memcache UNIX socket configuration guides for CentOS.Redis and Memcache UNIX socket configuration guides for Ubuntu.Note: with UNIX socket enabled, only one server user account (and presumably all sites by that user) can use object caching.
127-1	17286-17290	Most	
127-2	17291-17296	ideal	
127-3	17297-17299	if	
127-4	17300-17303	you	
127-5	17304-17308	have	
127-6	17309-17312	one	
127-7	17313-17318	cache	
127-8	17319-17325	plugin	
127-9	17326-17328	to	
127-10	17329-17335	manage	
127-11	17336-17340	both	
127-12	17341-17350	full-page	
127-13	17351-17358	caching	
127-14	17359-17362	and	
127-15	17363-17369	object	
127-16	17370-17381	caching.You	
127-17	17382-17385	can	
127-18	17386-17389	get	
127-19	17390-17391	~	
127-20	17391-17394	25%	
127-21	17395-17401	faster	
127-22	17402-17408	object	
127-23	17409-17416	caching	
127-24	17417-17419	by	
127-25	17420-17425	using	
127-26	17426-17427	a	
127-27	17428-17432	Unix	
127-28	17433-17443	SocketUNIX	
127-29	17444-17451	sockets	
127-30	17452-17455	are	
127-31	17456-17459	run	
127-32	17460-17464	from	
127-33	17465-17466	a	
127-34	17467-17478	lower-level	
127-35	17479-17484	layer	
127-36	17485-17487	on	
127-37	17488-17491	the	
127-38	17492-17495	OSI	
127-39	17496-17506	networking	
127-40	17507-17512	model	
127-41	17513-17516	and	
127-42	17517-17526	therefore	
127-43	17527-17533	faster	
127-44	17534-17538	than	
127-45	17539-17547	standard	
127-46	17548-17551	TCP	
127-47	17552-17565	sockets.Redis	
127-48	17566-17569	and	
127-49	17570-17578	Memcache	
127-50	17579-17583	UNIX	
127-51	17584-17590	socket	
127-52	17591-17604	configuration	
127-53	17605-17611	guides	
127-54	17612-17615	for	
127-55	17616-17628	CentOS.Redis	
127-56	17629-17632	and	
127-57	17633-17641	Memcache	
127-58	17642-17646	UNIX	
127-59	17647-17653	socket	
127-60	17654-17667	configuration	
127-61	17668-17674	guides	
127-62	17675-17678	for	
127-63	17679-17690	Ubuntu.Note	
127-64	17690-17691	:	
127-65	17692-17696	with	
127-66	17697-17701	UNIX	
127-67	17702-17708	socket	
127-68	17709-17716	enabled	
127-69	17716-17717	,	
127-70	17718-17722	only	
127-71	17723-17726	one	
127-72	17727-17733	server	
127-73	17734-17738	user	
127-74	17739-17746	account	
127-75	17747-17748	(	
127-76	17748-17751	and	
127-77	17752-17762	presumably	
127-78	17763-17766	all	
127-79	17767-17772	sites	
127-80	17773-17775	by	
127-81	17776-17780	that	
127-82	17781-17785	user	
127-83	17785-17786	)	
127-84	17787-17790	can	
127-85	17791-17794	use	
127-86	17795-17801	object	
127-87	17802-17809	caching	
127-88	17809-17810	.	

#Text=So you can’t use this if you plan to have multiple server users deploying object cache.Some background on memory-caching…Memory-caching is the gold standard in caching, because cache runs faster from memory than than from disk.
128-1	17811-17813	So	
128-2	17814-17817	you	
128-3	17818-17821	can	
128-4	17821-17822	’	
128-5	17822-17823	t	
128-6	17824-17827	use	
128-7	17828-17832	this	
128-8	17833-17835	if	
128-9	17836-17839	you	
128-10	17840-17844	plan	
128-11	17845-17847	to	
128-12	17848-17852	have	
128-13	17853-17861	multiple	
128-14	17862-17868	server	
128-15	17869-17874	users	
128-16	17875-17884	deploying	
128-17	17885-17891	object	
128-18	17892-17902	cache.Some	
128-19	17903-17913	background	
128-20	17914-17916	on	
128-21	17917-17931	memory-caching	
128-22	17931-17932	…	
128-23	17932-17946	Memory-caching	
128-24	17947-17949	is	
128-25	17950-17953	the	
128-26	17954-17958	gold	
128-27	17959-17967	standard	
128-28	17968-17970	in	
128-29	17971-17978	caching	
128-30	17978-17979	,	
128-31	17980-17987	because	
128-32	17988-17993	cache	
128-33	17994-17998	runs	
128-34	17999-18005	faster	
128-35	18006-18010	from	
128-36	18011-18017	memory	
128-37	18018-18022	than	
128-38	18023-18027	than	
128-39	18028-18032	from	
128-40	18033-18037	disk	
128-41	18037-18038	.	

#Text=The issue is we have limited amounts of memory (most of it already used for applications) so we can’t store the entire site cache in there.
129-1	18039-18042	The	
129-2	18043-18048	issue	
129-3	18049-18051	is	
129-4	18052-18054	we	
129-5	18055-18059	have	
129-6	18060-18067	limited	
129-7	18068-18075	amounts	
129-8	18076-18078	of	
129-9	18079-18085	memory	
129-10	18086-18087	(	
129-11	18087-18091	most	
129-12	18092-18094	of	
129-13	18095-18097	it	
129-14	18098-18105	already	
129-15	18106-18110	used	
129-16	18111-18114	for	
129-17	18115-18127	applications	
129-18	18127-18128	)	
129-19	18129-18131	so	
129-20	18132-18134	we	
129-21	18135-18138	can	
129-22	18138-18139	’	
129-23	18139-18140	t	
129-24	18141-18146	store	
129-25	18147-18150	the	
129-26	18151-18157	entire	
129-27	18158-18162	site	
129-28	18163-18168	cache	
129-29	18169-18171	in	
129-30	18172-18177	there	
129-31	18177-18178	.	

#Text=It matters less nowadays anyway since server disks are so much faster now (thanks to SSD technology).Sure memory is more abundant now too but then again, applications are bigger.
130-1	18179-18181	It	
130-2	18182-18189	matters	
130-3	18190-18194	less	
130-4	18195-18203	nowadays	
130-5	18204-18210	anyway	
130-6	18211-18216	since	
130-7	18217-18223	server	
130-8	18224-18229	disks	
130-9	18230-18233	are	
130-10	18234-18236	so	
130-11	18237-18241	much	
130-12	18242-18248	faster	
130-13	18249-18252	now	
130-14	18253-18254	(	
130-15	18254-18260	thanks	
130-16	18261-18263	to	
130-17	18264-18267	SSD	
130-18	18268-18278	technology	
130-19	18278-18279	)	
130-20	18279-18280	.	
130-21	18280-18284	Sure	
130-22	18285-18291	memory	
130-23	18292-18294	is	
130-24	18295-18299	more	
130-25	18300-18308	abundant	
130-26	18309-18312	now	
130-27	18313-18316	too	
130-28	18317-18320	but	
130-29	18321-18325	then	
130-30	18326-18331	again	
130-31	18331-18332	,	
130-32	18333-18345	applications	
130-33	18346-18349	are	
130-34	18350-18356	bigger	
130-35	18356-18357	.	

#Text=You may have heard of others loading their entire site into memory…some using the cache route, others by mounting their WordPress directory into memory.
131-1	18358-18361	You	
131-2	18362-18365	may	
131-3	18366-18370	have	
131-4	18371-18376	heard	
131-5	18377-18379	of	
131-6	18380-18386	others	
131-7	18387-18394	loading	
131-8	18395-18400	their	
131-9	18401-18407	entire	
131-10	18408-18412	site	
131-11	18413-18417	into	
131-12	18418-18424	memory	
131-13	18424-18425	…	
131-14	18425-18429	some	
131-15	18430-18435	using	
131-16	18436-18439	the	
131-17	18440-18445	cache	
131-18	18446-18451	route	
131-19	18451-18452	,	
131-20	18453-18459	others	
131-21	18460-18462	by	
131-22	18463-18471	mounting	
131-23	18472-18477	their	
131-24	18478-18487	WordPress	
131-25	18488-18497	directory	
131-26	18498-18502	into	
131-27	18503-18509	memory	
131-28	18509-18510	.	

#Text=It works great if your site is small enough but for most people: your memory is only big enough to store database queries, anything else you want to cache will be stored on your disk.14.
132-1	18511-18513	It	
132-2	18514-18519	works	
132-3	18520-18525	great	
132-4	18526-18528	if	
132-5	18529-18533	your	
132-6	18534-18538	site	
132-7	18539-18541	is	
132-8	18542-18547	small	
132-9	18548-18554	enough	
132-10	18555-18558	but	
132-11	18559-18562	for	
132-12	18563-18567	most	
132-13	18568-18574	people	
132-14	18574-18575	:	
132-15	18576-18580	your	
132-16	18581-18587	memory	
132-17	18588-18590	is	
132-18	18591-18595	only	
132-19	18596-18599	big	
132-20	18600-18606	enough	
132-21	18607-18609	to	
132-22	18610-18615	store	
132-23	18616-18624	database	
132-24	18625-18632	queries	
132-25	18632-18633	,	
132-26	18634-18642	anything	
132-27	18643-18647	else	
132-28	18648-18651	you	
132-29	18652-18656	want	
132-30	18657-18659	to	
132-31	18660-18665	cache	
132-32	18666-18670	will	
132-33	18671-18673	be	
132-34	18674-18680	stored	
132-35	18681-18683	on	
132-36	18684-18688	your	
132-37	18689-18693	disk	
132-38	18693-18696	.14	
132-39	18696-18697	.	

#Text=Use the latest HTTP protocol (BEG, HIGH)HTTP/2 loads browser requests so much faster than HTTP/1 (thanks to parallelization).
133-1	18698-18701	Use	
133-2	18702-18705	the	
133-3	18706-18712	latest	
133-4	18713-18717	HTTP	
133-5	18718-18726	protocol	
133-6	18727-18728	(	
133-7	18728-18731	BEG	
133-8	18731-18732	,	
133-9	18733-18737	HIGH	
133-10	18737-18738	)	
133-11	18738-18742	HTTP	
133-12	18742-18743	/	
133-13	18743-18744	2	
133-14	18745-18750	loads	
133-15	18751-18758	browser	
133-16	18759-18767	requests	
133-17	18768-18770	so	
133-18	18771-18775	much	
133-19	18776-18782	faster	
133-20	18783-18787	than	
133-21	18788-18792	HTTP	
133-22	18792-18793	/	
133-23	18793-18794	1	
133-24	18795-18796	(	
133-25	18796-18802	thanks	
133-26	18803-18805	to	
133-27	18806-18821	parallelization	
133-28	18821-18822	)	
133-29	18822-18823	.	

#Text=It feels like 3 times faster to me.You should be using HTTP/2 or even HTTP/3 (recently released).Avoid older web servers still on the archaic HTTP/1.Check your site for HTTP/2 and HTTP/3.Using HTTP/2 requires HTTPS/SSL.
134-1	18824-18826	It	
134-2	18827-18832	feels	
134-3	18833-18837	like	
134-4	18838-18839	3	
134-5	18840-18845	times	
134-6	18846-18852	faster	
134-7	18853-18855	to	
134-8	18856-18862	me.You	
134-9	18863-18869	should	
134-10	18870-18872	be	
134-11	18873-18878	using	
134-12	18879-18883	HTTP	
134-13	18883-18884	/	
134-14	18884-18885	2	
134-15	18886-18888	or	
134-16	18889-18893	even	
134-17	18894-18898	HTTP	
134-18	18898-18899	/	
134-19	18899-18900	3	
134-20	18901-18902	(	
134-21	18902-18910	recently	
134-22	18911-18919	released	
134-23	18919-18920	)	
134-24	18920-18921	.	
134-25	18921-18926	Avoid	
134-26	18927-18932	older	
134-27	18933-18936	web	
134-28	18937-18944	servers	
134-29	18945-18950	still	
134-30	18951-18953	on	
134-31	18954-18957	the	
134-32	18958-18965	archaic	
134-33	18966-18970	HTTP	
134-34	18970-18971	/	
134-35	18971-18972	1	
134-36	18972-18973	.	
134-37	18973-18978	Check	
134-38	18979-18983	your	
134-39	18984-18988	site	
134-40	18989-18992	for	
134-41	18993-18997	HTTP	
134-42	18997-18998	/	
134-43	18998-18999	2	
134-44	19000-19003	and	
134-45	19004-19008	HTTP	
134-46	19008-19009	/	
134-47	19009-19010	3	
134-48	19010-19011	.	
134-49	19011-19016	Using	
134-50	19017-19021	HTTP	
134-51	19021-19022	/	
134-52	19022-19023	2	
134-53	19024-19032	requires	
134-54	19033-19038	HTTPS	
134-55	19038-19039	/	
134-56	19039-19042	SSL	
134-57	19042-19043	.	

#Text=If your site isn’t in HTTPS, do it now!
135-1	19044-19046	If	
135-2	19047-19051	your	
135-3	19052-19056	site	
135-4	19057-19060	isn	
135-5	19060-19061	’	
135-6	19061-19062	t	
135-7	19063-19065	in	
135-8	19066-19071	HTTPS	
135-9	19071-19072	,	
135-10	19073-19075	do	
135-11	19076-19078	it	
135-12	19079-19082	now	
135-13	19082-19083	!	

#Text=15.
136-1	19083-19085	15	
136-2	19085-19086	.	

#Text=Content encoding (INT, HIGH)GZIP is so 2016.
137-1	19087-19094	Content	
137-2	19095-19103	encoding	
137-3	19104-19105	(	
137-4	19105-19108	INT	
137-5	19108-19109	,	
137-6	19110-19114	HIGH	
137-7	19114-19115	)	
137-8	19115-19119	GZIP	
137-9	19120-19122	is	
137-10	19123-19125	so	
137-11	19126-19130	2016	
137-12	19130-19131	.	

#Text=Every web-server should have BROTLI compression nowadays.
138-1	19132-19137	Every	
138-2	19138-19148	web-server	
138-3	19149-19155	should	
138-4	19156-19160	have	
138-5	19161-19167	BROTLI	
138-6	19168-19179	compression	
138-7	19180-19188	nowadays	
138-8	19188-19189	.	

#Text=It’s superior to GZIP (produces smaller files AND in less time).
139-1	19190-19192	It	
139-2	19192-19193	’	
139-3	19193-19194	s	
139-4	19195-19203	superior	
139-5	19204-19206	to	
139-6	19207-19211	GZIP	
139-7	19212-19213	(	
139-8	19213-19221	produces	
139-9	19222-19229	smaller	
139-10	19230-19235	files	
139-11	19236-19239	AND	
139-12	19240-19242	in	
139-13	19243-19247	less	
139-14	19248-19252	time	
139-15	19252-19253	)	
139-16	19253-19254	.	

#Text=But shockingly, BROTLI still isn’t available on all web-servers.If using BROTLI – set static compression to 4.If using GZIP – set dynamic compression to 1, static compression to 6.You can push static compression levels higher if your CPU is strong (or low-usage server) and/or your static content is cached for a long time (long expiry times).
140-1	19255-19258	But	
140-2	19259-19269	shockingly	
140-3	19269-19270	,	
140-4	19271-19277	BROTLI	
140-5	19278-19283	still	
140-6	19284-19287	isn	
140-7	19287-19288	’	
140-8	19288-19289	t	
140-9	19290-19299	available	
140-10	19300-19302	on	
140-11	19303-19306	all	
140-12	19307-19321	web-servers.If	
140-13	19322-19327	using	
140-14	19328-19334	BROTLI	
140-15	19335-19336	–	
140-16	19337-19340	set	
140-17	19341-19347	static	
140-18	19348-19359	compression	
140-19	19360-19362	to	
140-20	19363-19364	4	
140-21	19364-19365	.	
140-22	19365-19367	If	
140-23	19368-19373	using	
140-24	19374-19378	GZIP	
140-25	19379-19380	–	
140-26	19381-19384	set	
140-27	19385-19392	dynamic	
140-28	19393-19404	compression	
140-29	19405-19407	to	
140-30	19408-19409	1	
140-31	19409-19410	,	
140-32	19411-19417	static	
140-33	19418-19429	compression	
140-34	19430-19432	to	
140-35	19433-19434	6	
140-36	19434-19435	.	
140-37	19435-19438	You	
140-38	19439-19442	can	
140-39	19443-19447	push	
140-40	19448-19454	static	
140-41	19455-19466	compression	
140-42	19467-19473	levels	
140-43	19474-19480	higher	
140-44	19481-19483	if	
140-45	19484-19488	your	
140-46	19489-19492	CPU	
140-47	19493-19495	is	
140-48	19496-19502	strong	
140-49	19503-19504	(	
140-50	19504-19506	or	
140-51	19507-19516	low-usage	
140-52	19517-19523	server	
140-53	19523-19524	)	
140-54	19525-19528	and	
140-55	19528-19529	/	
140-56	19529-19531	or	
140-57	19532-19536	your	
140-58	19537-19543	static	
140-59	19544-19551	content	
140-60	19552-19554	is	
140-61	19555-19561	cached	
140-62	19562-19565	for	
140-63	19566-19567	a	
140-64	19568-19572	long	
140-65	19573-19577	time	
140-66	19578-19579	(	
140-67	19579-19583	long	
140-68	19584-19590	expiry	
140-69	19591-19596	times	
140-70	19596-19597	)	
140-71	19597-19598	.	

#Text=If you’re using a CDN or Cloudflare, make sure you enable BROTLI compression there as well.16.
141-1	19599-19601	If	
141-2	19602-19605	you	
141-3	19605-19606	’	
141-4	19606-19608	re	
141-5	19609-19614	using	
141-6	19615-19616	a	
141-7	19617-19620	CDN	
141-8	19621-19623	or	
141-9	19624-19634	Cloudflare	
141-10	19634-19635	,	
141-11	19636-19640	make	
141-12	19641-19645	sure	
141-13	19646-19649	you	
141-14	19650-19656	enable	
141-15	19657-19663	BROTLI	
141-16	19664-19675	compression	
141-17	19676-19681	there	
141-18	19682-19684	as	
141-19	19685-19689	well	
141-20	19689-19692	.16	
141-21	19692-19693	.	

#Text=Control-panel (INT, HIGH)This issue matters only for VPS users.
142-1	19694-19707	Control-panel	
142-2	19708-19709	(	
142-3	19709-19712	INT	
142-4	19712-19713	,	
142-5	19714-19718	HIGH	
142-6	19718-19719	)	
142-7	19719-19723	This	
142-8	19724-19729	issue	
142-9	19730-19737	matters	
142-10	19738-19742	only	
142-11	19743-19746	for	
142-12	19747-19750	VPS	
142-13	19751-19756	users	
142-14	19756-19757	.	

#Text=Control panels used to be critiqued for the initial weight they put on the server.
143-1	19758-19765	Control	
143-2	19766-19772	panels	
143-3	19773-19777	used	
143-4	19778-19780	to	
143-5	19781-19783	be	
143-6	19784-19793	critiqued	
143-7	19794-19797	for	
143-8	19798-19801	the	
143-9	19802-19809	initial	
143-10	19810-19816	weight	
143-11	19817-19821	they	
143-12	19822-19825	put	
143-13	19826-19828	on	
143-14	19829-19832	the	
143-15	19833-19839	server	
143-16	19839-19840	.	

#Text=That’s because control panels were originally designed for large dedicated servers, but have since been optimized for smaller VPS.
144-1	19841-19845	That	
144-2	19845-19846	’	
144-3	19846-19847	s	
144-4	19848-19855	because	
144-5	19856-19863	control	
144-6	19864-19870	panels	
144-7	19871-19875	were	
144-8	19876-19886	originally	
144-9	19887-19895	designed	
144-10	19896-19899	for	
144-11	19900-19905	large	
144-12	19906-19915	dedicated	
144-13	19916-19923	servers	
144-14	19923-19924	,	
144-15	19925-19928	but	
144-16	19929-19933	have	
144-17	19934-19939	since	
144-18	19940-19944	been	
144-19	19945-19954	optimized	
144-20	19955-19958	for	
144-21	19959-19966	smaller	
144-22	19967-19970	VPS	
144-23	19970-19971	.	

#Text=While it’s true that having no control panel is lighter than having one, it makes day-to-day tasks harder.
145-1	19972-19977	While	
145-2	19978-19980	it	
145-3	19980-19981	’	
145-4	19981-19982	s	
145-5	19983-19987	true	
145-6	19988-19992	that	
145-7	19993-19999	having	
145-8	20000-20002	no	
145-9	20003-20010	control	
145-10	20011-20016	panel	
145-11	20017-20019	is	
145-12	20020-20027	lighter	
145-13	20028-20032	than	
145-14	20033-20039	having	
145-15	20040-20043	one	
145-16	20043-20044	,	
145-17	20045-20047	it	
145-18	20048-20053	makes	
145-19	20054-20064	day-to-day	
145-20	20065-20070	tasks	
145-21	20071-20077	harder	
145-22	20077-20078	.	

#Text=Their footprint is now negligible considering how useful panels can be.The best performing control panel is one that fits your needs.Allows you to pick the web server of your choice – NGINX or LiteSpeed.Easily configure redirects at server level – instead of slower PHP-level redirection plugin.Easily configure granular caching rules – choosing what and what not to cache.Easy to manage – for you or your sys-admin.Can cage users – preventing resource-hogs on high-tenant servers.Secure against hacks – as hacking attempts eat many resources.Easy to use – for you or your clients.17.
146-1	20079-20084	Their	
146-2	20085-20094	footprint	
146-3	20095-20097	is	
146-4	20098-20101	now	
146-5	20102-20112	negligible	
146-6	20113-20124	considering	
146-7	20125-20128	how	
146-8	20129-20135	useful	
146-9	20136-20142	panels	
146-10	20143-20146	can	
146-11	20147-20153	be.The	
146-12	20154-20158	best	
146-13	20159-20169	performing	
146-14	20170-20177	control	
146-15	20178-20183	panel	
146-16	20184-20186	is	
146-17	20187-20190	one	
146-18	20191-20195	that	
146-19	20196-20200	fits	
146-20	20201-20205	your	
146-21	20206-20218	needs.Allows	
146-22	20219-20222	you	
146-23	20223-20225	to	
146-24	20226-20230	pick	
146-25	20231-20234	the	
146-26	20235-20238	web	
146-27	20239-20245	server	
146-28	20246-20248	of	
146-29	20249-20253	your	
146-30	20254-20260	choice	
146-31	20261-20262	–	
146-32	20263-20268	NGINX	
146-33	20269-20271	or	
146-34	20272-20288	LiteSpeed.Easily	
146-35	20289-20298	configure	
146-36	20299-20308	redirects	
146-37	20309-20311	at	
146-38	20312-20318	server	
146-39	20319-20324	level	
146-40	20325-20326	–	
146-41	20327-20334	instead	
146-42	20335-20337	of	
146-43	20338-20344	slower	
146-44	20345-20354	PHP-level	
146-45	20355-20366	redirection	
146-46	20367-20380	plugin.Easily	
146-47	20381-20390	configure	
146-48	20391-20399	granular	
146-49	20400-20407	caching	
146-50	20408-20413	rules	
146-51	20414-20415	–	
146-52	20416-20424	choosing	
146-53	20425-20429	what	
146-54	20430-20433	and	
146-55	20434-20438	what	
146-56	20439-20442	not	
146-57	20443-20445	to	
146-58	20446-20456	cache.Easy	
146-59	20457-20459	to	
146-60	20460-20466	manage	
146-61	20467-20468	–	
146-62	20469-20472	for	
146-63	20473-20476	you	
146-64	20477-20479	or	
146-65	20480-20484	your	
146-66	20485-20498	sys-admin.Can	
146-67	20499-20503	cage	
146-68	20504-20509	users	
146-69	20510-20511	–	
146-70	20512-20522	preventing	
146-71	20523-20536	resource-hogs	
146-72	20537-20539	on	
146-73	20540-20551	high-tenant	
146-74	20552-20566	servers.Secure	
146-75	20567-20574	against	
146-76	20575-20580	hacks	
146-77	20581-20582	–	
146-78	20583-20585	as	
146-79	20586-20593	hacking	
146-80	20594-20602	attempts	
146-81	20603-20606	eat	
146-82	20607-20611	many	
146-83	20612-20626	resources.Easy	
146-84	20627-20629	to	
146-85	20630-20633	use	
146-86	20634-20635	–	
146-87	20636-20639	for	
146-88	20640-20643	you	
146-89	20644-20646	or	
146-90	20647-20651	your	
146-91	20652-20659	clients	
146-92	20659-20662	.17	
146-93	20662-20663	.	

#Text=Use external DNS service (INT, LOW)Lower DNS latency (small benefit)Easy to update DNS (convenience)Will using an external DNS like Cloudflare or DNS Made Easy make a world of difference in terms of webhosting speed?
147-1	20664-20667	Use	
147-2	20668-20676	external	
147-3	20677-20680	DNS	
147-4	20681-20688	service	
147-5	20689-20690	(	
147-6	20690-20693	INT	
147-7	20693-20694	,	
147-8	20695-20698	LOW	
147-9	20698-20699	)	
147-10	20699-20704	Lower	
147-11	20705-20708	DNS	
147-12	20709-20716	latency	
147-13	20717-20718	(	
147-14	20718-20723	small	
147-15	20724-20731	benefit	
147-16	20731-20732	)	
147-17	20732-20736	Easy	
147-18	20737-20739	to	
147-19	20740-20746	update	
147-20	20747-20750	DNS	
147-21	20751-20752	(	
147-22	20752-20763	convenience	
147-23	20763-20764	)	
147-24	20764-20768	Will	
147-25	20769-20774	using	
147-26	20775-20777	an	
147-27	20778-20786	external	
147-28	20787-20790	DNS	
147-29	20791-20795	like	
147-30	20796-20806	Cloudflare	
147-31	20807-20809	or	
147-32	20810-20813	DNS	
147-33	20814-20818	Made	
147-34	20819-20823	Easy	
147-35	20824-20828	make	
147-36	20829-20830	a	
147-37	20831-20836	world	
147-38	20837-20839	of	
147-39	20840-20850	difference	
147-40	20851-20853	in	
147-41	20854-20859	terms	
147-42	20860-20862	of	
147-43	20863-20873	webhosting	
147-44	20874-20879	speed	
147-45	20879-20880	?	

#Text=I think it improves lookup time but not so noticeable unless your previous DNS server was a piece of junk by cheap webhost.The main benefit for me is how quickly I can redirect things.
148-1	20881-20882	I	
148-2	20883-20888	think	
148-3	20889-20891	it	
148-4	20892-20900	improves	
148-5	20901-20907	lookup	
148-6	20908-20912	time	
148-7	20913-20916	but	
148-8	20917-20920	not	
148-9	20921-20923	so	
148-10	20924-20934	noticeable	
148-11	20935-20941	unless	
148-12	20942-20946	your	
148-13	20947-20955	previous	
148-14	20956-20959	DNS	
148-15	20960-20966	server	
148-16	20967-20970	was	
148-17	20971-20972	a	
148-18	20973-20978	piece	
148-19	20979-20981	of	
148-20	20982-20986	junk	
148-21	20987-20989	by	
148-22	20990-20995	cheap	
148-23	20996-21007	webhost.The	
148-24	21008-21012	main	
148-25	21013-21020	benefit	
148-26	21021-21024	for	
148-27	21025-21027	me	
148-28	21028-21030	is	
148-29	21031-21034	how	
148-30	21035-21042	quickly	
148-31	21043-21044	I	
148-32	21045-21048	can	
148-33	21049-21057	redirect	
148-34	21058-21064	things	
148-35	21064-21065	.	

#Text=Suppose you get hacked and need to redirect through a security proxy.
149-1	21066-21073	Suppose	
149-2	21074-21077	you	
149-3	21078-21081	get	
149-4	21082-21088	hacked	
149-5	21089-21092	and	
149-6	21093-21097	need	
149-7	21098-21100	to	
149-8	21101-21109	redirect	
149-9	21110-21117	through	
149-10	21118-21119	a	
149-11	21120-21128	security	
149-12	21129-21134	proxy	
149-13	21134-21135	.	

#Text=Or maybe you’re switching certain aspects of your site to another server.
150-1	21136-21138	Or	
150-2	21139-21144	maybe	
150-3	21145-21148	you	
150-4	21148-21149	’	
150-5	21149-21151	re	
150-6	21152-21161	switching	
150-7	21162-21169	certain	
150-8	21170-21177	aspects	
150-9	21178-21180	of	
150-10	21181-21185	your	
150-11	21186-21190	site	
150-12	21191-21193	to	
150-13	21194-21201	another	
150-14	21202-21208	server	
150-15	21208-21209	.	

#Text=In moments like this, having a DNS service is so convenient.
151-1	21210-21212	In	
151-2	21213-21220	moments	
151-3	21221-21225	like	
151-4	21226-21230	this	
151-5	21230-21231	,	
151-6	21232-21238	having	
151-7	21239-21240	a	
151-8	21241-21244	DNS	
151-9	21245-21252	service	
151-10	21253-21255	is	
151-11	21256-21258	so	
151-12	21259-21269	convenient	
151-13	21269-21270	.	

#Text=You can switch things over with very little downtime, and even switch them back quickly if there’s an issue.DNS services may seem like an extra hassle to setup, but once in place they allow you to integrate new services and mitigate performance issues so much faster.18.
152-1	21271-21274	You	
152-2	21275-21278	can	
152-3	21279-21285	switch	
152-4	21286-21292	things	
152-5	21293-21297	over	
152-6	21298-21302	with	
152-7	21303-21307	very	
152-8	21308-21314	little	
152-9	21315-21323	downtime	
152-10	21323-21324	,	
152-11	21325-21328	and	
152-12	21329-21333	even	
152-13	21334-21340	switch	
152-14	21341-21345	them	
152-15	21346-21350	back	
152-16	21351-21358	quickly	
152-17	21359-21361	if	
152-18	21362-21367	there	
152-19	21367-21368	’	
152-20	21368-21369	s	
152-21	21370-21372	an	
152-22	21373-21382	issue.DNS	
152-23	21383-21391	services	
152-24	21392-21395	may	
152-25	21396-21400	seem	
152-26	21401-21405	like	
152-27	21406-21408	an	
152-28	21409-21414	extra	
152-29	21415-21421	hassle	
152-30	21422-21424	to	
152-31	21425-21430	setup	
152-32	21430-21431	,	
152-33	21432-21435	but	
152-34	21436-21440	once	
152-35	21441-21443	in	
152-36	21444-21449	place	
152-37	21450-21454	they	
152-38	21455-21460	allow	
152-39	21461-21464	you	
152-40	21465-21467	to	
152-41	21468-21477	integrate	
152-42	21478-21481	new	
152-43	21482-21490	services	
152-44	21491-21494	and	
152-45	21495-21503	mitigate	
152-46	21504-21515	performance	
152-47	21516-21522	issues	
152-48	21523-21525	so	
152-49	21526-21530	much	
152-50	21531-21537	faster	
152-51	21537-21540	.18	
152-52	21540-21541	.	

#Text=Run WP-cron from your server (BEG, MED)Many WordPress tasks need a trigger to function.
153-1	21542-21545	Run	
153-2	21546-21553	WP-cron	
153-3	21554-21558	from	
153-4	21559-21563	your	
153-5	21564-21570	server	
153-6	21571-21572	(	
153-7	21572-21575	BEG	
153-8	21575-21576	,	
153-9	21577-21580	MED	
153-10	21580-21581	)	
153-11	21581-21585	Many	
153-12	21586-21595	WordPress	
153-13	21596-21601	tasks	
153-14	21602-21606	need	
153-15	21607-21608	a	
153-16	21609-21616	trigger	
153-17	21617-21619	to	
153-18	21620-21628	function	
153-19	21628-21629	.	

#Text=Such as sending out system emails, run backups, release scheduled posts.
154-1	21630-21634	Such	
154-2	21635-21637	as	
154-3	21638-21645	sending	
154-4	21646-21649	out	
154-5	21650-21656	system	
154-6	21657-21663	emails	
154-7	21663-21664	,	
154-8	21665-21668	run	
154-9	21669-21676	backups	
154-10	21676-21677	,	
154-11	21678-21685	release	
154-12	21686-21695	scheduled	
154-13	21696-21701	posts	
154-14	21701-21702	.	

#Text=By default, WordPress uses a function called WP-Cron (conveniently located at yourdomain.com/wp-cron.php).
155-1	21703-21705	By	
155-2	21706-21713	default	
155-3	21713-21714	,	
155-4	21715-21724	WordPress	
155-5	21725-21729	uses	
155-6	21730-21731	a	
155-7	21732-21740	function	
155-8	21741-21747	called	
155-9	21748-21755	WP-Cron	
155-10	21756-21757	(	
155-11	21757-21769	conveniently	
155-12	21770-21777	located	
155-13	21778-21780	at	
155-14	21781-21795	yourdomain.com	
155-15	21795-21796	/	
155-16	21796-21807	wp-cron.php	
155-17	21807-21808	)	
155-18	21808-21809	.	

#Text=It works by checking (and executing) for any pending tasks any time someone visits the website.
156-1	21810-21812	It	
156-2	21813-21818	works	
156-3	21819-21821	by	
156-4	21822-21830	checking	
156-5	21831-21832	(	
156-6	21832-21835	and	
156-7	21836-21845	executing	
156-8	21845-21846	)	
156-9	21847-21850	for	
156-10	21851-21854	any	
156-11	21855-21862	pending	
156-12	21863-21868	tasks	
156-13	21869-21872	any	
156-14	21873-21877	time	
156-15	21878-21885	someone	
156-16	21886-21892	visits	
156-17	21893-21896	the	
156-18	21897-21904	website	
156-19	21904-21905	.	

#Text=It’s great for small sites, but terrible if you have tons of traffic (triggering many unnecessary cron-checks).
157-1	21906-21908	It	
157-2	21908-21909	’	
157-3	21909-21910	s	
157-4	21911-21916	great	
157-5	21917-21920	for	
157-6	21921-21926	small	
157-7	21927-21932	sites	
157-8	21932-21933	,	
157-9	21934-21937	but	
157-10	21938-21946	terrible	
157-11	21947-21949	if	
157-12	21950-21953	you	
157-13	21954-21958	have	
157-14	21959-21963	tons	
157-15	21964-21966	of	
157-16	21967-21974	traffic	
157-17	21975-21976	(	
157-18	21976-21986	triggering	
157-19	21987-21991	many	
157-20	21992-22003	unnecessary	
157-21	22004-22015	cron-checks	
157-22	22015-22016	)	
157-23	22016-22017	.	

#Text=Also an obvious DDOS vulnerability.The sensible thing is to disable WP-cron and use a real cron job whether from your server or an external cron service.
158-1	22018-22022	Also	
158-2	22023-22025	an	
158-3	22026-22033	obvious	
158-4	22034-22038	DDOS	
158-5	22039-22056	vulnerability.The	
158-6	22057-22065	sensible	
158-7	22066-22071	thing	
158-8	22072-22074	is	
158-9	22075-22077	to	
158-10	22078-22085	disable	
158-11	22086-22093	WP-cron	
158-12	22094-22097	and	
158-13	22098-22101	use	
158-14	22102-22103	a	
158-15	22104-22108	real	
158-16	22109-22113	cron	
158-17	22114-22117	job	
158-18	22118-22125	whether	
158-19	22126-22130	from	
158-20	22131-22135	your	
158-21	22136-22142	server	
158-22	22143-22145	or	
158-23	22146-22148	an	
158-24	22149-22157	external	
158-25	22158-22162	cron	
158-26	22163-22170	service	
158-27	22170-22171	.	

#Text=Some cron jobs visit the website directly.
159-1	22172-22176	Some	
159-2	22177-22181	cron	
159-3	22182-22186	jobs	
159-4	22187-22192	visit	
159-5	22193-22196	the	
159-6	22197-22204	website	
159-7	22205-22213	directly	
159-8	22213-22214	.	

#Text=Others go through the Linux directory.
160-1	22215-22221	Others	
160-2	22222-22224	go	
160-3	22225-22232	through	
160-4	22233-22236	the	
160-5	22237-22242	Linux	
160-6	22243-22252	directory	
160-7	22252-22253	.	

#Text=Use whichever one works.
161-1	22254-22257	Use	
161-2	22258-22267	whichever	
161-3	22268-22271	one	
161-4	22272-22277	works	
161-5	22277-22278	.	

#Text=I think a 5-minute interval is good.19.
162-1	22279-22280	I	
162-2	22281-22286	think	
162-3	22287-22288	a	
162-4	22289-22290	5	
162-5	22290-22291	-	
162-6	22291-22297	minute	
162-7	22298-22306	interval	
162-8	22307-22309	is	
162-9	22310-22314	good	
162-10	22314-22317	.19	
162-11	22317-22318	.	

#Text=Caging users & resource limits (ADV, MED-HIGH)Do you have many sites or clients on the same machine?
163-1	22319-22325	Caging	
163-2	22326-22331	users	
163-3	22332-22333	&	
163-4	22334-22342	resource	
163-5	22343-22349	limits	
163-6	22350-22351	(	
163-7	22351-22354	ADV	
163-8	22354-22355	,	
163-9	22356-22364	MED-HIGH	
163-10	22364-22365	)	
163-11	22365-22367	Do	
163-12	22368-22371	you	
163-13	22372-22376	have	
163-14	22377-22381	many	
163-15	22382-22387	sites	
163-16	22388-22390	or	
163-17	22391-22398	clients	
163-18	22399-22401	on	
163-19	22402-22405	the	
163-20	22406-22410	same	
163-21	22411-22418	machine	
163-22	22418-22419	?	

#Text=Are you unable to police them all effectively?
164-1	22420-22423	Are	
164-2	22424-22427	you	
164-3	22428-22434	unable	
164-4	22435-22437	to	
164-5	22438-22444	police	
164-6	22445-22449	them	
164-7	22450-22453	all	
164-8	22454-22465	effectively	
164-9	22465-22466	?	

#Text=If you’re losing control of your tenants, it’s probably time to limit their resources.
165-1	22467-22469	If	
165-2	22470-22473	you	
165-3	22473-22474	’	
165-4	22474-22476	re	
165-5	22477-22483	losing	
165-6	22484-22491	control	
165-7	22492-22494	of	
165-8	22495-22499	your	
165-9	22500-22507	tenants	
165-10	22507-22508	,	
165-11	22509-22511	it	
165-12	22511-22512	’	
165-13	22512-22513	s	
165-14	22514-22522	probably	
165-15	22523-22527	time	
165-16	22528-22530	to	
165-17	22531-22536	limit	
165-18	22537-22542	their	
165-19	22543-22552	resources	
165-20	22552-22553	.	

#Text=I’ll start you off with a few tactics below.
166-1	22554-22555	I	
166-2	22555-22556	’	
166-3	22556-22558	ll	
166-4	22559-22564	start	
166-5	22565-22568	you	
166-6	22569-22572	off	
166-7	22573-22577	with	
166-8	22578-22579	a	
166-9	22580-22583	few	
166-10	22584-22591	tactics	
166-11	22592-22597	below	
166-12	22597-22598	.	

#Text=You look up the rest.Cloudlinux & CageFS – limit CPU and memory usageServer-wide bans on cache-prebuilding, broken-link checkers, and other resource hogs.Decrease php execution time.Global configs blocking the usual offenders, bots, etc.Worst-case scenario, just split off some clients onto another server.
167-1	22599-22602	You	
167-2	22603-22607	look	
167-3	22608-22610	up	
167-4	22611-22614	the	
167-5	22615-22630	rest.Cloudlinux	
167-6	22631-22632	&	
167-7	22633-22639	CageFS	
167-8	22640-22641	–	
167-9	22642-22647	limit	
167-10	22648-22651	CPU	
167-11	22652-22655	and	
167-12	22656-22662	memory	
167-13	22663-22679	usageServer-wide	
167-14	22680-22684	bans	
167-15	22685-22687	on	
167-16	22688-22705	cache-prebuilding	
167-17	22705-22706	,	
167-18	22707-22718	broken-link	
167-19	22719-22727	checkers	
167-20	22727-22728	,	
167-21	22729-22732	and	
167-22	22733-22738	other	
167-23	22739-22747	resource	
167-24	22748-22761	hogs.Decrease	
167-25	22762-22765	php	
167-26	22766-22775	execution	
167-27	22776-22787	time.Global	
167-28	22788-22795	configs	
167-29	22796-22804	blocking	
167-30	22805-22808	the	
167-31	22809-22814	usual	
167-32	22815-22824	offenders	
167-33	22824-22825	,	
167-34	22826-22830	bots	
167-35	22830-22831	,	
167-36	22832-22846	etc.Worst-case	
167-37	22847-22855	scenario	
167-38	22855-22856	,	
167-39	22857-22861	just	
167-40	22862-22867	split	
167-41	22868-22871	off	
167-42	22872-22876	some	
167-43	22877-22884	clients	
167-44	22885-22889	onto	
167-45	22890-22897	another	
167-46	22898-22904	server	
167-47	22904-22905	.	

#Text=Split them up by size, space usage, traffic amount, whatever you want.19.
168-1	22906-22911	Split	
168-2	22912-22916	them	
168-3	22917-22919	up	
168-4	22920-22922	by	
168-5	22923-22927	size	
168-6	22927-22928	,	
168-7	22929-22934	space	
168-8	22935-22940	usage	
168-9	22940-22941	,	
168-10	22942-22949	traffic	
168-11	22950-22956	amount	
168-12	22956-22957	,	
168-13	22958-22966	whatever	
168-14	22967-22970	you	
168-15	22971-22975	want	
168-16	22975-22978	.19	
168-17	22978-22979	.	

#Text=Caging users & resource limits (ADV, MED-HIGH)Do you have many sites or clients on the same machine?
169-1	22980-22986	Caging	
169-2	22987-22992	users	
169-3	22993-22994	&	
169-4	22995-23003	resource	
169-5	23004-23010	limits	
169-6	23011-23012	(	
169-7	23012-23015	ADV	
169-8	23015-23016	,	
169-9	23017-23025	MED-HIGH	
169-10	23025-23026	)	
169-11	23026-23028	Do	
169-12	23029-23032	you	
169-13	23033-23037	have	
169-14	23038-23042	many	
169-15	23043-23048	sites	
169-16	23049-23051	or	
169-17	23052-23059	clients	
169-18	23060-23062	on	
169-19	23063-23066	the	
169-20	23067-23071	same	
169-21	23072-23079	machine	
169-22	23079-23080	?	

#Text=Are you unable to police them all effectively?
170-1	23081-23084	Are	
170-2	23085-23088	you	
170-3	23089-23095	unable	
170-4	23096-23098	to	
170-5	23099-23105	police	
170-6	23106-23110	them	
170-7	23111-23114	all	
170-8	23115-23126	effectively	
170-9	23126-23127	?	

#Text=If you’re losing control of your tenants, it’s probably time to limit their resources.
171-1	23128-23130	If	
171-2	23131-23134	you	
171-3	23134-23135	’	
171-4	23135-23137	re	
171-5	23138-23144	losing	
171-6	23145-23152	control	
171-7	23153-23155	of	
171-8	23156-23160	your	
171-9	23161-23168	tenants	
171-10	23168-23169	,	
171-11	23170-23172	it	
171-12	23172-23173	’	
171-13	23173-23174	s	
171-14	23175-23183	probably	
171-15	23184-23188	time	
171-16	23189-23191	to	
171-17	23192-23197	limit	
171-18	23198-23203	their	
171-19	23204-23213	resources	
171-20	23213-23214	.	

#Text=I’ll start you off with a few tactics below.
172-1	23215-23216	I	
172-2	23216-23217	’	
172-3	23217-23219	ll	
172-4	23220-23225	start	
172-5	23226-23229	you	
172-6	23230-23233	off	
172-7	23234-23238	with	
172-8	23239-23240	a	
172-9	23241-23244	few	
172-10	23245-23252	tactics	
172-11	23253-23258	below	
172-12	23258-23259	.	

#Text=You look up the rest.Cloudlinux & CageFS – limit CPU and memory usageServer-wide bans on cache-prebuilding, broken-link checkers, and other resource hogs.Decrease php execution time.Global configs blocking the usual offenders, bots, etc.Worst-case scenario, just split off some clients onto another server.
173-1	23260-23263	You	
173-2	23264-23268	look	
173-3	23269-23271	up	
173-4	23272-23275	the	
173-5	23276-23291	rest.Cloudlinux	
173-6	23292-23293	&	
173-7	23294-23300	CageFS	
173-8	23301-23302	–	
173-9	23303-23308	limit	
173-10	23309-23312	CPU	
173-11	23313-23316	and	
173-12	23317-23323	memory	
173-13	23324-23340	usageServer-wide	
173-14	23341-23345	bans	
173-15	23346-23348	on	
173-16	23349-23366	cache-prebuilding	
173-17	23366-23367	,	
173-18	23368-23379	broken-link	
173-19	23380-23388	checkers	
173-20	23388-23389	,	
173-21	23390-23393	and	
173-22	23394-23399	other	
173-23	23400-23408	resource	
173-24	23409-23422	hogs.Decrease	
173-25	23423-23426	php	
173-26	23427-23436	execution	
173-27	23437-23448	time.Global	
173-28	23449-23456	configs	
173-29	23457-23465	blocking	
173-30	23466-23469	the	
173-31	23470-23475	usual	
173-32	23476-23485	offenders	
173-33	23485-23486	,	
173-34	23487-23491	bots	
173-35	23491-23492	,	
173-36	23493-23507	etc.Worst-case	
173-37	23508-23516	scenario	
173-38	23516-23517	,	
173-39	23518-23522	just	
173-40	23523-23528	split	
173-41	23529-23532	off	
173-42	23533-23537	some	
173-43	23538-23545	clients	
173-44	23546-23550	onto	
173-45	23551-23558	another	
173-46	23559-23565	server	
173-47	23565-23566	.	

#Text=Split them up by size, space usage, traffic amount, whatever you want.20.
174-1	23567-23572	Split	
174-2	23573-23577	them	
174-3	23578-23580	up	
174-4	23581-23583	by	
174-5	23584-23588	size	
174-6	23588-23589	,	
174-7	23590-23595	space	
174-8	23596-23601	usage	
174-9	23601-23602	,	
174-10	23603-23610	traffic	
174-11	23611-23617	amount	
174-12	23617-23618	,	
174-13	23619-23627	whatever	
174-14	23628-23631	you	
174-15	23632-23636	want	
174-16	23636-23639	.20	
174-17	23639-23640	.	

#Text=Tracking down resource hogs (ADV, MED-HIGH)We often run into slow server issues with no obvious clue of where to look.
175-1	23641-23649	Tracking	
175-2	23650-23654	down	
175-3	23655-23663	resource	
175-4	23664-23668	hogs	
175-5	23669-23670	(	
175-6	23670-23673	ADV	
175-7	23673-23674	,	
175-8	23675-23683	MED-HIGH	
175-9	23683-23684	)	
175-10	23684-23686	We	
175-11	23687-23692	often	
175-12	23693-23696	run	
175-13	23697-23701	into	
175-14	23702-23706	slow	
175-15	23707-23713	server	
175-16	23714-23720	issues	
175-17	23721-23725	with	
175-18	23726-23728	no	
175-19	23729-23736	obvious	
175-20	23737-23741	clue	
175-21	23742-23744	of	
175-22	23745-23750	where	
175-23	23751-23753	to	
175-24	23754-23758	look	
175-25	23758-23759	.	

#Text=Today, it’s this client.
176-1	23760-23765	Today	
176-2	23765-23766	,	
176-3	23767-23769	it	
176-4	23769-23770	’	
176-5	23770-23771	s	
176-6	23772-23776	this	
176-7	23777-23783	client	
176-8	23783-23784	.	

#Text=Tomorrow, it’s that client.
177-1	23785-23793	Tomorrow	
177-2	23793-23794	,	
177-3	23795-23797	it	
177-4	23797-23798	’	
177-5	23798-23799	s	
177-6	23800-23804	that	
177-7	23805-23811	client	
177-8	23811-23812	.	

#Text=It seems any site can be the culprit on any given day.
178-1	23813-23815	It	
178-2	23816-23821	seems	
178-3	23822-23825	any	
178-4	23826-23830	site	
178-5	23831-23834	can	
178-6	23835-23837	be	
178-7	23838-23841	the	
178-8	23842-23849	culprit	
178-9	23850-23852	on	
178-10	23853-23856	any	
178-11	23857-23862	given	
178-12	23863-23866	day	
178-13	23866-23867	.	

#Text=When you have so many clients, and none of them can afford switching plugins on and off, it is really really difficult to track down the problem.Here are some ideas:Check server logs – are you being hacked?
179-1	23868-23872	When	
179-2	23873-23876	you	
179-3	23877-23881	have	
179-4	23882-23884	so	
179-5	23885-23889	many	
179-6	23890-23897	clients	
179-7	23897-23898	,	
179-8	23899-23902	and	
179-9	23903-23907	none	
179-10	23908-23910	of	
179-11	23911-23915	them	
179-12	23916-23919	can	
179-13	23920-23926	afford	
179-14	23927-23936	switching	
179-15	23937-23944	plugins	
179-16	23945-23947	on	
179-17	23948-23951	and	
179-18	23952-23955	off	
179-19	23955-23956	,	
179-20	23957-23959	it	
179-21	23960-23962	is	
179-22	23963-23969	really	
179-23	23970-23976	really	
179-24	23977-23986	difficult	
179-25	23987-23989	to	
179-26	23990-23995	track	
179-27	23996-24000	down	
179-28	24001-24004	the	
179-29	24005-24017	problem.Here	
179-30	24018-24021	are	
179-31	24022-24026	some	
179-32	24027-24032	ideas	
179-33	24032-24033	:	
179-34	24033-24038	Check	
179-35	24039-24045	server	
179-36	24046-24050	logs	
179-37	24051-24052	–	
179-38	24053-24056	are	
179-39	24057-24060	you	
179-40	24061-24066	being	
179-41	24067-24073	hacked	
179-42	24073-24074	?	

#Text=Are there excessive requests?
180-1	24075-24078	Are	
180-2	24079-24084	there	
180-3	24085-24094	excessive	
180-4	24095-24103	requests	
180-5	24103-24104	?	

#Text=Check server monitors – which users are hogging the CPU, memory, and bandwidth?
181-1	24104-24109	Check	
181-2	24110-24116	server	
181-3	24117-24125	monitors	
181-4	24126-24127	–	
181-5	24128-24133	which	
181-6	24134-24139	users	
181-7	24140-24143	are	
181-8	24144-24151	hogging	
181-9	24152-24155	the	
181-10	24156-24159	CPU	
181-11	24159-24160	,	
181-12	24161-24167	memory	
181-13	24167-24168	,	
181-14	24169-24172	and	
181-15	24173-24182	bandwidth	
181-16	24182-24183	?	

#Text=Once you know which site it is…check WordPress error log.
182-1	24183-24187	Once	
182-2	24188-24191	you	
182-3	24192-24196	know	
182-4	24197-24202	which	
182-5	24203-24207	site	
182-6	24208-24210	it	
182-7	24211-24213	is	
182-8	24213-24214	…	
182-9	24214-24219	check	
182-10	24220-24229	WordPress	
182-11	24230-24235	error	
182-12	24236-24239	log	
182-13	24239-24240	.	

#Text=Run Query Monitor.Of course, it might not even happen all the time.
183-1	24241-24244	Run	
183-2	24245-24250	Query	
183-3	24251-24261	Monitor.Of	
183-4	24262-24268	course	
183-5	24268-24269	,	
183-6	24270-24272	it	
183-7	24273-24278	might	
183-8	24279-24282	not	
183-9	24283-24287	even	
183-10	24288-24294	happen	
183-11	24295-24298	all	
183-12	24299-24302	the	
183-13	24303-24307	time	
183-14	24307-24308	.	

#Text=You have to track down what users or processes were doing when the slowdown happened.Sometimes you’ll need more of a developer mentality.
184-1	24309-24312	You	
184-2	24313-24317	have	
184-3	24318-24320	to	
184-4	24321-24326	track	
184-5	24327-24331	down	
184-6	24332-24336	what	
184-7	24337-24342	users	
184-8	24343-24345	or	
184-9	24346-24355	processes	
184-10	24356-24360	were	
184-11	24361-24366	doing	
184-12	24367-24371	when	
184-13	24372-24375	the	
184-14	24376-24384	slowdown	
184-15	24385-24403	happened.Sometimes	
184-16	24404-24407	you	
184-17	24407-24408	’	
184-18	24408-24410	ll	
184-19	24411-24415	need	
184-20	24416-24420	more	
184-21	24421-24423	of	
184-22	24424-24425	a	
184-23	24426-24435	developer	
184-24	24436-24445	mentality	
184-25	24445-24446	.	

#Text=What plugin was updated last?
185-1	24447-24451	What	
185-2	24452-24458	plugin	
185-3	24459-24462	was	
185-4	24463-24470	updated	
185-5	24471-24475	last	
185-6	24475-24476	?	

#Text=Any new themes or plugins that were custom-coded?
186-1	24477-24480	Any	
186-2	24481-24484	new	
186-3	24485-24491	themes	
186-4	24492-24494	or	
186-5	24495-24502	plugins	
186-6	24503-24507	that	
186-7	24508-24512	were	
186-8	24513-24525	custom-coded	
186-9	24525-24526	?	

#Text=(Check for memory-exhaustive commands.)
187-1	24527-24528	(	
187-2	24528-24533	Check	
187-3	24534-24537	for	
187-4	24538-24555	memory-exhaustive	
187-5	24556-24564	commands	
187-6	24564-24565	.	
187-7	24565-24566	)	

#Text=Yes, you can use applications monitors like New Relic but for me, it’s overkill.
188-1	24567-24570	Yes	
188-2	24570-24571	,	
188-3	24572-24575	you	
188-4	24576-24579	can	
188-5	24580-24583	use	
188-6	24584-24596	applications	
188-7	24597-24605	monitors	
188-8	24606-24610	like	
188-9	24611-24614	New	
188-10	24615-24620	Relic	
188-11	24621-24624	but	
188-12	24625-24628	for	
188-13	24629-24631	me	
188-14	24631-24632	,	
188-15	24633-24635	it	
188-16	24635-24636	’	
188-17	24636-24637	s	
188-18	24638-24646	overkill	
188-19	24646-24647	.	

#Text=The trickiest problems are when it seems like every site is the problem.
189-1	24648-24651	The	
189-2	24652-24661	trickiest	
189-3	24662-24670	problems	
189-4	24671-24674	are	
189-5	24675-24679	when	
189-6	24680-24682	it	
189-7	24683-24688	seems	
189-8	24689-24693	like	
189-9	24694-24699	every	
189-10	24700-24704	site	
189-11	24705-24707	is	
189-12	24708-24711	the	
189-13	24712-24719	problem	
189-14	24719-24720	.	

#Text=Or also when the server load is low but the sites are still slow.
190-1	24721-24723	Or	
190-2	24724-24728	also	
190-3	24729-24733	when	
190-4	24734-24737	the	
190-5	24738-24744	server	
190-6	24745-24749	load	
190-7	24750-24752	is	
190-8	24753-24756	low	
190-9	24757-24760	but	
190-10	24761-24764	the	
190-11	24765-24770	sites	
190-12	24771-24774	are	
190-13	24775-24780	still	
190-14	24781-24785	slow	
190-15	24785-24786	.	

#Text=Good luck!
191-1	24787-24791	Good	
191-2	24792-24796	luck	
191-3	24796-24797	!	

#Text=In the next part of this blog series we’ll cover caching optimization for your websites, so stay tuned.
192-1	24797-24799	In	
192-2	24800-24803	the	
192-3	24804-24808	next	
192-4	24809-24813	part	
192-5	24814-24816	of	
192-6	24817-24821	this	
192-7	24822-24826	blog	
192-8	24827-24833	series	
192-9	24834-24836	we	
192-10	24836-24837	’	
192-11	24837-24839	ll	
192-12	24840-24845	cover	
192-13	24846-24853	caching	
192-14	24854-24866	optimization	
192-15	24867-24870	for	
192-16	24871-24875	your	
192-17	24876-24884	websites	
192-18	24884-24885	,	
192-19	24886-24888	so	
192-20	24889-24893	stay	
192-21	24894-24899	tuned	
192-22	24899-24900	.	

#Text=For a full version of the article go to The Ultimate WordPress Speed Optimization Guide.Need an optimized WordPress hosting that meets the needs of your project?
193-1	24901-24904	For	
193-2	24905-24906	a	
193-3	24907-24911	full	
193-4	24912-24919	version	
193-5	24920-24922	of	
193-6	24923-24926	the	
193-7	24927-24934	article	
193-8	24935-24937	go	
193-9	24938-24940	to	
193-10	24941-24944	The	
193-11	24945-24953	Ultimate	
193-12	24954-24963	WordPress	
193-13	24964-24969	Speed	
193-14	24970-24982	Optimization	
193-15	24983-24993	Guide.Need	
193-16	24994-24996	an	
193-17	24997-25006	optimized	
193-18	25007-25016	WordPress	
193-19	25017-25024	hosting	
193-20	25025-25029	that	
193-21	25030-25035	meets	
193-22	25036-25039	the	
193-23	25040-25045	needs	
193-24	25046-25048	of	
193-25	25049-25053	your	
193-26	25054-25061	project	
193-27	25061-25062	?	

#Text=Get in touch with Jelastic for choosing the best option and receiving technical assistance while migration.Related ArticlesEnterprise WordPress Hosting: Automatic Scaling and High AvailabilityWordPress Hosting in Elastic Standalone ContainerHow to Migrate a WordPress Site to Jelastic PaaSSetup WordPress Multisite Network with Domain Mapping and CDNWebinar Summary: WordPress Cluster for Enterprise High Availability and On-Demand ScalingSubscribe to get the latest updates
#Text=GET STARTED FOR FREE
#Text=E-mail
#Text=Search
#Text=CategoriesDevelopmentHosting BusinessMulti-CloudWordPressDatabasesJavaContainersKubernetesUse CasesNews and ReleasesSolution
#Text=Multi-Cloud
#Text=Private Cloud
#Text=Public Cloud
#Text=Cloud Business for Service Providers
#Text=WordPress Hosting
#Text=Kubernetes HostingResources
#Text=Blog
#Text=Documentation
#Text=Pricing Overview
#Text=Video
#Text=Whitepapers
#Text=Use CasesGet started
#Text=Register to Public Cloud
#Text=Get Private Cloud License
#Text=Start Hosting Partnership
#Text=Request Automated Clustering
#Text=Request Specific Functionality
#Text=Contact Recent PublicationsJelastic PaaS Q1 2021 Resulted with Five New Cloud Hosting Partners Publicly LaunchedWWF Belgium Migrates to Jelastic PaaS on Infomaniak DatacenterCloud Lessons Learned from OVH Datacenter Fire
#Text=twitter
#Text=facebook
#Text=linkedin
#Text=youtube
#Text=github
#Text=stackoverflow© 2020 Jelastic.
194-1	25063-25066	Get	
194-2	25067-25069	in	
194-3	25070-25075	touch	
194-4	25076-25080	with	
194-5	25081-25089	Jelastic	
194-6	25090-25093	for	
194-7	25094-25102	choosing	
194-8	25103-25106	the	
194-9	25107-25111	best	
194-10	25112-25118	option	
194-11	25119-25122	and	
194-12	25123-25132	receiving	
194-13	25133-25142	technical	
194-14	25143-25153	assistance	
194-15	25154-25159	while	
194-16	25160-25177	migration.Related	
194-17	25178-25196	ArticlesEnterprise	
194-18	25197-25206	WordPress	
194-19	25207-25214	Hosting	
194-20	25214-25215	:	
194-21	25216-25225	Automatic	
194-22	25226-25233	Scaling	
194-23	25234-25237	and	
194-24	25238-25242	High	
194-25	25243-25264	AvailabilityWordPress	
194-26	25265-25272	Hosting	
194-27	25273-25275	in	
194-28	25276-25283	Elastic	
194-29	25284-25294	Standalone	
194-30	25295-25307	ContainerHow	
194-31	25308-25310	to	
194-32	25311-25318	Migrate	
194-33	25319-25320	a	
194-34	25321-25330	WordPress	
194-35	25331-25335	Site	
194-36	25336-25338	to	
194-37	25339-25347	Jelastic	
194-38	25348-25357	PaaSSetup	
194-39	25358-25367	WordPress	
194-40	25368-25377	Multisite	
194-41	25378-25385	Network	
194-42	25386-25390	with	
194-43	25391-25397	Domain	
194-44	25398-25405	Mapping	
194-45	25406-25409	and	
194-46	25410-25420	CDNWebinar	
194-47	25421-25428	Summary	
194-48	25428-25429	:	
194-49	25430-25439	WordPress	
194-50	25440-25447	Cluster	
194-51	25448-25451	for	
194-52	25452-25462	Enterprise	
194-53	25463-25467	High	
194-54	25468-25480	Availability	
194-55	25481-25484	and	
194-56	25485-25494	On-Demand	
194-57	25495-25511	ScalingSubscribe	
194-58	25512-25514	to	
194-59	25515-25518	get	
194-60	25519-25522	the	
194-61	25523-25529	latest	
194-62	25530-25537	updates	
194-63	25538-25541	GET	
194-64	25542-25549	STARTED	
194-65	25550-25553	FOR	
194-66	25554-25558	FREE	
194-67	25559-25565	E-mail	
194-68	25566-25572	Search	
194-69	25573-25601	CategoriesDevelopmentHosting	
194-70	25602-25666	BusinessMulti-CloudWordPressDatabasesJavaContainersKubernetesUse	
194-71	25667-25676	CasesNews	
194-72	25677-25680	and	
194-73	25681-25697	ReleasesSolution	
194-74	25698-25709	Multi-Cloud	
194-75	25710-25717	Private	
194-76	25718-25723	Cloud	
194-77	25724-25730	Public	
194-78	25731-25736	Cloud	
194-79	25737-25742	Cloud	
194-80	25743-25751	Business	
194-81	25752-25755	for	
194-82	25756-25763	Service	
194-83	25764-25773	Providers	
194-84	25774-25783	WordPress	
194-85	25784-25791	Hosting	
194-86	25792-25802	Kubernetes	
194-87	25803-25819	HostingResources	
194-88	25820-25824	Blog	
194-89	25825-25838	Documentation	
194-90	25839-25846	Pricing	
194-91	25847-25855	Overview	
194-92	25856-25861	Video	
194-93	25862-25873	Whitepapers	
194-94	25874-25877	Use	
194-95	25878-25886	CasesGet	
194-96	25887-25894	started	
194-97	25895-25903	Register	
194-98	25904-25906	to	
194-99	25907-25913	Public	
194-100	25914-25919	Cloud	
194-101	25920-25923	Get	
194-102	25924-25931	Private	
194-103	25932-25937	Cloud	
194-104	25938-25945	License	
194-105	25946-25951	Start	
194-106	25952-25959	Hosting	
194-107	25960-25971	Partnership	
194-108	25972-25979	Request	
194-109	25980-25989	Automated	
194-110	25990-26000	Clustering	
194-111	26001-26008	Request	
194-112	26009-26017	Specific	
194-113	26018-26031	Functionality	
194-114	26032-26039	Contact	
194-115	26040-26046	Recent	
194-116	26047-26067	PublicationsJelastic	
194-117	26068-26072	PaaS	
194-118	26073-26075	Q1	
194-119	26076-26080	2021	
194-120	26081-26089	Resulted	
194-121	26090-26094	with	
194-122	26095-26099	Five	
194-123	26100-26103	New	
194-124	26104-26109	Cloud	
194-125	26110-26117	Hosting	
194-126	26118-26126	Partners	
194-127	26127-26135	Publicly	
194-128	26136-26147	LaunchedWWF	
194-129	26148-26155	Belgium	
194-130	26156-26164	Migrates	
194-131	26165-26167	to	
194-132	26168-26176	Jelastic	
194-133	26177-26181	PaaS	
194-134	26182-26184	on	
194-135	26185-26195	Infomaniak	
194-136	26196-26211	DatacenterCloud	
194-137	26212-26219	Lessons	
194-138	26220-26227	Learned	
194-139	26228-26232	from	
194-140	26233-26236	OVH	
194-141	26237-26247	Datacenter	
194-142	26248-26252	Fire	
194-143	26253-26260	twitter	
194-144	26261-26269	facebook	
194-145	26270-26278	linkedin	
194-146	26279-26286	youtube	
194-147	26287-26293	github	
194-148	26294-26307	stackoverflow	
194-149	26307-26308	©	
194-150	26309-26313	2020	
194-151	26314-26322	Jelastic	
194-152	26322-26323	.	

#Text=All Rights Reserved, Jelastic, Inc. 228 Hamilton Avenue, 3rd Floor, Palo Alto, CA 94301Terms of UsePrivacy PolicyManage Personal Data
#Text=×Thanks for Request!
195-1	26324-26327	All	
195-2	26328-26334	Rights	
195-3	26335-26343	Reserved	
195-4	26343-26344	,	
195-5	26345-26353	Jelastic	
195-6	26353-26354	,	
195-7	26355-26358	Inc	
195-8	26358-26359	.	
195-9	26360-26363	228	
195-10	26364-26372	Hamilton	
195-11	26373-26379	Avenue	
195-12	26379-26380	,	
195-13	26381-26384	3rd	
195-14	26385-26390	Floor	
195-15	26390-26391	,	
195-16	26392-26396	Palo	
195-17	26397-26401	Alto	
195-18	26401-26402	,	
195-19	26403-26405	CA	
195-20	26406-26416	94301Terms	
195-21	26417-26419	of	
195-22	26420-26430	UsePrivacy	
195-23	26431-26443	PolicyManage	
195-24	26444-26452	Personal	
195-25	26453-26457	Data	
195-26	26458-26459	×	
195-27	26459-26465	Thanks	
195-28	26466-26469	for	
195-29	26470-26477	Request	
195-30	26477-26478	!	

#Text=Jelastic team will contact you within 24 hours.
196-1	26478-26486	Jelastic	
196-2	26487-26491	team	
196-3	26492-26496	will	
196-4	26497-26504	contact	
196-5	26505-26508	you	
196-6	26509-26515	within	
196-7	26516-26518	24	
196-8	26519-26524	hours	
196-9	26524-26525	.	

#Text=Private Cloud Company *Project Details *agreeI read and agree to Jelastic Terms of Use and Privacy Policy*
#Text=Multi Cloud Company *Project Details *agreeI read and agree to Jelastic Terms of Use and Privacy Policy*
197-1	26526-26533	Private	
197-2	26534-26539	Cloud	
197-3	26540-26547	Company	
197-4	26548-26549	*	
197-5	26549-26556	Project	
197-6	26557-26564	Details	
197-7	26565-26566	*	
197-8	26566-26572	agreeI	
197-9	26573-26577	read	
197-10	26578-26581	and	
197-11	26582-26587	agree	
197-12	26588-26590	to	
197-13	26591-26599	Jelastic	
197-14	26600-26605	Terms	
197-15	26606-26608	of	
197-16	26609-26612	Use	
197-17	26613-26616	and	
197-18	26617-26624	Privacy	
197-19	26625-26631	Policy	
197-20	26631-26632	*	
197-21	26633-26638	Multi	
197-22	26639-26644	Cloud	
197-23	26645-26652	Company	
197-24	26653-26654	*	
197-25	26654-26661	Project	
197-26	26662-26669	Details	
197-27	26670-26671	*	
197-28	26671-26677	agreeI	
197-29	26678-26682	read	
197-30	26683-26686	and	
197-31	26687-26692	agree	
197-32	26693-26695	to	
197-33	26696-26704	Jelastic	
197-34	26705-26710	Terms	
197-35	26711-26713	of	
197-36	26714-26717	Use	
197-37	26718-26721	and	
197-38	26722-26729	Privacy	
197-39	26730-26736	Policy	
197-40	26736-26737	*	
