#FORMAT=WebAnno TSV 3.3


#Text=Optimizing Query Performance - InterSystems SQL Optimization Guide - InterSystems IRIS for Health 2020.4
#Text=Skip to main content
#Text=Learning
#Text=Documentation
#Text=Community
#Text=Open Exchange
#Text=Global Masters
#Text=Certification
#Text=Search:
#Text=InterSystems IRIS for Health 2020.4 >
#Text=Data Model >
#Text=SQL >
#Text=InterSystems SQL Optimization Guide >
#Text=Optimizing Query Performance
#Text=Contents
#Text=Management Portal SQL Performance Tools
#Text=SQL Runtime Statistics
#Text=Using Indices
#Text=Query Execution Plans
#Text=Alternate Show Plans
#Text=Writing Query Optimization Plans to a File
#Text=Comment Options
#Text=Parallel Query Processing
#Text=Generate Report
#Text=Scroll to top
#Text=Optimizing Query Performance
#Text=InterSystems SQL automatically uses a Query Optimizer to create a query plan that provides optimal query performance in most circumstances.
1-1	0-10	Optimizing	
1-2	11-16	Query	
1-3	17-28	Performance	
1-4	29-30	-	
1-5	31-43	InterSystems	
1-6	44-47	SQL	
1-7	48-60	Optimization	
1-8	61-66	Guide	
1-9	67-68	-	
1-10	69-81	InterSystems	
1-11	82-86	IRIS	
1-12	87-90	for	
1-13	91-97	Health	
1-14	98-104	2020.4	
1-15	105-109	Skip	
1-16	110-112	to	
1-17	113-117	main	
1-18	118-125	content	
1-19	126-134	Learning	
1-20	135-148	Documentation	
1-21	149-158	Community	
1-22	159-163	Open	
1-23	164-172	Exchange	
1-24	173-179	Global	
1-25	180-187	Masters	
1-26	188-201	Certification	
1-27	202-208	Search	
1-28	208-209	:	
1-29	210-222	InterSystems	
1-30	223-227	IRIS	
1-31	228-231	for	
1-32	232-238	Health	
1-33	239-245	2020.4	
1-34	246-247	>	
1-35	248-252	Data	
1-36	253-258	Model	
1-37	259-260	>	
1-38	261-264	SQL	
1-39	265-266	>	
1-40	267-279	InterSystems	
1-41	280-283	SQL	
1-42	284-296	Optimization	
1-43	297-302	Guide	
1-44	303-304	>	
1-45	305-315	Optimizing	
1-46	316-321	Query	
1-47	322-333	Performance	
1-48	334-342	Contents	
1-49	343-353	Management	
1-50	354-360	Portal	
1-51	361-364	SQL	
1-52	365-376	Performance	
1-53	377-382	Tools	
1-54	383-386	SQL	
1-55	387-394	Runtime	
1-56	395-405	Statistics	
1-57	406-411	Using	
1-58	412-419	Indices	
1-59	420-425	Query	
1-60	426-435	Execution	
1-61	436-441	Plans	
1-62	442-451	Alternate	
1-63	452-456	Show	
1-64	457-462	Plans	
1-65	463-470	Writing	
1-66	471-476	Query	
1-67	477-489	Optimization	
1-68	490-495	Plans	
1-69	496-498	to	
1-70	499-500	a	
1-71	501-505	File	
1-72	506-513	Comment	
1-73	514-521	Options	
1-74	522-530	Parallel	
1-75	531-536	Query	
1-76	537-547	Processing	
1-77	548-556	Generate	
1-78	557-563	Report	
1-79	564-570	Scroll	
1-80	571-573	to	
1-81	574-577	top	
1-82	578-588	Optimizing	
1-83	589-594	Query	
1-84	595-606	Performance	
1-85	607-619	InterSystems	
1-86	620-623	SQL	
1-87	624-637	automatically	
1-88	638-642	uses	
1-89	643-644	a	
1-90	645-650	Query	
1-91	651-660	Optimizer	
1-92	661-663	to	
1-93	664-670	create	
1-94	671-672	a	
1-95	673-678	query	
1-96	679-683	plan	
1-97	684-688	that	
1-98	689-697	provides	
1-99	698-705	optimal	
1-100	706-711	query	
1-101	712-723	performance	
1-102	724-726	in	
1-103	727-731	most	
1-104	732-745	circumstances	
1-105	745-746	.	

#Text=This Optimizer improves query performance in many ways, including determining which indices to use, determining the order of evaluation of multiple AND conditions, determining the sequence of tables when performing multiple joins, and many other optimization operations.
2-1	747-751	This	
2-2	752-761	Optimizer	
2-3	762-770	improves	
2-4	771-776	query	
2-5	777-788	performance	
2-6	789-791	in	
2-7	792-796	many	
2-8	797-801	ways	
2-9	801-802	,	
2-10	803-812	including	
2-11	813-824	determining	
2-12	825-830	which	
2-13	831-838	indices	
2-14	839-841	to	
2-15	842-845	use	
2-16	845-846	,	
2-17	847-858	determining	
2-18	859-862	the	
2-19	863-868	order	
2-20	869-871	of	
2-21	872-882	evaluation	
2-22	883-885	of	
2-23	886-894	multiple	
2-24	895-898	AND	
2-25	899-909	conditions	
2-26	909-910	,	
2-27	911-922	determining	
2-28	923-926	the	
2-29	927-935	sequence	
2-30	936-938	of	
2-31	939-945	tables	
2-32	946-950	when	
2-33	951-961	performing	
2-34	962-970	multiple	
2-35	971-976	joins	
2-36	976-977	,	
2-37	978-981	and	
2-38	982-986	many	
2-39	987-992	other	
2-40	993-1005	optimization	
2-41	1006-1016	operations	
2-42	1016-1017	.	

#Text=You can supply &OpenCurlyDoubleQuotehints&CloseCurlyDoubleQuote to this Optimizer in the FROM clause of the query.
3-1	1018-1021	You	
3-2	1022-1025	can	
3-3	1026-1032	supply	
3-4	1033-1034	&	
3-5	1034-1059	OpenCurlyDoubleQuotehints	
3-6	1059-1060	&	
3-7	1060-1081	CloseCurlyDoubleQuote	
3-8	1082-1084	to	
3-9	1085-1089	this	
3-10	1090-1099	Optimizer	
3-11	1100-1102	in	
3-12	1103-1106	the	
3-13	1107-1111	FROM	
3-14	1112-1118	clause	
3-15	1119-1121	of	
3-16	1122-1125	the	
3-17	1126-1131	query	
3-18	1131-1132	.	

#Text=This chapter describes tools that you can use to evaluate a query plan and to modify how InterSystems SQL will optimize a specific query.
4-1	1133-1137	This	
4-2	1138-1145	chapter	
4-3	1146-1155	describes	
4-4	1156-1161	tools	
4-5	1162-1166	that	
4-6	1167-1170	you	
4-7	1171-1174	can	
4-8	1175-1178	use	
4-9	1179-1181	to	
4-10	1182-1190	evaluate	
4-11	1191-1192	a	
4-12	1193-1198	query	
4-13	1199-1203	plan	
4-14	1204-1207	and	
4-15	1208-1210	to	
4-16	1211-1217	modify	
4-17	1218-1221	how	
4-18	1222-1234	InterSystems	
4-19	1235-1238	SQL	
4-20	1239-1243	will	
4-21	1244-1252	optimize	
4-22	1253-1254	a	
4-23	1255-1263	specific	
4-24	1264-1269	query	
4-25	1269-1270	.	

#Text=InterSystems IRIS® data platform supports the following tools for optimizing SQL queries:
#Text=SQL Runtime Statistics to generate runtime performance statistics on query execution.
5-1	1271-1283	InterSystems	
5-2	1284-1288	IRIS	
5-3	1288-1289	®	
5-4	1290-1294	data	
5-5	1295-1303	platform	
5-6	1304-1312	supports	
5-7	1313-1316	the	
5-8	1317-1326	following	
5-9	1327-1332	tools	
5-10	1333-1336	for	
5-11	1337-1347	optimizing	
5-12	1348-1351	SQL	
5-13	1352-1359	queries	
5-14	1359-1360	:	
5-15	1361-1364	SQL	
5-16	1365-1372	Runtime	
5-17	1373-1383	Statistics	
5-18	1384-1386	to	
5-19	1387-1395	generate	
5-20	1396-1403	runtime	
5-21	1404-1415	performance	
5-22	1416-1426	statistics	
5-23	1427-1429	on	
5-24	1430-1435	query	
5-25	1436-1445	execution	
5-26	1445-1446	.	

#Text=(For more in-depth analysis of the performance of specific queries in a development environment, refer to the &OpenCurlyDoubleQuoteSQL Performance Analysis Toolkit&CloseCurlyDoubleQuote chapter of this manual.)
6-1	1447-1448	(	
6-2	1448-1451	For	
6-3	1452-1456	more	
6-4	1457-1465	in-depth	
6-5	1466-1474	analysis	
6-6	1475-1477	of	
6-7	1478-1481	the	
6-8	1482-1493	performance	
6-9	1494-1496	of	
6-10	1497-1505	specific	
6-11	1506-1513	queries	
6-12	1514-1516	in	
6-13	1517-1518	a	
6-14	1519-1530	development	
6-15	1531-1542	environment	
6-16	1542-1543	,	
6-17	1544-1549	refer	
6-18	1550-1552	to	
6-19	1553-1556	the	
6-20	1557-1558	&	
6-21	1558-1581	OpenCurlyDoubleQuoteSQL	
6-22	1582-1593	Performance	
6-23	1594-1602	Analysis	
6-24	1603-1610	Toolkit	
6-25	1610-1611	&	
6-26	1611-1632	CloseCurlyDoubleQuote	
6-27	1633-1640	chapter	
6-28	1641-1643	of	
6-29	1644-1648	this	
6-30	1649-1655	manual	
6-31	1655-1656	.	
6-32	1656-1657	)	

#Text=Index Analyzer to display various index analyzer reports for all queries in the current namespace.
7-1	1658-1663	Index	
7-2	1664-1672	Analyzer	
7-3	1673-1675	to	
7-4	1676-1683	display	
7-5	1684-1691	various	
7-6	1692-1697	index	
7-7	1698-1706	analyzer	
7-8	1707-1714	reports	
7-9	1715-1718	for	
7-10	1719-1722	all	
7-11	1723-1730	queries	
7-12	1731-1733	in	
7-13	1734-1737	the	
7-14	1738-1745	current	
7-15	1746-1755	namespace	
7-16	1755-1756	.	

#Text=This shows how InterSystems SQL is going to execute the query, giving you an overall view of how indices are being used.
8-1	1757-1761	This	
8-2	1762-1767	shows	
8-3	1768-1771	how	
8-4	1772-1784	InterSystems	
8-5	1785-1788	SQL	
8-6	1789-1791	is	
8-7	1792-1797	going	
8-8	1798-1800	to	
8-9	1801-1808	execute	
8-10	1809-1812	the	
8-11	1813-1818	query	
8-12	1818-1819	,	
8-13	1820-1826	giving	
8-14	1827-1830	you	
8-15	1831-1833	an	
8-16	1834-1841	overall	
8-17	1842-1846	view	
8-18	1847-1849	of	
8-19	1850-1853	how	
8-20	1854-1861	indices	
8-21	1862-1865	are	
8-22	1866-1871	being	
8-23	1872-1876	used	
8-24	1876-1877	.	

#Text=This index analysis may indicate that you should add one or more indices to improve performance.
9-1	1878-1882	This	
9-2	1883-1888	index	
9-3	1889-1897	analysis	
9-4	1898-1901	may	
9-5	1902-1910	indicate	
9-6	1911-1915	that	
9-7	1916-1919	you	
9-8	1920-1926	should	
9-9	1927-1930	add	
9-10	1931-1934	one	
9-11	1935-1937	or	
9-12	1938-1942	more	
9-13	1943-1950	indices	
9-14	1951-1953	to	
9-15	1954-1961	improve	
9-16	1962-1973	performance	
9-17	1973-1974	.	

#Text=Query Execution Plans to display the optimal (default) execution plan for an SQL query (query plan), and optionally display alternate query plans for that SQL query, with statistics.
10-1	1975-1980	Query	
10-2	1981-1990	Execution	
10-3	1991-1996	Plans	
10-4	1997-1999	to	
10-5	2000-2007	display	
10-6	2008-2011	the	
10-7	2012-2019	optimal	
10-8	2020-2021	(	
10-9	2021-2028	default	
10-10	2028-2029	)	
10-11	2030-2039	execution	
10-12	2040-2044	plan	
10-13	2045-2048	for	
10-14	2049-2051	an	
10-15	2052-2055	SQL	
10-16	2056-2061	query	
10-17	2062-2063	(	
10-18	2063-2068	query	
10-19	2069-2073	plan	
10-20	2073-2074	)	
10-21	2074-2075	,	
10-22	2076-2079	and	
10-23	2080-2090	optionally	
10-24	2091-2098	display	
10-25	2099-2108	alternate	
10-26	2109-2114	query	
10-27	2115-2120	plans	
10-28	2121-2124	for	
10-29	2125-2129	that	
10-30	2130-2133	SQL	
10-31	2134-2139	query	
10-32	2139-2140	,	
10-33	2141-2145	with	
10-34	2146-2156	statistics	
10-35	2156-2157	.	

#Text=Tools to display query plans include the SQL EXPLAIN command, the $SYSTEM.SQL.Explain() method, and various Show Plan tools from the Management Portal and the SQL Shell. query plans and statistics are generated when the query is prepared; it is not necessary to execute the query.
11-1	2158-2163	Tools	
11-2	2164-2166	to	
11-3	2167-2174	display	
11-4	2175-2180	query	
11-5	2181-2186	plans	
11-6	2187-2194	include	
11-7	2195-2198	the	
11-8	2199-2202	SQL	
11-9	2203-2210	EXPLAIN	
11-10	2211-2218	command	
11-11	2218-2219	,	
11-12	2220-2223	the	
11-13	2224-2225	$	
11-14	2225-2243	SYSTEM.SQL.Explain	
11-15	2243-2244	(	
11-16	2244-2245	)	
11-17	2246-2252	method	
11-18	2252-2253	,	
11-19	2254-2257	and	
11-20	2258-2265	various	
11-21	2266-2270	Show	
11-22	2271-2275	Plan	
11-23	2276-2281	tools	
11-24	2282-2286	from	
11-25	2287-2290	the	
11-26	2291-2301	Management	
11-27	2302-2308	Portal	
11-28	2309-2312	and	
11-29	2313-2316	the	
11-30	2317-2320	SQL	
11-31	2321-2326	Shell	
11-32	2326-2327	.	
11-33	2328-2333	query	
11-34	2334-2339	plans	
11-35	2340-2343	and	
11-36	2344-2354	statistics	
11-37	2355-2358	are	
11-38	2359-2368	generated	
11-39	2369-2373	when	
11-40	2374-2377	the	
11-41	2378-2383	query	
11-42	2384-2386	is	
11-43	2387-2395	prepared	
11-44	2395-2396	;	
11-45	2397-2399	it	
11-46	2400-2402	is	
11-47	2403-2406	not	
11-48	2407-2416	necessary	
11-49	2417-2419	to	
11-50	2420-2427	execute	
11-51	2428-2431	the	
11-52	2432-2437	query	
11-53	2437-2438	.	

#Text=You can direct the Query Optimizer by using the following options, either by setting configuration defaults or by coding optimizer &OpenCurlyDoubleQuotehints&CloseCurlyDoubleQuote in the query code:
#Text=Index Optimization Options available FROM clause options governing all conditions, or %NOINDEX prefacing an individual condition.
12-1	2439-2442	You	
12-2	2443-2446	can	
12-3	2447-2453	direct	
12-4	2454-2457	the	
12-5	2458-2463	Query	
12-6	2464-2473	Optimizer	
12-7	2474-2476	by	
12-8	2477-2482	using	
12-9	2483-2486	the	
12-10	2487-2496	following	
12-11	2497-2504	options	
12-12	2504-2505	,	
12-13	2506-2512	either	
12-14	2513-2515	by	
12-15	2516-2523	setting	
12-16	2524-2537	configuration	
12-17	2538-2546	defaults	
12-18	2547-2549	or	
12-19	2550-2552	by	
12-20	2553-2559	coding	
12-21	2560-2569	optimizer	
12-22	2570-2571	&	
12-23	2571-2596	OpenCurlyDoubleQuotehints	
12-24	2596-2597	&	
12-25	2597-2618	CloseCurlyDoubleQuote	
12-26	2619-2621	in	
12-27	2622-2625	the	
12-28	2626-2631	query	
12-29	2632-2636	code	
12-30	2636-2637	:	
12-31	2638-2643	Index	
12-32	2644-2656	Optimization	
12-33	2657-2664	Options	
12-34	2665-2674	available	
12-35	2675-2679	FROM	
12-36	2680-2686	clause	
12-37	2687-2694	options	
12-38	2695-2704	governing	
12-39	2705-2708	all	
12-40	2709-2719	conditions	
12-41	2719-2720	,	
12-42	2721-2723	or	
12-43	2724-2725	%	
12-44	2725-2732	NOINDEX	
12-45	2733-2742	prefacing	
12-46	2743-2745	an	
12-47	2746-2756	individual	
12-48	2757-2766	condition	
12-49	2766-2767	.	

#Text=Comment Options specified in the SQL code that cause the Optimizer to override a system-wide compile option for that query.
13-1	2768-2775	Comment	
13-2	2776-2783	Options	
13-3	2784-2793	specified	
13-4	2794-2796	in	
13-5	2797-2800	the	
13-6	2801-2804	SQL	
13-7	2805-2809	code	
13-8	2810-2814	that	
13-9	2815-2820	cause	
13-10	2821-2824	the	
13-11	2825-2834	Optimizer	
13-12	2835-2837	to	
13-13	2838-2846	override	
13-14	2847-2848	a	
13-15	2849-2860	system-wide	
13-16	2861-2868	compile	
13-17	2869-2875	option	
13-18	2876-2879	for	
13-19	2880-2884	that	
13-20	2885-2890	query	
13-21	2890-2891	.	

#Text=Parallel Query Processing available on a per-query or system-wide basis allows multi-processor systems to divide query execution amongst the processors.
14-1	2892-2900	Parallel	
14-2	2901-2906	Query	
14-3	2907-2917	Processing	
14-4	2918-2927	available	
14-5	2928-2930	on	
14-6	2931-2932	a	
14-7	2933-2942	per-query	
14-8	2943-2945	or	
14-9	2946-2957	system-wide	
14-10	2958-2963	basis	
14-11	2964-2970	allows	
14-12	2971-2986	multi-processor	
14-13	2987-2994	systems	
14-14	2995-2997	to	
14-15	2998-3004	divide	
14-16	3005-3010	query	
14-17	3011-3020	execution	
14-18	3021-3028	amongst	
14-19	3029-3032	the	
14-20	3033-3043	processors	
14-21	3043-3044	.	

#Text=The following SQL query performance tools are described in other chapters of this manual:
#Text=Cached Queries to enable Dynamic SQL queries to be rerun without the overhead of preparing the query each time it is executed.
15-1	3045-3048	The	
15-2	3049-3058	following	
15-3	3059-3062	SQL	
15-4	3063-3068	query	
15-5	3069-3080	performance	
15-6	3081-3086	tools	
15-7	3087-3090	are	
15-8	3091-3100	described	
15-9	3101-3103	in	
15-10	3104-3109	other	
15-11	3110-3118	chapters	
15-12	3119-3121	of	
15-13	3122-3126	this	
15-14	3127-3133	manual	
15-15	3133-3134	:	
15-16	3135-3141	Cached	
15-17	3142-3149	Queries	
15-18	3150-3152	to	
15-19	3153-3159	enable	
15-20	3160-3167	Dynamic	
15-21	3168-3171	SQL	
15-22	3172-3179	queries	
15-23	3180-3182	to	
15-24	3183-3185	be	
15-25	3186-3191	rerun	
15-26	3192-3199	without	
15-27	3200-3203	the	
15-28	3204-3212	overhead	
15-29	3213-3215	of	
15-30	3216-3225	preparing	
15-31	3226-3229	the	
15-32	3230-3235	query	
15-33	3236-3240	each	
15-34	3241-3245	time	
15-35	3246-3248	it	
15-36	3249-3251	is	
15-37	3252-3260	executed	
15-38	3260-3261	.	

#Text=SQL Statements to preserve the most-recently compiled Embedded SQL query.
16-1	3262-3265	SQL	
16-2	3266-3276	Statements	
16-3	3277-3279	to	
16-4	3280-3288	preserve	
16-5	3289-3292	the	
16-6	3293-3306	most-recently	
16-7	3307-3315	compiled	
16-8	3316-3324	Embedded	
16-9	3325-3328	SQL	
16-10	3329-3334	query	
16-11	3334-3335	.	

#Text=In the &OpenCurlyDoubleQuoteSQL Statements and Frozen Plans&CloseCurlyDoubleQuote chapter.
17-1	3336-3338	In	
17-2	3339-3342	the	
17-3	3343-3344	&	
17-4	3344-3367	OpenCurlyDoubleQuoteSQL	
17-5	3368-3378	Statements	
17-6	3379-3382	and	
17-7	3383-3389	Frozen	
17-8	3390-3395	Plans	
17-9	3395-3396	&	
17-10	3396-3417	CloseCurlyDoubleQuote	
17-11	3418-3425	chapter	
17-12	3425-3426	.	

#Text=Frozen Plans to preserve a specific compile of an Embedded SQL query.
18-1	3427-3433	Frozen	
18-2	3434-3439	Plans	
18-3	3440-3442	to	
18-4	3443-3451	preserve	
18-5	3452-3453	a	
18-6	3454-3462	specific	
18-7	3463-3470	compile	
18-8	3471-3473	of	
18-9	3474-3476	an	
18-10	3477-3485	Embedded	
18-11	3486-3489	SQL	
18-12	3490-3495	query	
18-13	3495-3496	.	

#Text=This compile is used rather than a more recent compile.
19-1	3497-3501	This	
19-2	3502-3509	compile	
19-3	3510-3512	is	
19-4	3513-3517	used	
19-5	3518-3524	rather	
19-6	3525-3529	than	
19-7	3530-3531	a	
19-8	3532-3536	more	
19-9	3537-3543	recent	
19-10	3544-3551	compile	
19-11	3551-3552	.	

#Text=In the &OpenCurlyDoubleQuoteSQL Statements and Frozen Plans&CloseCurlyDoubleQuote chapter.
20-1	3553-3555	In	
20-2	3556-3559	the	
20-3	3560-3561	&	
20-4	3561-3584	OpenCurlyDoubleQuoteSQL	
20-5	3585-3595	Statements	
20-6	3596-3599	and	
20-7	3600-3606	Frozen	
20-8	3607-3612	Plans	
20-9	3612-3613	&	
20-10	3613-3634	CloseCurlyDoubleQuote	
20-11	3635-3642	chapter	
20-12	3642-3643	.	

#Text=The following tools are used to optimize table data, and thus can have a significant effect on all queries run against that table:
#Text=Defining Indices can significantly speed access to data in specific indexed fields.
21-1	3644-3647	The	
21-2	3648-3657	following	
21-3	3658-3663	tools	
21-4	3664-3667	are	
21-5	3668-3672	used	
21-6	3673-3675	to	
21-7	3676-3684	optimize	
21-8	3685-3690	table	
21-9	3691-3695	data	
21-10	3695-3696	,	
21-11	3697-3700	and	
21-12	3701-3705	thus	
21-13	3706-3709	can	
21-14	3710-3714	have	
21-15	3715-3716	a	
21-16	3717-3728	significant	
21-17	3729-3735	effect	
21-18	3736-3738	on	
21-19	3739-3742	all	
21-20	3743-3750	queries	
21-21	3751-3754	run	
21-22	3755-3762	against	
21-23	3763-3767	that	
21-24	3768-3773	table	
21-25	3773-3774	:	
21-26	3775-3783	Defining	
21-27	3784-3791	Indices	
21-28	3792-3795	can	
21-29	3796-3809	significantly	
21-30	3810-3815	speed	
21-31	3816-3822	access	
21-32	3823-3825	to	
21-33	3826-3830	data	
21-34	3831-3833	in	
21-35	3834-3842	specific	
21-36	3843-3850	indexed	
21-37	3851-3857	fields	
21-38	3857-3858	.	

#Text=ExtentSize, Selectivity, and BlockCount to specify table data estimates before populating the table with data; this metadata is used to optimize future queries.
22-1	3859-3869	ExtentSize	
22-2	3869-3870	,	
22-3	3871-3882	Selectivity	
22-4	3882-3883	,	
22-5	3884-3887	and	
22-6	3888-3898	BlockCount	
22-7	3899-3901	to	
22-8	3902-3909	specify	
22-9	3910-3915	table	
22-10	3916-3920	data	
22-11	3921-3930	estimates	
22-12	3931-3937	before	
22-13	3938-3948	populating	
22-14	3949-3952	the	
22-15	3953-3958	table	
22-16	3959-3963	with	
22-17	3964-3968	data	
22-18	3968-3969	;	
22-19	3970-3974	this	
22-20	3975-3983	metadata	
22-21	3984-3986	is	
22-22	3987-3991	used	
22-23	3992-3994	to	
22-24	3995-4003	optimize	
22-25	4004-4010	future	
22-26	4011-4018	queries	
22-27	4018-4019	.	

#Text=Tune Table to analyze representative table data in a populated table; this generated metadata is used to optimize future queries.
23-1	4020-4024	Tune	
23-2	4025-4030	Table	
23-3	4031-4033	to	
23-4	4034-4041	analyze	
23-5	4042-4056	representative	
23-6	4057-4062	table	
23-7	4063-4067	data	
23-8	4068-4070	in	
23-9	4071-4072	a	
23-10	4073-4082	populated	
23-11	4083-4088	table	
23-12	4088-4089	;	
23-13	4090-4094	this	
23-14	4095-4104	generated	
23-15	4105-4113	metadata	
23-16	4114-4116	is	
23-17	4117-4121	used	
23-18	4122-4124	to	
23-19	4125-4133	optimize	
23-20	4134-4140	future	
23-21	4141-4148	queries	
23-22	4148-4149	.	

#Text=This chapter also describes how to Write Query Optimization Plans to a File, and how to generate an SQL Troubleshooting Report to submit to InterSystems WRC.
24-1	4150-4154	This	
24-2	4155-4162	chapter	
24-3	4163-4167	also	
24-4	4168-4177	describes	
24-5	4178-4181	how	
24-6	4182-4184	to	
24-7	4185-4190	Write	
24-8	4191-4196	Query	
24-9	4197-4209	Optimization	
24-10	4210-4215	Plans	
24-11	4216-4218	to	
24-12	4219-4220	a	
24-13	4221-4225	File	
24-14	4225-4226	,	
24-15	4227-4230	and	
24-16	4231-4234	how	
24-17	4235-4237	to	
24-18	4238-4246	generate	
24-19	4247-4249	an	
24-20	4250-4253	SQL	
24-21	4254-4269	Troubleshooting	
24-22	4270-4276	Report	
24-23	4277-4279	to	
24-24	4280-4286	submit	
24-25	4287-4289	to	
24-26	4290-4302	InterSystems	
24-27	4303-4306	WRC	
24-28	4306-4307	.	

#Text=Management Portal SQL Performance ToolsCopy link to this section
#Text=The InterSystems IRIS Management Portal provides access to the following SQL performance tools.
25-1	4308-4318	Management	
25-2	4319-4325	Portal	
25-3	4326-4329	SQL	
25-4	4330-4341	Performance	
25-5	4342-4351	ToolsCopy	
25-6	4352-4356	link	
25-7	4357-4359	to	
25-8	4360-4364	this	
25-9	4365-4372	section	
25-10	4373-4376	The	
25-11	4377-4389	InterSystems	
25-12	4390-4394	IRIS	
25-13	4395-4405	Management	
25-14	4406-4412	Portal	
25-15	4413-4421	provides	
25-16	4422-4428	access	
25-17	4429-4431	to	
25-18	4432-4435	the	
25-19	4436-4445	following	
25-20	4446-4449	SQL	
25-21	4450-4461	performance	
25-22	4462-4467	tools	
25-23	4467-4468	.	

#Text=There are two ways to access these tools from the Management Portal System Explorer option:
#Text=Select Tools, then select SQL Performance Tools.
26-1	4469-4474	There	
26-2	4475-4478	are	
26-3	4479-4482	two	
26-4	4483-4487	ways	
26-5	4488-4490	to	
26-6	4491-4497	access	
26-7	4498-4503	these	
26-8	4504-4509	tools	
26-9	4510-4514	from	
26-10	4515-4518	the	
26-11	4519-4529	Management	
26-12	4530-4536	Portal	
26-13	4537-4543	System	
26-14	4544-4552	Explorer	
26-15	4553-4559	option	
26-16	4559-4560	:	
26-17	4561-4567	Select	
26-18	4568-4573	Tools	
26-19	4573-4574	,	
26-20	4575-4579	then	
26-21	4580-4586	select	
26-22	4587-4590	SQL	
26-23	4591-4602	Performance	
26-24	4603-4608	Tools	
26-25	4608-4609	.	

#Text=Select SQL, then select the Tools drop-down menu.
27-1	4610-4616	Select	
27-2	4617-4620	SQL	
27-3	4620-4621	,	
27-4	4622-4626	then	
27-5	4627-4633	select	
27-6	4634-4637	the	
27-7	4638-4643	Tools	
27-8	4644-4653	drop-down	
27-9	4654-4658	menu	
27-10	4658-4659	.	

#Text=From either interface you can select one of the following SQL performance tools:
#Text=SQL Runtime Statistics to generate performance statistics on query execution.
28-1	4660-4664	From	
28-2	4665-4671	either	
28-3	4672-4681	interface	
28-4	4682-4685	you	
28-5	4686-4689	can	
28-6	4690-4696	select	
28-7	4697-4700	one	
28-8	4701-4703	of	
28-9	4704-4707	the	
28-10	4708-4717	following	
28-11	4718-4721	SQL	
28-12	4722-4733	performance	
28-13	4734-4739	tools	
28-14	4739-4740	:	
28-15	4741-4744	SQL	
28-16	4745-4752	Runtime	
28-17	4753-4763	Statistics	
28-18	4764-4766	to	
28-19	4767-4775	generate	
28-20	4776-4787	performance	
28-21	4788-4798	statistics	
28-22	4799-4801	on	
28-23	4802-4807	query	
28-24	4808-4817	execution	
28-25	4817-4818	.	

#Text=Index Analyzer to display various index analyzer reports for all queries in the current namespace.
29-1	4819-4824	Index	
29-2	4825-4833	Analyzer	
29-3	4834-4836	to	
29-4	4837-4844	display	
29-5	4845-4852	various	
29-6	4853-4858	index	
29-7	4859-4867	analyzer	
29-8	4868-4875	reports	
29-9	4876-4879	for	
29-10	4880-4883	all	
29-11	4884-4891	queries	
29-12	4892-4894	in	
29-13	4895-4898	the	
29-14	4899-4906	current	
29-15	4907-4916	namespace	
29-16	4916-4917	.	

#Text=This shows how InterSystems SQL is going to execute the query, giving you an overall view of how indices are being used.
30-1	4918-4922	This	
30-2	4923-4928	shows	
30-3	4929-4932	how	
30-4	4933-4945	InterSystems	
30-5	4946-4949	SQL	
30-6	4950-4952	is	
30-7	4953-4958	going	
30-8	4959-4961	to	
30-9	4962-4969	execute	
30-10	4970-4973	the	
30-11	4974-4979	query	
30-12	4979-4980	,	
30-13	4981-4987	giving	
30-14	4988-4991	you	
30-15	4992-4994	an	
30-16	4995-5002	overall	
30-17	5003-5007	view	
30-18	5008-5010	of	
30-19	5011-5014	how	
30-20	5015-5022	indices	
30-21	5023-5026	are	
30-22	5027-5032	being	
30-23	5033-5037	used	
30-24	5037-5038	.	

#Text=This index analysis may indicate that you should add one or more indices to improve performance.
31-1	5039-5043	This	
31-2	5044-5049	index	
31-3	5050-5058	analysis	
31-4	5059-5062	may	
31-5	5063-5071	indicate	
31-6	5072-5076	that	
31-7	5077-5080	you	
31-8	5081-5087	should	
31-9	5088-5091	add	
31-10	5092-5095	one	
31-11	5096-5098	or	
31-12	5099-5103	more	
31-13	5104-5111	indices	
31-14	5112-5114	to	
31-15	5115-5122	improve	
31-16	5123-5134	performance	
31-17	5134-5135	.	

#Text=Alternate Show Plans to display available alternate query plans for an SQL query, with statistics.
32-1	5136-5145	Alternate	
32-2	5146-5150	Show	
32-3	5151-5156	Plans	
32-4	5157-5159	to	
32-5	5160-5167	display	
32-6	5168-5177	available	
32-7	5178-5187	alternate	
32-8	5188-5193	query	
32-9	5194-5199	plans	
32-10	5200-5203	for	
32-11	5204-5206	an	
32-12	5207-5210	SQL	
32-13	5211-5216	query	
32-14	5216-5217	,	
32-15	5218-5222	with	
32-16	5223-5233	statistics	
32-17	5233-5234	.	

#Text=Generate Report to submit an SQL query performance report to InterSystems Worldwide Response Center (WRC) customer support.
33-1	5235-5243	Generate	
33-2	5244-5250	Report	
33-3	5251-5253	to	
33-4	5254-5260	submit	
33-5	5261-5263	an	
33-6	5264-5267	SQL	
33-7	5268-5273	query	
33-8	5274-5285	performance	
33-9	5286-5292	report	
33-10	5293-5295	to	
33-11	5296-5308	InterSystems	
33-12	5309-5318	Worldwide	
33-13	5319-5327	Response	
33-14	5328-5334	Center	
33-15	5335-5336	(	
33-16	5336-5339	WRC	
33-17	5339-5340	)	
33-18	5341-5349	customer	
33-19	5350-5357	support	
33-20	5357-5358	.	

#Text=To use this reporting tool you must first get a WRC tracking number from the WRC.
34-1	5359-5361	To	
34-2	5362-5365	use	
34-3	5366-5370	this	
34-4	5371-5380	reporting	
34-5	5381-5385	tool	
34-6	5386-5389	you	
34-7	5390-5394	must	
34-8	5395-5400	first	
34-9	5401-5404	get	
34-10	5405-5406	a	
34-11	5407-5410	WRC	
34-12	5411-5419	tracking	
34-13	5420-5426	number	
34-14	5427-5431	from	
34-15	5432-5435	the	
34-16	5436-5439	WRC	
34-17	5439-5440	.	

#Text=Import Report allows you to view SQL query performance reports.
35-1	5441-5447	Import	
35-2	5448-5454	Report	
35-3	5455-5461	allows	
35-4	5462-5465	you	
35-5	5466-5468	to	
35-6	5469-5473	view	
35-7	5474-5477	SQL	
35-8	5478-5483	query	
35-9	5484-5495	performance	
35-10	5496-5503	reports	
35-11	5503-5504	.	

#Text=SQL Runtime StatisticsCopy link to this section
#Text=You can use SQL Runtime Statistics to measure the performance of SQL queries running on your system.
36-1	5505-5508	SQL	
36-2	5509-5516	Runtime	
36-3	5517-5531	StatisticsCopy	
36-4	5532-5536	link	
36-5	5537-5539	to	
36-6	5540-5544	this	
36-7	5545-5552	section	
36-8	5553-5556	You	
36-9	5557-5560	can	
36-10	5561-5564	use	
36-11	5565-5568	SQL	
36-12	5569-5576	Runtime	
36-13	5577-5587	Statistics	
36-14	5588-5590	to	
36-15	5591-5598	measure	
36-16	5599-5602	the	
36-17	5603-5614	performance	
36-18	5615-5617	of	
36-19	5618-5621	SQL	
36-20	5622-5629	queries	
36-21	5630-5637	running	
36-22	5638-5640	on	
36-23	5641-5645	your	
36-24	5646-5652	system	
36-25	5652-5653	.	

#Text=SQL Runtime Statistics measures the performance of SELECT, INSERT, UPDATE, and DELETE operations (collectively known as query operations).
37-1	5654-5657	SQL	
37-2	5658-5665	Runtime	
37-3	5666-5676	Statistics	
37-4	5677-5685	measures	
37-5	5686-5689	the	
37-6	5690-5701	performance	
37-7	5702-5704	of	
37-8	5705-5711	SELECT	
37-9	5711-5712	,	
37-10	5713-5719	INSERT	
37-11	5719-5720	,	
37-12	5721-5727	UPDATE	
37-13	5727-5728	,	
37-14	5729-5732	and	
37-15	5733-5739	DELETE	
37-16	5740-5750	operations	
37-17	5751-5752	(	
37-18	5752-5764	collectively	
37-19	5765-5770	known	
37-20	5771-5773	as	
37-21	5774-5779	query	
37-22	5780-5790	operations	
37-23	5790-5791	)	
37-24	5791-5792	.	

#Text=SQL runtime statistics (SQL Stats) are gathered when a query operation is Prepared.
38-1	5793-5796	SQL	
38-2	5797-5804	runtime	
38-3	5805-5815	statistics	
38-4	5816-5817	(	
38-5	5817-5820	SQL	
38-6	5821-5826	Stats	
38-7	5826-5827	)	
38-8	5828-5831	are	
38-9	5832-5840	gathered	
38-10	5841-5845	when	
38-11	5846-5847	a	
38-12	5848-5853	query	
38-13	5854-5863	operation	
38-14	5864-5866	is	
38-15	5867-5875	Prepared	
38-16	5875-5876	.	

#Text=See Using the SQL Runtime Statistics Tool.
39-1	5877-5880	See	
39-2	5881-5886	Using	
39-3	5887-5890	the	
39-4	5891-5894	SQL	
39-5	5895-5902	Runtime	
39-6	5903-5913	Statistics	
39-7	5914-5918	Tool	
39-8	5918-5919	.	

#Text=Gathering of SQL runtime statistics is off by default.
40-1	5920-5929	Gathering	
40-2	5930-5932	of	
40-3	5933-5936	SQL	
40-4	5937-5944	runtime	
40-5	5945-5955	statistics	
40-6	5956-5958	is	
40-7	5959-5962	off	
40-8	5963-5965	by	
40-9	5966-5973	default	
40-10	5973-5974	.	

#Text=You must activate the gathering of statistics.
41-1	5975-5978	You	
41-2	5979-5983	must	
41-3	5984-5992	activate	
41-4	5993-5996	the	
41-5	5997-6006	gathering	
41-6	6007-6009	of	
41-7	6010-6020	statistics	
41-8	6020-6021	.	

#Text=It is highly recommended that you specify a timeout to end the gathering of statistics.
42-1	6022-6024	It	
42-2	6025-6027	is	
42-3	6028-6034	highly	
42-4	6035-6046	recommended	
42-5	6047-6051	that	
42-6	6052-6055	you	
42-7	6056-6063	specify	
42-8	6064-6065	a	
42-9	6066-6073	timeout	
42-10	6074-6076	to	
42-11	6077-6080	end	
42-12	6081-6084	the	
42-13	6085-6094	gathering	
42-14	6095-6097	of	
42-15	6098-6108	statistics	
42-16	6108-6109	.	

#Text=After activate the gathering of statistics, you must recompile (Prepare) existing Dynamic SQL queries and recompile classes and routines that contain Embedded SQL.
43-1	6110-6115	After	
43-2	6116-6124	activate	
43-3	6125-6128	the	
43-4	6129-6138	gathering	
43-5	6139-6141	of	
43-6	6142-6152	statistics	
43-7	6152-6153	,	
43-8	6154-6157	you	
43-9	6158-6162	must	
43-10	6163-6172	recompile	
43-11	6173-6174	(	
43-12	6174-6181	Prepare	
43-13	6181-6182	)	
43-14	6183-6191	existing	
43-15	6192-6199	Dynamic	
43-16	6200-6203	SQL	
43-17	6204-6211	queries	
43-18	6212-6215	and	
43-19	6216-6225	recompile	
43-20	6226-6233	classes	
43-21	6234-6237	and	
43-22	6238-6246	routines	
43-23	6247-6251	that	
43-24	6252-6259	contain	
43-25	6260-6268	Embedded	
43-26	6269-6272	SQL	
43-27	6272-6273	.	

#Text=Performance statistics include the ModuleName, ModuleCount (the number of times a module is called), RowCount (number of rows returned), TimeSpent (execution performance in seconds), GlobalRefs (number of global references), LinesOfCode (number of lines executed), and the ReadLatency (the disk read access time, in milliseconds).
44-1	6274-6285	Performance	
44-2	6286-6296	statistics	
44-3	6297-6304	include	
44-4	6305-6308	the	
44-5	6309-6319	ModuleName	
44-6	6319-6320	,	
44-7	6321-6332	ModuleCount	
44-8	6333-6334	(	
44-9	6334-6337	the	
44-10	6338-6344	number	
44-11	6345-6347	of	
44-12	6348-6353	times	
44-13	6354-6355	a	
44-14	6356-6362	module	
44-15	6363-6365	is	
44-16	6366-6372	called	
44-17	6372-6373	)	
44-18	6373-6374	,	
44-19	6375-6383	RowCount	
44-20	6384-6385	(	
44-21	6385-6391	number	
44-22	6392-6394	of	
44-23	6395-6399	rows	
44-24	6400-6408	returned	
44-25	6408-6409	)	
44-26	6409-6410	,	
44-27	6411-6420	TimeSpent	
44-28	6421-6422	(	
44-29	6422-6431	execution	
44-30	6432-6443	performance	
44-31	6444-6446	in	
44-32	6447-6454	seconds	
44-33	6454-6455	)	
44-34	6455-6456	,	
44-35	6457-6467	GlobalRefs	
44-36	6468-6469	(	
44-37	6469-6475	number	
44-38	6476-6478	of	
44-39	6479-6485	global	
44-40	6486-6496	references	
44-41	6496-6497	)	
44-42	6497-6498	,	
44-43	6499-6510	LinesOfCode	
44-44	6511-6512	(	
44-45	6512-6518	number	
44-46	6519-6521	of	
44-47	6522-6527	lines	
44-48	6528-6536	executed	
44-49	6536-6537	)	
44-50	6537-6538	,	
44-51	6539-6542	and	
44-52	6543-6546	the	
44-53	6547-6558	ReadLatency	
44-54	6559-6560	(	
44-55	6560-6563	the	
44-56	6564-6568	disk	
44-57	6569-6573	read	
44-58	6574-6580	access	
44-59	6581-6585	time	
44-60	6585-6586	,	
44-61	6587-6589	in	
44-62	6590-6602	milliseconds	
44-63	6602-6603	)	
44-64	6603-6604	.	

#Text=For details, see Stats Values.
45-1	6605-6608	For	
45-2	6609-6616	details	
45-3	6616-6617	,	
45-4	6618-6621	see	
45-5	6622-6627	Stats	
45-6	6628-6634	Values	
45-7	6634-6635	.	

#Text=You can explicitly purge (clear) SQL Stats data.
46-1	6636-6639	You	
46-2	6640-6643	can	
46-3	6644-6654	explicitly	
46-4	6655-6660	purge	
46-5	6661-6662	(	
46-6	6662-6667	clear	
46-7	6667-6668	)	
46-8	6669-6672	SQL	
46-9	6673-6678	Stats	
46-10	6679-6683	data	
46-11	6683-6684	.	

#Text=Purging a cached query deletes any related SQL Stats data.
47-1	6685-6692	Purging	
47-2	6693-6694	a	
47-3	6695-6701	cached	
47-4	6702-6707	query	
47-5	6708-6715	deletes	
47-6	6716-6719	any	
47-7	6720-6727	related	
47-8	6728-6731	SQL	
47-9	6732-6737	Stats	
47-10	6738-6742	data	
47-11	6742-6743	.	

#Text=Dropping a table or view deletes any related SQL Stats data.
48-1	6744-6752	Dropping	
48-2	6753-6754	a	
48-3	6755-6760	table	
48-4	6761-6763	or	
48-5	6764-6768	view	
48-6	6769-6776	deletes	
48-7	6777-6780	any	
48-8	6781-6788	related	
48-9	6789-6792	SQL	
48-10	6793-6798	Stats	
48-11	6799-6803	data	
48-12	6803-6804	.	

#Text=Note:
#Text=A system task is automatically run once per hour in all namespaces to aggregate process-specific SQL query statistics into global statistics.
49-1	6805-6809	Note	
49-2	6809-6810	:	
49-3	6811-6812	A	
49-4	6813-6819	system	
49-5	6820-6824	task	
49-6	6825-6827	is	
49-7	6828-6841	automatically	
49-8	6842-6845	run	
49-9	6846-6850	once	
49-10	6851-6854	per	
49-11	6855-6859	hour	
49-12	6860-6862	in	
49-13	6863-6866	all	
49-14	6867-6877	namespaces	
49-15	6878-6880	to	
49-16	6881-6890	aggregate	
49-17	6891-6907	process-specific	
49-18	6908-6911	SQL	
49-19	6912-6917	query	
49-20	6918-6928	statistics	
49-21	6929-6933	into	
49-22	6934-6940	global	
49-23	6941-6951	statistics	
49-24	6951-6952	.	

#Text=Therefore, the global statistics may not reflect statistics gathered within the hour.
50-1	6953-6962	Therefore	
50-2	6962-6963	,	
50-3	6964-6967	the	
50-4	6968-6974	global	
50-5	6975-6985	statistics	
50-6	6986-6989	may	
50-7	6990-6993	not	
50-8	6994-7001	reflect	
50-9	7002-7012	statistics	
50-10	7013-7021	gathered	
50-11	7022-7028	within	
50-12	7029-7032	the	
50-13	7033-7037	hour	
50-14	7037-7038	.	

#Text=You can use the Management Portal to monitor this hourly aggregation or to force it to occur immediately.
51-1	7039-7042	You	
51-2	7043-7046	can	
51-3	7047-7050	use	
51-4	7051-7054	the	
51-5	7055-7065	Management	
51-6	7066-7072	Portal	
51-7	7073-7075	to	
51-8	7076-7083	monitor	
51-9	7084-7088	this	
51-10	7089-7095	hourly	
51-11	7096-7107	aggregation	
51-12	7108-7110	or	
51-13	7111-7113	to	
51-14	7114-7119	force	
51-15	7120-7122	it	
51-16	7123-7125	to	
51-17	7126-7131	occur	
51-18	7132-7143	immediately	
51-19	7143-7144	.	

#Text=To view when this task was last finished and next scheduled, select System Operation, Task Manager, Task Schedule and view the Update SQL query statistics task.
52-1	7145-7147	To	
52-2	7148-7152	view	
52-3	7153-7157	when	
52-4	7158-7162	this	
52-5	7163-7167	task	
52-6	7168-7171	was	
52-7	7172-7176	last	
52-8	7177-7185	finished	
52-9	7186-7189	and	
52-10	7190-7194	next	
52-11	7195-7204	scheduled	
52-12	7204-7205	,	
52-13	7206-7212	select	
52-14	7213-7219	System	
52-15	7220-7229	Operation	
52-16	7229-7230	,	
52-17	7231-7235	Task	
52-18	7236-7243	Manager	
52-19	7243-7244	,	
52-20	7245-7249	Task	
52-21	7250-7258	Schedule	
52-22	7259-7262	and	
52-23	7263-7267	view	
52-24	7268-7271	the	
52-25	7272-7278	Update	
52-26	7279-7282	SQL	
52-27	7283-7288	query	
52-28	7289-7299	statistics	
52-29	7300-7304	task	
52-30	7304-7305	.	

#Text=You can click on the task name for task details.
53-1	7306-7309	You	
53-2	7310-7313	can	
53-3	7314-7319	click	
53-4	7320-7322	on	
53-5	7323-7326	the	
53-6	7327-7331	task	
53-7	7332-7336	name	
53-8	7337-7340	for	
53-9	7341-7345	task	
53-10	7346-7353	details	
53-11	7353-7354	.	

#Text=From the Task Details display you can use the Run button to force the task to be performed immediately.
54-1	7355-7359	From	
54-2	7360-7363	the	
54-3	7364-7368	Task	
54-4	7369-7376	Details	
54-5	7377-7384	display	
54-6	7385-7388	you	
54-7	7389-7392	can	
54-8	7393-7396	use	
54-9	7397-7400	the	
54-10	7401-7404	Run	
54-11	7405-7411	button	
54-12	7412-7414	to	
54-13	7415-7420	force	
54-14	7421-7424	the	
54-15	7425-7429	task	
54-16	7430-7432	to	
54-17	7433-7435	be	
54-18	7436-7445	performed	
54-19	7446-7457	immediately	
54-20	7457-7458	.	

#Text=Using the SQL Runtime Statistics ToolCopy link to this section
#Text=You can display performance statistics for SQL queries system-wide from the Management Portal using either of the following:
#Text=Select System Explorer, select Tools, select SQL Performance Tools, then select SQL Runtime Statistics.
55-1	7459-7464	Using	
55-2	7465-7468	the	
55-3	7469-7472	SQL	
55-4	7473-7480	Runtime	
55-5	7481-7491	Statistics	
55-6	7492-7500	ToolCopy	
55-7	7501-7505	link	
55-8	7506-7508	to	
55-9	7509-7513	this	
55-10	7514-7521	section	
55-11	7522-7525	You	
55-12	7526-7529	can	
55-13	7530-7537	display	
55-14	7538-7549	performance	
55-15	7550-7560	statistics	
55-16	7561-7564	for	
55-17	7565-7568	SQL	
55-18	7569-7576	queries	
55-19	7577-7588	system-wide	
55-20	7589-7593	from	
55-21	7594-7597	the	
55-22	7598-7608	Management	
55-23	7609-7615	Portal	
55-24	7616-7621	using	
55-25	7622-7628	either	
55-26	7629-7631	of	
55-27	7632-7635	the	
55-28	7636-7645	following	
55-29	7645-7646	:	
55-30	7647-7653	Select	
55-31	7654-7660	System	
55-32	7661-7669	Explorer	
55-33	7669-7670	,	
55-34	7671-7677	select	
55-35	7678-7683	Tools	
55-36	7683-7684	,	
55-37	7685-7691	select	
55-38	7692-7695	SQL	
55-39	7696-7707	Performance	
55-40	7708-7713	Tools	
55-41	7713-7714	,	
55-42	7715-7719	then	
55-43	7720-7726	select	
55-44	7727-7730	SQL	
55-45	7731-7738	Runtime	
55-46	7739-7749	Statistics	
55-47	7749-7750	.	

#Text=Select System Explorer, select SQL, then from the Tools drop-down menu select SQL Runtime Statistics.
56-1	7751-7757	Select	
56-2	7758-7764	System	
56-3	7765-7773	Explorer	
56-4	7773-7774	,	
56-5	7775-7781	select	
56-6	7782-7785	SQL	
56-7	7785-7786	,	
56-8	7787-7791	then	
56-9	7792-7796	from	
56-10	7797-7800	the	
56-11	7801-7806	Tools	
56-12	7807-7816	drop-down	
56-13	7817-7821	menu	
56-14	7822-7828	select	
56-15	7829-7832	SQL	
56-16	7833-7840	Runtime	
56-17	7841-7851	Statistics	
56-18	7851-7852	.	

#Text=SettingsCopy link to this section
#Text=The Settings tab displays the current system-wide SQL Runtime Statistics setting and when this setting will expire.
#Text=the Change Settings button allows you to set the following statistics collection options:
#Text=Collection Option: you can set the statistics collection option to 0, 1, 2, or 3.
#Text=0 = turn off statistics code generation; 1 = turn on statistics code generation for all queries, but do not gather statistics; 2 = record statistics for just the outer loop of the query (gather statistics at the open and close of the MAIN module); 3 = record statistics for all module levels of the query.
57-1	7853-7865	SettingsCopy	
57-2	7866-7870	link	
57-3	7871-7873	to	
57-4	7874-7878	this	
57-5	7879-7886	section	
57-6	7887-7890	The	
57-7	7891-7899	Settings	
57-8	7900-7903	tab	
57-9	7904-7912	displays	
57-10	7913-7916	the	
57-11	7917-7924	current	
57-12	7925-7936	system-wide	
57-13	7937-7940	SQL	
57-14	7941-7948	Runtime	
57-15	7949-7959	Statistics	
57-16	7960-7967	setting	
57-17	7968-7971	and	
57-18	7972-7976	when	
57-19	7977-7981	this	
57-20	7982-7989	setting	
57-21	7990-7994	will	
57-22	7995-8001	expire	
57-23	8001-8002	.	
57-24	8003-8006	the	
57-25	8007-8013	Change	
57-26	8014-8022	Settings	
57-27	8023-8029	button	
57-28	8030-8036	allows	
57-29	8037-8040	you	
57-30	8041-8043	to	
57-31	8044-8047	set	
57-32	8048-8051	the	
57-33	8052-8061	following	
57-34	8062-8072	statistics	
57-35	8073-8083	collection	
57-36	8084-8091	options	
57-37	8091-8092	:	
57-38	8093-8103	Collection	
57-39	8104-8110	Option	
57-40	8110-8111	:	
57-41	8112-8115	you	
57-42	8116-8119	can	
57-43	8120-8123	set	
57-44	8124-8127	the	
57-45	8128-8138	statistics	
57-46	8139-8149	collection	
57-47	8150-8156	option	
57-48	8157-8159	to	
57-49	8160-8161	0	
57-50	8161-8162	,	
57-51	8163-8164	1	
57-52	8164-8165	,	
57-53	8166-8167	2	
57-54	8167-8168	,	
57-55	8169-8171	or	
57-56	8172-8173	3	
57-57	8173-8174	.	
57-58	8175-8176	0	
57-59	8177-8178	=	
57-60	8179-8183	turn	
57-61	8184-8187	off	
57-62	8188-8198	statistics	
57-63	8199-8203	code	
57-64	8204-8214	generation	
57-65	8214-8215	;	
57-66	8216-8217	1	
57-67	8218-8219	=	
57-68	8220-8224	turn	
57-69	8225-8227	on	
57-70	8228-8238	statistics	
57-71	8239-8243	code	
57-72	8244-8254	generation	
57-73	8255-8258	for	
57-74	8259-8262	all	
57-75	8263-8270	queries	
57-76	8270-8271	,	
57-77	8272-8275	but	
57-78	8276-8278	do	
57-79	8279-8282	not	
57-80	8283-8289	gather	
57-81	8290-8300	statistics	
57-82	8300-8301	;	
57-83	8302-8303	2	
57-84	8304-8305	=	
57-85	8306-8312	record	
57-86	8313-8323	statistics	
57-87	8324-8327	for	
57-88	8328-8332	just	
57-89	8333-8336	the	
57-90	8337-8342	outer	
57-91	8343-8347	loop	
57-92	8348-8350	of	
57-93	8351-8354	the	
57-94	8355-8360	query	
57-95	8361-8362	(	
57-96	8362-8368	gather	
57-97	8369-8379	statistics	
57-98	8380-8382	at	
57-99	8383-8386	the	
57-100	8387-8391	open	
57-101	8392-8395	and	
57-102	8396-8401	close	
57-103	8402-8404	of	
57-104	8405-8408	the	
57-105	8409-8413	MAIN	
57-106	8414-8420	module	
57-107	8420-8421	)	
57-108	8421-8422	;	
57-109	8423-8424	3	
57-110	8425-8426	=	
57-111	8427-8433	record	
57-112	8434-8444	statistics	
57-113	8445-8448	for	
57-114	8449-8452	all	
57-115	8453-8459	module	
57-116	8460-8466	levels	
57-117	8467-8469	of	
57-118	8470-8473	the	
57-119	8474-8479	query	
57-120	8479-8480	.	

#Text=To go from 0 to 1: after changing the SQL Stats option, Routines and Classes that contain SQL will need to be compiled to perform statistics code generation.
58-1	8481-8483	To	
58-2	8484-8486	go	
58-3	8487-8491	from	
58-4	8492-8493	0	
58-5	8494-8496	to	
58-6	8497-8498	1	
58-7	8498-8499	:	
58-8	8500-8505	after	
58-9	8506-8514	changing	
58-10	8515-8518	the	
58-11	8519-8522	SQL	
58-12	8523-8528	Stats	
58-13	8529-8535	option	
58-14	8535-8536	,	
58-15	8537-8545	Routines	
58-16	8546-8549	and	
58-17	8550-8557	Classes	
58-18	8558-8562	that	
58-19	8563-8570	contain	
58-20	8571-8574	SQL	
58-21	8575-8579	will	
58-22	8580-8584	need	
58-23	8585-8587	to	
58-24	8588-8590	be	
58-25	8591-8599	compiled	
58-26	8600-8602	to	
58-27	8603-8610	perform	
58-28	8611-8621	statistics	
58-29	8622-8626	code	
58-30	8627-8637	generation	
58-31	8637-8638	.	

#Text=For xDBC and Dynamic SQL, you must purge cached queries to force code regeneration.
59-1	8639-8642	For	
59-2	8643-8647	xDBC	
59-3	8648-8651	and	
59-4	8652-8659	Dynamic	
59-5	8660-8663	SQL	
59-6	8663-8664	,	
59-7	8665-8668	you	
59-8	8669-8673	must	
59-9	8674-8679	purge	
59-10	8680-8686	cached	
59-11	8687-8694	queries	
59-12	8695-8697	to	
59-13	8698-8703	force	
59-14	8704-8708	code	
59-15	8709-8721	regeneration	
59-16	8721-8722	.	

#Text=To go from 1 to 2: you simply change the SQL Stats option to begin gathering statistics.
60-1	8723-8725	To	
60-2	8726-8728	go	
60-3	8729-8733	from	
60-4	8734-8735	1	
60-5	8736-8738	to	
60-6	8739-8740	2	
60-7	8740-8741	:	
60-8	8742-8745	you	
60-9	8746-8752	simply	
60-10	8753-8759	change	
60-11	8760-8763	the	
60-12	8764-8767	SQL	
60-13	8768-8773	Stats	
60-14	8774-8780	option	
60-15	8781-8783	to	
60-16	8784-8789	begin	
60-17	8790-8799	gathering	
60-18	8800-8810	statistics	
60-19	8810-8811	.	

#Text=This allows you to enable SQL performance analysis on a running production environment with minimal disruption.
61-1	8812-8816	This	
61-2	8817-8823	allows	
61-3	8824-8827	you	
61-4	8828-8830	to	
61-5	8831-8837	enable	
61-6	8838-8841	SQL	
61-7	8842-8853	performance	
61-8	8854-8862	analysis	
61-9	8863-8865	on	
61-10	8866-8867	a	
61-11	8868-8875	running	
61-12	8876-8886	production	
61-13	8887-8898	environment	
61-14	8899-8903	with	
61-15	8904-8911	minimal	
61-16	8912-8922	disruption	
61-17	8922-8923	.	

#Text=To go from 1 to 3 (or 2 to 3): after changing the SQL Stats option, Routines and Classes that contain SQL will need to be compiled to record statistics for all module levels.
62-1	8924-8926	To	
62-2	8927-8929	go	
62-3	8930-8934	from	
62-4	8935-8936	1	
62-5	8937-8939	to	
62-6	8940-8941	3	
62-7	8942-8943	(	
62-8	8943-8945	or	
62-9	8946-8947	2	
62-10	8948-8950	to	
62-11	8951-8952	3	
62-12	8952-8953	)	
62-13	8953-8954	:	
62-14	8955-8960	after	
62-15	8961-8969	changing	
62-16	8970-8973	the	
62-17	8974-8977	SQL	
62-18	8978-8983	Stats	
62-19	8984-8990	option	
62-20	8990-8991	,	
62-21	8992-9000	Routines	
62-22	9001-9004	and	
62-23	9005-9012	Classes	
62-24	9013-9017	that	
62-25	9018-9025	contain	
62-26	9026-9029	SQL	
62-27	9030-9034	will	
62-28	9035-9039	need	
62-29	9040-9042	to	
62-30	9043-9045	be	
62-31	9046-9054	compiled	
62-32	9055-9057	to	
62-33	9058-9064	record	
62-34	9065-9075	statistics	
62-35	9076-9079	for	
62-36	9080-9083	all	
62-37	9084-9090	module	
62-38	9091-9097	levels	
62-39	9097-9098	.	

#Text=For xDBC and Dynamic SQL, you must purge cached queries to force code regeneration.
63-1	9099-9102	For	
63-2	9103-9107	xDBC	
63-3	9108-9111	and	
63-4	9112-9119	Dynamic	
63-5	9120-9123	SQL	
63-6	9123-9124	,	
63-7	9125-9128	you	
63-8	9129-9133	must	
63-9	9134-9139	purge	
63-10	9140-9146	cached	
63-11	9147-9154	queries	
63-12	9155-9157	to	
63-13	9158-9163	force	
63-14	9164-9168	code	
63-15	9169-9181	regeneration	
63-16	9181-9182	.	

#Text=Option 3 is commonly only used on an identified poorly-performing query in a non-production environment.
64-1	9183-9189	Option	
64-2	9190-9191	3	
64-3	9192-9194	is	
64-4	9195-9203	commonly	
64-5	9204-9208	only	
64-6	9209-9213	used	
64-7	9214-9216	on	
64-8	9217-9219	an	
64-9	9220-9230	identified	
64-10	9231-9248	poorly-performing	
64-11	9249-9254	query	
64-12	9255-9257	in	
64-13	9258-9259	a	
64-14	9260-9274	non-production	
64-15	9275-9286	environment	
64-16	9286-9287	.	

#Text=To go from 1, 2, or 3 to 0: to turn off statistics code generation you do not need to purge cached queries.
65-1	9288-9290	To	
65-2	9291-9293	go	
65-3	9294-9298	from	
65-4	9299-9300	1	
65-5	9300-9301	,	
65-6	9302-9303	2	
65-7	9303-9304	,	
65-8	9305-9307	or	
65-9	9308-9309	3	
65-10	9310-9312	to	
65-11	9313-9314	0	
65-12	9314-9315	:	
65-13	9316-9318	to	
65-14	9319-9323	turn	
65-15	9324-9327	off	
65-16	9328-9338	statistics	
65-17	9339-9343	code	
65-18	9344-9354	generation	
65-19	9355-9358	you	
65-20	9359-9361	do	
65-21	9362-9365	not	
65-22	9366-9370	need	
65-23	9371-9373	to	
65-24	9374-9379	purge	
65-25	9380-9386	cached	
65-26	9387-9394	queries	
65-27	9394-9395	.	

#Text=Timeout Option: if the Collection Option is 2 or 3, you can specify a timeout by elapsed time (hours or minutes) or by a completion date and time.
66-1	9396-9403	Timeout	
66-2	9404-9410	Option	
66-3	9410-9411	:	
66-4	9412-9414	if	
66-5	9415-9418	the	
66-6	9419-9429	Collection	
66-7	9430-9436	Option	
66-8	9437-9439	is	
66-9	9440-9441	2	
66-10	9442-9444	or	
66-11	9445-9446	3	
66-12	9446-9447	,	
66-13	9448-9451	you	
66-14	9452-9455	can	
66-15	9456-9463	specify	
66-16	9464-9465	a	
66-17	9466-9473	timeout	
66-18	9474-9476	by	
66-19	9477-9484	elapsed	
66-20	9485-9489	time	
66-21	9490-9491	(	
66-22	9491-9496	hours	
66-23	9497-9499	or	
66-24	9500-9507	minutes	
66-25	9507-9508	)	
66-26	9509-9511	or	
66-27	9512-9514	by	
66-28	9515-9516	a	
66-29	9517-9527	completion	
66-30	9528-9532	date	
66-31	9533-9536	and	
66-32	9537-9541	time	
66-33	9541-9542	.	

#Text=You can specify elapsed time in minutes or in hours and minutes; the tool converts a specified minutes value to hours and minutes (100 minutes = 1 hour, 40 minutes).
67-1	9543-9546	You	
67-2	9547-9550	can	
67-3	9551-9558	specify	
67-4	9559-9566	elapsed	
67-5	9567-9571	time	
67-6	9572-9574	in	
67-7	9575-9582	minutes	
67-8	9583-9585	or	
67-9	9586-9588	in	
67-10	9589-9594	hours	
67-11	9595-9598	and	
67-12	9599-9606	minutes	
67-13	9606-9607	;	
67-14	9608-9611	the	
67-15	9612-9616	tool	
67-16	9617-9625	converts	
67-17	9626-9627	a	
67-18	9628-9637	specified	
67-19	9638-9645	minutes	
67-20	9646-9651	value	
67-21	9652-9654	to	
67-22	9655-9660	hours	
67-23	9661-9664	and	
67-24	9665-9672	minutes	
67-25	9673-9674	(	
67-26	9674-9677	100	
67-27	9678-9685	minutes	
67-28	9686-9687	=	
67-29	9688-9689	1	
67-30	9690-9694	hour	
67-31	9694-9695	,	
67-32	9696-9698	40	
67-33	9699-9706	minutes	
67-34	9706-9707	)	
67-35	9707-9708	.	

#Text=The default is 50 minutes.
68-1	9709-9712	The	
68-2	9713-9720	default	
68-3	9721-9723	is	
68-4	9724-9726	50	
68-5	9727-9734	minutes	
68-6	9734-9735	.	

#Text=The date and time option defaults to just before midnight (23:59) of the current day.
69-1	9736-9739	The	
69-2	9740-9744	date	
69-3	9745-9748	and	
69-4	9749-9753	time	
69-5	9754-9760	option	
69-6	9761-9769	defaults	
69-7	9770-9772	to	
69-8	9773-9777	just	
69-9	9778-9784	before	
69-10	9785-9793	midnight	
69-11	9794-9795	(	
69-12	9795-9797	23	
69-13	9797-9798	:	
69-14	9798-9800	59	
69-15	9800-9801	)	
69-16	9802-9804	of	
69-17	9805-9808	the	
69-18	9809-9816	current	
69-19	9817-9820	day	
69-20	9820-9821	.	

#Text=It is highly recommended that you specify a timeout option.
70-1	9822-9824	It	
70-2	9825-9827	is	
70-3	9828-9834	highly	
70-4	9835-9846	recommended	
70-5	9847-9851	that	
70-6	9852-9855	you	
70-7	9856-9863	specify	
70-8	9864-9865	a	
70-9	9866-9873	timeout	
70-10	9874-9880	option	
70-11	9880-9881	.	

#Text=Reset Option: if the Collection Option is 2 or 3, you can specify the Collection Option to reset to when the Timeout value expires.
71-1	9882-9887	Reset	
71-2	9888-9894	Option	
71-3	9894-9895	:	
71-4	9896-9898	if	
71-5	9899-9902	the	
71-6	9903-9913	Collection	
71-7	9914-9920	Option	
71-8	9921-9923	is	
71-9	9924-9925	2	
71-10	9926-9928	or	
71-11	9929-9930	3	
71-12	9930-9931	,	
71-13	9932-9935	you	
71-14	9936-9939	can	
71-15	9940-9947	specify	
71-16	9948-9951	the	
71-17	9952-9962	Collection	
71-18	9963-9969	Option	
71-19	9970-9972	to	
71-20	9973-9978	reset	
71-21	9979-9981	to	
71-22	9982-9986	when	
71-23	9987-9990	the	
71-24	9991-9998	Timeout	
71-25	9999-10004	value	
71-26	10005-10012	expires	
71-27	10012-10013	.	

#Text=The available options are 0 and 1.
72-1	10014-10017	The	
72-2	10018-10027	available	
72-3	10028-10035	options	
72-4	10036-10039	are	
72-5	10040-10041	0	
72-6	10042-10045	and	
72-7	10046-10047	1	
72-8	10047-10048	.	

#Text=Query TestCopy link to this section
#Text=The Query Test tab allows you to input an SQL query text (or retrieve one from History) and then display the SQL Stats and Query Plan for that query.
73-1	10049-10054	Query	
73-2	10055-10063	TestCopy	
73-3	10064-10068	link	
73-4	10069-10071	to	
73-5	10072-10076	this	
73-6	10077-10084	section	
73-7	10085-10088	The	
73-8	10089-10094	Query	
73-9	10095-10099	Test	
73-10	10100-10103	tab	
73-11	10104-10110	allows	
73-12	10111-10114	you	
73-13	10115-10117	to	
73-14	10118-10123	input	
73-15	10124-10126	an	
73-16	10127-10130	SQL	
73-17	10131-10136	query	
73-18	10137-10141	text	
73-19	10142-10143	(	
73-20	10143-10145	or	
73-21	10146-10154	retrieve	
73-22	10155-10158	one	
73-23	10159-10163	from	
73-24	10164-10171	History	
73-25	10171-10172	)	
73-26	10173-10176	and	
73-27	10177-10181	then	
73-28	10182-10189	display	
73-29	10190-10193	the	
73-30	10194-10197	SQL	
73-31	10198-10203	Stats	
73-32	10204-10207	and	
73-33	10208-10213	Query	
73-34	10214-10218	Plan	
73-35	10219-10222	for	
73-36	10223-10227	that	
73-37	10228-10233	query	
73-38	10233-10234	.	

#Text=Query Test includes the SQL Stats for all module levels of the query, regardless of the Collection Option setting.
74-1	10235-10240	Query	
74-2	10241-10245	Test	
74-3	10246-10254	includes	
74-4	10255-10258	the	
74-5	10259-10262	SQL	
74-6	10263-10268	Stats	
74-7	10269-10272	for	
74-8	10273-10276	all	
74-9	10277-10283	module	
74-10	10284-10290	levels	
74-11	10291-10293	of	
74-12	10294-10297	the	
74-13	10298-10303	query	
74-14	10303-10304	,	
74-15	10305-10315	regardless	
74-16	10316-10318	of	
74-17	10319-10322	the	
74-18	10323-10333	Collection	
74-19	10334-10340	Option	
74-20	10341-10348	setting	
74-21	10348-10349	.	

#Text=Input an SQL query text, or retrieve one using the Show History button.
75-1	10350-10355	Input	
75-2	10356-10358	an	
75-3	10359-10362	SQL	
75-4	10363-10368	query	
75-5	10369-10373	text	
75-6	10373-10374	,	
75-7	10375-10377	or	
75-8	10378-10386	retrieve	
75-9	10387-10390	one	
75-10	10391-10396	using	
75-11	10397-10400	the	
75-12	10401-10405	Show	
75-13	10406-10413	History	
75-14	10414-10420	button	
75-15	10420-10421	.	

#Text=You can clear the query text field by clicking the round "X" circle on the right hand side.
76-1	10422-10425	You	
76-2	10426-10429	can	
76-3	10430-10435	clear	
76-4	10436-10439	the	
76-5	10440-10445	query	
76-6	10446-10450	text	
76-7	10451-10456	field	
76-8	10457-10459	by	
76-9	10460-10468	clicking	
76-10	10469-10472	the	
76-11	10473-10478	round	
76-12	10479-10480	"	
76-13	10480-10481	X	
76-14	10481-10482	"	
76-15	10483-10489	circle	
76-16	10490-10492	on	
76-17	10493-10496	the	
76-18	10497-10502	right	
76-19	10503-10507	hand	
76-20	10508-10512	side	
76-21	10512-10513	.	

#Text=Use the Show Plan With SQL Stats button to execute.
77-1	10514-10517	Use	
77-2	10518-10521	the	
77-3	10522-10526	Show	
77-4	10527-10531	Plan	
77-5	10532-10536	With	
77-6	10537-10540	SQL	
77-7	10541-10546	Stats	
77-8	10547-10553	button	
77-9	10554-10556	to	
77-10	10557-10564	execute	
77-11	10564-10565	.	

#Text=The Run Show Plan process in the background check box is unselected by default, which is the preferred setting for most queries.
78-1	10566-10569	The	
78-2	10570-10573	Run	
78-3	10574-10578	Show	
78-4	10579-10583	Plan	
78-5	10584-10591	process	
78-6	10592-10594	in	
78-7	10595-10598	the	
78-8	10599-10609	background	
78-9	10610-10615	check	
78-10	10616-10619	box	
78-11	10620-10622	is	
78-12	10623-10633	unselected	
78-13	10634-10636	by	
78-14	10637-10644	default	
78-15	10644-10645	,	
78-16	10646-10651	which	
78-17	10652-10654	is	
78-18	10655-10658	the	
78-19	10659-10668	preferred	
78-20	10669-10676	setting	
78-21	10677-10680	for	
78-22	10681-10685	most	
78-23	10686-10693	queries	
78-24	10693-10694	.	

#Text=Select this check box only for long, slow-running queries.
79-1	10695-10701	Select	
79-2	10702-10706	this	
79-3	10707-10712	check	
79-4	10713-10716	box	
79-5	10717-10721	only	
79-6	10722-10725	for	
79-7	10726-10730	long	
79-8	10730-10731	,	
79-9	10732-10744	slow-running	
79-10	10745-10752	queries	
79-11	10752-10753	.	

#Text=When this check box is selected, you will see a progress bar displayed with a "Please wait..." message.
80-1	10754-10758	When	
80-2	10759-10763	this	
80-3	10764-10769	check	
80-4	10770-10773	box	
80-5	10774-10776	is	
80-6	10777-10785	selected	
80-7	10785-10786	,	
80-8	10787-10790	you	
80-9	10791-10795	will	
80-10	10796-10799	see	
80-11	10800-10801	a	
80-12	10802-10810	progress	
80-13	10811-10814	bar	
80-14	10815-10824	displayed	
80-15	10825-10829	with	
80-16	10830-10831	a	
80-17	10832-10833	"	
80-18	10833-10839	Please	
80-19	10840-10844	wait	
80-20	10844-10845	.	
80-21	10845-10846	.	
80-22	10846-10847	.	
80-23	10847-10848	"	
80-24	10849-10856	message	
80-25	10856-10857	.	

#Text=While a long query is being run, the Show Plan With SQL Stats and Show History buttons disappear and a View Process button is shown.
81-1	10858-10863	While	
81-2	10864-10865	a	
81-3	10866-10870	long	
81-4	10871-10876	query	
81-5	10877-10879	is	
81-6	10880-10885	being	
81-7	10886-10889	run	
81-8	10889-10890	,	
81-9	10891-10894	the	
81-10	10895-10899	Show	
81-11	10900-10904	Plan	
81-12	10905-10909	With	
81-13	10910-10913	SQL	
81-14	10914-10919	Stats	
81-15	10920-10923	and	
81-16	10924-10928	Show	
81-17	10929-10936	History	
81-18	10937-10944	buttons	
81-19	10945-10954	disappear	
81-20	10955-10958	and	
81-21	10959-10960	a	
81-22	10961-10965	View	
81-23	10966-10973	Process	
81-24	10974-10980	button	
81-25	10981-10983	is	
81-26	10984-10989	shown	
81-27	10989-10990	.	

#Text=Clicking View Process opens the Process Details page in a new tab.
82-1	10991-10999	Clicking	
82-2	11000-11004	View	
82-3	11005-11012	Process	
82-4	11013-11018	opens	
82-5	11019-11022	the	
82-6	11023-11030	Process	
82-7	11031-11038	Details	
82-8	11039-11043	page	
82-9	11044-11046	in	
82-10	11047-11048	a	
82-11	11049-11052	new	
82-12	11053-11056	tab	
82-13	11056-11057	.	

#Text=From the Process Details page, you can view the process, and may Suspend, Resume or Terminate the process.
83-1	11058-11062	From	
83-2	11063-11066	the	
83-3	11067-11074	Process	
83-4	11075-11082	Details	
83-5	11083-11087	page	
83-6	11087-11088	,	
83-7	11089-11092	you	
83-8	11093-11096	can	
83-9	11097-11101	view	
83-10	11102-11105	the	
83-11	11106-11113	process	
83-12	11113-11114	,	
83-13	11115-11118	and	
83-14	11119-11122	may	
83-15	11123-11130	Suspend	
83-16	11130-11131	,	
83-17	11132-11138	Resume	
83-18	11139-11141	or	
83-19	11142-11151	Terminate	
83-20	11152-11155	the	
83-21	11156-11163	process	
83-22	11163-11164	.	

#Text=The status of the process should be reflected on the Show Plan page.
84-1	11165-11168	The	
84-2	11169-11175	status	
84-3	11176-11178	of	
84-4	11179-11182	the	
84-5	11183-11190	process	
84-6	11191-11197	should	
84-7	11198-11200	be	
84-8	11201-11210	reflected	
84-9	11211-11213	on	
84-10	11214-11217	the	
84-11	11218-11222	Show	
84-12	11223-11227	Plan	
84-13	11228-11232	page	
84-14	11232-11233	.	

#Text=When the process is finished, the Show Plan shows the result.
85-1	11234-11238	When	
85-2	11239-11242	the	
85-3	11243-11250	process	
85-4	11251-11253	is	
85-5	11254-11262	finished	
85-6	11262-11263	,	
85-7	11264-11267	the	
85-8	11268-11272	Show	
85-9	11273-11277	Plan	
85-10	11278-11283	shows	
85-11	11284-11287	the	
85-12	11288-11294	result	
85-13	11294-11295	.	

#Text=The View Process button disappears and the Show Plan With SQL Stats and Show History buttons reappear.
86-1	11296-11299	The	
86-2	11300-11304	View	
86-3	11305-11312	Process	
86-4	11313-11319	button	
86-5	11320-11330	disappears	
86-6	11331-11334	and	
86-7	11335-11338	the	
86-8	11339-11343	Show	
86-9	11344-11348	Plan	
86-10	11349-11353	With	
86-11	11354-11357	SQL	
86-12	11358-11363	Stats	
86-13	11364-11367	and	
86-14	11368-11372	Show	
86-15	11373-11380	History	
86-16	11381-11388	buttons	
86-17	11389-11397	reappear	
86-18	11397-11398	.	

#Text=The Statement Text displayed using Query Test includes comments and does not perform literal substitution.
87-1	11399-11402	The	
87-2	11403-11412	Statement	
87-3	11413-11417	Text	
87-4	11418-11427	displayed	
87-5	11428-11433	using	
87-6	11434-11439	Query	
87-7	11440-11444	Test	
87-8	11445-11453	includes	
87-9	11454-11462	comments	
87-10	11463-11466	and	
87-11	11467-11471	does	
87-12	11472-11475	not	
87-13	11476-11483	perform	
87-14	11484-11491	literal	
87-15	11492-11504	substitution	
87-16	11504-11505	.	

#Text=View StatsCopy link to this section
#Text=The View Stats tab gives you an overall view of the runtime statistics that have been gathered on this system.
88-1	11506-11510	View	
88-2	11511-11520	StatsCopy	
88-3	11521-11525	link	
88-4	11526-11528	to	
88-5	11529-11533	this	
88-6	11534-11541	section	
88-7	11542-11545	The	
88-8	11546-11550	View	
88-9	11551-11556	Stats	
88-10	11557-11560	tab	
88-11	11561-11566	gives	
88-12	11567-11570	you	
88-13	11571-11573	an	
88-14	11574-11581	overall	
88-15	11582-11586	view	
88-16	11587-11589	of	
88-17	11590-11593	the	
88-18	11594-11601	runtime	
88-19	11602-11612	statistics	
88-20	11613-11617	that	
88-21	11618-11622	have	
88-22	11623-11627	been	
88-23	11628-11636	gathered	
88-24	11637-11639	on	
88-25	11640-11644	this	
88-26	11645-11651	system	
88-27	11651-11652	.	

#Text=You can click on any one of the View Stats column headers to sort the query statistics.
89-1	11653-11656	You	
89-2	11657-11660	can	
89-3	11661-11666	click	
89-4	11667-11669	on	
89-5	11670-11673	any	
89-6	11674-11677	one	
89-7	11678-11680	of	
89-8	11681-11684	the	
89-9	11685-11689	View	
89-10	11690-11695	Stats	
89-11	11696-11702	column	
89-12	11703-11710	headers	
89-13	11711-11713	to	
89-14	11714-11718	sort	
89-15	11719-11722	the	
89-16	11723-11728	query	
89-17	11729-11739	statistics	
89-18	11739-11740	.	

#Text=You can then click the SQL Statement text to view the detailed Query Statistics and the Query Plan for the selected query.
90-1	11741-11744	You	
90-2	11745-11748	can	
90-3	11749-11753	then	
90-4	11754-11759	click	
90-5	11760-11763	the	
90-6	11764-11767	SQL	
90-7	11768-11777	Statement	
90-8	11778-11782	text	
90-9	11783-11785	to	
90-10	11786-11790	view	
90-11	11791-11794	the	
90-12	11795-11803	detailed	
90-13	11804-11809	Query	
90-14	11810-11820	Statistics	
90-15	11821-11824	and	
90-16	11825-11828	the	
90-17	11829-11834	Query	
90-18	11835-11839	Plan	
90-19	11840-11843	for	
90-20	11844-11847	the	
90-21	11848-11856	selected	
90-22	11857-11862	query	
90-23	11862-11863	.	

#Text=The Statement Text displayed using this tool includes comments and does not perform literal substitution.
91-1	11864-11867	The	
91-2	11868-11877	Statement	
91-3	11878-11882	Text	
91-4	11883-11892	displayed	
91-5	11893-11898	using	
91-6	11899-11903	this	
91-7	11904-11908	tool	
91-8	11909-11917	includes	
91-9	11918-11926	comments	
91-10	11927-11930	and	
91-11	11931-11935	does	
91-12	11936-11939	not	
91-13	11940-11947	perform	
91-14	11948-11955	literal	
91-15	11956-11968	substitution	
91-16	11968-11969	.	

#Text=The Statement Text displayed by exportStatsSQL() and by Show Plan strips out comments and performs literal substitution.
92-1	11970-11973	The	
92-2	11974-11983	Statement	
92-3	11984-11988	Text	
92-4	11989-11998	displayed	
92-5	11999-12001	by	
92-6	12002-12016	exportStatsSQL	
92-7	12016-12017	(	
92-8	12017-12018	)	
92-9	12019-12022	and	
92-10	12023-12025	by	
92-11	12026-12030	Show	
92-12	12031-12035	Plan	
92-13	12036-12042	strips	
92-14	12043-12046	out	
92-15	12047-12055	comments	
92-16	12056-12059	and	
92-17	12060-12068	performs	
92-18	12069-12076	literal	
92-19	12077-12089	substitution	
92-20	12089-12090	.	

#Text=Purge Stats ButtonCopy link to this section
#Text=The Purge Stats button clears all of the accumulated statistics for all queries in the current namespace.
93-1	12091-12096	Purge	
93-2	12097-12102	Stats	
93-3	12103-12113	ButtonCopy	
93-4	12114-12118	link	
93-5	12119-12121	to	
93-6	12122-12126	this	
93-7	12127-12134	section	
93-8	12135-12138	The	
93-9	12139-12144	Purge	
93-10	12145-12150	Stats	
93-11	12151-12157	button	
93-12	12158-12164	clears	
93-13	12165-12168	all	
93-14	12169-12171	of	
93-15	12172-12175	the	
93-16	12176-12187	accumulated	
93-17	12188-12198	statistics	
93-18	12199-12202	for	
93-19	12203-12206	all	
93-20	12207-12214	queries	
93-21	12215-12217	in	
93-22	12218-12221	the	
93-23	12222-12229	current	
93-24	12230-12239	namespace	
93-25	12239-12240	.	

#Text=It displays a message on the SQL Runtime Statistics page.
94-1	12241-12243	It	
94-2	12244-12252	displays	
94-3	12253-12254	a	
94-4	12255-12262	message	
94-5	12263-12265	on	
94-6	12266-12269	the	
94-7	12270-12273	SQL	
94-8	12274-12281	Runtime	
94-9	12282-12292	Statistics	
94-10	12293-12297	page	
94-11	12297-12298	.	

#Text=If successful, a message indicates the number of stats purged.
95-1	12299-12301	If	
95-2	12302-12312	successful	
95-3	12312-12313	,	
95-4	12314-12315	a	
95-5	12316-12323	message	
95-6	12324-12333	indicates	
95-7	12334-12337	the	
95-8	12338-12344	number	
95-9	12345-12347	of	
95-10	12348-12353	stats	
95-11	12354-12360	purged	
95-12	12360-12361	.	

#Text=If there were no stats, the Nothing to purge message is displayed.
96-1	12362-12364	If	
96-2	12365-12370	there	
96-3	12371-12375	were	
96-4	12376-12378	no	
96-5	12379-12384	stats	
96-6	12384-12385	,	
96-7	12386-12389	the	
96-8	12390-12397	Nothing	
96-9	12398-12400	to	
96-10	12401-12406	purge	
96-11	12407-12414	message	
96-12	12415-12417	is	
96-13	12418-12427	displayed	
96-14	12427-12428	.	

#Text=If the purge was unsuccessful, an error message is displayed.
97-1	12429-12431	If	
97-2	12432-12435	the	
97-3	12436-12441	purge	
97-4	12442-12445	was	
97-5	12446-12458	unsuccessful	
97-6	12458-12459	,	
97-7	12460-12462	an	
97-8	12463-12468	error	
97-9	12469-12476	message	
97-10	12477-12479	is	
97-11	12480-12489	displayed	
97-12	12489-12490	.	

#Text=Runtime Statistics and Show PlanCopy link to this section
#Text=The SQL Runtime Statistics tool can be used to display the Show Plan for a query with runtime statistics.
98-1	12491-12498	Runtime	
98-2	12499-12509	Statistics	
98-3	12510-12513	and	
98-4	12514-12518	Show	
98-5	12519-12527	PlanCopy	
98-6	12528-12532	link	
98-7	12533-12535	to	
98-8	12536-12540	this	
98-9	12541-12548	section	
98-10	12549-12552	The	
98-11	12553-12556	SQL	
98-12	12557-12564	Runtime	
98-13	12565-12575	Statistics	
98-14	12576-12580	tool	
98-15	12581-12584	can	
98-16	12585-12587	be	
98-17	12588-12592	used	
98-18	12593-12595	to	
98-19	12596-12603	display	
98-20	12604-12607	the	
98-21	12608-12612	Show	
98-22	12613-12617	Plan	
98-23	12618-12621	for	
98-24	12622-12623	a	
98-25	12624-12629	query	
98-26	12630-12634	with	
98-27	12635-12642	runtime	
98-28	12643-12653	statistics	
98-29	12653-12654	.	

#Text=The Alternate Show Plans tool can be used to compare show plans with stats, displaying runtime statistics for a query.
99-1	12655-12658	The	
99-2	12659-12668	Alternate	
99-3	12669-12673	Show	
99-4	12674-12679	Plans	
99-5	12680-12684	tool	
99-6	12685-12688	can	
99-7	12689-12691	be	
99-8	12692-12696	used	
99-9	12697-12699	to	
99-10	12700-12707	compare	
99-11	12708-12712	show	
99-12	12713-12718	plans	
99-13	12719-12723	with	
99-14	12724-12729	stats	
99-15	12729-12730	,	
99-16	12731-12741	displaying	
99-17	12742-12749	runtime	
99-18	12750-12760	statistics	
99-19	12761-12764	for	
99-20	12765-12766	a	
99-21	12767-12772	query	
99-22	12772-12773	.	

#Text=The Alternate Show Plans tool in its Show Plan Options displays estimated statistics for a query.
100-1	12774-12777	The	
100-2	12778-12787	Alternate	
100-3	12788-12792	Show	
100-4	12793-12798	Plans	
100-5	12799-12803	tool	
100-6	12804-12806	in	
100-7	12807-12810	its	
100-8	12811-12815	Show	
100-9	12816-12820	Plan	
100-10	12821-12828	Options	
100-11	12829-12837	displays	
100-12	12838-12847	estimated	
100-13	12848-12858	statistics	
100-14	12859-12862	for	
100-15	12863-12864	a	
100-16	12865-12870	query	
100-17	12870-12871	.	

#Text=If gathering runtime statistics is activated, its Compare Show Plans with Stats option displays actual runtime statistics; if runtime statistics are not active, this option displays estimate statistics.
101-1	12872-12874	If	
101-2	12875-12884	gathering	
101-3	12885-12892	runtime	
101-4	12893-12903	statistics	
101-5	12904-12906	is	
101-6	12907-12916	activated	
101-7	12916-12917	,	
101-8	12918-12921	its	
101-9	12922-12929	Compare	
101-10	12930-12934	Show	
101-11	12935-12940	Plans	
101-12	12941-12945	with	
101-13	12946-12951	Stats	
101-14	12952-12958	option	
101-15	12959-12967	displays	
101-16	12968-12974	actual	
101-17	12975-12982	runtime	
101-18	12983-12993	statistics	
101-19	12993-12994	;	
101-20	12995-12997	if	
101-21	12998-13005	runtime	
101-22	13006-13016	statistics	
101-23	13017-13020	are	
101-24	13021-13024	not	
101-25	13025-13031	active	
101-26	13031-13032	,	
101-27	13033-13037	this	
101-28	13038-13044	option	
101-29	13045-13053	displays	
101-30	13054-13062	estimate	
101-31	13063-13073	statistics	
101-32	13073-13074	.	

#Text=Using IndicesCopy link to this section
#Text=Indexing provides a mechanism for optimizing queries by maintaining a sorted subset of commonly requested data.
102-1	13075-13080	Using	
102-2	13081-13092	IndicesCopy	
102-3	13093-13097	link	
102-4	13098-13100	to	
102-5	13101-13105	this	
102-6	13106-13113	section	
102-7	13114-13122	Indexing	
102-8	13123-13131	provides	
102-9	13132-13133	a	
102-10	13134-13143	mechanism	
102-11	13144-13147	for	
102-12	13148-13158	optimizing	
102-13	13159-13166	queries	
102-14	13167-13169	by	
102-15	13170-13181	maintaining	
102-16	13182-13183	a	
102-17	13184-13190	sorted	
102-18	13191-13197	subset	
102-19	13198-13200	of	
102-20	13201-13209	commonly	
102-21	13210-13219	requested	
102-22	13220-13224	data	
102-23	13224-13225	.	

#Text=Determining which fields should be indexed requires some thought: too few or the wrong indices and key queries will run too slowly; too many indices can slow down INSERT and UPDATE performance (as the index values must be set or updated).
103-1	13226-13237	Determining	
103-2	13238-13243	which	
103-3	13244-13250	fields	
103-4	13251-13257	should	
103-5	13258-13260	be	
103-6	13261-13268	indexed	
103-7	13269-13277	requires	
103-8	13278-13282	some	
103-9	13283-13290	thought	
103-10	13290-13291	:	
103-11	13292-13295	too	
103-12	13296-13299	few	
103-13	13300-13302	or	
103-14	13303-13306	the	
103-15	13307-13312	wrong	
103-16	13313-13320	indices	
103-17	13321-13324	and	
103-18	13325-13328	key	
103-19	13329-13336	queries	
103-20	13337-13341	will	
103-21	13342-13345	run	
103-22	13346-13349	too	
103-23	13350-13356	slowly	
103-24	13356-13357	;	
103-25	13358-13361	too	
103-26	13362-13366	many	
103-27	13367-13374	indices	
103-28	13375-13378	can	
103-29	13379-13383	slow	
103-30	13384-13388	down	
103-31	13389-13395	INSERT	
103-32	13396-13399	and	
103-33	13400-13406	UPDATE	
103-34	13407-13418	performance	
103-35	13419-13420	(	
103-36	13420-13422	as	
103-37	13423-13426	the	
103-38	13427-13432	index	
103-39	13433-13439	values	
103-40	13440-13444	must	
103-41	13445-13447	be	
103-42	13448-13451	set	
103-43	13452-13454	or	
103-44	13455-13462	updated	
103-45	13462-13463	)	
103-46	13463-13464	.	

#Text=What to IndexCopy link to this section
#Text=To determine if adding an index improves query performance, run the query from the Management Portal SQL interface and note in Performance the number of global references.
104-1	13465-13469	What	
104-2	13470-13472	to	
104-3	13473-13482	IndexCopy	
104-4	13483-13487	link	
104-5	13488-13490	to	
104-6	13491-13495	this	
104-7	13496-13503	section	
104-8	13504-13506	To	
104-9	13507-13516	determine	
104-10	13517-13519	if	
104-11	13520-13526	adding	
104-12	13527-13529	an	
104-13	13530-13535	index	
104-14	13536-13544	improves	
104-15	13545-13550	query	
104-16	13551-13562	performance	
104-17	13562-13563	,	
104-18	13564-13567	run	
104-19	13568-13571	the	
104-20	13572-13577	query	
104-21	13578-13582	from	
104-22	13583-13586	the	
104-23	13587-13597	Management	
104-24	13598-13604	Portal	
104-25	13605-13608	SQL	
104-26	13609-13618	interface	
104-27	13619-13622	and	
104-28	13623-13627	note	
104-29	13628-13630	in	
104-30	13631-13642	Performance	
104-31	13643-13646	the	
104-32	13647-13653	number	
104-33	13654-13656	of	
104-34	13657-13663	global	
104-35	13664-13674	references	
104-36	13674-13675	.	

#Text=Add the index and then rerun the query, noting the number of global references.
105-1	13676-13679	Add	
105-2	13680-13683	the	
105-3	13684-13689	index	
105-4	13690-13693	and	
105-5	13694-13698	then	
105-6	13699-13704	rerun	
105-7	13705-13708	the	
105-8	13709-13714	query	
105-9	13714-13715	,	
105-10	13716-13722	noting	
105-11	13723-13726	the	
105-12	13727-13733	number	
105-13	13734-13736	of	
105-14	13737-13743	global	
105-15	13744-13754	references	
105-16	13754-13755	.	

#Text=A useful index should reduce the number of global references.
106-1	13756-13757	A	
106-2	13758-13764	useful	
106-3	13765-13770	index	
106-4	13771-13777	should	
106-5	13778-13784	reduce	
106-6	13785-13788	the	
106-7	13789-13795	number	
106-8	13796-13798	of	
106-9	13799-13805	global	
106-10	13806-13816	references	
106-11	13816-13817	.	

#Text=You can prevent use of an index by using the %NOINDEX keyword as preface to a WHERE clause or ON clause condition.
107-1	13818-13821	You	
107-2	13822-13825	can	
107-3	13826-13833	prevent	
107-4	13834-13837	use	
107-5	13838-13840	of	
107-6	13841-13843	an	
107-7	13844-13849	index	
107-8	13850-13852	by	
107-9	13853-13858	using	
107-10	13859-13862	the	
107-11	13863-13864	%	
107-12	13864-13871	NOINDEX	
107-13	13872-13879	keyword	
107-14	13880-13882	as	
107-15	13883-13890	preface	
107-16	13891-13893	to	
107-17	13894-13895	a	
107-18	13896-13901	WHERE	
107-19	13902-13908	clause	
107-20	13909-13911	or	
107-21	13912-13914	ON	
107-22	13915-13921	clause	
107-23	13922-13931	condition	
107-24	13931-13932	.	

#Text=You should index fields (properties) that are specified in a JOIN.
108-1	13933-13936	You	
108-2	13937-13943	should	
108-3	13944-13949	index	
108-4	13950-13956	fields	
108-5	13957-13958	(	
108-6	13958-13968	properties	
108-7	13968-13969	)	
108-8	13970-13974	that	
108-9	13975-13978	are	
108-10	13979-13988	specified	
108-11	13989-13991	in	
108-12	13992-13993	a	
108-13	13994-13998	JOIN	
108-14	13998-13999	.	

#Text=A LEFT OUTER JOIN starts with the left table, and then looks into the right table; therefore, you should index the field from the right table.
109-1	14000-14001	A	
109-2	14002-14006	LEFT	
109-3	14007-14012	OUTER	
109-4	14013-14017	JOIN	
109-5	14018-14024	starts	
109-6	14025-14029	with	
109-7	14030-14033	the	
109-8	14034-14038	left	
109-9	14039-14044	table	
109-10	14044-14045	,	
109-11	14046-14049	and	
109-12	14050-14054	then	
109-13	14055-14060	looks	
109-14	14061-14065	into	
109-15	14066-14069	the	
109-16	14070-14075	right	
109-17	14076-14081	table	
109-18	14081-14082	;	
109-19	14083-14092	therefore	
109-20	14092-14093	,	
109-21	14094-14097	you	
109-22	14098-14104	should	
109-23	14105-14110	index	
109-24	14111-14114	the	
109-25	14115-14120	field	
109-26	14121-14125	from	
109-27	14126-14129	the	
109-28	14130-14135	right	
109-29	14136-14141	table	
109-30	14141-14142	.	

#Text=In the following example, you should index T2.f2:
#Text=FROM Table1 AS T1 LEFT OUTER JOIN Table2 AS T2 ON T1.f1 = T2.f2
#Text=Copy code to clipboard
#Text=An INNER JOIN should have indices on both ON clause fields.
110-1	14143-14145	In	
110-2	14146-14149	the	
110-3	14150-14159	following	
110-4	14160-14167	example	
110-5	14167-14168	,	
110-6	14169-14172	you	
110-7	14173-14179	should	
110-8	14180-14185	index	
110-9	14186-14188	T2	
110-10	14188-14189	.	
110-11	14189-14191	f2	
110-12	14191-14192	:	
110-13	14193-14197	FROM	
110-14	14198-14204	Table1	
110-15	14205-14207	AS	
110-16	14208-14210	T1	
110-17	14211-14215	LEFT	
110-18	14216-14221	OUTER	
110-19	14222-14226	JOIN	
110-20	14227-14233	Table2	
110-21	14234-14236	AS	
110-22	14237-14239	T2	
110-23	14240-14242	ON	
110-24	14243-14245	T1	
110-25	14245-14246	.	
110-26	14246-14248	f1	
110-27	14249-14250	=	
110-28	14251-14253	T2	
110-29	14253-14254	.	
110-30	14254-14256	f2	
110-31	14257-14261	Copy	
110-32	14262-14266	code	
110-33	14267-14269	to	
110-34	14270-14279	clipboard	
110-35	14280-14282	An	
110-36	14283-14288	INNER	
110-37	14289-14293	JOIN	
110-38	14294-14300	should	
110-39	14301-14305	have	
110-40	14306-14313	indices	
110-41	14314-14316	on	
110-42	14317-14321	both	
110-43	14322-14324	ON	
110-44	14325-14331	clause	
110-45	14332-14338	fields	
110-46	14338-14339	.	

#Text=Run Show Plan and follow to the first map.
111-1	14340-14343	Run	
111-2	14344-14348	Show	
111-3	14349-14353	Plan	
111-4	14354-14357	and	
111-5	14358-14364	follow	
111-6	14365-14367	to	
111-7	14368-14371	the	
111-8	14372-14377	first	
111-9	14378-14381	map	
111-10	14381-14382	.	

#Text=If the first bullet item in the Query Plan is &OpenCurlyDoubleQuoteRead master map&CloseCurlyDoubleQuote, or the Query Plan calls a module whose first bullet item is &OpenCurlyDoubleQuoteRead master map&CloseCurlyDoubleQuote, the query first map is the master map rather than an index map.
112-1	14383-14385	If	
112-2	14386-14389	the	
112-3	14390-14395	first	
112-4	14396-14402	bullet	
112-5	14403-14407	item	
112-6	14408-14410	in	
112-7	14411-14414	the	
112-8	14415-14420	Query	
112-9	14421-14425	Plan	
112-10	14426-14428	is	
112-11	14429-14430	&	
112-12	14430-14454	OpenCurlyDoubleQuoteRead	
112-13	14455-14461	master	
112-14	14462-14465	map	
112-15	14465-14466	&	
112-16	14466-14487	CloseCurlyDoubleQuote	
112-17	14487-14488	,	
112-18	14489-14491	or	
112-19	14492-14495	the	
112-20	14496-14501	Query	
112-21	14502-14506	Plan	
112-22	14507-14512	calls	
112-23	14513-14514	a	
112-24	14515-14521	module	
112-25	14522-14527	whose	
112-26	14528-14533	first	
112-27	14534-14540	bullet	
112-28	14541-14545	item	
112-29	14546-14548	is	
112-30	14549-14550	&	
112-31	14550-14574	OpenCurlyDoubleQuoteRead	
112-32	14575-14581	master	
112-33	14582-14585	map	
112-34	14585-14586	&	
112-35	14586-14607	CloseCurlyDoubleQuote	
112-36	14607-14608	,	
112-37	14609-14612	the	
112-38	14613-14618	query	
112-39	14619-14624	first	
112-40	14625-14628	map	
112-41	14629-14631	is	
112-42	14632-14635	the	
112-43	14636-14642	master	
112-44	14643-14646	map	
112-45	14647-14653	rather	
112-46	14654-14658	than	
112-47	14659-14661	an	
112-48	14662-14667	index	
112-49	14668-14671	map	
112-50	14671-14672	.	

#Text=Because the master map reads the data itself, rather than an index to the data, this almost always indicates an inefficient Query Plan.
113-1	14673-14680	Because	
113-2	14681-14684	the	
113-3	14685-14691	master	
113-4	14692-14695	map	
113-5	14696-14701	reads	
113-6	14702-14705	the	
113-7	14706-14710	data	
113-8	14711-14717	itself	
113-9	14717-14718	,	
113-10	14719-14725	rather	
113-11	14726-14730	than	
113-12	14731-14733	an	
113-13	14734-14739	index	
113-14	14740-14742	to	
113-15	14743-14746	the	
113-16	14747-14751	data	
113-17	14751-14752	,	
113-18	14753-14757	this	
113-19	14758-14764	almost	
113-20	14765-14771	always	
113-21	14772-14781	indicates	
113-22	14782-14784	an	
113-23	14785-14796	inefficient	
113-24	14797-14802	Query	
113-25	14803-14807	Plan	
113-26	14807-14808	.	

#Text=Unless the table is relatively small, you should create an index so that when you rerun this query the Query Plan first map says &OpenCurlyDoubleQuoteRead index map.
114-1	14809-14815	Unless	
114-2	14816-14819	the	
114-3	14820-14825	table	
114-4	14826-14828	is	
114-5	14829-14839	relatively	
114-6	14840-14845	small	
114-7	14845-14846	,	
114-8	14847-14850	you	
114-9	14851-14857	should	
114-10	14858-14864	create	
114-11	14865-14867	an	
114-12	14868-14873	index	
114-13	14874-14876	so	
114-14	14877-14881	that	
114-15	14882-14886	when	
114-16	14887-14890	you	
114-17	14891-14896	rerun	
114-18	14897-14901	this	
114-19	14902-14907	query	
114-20	14908-14911	the	
114-21	14912-14917	Query	
114-22	14918-14922	Plan	
114-23	14923-14928	first	
114-24	14929-14932	map	
114-25	14933-14937	says	
114-26	14938-14939	&	
114-27	14939-14963	OpenCurlyDoubleQuoteRead	
114-28	14964-14969	index	
114-29	14970-14973	map	
114-30	14973-14974	.	

#Text=&CloseCurlyDoubleQuote
#Text=You should index fields that are specified in a WHERE clause equal condition.
115-1	14974-14975	&	
115-2	14975-14996	CloseCurlyDoubleQuote	
115-3	14997-15000	You	
115-4	15001-15007	should	
115-5	15008-15013	index	
115-6	15014-15020	fields	
115-7	15021-15025	that	
115-8	15026-15029	are	
115-9	15030-15039	specified	
115-10	15040-15042	in	
115-11	15043-15044	a	
115-12	15045-15050	WHERE	
115-13	15051-15057	clause	
115-14	15058-15063	equal	
115-15	15064-15073	condition	
115-16	15073-15074	.	

#Text=You may wish to index fields that are specified in a WHERE clause range condition, and fields specified in GROUP BY and ORDER BY clauses.
116-1	15075-15078	You	
116-2	15079-15082	may	
116-3	15083-15087	wish	
116-4	15088-15090	to	
116-5	15091-15096	index	
116-6	15097-15103	fields	
116-7	15104-15108	that	
116-8	15109-15112	are	
116-9	15113-15122	specified	
116-10	15123-15125	in	
116-11	15126-15127	a	
116-12	15128-15133	WHERE	
116-13	15134-15140	clause	
116-14	15141-15146	range	
116-15	15147-15156	condition	
116-16	15156-15157	,	
116-17	15158-15161	and	
116-18	15162-15168	fields	
116-19	15169-15178	specified	
116-20	15179-15181	in	
116-21	15182-15187	GROUP	
116-22	15188-15190	BY	
116-23	15191-15194	and	
116-24	15195-15200	ORDER	
116-25	15201-15203	BY	
116-26	15204-15211	clauses	
116-27	15211-15212	.	

#Text=Under certain circumstances, an index based on a range condition could make a query slower.
117-1	15213-15218	Under	
117-2	15219-15226	certain	
117-3	15227-15240	circumstances	
117-4	15240-15241	,	
117-5	15242-15244	an	
117-6	15245-15250	index	
117-7	15251-15256	based	
117-8	15257-15259	on	
117-9	15260-15261	a	
117-10	15262-15267	range	
117-11	15268-15277	condition	
117-12	15278-15283	could	
117-13	15284-15288	make	
117-14	15289-15290	a	
117-15	15291-15296	query	
117-16	15297-15303	slower	
117-17	15303-15304	.	

#Text=This can occur if the vast majority of the rows meet the specified range condition.
118-1	15305-15309	This	
118-2	15310-15313	can	
118-3	15314-15319	occur	
118-4	15320-15322	if	
118-5	15323-15326	the	
118-6	15327-15331	vast	
118-7	15332-15340	majority	
118-8	15341-15343	of	
118-9	15344-15347	the	
118-10	15348-15352	rows	
118-11	15353-15357	meet	
118-12	15358-15361	the	
118-13	15362-15371	specified	
118-14	15372-15377	range	
118-15	15378-15387	condition	
118-16	15387-15388	.	

#Text=For example, if the query clause WHERE Date < CURRENT_DATE is used with a database in which most of the records are from prior dates, indexing on Date may actually slow down the query.
119-1	15389-15392	For	
119-2	15393-15400	example	
119-3	15400-15401	,	
119-4	15402-15404	if	
119-5	15405-15408	the	
119-6	15409-15414	query	
119-7	15415-15421	clause	
119-8	15422-15427	WHERE	
119-9	15428-15432	Date	
119-10	15433-15434	<	
119-11	15435-15447	CURRENT_DATE	
119-12	15448-15450	is	
119-13	15451-15455	used	
119-14	15456-15460	with	
119-15	15461-15462	a	
119-16	15463-15471	database	
119-17	15472-15474	in	
119-18	15475-15480	which	
119-19	15481-15485	most	
119-20	15486-15488	of	
119-21	15489-15492	the	
119-22	15493-15500	records	
119-23	15501-15504	are	
119-24	15505-15509	from	
119-25	15510-15515	prior	
119-26	15516-15521	dates	
119-27	15521-15522	,	
119-28	15523-15531	indexing	
119-29	15532-15534	on	
119-30	15535-15539	Date	
119-31	15540-15543	may	
119-32	15544-15552	actually	
119-33	15553-15557	slow	
119-34	15558-15562	down	
119-35	15563-15566	the	
119-36	15567-15572	query	
119-37	15572-15573	.	

#Text=This is because the Query Optimizer assumes range conditions will return a relatively small number of rows, and optimizes for this situation.
120-1	15574-15578	This	
120-2	15579-15581	is	
120-3	15582-15589	because	
120-4	15590-15593	the	
120-5	15594-15599	Query	
120-6	15600-15609	Optimizer	
120-7	15610-15617	assumes	
120-8	15618-15623	range	
120-9	15624-15634	conditions	
120-10	15635-15639	will	
120-11	15640-15646	return	
120-12	15647-15648	a	
120-13	15649-15659	relatively	
120-14	15660-15665	small	
120-15	15666-15672	number	
120-16	15673-15675	of	
120-17	15676-15680	rows	
120-18	15680-15681	,	
120-19	15682-15685	and	
120-20	15686-15695	optimizes	
120-21	15696-15699	for	
120-22	15700-15704	this	
120-23	15705-15714	situation	
120-24	15714-15715	.	

#Text=You can determine if this is occurring by prefacing the range condition with %NOINDEX and then run the query again.
121-1	15716-15719	You	
121-2	15720-15723	can	
121-3	15724-15733	determine	
121-4	15734-15736	if	
121-5	15737-15741	this	
121-6	15742-15744	is	
121-7	15745-15754	occurring	
121-8	15755-15757	by	
121-9	15758-15767	prefacing	
121-10	15768-15771	the	
121-11	15772-15777	range	
121-12	15778-15787	condition	
121-13	15788-15792	with	
121-14	15793-15794	%	
121-15	15794-15801	NOINDEX	
121-16	15802-15805	and	
121-17	15806-15810	then	
121-18	15811-15814	run	
121-19	15815-15818	the	
121-20	15819-15824	query	
121-21	15825-15830	again	
121-22	15830-15831	.	

#Text=If you are performing a comparison using an indexed field, the field as specified in the comparison should have the same collation type as it has in the corresponding index.
122-1	15832-15834	If	
122-2	15835-15838	you	
122-3	15839-15842	are	
122-4	15843-15853	performing	
122-5	15854-15855	a	
122-6	15856-15866	comparison	
122-7	15867-15872	using	
122-8	15873-15875	an	
122-9	15876-15883	indexed	
122-10	15884-15889	field	
122-11	15889-15890	,	
122-12	15891-15894	the	
122-13	15895-15900	field	
122-14	15901-15903	as	
122-15	15904-15913	specified	
122-16	15914-15916	in	
122-17	15917-15920	the	
122-18	15921-15931	comparison	
122-19	15932-15938	should	
122-20	15939-15943	have	
122-21	15944-15947	the	
122-22	15948-15952	same	
122-23	15953-15962	collation	
122-24	15963-15967	type	
122-25	15968-15970	as	
122-26	15971-15973	it	
122-27	15974-15977	has	
122-28	15978-15980	in	
122-29	15981-15984	the	
122-30	15985-15998	corresponding	
122-31	15999-16004	index	
122-32	16004-16005	.	

#Text=For example, the Name field in the WHERE clause of a SELECT or in the ON clause of a JOIN should have the same collation as the index defined for the Name field.
123-1	16006-16009	For	
123-2	16010-16017	example	
123-3	16017-16018	,	
123-4	16019-16022	the	
123-5	16023-16027	Name	
123-6	16028-16033	field	
123-7	16034-16036	in	
123-8	16037-16040	the	
123-9	16041-16046	WHERE	
123-10	16047-16053	clause	
123-11	16054-16056	of	
123-12	16057-16058	a	
123-13	16059-16065	SELECT	
123-14	16066-16068	or	
123-15	16069-16071	in	
123-16	16072-16075	the	
123-17	16076-16078	ON	
123-18	16079-16085	clause	
123-19	16086-16088	of	
123-20	16089-16090	a	
123-21	16091-16095	JOIN	
123-22	16096-16102	should	
123-23	16103-16107	have	
123-24	16108-16111	the	
123-25	16112-16116	same	
123-26	16117-16126	collation	
123-27	16127-16129	as	
123-28	16130-16133	the	
123-29	16134-16139	index	
123-30	16140-16147	defined	
123-31	16148-16151	for	
123-32	16152-16155	the	
123-33	16156-16160	Name	
123-34	16161-16166	field	
123-35	16166-16167	.	

#Text=If there is a mismatch between the field collation and the index collation, the index may be less effective or may not be used at all.
124-1	16168-16170	If	
124-2	16171-16176	there	
124-3	16177-16179	is	
124-4	16180-16181	a	
124-5	16182-16190	mismatch	
124-6	16191-16198	between	
124-7	16199-16202	the	
124-8	16203-16208	field	
124-9	16209-16218	collation	
124-10	16219-16222	and	
124-11	16223-16226	the	
124-12	16227-16232	index	
124-13	16233-16242	collation	
124-14	16242-16243	,	
124-15	16244-16247	the	
124-16	16248-16253	index	
124-17	16254-16257	may	
124-18	16258-16260	be	
124-19	16261-16265	less	
124-20	16266-16275	effective	
124-21	16276-16278	or	
124-22	16279-16282	may	
124-23	16283-16286	not	
124-24	16287-16289	be	
124-25	16290-16294	used	
124-26	16295-16297	at	
124-27	16298-16301	all	
124-28	16301-16302	.	

#Text=For further details, refer to Index Collation in the &OpenCurlyDoubleQuoteDefining and Building Indices&CloseCurlyDoubleQuote chapter of this manual.
125-1	16303-16306	For	
125-2	16307-16314	further	
125-3	16315-16322	details	
125-4	16322-16323	,	
125-5	16324-16329	refer	
125-6	16330-16332	to	
125-7	16333-16338	Index	
125-8	16339-16348	Collation	
125-9	16349-16351	in	
125-10	16352-16355	the	
125-11	16356-16357	&	
125-12	16357-16385	OpenCurlyDoubleQuoteDefining	
125-13	16386-16389	and	
125-14	16390-16398	Building	
125-15	16399-16406	Indices	
125-16	16406-16407	&	
125-17	16407-16428	CloseCurlyDoubleQuote	
125-18	16429-16436	chapter	
125-19	16437-16439	of	
125-20	16440-16444	this	
125-21	16445-16451	manual	
125-22	16451-16452	.	

#Text=For details on how to create an index and the available index types and options, refer to the CREATE INDEX command in the InterSystems SQL Reference, and the &OpenCurlyDoubleQuoteDefining and Building Indices&CloseCurlyDoubleQuote chapter of this manual.
126-1	16453-16456	For	
126-2	16457-16464	details	
126-3	16465-16467	on	
126-4	16468-16471	how	
126-5	16472-16474	to	
126-6	16475-16481	create	
126-7	16482-16484	an	
126-8	16485-16490	index	
126-9	16491-16494	and	
126-10	16495-16498	the	
126-11	16499-16508	available	
126-12	16509-16514	index	
126-13	16515-16520	types	
126-14	16521-16524	and	
126-15	16525-16532	options	
126-16	16532-16533	,	
126-17	16534-16539	refer	
126-18	16540-16542	to	
126-19	16543-16546	the	
126-20	16547-16553	CREATE	
126-21	16554-16559	INDEX	
126-22	16560-16567	command	
126-23	16568-16570	in	
126-24	16571-16574	the	
126-25	16575-16587	InterSystems	
126-26	16588-16591	SQL	
126-27	16592-16601	Reference	
126-28	16601-16602	,	
126-29	16603-16606	and	
126-30	16607-16610	the	
126-31	16611-16612	&	
126-32	16612-16640	OpenCurlyDoubleQuoteDefining	
126-33	16641-16644	and	
126-34	16645-16653	Building	
126-35	16654-16661	Indices	
126-36	16661-16662	&	
126-37	16662-16683	CloseCurlyDoubleQuote	
126-38	16684-16691	chapter	
126-39	16692-16694	of	
126-40	16695-16699	this	
126-41	16700-16706	manual	
126-42	16706-16707	.	

#Text=Index Configuration OptionsCopy link to this section
#Text=The following system-wide configuration methods can be used to optimize use of indices in queries:
#Text=To use the PRIMARY KEY as the IDKey index, set the $SYSTEM.SQL.Util.SetOption() method, as follows: SET status=$SYSTEM.SQL.Util.SetOption("DDLPKeyNotIDKey",0,.oldval).
127-1	16708-16713	Index	
127-2	16714-16727	Configuration	
127-3	16728-16739	OptionsCopy	
127-4	16740-16744	link	
127-5	16745-16747	to	
127-6	16748-16752	this	
127-7	16753-16760	section	
127-8	16761-16764	The	
127-9	16765-16774	following	
127-10	16775-16786	system-wide	
127-11	16787-16800	configuration	
127-12	16801-16808	methods	
127-13	16809-16812	can	
127-14	16813-16815	be	
127-15	16816-16820	used	
127-16	16821-16823	to	
127-17	16824-16832	optimize	
127-18	16833-16836	use	
127-19	16837-16839	of	
127-20	16840-16847	indices	
127-21	16848-16850	in	
127-22	16851-16858	queries	
127-23	16858-16859	:	
127-24	16860-16862	To	
127-25	16863-16866	use	
127-26	16867-16870	the	
127-27	16871-16878	PRIMARY	
127-28	16879-16882	KEY	
127-29	16883-16885	as	
127-30	16886-16889	the	
127-31	16890-16895	IDKey	
127-32	16896-16901	index	
127-33	16901-16902	,	
127-34	16903-16906	set	
127-35	16907-16910	the	
127-36	16911-16912	$	
127-37	16912-16937	SYSTEM.SQL.Util.SetOption	
127-38	16937-16938	(	
127-39	16938-16939	)	
127-40	16940-16946	method	
127-41	16946-16947	,	
127-42	16948-16950	as	
127-43	16951-16958	follows	
127-44	16958-16959	:	
127-45	16960-16963	SET	
127-46	16964-16970	status	
127-47	16970-16971	=	
127-48	16971-16972	$	
127-49	16972-16997	SYSTEM.SQL.Util.SetOption	
127-50	16997-16998	(	
127-51	16998-16999	"	
127-52	16999-17014	DDLPKeyNotIDKey	
127-53	17014-17015	"	
127-54	17015-17016	,	
127-55	17016-17017	0	
127-56	17017-17018	,	
127-57	17018-17019	.	
127-58	17019-17025	oldval	
127-59	17025-17026	)	
127-60	17026-17027	.	

#Text=The default is 1.
128-1	17028-17031	The	
128-2	17032-17039	default	
128-3	17040-17042	is	
128-4	17043-17044	1	
128-5	17044-17045	.	

#Text=To use indices for SELECT DISTINCT queries set the $SYSTEM.SQL.Util.SetOption() method, as follows: SET status=$SYSTEM.SQL.Util.SetOption("FastDistinct",1,.oldval).
129-1	17046-17048	To	
129-2	17049-17052	use	
129-3	17053-17060	indices	
129-4	17061-17064	for	
129-5	17065-17071	SELECT	
129-6	17072-17080	DISTINCT	
129-7	17081-17088	queries	
129-8	17089-17092	set	
129-9	17093-17096	the	
129-10	17097-17098	$	
129-11	17098-17123	SYSTEM.SQL.Util.SetOption	
129-12	17123-17124	(	
129-13	17124-17125	)	
129-14	17126-17132	method	
129-15	17132-17133	,	
129-16	17134-17136	as	
129-17	17137-17144	follows	
129-18	17144-17145	:	
129-19	17146-17149	SET	
129-20	17150-17156	status	
129-21	17156-17157	=	
129-22	17157-17158	$	
129-23	17158-17183	SYSTEM.SQL.Util.SetOption	
129-24	17183-17184	(	
129-25	17184-17185	"	
129-26	17185-17197	FastDistinct	
129-27	17197-17198	"	
129-28	17198-17199	,	
129-29	17199-17200	1	
129-30	17200-17201	,	
129-31	17201-17202	.	
129-32	17202-17208	oldval	
129-33	17208-17209	)	
129-34	17209-17210	.	

#Text=The default is 1.
130-1	17211-17214	The	
130-2	17215-17222	default	
130-3	17223-17225	is	
130-4	17226-17227	1	
130-5	17227-17228	.	

#Text=For further details, refer to SQL and Object Settings Pages listed in System Administration Guide.
131-1	17229-17232	For	
131-2	17233-17240	further	
131-3	17241-17248	details	
131-4	17248-17249	,	
131-5	17250-17255	refer	
131-6	17256-17258	to	
131-7	17259-17262	SQL	
131-8	17263-17266	and	
131-9	17267-17273	Object	
131-10	17274-17282	Settings	
131-11	17283-17288	Pages	
131-12	17289-17295	listed	
131-13	17296-17298	in	
131-14	17299-17305	System	
131-15	17306-17320	Administration	
131-16	17321-17326	Guide	
131-17	17326-17327	.	

#Text=Index Usage AnalysisCopy link to this section
#Text=You can analyze index usage by SQL cached queries using either of the following:
#Text=The Management Portal Index Analyzer SQL performance tool.
132-1	17328-17333	Index	
132-2	17334-17339	Usage	
132-3	17340-17352	AnalysisCopy	
132-4	17353-17357	link	
132-5	17358-17360	to	
132-6	17361-17365	this	
132-7	17366-17373	section	
132-8	17374-17377	You	
132-9	17378-17381	can	
132-10	17382-17389	analyze	
132-11	17390-17395	index	
132-12	17396-17401	usage	
132-13	17402-17404	by	
132-14	17405-17408	SQL	
132-15	17409-17415	cached	
132-16	17416-17423	queries	
132-17	17424-17429	using	
132-18	17430-17436	either	
132-19	17437-17439	of	
132-20	17440-17443	the	
132-21	17444-17453	following	
132-22	17453-17454	:	
132-23	17455-17458	The	
132-24	17459-17469	Management	
132-25	17470-17476	Portal	
132-26	17477-17482	Index	
132-27	17483-17491	Analyzer	
132-28	17492-17495	SQL	
132-29	17496-17507	performance	
132-30	17508-17512	tool	
132-31	17512-17513	.	

#Text=The %SYS.PTools.UtilSQLAnalysis methods indexUsage(), tableScans(), tempIndices(), joinIndices(), and outlierIndices().
133-1	17514-17517	The	
133-2	17518-17519	%	
133-3	17519-17545	SYS.PTools.UtilSQLAnalysis	
133-4	17546-17553	methods	
133-5	17554-17564	indexUsage	
133-6	17564-17565	(	
133-7	17565-17566	)	
133-8	17566-17567	,	
133-9	17568-17578	tableScans	
133-10	17578-17579	(	
133-11	17579-17580	)	
133-12	17580-17581	,	
133-13	17582-17593	tempIndices	
133-14	17593-17594	(	
133-15	17594-17595	)	
133-16	17595-17596	,	
133-17	17597-17608	joinIndices	
133-18	17608-17609	(	
133-19	17609-17610	)	
133-20	17610-17611	,	
133-21	17612-17615	and	
133-22	17616-17630	outlierIndices	
133-23	17630-17631	(	
133-24	17631-17632	)	
133-25	17632-17633	.	

#Text=Refer to indexUsage() Method for further details.
134-1	17634-17639	Refer	
134-2	17640-17642	to	
134-3	17643-17653	indexUsage	
134-4	17653-17654	(	
134-5	17654-17655	)	
134-6	17656-17662	Method	
134-7	17663-17666	for	
134-8	17667-17674	further	
134-9	17675-17682	details	
134-10	17682-17683	.	

#Text=Index AnalyzerCopy link to this section
#Text=You can analyze index usage for SQL queries from the Management Portal using either of the following:
#Text=Select System Explorer, select Tools, select SQL Performance Tools, then select Index Analyzer.
135-1	17684-17689	Index	
135-2	17690-17702	AnalyzerCopy	
135-3	17703-17707	link	
135-4	17708-17710	to	
135-5	17711-17715	this	
135-6	17716-17723	section	
135-7	17724-17727	You	
135-8	17728-17731	can	
135-9	17732-17739	analyze	
135-10	17740-17745	index	
135-11	17746-17751	usage	
135-12	17752-17755	for	
135-13	17756-17759	SQL	
135-14	17760-17767	queries	
135-15	17768-17772	from	
135-16	17773-17776	the	
135-17	17777-17787	Management	
135-18	17788-17794	Portal	
135-19	17795-17800	using	
135-20	17801-17807	either	
135-21	17808-17810	of	
135-22	17811-17814	the	
135-23	17815-17824	following	
135-24	17824-17825	:	
135-25	17826-17832	Select	
135-26	17833-17839	System	
135-27	17840-17848	Explorer	
135-28	17848-17849	,	
135-29	17850-17856	select	
135-30	17857-17862	Tools	
135-31	17862-17863	,	
135-32	17864-17870	select	
135-33	17871-17874	SQL	
135-34	17875-17886	Performance	
135-35	17887-17892	Tools	
135-36	17892-17893	,	
135-37	17894-17898	then	
135-38	17899-17905	select	
135-39	17906-17911	Index	
135-40	17912-17920	Analyzer	
135-41	17920-17921	.	

#Text=Select System Explorer, select SQL, then from the Tools drop-down menu select Index Analyzer.
136-1	17922-17928	Select	
136-2	17929-17935	System	
136-3	17936-17944	Explorer	
136-4	17944-17945	,	
136-5	17946-17952	select	
136-6	17953-17956	SQL	
136-7	17956-17957	,	
136-8	17958-17962	then	
136-9	17963-17967	from	
136-10	17968-17971	the	
136-11	17972-17977	Tools	
136-12	17978-17987	drop-down	
136-13	17988-17992	menu	
136-14	17993-17999	select	
136-15	18000-18005	Index	
136-16	18006-18014	Analyzer	
136-17	18014-18015	.	

#Text=The Index Analyzer provides an SQL Statement Count display for the current namespace, and five index analysis report options.
137-1	18016-18019	The	
137-2	18020-18025	Index	
137-3	18026-18034	Analyzer	
137-4	18035-18043	provides	
137-5	18044-18046	an	
137-6	18047-18050	SQL	
137-7	18051-18060	Statement	
137-8	18061-18066	Count	
137-9	18067-18074	display	
137-10	18075-18078	for	
137-11	18079-18082	the	
137-12	18083-18090	current	
137-13	18091-18100	namespace	
137-14	18100-18101	,	
137-15	18102-18105	and	
137-16	18106-18110	five	
137-17	18111-18116	index	
137-18	18117-18125	analysis	
137-19	18126-18132	report	
137-20	18133-18140	options	
137-21	18140-18141	.	

#Text=SQL Statement Count
#Text=At the top of the SQL Index Analyzer there is an option to count all SQL statements in the namespace.
138-1	18142-18145	SQL	
138-2	18146-18155	Statement	
138-3	18156-18161	Count	
138-4	18162-18164	At	
138-5	18165-18168	the	
138-6	18169-18172	top	
138-7	18173-18175	of	
138-8	18176-18179	the	
138-9	18180-18183	SQL	
138-10	18184-18189	Index	
138-11	18190-18198	Analyzer	
138-12	18199-18204	there	
138-13	18205-18207	is	
138-14	18208-18210	an	
138-15	18211-18217	option	
138-16	18218-18220	to	
138-17	18221-18226	count	
138-18	18227-18230	all	
138-19	18231-18234	SQL	
138-20	18235-18245	statements	
138-21	18246-18248	in	
138-22	18249-18252	the	
138-23	18253-18262	namespace	
138-24	18262-18263	.	

#Text=Press the Gather SQL Statements button.
139-1	18264-18269	Press	
139-2	18270-18273	the	
139-3	18274-18280	Gather	
139-4	18281-18284	SQL	
139-5	18285-18295	Statements	
139-6	18296-18302	button	
139-7	18302-18303	.	

#Text=The SQL Index Analyzer displays &OpenCurlyDoubleQuoteGathering SQL statements ....
140-1	18304-18307	The	
140-2	18308-18311	SQL	
140-3	18312-18317	Index	
140-4	18318-18326	Analyzer	
140-5	18327-18335	displays	
140-6	18336-18337	&	
140-7	18337-18366	OpenCurlyDoubleQuoteGathering	
140-8	18367-18370	SQL	
140-9	18371-18381	statements	
140-10	18382-18383	.	
140-11	18383-18384	.	
140-12	18384-18385	.	
140-13	18385-18386	.	

#Text=&CloseCurlyDoubleQuote while the count is in progress, then &OpenCurlyDoubleQuoteDone!
141-1	18386-18387	&	
141-2	18387-18408	CloseCurlyDoubleQuote	
141-3	18409-18414	while	
141-4	18415-18418	the	
141-5	18419-18424	count	
141-6	18425-18427	is	
141-7	18428-18430	in	
141-8	18431-18439	progress	
141-9	18439-18440	,	
141-10	18441-18445	then	
141-11	18446-18447	&	
141-12	18447-18471	OpenCurlyDoubleQuoteDone	
141-13	18471-18472	!	

#Text=&CloseCurlyDoubleQuote when the count is complete.
142-1	18472-18473	&	
142-2	18473-18494	CloseCurlyDoubleQuote	
142-3	18495-18499	when	
142-4	18500-18503	the	
142-5	18504-18509	count	
142-6	18510-18512	is	
142-7	18513-18521	complete	
142-8	18521-18522	.	

#Text=SQL statements are counted in three categories: a Cached Query count, a Class Method count, and a Class Query count.
143-1	18523-18526	SQL	
143-2	18527-18537	statements	
143-3	18538-18541	are	
143-4	18542-18549	counted	
143-5	18550-18552	in	
143-6	18553-18558	three	
143-7	18559-18569	categories	
143-8	18569-18570	:	
143-9	18571-18572	a	
143-10	18573-18579	Cached	
143-11	18580-18585	Query	
143-12	18586-18591	count	
143-13	18591-18592	,	
143-14	18593-18594	a	
143-15	18595-18600	Class	
143-16	18601-18607	Method	
143-17	18608-18613	count	
143-18	18613-18614	,	
143-19	18615-18618	and	
143-20	18619-18620	a	
143-21	18621-18626	Class	
143-22	18627-18632	Query	
143-23	18633-18638	count	
143-24	18638-18639	.	

#Text=These counts are for the entire current namespace, and are not affected by the Schema Selection option.
144-1	18640-18645	These	
144-2	18646-18652	counts	
144-3	18653-18656	are	
144-4	18657-18660	for	
144-5	18661-18664	the	
144-6	18665-18671	entire	
144-7	18672-18679	current	
144-8	18680-18689	namespace	
144-9	18689-18690	,	
144-10	18691-18694	and	
144-11	18695-18698	are	
144-12	18699-18702	not	
144-13	18703-18711	affected	
144-14	18712-18714	by	
144-15	18715-18718	the	
144-16	18719-18725	Schema	
144-17	18726-18735	Selection	
144-18	18736-18742	option	
144-19	18742-18743	.	

#Text=The corresponding method is getSQLStmts() in the %SYS.PTools.UtilSQLAnalysis class.
145-1	18744-18747	The	
145-2	18748-18761	corresponding	
145-3	18762-18768	method	
145-4	18769-18771	is	
145-5	18772-18783	getSQLStmts	
145-6	18783-18784	(	
145-7	18784-18785	)	
145-8	18786-18788	in	
145-9	18789-18792	the	
145-10	18793-18794	%	
145-11	18794-18820	SYS.PTools.UtilSQLAnalysis	
145-12	18821-18826	class	
145-13	18826-18827	.	

#Text=You can use the Purge Statements button to delete all gathered statements in the current namespace.
146-1	18828-18831	You	
146-2	18832-18835	can	
146-3	18836-18839	use	
146-4	18840-18843	the	
146-5	18844-18849	Purge	
146-6	18850-18860	Statements	
146-7	18861-18867	button	
146-8	18868-18870	to	
146-9	18871-18877	delete	
146-10	18878-18881	all	
146-11	18882-18890	gathered	
146-12	18891-18901	statements	
146-13	18902-18904	in	
146-14	18905-18908	the	
146-15	18909-18916	current	
146-16	18917-18926	namespace	
146-17	18926-18927	.	

#Text=This button invokes the clearSQLStatements() method.
147-1	18928-18932	This	
147-2	18933-18939	button	
147-3	18940-18947	invokes	
147-4	18948-18951	the	
147-5	18952-18970	clearSQLStatements	
147-6	18970-18971	(	
147-7	18971-18972	)	
147-8	18973-18979	method	
147-9	18979-18980	.	

#Text=Report Options
#Text=You can either examine reports for the cached queries for a selected schema in the current namespace, or (by not selecting a schema) examine reports for all cached queries in the current namespace.
148-1	18981-18987	Report	
148-2	18988-18995	Options	
148-3	18996-18999	You	
148-4	19000-19003	can	
148-5	19004-19010	either	
148-6	19011-19018	examine	
148-7	19019-19026	reports	
148-8	19027-19030	for	
148-9	19031-19034	the	
148-10	19035-19041	cached	
148-11	19042-19049	queries	
148-12	19050-19053	for	
148-13	19054-19055	a	
148-14	19056-19064	selected	
148-15	19065-19071	schema	
148-16	19072-19074	in	
148-17	19075-19078	the	
148-18	19079-19086	current	
148-19	19087-19096	namespace	
148-20	19096-19097	,	
148-21	19098-19100	or	
148-22	19101-19102	(	
148-23	19102-19104	by	
148-24	19105-19108	not	
148-25	19109-19118	selecting	
148-26	19119-19120	a	
148-27	19121-19127	schema	
148-28	19127-19128	)	
148-29	19129-19136	examine	
148-30	19137-19144	reports	
148-31	19145-19148	for	
148-32	19149-19152	all	
148-33	19153-19159	cached	
148-34	19160-19167	queries	
148-35	19168-19170	in	
148-36	19171-19174	the	
148-37	19175-19182	current	
148-38	19183-19192	namespace	
148-39	19192-19193	.	

#Text=You can skip or include system class queries, INSERT statements, and/or IDKEY indices in this analysis.
149-1	19194-19197	You	
149-2	19198-19201	can	
149-3	19202-19206	skip	
149-4	19207-19209	or	
149-5	19210-19217	include	
149-6	19218-19224	system	
149-7	19225-19230	class	
149-8	19231-19238	queries	
149-9	19238-19239	,	
149-10	19240-19246	INSERT	
149-11	19247-19257	statements	
149-12	19257-19258	,	
149-13	19259-19262	and	
149-14	19262-19263	/	
149-15	19263-19265	or	
149-16	19266-19271	IDKEY	
149-17	19272-19279	indices	
149-18	19280-19282	in	
149-19	19283-19287	this	
149-20	19288-19296	analysis	
149-21	19296-19297	.	

#Text=The schema selection and skip option check boxes are user customized.
150-1	19298-19301	The	
150-2	19302-19308	schema	
150-3	19309-19318	selection	
150-4	19319-19322	and	
150-5	19323-19327	skip	
150-6	19328-19334	option	
150-7	19335-19340	check	
150-8	19341-19346	boxes	
150-9	19347-19350	are	
150-10	19351-19355	user	
150-11	19356-19366	customized	
150-12	19366-19367	.	

#Text=The index analysis report options are:
#Text=Index Usage: This option takes all of the cached queries in the current namespace, generates a Show Plan for each and keeps a count of how many times each index is used by each query and the total usage for each index by all queries in the namespace.
151-1	19368-19371	The	
151-2	19372-19377	index	
151-3	19378-19386	analysis	
151-4	19387-19393	report	
151-5	19394-19401	options	
151-6	19402-19405	are	
151-7	19405-19406	:	
151-8	19407-19412	Index	
151-9	19413-19418	Usage	
151-10	19418-19419	:	
151-11	19420-19424	This	
151-12	19425-19431	option	
151-13	19432-19437	takes	
151-14	19438-19441	all	
151-15	19442-19444	of	
151-16	19445-19448	the	
151-17	19449-19455	cached	
151-18	19456-19463	queries	
151-19	19464-19466	in	
151-20	19467-19470	the	
151-21	19471-19478	current	
151-22	19479-19488	namespace	
151-23	19488-19489	,	
151-24	19490-19499	generates	
151-25	19500-19501	a	
151-26	19502-19506	Show	
151-27	19507-19511	Plan	
151-28	19512-19515	for	
151-29	19516-19520	each	
151-30	19521-19524	and	
151-31	19525-19530	keeps	
151-32	19531-19532	a	
151-33	19533-19538	count	
151-34	19539-19541	of	
151-35	19542-19545	how	
151-36	19546-19550	many	
151-37	19551-19556	times	
151-38	19557-19561	each	
151-39	19562-19567	index	
151-40	19568-19570	is	
151-41	19571-19575	used	
151-42	19576-19578	by	
151-43	19579-19583	each	
151-44	19584-19589	query	
151-45	19590-19593	and	
151-46	19594-19597	the	
151-47	19598-19603	total	
151-48	19604-19609	usage	
151-49	19610-19613	for	
151-50	19614-19618	each	
151-51	19619-19624	index	
151-52	19625-19627	by	
151-53	19628-19631	all	
151-54	19632-19639	queries	
151-55	19640-19642	in	
151-56	19643-19646	the	
151-57	19647-19656	namespace	
151-58	19656-19657	.	

#Text=This can be used to reveal indices that are not being used so they can either be removed or modified to make them more useful.
152-1	19658-19662	This	
152-2	19663-19666	can	
152-3	19667-19669	be	
152-4	19670-19674	used	
152-5	19675-19677	to	
152-6	19678-19684	reveal	
152-7	19685-19692	indices	
152-8	19693-19697	that	
152-9	19698-19701	are	
152-10	19702-19705	not	
152-11	19706-19711	being	
152-12	19712-19716	used	
152-13	19717-19719	so	
152-14	19720-19724	they	
152-15	19725-19728	can	
152-16	19729-19735	either	
152-17	19736-19738	be	
152-18	19739-19746	removed	
152-19	19747-19749	or	
152-20	19750-19758	modified	
152-21	19759-19761	to	
152-22	19762-19766	make	
152-23	19767-19771	them	
152-24	19772-19776	more	
152-25	19777-19783	useful	
152-26	19783-19784	.	

#Text=The result set is ordered from least used index to most used index.
153-1	19785-19788	The	
153-2	19789-19795	result	
153-3	19796-19799	set	
153-4	19800-19802	is	
153-5	19803-19810	ordered	
153-6	19811-19815	from	
153-7	19816-19821	least	
153-8	19822-19826	used	
153-9	19827-19832	index	
153-10	19833-19835	to	
153-11	19836-19840	most	
153-12	19841-19845	used	
153-13	19846-19851	index	
153-14	19851-19852	.	

#Text=The corresponding method is indexUsage() in the %SYS.PTools.UtilSQLAnalysis class.
154-1	19853-19856	The	
154-2	19857-19870	corresponding	
154-3	19871-19877	method	
154-4	19878-19880	is	
154-5	19881-19891	indexUsage	
154-6	19891-19892	(	
154-7	19892-19893	)	
154-8	19894-19896	in	
154-9	19897-19900	the	
154-10	19901-19902	%	
154-11	19902-19928	SYS.PTools.UtilSQLAnalysis	
154-12	19929-19934	class	
154-13	19934-19935	.	

#Text=To export analytic data generated by this method, use the exportIUAnalysis() method.
155-1	19936-19938	To	
155-2	19939-19945	export	
155-3	19946-19954	analytic	
155-4	19955-19959	data	
155-5	19960-19969	generated	
155-6	19970-19972	by	
155-7	19973-19977	this	
155-8	19978-19984	method	
155-9	19984-19985	,	
155-10	19986-19989	use	
155-11	19990-19993	the	
155-12	19994-20010	exportIUAnalysis	
155-13	20010-20011	(	
155-14	20011-20012	)	
155-15	20013-20019	method	
155-16	20019-20020	.	

#Text=Queries with Table Scans: This option identifies all queries in the current namespace that do table scans.
156-1	20021-20028	Queries	
156-2	20029-20033	with	
156-3	20034-20039	Table	
156-4	20040-20045	Scans	
156-5	20045-20046	:	
156-6	20047-20051	This	
156-7	20052-20058	option	
156-8	20059-20069	identifies	
156-9	20070-20073	all	
156-10	20074-20081	queries	
156-11	20082-20084	in	
156-12	20085-20088	the	
156-13	20089-20096	current	
156-14	20097-20106	namespace	
156-15	20107-20111	that	
156-16	20112-20114	do	
156-17	20115-20120	table	
156-18	20121-20126	scans	
156-19	20126-20127	.	

#Text=Table scans should be avoided if possible.
157-1	20128-20133	Table	
157-2	20134-20139	scans	
157-3	20140-20146	should	
157-4	20147-20149	be	
157-5	20150-20157	avoided	
157-6	20158-20160	if	
157-7	20161-20169	possible	
157-8	20169-20170	.	

#Text=A table scan can’t always be avoided, but if a table has a large number of table scans, the indices defined for that table should be reviewed.
158-1	20171-20172	A	
158-2	20173-20178	table	
158-3	20179-20183	scan	
158-4	20184-20187	can	
158-5	20187-20188	’	
158-6	20188-20189	t	
158-7	20190-20196	always	
158-8	20197-20199	be	
158-9	20200-20207	avoided	
158-10	20207-20208	,	
158-11	20209-20212	but	
158-12	20213-20215	if	
158-13	20216-20217	a	
158-14	20218-20223	table	
158-15	20224-20227	has	
158-16	20228-20229	a	
158-17	20230-20235	large	
158-18	20236-20242	number	
158-19	20243-20245	of	
158-20	20246-20251	table	
158-21	20252-20257	scans	
158-22	20257-20258	,	
158-23	20259-20262	the	
158-24	20263-20270	indices	
158-25	20271-20278	defined	
158-26	20279-20282	for	
158-27	20283-20287	that	
158-28	20288-20293	table	
158-29	20294-20300	should	
158-30	20301-20303	be	
158-31	20304-20312	reviewed	
158-32	20312-20313	.	

#Text=Often the list of table scans and the list of temp indices will overlap; fixing one will remove the other.
159-1	20314-20319	Often	
159-2	20320-20323	the	
159-3	20324-20328	list	
159-4	20329-20331	of	
159-5	20332-20337	table	
159-6	20338-20343	scans	
159-7	20344-20347	and	
159-8	20348-20351	the	
159-9	20352-20356	list	
159-10	20357-20359	of	
159-11	20360-20364	temp	
159-12	20365-20372	indices	
159-13	20373-20377	will	
159-14	20378-20385	overlap	
159-15	20385-20386	;	
159-16	20387-20393	fixing	
159-17	20394-20397	one	
159-18	20398-20402	will	
159-19	20403-20409	remove	
159-20	20410-20413	the	
159-21	20414-20419	other	
159-22	20419-20420	.	

#Text=The result set lists the tables from largest Block Count to smallest Block Count.
160-1	20421-20424	The	
160-2	20425-20431	result	
160-3	20432-20435	set	
160-4	20436-20441	lists	
160-5	20442-20445	the	
160-6	20446-20452	tables	
160-7	20453-20457	from	
160-8	20458-20465	largest	
160-9	20466-20471	Block	
160-10	20472-20477	Count	
160-11	20478-20480	to	
160-12	20481-20489	smallest	
160-13	20490-20495	Block	
160-14	20496-20501	Count	
160-15	20501-20502	.	

#Text=A Show Plan link is provided to display the Statement Text and Query Plan.
161-1	20503-20504	A	
161-2	20505-20509	Show	
161-3	20510-20514	Plan	
161-4	20515-20519	link	
161-5	20520-20522	is	
161-6	20523-20531	provided	
161-7	20532-20534	to	
161-8	20535-20542	display	
161-9	20543-20546	the	
161-10	20547-20556	Statement	
161-11	20557-20561	Text	
161-12	20562-20565	and	
161-13	20566-20571	Query	
161-14	20572-20576	Plan	
161-15	20576-20577	.	

#Text=The corresponding method is tableScans() in the %SYS.PTools.UtilSQLAnalysis class.
162-1	20578-20581	The	
162-2	20582-20595	corresponding	
162-3	20596-20602	method	
162-4	20603-20605	is	
162-5	20606-20616	tableScans	
162-6	20616-20617	(	
162-7	20617-20618	)	
162-8	20619-20621	in	
162-9	20622-20625	the	
162-10	20626-20627	%	
162-11	20627-20653	SYS.PTools.UtilSQLAnalysis	
162-12	20654-20659	class	
162-13	20659-20660	.	

#Text=To export analytic data generated by this method, use the exportTSAnalysis() method.
163-1	20661-20663	To	
163-2	20664-20670	export	
163-3	20671-20679	analytic	
163-4	20680-20684	data	
163-5	20685-20694	generated	
163-6	20695-20697	by	
163-7	20698-20702	this	
163-8	20703-20709	method	
163-9	20709-20710	,	
163-10	20711-20714	use	
163-11	20715-20718	the	
163-12	20719-20735	exportTSAnalysis	
163-13	20735-20736	(	
163-14	20736-20737	)	
163-15	20738-20744	method	
163-16	20744-20745	.	

#Text=Queries with Temp Indices: This option identifies all queries in the current namespace that build temporary indices to resolve the SQL.
164-1	20746-20753	Queries	
164-2	20754-20758	with	
164-3	20759-20763	Temp	
164-4	20764-20771	Indices	
164-5	20771-20772	:	
164-6	20773-20777	This	
164-7	20778-20784	option	
164-8	20785-20795	identifies	
164-9	20796-20799	all	
164-10	20800-20807	queries	
164-11	20808-20810	in	
164-12	20811-20814	the	
164-13	20815-20822	current	
164-14	20823-20832	namespace	
164-15	20833-20837	that	
164-16	20838-20843	build	
164-17	20844-20853	temporary	
164-18	20854-20861	indices	
164-19	20862-20864	to	
164-20	20865-20872	resolve	
164-21	20873-20876	the	
164-22	20877-20880	SQL	
164-23	20880-20881	.	

#Text=Sometimes the use of a temp index is helpful and improves performance, for example building a small index based on a range condition that InterSystems IRIS can then use to read the master map in order.
165-1	20882-20891	Sometimes	
165-2	20892-20895	the	
165-3	20896-20899	use	
165-4	20900-20902	of	
165-5	20903-20904	a	
165-6	20905-20909	temp	
165-7	20910-20915	index	
165-8	20916-20918	is	
165-9	20919-20926	helpful	
165-10	20927-20930	and	
165-11	20931-20939	improves	
165-12	20940-20951	performance	
165-13	20951-20952	,	
165-14	20953-20956	for	
165-15	20957-20964	example	
165-16	20965-20973	building	
165-17	20974-20975	a	
165-18	20976-20981	small	
165-19	20982-20987	index	
165-20	20988-20993	based	
165-21	20994-20996	on	
165-22	20997-20998	a	
165-23	20999-21004	range	
165-24	21005-21014	condition	
165-25	21015-21019	that	
165-26	21020-21032	InterSystems	
165-27	21033-21037	IRIS	
165-28	21038-21041	can	
165-29	21042-21046	then	
165-30	21047-21050	use	
165-31	21051-21053	to	
165-32	21054-21058	read	
165-33	21059-21062	the	
165-34	21063-21069	master	
165-35	21070-21073	map	
165-36	21074-21076	in	
165-37	21077-21082	order	
165-38	21082-21083	.	

#Text=Sometimes a temp index is simply a subset of a different index and might be very efficient.
166-1	21084-21093	Sometimes	
166-2	21094-21095	a	
166-3	21096-21100	temp	
166-4	21101-21106	index	
166-5	21107-21109	is	
166-6	21110-21116	simply	
166-7	21117-21118	a	
166-8	21119-21125	subset	
166-9	21126-21128	of	
166-10	21129-21130	a	
166-11	21131-21140	different	
166-12	21141-21146	index	
166-13	21147-21150	and	
166-14	21151-21156	might	
166-15	21157-21159	be	
166-16	21160-21164	very	
166-17	21165-21174	efficient	
166-18	21174-21175	.	

#Text=Other times a temporary index degrades performance, for example scanning the master map to build a temporary index on a property that has a condition.
167-1	21176-21181	Other	
167-2	21182-21187	times	
167-3	21188-21189	a	
167-4	21190-21199	temporary	
167-5	21200-21205	index	
167-6	21206-21214	degrades	
167-7	21215-21226	performance	
167-8	21226-21227	,	
167-9	21228-21231	for	
167-10	21232-21239	example	
167-11	21240-21248	scanning	
167-12	21249-21252	the	
167-13	21253-21259	master	
167-14	21260-21263	map	
167-15	21264-21266	to	
167-16	21267-21272	build	
167-17	21273-21274	a	
167-18	21275-21284	temporary	
167-19	21285-21290	index	
167-20	21291-21293	on	
167-21	21294-21295	a	
167-22	21296-21304	property	
167-23	21305-21309	that	
167-24	21310-21313	has	
167-25	21314-21315	a	
167-26	21316-21325	condition	
167-27	21325-21326	.	

#Text=This situation indicates that a needed index is missing; you should add an index to the class that matches the temporary index.
168-1	21327-21331	This	
168-2	21332-21341	situation	
168-3	21342-21351	indicates	
168-4	21352-21356	that	
168-5	21357-21358	a	
168-6	21359-21365	needed	
168-7	21366-21371	index	
168-8	21372-21374	is	
168-9	21375-21382	missing	
168-10	21382-21383	;	
168-11	21384-21387	you	
168-12	21388-21394	should	
168-13	21395-21398	add	
168-14	21399-21401	an	
168-15	21402-21407	index	
168-16	21408-21410	to	
168-17	21411-21414	the	
168-18	21415-21420	class	
168-19	21421-21425	that	
168-20	21426-21433	matches	
168-21	21434-21437	the	
168-22	21438-21447	temporary	
168-23	21448-21453	index	
168-24	21453-21454	.	

#Text=The result set lists the tables from largest Block Count to smallest Block Count.
169-1	21455-21458	The	
169-2	21459-21465	result	
169-3	21466-21469	set	
169-4	21470-21475	lists	
169-5	21476-21479	the	
169-6	21480-21486	tables	
169-7	21487-21491	from	
169-8	21492-21499	largest	
169-9	21500-21505	Block	
169-10	21506-21511	Count	
169-11	21512-21514	to	
169-12	21515-21523	smallest	
169-13	21524-21529	Block	
169-14	21530-21535	Count	
169-15	21535-21536	.	

#Text=A Show Plan link is provided to display the Statement Text and Query Plan.
170-1	21537-21538	A	
170-2	21539-21543	Show	
170-3	21544-21548	Plan	
170-4	21549-21553	link	
170-5	21554-21556	is	
170-6	21557-21565	provided	
170-7	21566-21568	to	
170-8	21569-21576	display	
170-9	21577-21580	the	
170-10	21581-21590	Statement	
170-11	21591-21595	Text	
170-12	21596-21599	and	
170-13	21600-21605	Query	
170-14	21606-21610	Plan	
170-15	21610-21611	.	

#Text=The corresponding method is tempIndices() in the %SYS.PTools.UtilSQLAnalysis class.
171-1	21612-21615	The	
171-2	21616-21629	corresponding	
171-3	21630-21636	method	
171-4	21637-21639	is	
171-5	21640-21651	tempIndices	
171-6	21651-21652	(	
171-7	21652-21653	)	
171-8	21654-21656	in	
171-9	21657-21660	the	
171-10	21661-21662	%	
171-11	21662-21688	SYS.PTools.UtilSQLAnalysis	
171-12	21689-21694	class	
171-13	21694-21695	.	

#Text=To export analytic data generated by this method, use the exportTIAnalysis() method.
172-1	21696-21698	To	
172-2	21699-21705	export	
172-3	21706-21714	analytic	
172-4	21715-21719	data	
172-5	21720-21729	generated	
172-6	21730-21732	by	
172-7	21733-21737	this	
172-8	21738-21744	method	
172-9	21744-21745	,	
172-10	21746-21749	use	
172-11	21750-21753	the	
172-12	21754-21770	exportTIAnalysis	
172-13	21770-21771	(	
172-14	21771-21772	)	
172-15	21773-21779	method	
172-16	21779-21780	.	

#Text=Queries with Missing JOIN Indices: This option examines all queries in the current namespace that have joins, and determines if there is an index defined to support that join.
173-1	21781-21788	Queries	
173-2	21789-21793	with	
173-3	21794-21801	Missing	
173-4	21802-21806	JOIN	
173-5	21807-21814	Indices	
173-6	21814-21815	:	
173-7	21816-21820	This	
173-8	21821-21827	option	
173-9	21828-21836	examines	
173-10	21837-21840	all	
173-11	21841-21848	queries	
173-12	21849-21851	in	
173-13	21852-21855	the	
173-14	21856-21863	current	
173-15	21864-21873	namespace	
173-16	21874-21878	that	
173-17	21879-21883	have	
173-18	21884-21889	joins	
173-19	21889-21890	,	
173-20	21891-21894	and	
173-21	21895-21905	determines	
173-22	21906-21908	if	
173-23	21909-21914	there	
173-24	21915-21917	is	
173-25	21918-21920	an	
173-26	21921-21926	index	
173-27	21927-21934	defined	
173-28	21935-21937	to	
173-29	21938-21945	support	
173-30	21946-21950	that	
173-31	21951-21955	join	
173-32	21955-21956	.	

#Text=It ranks the indices available to support the joins from 0 (no index present) to 4 (index fully supports the join).
174-1	21957-21959	It	
174-2	21960-21965	ranks	
174-3	21966-21969	the	
174-4	21970-21977	indices	
174-5	21978-21987	available	
174-6	21988-21990	to	
174-7	21991-21998	support	
174-8	21999-22002	the	
174-9	22003-22008	joins	
174-10	22009-22013	from	
174-11	22014-22015	0	
174-12	22016-22017	(	
174-13	22017-22019	no	
174-14	22020-22025	index	
174-15	22026-22033	present	
174-16	22033-22034	)	
174-17	22035-22037	to	
174-18	22038-22039	4	
174-19	22040-22041	(	
174-20	22041-22046	index	
174-21	22047-22052	fully	
174-22	22053-22061	supports	
174-23	22062-22065	the	
174-24	22066-22070	join	
174-25	22070-22071	)	
174-26	22071-22072	.	

#Text=Outer joins require an index in one direction.
175-1	22073-22078	Outer	
175-2	22079-22084	joins	
175-3	22085-22092	require	
175-4	22093-22095	an	
175-5	22096-22101	index	
175-6	22102-22104	in	
175-7	22105-22108	one	
175-8	22109-22118	direction	
175-9	22118-22119	.	

#Text=Inner joins require an index in both directions.
176-1	22120-22125	Inner	
176-2	22126-22131	joins	
176-3	22132-22139	require	
176-4	22140-22142	an	
176-5	22143-22148	index	
176-6	22149-22151	in	
176-7	22152-22156	both	
176-8	22157-22167	directions	
176-9	22167-22168	.	

#Text=By default, the result set only contains rows that have a JoinIndexFlag < 4.
177-1	22169-22171	By	
177-2	22172-22179	default	
177-3	22179-22180	,	
177-4	22181-22184	the	
177-5	22185-22191	result	
177-6	22192-22195	set	
177-7	22196-22200	only	
177-8	22201-22209	contains	
177-9	22210-22214	rows	
177-10	22215-22219	that	
177-11	22220-22224	have	
177-12	22225-22226	a	
177-13	22227-22240	JoinIndexFlag	
177-14	22241-22242	<	
177-15	22243-22244	4	
177-16	22244-22245	.	

#Text=JoinIndexFlag=4 means there is an index that fully supports the join.
178-1	22246-22259	JoinIndexFlag	
178-2	22259-22260	=	
178-3	22260-22261	4	
178-4	22262-22267	means	
178-5	22268-22273	there	
178-6	22274-22276	is	
178-7	22277-22279	an	
178-8	22280-22285	index	
178-9	22286-22290	that	
178-10	22291-22296	fully	
178-11	22297-22305	supports	
178-12	22306-22309	the	
178-13	22310-22314	join	
178-14	22314-22315	.	

#Text=The corresponding method is joinIndices() in the %SYS.PTools.UtilSQLAnalysis class, which provides descriptions of the JoinIndexFlag values.
179-1	22316-22319	The	
179-2	22320-22333	corresponding	
179-3	22334-22340	method	
179-4	22341-22343	is	
179-5	22344-22355	joinIndices	
179-6	22355-22356	(	
179-7	22356-22357	)	
179-8	22358-22360	in	
179-9	22361-22364	the	
179-10	22365-22366	%	
179-11	22366-22392	SYS.PTools.UtilSQLAnalysis	
179-12	22393-22398	class	
179-13	22398-22399	,	
179-14	22400-22405	which	
179-15	22406-22414	provides	
179-16	22415-22427	descriptions	
179-17	22428-22430	of	
179-18	22431-22434	the	
179-19	22435-22448	JoinIndexFlag	
179-20	22449-22455	values	
179-21	22455-22456	.	

#Text=To export analytic data generated by this method, use the exportJIAnalysis() method.
180-1	22457-22459	To	
180-2	22460-22466	export	
180-3	22467-22475	analytic	
180-4	22476-22480	data	
180-5	22481-22490	generated	
180-6	22491-22493	by	
180-7	22494-22498	this	
180-8	22499-22505	method	
180-9	22505-22506	,	
180-10	22507-22510	use	
180-11	22511-22514	the	
180-12	22515-22531	exportJIAnalysis	
180-13	22531-22532	(	
180-14	22532-22533	)	
180-15	22534-22540	method	
180-16	22540-22541	.	

#Text=By default, exportJIAnalysis() does not list JoinIndexFlag=4 values, but they can optionally be listed.
181-1	22542-22544	By	
181-2	22545-22552	default	
181-3	22552-22553	,	
181-4	22554-22570	exportJIAnalysis	
181-5	22570-22571	(	
181-6	22571-22572	)	
181-7	22573-22577	does	
181-8	22578-22581	not	
181-9	22582-22586	list	
181-10	22587-22600	JoinIndexFlag	
181-11	22600-22601	=	
181-12	22601-22602	4	
181-13	22603-22609	values	
181-14	22609-22610	,	
181-15	22611-22614	but	
181-16	22615-22619	they	
181-17	22620-22623	can	
181-18	22624-22634	optionally	
181-19	22635-22637	be	
181-20	22638-22644	listed	
181-21	22644-22645	.	

#Text=Queries with Outlier Indices: This option identifies all queries in the current namespace that have outliers, and determines if there is an index defined to support that outlier.
182-1	22646-22653	Queries	
182-2	22654-22658	with	
182-3	22659-22666	Outlier	
182-4	22667-22674	Indices	
182-5	22674-22675	:	
182-6	22676-22680	This	
182-7	22681-22687	option	
182-8	22688-22698	identifies	
182-9	22699-22702	all	
182-10	22703-22710	queries	
182-11	22711-22713	in	
182-12	22714-22717	the	
182-13	22718-22725	current	
182-14	22726-22735	namespace	
182-15	22736-22740	that	
182-16	22741-22745	have	
182-17	22746-22754	outliers	
182-18	22754-22755	,	
182-19	22756-22759	and	
182-20	22760-22770	determines	
182-21	22771-22773	if	
182-22	22774-22779	there	
182-23	22780-22782	is	
182-24	22783-22785	an	
182-25	22786-22791	index	
182-26	22792-22799	defined	
182-27	22800-22802	to	
182-28	22803-22810	support	
182-29	22811-22815	that	
182-30	22816-22823	outlier	
182-31	22823-22824	.	

#Text=It ranks the indices available to support the outlier from 0 (no index present) to 4 (index fully supports the outlier).
183-1	22825-22827	It	
183-2	22828-22833	ranks	
183-3	22834-22837	the	
183-4	22838-22845	indices	
183-5	22846-22855	available	
183-6	22856-22858	to	
183-7	22859-22866	support	
183-8	22867-22870	the	
183-9	22871-22878	outlier	
183-10	22879-22883	from	
183-11	22884-22885	0	
183-12	22886-22887	(	
183-13	22887-22889	no	
183-14	22890-22895	index	
183-15	22896-22903	present	
183-16	22903-22904	)	
183-17	22905-22907	to	
183-18	22908-22909	4	
183-19	22910-22911	(	
183-20	22911-22916	index	
183-21	22917-22922	fully	
183-22	22923-22931	supports	
183-23	22932-22935	the	
183-24	22936-22943	outlier	
183-25	22943-22944	)	
183-26	22944-22945	.	

#Text=By default, the result set only contains rows that have a OutlierIndexFlag < 4.
184-1	22946-22948	By	
184-2	22949-22956	default	
184-3	22956-22957	,	
184-4	22958-22961	the	
184-5	22962-22968	result	
184-6	22969-22972	set	
184-7	22973-22977	only	
184-8	22978-22986	contains	
184-9	22987-22991	rows	
184-10	22992-22996	that	
184-11	22997-23001	have	
184-12	23002-23003	a	
184-13	23004-23020	OutlierIndexFlag	
184-14	23021-23022	<	
184-15	23023-23024	4	
184-16	23024-23025	.	

#Text=OutlierIndexFlag=4 means there is an index that fully supports the outlier.
185-1	23026-23042	OutlierIndexFlag	
185-2	23042-23043	=	
185-3	23043-23044	4	
185-4	23045-23050	means	
185-5	23051-23056	there	
185-6	23057-23059	is	
185-7	23060-23062	an	
185-8	23063-23068	index	
185-9	23069-23073	that	
185-10	23074-23079	fully	
185-11	23080-23088	supports	
185-12	23089-23092	the	
185-13	23093-23100	outlier	
185-14	23100-23101	.	

#Text=The corresponding method is outlierIndices() in the %SYS.PTools.UtilSQLAnalysis class.
186-1	23102-23105	The	
186-2	23106-23119	corresponding	
186-3	23120-23126	method	
186-4	23127-23129	is	
186-5	23130-23144	outlierIndices	
186-6	23144-23145	(	
186-7	23145-23146	)	
186-8	23147-23149	in	
186-9	23150-23153	the	
186-10	23154-23155	%	
186-11	23155-23181	SYS.PTools.UtilSQLAnalysis	
186-12	23182-23187	class	
186-13	23187-23188	.	

#Text=To export analytic data generated by this method, use the exportOIAnalysis() method.
187-1	23189-23191	To	
187-2	23192-23198	export	
187-3	23199-23207	analytic	
187-4	23208-23212	data	
187-5	23213-23222	generated	
187-6	23223-23225	by	
187-7	23226-23230	this	
187-8	23231-23237	method	
187-9	23237-23238	,	
187-10	23239-23242	use	
187-11	23243-23246	the	
187-12	23247-23263	exportOIAnalysis	
187-13	23263-23264	(	
187-14	23264-23265	)	
187-15	23266-23272	method	
187-16	23272-23273	.	

#Text=By default, exportOIAnalysis() does not list OutlierIndexFlag=4 values, but they can optionally be listed.
188-1	23274-23276	By	
188-2	23277-23284	default	
188-3	23284-23285	,	
188-4	23286-23302	exportOIAnalysis	
188-5	23302-23303	(	
188-6	23303-23304	)	
188-7	23305-23309	does	
188-8	23310-23313	not	
188-9	23314-23318	list	
188-10	23319-23335	OutlierIndexFlag	
188-11	23335-23336	=	
188-12	23336-23337	4	
188-13	23338-23344	values	
188-14	23344-23345	,	
188-15	23346-23349	but	
188-16	23350-23354	they	
188-17	23355-23358	can	
188-18	23359-23369	optionally	
188-19	23370-23372	be	
188-20	23373-23379	listed	
188-21	23379-23380	.	

#Text=When you select one of these options, the system automatically performs the operation and displays the results.
189-1	23381-23385	When	
189-2	23386-23389	you	
189-3	23390-23396	select	
189-4	23397-23400	one	
189-5	23401-23403	of	
189-6	23404-23409	these	
189-7	23410-23417	options	
189-8	23417-23418	,	
189-9	23419-23422	the	
189-10	23423-23429	system	
189-11	23430-23443	automatically	
189-12	23444-23452	performs	
189-13	23453-23456	the	
189-14	23457-23466	operation	
189-15	23467-23470	and	
189-16	23471-23479	displays	
189-17	23480-23483	the	
189-18	23484-23491	results	
189-19	23491-23492	.	

#Text=The first time you select an option or invoke the corresponding method, the system generates the results data; if you select that option or invoke that method again, InterSystems IRIS redisplays the same results.
190-1	23493-23496	The	
190-2	23497-23502	first	
190-3	23503-23507	time	
190-4	23508-23511	you	
190-5	23512-23518	select	
190-6	23519-23521	an	
190-7	23522-23528	option	
190-8	23529-23531	or	
190-9	23532-23538	invoke	
190-10	23539-23542	the	
190-11	23543-23556	corresponding	
190-12	23557-23563	method	
190-13	23563-23564	,	
190-14	23565-23568	the	
190-15	23569-23575	system	
190-16	23576-23585	generates	
190-17	23586-23589	the	
190-18	23590-23597	results	
190-19	23598-23602	data	
190-20	23602-23603	;	
190-21	23604-23606	if	
190-22	23607-23610	you	
190-23	23611-23617	select	
190-24	23618-23622	that	
190-25	23623-23629	option	
190-26	23630-23632	or	
190-27	23633-23639	invoke	
190-28	23640-23644	that	
190-29	23645-23651	method	
190-30	23652-23657	again	
190-31	23657-23658	,	
190-32	23659-23671	InterSystems	
190-33	23672-23676	IRIS	
190-34	23677-23687	redisplays	
190-35	23688-23691	the	
190-36	23692-23696	same	
190-37	23697-23704	results	
190-38	23704-23705	.	

#Text=To generate new results data you must use the Gather SQL Statements button to reinitialize the Index Analyzer results tables.
191-1	23706-23708	To	
191-2	23709-23717	generate	
191-3	23718-23721	new	
191-4	23722-23729	results	
191-5	23730-23734	data	
191-6	23735-23738	you	
191-7	23739-23743	must	
191-8	23744-23747	use	
191-9	23748-23751	the	
191-10	23752-23758	Gather	
191-11	23759-23762	SQL	
191-12	23763-23773	Statements	
191-13	23774-23780	button	
191-14	23781-23783	to	
191-15	23784-23796	reinitialize	
191-16	23797-23800	the	
191-17	23801-23806	Index	
191-18	23807-23815	Analyzer	
191-19	23816-23823	results	
191-20	23824-23830	tables	
191-21	23830-23831	.	

#Text=To generate new results data for the %SYS.PTools.UtilSQLAnalysis methods, you must invoke getSQLStmts() to reinitialize the Index Analyzer results tables.
192-1	23832-23834	To	
192-2	23835-23843	generate	
192-3	23844-23847	new	
192-4	23848-23855	results	
192-5	23856-23860	data	
192-6	23861-23864	for	
192-7	23865-23868	the	
192-8	23869-23870	%	
192-9	23870-23896	SYS.PTools.UtilSQLAnalysis	
192-10	23897-23904	methods	
192-11	23904-23905	,	
192-12	23906-23909	you	
192-13	23910-23914	must	
192-14	23915-23921	invoke	
192-15	23922-23933	getSQLStmts	
192-16	23933-23934	(	
192-17	23934-23935	)	
192-18	23936-23938	to	
192-19	23939-23951	reinitialize	
192-20	23952-23955	the	
192-21	23956-23961	Index	
192-22	23962-23970	Analyzer	
192-23	23971-23978	results	
192-24	23979-23985	tables	
192-25	23985-23986	.	

#Text=Changing the Skip all system classes and routines or Skip INSERT statements check box option also reinitializes the Index Analyzer results tables.
#Text=indexUsage() MethodCopy link to this section
#Text=The following example demonstrates the use of the indexUsage() method:
#Text=DO ##class(%SYS.PTools.UtilSQLAnalysis).indexUsage(1,1)
#Text=SET utils = "SELECT %EXACT(Type), Count(*) As QueryCount "_
#Text="FROM %SYS_PTools.UtilSQLStatements GROUP BY Type"
#Text=SET utilresults = "SELECT SchemaName, Tablename, IndexName, UsageCount "_
#Text="FROM %SYS_PTools.UtilSQLAnalysisDB ORDER BY UsageCount"
#Text=SET tStatement = ##class(%SQL.Statement).
193-1	23987-23995	Changing	
193-2	23996-23999	the	
193-3	24000-24004	Skip	
193-4	24005-24008	all	
193-5	24009-24015	system	
193-6	24016-24023	classes	
193-7	24024-24027	and	
193-8	24028-24036	routines	
193-9	24037-24039	or	
193-10	24040-24044	Skip	
193-11	24045-24051	INSERT	
193-12	24052-24062	statements	
193-13	24063-24068	check	
193-14	24069-24072	box	
193-15	24073-24079	option	
193-16	24080-24084	also	
193-17	24085-24098	reinitializes	
193-18	24099-24102	the	
193-19	24103-24108	Index	
193-20	24109-24117	Analyzer	
193-21	24118-24125	results	
193-22	24126-24132	tables	
193-23	24132-24133	.	
193-24	24134-24144	indexUsage	
193-25	24144-24145	(	
193-26	24145-24146	)	
193-27	24147-24157	MethodCopy	
193-28	24158-24162	link	
193-29	24163-24165	to	
193-30	24166-24170	this	
193-31	24171-24178	section	
193-32	24179-24182	The	
193-33	24183-24192	following	
193-34	24193-24200	example	
193-35	24201-24213	demonstrates	
193-36	24214-24217	the	
193-37	24218-24221	use	
193-38	24222-24224	of	
193-39	24225-24228	the	
193-40	24229-24239	indexUsage	
193-41	24239-24240	(	
193-42	24240-24241	)	
193-43	24242-24248	method	
193-44	24248-24249	:	
193-45	24250-24252	DO	
193-46	24253-24254	#	
193-47	24254-24255	#	
193-48	24255-24260	class	
193-49	24260-24261	(	
193-50	24261-24262	%	
193-51	24262-24288	SYS.PTools.UtilSQLAnalysis	
193-52	24288-24289	)	
193-53	24289-24290	.	
193-54	24290-24300	indexUsage	
193-55	24300-24301	(	
193-56	24301-24304	1,1	
193-57	24304-24305	)	
193-58	24306-24309	SET	
193-59	24310-24315	utils	
193-60	24316-24317	=	
193-61	24318-24319	"	
193-62	24319-24325	SELECT	
193-63	24326-24327	%	
193-64	24327-24332	EXACT	
193-65	24332-24333	(	
193-66	24333-24337	Type	
193-67	24337-24338	)	
193-68	24338-24339	,	
193-69	24340-24345	Count	
193-70	24345-24346	(	
193-71	24346-24347	*	
193-72	24347-24348	)	
193-73	24349-24351	As	
193-74	24352-24362	QueryCount	
193-75	24363-24364	"	
193-76	24364-24365	_	
193-77	24366-24367	"	
193-78	24367-24371	FROM	
193-79	24372-24373	%	
193-80	24373-24401	SYS_PTools.UtilSQLStatements	
193-81	24402-24407	GROUP	
193-82	24408-24410	BY	
193-83	24411-24415	Type	
193-84	24415-24416	"	
193-85	24417-24420	SET	
193-86	24421-24432	utilresults	
193-87	24433-24434	=	
193-88	24435-24436	"	
193-89	24436-24442	SELECT	
193-90	24443-24453	SchemaName	
193-91	24453-24454	,	
193-92	24455-24464	Tablename	
193-93	24464-24465	,	
193-94	24466-24475	IndexName	
193-95	24475-24476	,	
193-96	24477-24487	UsageCount	
193-97	24488-24489	"	
193-98	24489-24490	_	
193-99	24491-24492	"	
193-100	24492-24496	FROM	
193-101	24497-24498	%	
193-102	24498-24526	SYS_PTools.UtilSQLAnalysisDB	
193-103	24527-24532	ORDER	
193-104	24533-24535	BY	
193-105	24536-24546	UsageCount	
193-106	24546-24547	"	
193-107	24548-24551	SET	
193-108	24552-24562	tStatement	
193-109	24563-24564	=	
193-110	24565-24566	#	
193-111	24566-24567	#	
193-112	24567-24572	class	
193-113	24572-24573	(	
193-114	24573-24574	%	
193-115	24574-24587	SQL.Statement	
193-116	24587-24588	)	
193-117	24588-24589	.	

#Text=%New()
#Text=SET qStatus = tStatement.
194-1	24589-24590	%	
194-2	24590-24593	New	
194-3	24593-24594	(	
194-4	24594-24595	)	
194-5	24596-24599	SET	
194-6	24600-24607	qStatus	
194-7	24608-24609	=	
194-8	24610-24620	tStatement	
194-9	24620-24621	.	

#Text=%Prepare(utils)
#Text=IF qStatus'=1 {WRITE "%Prepare failed:" DO $System.Status.DisplayError(qStatus) QUIT}
#Text=SET rset = tStatement.
195-1	24621-24622	%	
195-2	24622-24629	Prepare	
195-3	24629-24630	(	
195-4	24630-24635	utils	
195-5	24635-24636	)	
195-6	24637-24639	IF	
195-7	24640-24647	qStatus	
195-8	24647-24648	'	
195-9	24648-24649	=	
195-10	24649-24650	1	
195-11	24651-24652	{	
195-12	24652-24657	WRITE	
195-13	24658-24659	"	
195-14	24659-24660	%	
195-15	24660-24667	Prepare	
195-16	24668-24674	failed	
195-17	24674-24675	:	
195-18	24675-24676	"	
195-19	24677-24679	DO	
195-20	24680-24681	$	
195-21	24681-24707	System.Status.DisplayError	
195-22	24707-24708	(	
195-23	24708-24715	qStatus	
195-24	24715-24716	)	
195-25	24717-24721	QUIT	
195-26	24721-24722	}	
195-27	24723-24726	SET	
195-28	24727-24731	rset	
195-29	24732-24733	=	
195-30	24734-24744	tStatement	
195-31	24744-24745	.	

#Text=%Execute()
#Text=DO rset.
196-1	24745-24746	%	
196-2	24746-24753	Execute	
196-3	24753-24754	(	
196-4	24754-24755	)	
196-5	24756-24758	DO	
196-6	24759-24763	rset	
196-7	24763-24764	.	

#Text=%Display()
#Text=WRITE !
197-1	24764-24765	%	
197-2	24765-24772	Display	
197-3	24772-24773	(	
197-4	24773-24774	)	
197-5	24775-24780	WRITE	
197-6	24781-24782	!	

#Text=,"End of utilities data",!!
198-1	24782-24783	,	
198-2	24783-24784	"	
198-3	24784-24787	End	
198-4	24788-24790	of	
198-5	24791-24800	utilities	
198-6	24801-24805	data	
198-7	24805-24806	"	
198-8	24806-24807	,	
198-9	24807-24808	!	
198-10	24808-24809	!	

#Text=SET qStatus = tStatement.
199-1	24810-24813	SET	
199-2	24814-24821	qStatus	
199-3	24822-24823	=	
199-4	24824-24834	tStatement	
199-5	24834-24835	.	

#Text=%Prepare(utilresults)
#Text=IF qStatus'=1 {WRITE "%Prepare failed:" DO $System.Status.DisplayError(qStatus) QUIT}
#Text=SET rset = tStatement.
200-1	24835-24836	%	
200-2	24836-24843	Prepare	
200-3	24843-24844	(	
200-4	24844-24855	utilresults	
200-5	24855-24856	)	
200-6	24857-24859	IF	
200-7	24860-24867	qStatus	
200-8	24867-24868	'	
200-9	24868-24869	=	
200-10	24869-24870	1	
200-11	24871-24872	{	
200-12	24872-24877	WRITE	
200-13	24878-24879	"	
200-14	24879-24880	%	
200-15	24880-24887	Prepare	
200-16	24888-24894	failed	
200-17	24894-24895	:	
200-18	24895-24896	"	
200-19	24897-24899	DO	
200-20	24900-24901	$	
200-21	24901-24927	System.Status.DisplayError	
200-22	24927-24928	(	
200-23	24928-24935	qStatus	
200-24	24935-24936	)	
200-25	24937-24941	QUIT	
200-26	24941-24942	}	
200-27	24943-24946	SET	
200-28	24947-24951	rset	
200-29	24952-24953	=	
200-30	24954-24964	tStatement	
200-31	24964-24965	.	

#Text=%Execute()
#Text=DO rset.
201-1	24965-24966	%	
201-2	24966-24973	Execute	
201-3	24973-24974	(	
201-4	24974-24975	)	
201-5	24976-24978	DO	
201-6	24979-24983	rset	
201-7	24983-24984	.	

#Text=%Display()
#Text=WRITE !
202-1	24984-24985	%	
202-2	24985-24992	Display	
202-3	24992-24993	(	
202-4	24993-24994	)	
202-5	24995-25000	WRITE	
202-6	25001-25002	!	

#Text=,"End of results data"
#Text=Copy code to clipboard
#Text=Note that because results are ordered by UsageCount, indices with UsageCount > 0 are listed at the end of the result set.
203-1	25002-25003	,	
203-2	25003-25004	"	
203-3	25004-25007	End	
203-4	25008-25010	of	
203-5	25011-25018	results	
203-6	25019-25023	data	
203-7	25023-25024	"	
203-8	25025-25029	Copy	
203-9	25030-25034	code	
203-10	25035-25037	to	
203-11	25038-25047	clipboard	
203-12	25048-25052	Note	
203-13	25053-25057	that	
203-14	25058-25065	because	
203-15	25066-25073	results	
203-16	25074-25077	are	
203-17	25078-25085	ordered	
203-18	25086-25088	by	
203-19	25089-25099	UsageCount	
203-20	25099-25100	,	
203-21	25101-25108	indices	
203-22	25109-25113	with	
203-23	25114-25124	UsageCount	
203-24	25125-25126	>	
203-25	25127-25128	0	
203-26	25129-25132	are	
203-27	25133-25139	listed	
203-28	25140-25142	at	
203-29	25143-25146	the	
203-30	25147-25150	end	
203-31	25151-25153	of	
203-32	25154-25157	the	
203-33	25158-25164	result	
203-34	25165-25168	set	
203-35	25168-25169	.	

#Text=Methods in this class can be invoked either from ObjectScript, or from the SQL CALL or SELECT command.
204-1	25170-25177	Methods	
204-2	25178-25180	in	
204-3	25181-25185	this	
204-4	25186-25191	class	
204-5	25192-25195	can	
204-6	25196-25198	be	
204-7	25199-25206	invoked	
204-8	25207-25213	either	
204-9	25214-25218	from	
204-10	25219-25231	ObjectScript	
204-11	25231-25232	,	
204-12	25233-25235	or	
204-13	25236-25240	from	
204-14	25241-25244	the	
204-15	25245-25248	SQL	
204-16	25249-25253	CALL	
204-17	25254-25256	or	
204-18	25257-25263	SELECT	
204-19	25264-25271	command	
204-20	25271-25272	.	

#Text=The SQL naming convention is to specify the package name %SYS_PTools, then prefix &OpenCurlyDoubleQuotePT_&CloseCurlyDoubleQuote to the method name that begins with a lower-case letter.
205-1	25273-25276	The	
205-2	25277-25280	SQL	
205-3	25281-25287	naming	
205-4	25288-25298	convention	
205-5	25299-25301	is	
205-6	25302-25304	to	
205-7	25305-25312	specify	
205-8	25313-25316	the	
205-9	25317-25324	package	
205-10	25325-25329	name	
205-11	25330-25331	%	
205-12	25331-25341	SYS_PTools	
205-13	25341-25342	,	
205-14	25343-25347	then	
205-15	25348-25354	prefix	
205-16	25355-25356	&	
205-17	25356-25378	OpenCurlyDoubleQuotePT	
205-18	25378-25379	_	
205-19	25379-25380	&	
205-20	25380-25401	CloseCurlyDoubleQuote	
205-21	25402-25404	to	
205-22	25405-25408	the	
205-23	25409-25415	method	
205-24	25416-25420	name	
205-25	25421-25425	that	
205-26	25426-25432	begins	
205-27	25433-25437	with	
205-28	25438-25439	a	
205-29	25440-25450	lower-case	
205-30	25451-25457	letter	
205-31	25457-25458	.	

#Text=This is shown in the following examples:
#Text=ObjectScript:
#Text=DO ##class(%SYS.PTools.UtilSQLAnalysis).indexUsage()
#Text=Copy code to clipboard
#Text=SQL:
#Text=CALL %SYS_PTools.PT_indexUsage()
#Text=Copy code to clipboard
#Text=SELECT %SYS_PTools.PT_indexUsage()
#Text=Copy code to clipboard
#Text=Index Optimization OptionsCopy link to this section
#Text=By default, the InterSystems SQL query optimizer uses sophisticated and flexible algorithms to optimize the performance of complex queries involving multiple indices.
206-1	25459-25463	This	
206-2	25464-25466	is	
206-3	25467-25472	shown	
206-4	25473-25475	in	
206-5	25476-25479	the	
206-6	25480-25489	following	
206-7	25490-25498	examples	
206-8	25498-25499	:	
206-9	25500-25512	ObjectScript	
206-10	25512-25513	:	
206-11	25514-25516	DO	
206-12	25517-25518	#	
206-13	25518-25519	#	
206-14	25519-25524	class	
206-15	25524-25525	(	
206-16	25525-25526	%	
206-17	25526-25552	SYS.PTools.UtilSQLAnalysis	
206-18	25552-25553	)	
206-19	25553-25554	.	
206-20	25554-25564	indexUsage	
206-21	25564-25565	(	
206-22	25565-25566	)	
206-23	25567-25571	Copy	
206-24	25572-25576	code	
206-25	25577-25579	to	
206-26	25580-25589	clipboard	
206-27	25590-25593	SQL	
206-28	25593-25594	:	
206-29	25595-25599	CALL	
206-30	25600-25601	%	
206-31	25601-25625	SYS_PTools.PT_indexUsage	
206-32	25625-25626	(	
206-33	25626-25627	)	
206-34	25628-25632	Copy	
206-35	25633-25637	code	
206-36	25638-25640	to	
206-37	25641-25650	clipboard	
206-38	25651-25657	SELECT	
206-39	25658-25659	%	
206-40	25659-25683	SYS_PTools.PT_indexUsage	
206-41	25683-25684	(	
206-42	25684-25685	)	
206-43	25686-25690	Copy	
206-44	25691-25695	code	
206-45	25696-25698	to	
206-46	25699-25708	clipboard	
206-47	25709-25714	Index	
206-48	25715-25727	Optimization	
206-49	25728-25739	OptionsCopy	
206-50	25740-25744	link	
206-51	25745-25747	to	
206-52	25748-25752	this	
206-53	25753-25760	section	
206-54	25761-25763	By	
206-55	25764-25771	default	
206-56	25771-25772	,	
206-57	25773-25776	the	
206-58	25777-25789	InterSystems	
206-59	25790-25793	SQL	
206-60	25794-25799	query	
206-61	25800-25809	optimizer	
206-62	25810-25814	uses	
206-63	25815-25828	sophisticated	
206-64	25829-25832	and	
206-65	25833-25841	flexible	
206-66	25842-25852	algorithms	
206-67	25853-25855	to	
206-68	25856-25864	optimize	
206-69	25865-25868	the	
206-70	25869-25880	performance	
206-71	25881-25883	of	
206-72	25884-25891	complex	
206-73	25892-25899	queries	
206-74	25900-25909	involving	
206-75	25910-25918	multiple	
206-76	25919-25926	indices	
206-77	25926-25927	.	

#Text=In most cases, these defaults provide optimal performance.
207-1	25928-25930	In	
207-2	25931-25935	most	
207-3	25936-25941	cases	
207-4	25941-25942	,	
207-5	25943-25948	these	
207-6	25949-25957	defaults	
207-7	25958-25965	provide	
207-8	25966-25973	optimal	
207-9	25974-25985	performance	
207-10	25985-25986	.	

#Text=However, in infrequent cases, you may wish to give &OpenCurlyDoubleQuotehints&CloseCurlyDoubleQuote to the query optimizer by specifying optimize-option keywords.
208-1	25987-25994	However	
208-2	25994-25995	,	
208-3	25996-25998	in	
208-4	25999-26009	infrequent	
208-5	26010-26015	cases	
208-6	26015-26016	,	
208-7	26017-26020	you	
208-8	26021-26024	may	
208-9	26025-26029	wish	
208-10	26030-26032	to	
208-11	26033-26037	give	
208-12	26038-26039	&	
208-13	26039-26064	OpenCurlyDoubleQuotehints	
208-14	26064-26065	&	
208-15	26065-26086	CloseCurlyDoubleQuote	
208-16	26087-26089	to	
208-17	26090-26093	the	
208-18	26094-26099	query	
208-19	26100-26109	optimizer	
208-20	26110-26112	by	
208-21	26113-26123	specifying	
208-22	26124-26139	optimize-option	
208-23	26140-26148	keywords	
208-24	26148-26149	.	

#Text=The FROM clause supports the %ALLINDEX and %IGNOREINDEX optimize-option keywords.
209-1	26150-26153	The	
209-2	26154-26158	FROM	
209-3	26159-26165	clause	
209-4	26166-26174	supports	
209-5	26175-26178	the	
209-6	26179-26180	%	
209-7	26180-26188	ALLINDEX	
209-8	26189-26192	and	
209-9	26193-26194	%	
209-10	26194-26205	IGNOREINDEX	
209-11	26206-26221	optimize-option	
209-12	26222-26230	keywords	
209-13	26230-26231	.	

#Text=These optimize-option keywords govern all index use in the query.
210-1	26232-26237	These	
210-2	26238-26253	optimize-option	
210-3	26254-26262	keywords	
210-4	26263-26269	govern	
210-5	26270-26273	all	
210-6	26274-26279	index	
210-7	26280-26283	use	
210-8	26284-26286	in	
210-9	26287-26290	the	
210-10	26291-26296	query	
210-11	26296-26297	.	

#Text=They are described in detail in the FROM clause reference page of the InterSystems SQL Reference.
211-1	26298-26302	They	
211-2	26303-26306	are	
211-3	26307-26316	described	
211-4	26317-26319	in	
211-5	26320-26326	detail	
211-6	26327-26329	in	
211-7	26330-26333	the	
211-8	26334-26338	FROM	
211-9	26339-26345	clause	
211-10	26346-26355	reference	
211-11	26356-26360	page	
211-12	26361-26363	of	
211-13	26364-26367	the	
211-14	26368-26380	InterSystems	
211-15	26381-26384	SQL	
211-16	26385-26394	Reference	
211-17	26394-26395	.	

#Text=You can use the %NOINDEX condition-level hint to specify exceptions to the use of an index for a specific condition.
212-1	26396-26399	You	
212-2	26400-26403	can	
212-3	26404-26407	use	
212-4	26408-26411	the	
212-5	26412-26413	%	
212-6	26413-26420	NOINDEX	
212-7	26421-26436	condition-level	
212-8	26437-26441	hint	
212-9	26442-26444	to	
212-10	26445-26452	specify	
212-11	26453-26463	exceptions	
212-12	26464-26466	to	
212-13	26467-26470	the	
212-14	26471-26474	use	
212-15	26475-26477	of	
212-16	26478-26480	an	
212-17	26481-26486	index	
212-18	26487-26490	for	
212-19	26491-26492	a	
212-20	26493-26501	specific	
212-21	26502-26511	condition	
212-22	26511-26512	.	

#Text=The %NOINDEX hint is placed in front of each condition for which no index should be used.
213-1	26513-26516	The	
213-2	26517-26518	%	
213-3	26518-26525	NOINDEX	
213-4	26526-26530	hint	
213-5	26531-26533	is	
213-6	26534-26540	placed	
213-7	26541-26543	in	
213-8	26544-26549	front	
213-9	26550-26552	of	
213-10	26553-26557	each	
213-11	26558-26567	condition	
213-12	26568-26571	for	
213-13	26572-26577	which	
213-14	26578-26580	no	
213-15	26581-26586	index	
213-16	26587-26593	should	
213-17	26594-26596	be	
213-18	26597-26601	used	
213-19	26601-26602	.	

#Text=For example, WHERE %NOINDEX hiredate < ?.
214-1	26603-26606	For	
214-2	26607-26614	example	
214-3	26614-26615	,	
214-4	26616-26621	WHERE	
214-5	26622-26623	%	
214-6	26623-26630	NOINDEX	
214-7	26631-26639	hiredate	
214-8	26640-26641	<	
214-9	26642-26643	?	
214-10	26643-26644	.	

#Text=This is most commonly used when the overwhelming majority of the data is selected (or not selected) by the condition.
215-1	26645-26649	This	
215-2	26650-26652	is	
215-3	26653-26657	most	
215-4	26658-26666	commonly	
215-5	26667-26671	used	
215-6	26672-26676	when	
215-7	26677-26680	the	
215-8	26681-26693	overwhelming	
215-9	26694-26702	majority	
215-10	26703-26705	of	
215-11	26706-26709	the	
215-12	26710-26714	data	
215-13	26715-26717	is	
215-14	26718-26726	selected	
215-15	26727-26728	(	
215-16	26728-26730	or	
215-17	26731-26734	not	
215-18	26735-26743	selected	
215-19	26743-26744	)	
215-20	26745-26747	by	
215-21	26748-26751	the	
215-22	26752-26761	condition	
215-23	26761-26762	.	

#Text=With a less-than (<) or greater-than (>) condition, use of the %NOINDEX condition-level hint is often beneficial.
216-1	26763-26767	With	
216-2	26768-26769	a	
216-3	26770-26779	less-than	
216-4	26780-26781	(	
216-5	26781-26782	<	
216-6	26782-26783	)	
216-7	26784-26786	or	
216-8	26787-26799	greater-than	
216-9	26800-26801	(	
216-10	26801-26802	>	
216-11	26802-26803	)	
216-12	26804-26813	condition	
216-13	26813-26814	,	
216-14	26815-26818	use	
216-15	26819-26821	of	
216-16	26822-26825	the	
216-17	26826-26827	%	
216-18	26827-26834	NOINDEX	
216-19	26835-26850	condition-level	
216-20	26851-26855	hint	
216-21	26856-26858	is	
216-22	26859-26864	often	
216-23	26865-26875	beneficial	
216-24	26875-26876	.	

#Text=With an equality condition, use of the %NOINDEX condition-level hint provides no benefit.
217-1	26877-26881	With	
217-2	26882-26884	an	
217-3	26885-26893	equality	
217-4	26894-26903	condition	
217-5	26903-26904	,	
217-6	26905-26908	use	
217-7	26909-26911	of	
217-8	26912-26915	the	
217-9	26916-26917	%	
217-10	26917-26924	NOINDEX	
217-11	26925-26940	condition-level	
217-12	26941-26945	hint	
217-13	26946-26954	provides	
217-14	26955-26957	no	
217-15	26958-26965	benefit	
217-16	26965-26966	.	

#Text=With a join condition, %NOINDEX is supported for ON clause joins.
218-1	26967-26971	With	
218-2	26972-26973	a	
218-3	26974-26978	join	
218-4	26979-26988	condition	
218-5	26988-26989	,	
218-6	26990-26991	%	
218-7	26991-26998	NOINDEX	
218-8	26999-27001	is	
218-9	27002-27011	supported	
218-10	27012-27015	for	
218-11	27016-27018	ON	
218-12	27019-27025	clause	
218-13	27026-27031	joins	
218-14	27031-27032	.	

#Text=The %NOINDEX keyword can be used to override indexing optimization established in the FROM clause.
219-1	27033-27036	The	
219-2	27037-27038	%	
219-3	27038-27045	NOINDEX	
219-4	27046-27053	keyword	
219-5	27054-27057	can	
219-6	27058-27060	be	
219-7	27061-27065	used	
219-8	27066-27068	to	
219-9	27069-27077	override	
219-10	27078-27086	indexing	
219-11	27087-27099	optimization	
219-12	27100-27111	established	
219-13	27112-27114	in	
219-14	27115-27118	the	
219-15	27119-27123	FROM	
219-16	27124-27130	clause	
219-17	27130-27131	.	

#Text=In the following example, the %ALLINDEX optimization keyword applies to all condition tests except the E.Age condition:
#Text=SELECT P.Name,P.Age,E.Name,E.Age
#Text=FROM %ALLINDEX Sample.Person AS P LEFT OUTER JOIN Sample.Employee AS E
#Text=ON P.Name=E.Name
#Text=WHERE P.Age > 21 AND %NOINDEX E.Age < 65
#Text=Copy code to clipboard
#Text=Query Execution PlansCopy link to this section
#Text=You can use the EXPLAIN or Show Plan tools to display an execution plan for SELECT, DECLARE, UPDATE, DELETE, TRUNCATE TABLE, and some INSERT operations.
220-1	27132-27134	In	
220-2	27135-27138	the	
220-3	27139-27148	following	
220-4	27149-27156	example	
220-5	27156-27157	,	
220-6	27158-27161	the	
220-7	27162-27163	%	
220-8	27163-27171	ALLINDEX	
220-9	27172-27184	optimization	
220-10	27185-27192	keyword	
220-11	27193-27200	applies	
220-12	27201-27203	to	
220-13	27204-27207	all	
220-14	27208-27217	condition	
220-15	27218-27223	tests	
220-16	27224-27230	except	
220-17	27231-27234	the	
220-18	27235-27240	E.Age	
220-19	27241-27250	condition	
220-20	27250-27251	:	
220-21	27252-27258	SELECT	
220-22	27259-27265	P.Name	
220-23	27265-27266	,	
220-24	27266-27271	P.Age	
220-25	27271-27272	,	
220-26	27272-27278	E.Name	
220-27	27278-27279	,	
220-28	27279-27284	E.Age	
220-29	27285-27289	FROM	
220-30	27290-27291	%	
220-31	27291-27299	ALLINDEX	
220-32	27300-27313	Sample.Person	
220-33	27314-27316	AS	
220-34	27317-27318	P	
220-35	27319-27323	LEFT	
220-36	27324-27329	OUTER	
220-37	27330-27334	JOIN	
220-38	27335-27350	Sample.Employee	
220-39	27351-27353	AS	
220-40	27354-27355	E	
220-41	27356-27358	ON	
220-42	27359-27365	P.Name	
220-43	27365-27366	=	
220-44	27366-27372	E.Name	
220-45	27373-27378	WHERE	
220-46	27379-27384	P.Age	
220-47	27385-27386	>	
220-48	27387-27389	21	
220-49	27390-27393	AND	
220-50	27394-27395	%	
220-51	27395-27402	NOINDEX	
220-52	27403-27408	E.Age	
220-53	27409-27410	<	
220-54	27411-27413	65	
220-55	27414-27418	Copy	
220-56	27419-27423	code	
220-57	27424-27426	to	
220-58	27427-27436	clipboard	
220-59	27437-27442	Query	
220-60	27443-27452	Execution	
220-61	27453-27462	PlansCopy	
220-62	27463-27467	link	
220-63	27468-27470	to	
220-64	27471-27475	this	
220-65	27476-27483	section	
220-66	27484-27487	You	
220-67	27488-27491	can	
220-68	27492-27495	use	
220-69	27496-27499	the	
220-70	27500-27507	EXPLAIN	
220-71	27508-27510	or	
220-72	27511-27515	Show	
220-73	27516-27520	Plan	
220-74	27521-27526	tools	
220-75	27527-27529	to	
220-76	27530-27537	display	
220-77	27538-27540	an	
220-78	27541-27550	execution	
220-79	27551-27555	plan	
220-80	27556-27559	for	
220-81	27560-27566	SELECT	
220-82	27566-27567	,	
220-83	27568-27575	DECLARE	
220-84	27575-27576	,	
220-85	27577-27583	UPDATE	
220-86	27583-27584	,	
220-87	27585-27591	DELETE	
220-88	27591-27592	,	
220-89	27593-27601	TRUNCATE	
220-90	27602-27607	TABLE	
220-91	27607-27608	,	
220-92	27609-27612	and	
220-93	27613-27617	some	
220-94	27618-27624	INSERT	
220-95	27625-27635	operations	
220-96	27635-27636	.	

#Text=These are collectively known as query operations because they use a SELECT query as part of their execution.
221-1	27637-27642	These	
221-2	27643-27646	are	
221-3	27647-27659	collectively	
221-4	27660-27665	known	
221-5	27666-27668	as	
221-6	27669-27674	query	
221-7	27675-27685	operations	
221-8	27686-27693	because	
221-9	27694-27698	they	
221-10	27699-27702	use	
221-11	27703-27704	a	
221-12	27705-27711	SELECT	
221-13	27712-27717	query	
221-14	27718-27720	as	
221-15	27721-27725	part	
221-16	27726-27728	of	
221-17	27729-27734	their	
221-18	27735-27744	execution	
221-19	27744-27745	.	

#Text=InterSystems IRIS generates an execution plan when a query operation is prepared; you do not have to actually execute the query to generate an execution plan.
222-1	27746-27758	InterSystems	
222-2	27759-27763	IRIS	
222-3	27764-27773	generates	
222-4	27774-27776	an	
222-5	27777-27786	execution	
222-6	27787-27791	plan	
222-7	27792-27796	when	
222-8	27797-27798	a	
222-9	27799-27804	query	
222-10	27805-27814	operation	
222-11	27815-27817	is	
222-12	27818-27826	prepared	
222-13	27826-27827	;	
222-14	27828-27831	you	
222-15	27832-27834	do	
222-16	27835-27838	not	
222-17	27839-27843	have	
222-18	27844-27846	to	
222-19	27847-27855	actually	
222-20	27856-27863	execute	
222-21	27864-27867	the	
222-22	27868-27873	query	
222-23	27874-27876	to	
222-24	27877-27885	generate	
222-25	27886-27888	an	
222-26	27889-27898	execution	
222-27	27899-27903	plan	
222-28	27903-27904	.	

#Text=By default, these tools display what InterSystems IRIS considers to be the optimal query plan.
223-1	27905-27907	By	
223-2	27908-27915	default	
223-3	27915-27916	,	
223-4	27917-27922	these	
223-5	27923-27928	tools	
223-6	27929-27936	display	
223-7	27937-27941	what	
223-8	27942-27954	InterSystems	
223-9	27955-27959	IRIS	
223-10	27960-27969	considers	
223-11	27970-27972	to	
223-12	27973-27975	be	
223-13	27976-27979	the	
223-14	27980-27987	optimal	
223-15	27988-27993	query	
223-16	27994-27998	plan	
223-17	27998-27999	.	

#Text=For most queries there is more than one possible query plan.
224-1	28000-28003	For	
224-2	28004-28008	most	
224-3	28009-28016	queries	
224-4	28017-28022	there	
224-5	28023-28025	is	
224-6	28026-28030	more	
224-7	28031-28035	than	
224-8	28036-28039	one	
224-9	28040-28048	possible	
224-10	28049-28054	query	
224-11	28055-28059	plan	
224-12	28059-28060	.	

#Text=In addition to the query plan that InterSystems IRIS deems as optimal, you can also generate and display alternate query execution plans.
225-1	28061-28063	In	
225-2	28064-28072	addition	
225-3	28073-28075	to	
225-4	28076-28079	the	
225-5	28080-28085	query	
225-6	28086-28090	plan	
225-7	28091-28095	that	
225-8	28096-28108	InterSystems	
225-9	28109-28113	IRIS	
225-10	28114-28119	deems	
225-11	28120-28122	as	
225-12	28123-28130	optimal	
225-13	28130-28131	,	
225-14	28132-28135	you	
225-15	28136-28139	can	
225-16	28140-28144	also	
225-17	28145-28153	generate	
225-18	28154-28157	and	
225-19	28158-28165	display	
225-20	28166-28175	alternate	
225-21	28176-28181	query	
225-22	28182-28191	execution	
225-23	28192-28197	plans	
225-24	28197-28198	.	

#Text=InterSystems IRIS provides the following query plan tools:
#Text=The $SYSTEM.SQL.Explain() method can be used to generate and display an XML-formatted query plan and, optionally, alternate query plans.
226-1	28199-28211	InterSystems	
226-2	28212-28216	IRIS	
226-3	28217-28225	provides	
226-4	28226-28229	the	
226-5	28230-28239	following	
226-6	28240-28245	query	
226-7	28246-28250	plan	
226-8	28251-28256	tools	
226-9	28256-28257	:	
226-10	28258-28261	The	
226-11	28262-28263	$	
226-12	28263-28281	SYSTEM.SQL.Explain	
226-13	28281-28282	(	
226-14	28282-28283	)	
226-15	28284-28290	method	
226-16	28291-28294	can	
226-17	28295-28297	be	
226-18	28298-28302	used	
226-19	28303-28305	to	
226-20	28306-28314	generate	
226-21	28315-28318	and	
226-22	28319-28326	display	
226-23	28327-28329	an	
226-24	28330-28343	XML-formatted	
226-25	28344-28349	query	
226-26	28350-28354	plan	
226-27	28355-28358	and	
226-28	28358-28359	,	
226-29	28360-28370	optionally	
226-30	28370-28371	,	
226-31	28372-28381	alternate	
226-32	28382-28387	query	
226-33	28388-28393	plans	
226-34	28393-28394	.	

#Text=The SQL EXPLAIN command can be used to generate an XML-formatted query plan and, optionally, alternate query plans and SQL statistics.
227-1	28395-28398	The	
227-2	28399-28402	SQL	
227-3	28403-28410	EXPLAIN	
227-4	28411-28418	command	
227-5	28419-28422	can	
227-6	28423-28425	be	
227-7	28426-28430	used	
227-8	28431-28433	to	
227-9	28434-28442	generate	
227-10	28443-28445	an	
227-11	28446-28459	XML-formatted	
227-12	28460-28465	query	
227-13	28466-28470	plan	
227-14	28471-28474	and	
227-15	28474-28475	,	
227-16	28476-28486	optionally	
227-17	28486-28487	,	
227-18	28488-28497	alternate	
227-19	28498-28503	query	
227-20	28504-28509	plans	
227-21	28510-28513	and	
227-22	28514-28517	SQL	
227-23	28518-28528	statistics	
227-24	28528-28529	.	

#Text=All generated query plans and statistics are included in a single result set field named Plan.
228-1	28530-28533	All	
228-2	28534-28543	generated	
228-3	28544-28549	query	
228-4	28550-28555	plans	
228-5	28556-28559	and	
228-6	28560-28570	statistics	
228-7	28571-28574	are	
228-8	28575-28583	included	
228-9	28584-28586	in	
228-10	28587-28588	a	
228-11	28589-28595	single	
228-12	28596-28602	result	
228-13	28603-28606	set	
228-14	28607-28612	field	
228-15	28613-28618	named	
228-16	28619-28623	Plan	
228-17	28623-28624	.	

#Text=Note that the EXPLAIN command can only be used with a SELECT query.
229-1	28625-28629	Note	
229-2	28630-28634	that	
229-3	28635-28638	the	
229-4	28639-28646	EXPLAIN	
229-5	28647-28654	command	
229-6	28655-28658	can	
229-7	28659-28663	only	
229-8	28664-28666	be	
229-9	28667-28671	used	
229-10	28672-28676	with	
229-11	28677-28678	a	
229-12	28679-28685	SELECT	
229-13	28686-28691	query	
229-14	28691-28692	.	

#Text=The Management Portal—>System Explorer—>SQL interface Show Plan button.
230-1	28693-28696	The	
230-2	28697-28707	Management	
230-3	28708-28714	Portal	
230-4	28714-28715	—	
230-5	28715-28716	>	
230-6	28716-28722	System	
230-7	28723-28731	Explorer	
230-8	28731-28732	—	
230-9	28732-28733	>	
230-10	28733-28736	SQL	
230-11	28737-28746	interface	
230-12	28747-28751	Show	
230-13	28752-28756	Plan	
230-14	28757-28763	button	
230-15	28763-28764	.	

#Text=The Management Portal—>System Explorer—>Tools—>SQL Performance Tools.
231-1	28765-28768	The	
231-2	28769-28779	Management	
231-3	28780-28786	Portal	
231-4	28786-28787	—	
231-5	28787-28788	>	
231-6	28788-28794	System	
231-7	28795-28803	Explorer	
231-8	28803-28804	—	
231-9	28804-28805	>	
231-10	28805-28810	Tools	
231-11	28810-28811	—	
231-12	28811-28812	>	
231-13	28812-28815	SQL	
231-14	28816-28827	Performance	
231-15	28828-28833	Tools	
231-16	28833-28834	.	

#Text=For generated %PARALLEL and Sharded queries, these tools display all of the applicable query plans.
232-1	28835-28838	For	
232-2	28839-28848	generated	
232-3	28849-28850	%	
232-4	28850-28858	PARALLEL	
232-5	28859-28862	and	
232-6	28863-28870	Sharded	
232-7	28871-28878	queries	
232-8	28878-28879	,	
232-9	28880-28885	these	
232-10	28886-28891	tools	
232-11	28892-28899	display	
232-12	28900-28903	all	
232-13	28904-28906	of	
232-14	28907-28910	the	
232-15	28911-28921	applicable	
232-16	28922-28927	query	
232-17	28928-28933	plans	
232-18	28933-28934	.	

#Text=Using the Explain() MethodCopy link to this section
#Text=You can generate a query execution plan by running the $SYSTEM.SQL.Explain() method, as shown in the following example:
#Text=SET mysql=2
#Text=SET mysql(1)="SELECT TOP 10 Name,DOB FROM Sample.Person "
#Text=SET mysql(2)="WHERE Name [ 'A' ORDER BY Age"
#Text=SET status=$SYSTEM.SQL.Explain(.mysql,{"all":0,"quiet":1,"stats":0,"preparse":0},,.plan)
#Text=IF status'=1 {WRITE "Explain() failed:" DO $System.Status.DisplayError(status) QUIT}
#Text=ZWRITE plan
#Text=Copy code to clipboard
#Text=Setting the "all":0 option generates the query plan that InterSystems IRIS deems optimal.
233-1	28935-28940	Using	
233-2	28941-28944	the	
233-3	28945-28952	Explain	
233-4	28952-28953	(	
233-5	28953-28954	)	
233-6	28955-28965	MethodCopy	
233-7	28966-28970	link	
233-8	28971-28973	to	
233-9	28974-28978	this	
233-10	28979-28986	section	
233-11	28987-28990	You	
233-12	28991-28994	can	
233-13	28995-29003	generate	
233-14	29004-29005	a	
233-15	29006-29011	query	
233-16	29012-29021	execution	
233-17	29022-29026	plan	
233-18	29027-29029	by	
233-19	29030-29037	running	
233-20	29038-29041	the	
233-21	29042-29043	$	
233-22	29043-29061	SYSTEM.SQL.Explain	
233-23	29061-29062	(	
233-24	29062-29063	)	
233-25	29064-29070	method	
233-26	29070-29071	,	
233-27	29072-29074	as	
233-28	29075-29080	shown	
233-29	29081-29083	in	
233-30	29084-29087	the	
233-31	29088-29097	following	
233-32	29098-29105	example	
233-33	29105-29106	:	
233-34	29107-29110	SET	
233-35	29111-29116	mysql	
233-36	29116-29117	=	
233-37	29117-29118	2	
233-38	29119-29122	SET	
233-39	29123-29128	mysql	
233-40	29128-29129	(	
233-41	29129-29130	1	
233-42	29130-29131	)	
233-43	29131-29132	=	
233-44	29132-29133	"	
233-45	29133-29139	SELECT	
233-46	29140-29143	TOP	
233-47	29144-29146	10	
233-48	29147-29151	Name	
233-49	29151-29152	,	
233-50	29152-29155	DOB	
233-51	29156-29160	FROM	
233-52	29161-29174	Sample.Person	
233-53	29175-29176	"	
233-54	29177-29180	SET	
233-55	29181-29186	mysql	
233-56	29186-29187	(	
233-57	29187-29188	2	
233-58	29188-29189	)	
233-59	29189-29190	=	
233-60	29190-29191	"	
233-61	29191-29196	WHERE	
233-62	29197-29201	Name	
233-63	29202-29203	[	
233-64	29204-29205	'	
233-65	29205-29206	A	
233-66	29206-29207	'	
233-67	29208-29213	ORDER	
233-68	29214-29216	BY	
233-69	29217-29220	Age	
233-70	29220-29221	"	
233-71	29222-29225	SET	
233-72	29226-29232	status	
233-73	29232-29233	=	
233-74	29233-29234	$	
233-75	29234-29252	SYSTEM.SQL.Explain	
233-76	29252-29253	(	
233-77	29253-29254	.	
233-78	29254-29259	mysql	
233-79	29259-29260	,	
233-80	29260-29261	{	
233-81	29261-29262	"	
233-82	29262-29265	all	
233-83	29265-29266	"	
233-84	29266-29267	:	
233-85	29267-29268	0	
233-86	29268-29269	,	
233-87	29269-29270	"	
233-88	29270-29275	quiet	
233-89	29275-29276	"	
233-90	29276-29277	:	
233-91	29277-29278	1	
233-92	29278-29279	,	
233-93	29279-29280	"	
233-94	29280-29285	stats	
233-95	29285-29286	"	
233-96	29286-29287	:	
233-97	29287-29288	0	
233-98	29288-29289	,	
233-99	29289-29290	"	
233-100	29290-29298	preparse	
233-101	29298-29299	"	
233-102	29299-29300	:	
233-103	29300-29301	0	
233-104	29301-29302	}	
233-105	29302-29303	,	
233-106	29303-29304	,	
233-107	29304-29305	.	
233-108	29305-29309	plan	
233-109	29309-29310	)	
233-110	29311-29313	IF	
233-111	29314-29320	status	
233-112	29320-29321	'	
233-113	29321-29322	=	
233-114	29322-29323	1	
233-115	29324-29325	{	
233-116	29325-29330	WRITE	
233-117	29331-29332	"	
233-118	29332-29339	Explain	
233-119	29339-29340	(	
233-120	29340-29341	)	
233-121	29342-29348	failed	
233-122	29348-29349	:	
233-123	29349-29350	"	
233-124	29351-29353	DO	
233-125	29354-29355	$	
233-126	29355-29381	System.Status.DisplayError	
233-127	29381-29382	(	
233-128	29382-29388	status	
233-129	29388-29389	)	
233-130	29390-29394	QUIT	
233-131	29394-29395	}	
233-132	29396-29402	ZWRITE	
233-133	29403-29407	plan	
233-134	29408-29412	Copy	
233-135	29413-29417	code	
233-136	29418-29420	to	
233-137	29421-29430	clipboard	
233-138	29431-29438	Setting	
233-139	29439-29442	the	
233-140	29443-29444	"	
233-141	29444-29447	all	
233-142	29447-29448	"	
233-143	29448-29449	:	
233-144	29449-29450	0	
233-145	29451-29457	option	
233-146	29458-29467	generates	
233-147	29468-29471	the	
233-148	29472-29477	query	
233-149	29478-29482	plan	
233-150	29483-29487	that	
233-151	29488-29500	InterSystems	
233-152	29501-29505	IRIS	
233-153	29506-29511	deems	
233-154	29512-29519	optimal	
233-155	29519-29520	.	

#Text=Setting the "all":1 option generates the optimal query plan and alternate query plans.
234-1	29521-29528	Setting	
234-2	29529-29532	the	
234-3	29533-29534	"	
234-4	29534-29537	all	
234-5	29537-29538	"	
234-6	29538-29539	:	
234-7	29539-29540	1	
234-8	29541-29547	option	
234-9	29548-29557	generates	
234-10	29558-29561	the	
234-11	29562-29569	optimal	
234-12	29570-29575	query	
234-13	29576-29580	plan	
234-14	29581-29584	and	
234-15	29585-29594	alternate	
234-16	29595-29600	query	
234-17	29601-29606	plans	
234-18	29606-29607	.	

#Text=The default is "all":0.
235-1	29608-29611	The	
235-2	29612-29619	default	
235-3	29620-29622	is	
235-4	29623-29624	"	
235-5	29624-29627	all	
235-6	29627-29628	"	
235-7	29628-29629	:	
235-8	29629-29630	0	
235-9	29630-29631	.	

#Text=The result is formatted as an array of subscripts representing an XML-formatted text.
236-1	29632-29635	The	
236-2	29636-29642	result	
236-3	29643-29645	is	
236-4	29646-29655	formatted	
236-5	29656-29658	as	
236-6	29659-29661	an	
236-7	29662-29667	array	
236-8	29668-29670	of	
236-9	29671-29681	subscripts	
236-10	29682-29694	representing	
236-11	29695-29697	an	
236-12	29698-29711	XML-formatted	
236-13	29712-29716	text	
236-14	29716-29717	.	

#Text=If you specify a single query plan ("all":0), the plan variable in the above method call would have the following format:
#Text=plan: contains the total number of subscripts in the result.
#Text=plan(1): always contains the XML format tag "<plan>".
237-1	29718-29720	If	
237-2	29721-29724	you	
237-3	29725-29732	specify	
237-4	29733-29734	a	
237-5	29735-29741	single	
237-6	29742-29747	query	
237-7	29748-29752	plan	
237-8	29753-29754	(	
237-9	29754-29755	"	
237-10	29755-29758	all	
237-11	29758-29759	"	
237-12	29759-29760	:	
237-13	29760-29761	0	
237-14	29761-29762	)	
237-15	29762-29763	,	
237-16	29764-29767	the	
237-17	29768-29772	plan	
237-18	29773-29781	variable	
237-19	29782-29784	in	
237-20	29785-29788	the	
237-21	29789-29794	above	
237-22	29795-29801	method	
237-23	29802-29806	call	
237-24	29807-29812	would	
237-25	29813-29817	have	
237-26	29818-29821	the	
237-27	29822-29831	following	
237-28	29832-29838	format	
237-29	29838-29839	:	
237-30	29840-29844	plan	
237-31	29844-29845	:	
237-32	29846-29854	contains	
237-33	29855-29858	the	
237-34	29859-29864	total	
237-35	29865-29871	number	
237-36	29872-29874	of	
237-37	29875-29885	subscripts	
237-38	29886-29888	in	
237-39	29889-29892	the	
237-40	29893-29899	result	
237-41	29899-29900	.	
237-42	29901-29905	plan	
237-43	29905-29906	(	
237-44	29906-29907	1	
237-45	29907-29908	)	
237-46	29908-29909	:	
237-47	29910-29916	always	
237-48	29917-29925	contains	
237-49	29926-29929	the	
237-50	29930-29933	XML	
237-51	29934-29940	format	
237-52	29941-29944	tag	
237-53	29945-29946	"	
237-54	29946-29947	<	
237-55	29947-29951	plan	
237-56	29951-29952	>	
237-57	29952-29953	"	
237-58	29953-29954	.	

#Text=The last subscript always contains the XML format tag "</plan>".
#Text=plan(2): always contains the XML format tag "<sql>"
#Text=plan(3): always contains the first line of the query text.
238-1	29955-29958	The	
238-2	29959-29963	last	
238-3	29964-29973	subscript	
238-4	29974-29980	always	
238-5	29981-29989	contains	
238-6	29990-29993	the	
238-7	29994-29997	XML	
238-8	29998-30004	format	
238-9	30005-30008	tag	
238-10	30009-30010	"	
238-11	30010-30011	<	
238-12	30011-30012	/	
238-13	30012-30016	plan	
238-14	30016-30017	>	
238-15	30017-30018	"	
238-16	30018-30019	.	
238-17	30020-30024	plan	
238-18	30024-30025	(	
238-19	30025-30026	2	
238-20	30026-30027	)	
238-21	30027-30028	:	
238-22	30029-30035	always	
238-23	30036-30044	contains	
238-24	30045-30048	the	
238-25	30049-30052	XML	
238-26	30053-30059	format	
238-27	30060-30063	tag	
238-28	30064-30065	"	
238-29	30065-30066	<	
238-30	30066-30069	sql	
238-31	30069-30070	>	
238-32	30070-30071	"	
238-33	30072-30076	plan	
238-34	30076-30077	(	
238-35	30077-30078	3	
238-36	30078-30079	)	
238-37	30079-30080	:	
238-38	30081-30087	always	
238-39	30088-30096	contains	
238-40	30097-30100	the	
238-41	30101-30106	first	
238-42	30107-30111	line	
238-43	30112-30114	of	
238-44	30115-30118	the	
238-45	30119-30124	query	
238-46	30125-30129	text	
238-47	30129-30130	.	

#Text=If "preparse":0 (the default) the literal query text is returned and additional subscripts are used for each line of a multi-line query; in the above example, the query is two lines, so two subscripts are used (plan(3) & plan(4)).
239-1	30131-30133	If	
239-2	30134-30135	"	
239-3	30135-30143	preparse	
239-4	30143-30144	"	
239-5	30144-30145	:	
239-6	30145-30146	0	
239-7	30147-30148	(	
239-8	30148-30151	the	
239-9	30152-30159	default	
239-10	30159-30160	)	
239-11	30161-30164	the	
239-12	30165-30172	literal	
239-13	30173-30178	query	
239-14	30179-30183	text	
239-15	30184-30186	is	
239-16	30187-30195	returned	
239-17	30196-30199	and	
239-18	30200-30210	additional	
239-19	30211-30221	subscripts	
239-20	30222-30225	are	
239-21	30226-30230	used	
239-22	30231-30234	for	
239-23	30235-30239	each	
239-24	30240-30244	line	
239-25	30245-30247	of	
239-26	30248-30249	a	
239-27	30250-30260	multi-line	
239-28	30261-30266	query	
239-29	30266-30267	;	
239-30	30268-30270	in	
239-31	30271-30274	the	
239-32	30275-30280	above	
239-33	30281-30288	example	
239-34	30288-30289	,	
239-35	30290-30293	the	
239-36	30294-30299	query	
239-37	30300-30302	is	
239-38	30303-30306	two	
239-39	30307-30312	lines	
239-40	30312-30313	,	
239-41	30314-30316	so	
239-42	30317-30320	two	
239-43	30321-30331	subscripts	
239-44	30332-30335	are	
239-45	30336-30340	used	
239-46	30341-30342	(	
239-47	30342-30346	plan	
239-48	30346-30347	(	
239-49	30347-30348	3	
239-50	30348-30349	)	
239-51	30350-30351	&	
239-52	30352-30356	plan	
239-53	30356-30357	(	
239-54	30357-30358	4	
239-55	30358-30359	)	
239-56	30359-30360	)	
239-57	30360-30361	.	

#Text=If "preparse":1 the normalized query text is returned as a single line: plan(3).
#Text=plan(n): always contains the XML format tag "</sql>"; in the case of the above example, 3+mysql = plan(5).
#Text=plan(n+1): always contains the XML formatted query cost "<cost value=""407137""/>".
#Text=plan(n+2): always contains the first line of the query plan.
240-1	30362-30364	If	
240-2	30365-30366	"	
240-3	30366-30374	preparse	
240-4	30374-30375	"	
240-5	30375-30376	:	
240-6	30376-30377	1	
240-7	30378-30381	the	
240-8	30382-30392	normalized	
240-9	30393-30398	query	
240-10	30399-30403	text	
240-11	30404-30406	is	
240-12	30407-30415	returned	
240-13	30416-30418	as	
240-14	30419-30420	a	
240-15	30421-30427	single	
240-16	30428-30432	line	
240-17	30432-30433	:	
240-18	30434-30438	plan	
240-19	30438-30439	(	
240-20	30439-30440	3	
240-21	30440-30441	)	
240-22	30441-30442	.	
240-23	30443-30447	plan	
240-24	30447-30448	(	
240-25	30448-30449	n	
240-26	30449-30450	)	
240-27	30450-30451	:	
240-28	30452-30458	always	
240-29	30459-30467	contains	
240-30	30468-30471	the	
240-31	30472-30475	XML	
240-32	30476-30482	format	
240-33	30483-30486	tag	
240-34	30487-30488	"	
240-35	30488-30489	<	
240-36	30489-30490	/	
240-37	30490-30493	sql	
240-38	30493-30494	>	
240-39	30494-30495	"	
240-40	30495-30496	;	
240-41	30497-30499	in	
240-42	30500-30503	the	
240-43	30504-30508	case	
240-44	30509-30511	of	
240-45	30512-30515	the	
240-46	30516-30521	above	
240-47	30522-30529	example	
240-48	30529-30530	,	
240-49	30531-30532	3	
240-50	30532-30533	+	
240-51	30533-30538	mysql	
240-52	30539-30540	=	
240-53	30541-30545	plan	
240-54	30545-30546	(	
240-55	30546-30547	5	
240-56	30547-30548	)	
240-57	30548-30549	.	
240-58	30550-30554	plan	
240-59	30554-30555	(	
240-60	30555-30556	n	
240-61	30556-30557	+	
240-62	30557-30558	1	
240-63	30558-30559	)	
240-64	30559-30560	:	
240-65	30561-30567	always	
240-66	30568-30576	contains	
240-67	30577-30580	the	
240-68	30581-30584	XML	
240-69	30585-30594	formatted	
240-70	30595-30600	query	
240-71	30601-30605	cost	
240-72	30606-30607	"	
240-73	30607-30608	<	
240-74	30608-30612	cost	
240-75	30613-30618	value	
240-76	30618-30619	=	
240-77	30619-30620	"	
240-78	30620-30621	"	
240-79	30621-30627	407137	
240-80	30627-30628	"	
240-81	30628-30629	"	
240-82	30629-30630	/	
240-83	30630-30631	>	
240-84	30631-30632	"	
240-85	30632-30633	.	
240-86	30634-30638	plan	
240-87	30638-30639	(	
240-88	30639-30640	n	
240-89	30640-30641	+	
240-90	30641-30642	2	
240-91	30642-30643	)	
240-92	30643-30644	:	
240-93	30645-30651	always	
240-94	30652-30660	contains	
240-95	30661-30664	the	
240-96	30665-30670	first	
240-97	30671-30675	line	
240-98	30676-30678	of	
240-99	30679-30682	the	
240-100	30683-30688	query	
240-101	30689-30693	plan	
240-102	30693-30694	.	

#Text=This plan may be of any length and may contain <module> ...
241-1	30695-30699	This	
241-2	30700-30704	plan	
241-3	30705-30708	may	
241-4	30709-30711	be	
241-5	30712-30714	of	
241-6	30715-30718	any	
241-7	30719-30725	length	
241-8	30726-30729	and	
241-9	30730-30733	may	
241-10	30734-30741	contain	
241-11	30742-30743	<	
241-12	30743-30749	module	
241-13	30749-30750	>	
241-14	30751-30752	.	
241-15	30752-30753	.	
241-16	30753-30754	.	

#Text=</module> tags as separate subscript lines enclosing the query plan for a generated execution module.
242-1	30755-30756	<	
242-2	30756-30757	/	
242-3	30757-30763	module	
242-4	30763-30764	>	
242-5	30765-30769	tags	
242-6	30770-30772	as	
242-7	30773-30781	separate	
242-8	30782-30791	subscript	
242-9	30792-30797	lines	
242-10	30798-30807	enclosing	
242-11	30808-30811	the	
242-12	30812-30817	query	
242-13	30818-30822	plan	
242-14	30823-30826	for	
242-15	30827-30828	a	
242-16	30829-30838	generated	
242-17	30839-30848	execution	
242-18	30849-30855	module	
242-19	30855-30856	.	

#Text=If you specify "all":1 Explain() generates alternate query plans.
243-1	30857-30859	If	
243-2	30860-30863	you	
243-3	30864-30871	specify	
243-4	30872-30873	"	
243-5	30873-30876	all	
243-6	30876-30877	"	
243-7	30877-30878	:	
243-8	30878-30879	1	
243-9	30880-30887	Explain	
243-10	30887-30888	(	
243-11	30888-30889	)	
243-12	30890-30899	generates	
243-13	30900-30909	alternate	
243-14	30910-30915	query	
243-15	30916-30921	plans	
243-16	30921-30922	.	

#Text=The plan variables follow the same format, except that they use the first-level subscript to identify the query plan and the second-level subscripts for the lines of the query plan.
244-1	30923-30926	The	
244-2	30927-30931	plan	
244-3	30932-30941	variables	
244-4	30942-30948	follow	
244-5	30949-30952	the	
244-6	30953-30957	same	
244-7	30958-30964	format	
244-8	30964-30965	,	
244-9	30966-30972	except	
244-10	30973-30977	that	
244-11	30978-30982	they	
244-12	30983-30986	use	
244-13	30987-30990	the	
244-14	30991-31002	first-level	
244-15	31003-31012	subscript	
244-16	31013-31015	to	
244-17	31016-31024	identify	
244-18	31025-31028	the	
244-19	31029-31034	query	
244-20	31035-31039	plan	
244-21	31040-31043	and	
244-22	31044-31047	the	
244-23	31048-31060	second-level	
244-24	31061-31071	subscripts	
244-25	31072-31075	for	
244-26	31076-31079	the	
244-27	31080-31085	lines	
244-28	31086-31088	of	
244-29	31089-31092	the	
244-30	31093-31098	query	
244-31	31099-31103	plan	
244-32	31103-31104	.	

#Text=Therefore, plan(1) contains the count of second-level subscripts in the first query plan result, plan(2) contains the count of second-level subscripts in the second query plan result, and so forth.
245-1	31105-31114	Therefore	
245-2	31114-31115	,	
245-3	31116-31120	plan	
245-4	31120-31121	(	
245-5	31121-31122	1	
245-6	31122-31123	)	
245-7	31124-31132	contains	
245-8	31133-31136	the	
245-9	31137-31142	count	
245-10	31143-31145	of	
245-11	31146-31158	second-level	
245-12	31159-31169	subscripts	
245-13	31170-31172	in	
245-14	31173-31176	the	
245-15	31177-31182	first	
245-16	31183-31188	query	
245-17	31189-31193	plan	
245-18	31194-31200	result	
245-19	31200-31201	,	
245-20	31202-31206	plan	
245-21	31206-31207	(	
245-22	31207-31208	2	
245-23	31208-31209	)	
245-24	31210-31218	contains	
245-25	31219-31222	the	
245-26	31223-31228	count	
245-27	31229-31231	of	
245-28	31232-31244	second-level	
245-29	31245-31255	subscripts	
245-30	31256-31258	in	
245-31	31259-31262	the	
245-32	31263-31269	second	
245-33	31270-31275	query	
245-34	31276-31280	plan	
245-35	31281-31287	result	
245-36	31287-31288	,	
245-37	31289-31292	and	
245-38	31293-31295	so	
245-39	31296-31301	forth	
245-40	31301-31302	.	

#Text=In this format, plan(1,1) contains the XML format tag "<plan>" for the first query plan;
#Text=plan(2,1) contains the XML format tag "<plan>" for the second query plan, and so forth.
246-1	31303-31305	In	
246-2	31306-31310	this	
246-3	31311-31317	format	
246-4	31317-31318	,	
246-5	31319-31323	plan	
246-6	31323-31324	(	
246-7	31324-31327	1,1	
246-8	31327-31328	)	
246-9	31329-31337	contains	
246-10	31338-31341	the	
246-11	31342-31345	XML	
246-12	31346-31352	format	
246-13	31353-31356	tag	
246-14	31357-31358	"	
246-15	31358-31359	<	
246-16	31359-31363	plan	
246-17	31363-31364	>	
246-18	31364-31365	"	
246-19	31366-31369	for	
246-20	31370-31373	the	
246-21	31374-31379	first	
246-22	31380-31385	query	
246-23	31386-31390	plan	
246-24	31390-31391	;	
246-25	31392-31396	plan	
246-26	31396-31397	(	
246-27	31397-31400	2,1	
246-28	31400-31401	)	
246-29	31402-31410	contains	
246-30	31411-31414	the	
246-31	31415-31418	XML	
246-32	31419-31425	format	
246-33	31426-31429	tag	
246-34	31430-31431	"	
246-35	31431-31432	<	
246-36	31432-31436	plan	
246-37	31436-31437	>	
246-38	31437-31438	"	
246-39	31439-31442	for	
246-40	31443-31446	the	
246-41	31447-31453	second	
246-42	31454-31459	query	
246-43	31460-31464	plan	
246-44	31464-31465	,	
246-45	31466-31469	and	
246-46	31470-31472	so	
246-47	31473-31478	forth	
246-48	31478-31479	.	

#Text=The only difference is that alternate query plans contain a second-level zero subscript (plan(1,0) variable that contains cost and index information; this zero subscript is not counted in the first-level subscript (plan(1)) value.
247-1	31480-31483	The	
247-2	31484-31488	only	
247-3	31489-31499	difference	
247-4	31500-31502	is	
247-5	31503-31507	that	
247-6	31508-31517	alternate	
247-7	31518-31523	query	
247-8	31524-31529	plans	
247-9	31530-31537	contain	
247-10	31538-31539	a	
247-11	31540-31552	second-level	
247-12	31553-31557	zero	
247-13	31558-31567	subscript	
247-14	31568-31569	(	
247-15	31569-31573	plan	
247-16	31573-31574	(	
247-17	31574-31577	1,0	
247-18	31577-31578	)	
247-19	31579-31587	variable	
247-20	31588-31592	that	
247-21	31593-31601	contains	
247-22	31602-31606	cost	
247-23	31607-31610	and	
247-24	31611-31616	index	
247-25	31617-31628	information	
247-26	31628-31629	;	
247-27	31630-31634	this	
247-28	31635-31639	zero	
247-29	31640-31649	subscript	
247-30	31650-31652	is	
247-31	31653-31656	not	
247-32	31657-31664	counted	
247-33	31665-31667	in	
247-34	31668-31671	the	
247-35	31672-31683	first-level	
247-36	31684-31693	subscript	
247-37	31694-31695	(	
247-38	31695-31699	plan	
247-39	31699-31700	(	
247-40	31700-31701	1	
247-41	31701-31702	)	
247-42	31702-31703	)	
247-43	31704-31709	value	
247-44	31709-31710	.	

#Text=If you specify "stats":1, Explain() generates performance statistics for each query plan module.
248-1	31711-31713	If	
248-2	31714-31717	you	
248-3	31718-31725	specify	
248-4	31726-31727	"	
248-5	31727-31732	stats	
248-6	31732-31733	"	
248-7	31733-31734	:	
248-8	31734-31735	1	
248-9	31735-31736	,	
248-10	31737-31744	Explain	
248-11	31744-31745	(	
248-12	31745-31746	)	
248-13	31747-31756	generates	
248-14	31757-31768	performance	
248-15	31769-31779	statistics	
248-16	31780-31783	for	
248-17	31784-31788	each	
248-18	31789-31794	query	
248-19	31795-31799	plan	
248-20	31800-31806	module	
248-21	31806-31807	.	

#Text=These statistics for each module are tagged using the <stats> ...
249-1	31808-31813	These	
249-2	31814-31824	statistics	
249-3	31825-31828	for	
249-4	31829-31833	each	
249-5	31834-31840	module	
249-6	31841-31844	are	
249-7	31845-31851	tagged	
249-8	31852-31857	using	
249-9	31858-31861	the	
249-10	31862-31863	<	
249-11	31863-31868	stats	
249-12	31868-31869	>	
249-13	31870-31871	.	
249-14	31871-31872	.	
249-15	31872-31873	.	

#Text=</stats> tags and appear immediately after the query cost ("<cost value=""407137""/>") and before the query plan text.
250-1	31874-31875	<	
250-2	31875-31876	/	
250-3	31876-31881	stats	
250-4	31881-31882	>	
250-5	31883-31887	tags	
250-6	31888-31891	and	
250-7	31892-31898	appear	
250-8	31899-31910	immediately	
250-9	31911-31916	after	
250-10	31917-31920	the	
250-11	31921-31926	query	
250-12	31927-31931	cost	
250-13	31932-31933	(	
250-14	31933-31934	"	
250-15	31934-31935	<	
250-16	31935-31939	cost	
250-17	31940-31945	value	
250-18	31945-31946	=	
250-19	31946-31947	"	
250-20	31947-31948	"	
250-21	31948-31954	407137	
250-22	31954-31955	"	
250-23	31955-31956	"	
250-24	31956-31957	/	
250-25	31957-31958	>	
250-26	31958-31959	"	
250-27	31959-31960	)	
250-28	31961-31964	and	
250-29	31965-31971	before	
250-30	31972-31975	the	
250-31	31976-31981	query	
250-32	31982-31986	plan	
250-33	31987-31991	text	
250-34	31991-31992	.	

#Text=If the query plan contains additional <module> tags, the <stats> for that generated module are listed immediately after the <module> tag and before that module’s query plan.
251-1	31993-31995	If	
251-2	31996-31999	the	
251-3	32000-32005	query	
251-4	32006-32010	plan	
251-5	32011-32019	contains	
251-6	32020-32030	additional	
251-7	32031-32032	<	
251-8	32032-32038	module	
251-9	32038-32039	>	
251-10	32040-32044	tags	
251-11	32044-32045	,	
251-12	32046-32049	the	
251-13	32050-32051	<	
251-14	32051-32056	stats	
251-15	32056-32057	>	
251-16	32058-32061	for	
251-17	32062-32066	that	
251-18	32067-32076	generated	
251-19	32077-32083	module	
251-20	32084-32087	are	
251-21	32088-32094	listed	
251-22	32095-32106	immediately	
251-23	32107-32112	after	
251-24	32113-32116	the	
251-25	32117-32118	<	
251-26	32118-32124	module	
251-27	32124-32125	>	
251-28	32126-32129	tag	
251-29	32130-32133	and	
251-30	32134-32140	before	
251-31	32141-32145	that	
251-32	32146-32152	module	
251-33	32152-32153	’	
251-34	32153-32154	s	
251-35	32155-32160	query	
251-36	32161-32165	plan	
251-37	32165-32166	.	

#Text=For each module, the following items are returned:
#Text=<ModuleName>: module name.
252-1	32167-32170	For	
252-2	32171-32175	each	
252-3	32176-32182	module	
252-4	32182-32183	,	
252-5	32184-32187	the	
252-6	32188-32197	following	
252-7	32198-32203	items	
252-8	32204-32207	are	
252-9	32208-32216	returned	
252-10	32216-32217	:	
252-11	32218-32219	<	
252-12	32219-32229	ModuleName	
252-13	32229-32230	>	
252-14	32230-32231	:	
252-15	32232-32238	module	
252-16	32239-32243	name	
252-17	32243-32244	.	

#Text=<TimeSpent>: total execution time for the module, in seconds.
253-1	32245-32246	<	
253-2	32246-32255	TimeSpent	
253-3	32255-32256	>	
253-4	32256-32257	:	
253-5	32258-32263	total	
253-6	32264-32273	execution	
253-7	32274-32278	time	
253-8	32279-32282	for	
253-9	32283-32286	the	
253-10	32287-32293	module	
253-11	32293-32294	,	
253-12	32295-32297	in	
253-13	32298-32305	seconds	
253-14	32305-32306	.	

#Text=<GlobalRefs>: a count of global references.
254-1	32307-32308	<	
254-2	32308-32318	GlobalRefs	
254-3	32318-32319	>	
254-4	32319-32320	:	
254-5	32321-32322	a	
254-6	32323-32328	count	
254-7	32329-32331	of	
254-8	32332-32338	global	
254-9	32339-32349	references	
254-10	32349-32350	.	

#Text=<LinesOfCode>: a count of lines of code executed.
255-1	32351-32352	<	
255-2	32352-32363	LinesOfCode	
255-3	32363-32364	>	
255-4	32364-32365	:	
255-5	32366-32367	a	
255-6	32368-32373	count	
255-7	32374-32376	of	
255-8	32377-32382	lines	
255-9	32383-32385	of	
255-10	32386-32390	code	
255-11	32391-32399	executed	
255-12	32399-32400	.	

#Text=<DiskWait>: disk wait time in seconds.
256-1	32401-32402	<	
256-2	32402-32410	DiskWait	
256-3	32410-32411	>	
256-4	32411-32412	:	
256-5	32413-32417	disk	
256-6	32418-32422	wait	
256-7	32423-32427	time	
256-8	32428-32430	in	
256-9	32431-32438	seconds	
256-10	32438-32439	.	

#Text=<RowCount>: number of rows in result set.
257-1	32440-32441	<	
257-2	32441-32449	RowCount	
257-3	32449-32450	>	
257-4	32450-32451	:	
257-5	32452-32458	number	
257-6	32459-32461	of	
257-7	32462-32466	rows	
257-8	32467-32469	in	
257-9	32470-32476	result	
257-10	32477-32480	set	
257-11	32480-32481	.	

#Text=<ModuleCount>: number of times this module was executed.
258-1	32482-32483	<	
258-2	32483-32494	ModuleCount	
258-3	32494-32495	>	
258-4	32495-32496	:	
258-5	32497-32503	number	
258-6	32504-32506	of	
258-7	32507-32512	times	
258-8	32513-32517	this	
258-9	32518-32524	module	
258-10	32525-32528	was	
258-11	32529-32537	executed	
258-12	32537-32538	.	

#Text=<Counter>: number of times this program was executed.
259-1	32539-32540	<	
259-2	32540-32547	Counter	
259-3	32547-32548	>	
259-4	32548-32549	:	
259-5	32550-32556	number	
259-6	32557-32559	of	
259-7	32560-32565	times	
259-8	32566-32570	this	
259-9	32571-32578	program	
259-10	32579-32582	was	
259-11	32583-32591	executed	
259-12	32591-32592	.	

#Text=Using Show Plan from InterSystems SQL ToolsCopy link to this section
#Text=You can use Show Plan to display the execution plan for a query in any of the following ways:
#Text=From the Management Portal SQL interface.
260-1	32593-32598	Using	
260-2	32599-32603	Show	
260-3	32604-32608	Plan	
260-4	32609-32613	from	
260-5	32614-32626	InterSystems	
260-6	32627-32630	SQL	
260-7	32631-32640	ToolsCopy	
260-8	32641-32645	link	
260-9	32646-32648	to	
260-10	32649-32653	this	
260-11	32654-32661	section	
260-12	32662-32665	You	
260-13	32666-32669	can	
260-14	32670-32673	use	
260-15	32674-32678	Show	
260-16	32679-32683	Plan	
260-17	32684-32686	to	
260-18	32687-32694	display	
260-19	32695-32698	the	
260-20	32699-32708	execution	
260-21	32709-32713	plan	
260-22	32714-32717	for	
260-23	32718-32719	a	
260-24	32720-32725	query	
260-25	32726-32728	in	
260-26	32729-32732	any	
260-27	32733-32735	of	
260-28	32736-32739	the	
260-29	32740-32749	following	
260-30	32750-32754	ways	
260-31	32754-32755	:	
260-32	32756-32760	From	
260-33	32761-32764	the	
260-34	32765-32775	Management	
260-35	32776-32782	Portal	
260-36	32783-32786	SQL	
260-37	32787-32796	interface	
260-38	32796-32797	.	

#Text=Select System Explorer, then SQL.
261-1	32798-32804	Select	
261-2	32805-32811	System	
261-3	32812-32820	Explorer	
261-4	32820-32821	,	
261-5	32822-32826	then	
261-6	32827-32830	SQL	
261-7	32830-32831	.	

#Text=Select a namespace with the Switch option at the top of the page.
262-1	32832-32838	Select	
262-2	32839-32840	a	
262-3	32841-32850	namespace	
262-4	32851-32855	with	
262-5	32856-32859	the	
262-6	32860-32866	Switch	
262-7	32867-32873	option	
262-8	32874-32876	at	
262-9	32877-32880	the	
262-10	32881-32884	top	
262-11	32885-32887	of	
262-12	32888-32891	the	
262-13	32892-32896	page	
262-14	32896-32897	.	

#Text=(You can set the Management Portal default namespace for each user.)
263-1	32898-32899	(	
263-2	32899-32902	You	
263-3	32903-32906	can	
263-4	32907-32910	set	
263-5	32911-32914	the	
263-6	32915-32925	Management	
263-7	32926-32932	Portal	
263-8	32933-32940	default	
263-9	32941-32950	namespace	
263-10	32951-32954	for	
263-11	32955-32959	each	
263-12	32960-32964	user	
263-13	32964-32965	.	
263-14	32965-32966	)	

#Text=Write a query, then press the Show Plan button.
264-1	32967-32972	Write	
264-2	32973-32974	a	
264-3	32975-32980	query	
264-4	32980-32981	,	
264-5	32982-32986	then	
264-6	32987-32992	press	
264-7	32993-32996	the	
264-8	32997-33001	Show	
264-9	33002-33006	Plan	
264-10	33007-33013	button	
264-11	33013-33014	.	

#Text=(You can also invoke Show Plan from the Show History listing by clicking the plan option for a listed query.)
265-1	33015-33016	(	
265-2	33016-33019	You	
265-3	33020-33023	can	
265-4	33024-33028	also	
265-5	33029-33035	invoke	
265-6	33036-33040	Show	
265-7	33041-33045	Plan	
265-8	33046-33050	from	
265-9	33051-33054	the	
265-10	33055-33059	Show	
265-11	33060-33067	History	
265-12	33068-33075	listing	
265-13	33076-33078	by	
265-14	33079-33087	clicking	
265-15	33088-33091	the	
265-16	33092-33096	plan	
265-17	33097-33103	option	
265-18	33104-33107	for	
265-19	33108-33109	a	
265-20	33110-33116	listed	
265-21	33117-33122	query	
265-22	33122-33123	.	
265-23	33123-33124	)	

#Text=See Executing SQL Statements in the &OpenCurlyDoubleQuoteUsing the Management Portal SQL Interface&CloseCurlyDoubleQuote chapter of this manual.
266-1	33125-33128	See	
266-2	33129-33138	Executing	
266-3	33139-33142	SQL	
266-4	33143-33153	Statements	
266-5	33154-33156	in	
266-6	33157-33160	the	
266-7	33161-33162	&	
266-8	33162-33187	OpenCurlyDoubleQuoteUsing	
266-9	33188-33191	the	
266-10	33192-33202	Management	
266-11	33203-33209	Portal	
266-12	33210-33213	SQL	
266-13	33214-33223	Interface	
266-14	33223-33224	&	
266-15	33224-33245	CloseCurlyDoubleQuote	
266-16	33246-33253	chapter	
266-17	33254-33256	of	
266-18	33257-33261	this	
266-19	33262-33268	manual	
266-20	33268-33269	.	

#Text=From the Management Portal Tools interface.
267-1	33270-33274	From	
267-2	33275-33278	the	
267-3	33279-33289	Management	
267-4	33290-33296	Portal	
267-5	33297-33302	Tools	
267-6	33303-33312	interface	
267-7	33312-33313	.	

#Text=Select System Explorer, then Tools, then select SQL Performance Tools, then SQL Runtime Statistics:
#Text=From the Query Test tab: Select a namespace with the Switch option at the top of the page.
268-1	33314-33320	Select	
268-2	33321-33327	System	
268-3	33328-33336	Explorer	
268-4	33336-33337	,	
268-5	33338-33342	then	
268-6	33343-33348	Tools	
268-7	33348-33349	,	
268-8	33350-33354	then	
268-9	33355-33361	select	
268-10	33362-33365	SQL	
268-11	33366-33377	Performance	
268-12	33378-33383	Tools	
268-13	33383-33384	,	
268-14	33385-33389	then	
268-15	33390-33393	SQL	
268-16	33394-33401	Runtime	
268-17	33402-33412	Statistics	
268-18	33412-33413	:	
268-19	33414-33418	From	
268-20	33419-33422	the	
268-21	33423-33428	Query	
268-22	33429-33433	Test	
268-23	33434-33437	tab	
268-24	33437-33438	:	
268-25	33439-33445	Select	
268-26	33446-33447	a	
268-27	33448-33457	namespace	
268-28	33458-33462	with	
268-29	33463-33466	the	
268-30	33467-33473	Switch	
268-31	33474-33480	option	
268-32	33481-33483	at	
268-33	33484-33487	the	
268-34	33488-33491	top	
268-35	33492-33494	of	
268-36	33495-33498	the	
268-37	33499-33503	page	
268-38	33503-33504	.	

#Text=Write a query in the text box.
269-1	33505-33510	Write	
269-2	33511-33512	a	
269-3	33513-33518	query	
269-4	33519-33521	in	
269-5	33522-33525	the	
269-6	33526-33530	text	
269-7	33531-33534	box	
269-8	33534-33535	.	

#Text=Then press the Show Plan with SQL Stats button.
270-1	33536-33540	Then	
270-2	33541-33546	press	
270-3	33547-33550	the	
270-4	33551-33555	Show	
270-5	33556-33560	Plan	
270-6	33561-33565	with	
270-7	33566-33569	SQL	
270-8	33570-33575	Stats	
270-9	33576-33582	button	
270-10	33582-33583	.	

#Text=This generates a Show Plan without executing the query.
271-1	33584-33588	This	
271-2	33589-33598	generates	
271-3	33599-33600	a	
271-4	33601-33605	Show	
271-5	33606-33610	Plan	
271-6	33611-33618	without	
271-7	33619-33628	executing	
271-8	33629-33632	the	
271-9	33633-33638	query	
271-10	33638-33639	.	

#Text=From the View Stats tab: Press the Show Plan button for one of the listed queries.
272-1	33640-33644	From	
272-2	33645-33648	the	
272-3	33649-33653	View	
272-4	33654-33659	Stats	
272-5	33660-33663	tab	
272-6	33663-33664	:	
272-7	33665-33670	Press	
272-8	33671-33674	the	
272-9	33675-33679	Show	
272-10	33680-33684	Plan	
272-11	33685-33691	button	
272-12	33692-33695	for	
272-13	33696-33699	one	
272-14	33700-33702	of	
272-15	33703-33706	the	
272-16	33707-33713	listed	
272-17	33714-33721	queries	
272-18	33721-33722	.	

#Text=The listed queries include both those written at Execute Query, and those written at Query Test.
273-1	33723-33726	The	
273-2	33727-33733	listed	
273-3	33734-33741	queries	
273-4	33742-33749	include	
273-5	33750-33754	both	
273-6	33755-33760	those	
273-7	33761-33768	written	
273-8	33769-33771	at	
273-9	33772-33779	Execute	
273-10	33780-33785	Query	
273-11	33785-33786	,	
273-12	33787-33790	and	
273-13	33791-33796	those	
273-14	33797-33804	written	
273-15	33805-33807	at	
273-16	33808-33813	Query	
273-17	33814-33818	Test	
273-18	33818-33819	.	

#Text=From the SQL Shell you can use the SHOW PLAN and SHOW PLANALT Shell commands to display the execution plan for the most recently executed query.
274-1	33820-33824	From	
274-2	33825-33828	the	
274-3	33829-33832	SQL	
274-4	33833-33838	Shell	
274-5	33839-33842	you	
274-6	33843-33846	can	
274-7	33847-33850	use	
274-8	33851-33854	the	
274-9	33855-33859	SHOW	
274-10	33860-33864	PLAN	
274-11	33865-33868	and	
274-12	33869-33873	SHOW	
274-13	33874-33881	PLANALT	
274-14	33882-33887	Shell	
274-15	33888-33896	commands	
274-16	33897-33899	to	
274-17	33900-33907	display	
274-18	33908-33911	the	
274-19	33912-33921	execution	
274-20	33922-33926	plan	
274-21	33927-33930	for	
274-22	33931-33934	the	
274-23	33935-33939	most	
274-24	33940-33948	recently	
274-25	33949-33957	executed	
274-26	33958-33963	query	
274-27	33963-33964	.	

#Text=By running Show Plan against a cached query result set, using :i%Prop syntax for literal substitution values stored as properties:
#Text=SET cqsql=2
#Text=SET cqsql(1)="SELECT TOP :i%PropTopNum Name,DOB FROM Sample.Person "
#Text=SET cqsql(2)="WHERE Name [ :i%PropPersonName ORDER BY Age"
#Text=DO ShowPlan^%apiSQL(.cqsql,0,"",0,$LB("Sample"),"",1)
#Text=Copy code to clipboard
#Text=Show Plan by default returns values in Logical mode.
275-1	33965-33967	By	
275-2	33968-33975	running	
275-3	33976-33980	Show	
275-4	33981-33985	Plan	
275-5	33986-33993	against	
275-6	33994-33995	a	
275-7	33996-34002	cached	
275-8	34003-34008	query	
275-9	34009-34015	result	
275-10	34016-34019	set	
275-11	34019-34020	,	
275-12	34021-34026	using	
275-13	34027-34028	:	
275-14	34028-34029	i	
275-15	34029-34030	%	
275-16	34030-34034	Prop	
275-17	34035-34041	syntax	
275-18	34042-34045	for	
275-19	34046-34053	literal	
275-20	34054-34066	substitution	
275-21	34067-34073	values	
275-22	34074-34080	stored	
275-23	34081-34083	as	
275-24	34084-34094	properties	
275-25	34094-34095	:	
275-26	34096-34099	SET	
275-27	34100-34105	cqsql	
275-28	34105-34106	=	
275-29	34106-34107	2	
275-30	34108-34111	SET	
275-31	34112-34117	cqsql	
275-32	34117-34118	(	
275-33	34118-34119	1	
275-34	34119-34120	)	
275-35	34120-34121	=	
275-36	34121-34122	"	
275-37	34122-34128	SELECT	
275-38	34129-34132	TOP	
275-39	34133-34134	:	
275-40	34134-34135	i	
275-41	34135-34136	%	
275-42	34136-34146	PropTopNum	
275-43	34147-34151	Name	
275-44	34151-34152	,	
275-45	34152-34155	DOB	
275-46	34156-34160	FROM	
275-47	34161-34174	Sample.Person	
275-48	34175-34176	"	
275-49	34177-34180	SET	
275-50	34181-34186	cqsql	
275-51	34186-34187	(	
275-52	34187-34188	2	
275-53	34188-34189	)	
275-54	34189-34190	=	
275-55	34190-34191	"	
275-56	34191-34196	WHERE	
275-57	34197-34201	Name	
275-58	34202-34203	[	
275-59	34204-34205	:	
275-60	34205-34206	i	
275-61	34206-34207	%	
275-62	34207-34221	PropPersonName	
275-63	34222-34227	ORDER	
275-64	34228-34230	BY	
275-65	34231-34234	Age	
275-66	34234-34235	"	
275-67	34236-34238	DO	
275-68	34239-34247	ShowPlan	
275-69	34247-34248	^	
275-70	34248-34249	%	
275-71	34249-34255	apiSQL	
275-72	34255-34256	(	
275-73	34256-34257	.	
275-74	34257-34262	cqsql	
275-75	34262-34263	,	
275-76	34263-34264	0	
275-77	34264-34265	,	
275-78	34265-34266	"	
275-79	34266-34267	"	
275-80	34267-34268	,	
275-81	34268-34269	0	
275-82	34269-34270	,	
275-83	34270-34271	$	
275-84	34271-34273	LB	
275-85	34273-34274	(	
275-86	34274-34275	"	
275-87	34275-34281	Sample	
275-88	34281-34282	"	
275-89	34282-34283	)	
275-90	34283-34284	,	
275-91	34284-34285	"	
275-92	34285-34286	"	
275-93	34286-34287	,	
275-94	34287-34288	1	
275-95	34288-34289	)	
275-96	34290-34294	Copy	
275-97	34295-34299	code	
275-98	34300-34302	to	
275-99	34303-34312	clipboard	
275-100	34313-34317	Show	
275-101	34318-34322	Plan	
275-102	34323-34325	by	
275-103	34326-34333	default	
275-104	34334-34341	returns	
275-105	34342-34348	values	
275-106	34349-34351	in	
275-107	34352-34359	Logical	
275-108	34360-34364	mode	
275-109	34364-34365	.	

#Text=However, when invoking Show Plan from the Management Portal or the SQL Shell, Show Plan uses Runtime mode.
276-1	34366-34373	However	
276-2	34373-34374	,	
276-3	34375-34379	when	
276-4	34380-34388	invoking	
276-5	34389-34393	Show	
276-6	34394-34398	Plan	
276-7	34399-34403	from	
276-8	34404-34407	the	
276-9	34408-34418	Management	
276-10	34419-34425	Portal	
276-11	34426-34428	or	
276-12	34429-34432	the	
276-13	34433-34436	SQL	
276-14	34437-34442	Shell	
276-15	34442-34443	,	
276-16	34444-34448	Show	
276-17	34449-34453	Plan	
276-18	34454-34458	uses	
276-19	34459-34466	Runtime	
276-20	34467-34471	mode	
276-21	34471-34472	.	

#Text=Execution Plan: Statement Text and Query PlanCopy link to this section
#Text=The Show Plan execution plan consists of two components, Statement Text and Query Plan:
#Text=Statement Text replicates the original query, with the following modifications: The Show Plan button from the Management Portal SQL interface displays the SQL statement with comments and line breaks removed.
277-1	34473-34482	Execution	
277-2	34483-34487	Plan	
277-3	34487-34488	:	
277-4	34489-34498	Statement	
277-5	34499-34503	Text	
277-6	34504-34507	and	
277-7	34508-34513	Query	
277-8	34514-34522	PlanCopy	
277-9	34523-34527	link	
277-10	34528-34530	to	
277-11	34531-34535	this	
277-12	34536-34543	section	
277-13	34544-34547	The	
277-14	34548-34552	Show	
277-15	34553-34557	Plan	
277-16	34558-34567	execution	
277-17	34568-34572	plan	
277-18	34573-34581	consists	
277-19	34582-34584	of	
277-20	34585-34588	two	
277-21	34589-34599	components	
277-22	34599-34600	,	
277-23	34601-34610	Statement	
277-24	34611-34615	Text	
277-25	34616-34619	and	
277-26	34620-34625	Query	
277-27	34626-34630	Plan	
277-28	34630-34631	:	
277-29	34632-34641	Statement	
277-30	34642-34646	Text	
277-31	34647-34657	replicates	
277-32	34658-34661	the	
277-33	34662-34670	original	
277-34	34671-34676	query	
277-35	34676-34677	,	
277-36	34678-34682	with	
277-37	34683-34686	the	
277-38	34687-34696	following	
277-39	34697-34710	modifications	
277-40	34710-34711	:	
277-41	34712-34715	The	
277-42	34716-34720	Show	
277-43	34721-34725	Plan	
277-44	34726-34732	button	
277-45	34733-34737	from	
277-46	34738-34741	the	
277-47	34742-34752	Management	
277-48	34753-34759	Portal	
277-49	34760-34763	SQL	
277-50	34764-34773	interface	
277-51	34774-34782	displays	
277-52	34783-34786	the	
277-53	34787-34790	SQL	
277-54	34791-34800	statement	
277-55	34801-34805	with	
277-56	34806-34814	comments	
277-57	34815-34818	and	
277-58	34819-34823	line	
277-59	34824-34830	breaks	
277-60	34831-34838	removed	
277-61	34838-34839	.	

#Text=Whitespace is standardized.
278-1	34840-34850	Whitespace	
278-2	34851-34853	is	
278-3	34854-34866	standardized	
278-4	34866-34867	.	

#Text=The Show Plan button display also performs literal substitution, replacing each literal with a ?
279-1	34868-34871	The	
279-2	34872-34876	Show	
279-3	34877-34881	Plan	
279-4	34882-34888	button	
279-5	34889-34896	display	
279-6	34897-34901	also	
279-7	34902-34910	performs	
279-8	34911-34918	literal	
279-9	34919-34931	substitution	
279-10	34931-34932	,	
279-11	34933-34942	replacing	
279-12	34943-34947	each	
279-13	34948-34955	literal	
279-14	34956-34960	with	
279-15	34961-34962	a	
279-16	34963-34964	?	

#Text=, unless you have suppressed literal substitution by enclosing the literal value in double parentheses.
280-1	34964-34965	,	
280-2	34966-34972	unless	
280-3	34973-34976	you	
280-4	34977-34981	have	
280-5	34982-34992	suppressed	
280-6	34993-35000	literal	
280-7	35001-35013	substitution	
280-8	35014-35016	by	
280-9	35017-35026	enclosing	
280-10	35027-35030	the	
280-11	35031-35038	literal	
280-12	35039-35044	value	
280-13	35045-35047	in	
280-14	35048-35054	double	
280-15	35055-35066	parentheses	
280-16	35066-35067	.	

#Text=These modifications are not performed when displaying a show plan using the Explain() method, or when displayed using the SQL Runtime Statistics or Alternate Show Plans tools.
281-1	35068-35073	These	
281-2	35074-35087	modifications	
281-3	35088-35091	are	
281-4	35092-35095	not	
281-5	35096-35105	performed	
281-6	35106-35110	when	
281-7	35111-35121	displaying	
281-8	35122-35123	a	
281-9	35124-35128	show	
281-10	35129-35133	plan	
281-11	35134-35139	using	
281-12	35140-35143	the	
281-13	35144-35151	Explain	
281-14	35151-35152	(	
281-15	35152-35153	)	
281-16	35154-35160	method	
281-17	35160-35161	,	
281-18	35162-35164	or	
281-19	35165-35169	when	
281-20	35170-35179	displayed	
281-21	35180-35185	using	
281-22	35186-35189	the	
281-23	35190-35193	SQL	
281-24	35194-35201	Runtime	
281-25	35202-35212	Statistics	
281-26	35213-35215	or	
281-27	35216-35225	Alternate	
281-28	35226-35230	Show	
281-29	35231-35236	Plans	
281-30	35237-35242	tools	
281-31	35242-35243	.	

#Text=Query Plan shows the plan that would be used to execute the query.
282-1	35244-35249	Query	
282-2	35250-35254	Plan	
282-3	35255-35260	shows	
282-4	35261-35264	the	
282-5	35265-35269	plan	
282-6	35270-35274	that	
282-7	35275-35280	would	
282-8	35281-35283	be	
282-9	35284-35288	used	
282-10	35289-35291	to	
282-11	35292-35299	execute	
282-12	35300-35303	the	
282-13	35304-35309	query	
282-14	35309-35310	.	

#Text=A Query Plan can include the following:
#Text=&OpenCurlyDoubleQuoteFrozen Plan&CloseCurlyDoubleQuote is the first line of Query Plan if the query plan has been frozen; otherwise, the first line is blank.
283-1	35311-35312	A	
283-2	35313-35318	Query	
283-3	35319-35323	Plan	
283-4	35324-35327	can	
283-5	35328-35335	include	
283-6	35336-35339	the	
283-7	35340-35349	following	
283-8	35349-35350	:	
283-9	35351-35352	&	
283-10	35352-35378	OpenCurlyDoubleQuoteFrozen	
283-11	35379-35383	Plan	
283-12	35383-35384	&	
283-13	35384-35405	CloseCurlyDoubleQuote	
283-14	35406-35408	is	
283-15	35409-35412	the	
283-16	35413-35418	first	
283-17	35419-35423	line	
283-18	35424-35426	of	
283-19	35427-35432	Query	
283-20	35433-35437	Plan	
283-21	35438-35440	if	
283-22	35441-35444	the	
283-23	35445-35450	query	
283-24	35451-35455	plan	
283-25	35456-35459	has	
283-26	35460-35464	been	
283-27	35465-35471	frozen	
283-28	35471-35472	;	
283-29	35473-35482	otherwise	
283-30	35482-35483	,	
283-31	35484-35487	the	
283-32	35488-35493	first	
283-33	35494-35498	line	
283-34	35499-35501	is	
283-35	35502-35507	blank	
283-36	35507-35508	.	

#Text=&OpenCurlyDoubleQuoteRelative cost&CloseCurlyDoubleQuote is an integer value which is computed from many factors as an abstract number for comparing the efficiency of different execution plans for the same query.
284-1	35509-35510	&	
284-2	35510-35538	OpenCurlyDoubleQuoteRelative	
284-3	35539-35543	cost	
284-4	35543-35544	&	
284-5	35544-35565	CloseCurlyDoubleQuote	
284-6	35566-35568	is	
284-7	35569-35571	an	
284-8	35572-35579	integer	
284-9	35580-35585	value	
284-10	35586-35591	which	
284-11	35592-35594	is	
284-12	35595-35603	computed	
284-13	35604-35608	from	
284-14	35609-35613	many	
284-15	35614-35621	factors	
284-16	35622-35624	as	
284-17	35625-35627	an	
284-18	35628-35636	abstract	
284-19	35637-35643	number	
284-20	35644-35647	for	
284-21	35648-35657	comparing	
284-22	35658-35661	the	
284-23	35662-35672	efficiency	
284-24	35673-35675	of	
284-25	35676-35685	different	
284-26	35686-35695	execution	
284-27	35696-35701	plans	
284-28	35702-35705	for	
284-29	35706-35709	the	
284-30	35710-35714	same	
284-31	35715-35720	query	
284-32	35720-35721	.	

#Text=This calculation takes into account (among other factors) the complexity of the query, the presence of indices, and the size of the table(s).
285-1	35722-35726	This	
285-2	35727-35738	calculation	
285-3	35739-35744	takes	
285-4	35745-35749	into	
285-5	35750-35757	account	
285-6	35758-35759	(	
285-7	35759-35764	among	
285-8	35765-35770	other	
285-9	35771-35778	factors	
285-10	35778-35779	)	
285-11	35780-35783	the	
285-12	35784-35794	complexity	
285-13	35795-35797	of	
285-14	35798-35801	the	
285-15	35802-35807	query	
285-16	35807-35808	,	
285-17	35809-35812	the	
285-18	35813-35821	presence	
285-19	35822-35824	of	
285-20	35825-35832	indices	
285-21	35832-35833	,	
285-22	35834-35837	and	
285-23	35838-35841	the	
285-24	35842-35846	size	
285-25	35847-35849	of	
285-26	35850-35853	the	
285-27	35854-35859	table	
285-28	35859-35860	(	
285-29	35860-35861	s	
285-30	35861-35862	)	
285-31	35862-35863	.	

#Text=Relative cost is not useful for comparing two different queries.
286-1	35864-35872	Relative	
286-2	35873-35877	cost	
286-3	35878-35880	is	
286-4	35881-35884	not	
286-5	35885-35891	useful	
286-6	35892-35895	for	
286-7	35896-35905	comparing	
286-8	35906-35909	two	
286-9	35910-35919	different	
286-10	35920-35927	queries	
286-11	35927-35928	.	

#Text=&OpenCurlyDoubleQuoteRelative cost not available&CloseCurlyDoubleQuote is returned by certain aggregate queries, such as COUNT(*) or MAX(%ID) without a WHERE clause.
287-1	35929-35930	&	
287-2	35930-35958	OpenCurlyDoubleQuoteRelative	
287-3	35959-35963	cost	
287-4	35964-35967	not	
287-5	35968-35977	available	
287-6	35977-35978	&	
287-7	35978-35999	CloseCurlyDoubleQuote	
287-8	36000-36002	is	
287-9	36003-36011	returned	
287-10	36012-36014	by	
287-11	36015-36022	certain	
287-12	36023-36032	aggregate	
287-13	36033-36040	queries	
287-14	36040-36041	,	
287-15	36042-36046	such	
287-16	36047-36049	as	
287-17	36050-36055	COUNT	
287-18	36055-36056	(	
287-19	36056-36057	*	
287-20	36057-36058	)	
287-21	36059-36061	or	
287-22	36062-36065	MAX	
287-23	36065-36066	(	
287-24	36066-36067	%	
287-25	36067-36069	ID	
287-26	36069-36070	)	
287-27	36071-36078	without	
287-28	36079-36080	a	
287-29	36081-36086	WHERE	
287-30	36087-36093	clause	
287-31	36093-36094	.	

#Text=The Query Plan consists of a main module, and (when needed) one or more subcomponents.
288-1	36095-36098	The	
288-2	36099-36104	Query	
288-3	36105-36109	Plan	
288-4	36110-36118	consists	
288-5	36119-36121	of	
288-6	36122-36123	a	
288-7	36124-36128	main	
288-8	36129-36135	module	
288-9	36135-36136	,	
288-10	36137-36140	and	
288-11	36141-36142	(	
288-12	36142-36146	when	
288-13	36147-36153	needed	
288-14	36153-36154	)	
288-15	36155-36158	one	
288-16	36159-36161	or	
288-17	36162-36166	more	
288-18	36167-36180	subcomponents	
288-19	36180-36181	.	

#Text=One or more module subcomponents may be shown, named alphabetically, starting with B: Module:B, Module:C, etc.), and listed in the order of execution (not necessarily alphabetically).
289-1	36182-36185	One	
289-2	36186-36188	or	
289-3	36189-36193	more	
289-4	36194-36200	module	
289-5	36201-36214	subcomponents	
289-6	36215-36218	may	
289-7	36219-36221	be	
289-8	36222-36227	shown	
289-9	36227-36228	,	
289-10	36229-36234	named	
289-11	36235-36249	alphabetically	
289-12	36249-36250	,	
289-13	36251-36259	starting	
289-14	36260-36264	with	
289-15	36265-36266	B	
289-16	36266-36267	:	
289-17	36268-36274	Module	
289-18	36274-36275	:	
289-19	36275-36276	B	
289-20	36276-36277	,	
289-21	36278-36284	Module	
289-22	36284-36285	:	
289-23	36285-36286	C	
289-24	36286-36287	,	
289-25	36288-36291	etc	
289-26	36291-36292	.	
289-27	36292-36293	)	
289-28	36293-36294	,	
289-29	36295-36298	and	
289-30	36299-36305	listed	
289-31	36306-36308	in	
289-32	36309-36312	the	
289-33	36313-36318	order	
289-34	36319-36321	of	
289-35	36322-36331	execution	
289-36	36332-36333	(	
289-37	36333-36336	not	
289-38	36337-36348	necessarily	
289-39	36349-36363	alphabetically	
289-40	36363-36364	)	
289-41	36364-36365	.	

#Text=By default, a module performs processing and populates an internal temp-file (internal temporary table) with its results.
290-1	36366-36368	By	
290-2	36369-36376	default	
290-3	36376-36377	,	
290-4	36378-36379	a	
290-5	36380-36386	module	
290-6	36387-36395	performs	
290-7	36396-36406	processing	
290-8	36407-36410	and	
290-9	36411-36420	populates	
290-10	36421-36423	an	
290-11	36424-36432	internal	
290-12	36433-36442	temp-file	
290-13	36443-36444	(	
290-14	36444-36452	internal	
290-15	36453-36462	temporary	
290-16	36463-36468	table	
290-17	36468-36469	)	
290-18	36470-36474	with	
290-19	36475-36478	its	
290-20	36479-36486	results	
290-21	36486-36487	.	

#Text=You can force the query optimizer to create a query plan that does not generate internal temp-files by specifying /*#OPTIONS {"NoTempFile":1} */, as described in Comment Options.
291-1	36488-36491	You	
291-2	36492-36495	can	
291-3	36496-36501	force	
291-4	36502-36505	the	
291-5	36506-36511	query	
291-6	36512-36521	optimizer	
291-7	36522-36524	to	
291-8	36525-36531	create	
291-9	36532-36533	a	
291-10	36534-36539	query	
291-11	36540-36544	plan	
291-12	36545-36549	that	
291-13	36550-36554	does	
291-14	36555-36558	not	
291-15	36559-36567	generate	
291-16	36568-36576	internal	
291-17	36577-36587	temp-files	
291-18	36588-36590	by	
291-19	36591-36601	specifying	
291-20	36602-36603	/	
291-21	36603-36604	*	
291-22	36604-36605	#	
291-23	36605-36612	OPTIONS	
291-24	36613-36614	{	
291-25	36614-36615	"	
291-26	36615-36625	NoTempFile	
291-27	36625-36626	"	
291-28	36626-36627	:	
291-29	36627-36628	1	
291-30	36628-36629	}	
291-31	36630-36631	*	
291-32	36631-36632	/	
291-33	36632-36633	,	
291-34	36634-36636	as	
291-35	36637-36646	described	
291-36	36647-36649	in	
291-37	36650-36657	Comment	
291-38	36658-36665	Options	
291-39	36665-36666	.	

#Text=A named subquery module is shown for each subquery in the query.
292-1	36667-36668	A	
292-2	36669-36674	named	
292-3	36675-36683	subquery	
292-4	36684-36690	module	
292-5	36691-36693	is	
292-6	36694-36699	shown	
292-7	36700-36703	for	
292-8	36704-36708	each	
292-9	36709-36717	subquery	
292-10	36718-36720	in	
292-11	36721-36724	the	
292-12	36725-36730	query	
292-13	36730-36731	.	

#Text=Subquery modules are named alphabetically.
293-1	36732-36740	Subquery	
293-2	36741-36748	modules	
293-3	36749-36752	are	
293-4	36753-36758	named	
293-5	36759-36773	alphabetically	
293-6	36773-36774	.	

#Text=Subquery naming skips one or more letters before each named subquery.
294-1	36775-36783	Subquery	
294-2	36784-36790	naming	
294-3	36791-36796	skips	
294-4	36797-36800	one	
294-5	36801-36803	or	
294-6	36804-36808	more	
294-7	36809-36816	letters	
294-8	36817-36823	before	
294-9	36824-36828	each	
294-10	36829-36834	named	
294-11	36835-36843	subquery	
294-12	36843-36844	.	

#Text=Thus, Module:B, Subquery:F or Module:D, Subquery:G.
295-1	36845-36849	Thus	
295-2	36849-36850	,	
295-3	36851-36857	Module	
295-4	36857-36858	:	
295-5	36858-36859	B	
295-6	36859-36860	,	
295-7	36861-36869	Subquery	
295-8	36869-36870	:	
295-9	36870-36871	F	
295-10	36872-36874	or	
295-11	36875-36881	Module	
295-12	36881-36882	:	
295-13	36882-36883	D	
295-14	36883-36884	,	
295-15	36885-36893	Subquery	
295-16	36893-36894	:	
295-17	36894-36895	G	
295-18	36895-36896	.	

#Text=When the end of the alphabet is reached, additional subqueries are numbered, parsing Z=26 and using the same skip sequence.
296-1	36897-36901	When	
296-2	36902-36905	the	
296-3	36906-36909	end	
296-4	36910-36912	of	
296-5	36913-36916	the	
296-6	36917-36925	alphabet	
296-7	36926-36928	is	
296-8	36929-36936	reached	
296-9	36936-36937	,	
296-10	36938-36948	additional	
296-11	36949-36959	subqueries	
296-12	36960-36963	are	
296-13	36964-36972	numbered	
296-14	36972-36973	,	
296-15	36974-36981	parsing	
296-16	36982-36983	Z	
296-17	36983-36984	=	
296-18	36984-36986	26	
296-19	36987-36990	and	
296-20	36991-36996	using	
296-21	36997-37000	the	
296-22	37001-37005	same	
296-23	37006-37010	skip	
296-24	37011-37019	sequence	
296-25	37019-37020	.	

#Text=The following example is an every-third subquery naming sequence starting with Subquery:F: F, I, L, O, R, U, X, 27, 30, 33.
297-1	37021-37024	The	
297-2	37025-37034	following	
297-3	37035-37042	example	
297-4	37043-37045	is	
297-5	37046-37048	an	
297-6	37049-37060	every-third	
297-7	37061-37069	subquery	
297-8	37070-37076	naming	
297-9	37077-37085	sequence	
297-10	37086-37094	starting	
297-11	37095-37099	with	
297-12	37100-37108	Subquery	
297-13	37108-37109	:	
297-14	37109-37110	F	
297-15	37110-37111	:	
297-16	37112-37113	F	
297-17	37113-37114	,	
297-18	37115-37116	I	
297-19	37116-37117	,	
297-20	37118-37119	L	
297-21	37119-37120	,	
297-22	37121-37122	O	
297-23	37122-37123	,	
297-24	37124-37125	R	
297-25	37125-37126	,	
297-26	37127-37128	U	
297-27	37128-37129	,	
297-28	37130-37131	X	
297-29	37131-37132	,	
297-30	37133-37135	27	
297-31	37135-37136	,	
297-32	37137-37139	30	
297-33	37139-37140	,	
297-34	37141-37143	33	
297-35	37143-37144	.	

#Text=The following example is an every-second subquery naming sequence starting with Subquery:G: G, I, K, M, O, Q, S, U, W, Y, 27, 29.
298-1	37145-37148	The	
298-2	37149-37158	following	
298-3	37159-37166	example	
298-4	37167-37169	is	
298-5	37170-37172	an	
298-6	37173-37185	every-second	
298-7	37186-37194	subquery	
298-8	37195-37201	naming	
298-9	37202-37210	sequence	
298-10	37211-37219	starting	
298-11	37220-37224	with	
298-12	37225-37233	Subquery	
298-13	37233-37234	:	
298-14	37234-37235	G	
298-15	37235-37236	:	
298-16	37237-37238	G	
298-17	37238-37239	,	
298-18	37240-37241	I	
298-19	37241-37242	,	
298-20	37243-37244	K	
298-21	37244-37245	,	
298-22	37246-37247	M	
298-23	37247-37248	,	
298-24	37249-37250	O	
298-25	37250-37251	,	
298-26	37252-37253	Q	
298-27	37253-37254	,	
298-28	37255-37256	S	
298-29	37256-37257	,	
298-30	37258-37259	U	
298-31	37259-37260	,	
298-32	37261-37262	W	
298-33	37262-37263	,	
298-34	37264-37265	Y	
298-35	37265-37266	,	
298-36	37267-37269	27	
298-37	37269-37270	,	
298-38	37271-37273	29	
298-39	37273-37274	.	

#Text=If a subquery calls a module, the module is placed in alphabetical sequence after the subquery with no skip.
299-1	37275-37277	If	
299-2	37278-37279	a	
299-3	37280-37288	subquery	
299-4	37289-37294	calls	
299-5	37295-37296	a	
299-6	37297-37303	module	
299-7	37303-37304	,	
299-8	37305-37308	the	
299-9	37309-37315	module	
299-10	37316-37318	is	
299-11	37319-37325	placed	
299-12	37326-37328	in	
299-13	37329-37341	alphabetical	
299-14	37342-37350	sequence	
299-15	37351-37356	after	
299-16	37357-37360	the	
299-17	37361-37369	subquery	
299-18	37370-37374	with	
299-19	37375-37377	no	
299-20	37378-37382	skip	
299-21	37382-37383	.	

#Text=Therefore, Subquery:H calls Module:I.
300-1	37384-37393	Therefore	
300-2	37393-37394	,	
300-3	37395-37403	Subquery	
300-4	37403-37404	:	
300-5	37404-37405	H	
300-6	37406-37411	calls	
300-7	37412-37418	Module	
300-8	37418-37419	:	
300-9	37419-37420	I	
300-10	37420-37421	.	

#Text=&OpenCurlyDoubleQuoteRead master map&CloseCurlyDoubleQuote as the first bullet item in the main module indicates an inefficient Query Plan.
301-1	37422-37423	&	
301-2	37423-37447	OpenCurlyDoubleQuoteRead	
301-3	37448-37454	master	
301-4	37455-37458	map	
301-5	37458-37459	&	
301-6	37459-37480	CloseCurlyDoubleQuote	
301-7	37481-37483	as	
301-8	37484-37487	the	
301-9	37488-37493	first	
301-10	37494-37500	bullet	
301-11	37501-37505	item	
301-12	37506-37508	in	
301-13	37509-37512	the	
301-14	37513-37517	main	
301-15	37518-37524	module	
301-16	37525-37534	indicates	
301-17	37535-37537	an	
301-18	37538-37549	inefficient	
301-19	37550-37555	Query	
301-20	37556-37560	Plan	
301-21	37560-37561	.	

#Text=The Query Plan begins execution with one of the following map type statements Read master map...
302-1	37562-37565	The	
302-2	37566-37571	Query	
302-3	37572-37576	Plan	
302-4	37577-37583	begins	
302-5	37584-37593	execution	
302-6	37594-37598	with	
302-7	37599-37602	one	
302-8	37603-37605	of	
302-9	37606-37609	the	
302-10	37610-37619	following	
302-11	37620-37623	map	
302-12	37624-37628	type	
302-13	37629-37639	statements	
302-14	37640-37644	Read	
302-15	37645-37651	master	
302-16	37652-37655	map	
302-17	37655-37656	.	
302-18	37656-37657	.	
302-19	37657-37658	.	

#Text=(no available index), Read index map...
303-1	37659-37660	(	
303-2	37660-37662	no	
303-3	37663-37672	available	
303-4	37673-37678	index	
303-5	37678-37679	)	
303-6	37679-37680	,	
303-7	37681-37685	Read	
303-8	37686-37691	index	
303-9	37692-37695	map	
303-10	37695-37696	.	
303-11	37696-37697	.	
303-12	37697-37698	.	

#Text=(use available index), or Generate a stream of idkey values using the multi-index combination...
304-1	37699-37700	(	
304-2	37700-37703	use	
304-3	37704-37713	available	
304-4	37714-37719	index	
304-5	37719-37720	)	
304-6	37720-37721	,	
304-7	37722-37724	or	
304-8	37725-37733	Generate	
304-9	37734-37735	a	
304-10	37736-37742	stream	
304-11	37743-37745	of	
304-12	37746-37751	idkey	
304-13	37752-37758	values	
304-14	37759-37764	using	
304-15	37765-37768	the	
304-16	37769-37780	multi-index	
304-17	37781-37792	combination	
304-18	37792-37793	.	
304-19	37793-37794	.	
304-20	37794-37795	.	

#Text=(Multi Index, use multiple indices).
305-1	37796-37797	(	
305-2	37797-37802	Multi	
305-3	37803-37808	Index	
305-4	37808-37809	,	
305-5	37810-37813	use	
305-6	37814-37822	multiple	
305-7	37823-37830	indices	
305-8	37830-37831	)	
305-9	37831-37832	.	

#Text=Because the master map reads the data itself, rather than an index to the data, Read master map... almost always indicates an inefficient Query Plan.
306-1	37833-37840	Because	
306-2	37841-37844	the	
306-3	37845-37851	master	
306-4	37852-37855	map	
306-5	37856-37861	reads	
306-6	37862-37865	the	
306-7	37866-37870	data	
306-8	37871-37877	itself	
306-9	37877-37878	,	
306-10	37879-37885	rather	
306-11	37886-37890	than	
306-12	37891-37893	an	
306-13	37894-37899	index	
306-14	37900-37902	to	
306-15	37903-37906	the	
306-16	37907-37911	data	
306-17	37911-37912	,	
306-18	37913-37917	Read	
306-19	37918-37924	master	
306-20	37925-37928	map	
306-21	37928-37929	.	
306-22	37929-37930	.	
306-23	37930-37931	.	
306-24	37932-37938	almost	
306-25	37939-37945	always	
306-26	37946-37955	indicates	
306-27	37956-37958	an	
306-28	37959-37970	inefficient	
306-29	37971-37976	Query	
306-30	37977-37981	Plan	
306-31	37981-37982	.	

#Text=Unless the table is relatively small, you should define an index so that when you regenerate the Query Plan the first map says Read index map....
307-1	37983-37989	Unless	
307-2	37990-37993	the	
307-3	37994-37999	table	
307-4	38000-38002	is	
307-5	38003-38013	relatively	
307-6	38014-38019	small	
307-7	38019-38020	,	
307-8	38021-38024	you	
307-9	38025-38031	should	
307-10	38032-38038	define	
307-11	38039-38041	an	
307-12	38042-38047	index	
307-13	38048-38050	so	
307-14	38051-38055	that	
307-15	38056-38060	when	
307-16	38061-38064	you	
307-17	38065-38075	regenerate	
307-18	38076-38079	the	
307-19	38080-38085	Query	
307-20	38086-38090	Plan	
307-21	38091-38094	the	
307-22	38095-38100	first	
307-23	38101-38104	map	
307-24	38105-38109	says	
307-25	38110-38114	Read	
307-26	38115-38120	index	
307-27	38121-38124	map	
307-28	38124-38125	.	
307-29	38125-38126	.	
307-30	38126-38127	.	
307-31	38127-38128	.	

#Text=For information on interpreting a Query Plan, refer to &OpenCurlyDoubleQuoteInterpreting an SQL Query Plan.
308-1	38129-38132	For	
308-2	38133-38144	information	
308-3	38145-38147	on	
308-4	38148-38160	interpreting	
308-5	38161-38162	a	
308-6	38163-38168	Query	
308-7	38169-38173	Plan	
308-8	38173-38174	,	
308-9	38175-38180	refer	
308-10	38181-38183	to	
308-11	38184-38185	&	
308-12	38185-38217	OpenCurlyDoubleQuoteInterpreting	
308-13	38218-38220	an	
308-14	38221-38224	SQL	
308-15	38225-38230	Query	
308-16	38231-38235	Plan	
308-17	38235-38236	.	

#Text=&CloseCurlyDoubleQuote
#Text=Some operations create a Show Plan that indicates no Query Plan could be generated:
#Text=Non-query INSERT: An INSERT...
309-1	38236-38237	&	
309-2	38237-38258	CloseCurlyDoubleQuote	
309-3	38259-38263	Some	
309-4	38264-38274	operations	
309-5	38275-38281	create	
309-6	38282-38283	a	
309-7	38284-38288	Show	
309-8	38289-38293	Plan	
309-9	38294-38298	that	
309-10	38299-38308	indicates	
309-11	38309-38311	no	
309-12	38312-38317	Query	
309-13	38318-38322	Plan	
309-14	38323-38328	could	
309-15	38329-38331	be	
309-16	38332-38341	generated	
309-17	38341-38342	:	
309-18	38343-38352	Non-query	
309-19	38353-38359	INSERT	
309-20	38359-38360	:	
309-21	38361-38363	An	
309-22	38364-38370	INSERT	
309-23	38370-38371	.	
309-24	38371-38372	.	
309-25	38372-38373	.	

#Text=VALUES() command does not perform a query, and therefore does not generate a Query Plan.
310-1	38374-38380	VALUES	
310-2	38380-38381	(	
310-3	38381-38382	)	
310-4	38383-38390	command	
310-5	38391-38395	does	
310-6	38396-38399	not	
310-7	38400-38407	perform	
310-8	38408-38409	a	
310-9	38410-38415	query	
310-10	38415-38416	,	
310-11	38417-38420	and	
310-12	38421-38430	therefore	
310-13	38431-38435	does	
310-14	38436-38439	not	
310-15	38440-38448	generate	
310-16	38449-38450	a	
310-17	38451-38456	Query	
310-18	38457-38461	Plan	
310-19	38461-38462	.	

#Text=Query always FALSE: In a few cases, InterSystems IRIS can determine when preparing a query that a query condition will always be false, and thus cannot return data.
311-1	38463-38468	Query	
311-2	38469-38475	always	
311-3	38476-38481	FALSE	
311-4	38481-38482	:	
311-5	38483-38485	In	
311-6	38486-38487	a	
311-7	38488-38491	few	
311-8	38492-38497	cases	
311-9	38497-38498	,	
311-10	38499-38511	InterSystems	
311-11	38512-38516	IRIS	
311-12	38517-38520	can	
311-13	38521-38530	determine	
311-14	38531-38535	when	
311-15	38536-38545	preparing	
311-16	38546-38547	a	
311-17	38548-38553	query	
311-18	38554-38558	that	
311-19	38559-38560	a	
311-20	38561-38566	query	
311-21	38567-38576	condition	
311-22	38577-38581	will	
311-23	38582-38588	always	
311-24	38589-38591	be	
311-25	38592-38597	false	
311-26	38597-38598	,	
311-27	38599-38602	and	
311-28	38603-38607	thus	
311-29	38608-38614	cannot	
311-30	38615-38621	return	
311-31	38622-38626	data	
311-32	38626-38627	.	

#Text=The Show Plan informs you of this situation in the Query Plan component.
312-1	38628-38631	The	
312-2	38632-38636	Show	
312-3	38637-38641	Plan	
312-4	38642-38649	informs	
312-5	38650-38653	you	
312-6	38654-38656	of	
312-7	38657-38661	this	
312-8	38662-38671	situation	
312-9	38672-38674	in	
312-10	38675-38678	the	
312-11	38679-38684	Query	
312-12	38685-38689	Plan	
312-13	38690-38699	component	
312-14	38699-38700	.	

#Text=For example, a query containing the condition WHERE %ID IS NULL or the condition WHERE Name %STARTSWITH('A') AND Name IS NULL cannot return data, and therefore InterSystems IRIS generates no execution plan.
313-1	38701-38704	For	
313-2	38705-38712	example	
313-3	38712-38713	,	
313-4	38714-38715	a	
313-5	38716-38721	query	
313-6	38722-38732	containing	
313-7	38733-38736	the	
313-8	38737-38746	condition	
313-9	38747-38752	WHERE	
313-10	38753-38754	%	
313-11	38754-38756	ID	
313-12	38757-38759	IS	
313-13	38760-38764	NULL	
313-14	38765-38767	or	
313-15	38768-38771	the	
313-16	38772-38781	condition	
313-17	38782-38787	WHERE	
313-18	38788-38792	Name	
313-19	38793-38794	%	
313-20	38794-38804	STARTSWITH	
313-21	38804-38805	(	
313-22	38805-38806	'	
313-23	38806-38807	A	
313-24	38807-38808	'	
313-25	38808-38809	)	
313-26	38810-38813	AND	
313-27	38814-38818	Name	
313-28	38819-38821	IS	
313-29	38822-38826	NULL	
313-30	38827-38833	cannot	
313-31	38834-38840	return	
313-32	38841-38845	data	
313-33	38845-38846	,	
313-34	38847-38850	and	
313-35	38851-38860	therefore	
313-36	38861-38873	InterSystems	
313-37	38874-38878	IRIS	
313-38	38879-38888	generates	
313-39	38889-38891	no	
313-40	38892-38901	execution	
313-41	38902-38906	plan	
313-42	38906-38907	.	

#Text=Rather than generating an execution plan, the Query Plan says &OpenCurlyDoubleQuoteOutput no rows&CloseCurlyDoubleQuote.
314-1	38908-38914	Rather	
314-2	38915-38919	than	
314-3	38920-38930	generating	
314-4	38931-38933	an	
314-5	38934-38943	execution	
314-6	38944-38948	plan	
314-7	38948-38949	,	
314-8	38950-38953	the	
314-9	38954-38959	Query	
314-10	38960-38964	Plan	
314-11	38965-38969	says	
314-12	38970-38971	&	
314-13	38971-38997	OpenCurlyDoubleQuoteOutput	
314-14	38998-39000	no	
314-15	39001-39005	rows	
314-16	39005-39006	&	
314-17	39006-39027	CloseCurlyDoubleQuote	
314-18	39027-39028	.	

#Text=If a query contains a subquery with one of these conditions, the subquery module of the Query Plan says &OpenCurlyDoubleQuoteSubquery result NULL, found no rows&CloseCurlyDoubleQuote.
315-1	39029-39031	If	
315-2	39032-39033	a	
315-3	39034-39039	query	
315-4	39040-39048	contains	
315-5	39049-39050	a	
315-6	39051-39059	subquery	
315-7	39060-39064	with	
315-8	39065-39068	one	
315-9	39069-39071	of	
315-10	39072-39077	these	
315-11	39078-39088	conditions	
315-12	39088-39089	,	
315-13	39090-39093	the	
315-14	39094-39102	subquery	
315-15	39103-39109	module	
315-16	39110-39112	of	
315-17	39113-39116	the	
315-18	39117-39122	Query	
315-19	39123-39127	Plan	
315-20	39128-39132	says	
315-21	39133-39134	&	
315-22	39134-39162	OpenCurlyDoubleQuoteSubquery	
315-23	39163-39169	result	
315-24	39170-39174	NULL	
315-25	39174-39175	,	
315-26	39176-39181	found	
315-27	39182-39184	no	
315-28	39185-39189	rows	
315-29	39189-39190	&	
315-30	39190-39211	CloseCurlyDoubleQuote	
315-31	39211-39212	.	

#Text=This condition check is limited to a few situations involving NULL, and is not intended to catch all self-contradictory query conditions.
316-1	39213-39217	This	
316-2	39218-39227	condition	
316-3	39228-39233	check	
316-4	39234-39236	is	
316-5	39237-39244	limited	
316-6	39245-39247	to	
316-7	39248-39249	a	
316-8	39250-39253	few	
316-9	39254-39264	situations	
316-10	39265-39274	involving	
316-11	39275-39279	NULL	
316-12	39279-39280	,	
316-13	39281-39284	and	
316-14	39285-39287	is	
316-15	39288-39291	not	
316-16	39292-39300	intended	
316-17	39301-39303	to	
316-18	39304-39309	catch	
316-19	39310-39313	all	
316-20	39314-39332	self-contradictory	
316-21	39333-39338	query	
316-22	39339-39349	conditions	
316-23	39349-39350	.	

#Text=Invalid query: Show Plan displays an SQLCODE error message for most invalid queries.
317-1	39351-39358	Invalid	
317-2	39359-39364	query	
317-3	39364-39365	:	
317-4	39366-39370	Show	
317-5	39371-39375	Plan	
317-6	39376-39384	displays	
317-7	39385-39387	an	
317-8	39388-39395	SQLCODE	
317-9	39396-39401	error	
317-10	39402-39409	message	
317-11	39410-39413	for	
317-12	39414-39418	most	
317-13	39419-39426	invalid	
317-14	39427-39434	queries	
317-15	39434-39435	.	

#Text=However, in a few cases, Show Plan displays as empty.
318-1	39436-39443	However	
318-2	39443-39444	,	
318-3	39445-39447	in	
318-4	39448-39449	a	
318-5	39450-39453	few	
318-6	39454-39459	cases	
318-7	39459-39460	,	
318-8	39461-39465	Show	
318-9	39466-39470	Plan	
318-10	39471-39479	displays	
318-11	39480-39482	as	
318-12	39483-39488	empty	
318-13	39488-39489	.	

#Text=For example, WHERE Name = $$$$$ or WHERE Name %STARTSWITH('A") (note single-quote and double-quote).
319-1	39490-39493	For	
319-2	39494-39501	example	
319-3	39501-39502	,	
319-4	39503-39508	WHERE	
319-5	39509-39513	Name	
319-6	39514-39515	=	
319-7	39516-39517	$	
319-8	39517-39518	$	
319-9	39518-39519	$	
319-10	39519-39520	$	
319-11	39520-39521	$	
319-12	39522-39524	or	
319-13	39525-39530	WHERE	
319-14	39531-39535	Name	
319-15	39536-39537	%	
319-16	39537-39547	STARTSWITH	
319-17	39547-39548	(	
319-18	39548-39549	'	
319-19	39549-39550	A	
319-20	39550-39551	"	
319-21	39551-39552	)	
319-22	39553-39554	(	
319-23	39554-39558	note	
319-24	39559-39571	single-quote	
319-25	39572-39575	and	
319-26	39576-39588	double-quote	
319-27	39588-39589	)	
319-28	39589-39590	.	

#Text=In these cases, Show Plan displays no Statement Text, and Query Plan says [No plan created for this statement].
320-1	39591-39593	In	
320-2	39594-39599	these	
320-3	39600-39605	cases	
320-4	39605-39606	,	
320-5	39607-39611	Show	
320-6	39612-39616	Plan	
320-7	39617-39625	displays	
320-8	39626-39628	no	
320-9	39629-39638	Statement	
320-10	39639-39643	Text	
320-11	39643-39644	,	
320-12	39645-39648	and	
320-13	39649-39654	Query	
320-14	39655-39659	Plan	
320-15	39660-39664	says	
320-16	39665-39666	[	
320-17	39666-39668	No	
320-18	39669-39673	plan	
320-19	39674-39681	created	
320-20	39682-39685	for	
320-21	39686-39690	this	
320-22	39691-39700	statement	
320-23	39700-39701	]	
320-24	39701-39702	.	

#Text=This commonly occurs when quotation marks delimiting a literal are imbalanced.
321-1	39703-39707	This	
321-2	39708-39716	commonly	
321-3	39717-39723	occurs	
321-4	39724-39728	when	
321-5	39729-39738	quotation	
321-6	39739-39744	marks	
321-7	39745-39755	delimiting	
321-8	39756-39757	a	
321-9	39758-39765	literal	
321-10	39766-39769	are	
321-11	39770-39780	imbalanced	
321-12	39780-39781	.	

#Text=It also occurs when you specify two or more leading dollar signs without specifying the correct syntax for a user-defined (&OpenCurlyDoubleQuoteextrinsic&CloseCurlyDoubleQuote) function.
322-1	39782-39784	It	
322-2	39785-39789	also	
322-3	39790-39796	occurs	
322-4	39797-39801	when	
322-5	39802-39805	you	
322-6	39806-39813	specify	
322-7	39814-39817	two	
322-8	39818-39820	or	
322-9	39821-39825	more	
322-10	39826-39833	leading	
322-11	39834-39840	dollar	
322-12	39841-39846	signs	
322-13	39847-39854	without	
322-14	39855-39865	specifying	
322-15	39866-39869	the	
322-16	39870-39877	correct	
322-17	39878-39884	syntax	
322-18	39885-39888	for	
322-19	39889-39890	a	
322-20	39891-39903	user-defined	
322-21	39904-39905	(	
322-22	39905-39906	&	
322-23	39906-39935	OpenCurlyDoubleQuoteextrinsic	
322-24	39935-39936	&	
322-25	39936-39957	CloseCurlyDoubleQuote	
322-26	39957-39958	)	
322-27	39959-39967	function	
322-28	39967-39968	.	

#Text=Alternate Show PlansCopy link to this section
#Text=You can display alternate execution plans for a query using the Management Portal or the Explain() method.
323-1	39969-39978	Alternate	
323-2	39979-39983	Show	
323-3	39984-39993	PlansCopy	
323-4	39994-39998	link	
323-5	39999-40001	to	
323-6	40002-40006	this	
323-7	40007-40014	section	
323-8	40015-40018	You	
323-9	40019-40022	can	
323-10	40023-40030	display	
323-11	40031-40040	alternate	
323-12	40041-40050	execution	
323-13	40051-40056	plans	
323-14	40057-40060	for	
323-15	40061-40062	a	
323-16	40063-40068	query	
323-17	40069-40074	using	
323-18	40075-40078	the	
323-19	40079-40089	Management	
323-20	40090-40096	Portal	
323-21	40097-40099	or	
323-22	40100-40103	the	
323-23	40104-40111	Explain	
323-24	40111-40112	(	
323-25	40112-40113	)	
323-26	40114-40120	method	
323-27	40120-40121	.	

#Text=To display alternate execution plans for a query from the Management Portal using either of the following:
#Text=Select System Explorer, select Tools, select SQL Performance Tools, then select Alternate Show Plans.
324-1	40122-40124	To	
324-2	40125-40132	display	
324-3	40133-40142	alternate	
324-4	40143-40152	execution	
324-5	40153-40158	plans	
324-6	40159-40162	for	
324-7	40163-40164	a	
324-8	40165-40170	query	
324-9	40171-40175	from	
324-10	40176-40179	the	
324-11	40180-40190	Management	
324-12	40191-40197	Portal	
324-13	40198-40203	using	
324-14	40204-40210	either	
324-15	40211-40213	of	
324-16	40214-40217	the	
324-17	40218-40227	following	
324-18	40227-40228	:	
324-19	40229-40235	Select	
324-20	40236-40242	System	
324-21	40243-40251	Explorer	
324-22	40251-40252	,	
324-23	40253-40259	select	
324-24	40260-40265	Tools	
324-25	40265-40266	,	
324-26	40267-40273	select	
324-27	40274-40277	SQL	
324-28	40278-40289	Performance	
324-29	40290-40295	Tools	
324-30	40295-40296	,	
324-31	40297-40301	then	
324-32	40302-40308	select	
324-33	40309-40318	Alternate	
324-34	40319-40323	Show	
324-35	40324-40329	Plans	
324-36	40329-40330	.	

#Text=Select System Explorer, select SQL, then from the Tools drop-down menu select Alternate Show Plans.
325-1	40331-40337	Select	
325-2	40338-40344	System	
325-3	40345-40353	Explorer	
325-4	40353-40354	,	
325-5	40355-40361	select	
325-6	40362-40365	SQL	
325-7	40365-40366	,	
325-8	40367-40371	then	
325-9	40372-40376	from	
325-10	40377-40380	the	
325-11	40381-40386	Tools	
325-12	40387-40396	drop-down	
325-13	40397-40401	menu	
325-14	40402-40408	select	
325-15	40409-40418	Alternate	
325-16	40419-40423	Show	
325-17	40424-40429	Plans	
325-18	40429-40430	.	

#Text=Using the Alternate Show Plans tool:
#Text=Input an SQL query text, or retrieve one using the Show History button.
326-1	40431-40436	Using	
326-2	40437-40440	the	
326-3	40441-40450	Alternate	
326-4	40451-40455	Show	
326-5	40456-40461	Plans	
326-6	40462-40466	tool	
326-7	40466-40467	:	
326-8	40468-40473	Input	
326-9	40474-40476	an	
326-10	40477-40480	SQL	
326-11	40481-40486	query	
326-12	40487-40491	text	
326-13	40491-40492	,	
326-14	40493-40495	or	
326-15	40496-40504	retrieve	
326-16	40505-40508	one	
326-17	40509-40514	using	
326-18	40515-40518	the	
326-19	40519-40523	Show	
326-20	40524-40531	History	
326-21	40532-40538	button	
326-22	40538-40539	.	

#Text=You can clear the query text field by clicking the round "X" circle on the right hand side.
327-1	40540-40543	You	
327-2	40544-40547	can	
327-3	40548-40553	clear	
327-4	40554-40557	the	
327-5	40558-40563	query	
327-6	40564-40568	text	
327-7	40569-40574	field	
327-8	40575-40577	by	
327-9	40578-40586	clicking	
327-10	40587-40590	the	
327-11	40591-40596	round	
327-12	40597-40598	"	
327-13	40598-40599	X	
327-14	40599-40600	"	
327-15	40601-40607	circle	
327-16	40608-40610	on	
327-17	40611-40614	the	
327-18	40615-40620	right	
327-19	40621-40625	hand	
327-20	40626-40630	side	
327-21	40630-40631	.	

#Text=Press the Show Plan Options button to display multiple alternate show plans.
328-1	40632-40637	Press	
328-2	40638-40641	the	
328-3	40642-40646	Show	
328-4	40647-40651	Plan	
328-5	40652-40659	Options	
328-6	40660-40666	button	
328-7	40667-40669	to	
328-8	40670-40677	display	
328-9	40678-40686	multiple	
328-10	40687-40696	alternate	
328-11	40697-40701	show	
328-12	40702-40707	plans	
328-13	40707-40708	.	

#Text=The Run ... in the background check box is unselected by default, which is the preferred setting for most queries.
329-1	40709-40712	The	
329-2	40713-40716	Run	
329-3	40717-40718	.	
329-4	40718-40719	.	
329-5	40719-40720	.	
329-6	40721-40723	in	
329-7	40724-40727	the	
329-8	40728-40738	background	
329-9	40739-40744	check	
329-10	40745-40748	box	
329-11	40749-40751	is	
329-12	40752-40762	unselected	
329-13	40763-40765	by	
329-14	40766-40773	default	
329-15	40773-40774	,	
329-16	40775-40780	which	
329-17	40781-40783	is	
329-18	40784-40787	the	
329-19	40788-40797	preferred	
329-20	40798-40805	setting	
329-21	40806-40809	for	
329-22	40810-40814	most	
329-23	40815-40822	queries	
329-24	40822-40823	.	

#Text=It is recommended that you select the Run ... in the background check box for large or complex queries.
330-1	40824-40826	It	
330-2	40827-40829	is	
330-3	40830-40841	recommended	
330-4	40842-40846	that	
330-5	40847-40850	you	
330-6	40851-40857	select	
330-7	40858-40861	the	
330-8	40862-40865	Run	
330-9	40866-40867	.	
330-10	40867-40868	.	
330-11	40868-40869	.	
330-12	40870-40872	in	
330-13	40873-40876	the	
330-14	40877-40887	background	
330-15	40888-40893	check	
330-16	40894-40897	box	
330-17	40898-40901	for	
330-18	40902-40907	large	
330-19	40908-40910	or	
330-20	40911-40918	complex	
330-21	40919-40926	queries	
330-22	40926-40927	.	

#Text=While a long query is being run in background a View Process button is shown.
331-1	40928-40933	While	
331-2	40934-40935	a	
331-3	40936-40940	long	
331-4	40941-40946	query	
331-5	40947-40949	is	
331-6	40950-40955	being	
331-7	40956-40959	run	
331-8	40960-40962	in	
331-9	40963-40973	background	
331-10	40974-40975	a	
331-11	40976-40980	View	
331-12	40981-40988	Process	
331-13	40989-40995	button	
331-14	40996-40998	is	
331-15	40999-41004	shown	
331-16	41004-41005	.	

#Text=Clicking View Process opens the Process Details page in a new tab.
332-1	41006-41014	Clicking	
332-2	41015-41019	View	
332-3	41020-41027	Process	
332-4	41028-41033	opens	
332-5	41034-41037	the	
332-6	41038-41045	Process	
332-7	41046-41053	Details	
332-8	41054-41058	page	
332-9	41059-41061	in	
332-10	41062-41063	a	
332-11	41064-41067	new	
332-12	41068-41071	tab	
332-13	41071-41072	.	

#Text=From the Process Details page, you can view the process, and may Suspend, Resume or Terminate the process.
333-1	41073-41077	From	
333-2	41078-41081	the	
333-3	41082-41089	Process	
333-4	41090-41097	Details	
333-5	41098-41102	page	
333-6	41102-41103	,	
333-7	41104-41107	you	
333-8	41108-41111	can	
333-9	41112-41116	view	
333-10	41117-41120	the	
333-11	41121-41128	process	
333-12	41128-41129	,	
333-13	41130-41133	and	
333-14	41134-41137	may	
333-15	41138-41145	Suspend	
333-16	41145-41146	,	
333-17	41147-41153	Resume	
333-18	41154-41156	or	
333-19	41157-41166	Terminate	
333-20	41167-41170	the	
333-21	41171-41178	process	
333-22	41178-41179	.	

#Text=Possible Plans are listed in ascending order by Cost, with the Map Type and Starting Map.
334-1	41180-41188	Possible	
334-2	41189-41194	Plans	
334-3	41195-41198	are	
334-4	41199-41205	listed	
334-5	41206-41208	in	
334-6	41209-41218	ascending	
334-7	41219-41224	order	
334-8	41225-41227	by	
334-9	41228-41232	Cost	
334-10	41232-41233	,	
334-11	41234-41238	with	
334-12	41239-41242	the	
334-13	41243-41246	Map	
334-14	41247-41251	Type	
334-15	41252-41255	and	
334-16	41256-41264	Starting	
334-17	41265-41268	Map	
334-18	41268-41269	.	

#Text=You can select the Show Plan (no statistics) or Show Plan with Stats link for each plan for further details.
335-1	41270-41273	You	
335-2	41274-41277	can	
335-3	41278-41284	select	
335-4	41285-41288	the	
335-5	41289-41293	Show	
335-6	41294-41298	Plan	
335-7	41299-41300	(	
335-8	41300-41302	no	
335-9	41303-41313	statistics	
335-10	41313-41314	)	
335-11	41315-41317	or	
335-12	41318-41322	Show	
335-13	41323-41327	Plan	
335-14	41328-41332	with	
335-15	41333-41338	Stats	
335-16	41339-41343	link	
335-17	41344-41347	for	
335-18	41348-41352	each	
335-19	41353-41357	plan	
335-20	41358-41361	for	
335-21	41362-41369	further	
335-22	41370-41377	details	
335-23	41377-41378	.	

#Text=From the list of possible plans, use the check boxes to select the plans that you wish to compare, then press the Compare Show Plans with Stats button to run them and display their SQL statistics.
336-1	41379-41383	From	
336-2	41384-41387	the	
336-3	41388-41392	list	
336-4	41393-41395	of	
336-5	41396-41404	possible	
336-6	41405-41410	plans	
336-7	41410-41411	,	
336-8	41412-41415	use	
336-9	41416-41419	the	
336-10	41420-41425	check	
336-11	41426-41431	boxes	
336-12	41432-41434	to	
336-13	41435-41441	select	
336-14	41442-41445	the	
336-15	41446-41451	plans	
336-16	41452-41456	that	
336-17	41457-41460	you	
336-18	41461-41465	wish	
336-19	41466-41468	to	
336-20	41469-41476	compare	
336-21	41476-41477	,	
336-22	41478-41482	then	
336-23	41483-41488	press	
336-24	41489-41492	the	
336-25	41493-41500	Compare	
336-26	41501-41505	Show	
336-27	41506-41511	Plans	
336-28	41512-41516	with	
336-29	41517-41522	Stats	
336-30	41523-41529	button	
336-31	41530-41532	to	
336-32	41533-41536	run	
336-33	41537-41541	them	
336-34	41542-41545	and	
336-35	41546-41553	display	
336-36	41554-41559	their	
336-37	41560-41563	SQL	
336-38	41564-41574	statistics	
336-39	41574-41575	.	

#Text=The Explain() method with the all qualifier shows all of the execution plans for a query.
337-1	41576-41579	The	
337-2	41580-41587	Explain	
337-3	41587-41588	(	
337-4	41588-41589	)	
337-5	41590-41596	method	
337-6	41597-41601	with	
337-7	41602-41605	the	
337-8	41606-41609	all	
337-9	41610-41619	qualifier	
337-10	41620-41625	shows	
337-11	41626-41629	all	
337-12	41630-41632	of	
337-13	41633-41636	the	
337-14	41637-41646	execution	
337-15	41647-41652	plans	
337-16	41653-41656	for	
337-17	41657-41658	a	
337-18	41659-41664	query	
337-19	41664-41665	.	

#Text=It first shows the plan the InterSystems IRIS considers optimal (lowest cost), then displays alternate plans.
338-1	41666-41668	It	
338-2	41669-41674	first	
338-3	41675-41680	shows	
338-4	41681-41684	the	
338-5	41685-41689	plan	
338-6	41690-41693	the	
338-7	41694-41706	InterSystems	
338-8	41707-41711	IRIS	
338-9	41712-41721	considers	
338-10	41722-41729	optimal	
338-11	41730-41731	(	
338-12	41731-41737	lowest	
338-13	41738-41742	cost	
338-14	41742-41743	)	
338-15	41743-41744	,	
338-16	41745-41749	then	
338-17	41750-41758	displays	
338-18	41759-41768	alternate	
338-19	41769-41774	plans	
338-20	41774-41775	.	

#Text=Alternate plans are listed in ascending order of cost.
339-1	41776-41785	Alternate	
339-2	41786-41791	plans	
339-3	41792-41795	are	
339-4	41796-41802	listed	
339-5	41803-41805	in	
339-6	41806-41815	ascending	
339-7	41816-41821	order	
339-8	41822-41824	of	
339-9	41825-41829	cost	
339-10	41829-41830	.	

#Text=The following example displays the optimal execution plan, then lists alternate plans:
#Text=DO $SYSTEM.SQL.SetSQLStatsFlagJob(3)
#Text=SET mysql=1
#Text=SET mysql(1)="SELECT TOP 4 Name,DOB FROM Sample.Person ORDER BY Age"
#Text=DO $SYSTEM.SQL.Explain(.mysql,{"all":1},,.plan)
#Text=ZWRITE plan
#Text=Copy code to clipboard
#Text=Also refer to the possiblePlans methods in the %SYS.PTools.StatsSQL class.
340-1	41831-41834	The	
340-2	41835-41844	following	
340-3	41845-41852	example	
340-4	41853-41861	displays	
340-5	41862-41865	the	
340-6	41866-41873	optimal	
340-7	41874-41883	execution	
340-8	41884-41888	plan	
340-9	41888-41889	,	
340-10	41890-41894	then	
340-11	41895-41900	lists	
340-12	41901-41910	alternate	
340-13	41911-41916	plans	
340-14	41916-41917	:	
340-15	41918-41920	DO	
340-16	41921-41922	$	
340-17	41922-41951	SYSTEM.SQL.SetSQLStatsFlagJob	
340-18	41951-41952	(	
340-19	41952-41953	3	
340-20	41953-41954	)	
340-21	41955-41958	SET	
340-22	41959-41964	mysql	
340-23	41964-41965	=	
340-24	41965-41966	1	
340-25	41967-41970	SET	
340-26	41971-41976	mysql	
340-27	41976-41977	(	
340-28	41977-41978	1	
340-29	41978-41979	)	
340-30	41979-41980	=	
340-31	41980-41981	"	
340-32	41981-41987	SELECT	
340-33	41988-41991	TOP	
340-34	41992-41993	4	
340-35	41994-41998	Name	
340-36	41998-41999	,	
340-37	41999-42002	DOB	
340-38	42003-42007	FROM	
340-39	42008-42021	Sample.Person	
340-40	42022-42027	ORDER	
340-41	42028-42030	BY	
340-42	42031-42034	Age	
340-43	42034-42035	"	
340-44	42036-42038	DO	
340-45	42039-42040	$	
340-46	42040-42058	SYSTEM.SQL.Explain	
340-47	42058-42059	(	
340-48	42059-42060	.	
340-49	42060-42065	mysql	
340-50	42065-42066	,	
340-51	42066-42067	{	
340-52	42067-42068	"	
340-53	42068-42071	all	
340-54	42071-42072	"	
340-55	42072-42073	:	
340-56	42073-42074	1	
340-57	42074-42075	}	
340-58	42075-42076	,	
340-59	42076-42077	,	
340-60	42077-42078	.	
340-61	42078-42082	plan	
340-62	42082-42083	)	
340-63	42084-42090	ZWRITE	
340-64	42091-42095	plan	
340-65	42096-42100	Copy	
340-66	42101-42105	code	
340-67	42106-42108	to	
340-68	42109-42118	clipboard	
340-69	42119-42123	Also	
340-70	42124-42129	refer	
340-71	42130-42132	to	
340-72	42133-42136	the	
340-73	42137-42150	possiblePlans	
340-74	42151-42158	methods	
340-75	42159-42161	in	
340-76	42162-42165	the	
340-77	42166-42167	%	
340-78	42167-42186	SYS.PTools.StatsSQL	
340-79	42187-42192	class	
340-80	42192-42193	.	

#Text=StatsCopy link to this section
#Text=The Show Plans Options lists assigns each alternate show plan a Cost value, which enables you to make relative comparisons between the execution plans.
341-1	42194-42203	StatsCopy	
341-2	42204-42208	link	
341-3	42209-42211	to	
341-4	42212-42216	this	
341-5	42217-42224	section	
341-6	42225-42228	The	
341-7	42229-42233	Show	
341-8	42234-42239	Plans	
341-9	42240-42247	Options	
341-10	42248-42253	lists	
341-11	42254-42261	assigns	
341-12	42262-42266	each	
341-13	42267-42276	alternate	
341-14	42277-42281	show	
341-15	42282-42286	plan	
341-16	42287-42288	a	
341-17	42289-42293	Cost	
341-18	42294-42299	value	
341-19	42299-42300	,	
341-20	42301-42306	which	
341-21	42307-42314	enables	
341-22	42315-42318	you	
341-23	42319-42321	to	
341-24	42322-42326	make	
341-25	42327-42335	relative	
341-26	42336-42347	comparisons	
341-27	42348-42355	between	
341-28	42356-42359	the	
341-29	42360-42369	execution	
341-30	42370-42375	plans	
341-31	42375-42376	.	

#Text=The Alternate Show Plan details provides for each Query Plan a set of stats (statistics) for the Query Totals, and (where applicable) for each Query plan module.
342-1	42377-42380	The	
342-2	42381-42390	Alternate	
342-3	42391-42395	Show	
342-4	42396-42400	Plan	
342-5	42401-42408	details	
342-6	42409-42417	provides	
342-7	42418-42421	for	
342-8	42422-42426	each	
342-9	42427-42432	Query	
342-10	42433-42437	Plan	
342-11	42438-42439	a	
342-12	42440-42443	set	
342-13	42444-42446	of	
342-14	42447-42452	stats	
342-15	42453-42454	(	
342-16	42454-42464	statistics	
342-17	42464-42465	)	
342-18	42466-42469	for	
342-19	42470-42473	the	
342-20	42474-42479	Query	
342-21	42480-42486	Totals	
342-22	42486-42487	,	
342-23	42488-42491	and	
342-24	42492-42493	(	
342-25	42493-42498	where	
342-26	42499-42509	applicable	
342-27	42509-42510	)	
342-28	42511-42514	for	
342-29	42515-42519	each	
342-30	42520-42525	Query	
342-31	42526-42530	plan	
342-32	42531-42537	module	
342-33	42537-42538	.	

#Text=The stats for each module include Time (overall performance, in seconds), Global Refs (number of global references), Commands (number of lines executed), and Read Latency (disk wait, in milliseconds).
343-1	42539-42542	The	
343-2	42543-42548	stats	
343-3	42549-42552	for	
343-4	42553-42557	each	
343-5	42558-42564	module	
343-6	42565-42572	include	
343-7	42573-42577	Time	
343-8	42578-42579	(	
343-9	42579-42586	overall	
343-10	42587-42598	performance	
343-11	42598-42599	,	
343-12	42600-42602	in	
343-13	42603-42610	seconds	
343-14	42610-42611	)	
343-15	42611-42612	,	
343-16	42613-42619	Global	
343-17	42620-42624	Refs	
343-18	42625-42626	(	
343-19	42626-42632	number	
343-20	42633-42635	of	
343-21	42636-42642	global	
343-22	42643-42653	references	
343-23	42653-42654	)	
343-24	42654-42655	,	
343-25	42656-42664	Commands	
343-26	42665-42666	(	
343-27	42666-42672	number	
343-28	42673-42675	of	
343-29	42676-42681	lines	
343-30	42682-42690	executed	
343-31	42690-42691	)	
343-32	42691-42692	,	
343-33	42693-42696	and	
343-34	42697-42701	Read	
343-35	42702-42709	Latency	
343-36	42710-42711	(	
343-37	42711-42715	disk	
343-38	42716-42720	wait	
343-39	42720-42721	,	
343-40	42722-42724	in	
343-41	42725-42737	milliseconds	
343-42	42737-42738	)	
343-43	42738-42739	.	

#Text=The Query Totals stats also includes the number of Rows Returned.
344-1	42740-42743	The	
344-2	42744-42749	Query	
344-3	42750-42756	Totals	
344-4	42757-42762	stats	
344-5	42763-42767	also	
344-6	42768-42776	includes	
344-7	42777-42780	the	
344-8	42781-42787	number	
344-9	42788-42790	of	
344-10	42791-42795	Rows	
344-11	42796-42804	Returned	
344-12	42804-42805	.	

#Text=Writing Query Optimization Plans to a FileCopy link to this section
#Text=The following utility lists the query optimization plan(s) for one or more queries to a text file.
345-1	42806-42813	Writing	
345-2	42814-42819	Query	
345-3	42820-42832	Optimization	
345-4	42833-42838	Plans	
345-5	42839-42841	to	
345-6	42842-42843	a	
345-7	42844-42852	FileCopy	
345-8	42853-42857	link	
345-9	42858-42860	to	
345-10	42861-42865	this	
345-11	42866-42873	section	
345-12	42874-42877	The	
345-13	42878-42887	following	
345-14	42888-42895	utility	
345-15	42896-42901	lists	
345-16	42902-42905	the	
345-17	42906-42911	query	
345-18	42912-42924	optimization	
345-19	42925-42929	plan	
345-20	42929-42930	(	
345-21	42930-42931	s	
345-22	42931-42932	)	
345-23	42933-42936	for	
345-24	42937-42940	one	
345-25	42941-42943	or	
345-26	42944-42948	more	
345-27	42949-42956	queries	
345-28	42957-42959	to	
345-29	42960-42961	a	
345-30	42962-42966	text	
345-31	42967-42971	file	
345-32	42971-42972	.	

#Text=QOPlanner^%apiSQL(infile,outfile,eos,schemapath)
#Text=infile
#Text=A file pathname to a text file containing a listing of cached queries.
346-1	42973-42982	QOPlanner	
346-2	42982-42983	^	
346-3	42983-42984	%	
346-4	42984-42990	apiSQL	
346-5	42990-42991	(	
346-6	42991-42997	infile	
346-7	42997-42998	,	
346-8	42998-43005	outfile	
346-9	43005-43006	,	
346-10	43006-43009	eos	
346-11	43009-43010	,	
346-12	43010-43020	schemapath	
346-13	43020-43021	)	
346-14	43022-43028	infile	
346-15	43029-43030	A	
346-16	43031-43035	file	
346-17	43036-43044	pathname	
346-18	43045-43047	to	
346-19	43048-43049	a	
346-20	43050-43054	text	
346-21	43055-43059	file	
346-22	43060-43070	containing	
346-23	43071-43072	a	
346-24	43073-43080	listing	
346-25	43081-43083	of	
346-26	43084-43090	cached	
346-27	43091-43098	queries	
346-28	43098-43099	.	

#Text=Specified as a quoted string.
#Text=outfile
#Text=A file pathname where query optimization plans are to be listed.
347-1	43100-43109	Specified	
347-2	43110-43112	as	
347-3	43113-43114	a	
347-4	43115-43121	quoted	
347-5	43122-43128	string	
347-6	43128-43129	.	
347-7	43130-43137	outfile	
347-8	43138-43139	A	
347-9	43140-43144	file	
347-10	43145-43153	pathname	
347-11	43154-43159	where	
347-12	43160-43165	query	
347-13	43166-43178	optimization	
347-14	43179-43184	plans	
347-15	43185-43188	are	
347-16	43189-43191	to	
347-17	43192-43194	be	
347-18	43195-43201	listed	
347-19	43201-43202	.	

#Text=Specified as a quoted string.
348-1	43203-43212	Specified	
348-2	43213-43215	as	
348-3	43216-43217	a	
348-4	43218-43224	quoted	
348-5	43225-43231	string	
348-6	43231-43232	.	

#Text=If the file does not exist, the system creates it.
349-1	43233-43235	If	
349-2	43236-43239	the	
349-3	43240-43244	file	
349-4	43245-43249	does	
349-5	43250-43253	not	
349-6	43254-43259	exist	
349-7	43259-43260	,	
349-8	43261-43264	the	
349-9	43265-43271	system	
349-10	43272-43279	creates	
349-11	43280-43282	it	
349-12	43282-43283	.	

#Text=If the file already exists, InterSystems IRIS overwrites it.
#Text=eos
#Text=Optional — The end-of-statement delimiter used to separate the individual cached queries in the infile listing.
350-1	43284-43286	If	
350-2	43287-43290	the	
350-3	43291-43295	file	
350-4	43296-43303	already	
350-5	43304-43310	exists	
350-6	43310-43311	,	
350-7	43312-43324	InterSystems	
350-8	43325-43329	IRIS	
350-9	43330-43340	overwrites	
350-10	43341-43343	it	
350-11	43343-43344	.	
350-12	43345-43348	eos	
350-13	43349-43357	Optional	
350-14	43358-43359	—	
350-15	43360-43363	The	
350-16	43364-43380	end-of-statement	
350-17	43381-43390	delimiter	
350-18	43391-43395	used	
350-19	43396-43398	to	
350-20	43399-43407	separate	
350-21	43408-43411	the	
350-22	43412-43422	individual	
350-23	43423-43429	cached	
350-24	43430-43437	queries	
350-25	43438-43440	in	
350-26	43441-43444	the	
350-27	43445-43451	infile	
350-28	43452-43459	listing	
350-29	43459-43460	.	

#Text=Specified as a quoted string.
351-1	43461-43470	Specified	
351-2	43471-43473	as	
351-3	43474-43475	a	
351-4	43476-43482	quoted	
351-5	43483-43489	string	
351-6	43489-43490	.	

#Text=The default is &OpenCurlyDoubleQuoteGO&CloseCurlyDoubleQuote.
352-1	43491-43494	The	
352-2	43495-43502	default	
352-3	43503-43505	is	
352-4	43506-43507	&	
352-5	43507-43529	OpenCurlyDoubleQuoteGO	
352-6	43529-43530	&	
352-7	43530-43551	CloseCurlyDoubleQuote	
352-8	43551-43552	.	

#Text=If this eos string does not match the cached query separator, no outfile is generated.
#Text=schemapath
#Text=Optional — A comma-separated list of schema names that specifies a schema search path for unqualified table names, view names, or stored procedure names.
353-1	43553-43555	If	
353-2	43556-43560	this	
353-3	43561-43564	eos	
353-4	43565-43571	string	
353-5	43572-43576	does	
353-6	43577-43580	not	
353-7	43581-43586	match	
353-8	43587-43590	the	
353-9	43591-43597	cached	
353-10	43598-43603	query	
353-11	43604-43613	separator	
353-12	43613-43614	,	
353-13	43615-43617	no	
353-14	43618-43625	outfile	
353-15	43626-43628	is	
353-16	43629-43638	generated	
353-17	43638-43639	.	
353-18	43640-43650	schemapath	
353-19	43651-43659	Optional	
353-20	43660-43661	—	
353-21	43662-43663	A	
353-22	43664-43679	comma-separated	
353-23	43680-43684	list	
353-24	43685-43687	of	
353-25	43688-43694	schema	
353-26	43695-43700	names	
353-27	43701-43705	that	
353-28	43706-43715	specifies	
353-29	43716-43717	a	
353-30	43718-43724	schema	
353-31	43725-43731	search	
353-32	43732-43736	path	
353-33	43737-43740	for	
353-34	43741-43752	unqualified	
353-35	43753-43758	table	
353-36	43759-43764	names	
353-37	43764-43765	,	
353-38	43766-43770	view	
353-39	43771-43776	names	
353-40	43776-43777	,	
353-41	43778-43780	or	
353-42	43781-43787	stored	
353-43	43788-43797	procedure	
353-44	43798-43803	names	
353-45	43803-43804	.	

#Text=Can include DEFAULT_SCHEMA, the current system-wide default schema.
354-1	43805-43808	Can	
354-2	43809-43816	include	
354-3	43817-43831	DEFAULT_SCHEMA	
354-4	43831-43832	,	
354-5	43833-43836	the	
354-6	43837-43844	current	
354-7	43845-43856	system-wide	
354-8	43857-43864	default	
354-9	43865-43871	schema	
354-10	43871-43872	.	

#Text=If infile contains #Import directives, QOPlanner adds these #Import package/schema names to the end of schemapath.
355-1	43873-43875	If	
355-2	43876-43882	infile	
355-3	43883-43891	contains	
355-4	43892-43893	#	
355-5	43893-43899	Import	
355-6	43900-43910	directives	
355-7	43910-43911	,	
355-8	43912-43921	QOPlanner	
355-9	43922-43926	adds	
355-10	43927-43932	these	
355-11	43933-43934	#	
355-12	43934-43940	Import	
355-13	43941-43948	package	
355-14	43948-43949	/	
355-15	43949-43955	schema	
355-16	43956-43961	names	
355-17	43962-43964	to	
355-18	43965-43968	the	
355-19	43969-43972	end	
355-20	43973-43975	of	
355-21	43976-43986	schemapath	
355-22	43986-43987	.	

#Text=The following is an example of evoking this query optimization plans listing utility.
356-1	43988-43991	The	
356-2	43992-44001	following	
356-3	44002-44004	is	
356-4	44005-44007	an	
356-5	44008-44015	example	
356-6	44016-44018	of	
356-7	44019-44026	evoking	
356-8	44027-44031	this	
356-9	44032-44037	query	
356-10	44038-44050	optimization	
356-11	44051-44056	plans	
356-12	44057-44064	listing	
356-13	44065-44072	utility	
356-14	44072-44073	.	

#Text=This utility takes as input the file generated by the ExportSQL^%qarDDLExport() utility, as described in &OpenCurlyDoubleQuoteListing Cached Queries to a File&CloseCurlyDoubleQuote section of the &OpenCurlyDoubleQuoteCached Queries&CloseCurlyDoubleQuote chapter.
357-1	44074-44078	This	
357-2	44079-44086	utility	
357-3	44087-44092	takes	
357-4	44093-44095	as	
357-5	44096-44101	input	
357-6	44102-44105	the	
357-7	44106-44110	file	
357-8	44111-44120	generated	
357-9	44121-44123	by	
357-10	44124-44127	the	
357-11	44128-44137	ExportSQL	
357-12	44137-44138	^	
357-13	44138-44139	%	
357-14	44139-44151	qarDDLExport	
357-15	44151-44152	(	
357-16	44152-44153	)	
357-17	44154-44161	utility	
357-18	44161-44162	,	
357-19	44163-44165	as	
357-20	44166-44175	described	
357-21	44176-44178	in	
357-22	44179-44180	&	
357-23	44180-44207	OpenCurlyDoubleQuoteListing	
357-24	44208-44214	Cached	
357-25	44215-44222	Queries	
357-26	44223-44225	to	
357-27	44226-44227	a	
357-28	44228-44232	File	
357-29	44232-44233	&	
357-30	44233-44254	CloseCurlyDoubleQuote	
357-31	44255-44262	section	
357-32	44263-44265	of	
357-33	44266-44269	the	
357-34	44270-44271	&	
357-35	44271-44297	OpenCurlyDoubleQuoteCached	
357-36	44298-44305	Queries	
357-37	44305-44306	&	
357-38	44306-44327	CloseCurlyDoubleQuote	
357-39	44328-44335	chapter	
357-40	44335-44336	.	

#Text=You can either generate this query listing file, or write a query (or queries) to a text file.
358-1	44337-44340	You	
358-2	44341-44344	can	
358-3	44345-44351	either	
358-4	44352-44360	generate	
358-5	44361-44365	this	
358-6	44366-44371	query	
358-7	44372-44379	listing	
358-8	44380-44384	file	
358-9	44384-44385	,	
358-10	44386-44388	or	
358-11	44389-44394	write	
358-12	44395-44396	a	
358-13	44397-44402	query	
358-14	44403-44404	(	
358-15	44404-44406	or	
358-16	44407-44414	queries	
358-17	44414-44415	)	
358-18	44416-44418	to	
358-19	44419-44420	a	
358-20	44421-44425	text	
358-21	44426-44430	file	
358-22	44430-44431	.	

#Text=DO QOPlanner^%apiSQL("C:\\temp\\test\\qcache.txt","C:\\temp\\test\\qoplans.txt","GO")
#Text=Copy code to clipboard
#Text=When executed from the Terminal command line progress is displayed to the terminal screen, such as the following example:
#Text=Importing SQL Statements from file: C:\\temp\\test\\qcache.txt
#Text=Recording any errors to principal device and log file: C:\\temp\\test\\qoplans.txt
#Text=SQL statement to process (number 1):
#Text=SELECT TOP ?
359-1	44432-44434	DO	
359-2	44435-44444	QOPlanner	
359-3	44444-44445	^	
359-4	44445-44446	%	
359-5	44446-44452	apiSQL	
359-6	44452-44453	(	
359-7	44453-44454	"	
359-8	44454-44455	C	
359-9	44455-44456	:	
359-10	44456-44457	\	
359-11	44457-44461	temp	
359-12	44461-44462	\	
359-13	44462-44466	test	
359-14	44466-44467	\	
359-15	44467-44477	qcache.txt	
359-16	44477-44478	"	
359-17	44478-44479	,	
359-18	44479-44480	"	
359-19	44480-44481	C	
359-20	44481-44482	:	
359-21	44482-44483	\	
359-22	44483-44487	temp	
359-23	44487-44488	\	
359-24	44488-44492	test	
359-25	44492-44493	\	
359-26	44493-44504	qoplans.txt	
359-27	44504-44505	"	
359-28	44505-44506	,	
359-29	44506-44507	"	
359-30	44507-44509	GO	
359-31	44509-44510	"	
359-32	44510-44511	)	
359-33	44512-44516	Copy	
359-34	44517-44521	code	
359-35	44522-44524	to	
359-36	44525-44534	clipboard	
359-37	44535-44539	When	
359-38	44540-44548	executed	
359-39	44549-44553	from	
359-40	44554-44557	the	
359-41	44558-44566	Terminal	
359-42	44567-44574	command	
359-43	44575-44579	line	
359-44	44580-44588	progress	
359-45	44589-44591	is	
359-46	44592-44601	displayed	
359-47	44602-44604	to	
359-48	44605-44608	the	
359-49	44609-44617	terminal	
359-50	44618-44624	screen	
359-51	44624-44625	,	
359-52	44626-44630	such	
359-53	44631-44633	as	
359-54	44634-44637	the	
359-55	44638-44647	following	
359-56	44648-44655	example	
359-57	44655-44656	:	
359-58	44657-44666	Importing	
359-59	44667-44670	SQL	
359-60	44671-44681	Statements	
359-61	44682-44686	from	
359-62	44687-44691	file	
359-63	44691-44692	:	
359-64	44693-44694	C	
359-65	44694-44695	:	
359-66	44695-44696	\	
359-67	44696-44700	temp	
359-68	44700-44701	\	
359-69	44701-44705	test	
359-70	44705-44706	\	
359-71	44706-44716	qcache.txt	
359-72	44717-44726	Recording	
359-73	44727-44730	any	
359-74	44731-44737	errors	
359-75	44738-44740	to	
359-76	44741-44750	principal	
359-77	44751-44757	device	
359-78	44758-44761	and	
359-79	44762-44765	log	
359-80	44766-44770	file	
359-81	44770-44771	:	
359-82	44772-44773	C	
359-83	44773-44774	:	
359-84	44774-44775	\	
359-85	44775-44779	temp	
359-86	44779-44780	\	
359-87	44780-44784	test	
359-88	44784-44785	\	
359-89	44785-44796	qoplans.txt	
359-90	44797-44800	SQL	
359-91	44801-44810	statement	
359-92	44811-44813	to	
359-93	44814-44821	process	
359-94	44822-44823	(	
359-95	44823-44829	number	
359-96	44830-44831	1	
359-97	44831-44832	)	
359-98	44832-44833	:	
359-99	44834-44840	SELECT	
359-100	44841-44844	TOP	
359-101	44845-44846	?	

#Text=P .
360-1	44847-44848	P	
360-2	44849-44850	.	

#Text=Name , E .
361-1	44851-44855	Name	
361-2	44856-44857	,	
361-3	44858-44859	E	
361-4	44860-44861	.	

#Text=Name FROM Sample .
362-1	44862-44866	Name	
362-2	44867-44871	FROM	
362-3	44872-44878	Sample	
362-4	44879-44880	.	

#Text=Person AS P ,
#Text=Sample .
363-1	44881-44887	Person	
363-2	44888-44890	AS	
363-3	44891-44892	P	
363-4	44893-44894	,	
363-5	44895-44901	Sample	
363-6	44902-44903	.	

#Text=Employee AS E ORDER BY E .
364-1	44904-44912	Employee	
364-2	44913-44915	AS	
364-3	44916-44917	E	
364-4	44918-44923	ORDER	
364-5	44924-44926	BY	
364-6	44927-44928	E	
364-7	44929-44930	.	

#Text=Name
#Text=Generating query plan...Done
#Text=SQL statement to process (number 2):
#Text=SELECT TOP ?
365-1	44931-44935	Name	
365-2	44936-44946	Generating	
365-3	44947-44952	query	
365-4	44953-44957	plan	
365-5	44957-44958	.	
365-6	44958-44959	.	
365-7	44959-44960	.	
365-8	44960-44964	Done	
365-9	44965-44968	SQL	
365-10	44969-44978	statement	
365-11	44979-44981	to	
365-12	44982-44989	process	
365-13	44990-44991	(	
365-14	44991-44997	number	
365-15	44998-44999	2	
365-16	44999-45000	)	
365-17	45000-45001	:	
365-18	45002-45008	SELECT	
365-19	45009-45012	TOP	
365-20	45013-45014	?	

#Text=P .
366-1	45015-45016	P	
366-2	45017-45018	.	

#Text=Name , E .
367-1	45019-45023	Name	
367-2	45024-45025	,	
367-3	45026-45027	E	
367-4	45028-45029	.	

#Text=Name FROM %INORDER Sample .
368-1	45030-45034	Name	
368-2	45035-45039	FROM	
368-3	45040-45041	%	
368-4	45041-45048	INORDER	
368-5	45049-45055	Sample	
368-6	45056-45057	.	

#Text=Person AS P
#Text=NATURAL LEFT OUTER JOIN Sample .
369-1	45058-45064	Person	
369-2	45065-45067	AS	
369-3	45068-45069	P	
369-4	45070-45077	NATURAL	
369-5	45078-45082	LEFT	
369-6	45083-45088	OUTER	
369-7	45089-45093	JOIN	
369-8	45094-45100	Sample	
369-9	45101-45102	.	

#Text=Employee AS E ORDER BY E .
370-1	45103-45111	Employee	
370-2	45112-45114	AS	
370-3	45115-45116	E	
370-4	45117-45122	ORDER	
370-5	45123-45125	BY	
370-6	45126-45127	E	
370-7	45128-45129	.	

#Text=Name
#Text=Generating query plan...Done
#Text=Elapsed time: .16532 seconds
#Text=The created query optimization plans file contains entries such as the following:
#Text=<pln>
#Text=<sql>
#Text=SELECT TOP ?
371-1	45130-45134	Name	
371-2	45135-45145	Generating	
371-3	45146-45151	query	
371-4	45152-45156	plan	
371-5	45156-45157	.	
371-6	45157-45158	.	
371-7	45158-45159	.	
371-8	45159-45163	Done	
371-9	45164-45171	Elapsed	
371-10	45172-45176	time	
371-11	45176-45177	:	
371-12	45178-45184	.16532	
371-13	45185-45192	seconds	
371-14	45193-45196	The	
371-15	45197-45204	created	
371-16	45205-45210	query	
371-17	45211-45223	optimization	
371-18	45224-45229	plans	
371-19	45230-45234	file	
371-20	45235-45243	contains	
371-21	45244-45251	entries	
371-22	45252-45256	such	
371-23	45257-45259	as	
371-24	45260-45263	the	
371-25	45264-45273	following	
371-26	45273-45274	:	
371-27	45275-45276	<	
371-28	45276-45279	pln	
371-29	45279-45280	>	
371-30	45281-45282	<	
371-31	45282-45285	sql	
371-32	45285-45286	>	
371-33	45287-45293	SELECT	
371-34	45294-45297	TOP	
371-35	45298-45299	?	

#Text=P .
372-1	45300-45301	P	
372-2	45302-45303	.	

#Text=Name , E .
373-1	45304-45308	Name	
373-2	45309-45310	,	
373-3	45311-45312	E	
373-4	45313-45314	.	

#Text=Name FROM Sample .
374-1	45315-45319	Name	
374-2	45320-45324	FROM	
374-3	45325-45331	Sample	
374-4	45332-45333	.	

#Text=Person AS P , Sample .
375-1	45334-45340	Person	
375-2	45341-45343	AS	
375-3	45344-45345	P	
375-4	45346-45347	,	
375-5	45348-45354	Sample	
375-6	45355-45356	.	

#Text=Employee AS E ORDER BY E .
376-1	45357-45365	Employee	
376-2	45366-45368	AS	
376-3	45369-45370	E	
376-4	45371-45376	ORDER	
376-5	45377-45379	BY	
376-6	45380-45381	E	
376-7	45382-45383	.	

#Text=Name
#Text=</sql>
#Text=Read index map Sample.Employee.NameIDX.
377-1	45384-45388	Name	
377-2	45389-45390	<	
377-3	45390-45391	/	
377-4	45391-45394	sql	
377-5	45394-45395	>	
377-6	45396-45400	Read	
377-7	45401-45406	index	
377-8	45407-45410	map	
377-9	45411-45434	Sample.Employee.NameIDX	
377-10	45434-45435	.	

#Text=Read index map Sample.Person.NameIDX.
378-1	45436-45440	Read	
378-2	45441-45446	index	
378-3	45447-45450	map	
378-4	45451-45472	Sample.Person.NameIDX	
378-5	45472-45473	.	

#Text=</pln>
#Text=######
#Text=<pln>
#Text=<sql>
#Text=SELECT TOP ?
379-1	45474-45475	<	
379-2	45475-45476	/	
379-3	45476-45479	pln	
379-4	45479-45480	>	
379-5	45481-45482	#	
379-6	45482-45483	#	
379-7	45483-45484	#	
379-8	45484-45485	#	
379-9	45485-45486	#	
379-10	45486-45487	#	
379-11	45488-45489	<	
379-12	45489-45492	pln	
379-13	45492-45493	>	
379-14	45494-45495	<	
379-15	45495-45498	sql	
379-16	45498-45499	>	
379-17	45500-45506	SELECT	
379-18	45507-45510	TOP	
379-19	45511-45512	?	

#Text=P .
380-1	45513-45514	P	
380-2	45515-45516	.	

#Text=Name , E .
381-1	45517-45521	Name	
381-2	45522-45523	,	
381-3	45524-45525	E	
381-4	45526-45527	.	

#Text=Name FROM %INORDER Sample .
382-1	45528-45532	Name	
382-2	45533-45537	FROM	
382-3	45538-45539	%	
382-4	45539-45546	INORDER	
382-5	45547-45553	Sample	
382-6	45554-45555	.	

#Text=Person AS P
#Text=NATURAL LEFT OUTER JOIN Sample .
383-1	45556-45562	Person	
383-2	45563-45565	AS	
383-3	45566-45567	P	
383-4	45568-45575	NATURAL	
383-5	45576-45580	LEFT	
383-6	45581-45586	OUTER	
383-7	45587-45591	JOIN	
383-8	45592-45598	Sample	
383-9	45599-45600	.	

#Text=Employee AS E ORDER BY E .
384-1	45601-45609	Employee	
384-2	45610-45612	AS	
384-3	45613-45614	E	
384-4	45615-45620	ORDER	
384-5	45621-45623	BY	
384-6	45624-45625	E	
384-7	45626-45627	.	

#Text=Name
#Text=</sql>
#Text=Read master map Sample.Person.IDKEY.
385-1	45628-45632	Name	
385-2	45633-45634	<	
385-3	45634-45635	/	
385-4	45635-45638	sql	
385-5	45638-45639	>	
385-6	45640-45644	Read	
385-7	45645-45651	master	
385-8	45652-45655	map	
385-9	45656-45675	Sample.Person.IDKEY	
385-10	45675-45676	.	

#Text=Read extent bitmap Sample.Employee.
386-1	45677-45681	Read	
386-2	45682-45688	extent	
386-3	45689-45695	bitmap	
386-4	45696-45711	Sample.Employee	
386-5	45711-45712	.	

#Text=$Employee.
387-1	45712-45713	$	
387-2	45713-45721	Employee	
387-3	45721-45722	.	

#Text=Read master map Sample.Employee.IDKEY.
388-1	45723-45727	Read	
388-2	45728-45734	master	
388-3	45735-45738	map	
388-4	45739-45760	Sample.Employee.IDKEY	
388-5	45760-45761	.	

#Text=Update the temp-file.
389-1	45762-45768	Update	
389-2	45769-45772	the	
389-3	45773-45782	temp-file	
389-4	45782-45783	.	

#Text=Read the temp-file.
390-1	45784-45788	Read	
390-2	45789-45792	the	
390-3	45793-45802	temp-file	
390-4	45802-45803	.	

#Text=Read master map Sample.Employee.IDKEY.
391-1	45804-45808	Read	
391-2	45809-45815	master	
391-3	45816-45819	map	
391-4	45820-45841	Sample.Employee.IDKEY	
391-5	45841-45842	.	

#Text=Update the temp-file.
392-1	45843-45849	Update	
392-2	45850-45853	the	
392-3	45854-45863	temp-file	
392-4	45863-45864	.	

#Text=Read the temp-file.
393-1	45865-45869	Read	
393-2	45870-45873	the	
393-3	45874-45883	temp-file	
393-4	45883-45884	.	

#Text=</pln>
#Text=######
#Text=You can use the query optimization plan text files to compare generated optimization plans using different variants of a query, or compare optimization plans between different versions of InterSystems IRIS.
394-1	45885-45886	<	
394-2	45886-45887	/	
394-3	45887-45890	pln	
394-4	45890-45891	>	
394-5	45892-45893	#	
394-6	45893-45894	#	
394-7	45894-45895	#	
394-8	45895-45896	#	
394-9	45896-45897	#	
394-10	45897-45898	#	
394-11	45899-45902	You	
394-12	45903-45906	can	
394-13	45907-45910	use	
394-14	45911-45914	the	
394-15	45915-45920	query	
394-16	45921-45933	optimization	
394-17	45934-45938	plan	
394-18	45939-45943	text	
394-19	45944-45949	files	
394-20	45950-45952	to	
394-21	45953-45960	compare	
394-22	45961-45970	generated	
394-23	45971-45983	optimization	
394-24	45984-45989	plans	
394-25	45990-45995	using	
394-26	45996-46005	different	
394-27	46006-46014	variants	
394-28	46015-46017	of	
394-29	46018-46019	a	
394-30	46020-46025	query	
394-31	46025-46026	,	
394-32	46027-46029	or	
394-33	46030-46037	compare	
394-34	46038-46050	optimization	
394-35	46051-46056	plans	
394-36	46057-46064	between	
394-37	46065-46074	different	
394-38	46075-46083	versions	
394-39	46084-46086	of	
394-40	46087-46099	InterSystems	
394-41	46100-46104	IRIS	
394-42	46104-46105	.	

#Text=When exporting the SQL queries to the text file, a query that comes from a class method or class query will be preceded by the code line:
#Text=#import <package name>
#Text=Copy code to clipboard
#Text=This #Import statement tells the QOPlanner utility what default package/schema to use for the plan generation of the query.
395-1	46106-46110	When	
395-2	46111-46120	exporting	
395-3	46121-46124	the	
395-4	46125-46128	SQL	
395-5	46129-46136	queries	
395-6	46137-46139	to	
395-7	46140-46143	the	
395-8	46144-46148	text	
395-9	46149-46153	file	
395-10	46153-46154	,	
395-11	46155-46156	a	
395-12	46157-46162	query	
395-13	46163-46167	that	
395-14	46168-46173	comes	
395-15	46174-46178	from	
395-16	46179-46180	a	
395-17	46181-46186	class	
395-18	46187-46193	method	
395-19	46194-46196	or	
395-20	46197-46202	class	
395-21	46203-46208	query	
395-22	46209-46213	will	
395-23	46214-46216	be	
395-24	46217-46225	preceded	
395-25	46226-46228	by	
395-26	46229-46232	the	
395-27	46233-46237	code	
395-28	46238-46242	line	
395-29	46242-46243	:	
395-30	46244-46245	#	
395-31	46245-46251	import	
395-32	46252-46253	<	
395-33	46253-46260	package	
395-34	46261-46265	name	
395-35	46265-46266	>	
395-36	46267-46271	Copy	
395-37	46272-46276	code	
395-38	46277-46279	to	
395-39	46280-46289	clipboard	
395-40	46290-46294	This	
395-41	46295-46296	#	
395-42	46296-46302	Import	
395-43	46303-46312	statement	
395-44	46313-46318	tells	
395-45	46319-46322	the	
395-46	46323-46332	QOPlanner	
395-47	46333-46340	utility	
395-48	46341-46345	what	
395-49	46346-46353	default	
395-50	46354-46361	package	
395-51	46361-46362	/	
395-52	46362-46368	schema	
395-53	46369-46371	to	
395-54	46372-46375	use	
395-55	46376-46379	for	
395-56	46380-46383	the	
395-57	46384-46388	plan	
395-58	46389-46399	generation	
395-59	46400-46402	of	
395-60	46403-46406	the	
395-61	46407-46412	query	
395-62	46412-46413	.	

#Text=When exporting the SQL queries from a routine, any #import lines in the routine code prior to the SQL statement will also precede the SQL text in the export file.
396-1	46414-46418	When	
396-2	46419-46428	exporting	
396-3	46429-46432	the	
396-4	46433-46436	SQL	
396-5	46437-46444	queries	
396-6	46445-46449	from	
396-7	46450-46451	a	
396-8	46452-46459	routine	
396-9	46459-46460	,	
396-10	46461-46464	any	
396-11	46465-46466	#	
396-12	46466-46472	import	
396-13	46473-46478	lines	
396-14	46479-46481	in	
396-15	46482-46485	the	
396-16	46486-46493	routine	
396-17	46494-46498	code	
396-18	46499-46504	prior	
396-19	46505-46507	to	
396-20	46508-46511	the	
396-21	46512-46515	SQL	
396-22	46516-46525	statement	
396-23	46526-46530	will	
396-24	46531-46535	also	
396-25	46536-46543	precede	
396-26	46544-46547	the	
396-27	46548-46551	SQL	
396-28	46552-46556	text	
396-29	46557-46559	in	
396-30	46560-46563	the	
396-31	46564-46570	export	
396-32	46571-46575	file	
396-33	46575-46576	.	

#Text=Queries exported to the text file from cached queries are assumed to contain fully qualified table references; if a table reference in a text file is not fully qualified, the QOPlanner utility uses the system-wide default schema that is defined on the system when QOPlanner is run.
397-1	46577-46584	Queries	
397-2	46585-46593	exported	
397-3	46594-46596	to	
397-4	46597-46600	the	
397-5	46601-46605	text	
397-6	46606-46610	file	
397-7	46611-46615	from	
397-8	46616-46622	cached	
397-9	46623-46630	queries	
397-10	46631-46634	are	
397-11	46635-46642	assumed	
397-12	46643-46645	to	
397-13	46646-46653	contain	
397-14	46654-46659	fully	
397-15	46660-46669	qualified	
397-16	46670-46675	table	
397-17	46676-46686	references	
397-18	46686-46687	;	
397-19	46688-46690	if	
397-20	46691-46692	a	
397-21	46693-46698	table	
397-22	46699-46708	reference	
397-23	46709-46711	in	
397-24	46712-46713	a	
397-25	46714-46718	text	
397-26	46719-46723	file	
397-27	46724-46726	is	
397-28	46727-46730	not	
397-29	46731-46736	fully	
397-30	46737-46746	qualified	
397-31	46746-46747	,	
397-32	46748-46751	the	
397-33	46752-46761	QOPlanner	
397-34	46762-46769	utility	
397-35	46770-46774	uses	
397-36	46775-46778	the	
397-37	46779-46790	system-wide	
397-38	46791-46798	default	
397-39	46799-46805	schema	
397-40	46806-46810	that	
397-41	46811-46813	is	
397-42	46814-46821	defined	
397-43	46822-46824	on	
397-44	46825-46828	the	
397-45	46829-46835	system	
397-46	46836-46840	when	
397-47	46841-46850	QOPlanner	
397-48	46851-46853	is	
397-49	46854-46857	run	
397-50	46857-46858	.	

#Text=Comment OptionsCopy link to this section
#Text=You can specify one or more comment options to the Query Optimizer within a SELECT, INSERT, UPDATE, DELETE, or TRUNCATE TABLE command.
398-1	46859-46866	Comment	
398-2	46867-46878	OptionsCopy	
398-3	46879-46883	link	
398-4	46884-46886	to	
398-5	46887-46891	this	
398-6	46892-46899	section	
398-7	46900-46903	You	
398-8	46904-46907	can	
398-9	46908-46915	specify	
398-10	46916-46919	one	
398-11	46920-46922	or	
398-12	46923-46927	more	
398-13	46928-46935	comment	
398-14	46936-46943	options	
398-15	46944-46946	to	
398-16	46947-46950	the	
398-17	46951-46956	Query	
398-18	46957-46966	Optimizer	
398-19	46967-46973	within	
398-20	46974-46975	a	
398-21	46976-46982	SELECT	
398-22	46982-46983	,	
398-23	46984-46990	INSERT	
398-24	46990-46991	,	
398-25	46992-46998	UPDATE	
398-26	46998-46999	,	
398-27	47000-47006	DELETE	
398-28	47006-47007	,	
398-29	47008-47010	or	
398-30	47011-47019	TRUNCATE	
398-31	47020-47025	TABLE	
398-32	47026-47033	command	
398-33	47033-47034	.	

#Text=A comment option specifies a option that the query optimizer uses during the compile of the SQL query.
399-1	47035-47036	A	
399-2	47037-47044	comment	
399-3	47045-47051	option	
399-4	47052-47061	specifies	
399-5	47062-47063	a	
399-6	47064-47070	option	
399-7	47071-47075	that	
399-8	47076-47079	the	
399-9	47080-47085	query	
399-10	47086-47095	optimizer	
399-11	47096-47100	uses	
399-12	47101-47107	during	
399-13	47108-47111	the	
399-14	47112-47119	compile	
399-15	47120-47122	of	
399-16	47123-47126	the	
399-17	47127-47130	SQL	
399-18	47131-47136	query	
399-19	47136-47137	.	

#Text=Often a comment option is used to override a system-wide configuration default for a specific query.
400-1	47138-47143	Often	
400-2	47144-47145	a	
400-3	47146-47153	comment	
400-4	47154-47160	option	
400-5	47161-47163	is	
400-6	47164-47168	used	
400-7	47169-47171	to	
400-8	47172-47180	override	
400-9	47181-47182	a	
400-10	47183-47194	system-wide	
400-11	47195-47208	configuration	
400-12	47209-47216	default	
400-13	47217-47220	for	
400-14	47221-47222	a	
400-15	47223-47231	specific	
400-16	47232-47237	query	
400-17	47237-47238	.	

#Text=SyntaxCopy link to this section
#Text=The syntax /*#OPTIONS */, with no space between the /* and the #, specifies a comment option.
401-1	47239-47249	SyntaxCopy	
401-2	47250-47254	link	
401-3	47255-47257	to	
401-4	47258-47262	this	
401-5	47263-47270	section	
401-6	47271-47274	The	
401-7	47275-47281	syntax	
401-8	47282-47283	/	
401-9	47283-47284	*	
401-10	47284-47285	#	
401-11	47285-47292	OPTIONS	
401-12	47293-47294	*	
401-13	47294-47295	/	
401-14	47295-47296	,	
401-15	47297-47301	with	
401-16	47302-47304	no	
401-17	47305-47310	space	
401-18	47311-47318	between	
401-19	47319-47322	the	
401-20	47323-47324	/	
401-21	47324-47325	*	
401-22	47326-47329	and	
401-23	47330-47333	the	
401-24	47334-47335	#	
401-25	47335-47336	,	
401-26	47337-47346	specifies	
401-27	47347-47348	a	
401-28	47349-47356	comment	
401-29	47357-47363	option	
401-30	47363-47364	.	

#Text=A comment option is not a comment; it specifies a value to the query optimizer.
402-1	47365-47366	A	
402-2	47367-47374	comment	
402-3	47375-47381	option	
402-4	47382-47384	is	
402-5	47385-47388	not	
402-6	47389-47390	a	
402-7	47391-47398	comment	
402-8	47398-47399	;	
402-9	47400-47402	it	
402-10	47403-47412	specifies	
402-11	47413-47414	a	
402-12	47415-47420	value	
402-13	47421-47423	to	
402-14	47424-47427	the	
402-15	47428-47433	query	
402-16	47434-47443	optimizer	
402-17	47443-47444	.	

#Text=A comment option is specified using JSON syntax, commonly a key:value pair such as the following: /*#OPTIONS {"optionName":value} */.
403-1	47445-47446	A	
403-2	47447-47454	comment	
403-3	47455-47461	option	
403-4	47462-47464	is	
403-5	47465-47474	specified	
403-6	47475-47480	using	
403-7	47481-47485	JSON	
403-8	47486-47492	syntax	
403-9	47492-47493	,	
403-10	47494-47502	commonly	
403-11	47503-47504	a	
403-12	47505-47508	key	
403-13	47508-47509	:	
403-14	47509-47514	value	
403-15	47515-47519	pair	
403-16	47520-47524	such	
403-17	47525-47527	as	
403-18	47528-47531	the	
403-19	47532-47541	following	
403-20	47541-47542	:	
403-21	47543-47544	/	
403-22	47544-47545	*	
403-23	47545-47546	#	
403-24	47546-47553	OPTIONS	
403-25	47554-47555	{	
403-26	47555-47556	"	
403-27	47556-47566	optionName	
403-28	47566-47567	"	
403-29	47567-47568	:	
403-30	47568-47573	value	
403-31	47573-47574	}	
403-32	47575-47576	*	
403-33	47576-47577	/	
403-34	47577-47578	.	

#Text=More complex JSON syntax, such as nested values, is supported.
404-1	47579-47583	More	
404-2	47584-47591	complex	
404-3	47592-47596	JSON	
404-4	47597-47603	syntax	
404-5	47603-47604	,	
404-6	47605-47609	such	
404-7	47610-47612	as	
404-8	47613-47619	nested	
404-9	47620-47626	values	
404-10	47626-47627	,	
404-11	47628-47630	is	
404-12	47631-47640	supported	
404-13	47640-47641	.	

#Text=A comment option is not a comment; it may not contain any text other than JSON syntax.
405-1	47642-47643	A	
405-2	47644-47651	comment	
405-3	47652-47658	option	
405-4	47659-47661	is	
405-5	47662-47665	not	
405-6	47666-47667	a	
405-7	47668-47675	comment	
405-8	47675-47676	;	
405-9	47677-47679	it	
405-10	47680-47683	may	
405-11	47684-47687	not	
405-12	47688-47695	contain	
405-13	47696-47699	any	
405-14	47700-47704	text	
405-15	47705-47710	other	
405-16	47711-47715	than	
405-17	47716-47720	JSON	
405-18	47721-47727	syntax	
405-19	47727-47728	.	

#Text=Including non-JSON text within the /* ... */ delimiters results in an SQLCODE -153 error.
406-1	47729-47738	Including	
406-2	47739-47747	non-JSON	
406-3	47748-47752	text	
406-4	47753-47759	within	
406-5	47760-47763	the	
406-6	47764-47765	/	
406-7	47765-47766	*	
406-8	47767-47768	.	
406-9	47768-47769	.	
406-10	47769-47770	.	
406-11	47771-47772	*	
406-12	47772-47773	/	
406-13	47774-47784	delimiters	
406-14	47785-47792	results	
406-15	47793-47795	in	
406-16	47796-47798	an	
406-17	47799-47806	SQLCODE	
406-18	47807-47808	-	
406-19	47808-47811	153	
406-20	47812-47817	error	
406-21	47817-47818	.	

#Text=InterSystems SQL does not validate the contents of the JSON string.
407-1	47819-47831	InterSystems	
407-2	47832-47835	SQL	
407-3	47836-47840	does	
407-4	47841-47844	not	
407-5	47845-47853	validate	
407-6	47854-47857	the	
407-7	47858-47866	contents	
407-8	47867-47869	of	
407-9	47870-47873	the	
407-10	47874-47878	JSON	
407-11	47879-47885	string	
407-12	47885-47886	.	

#Text=The #OPTIONS keyword must be specified in uppercase letters.
408-1	47887-47890	The	
408-2	47891-47892	#	
408-3	47892-47899	OPTIONS	
408-4	47900-47907	keyword	
408-5	47908-47912	must	
408-6	47913-47915	be	
408-7	47916-47925	specified	
408-8	47926-47928	in	
408-9	47929-47938	uppercase	
408-10	47939-47946	letters	
408-11	47946-47947	.	

#Text=No spaces should be used within the curly brace JSON syntax.
409-1	47948-47950	No	
409-2	47951-47957	spaces	
409-3	47958-47964	should	
409-4	47965-47967	be	
409-5	47968-47972	used	
409-6	47973-47979	within	
409-7	47980-47983	the	
409-8	47984-47989	curly	
409-9	47990-47995	brace	
409-10	47996-48000	JSON	
409-11	48001-48007	syntax	
409-12	48007-48008	.	

#Text=If the SQL code is enclosed with quote marks, such as a Dynamic SQL statement, quote marks in the JSON syntax should be doubled.
410-1	48009-48011	If	
410-2	48012-48015	the	
410-3	48016-48019	SQL	
410-4	48020-48024	code	
410-5	48025-48027	is	
410-6	48028-48036	enclosed	
410-7	48037-48041	with	
410-8	48042-48047	quote	
410-9	48048-48053	marks	
410-10	48053-48054	,	
410-11	48055-48059	such	
410-12	48060-48062	as	
410-13	48063-48064	a	
410-14	48065-48072	Dynamic	
410-15	48073-48076	SQL	
410-16	48077-48086	statement	
410-17	48086-48087	,	
410-18	48088-48093	quote	
410-19	48094-48099	marks	
410-20	48100-48102	in	
410-21	48103-48106	the	
410-22	48107-48111	JSON	
410-23	48112-48118	syntax	
410-24	48119-48125	should	
410-25	48126-48128	be	
410-26	48129-48136	doubled	
410-27	48136-48137	.	

#Text=For example: myquery="SELECT Name FROM Sample.MyTest /*#OPTIONS {""optName"":""optValue""} */".
411-1	48138-48141	For	
411-2	48142-48149	example	
411-3	48149-48150	:	
411-4	48151-48158	myquery	
411-5	48158-48159	=	
411-6	48159-48160	"	
411-7	48160-48166	SELECT	
411-8	48167-48171	Name	
411-9	48172-48176	FROM	
411-10	48177-48190	Sample.MyTest	
411-11	48191-48192	/	
411-12	48192-48193	*	
411-13	48193-48194	#	
411-14	48194-48201	OPTIONS	
411-15	48202-48203	{	
411-16	48203-48204	"	
411-17	48204-48205	"	
411-18	48205-48212	optName	
411-19	48212-48213	"	
411-20	48213-48214	"	
411-21	48214-48215	:	
411-22	48215-48216	"	
411-23	48216-48217	"	
411-24	48217-48225	optValue	
411-25	48225-48226	"	
411-26	48226-48227	"	
411-27	48227-48228	}	
411-28	48229-48230	*	
411-29	48230-48231	/	
411-30	48231-48232	"	
411-31	48232-48233	.	

#Text=You can specify a /*#OPTIONS */ comment option anywhere in SQL code where a comment can be specified.
412-1	48234-48237	You	
412-2	48238-48241	can	
412-3	48242-48249	specify	
412-4	48250-48251	a	
412-5	48252-48253	/	
412-6	48253-48254	*	
412-7	48254-48255	#	
412-8	48255-48262	OPTIONS	
412-9	48263-48264	*	
412-10	48264-48265	/	
412-11	48266-48273	comment	
412-12	48274-48280	option	
412-13	48281-48289	anywhere	
412-14	48290-48292	in	
412-15	48293-48296	SQL	
412-16	48297-48301	code	
412-17	48302-48307	where	
412-18	48308-48309	a	
412-19	48310-48317	comment	
412-20	48318-48321	can	
412-21	48322-48324	be	
412-22	48325-48334	specified	
412-23	48334-48335	.	

#Text=In displayed statement text, the comment options are always shown as comments at the end of the statement text.
413-1	48336-48338	In	
413-2	48339-48348	displayed	
413-3	48349-48358	statement	
413-4	48359-48363	text	
413-5	48363-48364	,	
413-6	48365-48368	the	
413-7	48369-48376	comment	
413-8	48377-48384	options	
413-9	48385-48388	are	
413-10	48389-48395	always	
413-11	48396-48401	shown	
413-12	48402-48404	as	
413-13	48405-48413	comments	
413-14	48414-48416	at	
413-15	48417-48420	the	
413-16	48421-48424	end	
413-17	48425-48427	of	
413-18	48428-48431	the	
413-19	48432-48441	statement	
413-20	48442-48446	text	
413-21	48446-48447	.	

#Text=You can specify multiple /*#OPTIONS */ comment options in SQL code.
414-1	48448-48451	You	
414-2	48452-48455	can	
414-3	48456-48463	specify	
414-4	48464-48472	multiple	
414-5	48473-48474	/	
414-6	48474-48475	*	
414-7	48475-48476	#	
414-8	48476-48483	OPTIONS	
414-9	48484-48485	*	
414-10	48485-48486	/	
414-11	48487-48494	comment	
414-12	48495-48502	options	
414-13	48503-48505	in	
414-14	48506-48509	SQL	
414-15	48510-48514	code	
414-16	48514-48515	.	

#Text=They are shown in returned Statement Text in the order specified.
415-1	48516-48520	They	
415-2	48521-48524	are	
415-3	48525-48530	shown	
415-4	48531-48533	in	
415-5	48534-48542	returned	
415-6	48543-48552	Statement	
415-7	48553-48557	Text	
415-8	48558-48560	in	
415-9	48561-48564	the	
415-10	48565-48570	order	
415-11	48571-48580	specified	
415-12	48580-48581	.	

#Text=If multiple comment options are specified for the same option, the last-specified option value is used.
416-1	48582-48584	If	
416-2	48585-48593	multiple	
416-3	48594-48601	comment	
416-4	48602-48609	options	
416-5	48610-48613	are	
416-6	48614-48623	specified	
416-7	48624-48627	for	
416-8	48628-48631	the	
416-9	48632-48636	same	
416-10	48637-48643	option	
416-11	48643-48644	,	
416-12	48645-48648	the	
416-13	48649-48663	last-specified	
416-14	48664-48670	option	
416-15	48671-48676	value	
416-16	48677-48679	is	
416-17	48680-48684	used	
416-18	48684-48685	.	

#Text=The following comment options are documented:
#Text=/*#OPTIONS {"BiasAsOutlier":1} */
#Text=/*#OPTIONS {"DynamicSQLTypeList":"10,1,11"}
#Text=/*#OPTIONS {"NoTempFile":1} */
#Text=DisplayCopy link to this section
#Text=The /*#OPTIONS */ comment options display at the end of the SQL statement text, regardless of where they were specified in the SQL command.
417-1	48686-48689	The	
417-2	48690-48699	following	
417-3	48700-48707	comment	
417-4	48708-48715	options	
417-5	48716-48719	are	
417-6	48720-48730	documented	
417-7	48730-48731	:	
417-8	48732-48733	/	
417-9	48733-48734	*	
417-10	48734-48735	#	
417-11	48735-48742	OPTIONS	
417-12	48743-48744	{	
417-13	48744-48745	"	
417-14	48745-48758	BiasAsOutlier	
417-15	48758-48759	"	
417-16	48759-48760	:	
417-17	48760-48761	1	
417-18	48761-48762	}	
417-19	48763-48764	*	
417-20	48764-48765	/	
417-21	48766-48767	/	
417-22	48767-48768	*	
417-23	48768-48769	#	
417-24	48769-48776	OPTIONS	
417-25	48777-48778	{	
417-26	48778-48779	"	
417-27	48779-48797	DynamicSQLTypeList	
417-28	48797-48798	"	
417-29	48798-48799	:	
417-30	48799-48800	"	
417-31	48800-48807	10,1,11	
417-32	48807-48808	"	
417-33	48808-48809	}	
417-34	48810-48811	/	
417-35	48811-48812	*	
417-36	48812-48813	#	
417-37	48813-48820	OPTIONS	
417-38	48821-48822	{	
417-39	48822-48823	"	
417-40	48823-48833	NoTempFile	
417-41	48833-48834	"	
417-42	48834-48835	:	
417-43	48835-48836	1	
417-44	48836-48837	}	
417-45	48838-48839	*	
417-46	48839-48840	/	
417-47	48841-48852	DisplayCopy	
417-48	48853-48857	link	
417-49	48858-48860	to	
417-50	48861-48865	this	
417-51	48866-48873	section	
417-52	48874-48877	The	
417-53	48878-48879	/	
417-54	48879-48880	*	
417-55	48880-48881	#	
417-56	48881-48888	OPTIONS	
417-57	48889-48890	*	
417-58	48890-48891	/	
417-59	48892-48899	comment	
417-60	48900-48907	options	
417-61	48908-48915	display	
417-62	48916-48918	at	
417-63	48919-48922	the	
417-64	48923-48926	end	
417-65	48927-48929	of	
417-66	48930-48933	the	
417-67	48934-48937	SQL	
417-68	48938-48947	statement	
417-69	48948-48952	text	
417-70	48952-48953	,	
417-71	48954-48964	regardless	
417-72	48965-48967	of	
417-73	48968-48973	where	
417-74	48974-48978	they	
417-75	48979-48983	were	
417-76	48984-48993	specified	
417-77	48994-48996	in	
417-78	48997-49000	the	
417-79	49001-49004	SQL	
417-80	49005-49012	command	
417-81	49012-49013	.	

#Text=Some displayed /*#OPTIONS */ comment options are not specified in the SQL command, but are generated by the compiler pre-processor.
418-1	49014-49018	Some	
418-2	49019-49028	displayed	
418-3	49029-49030	/	
418-4	49030-49031	*	
418-5	49031-49032	#	
418-6	49032-49039	OPTIONS	
418-7	49040-49041	*	
418-8	49041-49042	/	
418-9	49043-49050	comment	
418-10	49051-49058	options	
418-11	49059-49062	are	
418-12	49063-49066	not	
418-13	49067-49076	specified	
418-14	49077-49079	in	
418-15	49080-49083	the	
418-16	49084-49087	SQL	
418-17	49088-49095	command	
418-18	49095-49096	,	
418-19	49097-49100	but	
418-20	49101-49104	are	
418-21	49105-49114	generated	
418-22	49115-49117	by	
418-23	49118-49121	the	
418-24	49122-49130	compiler	
418-25	49131-49144	pre-processor	
418-26	49144-49145	.	

#Text=For example /*#OPTIONS {"DynamicSQLTypeList": ...} */.
419-1	49146-49149	For	
419-2	49150-49157	example	
419-3	49158-49159	/	
419-4	49159-49160	*	
419-5	49160-49161	#	
419-6	49161-49168	OPTIONS	
419-7	49169-49170	{	
419-8	49170-49171	"	
419-9	49171-49189	DynamicSQLTypeList	
419-10	49189-49190	"	
419-11	49190-49191	:	
419-12	49192-49193	.	
419-13	49193-49194	.	
419-14	49194-49195	.	
419-15	49195-49196	}	
419-16	49197-49198	*	
419-17	49198-49199	/	
419-18	49199-49200	.	

#Text=The /*#OPTIONS */ comment options display in the Show Plan Statement Text, in the Cached Query Query Text, and in the SQL Statement Statement Text.
420-1	49201-49204	The	
420-2	49205-49206	/	
420-3	49206-49207	*	
420-4	49207-49208	#	
420-5	49208-49215	OPTIONS	
420-6	49216-49217	*	
420-7	49217-49218	/	
420-8	49219-49226	comment	
420-9	49227-49234	options	
420-10	49235-49242	display	
420-11	49243-49245	in	
420-12	49246-49249	the	
420-13	49250-49254	Show	
420-14	49255-49259	Plan	
420-15	49260-49269	Statement	
420-16	49270-49274	Text	
420-17	49274-49275	,	
420-18	49276-49278	in	
420-19	49279-49282	the	
420-20	49283-49289	Cached	
420-21	49290-49295	Query	
420-22	49296-49301	Query	
420-23	49302-49306	Text	
420-24	49306-49307	,	
420-25	49308-49311	and	
420-26	49312-49314	in	
420-27	49315-49318	the	
420-28	49319-49322	SQL	
420-29	49323-49332	Statement	
420-30	49333-49342	Statement	
420-31	49343-49347	Text	
420-32	49347-49348	.	

#Text=A separate cached query is created for queries that differ only in the /*#OPTIONS */ comment options.
421-1	49349-49350	A	
421-2	49351-49359	separate	
421-3	49360-49366	cached	
421-4	49367-49372	query	
421-5	49373-49375	is	
421-6	49376-49383	created	
421-7	49384-49387	for	
421-8	49388-49395	queries	
421-9	49396-49400	that	
421-10	49401-49407	differ	
421-11	49408-49412	only	
421-12	49413-49415	in	
421-13	49416-49419	the	
421-14	49420-49421	/	
421-15	49421-49422	*	
421-16	49422-49423	#	
421-17	49423-49430	OPTIONS	
421-18	49431-49432	*	
421-19	49432-49433	/	
421-20	49434-49441	comment	
421-21	49442-49449	options	
421-22	49449-49450	.	

#Text=Parallel Query ProcessingCopy link to this section
#Text=Parallel query hinting directs the system to perform parallel query processing when running on a multi-processor system.
422-1	49451-49459	Parallel	
422-2	49460-49465	Query	
422-3	49466-49480	ProcessingCopy	
422-4	49481-49485	link	
422-5	49486-49488	to	
422-6	49489-49493	this	
422-7	49494-49501	section	
422-8	49502-49510	Parallel	
422-9	49511-49516	query	
422-10	49517-49524	hinting	
422-11	49525-49532	directs	
422-12	49533-49536	the	
422-13	49537-49543	system	
422-14	49544-49546	to	
422-15	49547-49554	perform	
422-16	49555-49563	parallel	
422-17	49564-49569	query	
422-18	49570-49580	processing	
422-19	49581-49585	when	
422-20	49586-49593	running	
422-21	49594-49596	on	
422-22	49597-49598	a	
422-23	49599-49614	multi-processor	
422-24	49615-49621	system	
422-25	49621-49622	.	

#Text=This can substantially improve performance of certain types of queries.
423-1	49623-49627	This	
423-2	49628-49631	can	
423-3	49632-49645	substantially	
423-4	49646-49653	improve	
423-5	49654-49665	performance	
423-6	49666-49668	of	
423-7	49669-49676	certain	
423-8	49677-49682	types	
423-9	49683-49685	of	
423-10	49686-49693	queries	
423-11	49693-49694	.	

#Text=The SQL optimizer determines whether a specific query could benefit from parallel processing, and performs parallel processing where appropriate.
424-1	49695-49698	The	
424-2	49699-49702	SQL	
424-3	49703-49712	optimizer	
424-4	49713-49723	determines	
424-5	49724-49731	whether	
424-6	49732-49733	a	
424-7	49734-49742	specific	
424-8	49743-49748	query	
424-9	49749-49754	could	
424-10	49755-49762	benefit	
424-11	49763-49767	from	
424-12	49768-49776	parallel	
424-13	49777-49787	processing	
424-14	49787-49788	,	
424-15	49789-49792	and	
424-16	49793-49801	performs	
424-17	49802-49810	parallel	
424-18	49811-49821	processing	
424-19	49822-49827	where	
424-20	49828-49839	appropriate	
424-21	49839-49840	.	

#Text=Specifying parallel query hinting does not force parallel processing of every query, only those that may benefit from parallel processing.
425-1	49841-49851	Specifying	
425-2	49852-49860	parallel	
425-3	49861-49866	query	
425-4	49867-49874	hinting	
425-5	49875-49879	does	
425-6	49880-49883	not	
425-7	49884-49889	force	
425-8	49890-49898	parallel	
425-9	49899-49909	processing	
425-10	49910-49912	of	
425-11	49913-49918	every	
425-12	49919-49924	query	
425-13	49924-49925	,	
425-14	49926-49930	only	
425-15	49931-49936	those	
425-16	49937-49941	that	
425-17	49942-49945	may	
425-18	49946-49953	benefit	
425-19	49954-49958	from	
425-20	49959-49967	parallel	
425-21	49968-49978	processing	
425-22	49978-49979	.	

#Text=If the system is not a multi-processor system, this option has no effect.
426-1	49980-49982	If	
426-2	49983-49986	the	
426-3	49987-49993	system	
426-4	49994-49996	is	
426-5	49997-50000	not	
426-6	50001-50002	a	
426-7	50003-50018	multi-processor	
426-8	50019-50025	system	
426-9	50025-50026	,	
426-10	50027-50031	this	
426-11	50032-50038	option	
426-12	50039-50042	has	
426-13	50043-50045	no	
426-14	50046-50052	effect	
426-15	50052-50053	.	

#Text=To determine the number of processors on the current system use the %SYSTEM.Util.NumberOfCPUs() method.
427-1	50054-50056	To	
427-2	50057-50066	determine	
427-3	50067-50070	the	
427-4	50071-50077	number	
427-5	50078-50080	of	
427-6	50081-50091	processors	
427-7	50092-50094	on	
427-8	50095-50098	the	
427-9	50099-50106	current	
427-10	50107-50113	system	
427-11	50114-50117	use	
427-12	50118-50121	the	
427-13	50122-50123	%	
427-14	50123-50147	SYSTEM.Util.NumberOfCPUs	
427-15	50147-50148	(	
427-16	50148-50149	)	
427-17	50150-50156	method	
427-18	50156-50157	.	

#Text=You can specify parallel query processing in two ways:
#Text=System-wide, by setting the auto parallel option.
428-1	50158-50161	You	
428-2	50162-50165	can	
428-3	50166-50173	specify	
428-4	50174-50182	parallel	
428-5	50183-50188	query	
428-6	50189-50199	processing	
428-7	50200-50202	in	
428-8	50203-50206	two	
428-9	50207-50211	ways	
428-10	50211-50212	:	
428-11	50213-50224	System-wide	
428-12	50224-50225	,	
428-13	50226-50228	by	
428-14	50229-50236	setting	
428-15	50237-50240	the	
428-16	50241-50245	auto	
428-17	50246-50254	parallel	
428-18	50255-50261	option	
428-19	50261-50262	.	

#Text=Per query, by specifying the %PARALLEL keyword in the FROM clause of an individual query.
429-1	50263-50266	Per	
429-2	50267-50272	query	
429-3	50272-50273	,	
429-4	50274-50276	by	
429-5	50277-50287	specifying	
429-6	50288-50291	the	
429-7	50292-50293	%	
429-8	50293-50301	PARALLEL	
429-9	50302-50309	keyword	
429-10	50310-50312	in	
429-11	50313-50316	the	
429-12	50317-50321	FROM	
429-13	50322-50328	clause	
429-14	50329-50331	of	
429-15	50332-50334	an	
429-16	50335-50345	individual	
429-17	50346-50351	query	
429-18	50351-50352	.	

#Text=Parallel query processing is applied to SELECT queries.
430-1	50353-50361	Parallel	
430-2	50362-50367	query	
430-3	50368-50378	processing	
430-4	50379-50381	is	
430-5	50382-50389	applied	
430-6	50390-50392	to	
430-7	50393-50399	SELECT	
430-8	50400-50407	queries	
430-9	50407-50408	.	

#Text=It is not applied to INSERT, UPDATE, or DELETE operations.
431-1	50409-50411	It	
431-2	50412-50414	is	
431-3	50415-50418	not	
431-4	50419-50426	applied	
431-5	50427-50429	to	
431-6	50430-50436	INSERT	
431-7	50436-50437	,	
431-8	50438-50444	UPDATE	
431-9	50444-50445	,	
431-10	50446-50448	or	
431-11	50449-50455	DELETE	
431-12	50456-50466	operations	
431-13	50466-50467	.	

#Text=System-Wide Parallel Query ProcessingCopy link to this section
#Text=You can configure system-wide automatic parallel query processing using either of the following options:
#Text=From the Management Portal choose System Administration, then Configuration, then SQL and Object Settings, then SQL.
432-1	50468-50479	System-Wide	
432-2	50480-50488	Parallel	
432-3	50489-50494	Query	
432-4	50495-50509	ProcessingCopy	
432-5	50510-50514	link	
432-6	50515-50517	to	
432-7	50518-50522	this	
432-8	50523-50530	section	
432-9	50531-50534	You	
432-10	50535-50538	can	
432-11	50539-50548	configure	
432-12	50549-50560	system-wide	
432-13	50561-50570	automatic	
432-14	50571-50579	parallel	
432-15	50580-50585	query	
432-16	50586-50596	processing	
432-17	50597-50602	using	
432-18	50603-50609	either	
432-19	50610-50612	of	
432-20	50613-50616	the	
432-21	50617-50626	following	
432-22	50627-50634	options	
432-23	50634-50635	:	
432-24	50636-50640	From	
432-25	50641-50644	the	
432-26	50645-50655	Management	
432-27	50656-50662	Portal	
432-28	50663-50669	choose	
432-29	50670-50676	System	
432-30	50677-50691	Administration	
432-31	50691-50692	,	
432-32	50693-50697	then	
432-33	50698-50711	Configuration	
432-34	50711-50712	,	
432-35	50713-50717	then	
432-36	50718-50721	SQL	
432-37	50722-50725	and	
432-38	50726-50732	Object	
432-39	50733-50741	Settings	
432-40	50741-50742	,	
432-41	50743-50747	then	
432-42	50748-50751	SQL	
432-43	50751-50752	.	

#Text=View or change the Execute queries in a single process check box.
433-1	50753-50757	View	
433-2	50758-50760	or	
433-3	50761-50767	change	
433-4	50768-50771	the	
433-5	50772-50779	Execute	
433-6	50780-50787	queries	
433-7	50788-50790	in	
433-8	50791-50792	a	
433-9	50793-50799	single	
433-10	50800-50807	process	
433-11	50808-50813	check	
433-12	50814-50817	box	
433-13	50817-50818	.	

#Text=Note that the default for this check box is unselected, which mean that parallel processing is activated by default.
434-1	50819-50823	Note	
434-2	50824-50828	that	
434-3	50829-50832	the	
434-4	50833-50840	default	
434-5	50841-50844	for	
434-6	50845-50849	this	
434-7	50850-50855	check	
434-8	50856-50859	box	
434-9	50860-50862	is	
434-10	50863-50873	unselected	
434-11	50873-50874	,	
434-12	50875-50880	which	
434-13	50881-50885	mean	
434-14	50886-50890	that	
434-15	50891-50899	parallel	
434-16	50900-50910	processing	
434-17	50911-50913	is	
434-18	50914-50923	activated	
434-19	50924-50926	by	
434-20	50927-50934	default	
434-21	50934-50935	.	

#Text=Invoke the $SYSTEM.SQL.Util.SetOption() method, as follows: SET status=$SYSTEM.SQL.Util.SetOption("AutoParallel",1,.oldval).
435-1	50936-50942	Invoke	
435-2	50943-50946	the	
435-3	50947-50948	$	
435-4	50948-50973	SYSTEM.SQL.Util.SetOption	
435-5	50973-50974	(	
435-6	50974-50975	)	
435-7	50976-50982	method	
435-8	50982-50983	,	
435-9	50984-50986	as	
435-10	50987-50994	follows	
435-11	50994-50995	:	
435-12	50996-50999	SET	
435-13	51000-51006	status	
435-14	51006-51007	=	
435-15	51007-51008	$	
435-16	51008-51033	SYSTEM.SQL.Util.SetOption	
435-17	51033-51034	(	
435-18	51034-51035	"	
435-19	51035-51047	AutoParallel	
435-20	51047-51048	"	
435-21	51048-51049	,	
435-22	51049-51050	1	
435-23	51050-51051	,	
435-24	51051-51052	.	
435-25	51052-51058	oldval	
435-26	51058-51059	)	
435-27	51059-51060	.	

#Text=The default is 1 (automatic parallel processing activated).
436-1	51061-51064	The	
436-2	51065-51072	default	
436-3	51073-51075	is	
436-4	51076-51077	1	
436-5	51078-51079	(	
436-6	51079-51088	automatic	
436-7	51089-51097	parallel	
436-8	51098-51108	processing	
436-9	51109-51118	activated	
436-10	51118-51119	)	
436-11	51119-51120	.	

#Text=To determine the current setting, call $SYSTEM.SQL.CurrentSettings() which displays the Enable auto hinting for %PARALLEL option.
437-1	51121-51123	To	
437-2	51124-51133	determine	
437-3	51134-51137	the	
437-4	51138-51145	current	
437-5	51146-51153	setting	
437-6	51153-51154	,	
437-7	51155-51159	call	
437-8	51160-51161	$	
437-9	51161-51187	SYSTEM.SQL.CurrentSettings	
437-10	51187-51188	(	
437-11	51188-51189	)	
437-12	51190-51195	which	
437-13	51196-51204	displays	
437-14	51205-51208	the	
437-15	51209-51215	Enable	
437-16	51216-51220	auto	
437-17	51221-51228	hinting	
437-18	51229-51232	for	
437-19	51233-51234	%	
437-20	51234-51242	PARALLEL	
437-21	51243-51249	option	
437-22	51249-51250	.	

#Text=Note that changing this configuration setting purges all cached queries in all namespaces.
438-1	51251-51255	Note	
438-2	51256-51260	that	
438-3	51261-51269	changing	
438-4	51270-51274	this	
438-5	51275-51288	configuration	
438-6	51289-51296	setting	
438-7	51297-51303	purges	
438-8	51304-51307	all	
438-9	51308-51314	cached	
438-10	51315-51322	queries	
438-11	51323-51325	in	
438-12	51326-51329	all	
438-13	51330-51340	namespaces	
438-14	51340-51341	.	

#Text=When activated, automatic parallel query hinting directs the SQL optimizer to apply parallel processing to any query that may benefit from this type of processing.
439-1	51342-51346	When	
439-2	51347-51356	activated	
439-3	51356-51357	,	
439-4	51358-51367	automatic	
439-5	51368-51376	parallel	
439-6	51377-51382	query	
439-7	51383-51390	hinting	
439-8	51391-51398	directs	
439-9	51399-51402	the	
439-10	51403-51406	SQL	
439-11	51407-51416	optimizer	
439-12	51417-51419	to	
439-13	51420-51425	apply	
439-14	51426-51434	parallel	
439-15	51435-51445	processing	
439-16	51446-51448	to	
439-17	51449-51452	any	
439-18	51453-51458	query	
439-19	51459-51463	that	
439-20	51464-51467	may	
439-21	51468-51475	benefit	
439-22	51476-51480	from	
439-23	51481-51485	this	
439-24	51486-51490	type	
439-25	51491-51493	of	
439-26	51494-51504	processing	
439-27	51504-51505	.	

#Text=At IRIS 2019.1 and subsequent, auto parallel processing is activated by default.
440-1	51506-51508	At	
440-2	51509-51513	IRIS	
440-3	51514-51520	2019.1	
440-4	51521-51524	and	
440-5	51525-51535	subsequent	
440-6	51535-51536	,	
440-7	51537-51541	auto	
440-8	51542-51550	parallel	
440-9	51551-51561	processing	
440-10	51562-51564	is	
440-11	51565-51574	activated	
440-12	51575-51577	by	
440-13	51578-51585	default	
440-14	51585-51586	.	

#Text=Users upgrading from IRIS 2018.1 to IRIS 2019.1 will need to explicitly activate auto parallel processing.
441-1	51587-51592	Users	
441-2	51593-51602	upgrading	
441-3	51603-51607	from	
441-4	51608-51612	IRIS	
441-5	51613-51619	2018.1	
441-6	51620-51622	to	
441-7	51623-51627	IRIS	
441-8	51628-51634	2019.1	
441-9	51635-51639	will	
441-10	51640-51644	need	
441-11	51645-51647	to	
441-12	51648-51658	explicitly	
441-13	51659-51667	activate	
441-14	51668-51672	auto	
441-15	51673-51681	parallel	
441-16	51682-51692	processing	
441-17	51692-51693	.	

#Text=One option the SQL optimizer uses to determine whether to perform parallel processing for a query is the auto parallel threshold.
442-1	51694-51697	One	
442-2	51698-51704	option	
442-3	51705-51708	the	
442-4	51709-51712	SQL	
442-5	51713-51722	optimizer	
442-6	51723-51727	uses	
442-7	51728-51730	to	
442-8	51731-51740	determine	
442-9	51741-51748	whether	
442-10	51749-51751	to	
442-11	51752-51759	perform	
442-12	51760-51768	parallel	
442-13	51769-51779	processing	
442-14	51780-51783	for	
442-15	51784-51785	a	
442-16	51786-51791	query	
442-17	51792-51794	is	
442-18	51795-51798	the	
442-19	51799-51803	auto	
442-20	51804-51812	parallel	
442-21	51813-51822	threshold	
442-22	51822-51823	.	

#Text=If system-wide auto parallel processing is activated (the default), you can use the $SYSTEM.SQL.Util.SetOption() method to set the optimization threshold for automatic parallel processing as an integer value, as follows: SET status=$SYSTEM.SQL.Util.SetOption("AutoParallelThreshold",n,.oldval).
443-1	51824-51826	If	
443-2	51827-51838	system-wide	
443-3	51839-51843	auto	
443-4	51844-51852	parallel	
443-5	51853-51863	processing	
443-6	51864-51866	is	
443-7	51867-51876	activated	
443-8	51877-51878	(	
443-9	51878-51881	the	
443-10	51882-51889	default	
443-11	51889-51890	)	
443-12	51890-51891	,	
443-13	51892-51895	you	
443-14	51896-51899	can	
443-15	51900-51903	use	
443-16	51904-51907	the	
443-17	51908-51909	$	
443-18	51909-51934	SYSTEM.SQL.Util.SetOption	
443-19	51934-51935	(	
443-20	51935-51936	)	
443-21	51937-51943	method	
443-22	51944-51946	to	
443-23	51947-51950	set	
443-24	51951-51954	the	
443-25	51955-51967	optimization	
443-26	51968-51977	threshold	
443-27	51978-51981	for	
443-28	51982-51991	automatic	
443-29	51992-52000	parallel	
443-30	52001-52011	processing	
443-31	52012-52014	as	
443-32	52015-52017	an	
443-33	52018-52025	integer	
443-34	52026-52031	value	
443-35	52031-52032	,	
443-36	52033-52035	as	
443-37	52036-52043	follows	
443-38	52043-52044	:	
443-39	52045-52048	SET	
443-40	52049-52055	status	
443-41	52055-52056	=	
443-42	52056-52057	$	
443-43	52057-52082	SYSTEM.SQL.Util.SetOption	
443-44	52082-52083	(	
443-45	52083-52084	"	
443-46	52084-52105	AutoParallelThreshold	
443-47	52105-52106	"	
443-48	52106-52107	,	
443-49	52107-52108	n	
443-50	52108-52109	,	
443-51	52109-52110	.	
443-52	52110-52116	oldval	
443-53	52116-52117	)	
443-54	52117-52118	.	

#Text=The higher the n threshold value is, the lower the chance that this feature will be applied to a query.
444-1	52119-52122	The	
444-2	52123-52129	higher	
444-3	52130-52133	the	
444-4	52134-52135	n	
444-5	52136-52145	threshold	
444-6	52146-52151	value	
444-7	52152-52154	is	
444-8	52154-52155	,	
444-9	52156-52159	the	
444-10	52160-52165	lower	
444-11	52166-52169	the	
444-12	52170-52176	chance	
444-13	52177-52181	that	
444-14	52182-52186	this	
444-15	52187-52194	feature	
444-16	52195-52199	will	
444-17	52200-52202	be	
444-18	52203-52210	applied	
444-19	52211-52213	to	
444-20	52214-52215	a	
444-21	52216-52221	query	
444-22	52221-52222	.	

#Text=This threshold is used in complex optimization calculations, but you can think about this value as the minimal number of tuples that must reside in the visited map.
445-1	52223-52227	This	
445-2	52228-52237	threshold	
445-3	52238-52240	is	
445-4	52241-52245	used	
445-5	52246-52248	in	
445-6	52249-52256	complex	
445-7	52257-52269	optimization	
445-8	52270-52282	calculations	
445-9	52282-52283	,	
445-10	52284-52287	but	
445-11	52288-52291	you	
445-12	52292-52295	can	
445-13	52296-52301	think	
445-14	52302-52307	about	
445-15	52308-52312	this	
445-16	52313-52318	value	
445-17	52319-52321	as	
445-18	52322-52325	the	
445-19	52326-52333	minimal	
445-20	52334-52340	number	
445-21	52341-52343	of	
445-22	52344-52350	tuples	
445-23	52351-52355	that	
445-24	52356-52360	must	
445-25	52361-52367	reside	
445-26	52368-52370	in	
445-27	52371-52374	the	
445-28	52375-52382	visited	
445-29	52383-52386	map	
445-30	52386-52387	.	

#Text=The default value is 3200.
446-1	52388-52391	The	
446-2	52392-52399	default	
446-3	52400-52405	value	
446-4	52406-52408	is	
446-5	52409-52413	3200	
446-6	52413-52414	.	

#Text=The minimum value is 0.
447-1	52415-52418	The	
447-2	52419-52426	minimum	
447-3	52427-52432	value	
447-4	52433-52435	is	
447-5	52436-52437	0	
447-6	52437-52438	.	

#Text=To determine the current setting, call $SYSTEM.SQL.CurrentSettings() which displays the Threshold of auto hinting for %PARALLEL option.
448-1	52439-52441	To	
448-2	52442-52451	determine	
448-3	52452-52455	the	
448-4	52456-52463	current	
448-5	52464-52471	setting	
448-6	52471-52472	,	
448-7	52473-52477	call	
448-8	52478-52479	$	
448-9	52479-52505	SYSTEM.SQL.CurrentSettings	
448-10	52505-52506	(	
448-11	52506-52507	)	
448-12	52508-52513	which	
448-13	52514-52522	displays	
448-14	52523-52526	the	
448-15	52527-52536	Threshold	
448-16	52537-52539	of	
448-17	52540-52544	auto	
448-18	52545-52552	hinting	
448-19	52553-52556	for	
448-20	52557-52558	%	
448-21	52558-52566	PARALLEL	
448-22	52567-52573	option	
448-23	52573-52574	.	

#Text=When automatic parallel processing is activated, a query executed in a sharded environment will always be executed with parallel processing, regardless of the parallel threshold value.
449-1	52575-52579	When	
449-2	52580-52589	automatic	
449-3	52590-52598	parallel	
449-4	52599-52609	processing	
449-5	52610-52612	is	
449-6	52613-52622	activated	
449-7	52622-52623	,	
449-8	52624-52625	a	
449-9	52626-52631	query	
449-10	52632-52640	executed	
449-11	52641-52643	in	
449-12	52644-52645	a	
449-13	52646-52653	sharded	
449-14	52654-52665	environment	
449-15	52666-52670	will	
449-16	52671-52677	always	
449-17	52678-52680	be	
449-18	52681-52689	executed	
449-19	52690-52694	with	
449-20	52695-52703	parallel	
449-21	52704-52714	processing	
449-22	52714-52715	,	
449-23	52716-52726	regardless	
449-24	52727-52729	of	
449-25	52730-52733	the	
449-26	52734-52742	parallel	
449-27	52743-52752	threshold	
449-28	52753-52758	value	
449-29	52758-52759	.	

#Text=Parallel Query Processing for a Specific QueryCopy link to this section
#Text=The optional %PARALLEL keyword is specified in the FROM clause of a query.
450-1	52760-52768	Parallel	
450-2	52769-52774	Query	
450-3	52775-52785	Processing	
450-4	52786-52789	for	
450-5	52790-52791	a	
450-6	52792-52800	Specific	
450-7	52801-52810	QueryCopy	
450-8	52811-52815	link	
450-9	52816-52818	to	
450-10	52819-52823	this	
450-11	52824-52831	section	
450-12	52832-52835	The	
450-13	52836-52844	optional	
450-14	52845-52846	%	
450-15	52846-52854	PARALLEL	
450-16	52855-52862	keyword	
450-17	52863-52865	is	
450-18	52866-52875	specified	
450-19	52876-52878	in	
450-20	52879-52882	the	
450-21	52883-52887	FROM	
450-22	52888-52894	clause	
450-23	52895-52897	of	
450-24	52898-52899	a	
450-25	52900-52905	query	
450-26	52905-52906	.	

#Text=It suggests that InterSystems IRIS perform parallel processing of the query, using multiple processors (if applicable).
451-1	52907-52909	It	
451-2	52910-52918	suggests	
451-3	52919-52923	that	
451-4	52924-52936	InterSystems	
451-5	52937-52941	IRIS	
451-6	52942-52949	perform	
451-7	52950-52958	parallel	
451-8	52959-52969	processing	
451-9	52970-52972	of	
451-10	52973-52976	the	
451-11	52977-52982	query	
451-12	52982-52983	,	
451-13	52984-52989	using	
451-14	52990-52998	multiple	
451-15	52999-53009	processors	
451-16	53010-53011	(	
451-17	53011-53013	if	
451-18	53014-53024	applicable	
451-19	53024-53025	)	
451-20	53025-53026	.	

#Text=This can significantly improve performance of some queries that uses one or more COUNT, SUM, AVG, MAX, or MIN aggregate functions, and/or a GROUP BY clause, as well as many other types of queries.
452-1	53027-53031	This	
452-2	53032-53035	can	
452-3	53036-53049	significantly	
452-4	53050-53057	improve	
452-5	53058-53069	performance	
452-6	53070-53072	of	
452-7	53073-53077	some	
452-8	53078-53085	queries	
452-9	53086-53090	that	
452-10	53091-53095	uses	
452-11	53096-53099	one	
452-12	53100-53102	or	
452-13	53103-53107	more	
452-14	53108-53113	COUNT	
452-15	53113-53114	,	
452-16	53115-53118	SUM	
452-17	53118-53119	,	
452-18	53120-53123	AVG	
452-19	53123-53124	,	
452-20	53125-53128	MAX	
452-21	53128-53129	,	
452-22	53130-53132	or	
452-23	53133-53136	MIN	
452-24	53137-53146	aggregate	
452-25	53147-53156	functions	
452-26	53156-53157	,	
452-27	53158-53161	and	
452-28	53161-53162	/	
452-29	53162-53164	or	
452-30	53165-53166	a	
452-31	53167-53172	GROUP	
452-32	53173-53175	BY	
452-33	53176-53182	clause	
452-34	53182-53183	,	
452-35	53184-53186	as	
452-36	53187-53191	well	
452-37	53192-53194	as	
452-38	53195-53199	many	
452-39	53200-53205	other	
452-40	53206-53211	types	
452-41	53212-53214	of	
452-42	53215-53222	queries	
452-43	53222-53223	.	

#Text=These are commonly queries that process a large quantity of data and return a small result set.
453-1	53224-53229	These	
453-2	53230-53233	are	
453-3	53234-53242	commonly	
453-4	53243-53250	queries	
453-5	53251-53255	that	
453-6	53256-53263	process	
453-7	53264-53265	a	
453-8	53266-53271	large	
453-9	53272-53280	quantity	
453-10	53281-53283	of	
453-11	53284-53288	data	
453-12	53289-53292	and	
453-13	53293-53299	return	
453-14	53300-53301	a	
453-15	53302-53307	small	
453-16	53308-53314	result	
453-17	53315-53318	set	
453-18	53318-53319	.	

#Text=For example, SELECT AVG(SaleAmt) FROM %PARALLEL User.AllSales GROUP BY Region would likely use parallel processing.
454-1	53320-53323	For	
454-2	53324-53331	example	
454-3	53331-53332	,	
454-4	53333-53339	SELECT	
454-5	53340-53343	AVG	
454-6	53343-53344	(	
454-7	53344-53351	SaleAmt	
454-8	53351-53352	)	
454-9	53353-53357	FROM	
454-10	53358-53359	%	
454-11	53359-53367	PARALLEL	
454-12	53368-53381	User.AllSales	
454-13	53382-53387	GROUP	
454-14	53388-53390	BY	
454-15	53391-53397	Region	
454-16	53398-53403	would	
454-17	53404-53410	likely	
454-18	53411-53414	use	
454-19	53415-53423	parallel	
454-20	53424-53434	processing	
454-21	53434-53435	.	

#Text=A &OpenCurlyDoubleQuoteone row&CloseCurlyDoubleQuote query that specifies only aggregate functions, expressions, and subqueries performs parallel processing, with or without a GROUP BY clause.
455-1	53436-53437	A	
455-2	53438-53439	&	
455-3	53439-53462	OpenCurlyDoubleQuoteone	
455-4	53463-53466	row	
455-5	53466-53467	&	
455-6	53467-53488	CloseCurlyDoubleQuote	
455-7	53489-53494	query	
455-8	53495-53499	that	
455-9	53500-53509	specifies	
455-10	53510-53514	only	
455-11	53515-53524	aggregate	
455-12	53525-53534	functions	
455-13	53534-53535	,	
455-14	53536-53547	expressions	
455-15	53547-53548	,	
455-16	53549-53552	and	
455-17	53553-53563	subqueries	
455-18	53564-53572	performs	
455-19	53573-53581	parallel	
455-20	53582-53592	processing	
455-21	53592-53593	,	
455-22	53594-53598	with	
455-23	53599-53601	or	
455-24	53602-53609	without	
455-25	53610-53611	a	
455-26	53612-53617	GROUP	
455-27	53618-53620	BY	
455-28	53621-53627	clause	
455-29	53627-53628	.	

#Text=However, a &OpenCurlyDoubleQuotemulti-row&CloseCurlyDoubleQuote query that specifies both individual fields and one or more aggregate functions does not perform parallel processing unless it includes a GROUP BY clause.
456-1	53629-53636	However	
456-2	53636-53637	,	
456-3	53638-53639	a	
456-4	53640-53641	&	
456-5	53641-53670	OpenCurlyDoubleQuotemulti-row	
456-6	53670-53671	&	
456-7	53671-53692	CloseCurlyDoubleQuote	
456-8	53693-53698	query	
456-9	53699-53703	that	
456-10	53704-53713	specifies	
456-11	53714-53718	both	
456-12	53719-53729	individual	
456-13	53730-53736	fields	
456-14	53737-53740	and	
456-15	53741-53744	one	
456-16	53745-53747	or	
456-17	53748-53752	more	
456-18	53753-53762	aggregate	
456-19	53763-53772	functions	
456-20	53773-53777	does	
456-21	53778-53781	not	
456-22	53782-53789	perform	
456-23	53790-53798	parallel	
456-24	53799-53809	processing	
456-25	53810-53816	unless	
456-26	53817-53819	it	
456-27	53820-53828	includes	
456-28	53829-53830	a	
456-29	53831-53836	GROUP	
456-30	53837-53839	BY	
456-31	53840-53846	clause	
456-32	53846-53847	.	

#Text=For example, SELECT Name,AVG(Age) FROM %PARALLEL Sample.Person does not perform parallel processing, but SELECT Name,AVG(Age) FROM %PARALLEL Sample.Person GROUP BY Home_State does perform parallel processing.
457-1	53848-53851	For	
457-2	53852-53859	example	
457-3	53859-53860	,	
457-4	53861-53867	SELECT	
457-5	53868-53872	Name	
457-6	53872-53873	,	
457-7	53873-53876	AVG	
457-8	53876-53877	(	
457-9	53877-53880	Age	
457-10	53880-53881	)	
457-11	53882-53886	FROM	
457-12	53887-53888	%	
457-13	53888-53896	PARALLEL	
457-14	53897-53910	Sample.Person	
457-15	53911-53915	does	
457-16	53916-53919	not	
457-17	53920-53927	perform	
457-18	53928-53936	parallel	
457-19	53937-53947	processing	
457-20	53947-53948	,	
457-21	53949-53952	but	
457-22	53953-53959	SELECT	
457-23	53960-53964	Name	
457-24	53964-53965	,	
457-25	53965-53968	AVG	
457-26	53968-53969	(	
457-27	53969-53972	Age	
457-28	53972-53973	)	
457-29	53974-53978	FROM	
457-30	53979-53980	%	
457-31	53980-53988	PARALLEL	
457-32	53989-54002	Sample.Person	
457-33	54003-54008	GROUP	
457-34	54009-54011	BY	
457-35	54012-54022	Home_State	
457-36	54023-54027	does	
457-37	54028-54035	perform	
457-38	54036-54044	parallel	
457-39	54045-54055	processing	
457-40	54055-54056	.	

#Text=If a query that specifies %PARALLEL is compiled in Runtime mode, all constants are interpreted as being in ODBC format.
458-1	54057-54059	If	
458-2	54060-54061	a	
458-3	54062-54067	query	
458-4	54068-54072	that	
458-5	54073-54082	specifies	
458-6	54083-54084	%	
458-7	54084-54092	PARALLEL	
458-8	54093-54095	is	
458-9	54096-54104	compiled	
458-10	54105-54107	in	
458-11	54108-54115	Runtime	
458-12	54116-54120	mode	
458-13	54120-54121	,	
458-14	54122-54125	all	
458-15	54126-54135	constants	
458-16	54136-54139	are	
458-17	54140-54151	interpreted	
458-18	54152-54154	as	
458-19	54155-54160	being	
458-20	54161-54163	in	
458-21	54164-54168	ODBC	
458-22	54169-54175	format	
458-23	54175-54176	.	

#Text=Specifying %PARALLEL may degrade performance for some queries.
459-1	54177-54187	Specifying	
459-2	54188-54189	%	
459-3	54189-54197	PARALLEL	
459-4	54198-54201	may	
459-5	54202-54209	degrade	
459-6	54210-54221	performance	
459-7	54222-54225	for	
459-8	54226-54230	some	
459-9	54231-54238	queries	
459-10	54238-54239	.	

#Text=Running a query with %PARALLEL on a system with multiple concurrent users may result in degraded overall performance.
460-1	54240-54247	Running	
460-2	54248-54249	a	
460-3	54250-54255	query	
460-4	54256-54260	with	
460-5	54261-54262	%	
460-6	54262-54270	PARALLEL	
460-7	54271-54273	on	
460-8	54274-54275	a	
460-9	54276-54282	system	
460-10	54283-54287	with	
460-11	54288-54296	multiple	
460-12	54297-54307	concurrent	
460-13	54308-54313	users	
460-14	54314-54317	may	
460-15	54318-54324	result	
460-16	54325-54327	in	
460-17	54328-54336	degraded	
460-18	54337-54344	overall	
460-19	54345-54356	performance	
460-20	54356-54357	.	

#Text=Parallel processing can be performed when querying a view.
461-1	54358-54366	Parallel	
461-2	54367-54377	processing	
461-3	54378-54381	can	
461-4	54382-54384	be	
461-5	54385-54394	performed	
461-6	54395-54399	when	
461-7	54400-54408	querying	
461-8	54409-54410	a	
461-9	54411-54415	view	
461-10	54415-54416	.	

#Text=However, parallel processing is never performed on a query that specifies a %VID, even if the %PARALLEL keyword is explicitly specified.
462-1	54417-54424	However	
462-2	54424-54425	,	
462-3	54426-54434	parallel	
462-4	54435-54445	processing	
462-5	54446-54448	is	
462-6	54449-54454	never	
462-7	54455-54464	performed	
462-8	54465-54467	on	
462-9	54468-54469	a	
462-10	54470-54475	query	
462-11	54476-54480	that	
462-12	54481-54490	specifies	
462-13	54491-54492	a	
462-14	54493-54494	%	
462-15	54494-54497	VID	
462-16	54497-54498	,	
462-17	54499-54503	even	
462-18	54504-54506	if	
462-19	54507-54510	the	
462-20	54511-54512	%	
462-21	54512-54520	PARALLEL	
462-22	54521-54528	keyword	
462-23	54529-54531	is	
462-24	54532-54542	explicitly	
462-25	54543-54552	specified	
462-26	54552-54553	.	

#Text=For further details, refer to the FROM clause in the InterSystems SQL Reference.
463-1	54554-54557	For	
463-2	54558-54565	further	
463-3	54566-54573	details	
463-4	54573-54574	,	
463-5	54575-54580	refer	
463-6	54581-54583	to	
463-7	54584-54587	the	
463-8	54588-54592	FROM	
463-9	54593-54599	clause	
463-10	54600-54602	in	
463-11	54603-54606	the	
463-12	54607-54619	InterSystems	
463-13	54620-54623	SQL	
463-14	54624-54633	Reference	
463-15	54633-54634	.	

#Text=%PARALLEL in SubqueriesCopy link to this section
#Text=%PARALLEL is intended for SELECT queries and their subqueries.
464-1	54635-54636	%	
464-2	54636-54644	PARALLEL	
464-3	54645-54647	in	
464-4	54648-54662	SubqueriesCopy	
464-5	54663-54667	link	
464-6	54668-54670	to	
464-7	54671-54675	this	
464-8	54676-54683	section	
464-9	54684-54685	%	
464-10	54685-54693	PARALLEL	
464-11	54694-54696	is	
464-12	54697-54705	intended	
464-13	54706-54709	for	
464-14	54710-54716	SELECT	
464-15	54717-54724	queries	
464-16	54725-54728	and	
464-17	54729-54734	their	
464-18	54735-54745	subqueries	
464-19	54745-54746	.	

#Text=An INSERT command subquery cannot use %PARALLEL.
465-1	54747-54749	An	
465-2	54750-54756	INSERT	
465-3	54757-54764	command	
465-4	54765-54773	subquery	
465-5	54774-54780	cannot	
465-6	54781-54784	use	
465-7	54785-54786	%	
465-8	54786-54794	PARALLEL	
465-9	54794-54795	.	

#Text=%PARALLEL is ignored when applied to a subquery that is correlated with an enclosing query.
466-1	54796-54797	%	
466-2	54797-54805	PARALLEL	
466-3	54806-54808	is	
466-4	54809-54816	ignored	
466-5	54817-54821	when	
466-6	54822-54829	applied	
466-7	54830-54832	to	
466-8	54833-54834	a	
466-9	54835-54843	subquery	
466-10	54844-54848	that	
466-11	54849-54851	is	
466-12	54852-54862	correlated	
466-13	54863-54867	with	
466-14	54868-54870	an	
466-15	54871-54880	enclosing	
466-16	54881-54886	query	
466-17	54886-54887	.	

#Text=For example:
#Text=SELECT name,age FROM Sample.Person AS p
#Text=WHERE 30<(SELECT AVG(age) FROM %PARALLEL Sample.Employee where Name = p.Name)
#Text=Copy code to clipboard
#Text=%PARALLEL is ignored when applied to a subquery that includes a complex predicate, or a predicate that optimizes to a complex predicate.
467-1	54888-54891	For	
467-2	54892-54899	example	
467-3	54899-54900	:	
467-4	54901-54907	SELECT	
467-5	54908-54912	name	
467-6	54912-54913	,	
467-7	54913-54916	age	
467-8	54917-54921	FROM	
467-9	54922-54935	Sample.Person	
467-10	54936-54938	AS	
467-11	54939-54940	p	
467-12	54941-54946	WHERE	
467-13	54947-54949	30	
467-14	54949-54950	<	
467-15	54950-54951	(	
467-16	54951-54957	SELECT	
467-17	54958-54961	AVG	
467-18	54961-54962	(	
467-19	54962-54965	age	
467-20	54965-54966	)	
467-21	54967-54971	FROM	
467-22	54972-54973	%	
467-23	54973-54981	PARALLEL	
467-24	54982-54997	Sample.Employee	
467-25	54998-55003	where	
467-26	55004-55008	Name	
467-27	55009-55010	=	
467-28	55011-55017	p.Name	
467-29	55017-55018	)	
467-30	55019-55023	Copy	
467-31	55024-55028	code	
467-32	55029-55031	to	
467-33	55032-55041	clipboard	
467-34	55042-55043	%	
467-35	55043-55051	PARALLEL	
467-36	55052-55054	is	
467-37	55055-55062	ignored	
467-38	55063-55067	when	
467-39	55068-55075	applied	
467-40	55076-55078	to	
467-41	55079-55080	a	
467-42	55081-55089	subquery	
467-43	55090-55094	that	
467-44	55095-55103	includes	
467-45	55104-55105	a	
467-46	55106-55113	complex	
467-47	55114-55123	predicate	
467-48	55123-55124	,	
467-49	55125-55127	or	
467-50	55128-55129	a	
467-51	55130-55139	predicate	
467-52	55140-55144	that	
467-53	55145-55154	optimizes	
467-54	55155-55157	to	
467-55	55158-55159	a	
467-56	55160-55167	complex	
467-57	55168-55177	predicate	
467-58	55177-55178	.	

#Text=Predicates that are considered complex include the FOR SOME and FOR SOME %ELEMENT predicates.
468-1	55179-55189	Predicates	
468-2	55190-55194	that	
468-3	55195-55198	are	
468-4	55199-55209	considered	
468-5	55210-55217	complex	
468-6	55218-55225	include	
468-7	55226-55229	the	
468-8	55230-55233	FOR	
468-9	55234-55238	SOME	
468-10	55239-55242	and	
468-11	55243-55246	FOR	
468-12	55247-55251	SOME	
468-13	55252-55253	%	
468-14	55253-55260	ELEMENT	
468-15	55261-55271	predicates	
468-16	55271-55272	.	

#Text=Parallel Query Processing IgnoredCopy link to this section
#Text=Regardless of the auto parallel option setting or the presence of the %PARALLEL keyword in the FROM clause, some queries may use linear processing, not parallel processing.
469-1	55273-55281	Parallel	
469-2	55282-55287	Query	
469-3	55288-55298	Processing	
469-4	55299-55310	IgnoredCopy	
469-5	55311-55315	link	
469-6	55316-55318	to	
469-7	55319-55323	this	
469-8	55324-55331	section	
469-9	55332-55342	Regardless	
469-10	55343-55345	of	
469-11	55346-55349	the	
469-12	55350-55354	auto	
469-13	55355-55363	parallel	
469-14	55364-55370	option	
469-15	55371-55378	setting	
469-16	55379-55381	or	
469-17	55382-55385	the	
469-18	55386-55394	presence	
469-19	55395-55397	of	
469-20	55398-55401	the	
469-21	55402-55403	%	
469-22	55403-55411	PARALLEL	
469-23	55412-55419	keyword	
469-24	55420-55422	in	
469-25	55423-55426	the	
469-26	55427-55431	FROM	
469-27	55432-55438	clause	
469-28	55438-55439	,	
469-29	55440-55444	some	
469-30	55445-55452	queries	
469-31	55453-55456	may	
469-32	55457-55460	use	
469-33	55461-55467	linear	
469-34	55468-55478	processing	
469-35	55478-55479	,	
469-36	55480-55483	not	
469-37	55484-55492	parallel	
469-38	55493-55503	processing	
469-39	55503-55504	.	

#Text=InterSystems IRIS makes the decision whether or not to use parallel processing for a query after optimizing that query, applying other query optimization options (if specified).
470-1	55505-55517	InterSystems	
470-2	55518-55522	IRIS	
470-3	55523-55528	makes	
470-4	55529-55532	the	
470-5	55533-55541	decision	
470-6	55542-55549	whether	
470-7	55550-55552	or	
470-8	55553-55556	not	
470-9	55557-55559	to	
470-10	55560-55563	use	
470-11	55564-55572	parallel	
470-12	55573-55583	processing	
470-13	55584-55587	for	
470-14	55588-55589	a	
470-15	55590-55595	query	
470-16	55596-55601	after	
470-17	55602-55612	optimizing	
470-18	55613-55617	that	
470-19	55618-55623	query	
470-20	55623-55624	,	
470-21	55625-55633	applying	
470-22	55634-55639	other	
470-23	55640-55645	query	
470-24	55646-55658	optimization	
470-25	55659-55666	options	
470-26	55667-55668	(	
470-27	55668-55670	if	
470-28	55671-55680	specified	
470-29	55680-55681	)	
470-30	55681-55682	.	

#Text=InterSystems IRIS may determine that the optimized form of the query is not suitable for parallel processing, even if the user-specified form of the query would appear to benefit from parallel processing.
471-1	55683-55695	InterSystems	
471-2	55696-55700	IRIS	
471-3	55701-55704	may	
471-4	55705-55714	determine	
471-5	55715-55719	that	
471-6	55720-55723	the	
471-7	55724-55733	optimized	
471-8	55734-55738	form	
471-9	55739-55741	of	
471-10	55742-55745	the	
471-11	55746-55751	query	
471-12	55752-55754	is	
471-13	55755-55758	not	
471-14	55759-55767	suitable	
471-15	55768-55771	for	
471-16	55772-55780	parallel	
471-17	55781-55791	processing	
471-18	55791-55792	,	
471-19	55793-55797	even	
471-20	55798-55800	if	
471-21	55801-55804	the	
471-22	55805-55819	user-specified	
471-23	55820-55824	form	
471-24	55825-55827	of	
471-25	55828-55831	the	
471-26	55832-55837	query	
471-27	55838-55843	would	
471-28	55844-55850	appear	
471-29	55851-55853	to	
471-30	55854-55861	benefit	
471-31	55862-55866	from	
471-32	55867-55875	parallel	
471-33	55876-55886	processing	
471-34	55886-55887	.	

#Text=You can determine if and how InterSystems IRIS has partitioned a query for parallel processing using Show Plan.
472-1	55888-55891	You	
472-2	55892-55895	can	
472-3	55896-55905	determine	
472-4	55906-55908	if	
472-5	55909-55912	and	
472-6	55913-55916	how	
472-7	55917-55929	InterSystems	
472-8	55930-55934	IRIS	
472-9	55935-55938	has	
472-10	55939-55950	partitioned	
472-11	55951-55952	a	
472-12	55953-55958	query	
472-13	55959-55962	for	
472-14	55963-55971	parallel	
472-15	55972-55982	processing	
472-16	55983-55988	using	
472-17	55989-55993	Show	
472-18	55994-55998	Plan	
472-19	55998-55999	.	

#Text=In the following circumstances specifying %PARALLEL does not perform parallel processing.
473-1	56000-56002	In	
473-2	56003-56006	the	
473-3	56007-56016	following	
473-4	56017-56030	circumstances	
473-5	56031-56041	specifying	
473-6	56042-56043	%	
473-7	56043-56051	PARALLEL	
473-8	56052-56056	does	
473-9	56057-56060	not	
473-10	56061-56068	perform	
473-11	56069-56077	parallel	
473-12	56078-56088	processing	
473-13	56088-56089	.	

#Text=The query executes successfully and no error is issued, but parallelization is not performed:
#Text=The query contains the FOR SOME predicate.
474-1	56090-56093	The	
474-2	56094-56099	query	
474-3	56100-56108	executes	
474-4	56109-56121	successfully	
474-5	56122-56125	and	
474-6	56126-56128	no	
474-7	56129-56134	error	
474-8	56135-56137	is	
474-9	56138-56144	issued	
474-10	56144-56145	,	
474-11	56146-56149	but	
474-12	56150-56165	parallelization	
474-13	56166-56168	is	
474-14	56169-56172	not	
474-15	56173-56182	performed	
474-16	56182-56183	:	
474-17	56184-56187	The	
474-18	56188-56193	query	
474-19	56194-56202	contains	
474-20	56203-56206	the	
474-21	56207-56210	FOR	
474-22	56211-56215	SOME	
474-23	56216-56225	predicate	
474-24	56225-56226	.	

#Text=The query contains both a TOP clause and an ORDER BY clause.
475-1	56227-56230	The	
475-2	56231-56236	query	
475-3	56237-56245	contains	
475-4	56246-56250	both	
475-5	56251-56252	a	
475-6	56253-56256	TOP	
475-7	56257-56263	clause	
475-8	56264-56267	and	
475-9	56268-56270	an	
475-10	56271-56276	ORDER	
475-11	56277-56279	BY	
475-12	56280-56286	clause	
475-13	56286-56287	.	

#Text=This combination of clauses optimizes for fastest time-to-first-row which does not use parallel processing.
476-1	56288-56292	This	
476-2	56293-56304	combination	
476-3	56305-56307	of	
476-4	56308-56315	clauses	
476-5	56316-56325	optimizes	
476-6	56326-56329	for	
476-7	56330-56337	fastest	
476-8	56338-56355	time-to-first-row	
476-9	56356-56361	which	
476-10	56362-56366	does	
476-11	56367-56370	not	
476-12	56371-56374	use	
476-13	56375-56383	parallel	
476-14	56384-56394	processing	
476-15	56394-56395	.	

#Text=Adding the FROM clause %NOTOPOPT optimize-option keyword optimizes for fastest retrieval of the complete result set.
477-1	56396-56402	Adding	
477-2	56403-56406	the	
477-3	56407-56411	FROM	
477-4	56412-56418	clause	
477-5	56419-56420	%	
477-6	56420-56428	NOTOPOPT	
477-7	56429-56444	optimize-option	
477-8	56445-56452	keyword	
477-9	56453-56462	optimizes	
477-10	56463-56466	for	
477-11	56467-56474	fastest	
477-12	56475-56484	retrieval	
477-13	56485-56487	of	
477-14	56488-56491	the	
477-15	56492-56500	complete	
477-16	56501-56507	result	
477-17	56508-56511	set	
477-18	56511-56512	.	

#Text=If the query does not contain an aggregate function, this combination of %PARALLEL and %NOTOPOPT performs parallel processing of the query.
478-1	56513-56515	If	
478-2	56516-56519	the	
478-3	56520-56525	query	
478-4	56526-56530	does	
478-5	56531-56534	not	
478-6	56535-56542	contain	
478-7	56543-56545	an	
478-8	56546-56555	aggregate	
478-9	56556-56564	function	
478-10	56564-56565	,	
478-11	56566-56570	this	
478-12	56571-56582	combination	
478-13	56583-56585	of	
478-14	56586-56587	%	
478-15	56587-56595	PARALLEL	
478-16	56596-56599	and	
478-17	56600-56601	%	
478-18	56601-56609	NOTOPOPT	
478-19	56610-56618	performs	
478-20	56619-56627	parallel	
478-21	56628-56638	processing	
478-22	56639-56641	of	
478-23	56642-56645	the	
478-24	56646-56651	query	
478-25	56651-56652	.	

#Text=A query containing a LEFT OUTER JOIN or INNER JOIN in which the ON clause is not an equality condition.
479-1	56653-56654	A	
479-2	56655-56660	query	
479-3	56661-56671	containing	
479-4	56672-56673	a	
479-5	56674-56678	LEFT	
479-6	56679-56684	OUTER	
479-7	56685-56689	JOIN	
479-8	56690-56692	or	
479-9	56693-56698	INNER	
479-10	56699-56703	JOIN	
479-11	56704-56706	in	
479-12	56707-56712	which	
479-13	56713-56716	the	
479-14	56717-56719	ON	
479-15	56720-56726	clause	
479-16	56727-56729	is	
479-17	56730-56733	not	
479-18	56734-56736	an	
479-19	56737-56745	equality	
479-20	56746-56755	condition	
479-21	56755-56756	.	

#Text=For example, FROM %PARALLEL Sample.Person p LEFT OUTER JOIN Sample.Employee e ON p.dob > e.dob.
480-1	56757-56760	For	
480-2	56761-56768	example	
480-3	56768-56769	,	
480-4	56770-56774	FROM	
480-5	56775-56776	%	
480-6	56776-56784	PARALLEL	
480-7	56785-56798	Sample.Person	
480-8	56799-56800	p	
480-9	56801-56805	LEFT	
480-10	56806-56811	OUTER	
480-11	56812-56816	JOIN	
480-12	56817-56832	Sample.Employee	
480-13	56833-56834	e	
480-14	56835-56837	ON	
480-15	56838-56843	p.dob	
480-16	56844-56845	>	
480-17	56846-56851	e.dob	
480-18	56851-56852	.	

#Text=This occurs because SQL optimization transforms this type of join to a FULL OUTER JOIN.
481-1	56853-56857	This	
481-2	56858-56864	occurs	
481-3	56865-56872	because	
481-4	56873-56876	SQL	
481-5	56877-56889	optimization	
481-6	56890-56900	transforms	
481-7	56901-56905	this	
481-8	56906-56910	type	
481-9	56911-56913	of	
481-10	56914-56918	join	
481-11	56919-56921	to	
481-12	56922-56923	a	
481-13	56924-56928	FULL	
481-14	56929-56934	OUTER	
481-15	56935-56939	JOIN	
481-16	56939-56940	.	

#Text=%PARALLEL is ignored for a FULL OUTER JOIN.
482-1	56941-56942	%	
482-2	56942-56950	PARALLEL	
482-3	56951-56953	is	
482-4	56954-56961	ignored	
482-5	56962-56965	for	
482-6	56966-56967	a	
482-7	56968-56972	FULL	
482-8	56973-56978	OUTER	
482-9	56979-56983	JOIN	
482-10	56983-56984	.	

#Text=The %PARALLEL and %INORDER optimizations cannot be used together; if both are specified, %PARALLEL is ignored.
483-1	56985-56988	The	
483-2	56989-56990	%	
483-3	56990-56998	PARALLEL	
483-4	56999-57002	and	
483-5	57003-57004	%	
483-6	57004-57011	INORDER	
483-7	57012-57025	optimizations	
483-8	57026-57032	cannot	
483-9	57033-57035	be	
483-10	57036-57040	used	
483-11	57041-57049	together	
483-12	57049-57050	;	
483-13	57051-57053	if	
483-14	57054-57058	both	
483-15	57059-57062	are	
483-16	57063-57072	specified	
483-17	57072-57073	,	
483-18	57074-57075	%	
483-19	57075-57083	PARALLEL	
483-20	57084-57086	is	
483-21	57087-57094	ignored	
483-22	57094-57095	.	

#Text=The query references a view and returns a view ID (%VID).
484-1	57096-57099	The	
484-2	57100-57105	query	
484-3	57106-57116	references	
484-4	57117-57118	a	
484-5	57119-57123	view	
484-6	57124-57127	and	
484-7	57128-57135	returns	
484-8	57136-57137	a	
484-9	57138-57142	view	
484-10	57143-57145	ID	
484-11	57146-57147	(	
484-12	57147-57148	%	
484-13	57148-57151	VID	
484-14	57151-57152	)	
484-15	57152-57153	.	

#Text=COUNT(*) does not use parallel processing if the table has a BITMAPEXTENT index.
485-1	57154-57159	COUNT	
485-2	57159-57160	(	
485-3	57160-57161	*	
485-4	57161-57162	)	
485-5	57163-57167	does	
485-6	57168-57171	not	
485-7	57172-57175	use	
485-8	57176-57184	parallel	
485-9	57185-57195	processing	
485-10	57196-57198	if	
485-11	57199-57202	the	
485-12	57203-57208	table	
485-13	57209-57212	has	
485-14	57213-57214	a	
485-15	57215-57227	BITMAPEXTENT	
485-16	57228-57233	index	
485-17	57233-57234	.	

#Text=%PARALLEL is intended for tables using standard data storage definitions.
486-1	57235-57236	%	
486-2	57236-57244	PARALLEL	
486-3	57245-57247	is	
486-4	57248-57256	intended	
486-5	57257-57260	for	
486-6	57261-57267	tables	
486-7	57268-57273	using	
486-8	57274-57282	standard	
486-9	57283-57287	data	
486-10	57288-57295	storage	
486-11	57296-57307	definitions	
486-12	57307-57308	.	

#Text=Its use with customized storage formats may not be supported.
487-1	57309-57312	Its	
487-2	57313-57316	use	
487-3	57317-57321	with	
487-4	57322-57332	customized	
487-5	57333-57340	storage	
487-6	57341-57348	formats	
487-7	57349-57352	may	
487-8	57353-57356	not	
487-9	57357-57359	be	
487-10	57360-57369	supported	
487-11	57369-57370	.	

#Text=%PARALLEL is not supported for GLOBAL TEMPORARY tables or tables with extended global reference storage.
488-1	57371-57372	%	
488-2	57372-57380	PARALLEL	
488-3	57381-57383	is	
488-4	57384-57387	not	
488-5	57388-57397	supported	
488-6	57398-57401	for	
488-7	57402-57408	GLOBAL	
488-8	57409-57418	TEMPORARY	
488-9	57419-57425	tables	
488-10	57426-57428	or	
488-11	57429-57435	tables	
488-12	57436-57440	with	
488-13	57441-57449	extended	
488-14	57450-57456	global	
488-15	57457-57466	reference	
488-16	57467-57474	storage	
488-17	57474-57475	.	

#Text=%PARALLEL is intended for a query that can access all rows of a table, a table defined with row-level security (ROWLEVELSECURITY) cannot perform parallel processing.
489-1	57476-57477	%	
489-2	57477-57485	PARALLEL	
489-3	57486-57488	is	
489-4	57489-57497	intended	
489-5	57498-57501	for	
489-6	57502-57503	a	
489-7	57504-57509	query	
489-8	57510-57514	that	
489-9	57515-57518	can	
489-10	57519-57525	access	
489-11	57526-57529	all	
489-12	57530-57534	rows	
489-13	57535-57537	of	
489-14	57538-57539	a	
489-15	57540-57545	table	
489-16	57545-57546	,	
489-17	57547-57548	a	
489-18	57549-57554	table	
489-19	57555-57562	defined	
489-20	57563-57567	with	
489-21	57568-57577	row-level	
489-22	57578-57586	security	
489-23	57587-57588	(	
489-24	57588-57604	ROWLEVELSECURITY	
489-25	57604-57605	)	
489-26	57606-57612	cannot	
489-27	57613-57620	perform	
489-28	57621-57629	parallel	
489-29	57630-57640	processing	
489-30	57640-57641	.	

#Text=%PARALLEL is intended for use with data stored in the local database.
490-1	57642-57643	%	
490-2	57643-57651	PARALLEL	
490-3	57652-57654	is	
490-4	57655-57663	intended	
490-5	57664-57667	for	
490-6	57668-57671	use	
490-7	57672-57676	with	
490-8	57677-57681	data	
490-9	57682-57688	stored	
490-10	57689-57691	in	
490-11	57692-57695	the	
490-12	57696-57701	local	
490-13	57702-57710	database	
490-14	57710-57711	.	

#Text=It does not support global nodes mapped to a remote database.
491-1	57712-57714	It	
491-2	57715-57719	does	
491-3	57720-57723	not	
491-4	57724-57731	support	
491-5	57732-57738	global	
491-6	57739-57744	nodes	
491-7	57745-57751	mapped	
491-8	57752-57754	to	
491-9	57755-57756	a	
491-10	57757-57763	remote	
491-11	57764-57772	database	
491-12	57772-57773	.	

#Text=Shared Memory ConsiderationsCopy link to this section
#Text=For parallel processing, InterSystems IRIS supports multiple InterProcess Queues (IPQ).
492-1	57774-57780	Shared	
492-2	57781-57787	Memory	
492-3	57788-57806	ConsiderationsCopy	
492-4	57807-57811	link	
492-5	57812-57814	to	
492-6	57815-57819	this	
492-7	57820-57827	section	
492-8	57828-57831	For	
492-9	57832-57840	parallel	
492-10	57841-57851	processing	
492-11	57851-57852	,	
492-12	57853-57865	InterSystems	
492-13	57866-57870	IRIS	
492-14	57871-57879	supports	
492-15	57880-57888	multiple	
492-16	57889-57901	InterProcess	
492-17	57902-57908	Queues	
492-18	57909-57910	(	
492-19	57910-57913	IPQ	
492-20	57913-57914	)	
492-21	57914-57915	.	

#Text=Each IPQ handles a single parallel query.
493-1	57916-57920	Each	
493-2	57921-57924	IPQ	
493-3	57925-57932	handles	
493-4	57933-57934	a	
493-5	57935-57941	single	
493-6	57942-57950	parallel	
493-7	57951-57956	query	
493-8	57956-57957	.	

#Text=It allows parallel work unit subprocesses to send rows of data back to the main process so the main process does not have to wait for a work unit to complete.
494-1	57958-57960	It	
494-2	57961-57967	allows	
494-3	57968-57976	parallel	
494-4	57977-57981	work	
494-5	57982-57986	unit	
494-6	57987-57999	subprocesses	
494-7	58000-58002	to	
494-8	58003-58007	send	
494-9	58008-58012	rows	
494-10	58013-58015	of	
494-11	58016-58020	data	
494-12	58021-58025	back	
494-13	58026-58028	to	
494-14	58029-58032	the	
494-15	58033-58037	main	
494-16	58038-58045	process	
494-17	58046-58048	so	
494-18	58049-58052	the	
494-19	58053-58057	main	
494-20	58058-58065	process	
494-21	58066-58070	does	
494-22	58071-58074	not	
494-23	58075-58079	have	
494-24	58080-58082	to	
494-25	58083-58087	wait	
494-26	58088-58091	for	
494-27	58092-58093	a	
494-28	58094-58098	work	
494-29	58099-58103	unit	
494-30	58104-58106	to	
494-31	58107-58115	complete	
494-32	58115-58116	.	

#Text=This enables parallel queries to return their first row of data as quickly as possible, without waiting for the entire query to complete.
495-1	58117-58121	This	
495-2	58122-58129	enables	
495-3	58130-58138	parallel	
495-4	58139-58146	queries	
495-5	58147-58149	to	
495-6	58150-58156	return	
495-7	58157-58162	their	
495-8	58163-58168	first	
495-9	58169-58172	row	
495-10	58173-58175	of	
495-11	58176-58180	data	
495-12	58181-58183	as	
495-13	58184-58191	quickly	
495-14	58192-58194	as	
495-15	58195-58203	possible	
495-16	58203-58204	,	
495-17	58205-58212	without	
495-18	58213-58220	waiting	
495-19	58221-58224	for	
495-20	58225-58228	the	
495-21	58229-58235	entire	
495-22	58236-58241	query	
495-23	58242-58244	to	
495-24	58245-58253	complete	
495-25	58253-58254	.	

#Text=It also improves performance of aggregate functions.
496-1	58255-58257	It	
496-2	58258-58262	also	
496-3	58263-58271	improves	
496-4	58272-58283	performance	
496-5	58284-58286	of	
496-6	58287-58296	aggregate	
496-7	58297-58306	functions	
496-8	58306-58307	.	

#Text=Parallel query execution uses shared memory from the generic memory heap (gmheap).
497-1	58308-58316	Parallel	
497-2	58317-58322	query	
497-3	58323-58332	execution	
497-4	58333-58337	uses	
497-5	58338-58344	shared	
497-6	58345-58351	memory	
497-7	58352-58356	from	
497-8	58357-58360	the	
497-9	58361-58368	generic	
497-10	58369-58375	memory	
497-11	58376-58380	heap	
497-12	58381-58382	(	
497-13	58382-58388	gmheap	
497-14	58388-58389	)	
497-15	58389-58390	.	

#Text=Users may need to increase gmheap size if they are using parallel SQL query execution.
498-1	58391-58396	Users	
498-2	58397-58400	may	
498-3	58401-58405	need	
498-4	58406-58408	to	
498-5	58409-58417	increase	
498-6	58418-58424	gmheap	
498-7	58425-58429	size	
498-8	58430-58432	if	
498-9	58433-58437	they	
498-10	58438-58441	are	
498-11	58442-58447	using	
498-12	58448-58456	parallel	
498-13	58457-58460	SQL	
498-14	58461-58466	query	
498-15	58467-58476	execution	
498-16	58476-58477	.	

#Text=As a general rule, the memory requirement for each IPQ is 4 x 64k = 256k.
499-1	58478-58480	As	
499-2	58481-58482	a	
499-3	58483-58490	general	
499-4	58491-58495	rule	
499-5	58495-58496	,	
499-6	58497-58500	the	
499-7	58501-58507	memory	
499-8	58508-58519	requirement	
499-9	58520-58523	for	
499-10	58524-58528	each	
499-11	58529-58532	IPQ	
499-12	58533-58535	is	
499-13	58536-58537	4	
499-14	58538-58539	x	
499-15	58540-58543	64k	
499-16	58544-58545	=	
499-17	58546-58550	256k	
499-18	58550-58551	.	

#Text=InterSystems IRIS splits a parallel SQL query into the number of available CPU cores.
500-1	58552-58564	InterSystems	
500-2	58565-58569	IRIS	
500-3	58570-58576	splits	
500-4	58577-58578	a	
500-5	58579-58587	parallel	
500-6	58588-58591	SQL	
500-7	58592-58597	query	
500-8	58598-58602	into	
500-9	58603-58606	the	
500-10	58607-58613	number	
500-11	58614-58616	of	
500-12	58617-58626	available	
500-13	58627-58630	CPU	
500-14	58631-58636	cores	
500-15	58636-58637	.	

#Text=Therefore, users need to allocate this much extra gmheap:
#Text=<Number of concurrent parallel SQL requests> x <Number cores> x 256 = <required size increase (in kilobytes) of gmheap>
#Text=Note that this formula is not 100% accurate, because a parallel query can spawn sub queries which are also parallel.
501-1	58638-58647	Therefore	
501-2	58647-58648	,	
501-3	58649-58654	users	
501-4	58655-58659	need	
501-5	58660-58662	to	
501-6	58663-58671	allocate	
501-7	58672-58676	this	
501-8	58677-58681	much	
501-9	58682-58687	extra	
501-10	58688-58694	gmheap	
501-11	58694-58695	:	
501-12	58696-58697	<	
501-13	58697-58703	Number	
501-14	58704-58706	of	
501-15	58707-58717	concurrent	
501-16	58718-58726	parallel	
501-17	58727-58730	SQL	
501-18	58731-58739	requests	
501-19	58739-58740	>	
501-20	58741-58742	x	
501-21	58743-58744	<	
501-22	58744-58750	Number	
501-23	58751-58756	cores	
501-24	58756-58757	>	
501-25	58758-58759	x	
501-26	58760-58763	256	
501-27	58764-58765	=	
501-28	58766-58767	<	
501-29	58767-58775	required	
501-30	58776-58780	size	
501-31	58781-58789	increase	
501-32	58790-58791	(	
501-33	58791-58793	in	
501-34	58794-58803	kilobytes	
501-35	58803-58804	)	
501-36	58805-58807	of	
501-37	58808-58814	gmheap	
501-38	58814-58815	>	
501-39	58816-58820	Note	
501-40	58821-58825	that	
501-41	58826-58830	this	
501-42	58831-58838	formula	
501-43	58839-58841	is	
501-44	58842-58845	not	
501-45	58846-58850	100%	
501-46	58851-58859	accurate	
501-47	58859-58860	,	
501-48	58861-58868	because	
501-49	58869-58870	a	
501-50	58871-58879	parallel	
501-51	58880-58885	query	
501-52	58886-58889	can	
501-53	58890-58895	spawn	
501-54	58896-58899	sub	
501-55	58900-58907	queries	
501-56	58908-58913	which	
501-57	58914-58917	are	
501-58	58918-58922	also	
501-59	58923-58931	parallel	
501-60	58931-58932	.	

#Text=Therefore it is prudent to allocate more extra gmheap than is specified by this formula.
502-1	58933-58942	Therefore	
502-2	58943-58945	it	
502-3	58946-58948	is	
502-4	58949-58956	prudent	
502-5	58957-58959	to	
502-6	58960-58968	allocate	
502-7	58969-58973	more	
502-8	58974-58979	extra	
502-9	58980-58986	gmheap	
502-10	58987-58991	than	
502-11	58992-58994	is	
502-12	58995-59004	specified	
502-13	59005-59007	by	
502-14	59008-59012	this	
502-15	59013-59020	formula	
502-16	59020-59021	.	

#Text=Failing to allocate adequate gmheap results in errors reported to messages.log.
503-1	59022-59029	Failing	
503-2	59030-59032	to	
503-3	59033-59041	allocate	
503-4	59042-59050	adequate	
503-5	59051-59057	gmheap	
503-6	59058-59065	results	
503-7	59066-59068	in	
503-8	59069-59075	errors	
503-9	59076-59084	reported	
503-10	59085-59087	to	
503-11	59088-59100	messages.log	
503-12	59100-59101	.	

#Text=SQL queries may fail.
504-1	59102-59105	SQL	
504-2	59106-59113	queries	
504-3	59114-59117	may	
504-4	59118-59122	fail	
504-5	59122-59123	.	

#Text=Other errors may also occur as other subsystems try to allocate gmheap.
505-1	59124-59129	Other	
505-2	59130-59136	errors	
505-3	59137-59140	may	
505-4	59141-59145	also	
505-5	59146-59151	occur	
505-6	59152-59154	as	
505-7	59155-59160	other	
505-8	59161-59171	subsystems	
505-9	59172-59175	try	
505-10	59176-59178	to	
505-11	59179-59187	allocate	
505-12	59188-59194	gmheap	
505-13	59194-59195	.	

#Text=To review gmheap usage by an instance, including IPQ usage in particular, from the home page of the Management Portal choose System Operation then System Usage, and click the Shared Memory Heap Usage link; see Generic (Shared) Memory Heap Usage in the &OpenCurlyDoubleQuoteMonitoring InterSystems IRIS Using the Management Portal&CloseCurlyDoubleQuote chapter of the Monitoring Guide for more information.
506-1	59196-59198	To	
506-2	59199-59205	review	
506-3	59206-59212	gmheap	
506-4	59213-59218	usage	
506-5	59219-59221	by	
506-6	59222-59224	an	
506-7	59225-59233	instance	
506-8	59233-59234	,	
506-9	59235-59244	including	
506-10	59245-59248	IPQ	
506-11	59249-59254	usage	
506-12	59255-59257	in	
506-13	59258-59268	particular	
506-14	59268-59269	,	
506-15	59270-59274	from	
506-16	59275-59278	the	
506-17	59279-59283	home	
506-18	59284-59288	page	
506-19	59289-59291	of	
506-20	59292-59295	the	
506-21	59296-59306	Management	
506-22	59307-59313	Portal	
506-23	59314-59320	choose	
506-24	59321-59327	System	
506-25	59328-59337	Operation	
506-26	59338-59342	then	
506-27	59343-59349	System	
506-28	59350-59355	Usage	
506-29	59355-59356	,	
506-30	59357-59360	and	
506-31	59361-59366	click	
506-32	59367-59370	the	
506-33	59371-59377	Shared	
506-34	59378-59384	Memory	
506-35	59385-59389	Heap	
506-36	59390-59395	Usage	
506-37	59396-59400	link	
506-38	59400-59401	;	
506-39	59402-59405	see	
506-40	59406-59413	Generic	
506-41	59414-59415	(	
506-42	59415-59421	Shared	
506-43	59421-59422	)	
506-44	59423-59429	Memory	
506-45	59430-59434	Heap	
506-46	59435-59440	Usage	
506-47	59441-59443	in	
506-48	59444-59447	the	
506-49	59448-59449	&	
506-50	59449-59479	OpenCurlyDoubleQuoteMonitoring	
506-51	59480-59492	InterSystems	
506-52	59493-59497	IRIS	
506-53	59498-59503	Using	
506-54	59504-59507	the	
506-55	59508-59518	Management	
506-56	59519-59525	Portal	
506-57	59525-59526	&	
506-58	59526-59547	CloseCurlyDoubleQuote	
506-59	59548-59555	chapter	
506-60	59556-59558	of	
506-61	59559-59562	the	
506-62	59563-59573	Monitoring	
506-63	59574-59579	Guide	
506-64	59580-59583	for	
506-65	59584-59588	more	
506-66	59589-59600	information	
506-67	59600-59601	.	

#Text=To change the size of the generic memory heap or gmheap (sometimes known as the shared memory heap or SMH), from the home page of the Management Portal choose System Administration then Configuration then Additional Settings then Advanced Memory; see Memory and Startup Settings in the &OpenCurlyDoubleQuoteConfiguring InterSystems IRIS&CloseCurlyDoubleQuote chapter in System Administration Guide for more information.
507-1	59602-59604	To	
507-2	59605-59611	change	
507-3	59612-59615	the	
507-4	59616-59620	size	
507-5	59621-59623	of	
507-6	59624-59627	the	
507-7	59628-59635	generic	
507-8	59636-59642	memory	
507-9	59643-59647	heap	
507-10	59648-59650	or	
507-11	59651-59657	gmheap	
507-12	59658-59659	(	
507-13	59659-59668	sometimes	
507-14	59669-59674	known	
507-15	59675-59677	as	
507-16	59678-59681	the	
507-17	59682-59688	shared	
507-18	59689-59695	memory	
507-19	59696-59700	heap	
507-20	59701-59703	or	
507-21	59704-59707	SMH	
507-22	59707-59708	)	
507-23	59708-59709	,	
507-24	59710-59714	from	
507-25	59715-59718	the	
507-26	59719-59723	home	
507-27	59724-59728	page	
507-28	59729-59731	of	
507-29	59732-59735	the	
507-30	59736-59746	Management	
507-31	59747-59753	Portal	
507-32	59754-59760	choose	
507-33	59761-59767	System	
507-34	59768-59782	Administration	
507-35	59783-59787	then	
507-36	59788-59801	Configuration	
507-37	59802-59806	then	
507-38	59807-59817	Additional	
507-39	59818-59826	Settings	
507-40	59827-59831	then	
507-41	59832-59840	Advanced	
507-42	59841-59847	Memory	
507-43	59847-59848	;	
507-44	59849-59852	see	
507-45	59853-59859	Memory	
507-46	59860-59863	and	
507-47	59864-59871	Startup	
507-48	59872-59880	Settings	
507-49	59881-59883	in	
507-50	59884-59887	the	
507-51	59888-59889	&	
507-52	59889-59920	OpenCurlyDoubleQuoteConfiguring	
507-53	59921-59933	InterSystems	
507-54	59934-59938	IRIS	
507-55	59938-59939	&	
507-56	59939-59960	CloseCurlyDoubleQuote	
507-57	59961-59968	chapter	
507-58	59969-59971	in	
507-59	59972-59978	System	
507-60	59979-59993	Administration	
507-61	59994-59999	Guide	
507-62	60000-60003	for	
507-63	60004-60008	more	
507-64	60009-60020	information	
507-65	60020-60021	.	

#Text=Cached Query ConsiderationsCopy link to this section
#Text=If you are running a cached SQL query which uses %PARALLEL and while this query is being initialized you do something that purges cached queries, then this query could get a <NOROUTINE> error reported from one of the worker jobs.
508-1	60022-60028	Cached	
508-2	60029-60034	Query	
508-3	60035-60053	ConsiderationsCopy	
508-4	60054-60058	link	
508-5	60059-60061	to	
508-6	60062-60066	this	
508-7	60067-60074	section	
508-8	60075-60077	If	
508-9	60078-60081	you	
508-10	60082-60085	are	
508-11	60086-60093	running	
508-12	60094-60095	a	
508-13	60096-60102	cached	
508-14	60103-60106	SQL	
508-15	60107-60112	query	
508-16	60113-60118	which	
508-17	60119-60123	uses	
508-18	60124-60125	%	
508-19	60125-60133	PARALLEL	
508-20	60134-60137	and	
508-21	60138-60143	while	
508-22	60144-60148	this	
508-23	60149-60154	query	
508-24	60155-60157	is	
508-25	60158-60163	being	
508-26	60164-60175	initialized	
508-27	60176-60179	you	
508-28	60180-60182	do	
508-29	60183-60192	something	
508-30	60193-60197	that	
508-31	60198-60204	purges	
508-32	60205-60211	cached	
508-33	60212-60219	queries	
508-34	60219-60220	,	
508-35	60221-60225	then	
508-36	60226-60230	this	
508-37	60231-60236	query	
508-38	60237-60242	could	
508-39	60243-60246	get	
508-40	60247-60248	a	
508-41	60249-60250	<	
508-42	60250-60259	NOROUTINE	
508-43	60259-60260	>	
508-44	60261-60266	error	
508-45	60267-60275	reported	
508-46	60276-60280	from	
508-47	60281-60284	one	
508-48	60285-60287	of	
508-49	60288-60291	the	
508-50	60292-60298	worker	
508-51	60299-60303	jobs	
508-52	60303-60304	.	

#Text=Typical things that causes cached queries to be purged are calling $SYSTEM.SQL.Purge() or recompiling a class which this query references.
509-1	60305-60312	Typical	
509-2	60313-60319	things	
509-3	60320-60324	that	
509-4	60325-60331	causes	
509-5	60332-60338	cached	
509-6	60339-60346	queries	
509-7	60347-60349	to	
509-8	60350-60352	be	
509-9	60353-60359	purged	
509-10	60360-60363	are	
509-11	60364-60371	calling	
509-12	60372-60373	$	
509-13	60373-60389	SYSTEM.SQL.Purge	
509-14	60389-60390	(	
509-15	60390-60391	)	
509-16	60392-60394	or	
509-17	60395-60406	recompiling	
509-18	60407-60408	a	
509-19	60409-60414	class	
509-20	60415-60420	which	
509-21	60421-60425	this	
509-22	60426-60431	query	
509-23	60432-60442	references	
509-24	60442-60443	.	

#Text=Recompiling a class automatically purges any cached queries relating to that class.
510-1	60444-60455	Recompiling	
510-2	60456-60457	a	
510-3	60458-60463	class	
510-4	60464-60477	automatically	
510-5	60478-60484	purges	
510-6	60485-60488	any	
510-7	60489-60495	cached	
510-8	60496-60503	queries	
510-9	60504-60512	relating	
510-10	60513-60515	to	
510-11	60516-60520	that	
510-12	60521-60526	class	
510-13	60526-60527	.	

#Text=If this error occurs, running the query again will probably execute successfully.
511-1	60528-60530	If	
511-2	60531-60535	this	
511-3	60536-60541	error	
511-4	60542-60548	occurs	
511-5	60548-60549	,	
511-6	60550-60557	running	
511-7	60558-60561	the	
511-8	60562-60567	query	
511-9	60568-60573	again	
511-10	60574-60578	will	
511-11	60579-60587	probably	
511-12	60588-60595	execute	
511-13	60596-60608	successfully	
511-14	60608-60609	.	

#Text=Removing %PARALLEL from the query will avoid any chance of getting this error.
512-1	60610-60618	Removing	
512-2	60619-60620	%	
512-3	60620-60628	PARALLEL	
512-4	60629-60633	from	
512-5	60634-60637	the	
512-6	60638-60643	query	
512-7	60644-60648	will	
512-8	60649-60654	avoid	
512-9	60655-60658	any	
512-10	60659-60665	chance	
512-11	60666-60668	of	
512-12	60669-60676	getting	
512-13	60677-60681	this	
512-14	60682-60687	error	
512-15	60687-60688	.	

#Text=SQL Statements and Plan StateCopy link to this section
#Text=An SQL query which uses %PARALLEL can result in multiple SQL Statements.
513-1	60689-60692	SQL	
513-2	60693-60703	Statements	
513-3	60704-60707	and	
513-4	60708-60712	Plan	
513-5	60713-60722	StateCopy	
513-6	60723-60727	link	
513-7	60728-60730	to	
513-8	60731-60735	this	
513-9	60736-60743	section	
513-10	60744-60746	An	
513-11	60747-60750	SQL	
513-12	60751-60756	query	
513-13	60757-60762	which	
513-14	60763-60767	uses	
513-15	60768-60769	%	
513-16	60769-60777	PARALLEL	
513-17	60778-60781	can	
513-18	60782-60788	result	
513-19	60789-60791	in	
513-20	60792-60800	multiple	
513-21	60801-60804	SQL	
513-22	60805-60815	Statements	
513-23	60815-60816	.	

#Text=The Plan State for these SQL Statements is Unfrozen/Parallel.
514-1	60817-60820	The	
514-2	60821-60825	Plan	
514-3	60826-60831	State	
514-4	60832-60835	for	
514-5	60836-60841	these	
514-6	60842-60845	SQL	
514-7	60846-60856	Statements	
514-8	60857-60859	is	
514-9	60860-60868	Unfrozen	
514-10	60868-60869	/	
514-11	60869-60877	Parallel	
514-12	60877-60878	.	

#Text=A query with a plan state of Unfrozen/Parallel cannot be frozen by user action.
515-1	60879-60880	A	
515-2	60881-60886	query	
515-3	60887-60891	with	
515-4	60892-60893	a	
515-5	60894-60898	plan	
515-6	60899-60904	state	
515-7	60905-60907	of	
515-8	60908-60916	Unfrozen	
515-9	60916-60917	/	
515-10	60917-60925	Parallel	
515-11	60926-60932	cannot	
515-12	60933-60935	be	
515-13	60936-60942	frozen	
515-14	60943-60945	by	
515-15	60946-60950	user	
515-16	60951-60957	action	
515-17	60957-60958	.	

#Text=Refer to the &OpenCurlyDoubleQuoteSQL Statements&CloseCurlyDoubleQuote chapter for further details.
516-1	60959-60964	Refer	
516-2	60965-60967	to	
516-3	60968-60971	the	
516-4	60972-60973	&	
516-5	60973-60996	OpenCurlyDoubleQuoteSQL	
516-6	60997-61007	Statements	
516-7	61007-61008	&	
516-8	61008-61029	CloseCurlyDoubleQuote	
516-9	61030-61037	chapter	
516-10	61038-61041	for	
516-11	61042-61049	further	
516-12	61050-61057	details	
516-13	61057-61058	.	

#Text=Generate ReportCopy link to this section
#Text=You can use the Generate Report tool to submit a query performance report to InterSystems Worldwide Response Center (WRC) customer support for analysis.
517-1	61059-61067	Generate	
517-2	61068-61078	ReportCopy	
517-3	61079-61083	link	
517-4	61084-61086	to	
517-5	61087-61091	this	
517-6	61092-61099	section	
517-7	61100-61103	You	
517-8	61104-61107	can	
517-9	61108-61111	use	
517-10	61112-61115	the	
517-11	61116-61124	Generate	
517-12	61125-61131	Report	
517-13	61132-61136	tool	
517-14	61137-61139	to	
517-15	61140-61146	submit	
517-16	61147-61148	a	
517-17	61149-61154	query	
517-18	61155-61166	performance	
517-19	61167-61173	report	
517-20	61174-61176	to	
517-21	61177-61189	InterSystems	
517-22	61190-61199	Worldwide	
517-23	61200-61208	Response	
517-24	61209-61215	Center	
517-25	61216-61217	(	
517-26	61217-61220	WRC	
517-27	61220-61221	)	
517-28	61222-61230	customer	
517-29	61231-61238	support	
517-30	61239-61242	for	
517-31	61243-61251	analysis	
517-32	61251-61252	.	

#Text=You can run the Generate Report tool from the Management Portal using either of the following:
#Text=Select System Explorer, select Tools, select SQL Performance Tools, then select Generate Report.
518-1	61253-61256	You	
518-2	61257-61260	can	
518-3	61261-61264	run	
518-4	61265-61268	the	
518-5	61269-61277	Generate	
518-6	61278-61284	Report	
518-7	61285-61289	tool	
518-8	61290-61294	from	
518-9	61295-61298	the	
518-10	61299-61309	Management	
518-11	61310-61316	Portal	
518-12	61317-61322	using	
518-13	61323-61329	either	
518-14	61330-61332	of	
518-15	61333-61336	the	
518-16	61337-61346	following	
518-17	61346-61347	:	
518-18	61348-61354	Select	
518-19	61355-61361	System	
518-20	61362-61370	Explorer	
518-21	61370-61371	,	
518-22	61372-61378	select	
518-23	61379-61384	Tools	
518-24	61384-61385	,	
518-25	61386-61392	select	
518-26	61393-61396	SQL	
518-27	61397-61408	Performance	
518-28	61409-61414	Tools	
518-29	61414-61415	,	
518-30	61416-61420	then	
518-31	61421-61427	select	
518-32	61428-61436	Generate	
518-33	61437-61443	Report	
518-34	61443-61444	.	

#Text=Select System Explorer, select SQL, then from the Tools drop-down menu select Generate Report.
519-1	61445-61451	Select	
519-2	61452-61458	System	
519-3	61459-61467	Explorer	
519-4	61467-61468	,	
519-5	61469-61475	select	
519-6	61476-61479	SQL	
519-7	61479-61480	,	
519-8	61481-61485	then	
519-9	61486-61490	from	
519-10	61491-61494	the	
519-11	61495-61500	Tools	
519-12	61501-61510	drop-down	
519-13	61511-61515	menu	
519-14	61516-61522	select	
519-15	61523-61531	Generate	
519-16	61532-61538	Report	
519-17	61538-61539	.	

#Text=To use this reporting tool, perform the following steps:
#Text=You must first get a WRC tracking number from the WRC.
520-1	61540-61542	To	
520-2	61543-61546	use	
520-3	61547-61551	this	
520-4	61552-61561	reporting	
520-5	61562-61566	tool	
520-6	61566-61567	,	
520-7	61568-61575	perform	
520-8	61576-61579	the	
520-9	61580-61589	following	
520-10	61590-61595	steps	
520-11	61595-61596	:	
520-12	61597-61600	You	
520-13	61601-61605	must	
520-14	61606-61611	first	
520-15	61612-61615	get	
520-16	61616-61617	a	
520-17	61618-61621	WRC	
520-18	61622-61630	tracking	
520-19	61631-61637	number	
520-20	61638-61642	from	
520-21	61643-61646	the	
520-22	61647-61650	WRC	
520-23	61650-61651	.	

#Text=You can contact the WRC from the Management Portal by using the Contact button found at the top of each Management Portal page.
521-1	61652-61655	You	
521-2	61656-61659	can	
521-3	61660-61667	contact	
521-4	61668-61671	the	
521-5	61672-61675	WRC	
521-6	61676-61680	from	
521-7	61681-61684	the	
521-8	61685-61695	Management	
521-9	61696-61702	Portal	
521-10	61703-61705	by	
521-11	61706-61711	using	
521-12	61712-61715	the	
521-13	61716-61723	Contact	
521-14	61724-61730	button	
521-15	61731-61736	found	
521-16	61737-61739	at	
521-17	61740-61743	the	
521-18	61744-61747	top	
521-19	61748-61750	of	
521-20	61751-61755	each	
521-21	61756-61766	Management	
521-22	61767-61773	Portal	
521-23	61774-61778	page	
521-24	61778-61779	.	

#Text=Enter this tracking number in the WRC Number area.
522-1	61780-61785	Enter	
522-2	61786-61790	this	
522-3	61791-61799	tracking	
522-4	61800-61806	number	
522-5	61807-61809	in	
522-6	61810-61813	the	
522-7	61814-61817	WRC	
522-8	61818-61824	Number	
522-9	61825-61829	area	
522-10	61829-61830	.	

#Text=You can use this tracking number to report the performance of a single query or multiple queries.
523-1	61831-61834	You	
523-2	61835-61838	can	
523-3	61839-61842	use	
523-4	61843-61847	this	
523-5	61848-61856	tracking	
523-6	61857-61863	number	
523-7	61864-61866	to	
523-8	61867-61873	report	
523-9	61874-61877	the	
523-10	61878-61889	performance	
523-11	61890-61892	of	
523-12	61893-61894	a	
523-13	61895-61901	single	
523-14	61902-61907	query	
523-15	61908-61910	or	
523-16	61911-61919	multiple	
523-17	61920-61927	queries	
523-18	61927-61928	.	

#Text=In the SQL Statement area, enter a query text.
524-1	61929-61931	In	
524-2	61932-61935	the	
524-3	61936-61939	SQL	
524-4	61940-61949	Statement	
524-5	61950-61954	area	
524-6	61954-61955	,	
524-7	61956-61961	enter	
524-8	61962-61963	a	
524-9	61964-61969	query	
524-10	61970-61974	text	
524-11	61974-61975	.	

#Text=An X icon appears in the top right corner.
525-1	61976-61978	An	
525-2	61979-61980	X	
525-3	61981-61985	icon	
525-4	61986-61993	appears	
525-5	61994-61996	in	
525-6	61997-62000	the	
525-7	62001-62004	top	
525-8	62005-62010	right	
525-9	62011-62017	corner	
525-10	62017-62018	.	

#Text=You can use this icon to clear the SQL Statement area.
526-1	62019-62022	You	
526-2	62023-62026	can	
526-3	62027-62030	use	
526-4	62031-62035	this	
526-5	62036-62040	icon	
526-6	62041-62043	to	
526-7	62044-62049	clear	
526-8	62050-62053	the	
526-9	62054-62057	SQL	
526-10	62058-62067	Statement	
526-11	62068-62072	area	
526-12	62072-62073	.	

#Text=When the query is complete, select the Save Query button.
527-1	62074-62078	When	
527-2	62079-62082	the	
527-3	62083-62088	query	
527-4	62089-62091	is	
527-5	62092-62100	complete	
527-6	62100-62101	,	
527-7	62102-62108	select	
527-8	62109-62112	the	
527-9	62113-62117	Save	
527-10	62118-62123	Query	
527-11	62124-62130	button	
527-12	62130-62131	.	

#Text=The system generates a query plan and gathers runtime statistics on the specified query.
528-1	62132-62135	The	
528-2	62136-62142	system	
528-3	62143-62152	generates	
528-4	62153-62154	a	
528-5	62155-62160	query	
528-6	62161-62165	plan	
528-7	62166-62169	and	
528-8	62170-62177	gathers	
528-9	62178-62185	runtime	
528-10	62186-62196	statistics	
528-11	62197-62199	on	
528-12	62200-62203	the	
528-13	62204-62213	specified	
528-14	62214-62219	query	
528-15	62219-62220	.	

#Text=Regardless of the system-wide runtime statistics setting, the Generate Report tool always collects with Collection Option 3: record statistics for all module levels of the query.
529-1	62221-62231	Regardless	
529-2	62232-62234	of	
529-3	62235-62238	the	
529-4	62239-62250	system-wide	
529-5	62251-62258	runtime	
529-6	62259-62269	statistics	
529-7	62270-62277	setting	
529-8	62277-62278	,	
529-9	62279-62282	the	
529-10	62283-62291	Generate	
529-11	62292-62298	Report	
529-12	62299-62303	tool	
529-13	62304-62310	always	
529-14	62311-62319	collects	
529-15	62320-62324	with	
529-16	62325-62335	Collection	
529-17	62336-62342	Option	
529-18	62343-62344	3	
529-19	62344-62345	:	
529-20	62346-62352	record	
529-21	62353-62363	statistics	
529-22	62364-62367	for	
529-23	62368-62371	all	
529-24	62372-62378	module	
529-25	62379-62385	levels	
529-26	62386-62388	of	
529-27	62389-62392	the	
529-28	62393-62398	query	
529-29	62398-62399	.	

#Text=Because gathering statistics at this level may take time, it is strongly recommended that you select the Run Save Query process in the background check box.
530-1	62400-62407	Because	
530-2	62408-62417	gathering	
530-3	62418-62428	statistics	
530-4	62429-62431	at	
530-5	62432-62436	this	
530-6	62437-62442	level	
530-7	62443-62446	may	
530-8	62447-62451	take	
530-9	62452-62456	time	
530-10	62456-62457	,	
530-11	62458-62460	it	
530-12	62461-62463	is	
530-13	62464-62472	strongly	
530-14	62473-62484	recommended	
530-15	62485-62489	that	
530-16	62490-62493	you	
530-17	62494-62500	select	
530-18	62501-62504	the	
530-19	62505-62508	Run	
530-20	62509-62513	Save	
530-21	62514-62519	Query	
530-22	62520-62527	process	
530-23	62528-62530	in	
530-24	62531-62534	the	
530-25	62535-62545	background	
530-26	62545-62546	 	
530-27	62546-62551	check	
530-28	62552-62555	box	
530-29	62555-62556	.	

#Text=This check box is selected by default.
531-1	62557-62561	This	
531-2	62562-62567	check	
531-3	62568-62571	box	
531-4	62572-62574	is	
531-5	62575-62583	selected	
531-6	62584-62586	by	
531-7	62587-62594	default	
531-8	62594-62595	.	

#Text=When a background job is started, the tool displays the message "Please wait...", disables all the fields on the page, and show a new View Process button.
532-1	62596-62600	When	
532-2	62601-62602	a	
532-3	62603-62613	background	
532-4	62614-62617	job	
532-5	62618-62620	is	
532-6	62621-62628	started	
532-7	62628-62629	,	
532-8	62630-62633	the	
532-9	62634-62638	tool	
532-10	62639-62647	displays	
532-11	62648-62651	the	
532-12	62652-62659	message	
532-13	62660-62661	"	
532-14	62661-62667	Please	
532-15	62668-62672	wait	
532-16	62672-62673	.	
532-17	62673-62674	.	
532-18	62674-62675	.	
532-19	62675-62676	"	
532-20	62676-62677	,	
532-21	62678-62686	disables	
532-22	62687-62690	all	
532-23	62691-62694	the	
532-24	62695-62701	fields	
532-25	62702-62704	on	
532-26	62705-62708	the	
532-27	62709-62713	page	
532-28	62713-62714	,	
532-29	62715-62718	and	
532-30	62719-62723	show	
532-31	62724-62725	a	
532-32	62726-62729	new	
532-33	62730-62734	View	
532-34	62735-62742	Process	
532-35	62743-62749	button	
532-36	62749-62750	.	

#Text=Clicking the View Process button will open the Process Details page in a new tab.
533-1	62751-62759	Clicking	
533-2	62760-62763	the	
533-3	62764-62768	View	
533-4	62769-62776	Process	
533-5	62777-62783	button	
533-6	62784-62788	will	
533-7	62789-62793	open	
533-8	62794-62797	the	
533-9	62798-62805	Process	
533-10	62806-62813	Details	
533-11	62814-62818	page	
533-12	62819-62821	in	
533-13	62822-62823	a	
533-14	62824-62827	new	
533-15	62828-62831	tab	
533-16	62831-62832	.	

#Text=From the Process Details page, you can view the process, and may "Suspend", "Resume" or "Terminate" the process.
534-1	62833-62837	From	
534-2	62838-62841	the	
534-3	62842-62849	Process	
534-4	62850-62857	Details	
534-5	62858-62862	page	
534-6	62862-62863	,	
534-7	62864-62867	you	
534-8	62868-62871	can	
534-9	62872-62876	view	
534-10	62877-62880	the	
534-11	62881-62888	process	
534-12	62888-62889	,	
534-13	62890-62893	and	
534-14	62894-62897	may	
534-15	62898-62899	"	
534-16	62899-62906	Suspend	
534-17	62906-62907	"	
534-18	62907-62908	,	
534-19	62909-62910	"	
534-20	62910-62916	Resume	
534-21	62916-62917	"	
534-22	62918-62920	or	
534-23	62921-62922	"	
534-24	62922-62931	Terminate	
534-25	62931-62932	"	
534-26	62933-62936	the	
534-27	62937-62944	process	
534-28	62944-62945	.	

#Text=The status of the process is reflected on the Save Query page.
535-1	62946-62949	The	
535-2	62950-62956	status	
535-3	62957-62959	of	
535-4	62960-62963	the	
535-5	62964-62971	process	
535-6	62972-62974	is	
535-7	62975-62984	reflected	
535-8	62985-62987	on	
535-9	62988-62991	the	
535-10	62992-62996	Save	
535-11	62997-63002	Query	
535-12	63003-63007	page	
535-13	63007-63008	.	

#Text=When the process is finished, the Currently Saved Queries table is refreshed, the View Process button disappears, and all the fields on the page are enabled.
536-1	63009-63013	When	
536-2	63014-63017	the	
536-3	63018-63025	process	
536-4	63026-63028	is	
536-5	63029-63037	finished	
536-6	63037-63038	,	
536-7	63039-63042	the	
536-8	63043-63052	Currently	
536-9	63053-63058	Saved	
536-10	63059-63066	Queries	
536-11	63067-63072	table	
536-12	63073-63075	is	
536-13	63076-63085	refreshed	
536-14	63085-63086	,	
536-15	63087-63090	the	
536-16	63091-63095	View	
536-17	63096-63103	Process	
536-18	63104-63110	button	
536-19	63111-63121	disappears	
536-20	63121-63122	,	
536-21	63123-63126	and	
536-22	63127-63130	all	
536-23	63131-63134	the	
536-24	63135-63141	fields	
536-25	63142-63144	on	
536-26	63145-63148	the	
536-27	63149-63153	page	
536-28	63154-63157	are	
536-29	63158-63165	enabled	
536-30	63165-63166	.	

#Text=Perform Step 2 with each desired query.
537-1	63167-63174	Perform	
537-2	63175-63179	Step	
537-3	63180-63181	2	
537-4	63182-63186	with	
537-5	63187-63191	each	
537-6	63192-63199	desired	
537-7	63200-63205	query	
537-8	63205-63206	.	

#Text=Each query will be added to the Currently Saved Queries table.
538-1	63207-63211	Each	
538-2	63212-63217	query	
538-3	63218-63222	will	
538-4	63223-63225	be	
538-5	63226-63231	added	
538-6	63232-63234	to	
538-7	63235-63238	the	
538-8	63239-63248	Currently	
538-9	63249-63254	Saved	
538-10	63255-63262	Queries	
538-11	63263-63268	table	
538-12	63268-63269	.	

#Text=Note that this table can contain queries with the same WRC tracking number, or with different tracking numbers.
539-1	63270-63274	Note	
539-2	63275-63279	that	
539-3	63280-63284	this	
539-4	63285-63290	table	
539-5	63291-63294	can	
539-6	63295-63302	contain	
539-7	63303-63310	queries	
539-8	63311-63315	with	
539-9	63316-63319	the	
539-10	63320-63324	same	
539-11	63325-63328	WRC	
539-12	63329-63337	tracking	
539-13	63338-63344	number	
539-14	63344-63345	,	
539-15	63346-63348	or	
539-16	63349-63353	with	
539-17	63354-63363	different	
539-18	63364-63372	tracking	
539-19	63373-63380	numbers	
539-20	63380-63381	.	

#Text=When finished with all queries, proceed to Step 4.
540-1	63382-63386	When	
540-2	63387-63395	finished	
540-3	63396-63400	with	
540-4	63401-63404	all	
540-5	63405-63412	queries	
540-6	63412-63413	,	
540-7	63414-63421	proceed	
540-8	63422-63424	to	
540-9	63425-63429	Step	
540-10	63430-63431	4	
540-11	63431-63432	.	

#Text=For each listed query, you can select the Details link.
541-1	63433-63436	For	
541-2	63437-63441	each	
541-3	63442-63448	listed	
541-4	63449-63454	query	
541-5	63454-63455	,	
541-6	63456-63459	you	
541-7	63460-63463	can	
541-8	63464-63470	select	
541-9	63471-63474	the	
541-10	63475-63482	Details	
541-11	63483-63487	link	
541-12	63487-63488	.	

#Text=This link opens a separate page that displays the full SQL Statement, the Properties (including the WRC tracking number and the IRIS software version), and the Query Plan with performance statistics for each module.
542-1	63489-63493	This	
542-2	63494-63498	link	
542-3	63499-63504	opens	
542-4	63505-63506	a	
542-5	63507-63515	separate	
542-6	63516-63520	page	
542-7	63521-63525	that	
542-8	63526-63534	displays	
542-9	63535-63538	the	
542-10	63539-63543	full	
542-11	63544-63547	SQL	
542-12	63548-63557	Statement	
542-13	63557-63558	,	
542-14	63559-63562	the	
542-15	63563-63573	Properties	
542-16	63574-63575	(	
542-17	63575-63584	including	
542-18	63585-63588	the	
542-19	63589-63592	WRC	
542-20	63593-63601	tracking	
542-21	63602-63608	number	
542-22	63609-63612	and	
542-23	63613-63616	the	
542-24	63617-63621	IRIS	
542-25	63622-63630	software	
542-26	63631-63638	version	
542-27	63638-63639	)	
542-28	63639-63640	,	
542-29	63641-63644	and	
542-30	63645-63648	the	
542-31	63649-63654	Query	
542-32	63655-63659	Plan	
542-33	63660-63664	with	
542-34	63665-63676	performance	
542-35	63677-63687	statistics	
542-36	63688-63691	for	
542-37	63692-63696	each	
542-38	63697-63703	module	
542-39	63703-63704	.	

#Text=To delete individual queries, check the check boxes for those queries from the Currently Saved Queries table and then click the Clear button.
543-1	63705-63707	To	
543-2	63708-63714	delete	
543-3	63715-63725	individual	
543-4	63726-63733	queries	
543-5	63733-63734	,	
543-6	63735-63740	check	
543-7	63741-63744	the	
543-8	63745-63750	check	
543-9	63751-63756	boxes	
543-10	63757-63760	for	
543-11	63761-63766	those	
543-12	63767-63774	queries	
543-13	63775-63779	from	
543-14	63780-63783	the	
543-15	63784-63793	Currently	
543-16	63794-63799	Saved	
543-17	63800-63807	Queries	
543-18	63808-63813	table	
543-19	63814-63817	and	
543-20	63818-63822	then	
543-21	63823-63828	click	
543-22	63829-63832	the	
543-23	63833-63838	Clear	
543-24	63839-63845	button	
543-25	63845-63846	.	

#Text=To delete all queries associated with a WRC tracking number, select a row from the Currently Saved Queries table.
544-1	63847-63849	To	
544-2	63850-63856	delete	
544-3	63857-63860	all	
544-4	63861-63868	queries	
544-5	63869-63879	associated	
544-6	63880-63884	with	
544-7	63885-63886	a	
544-8	63887-63890	WRC	
544-9	63891-63899	tracking	
544-10	63900-63906	number	
544-11	63906-63907	,	
544-12	63908-63914	select	
544-13	63915-63916	a	
544-14	63917-63920	row	
544-15	63921-63925	from	
544-16	63926-63929	the	
544-17	63930-63939	Currently	
544-18	63940-63945	Saved	
544-19	63946-63953	Queries	
544-20	63954-63959	table	
544-21	63959-63960	.	

#Text=The WRC number appears in the WRC Number area at the top of the page.
545-1	63961-63964	The	
545-2	63965-63968	WRC	
545-3	63969-63975	number	
545-4	63976-63983	appears	
545-5	63984-63986	in	
545-6	63987-63990	the	
545-7	63991-63994	WRC	
545-8	63995-64001	Number	
545-9	64002-64006	area	
545-10	64007-64009	at	
545-11	64010-64013	the	
545-12	64014-64017	top	
545-13	64018-64020	of	
545-14	64021-64024	the	
545-15	64025-64029	page	
545-16	64029-64030	.	

#Text=If you then click the Clear button, all queries for that WRC number are deleted.
546-1	64031-64033	If	
546-2	64034-64037	you	
546-3	64038-64042	then	
546-4	64043-64048	click	
546-5	64049-64052	the	
546-6	64053-64058	Clear	
546-7	64059-64065	button	
546-8	64065-64066	,	
546-9	64067-64070	all	
546-10	64071-64078	queries	
546-11	64079-64082	for	
546-12	64083-64087	that	
546-13	64088-64091	WRC	
546-14	64092-64098	number	
546-15	64099-64102	are	
546-16	64103-64110	deleted	
546-17	64110-64111	.	

#Text=Use the query check boxes to select the queries you wish to report to the WRC.
547-1	64112-64115	Use	
547-2	64116-64119	the	
547-3	64120-64125	query	
547-4	64126-64131	check	
547-5	64132-64137	boxes	
547-6	64138-64140	to	
547-7	64141-64147	select	
547-8	64148-64151	the	
547-9	64152-64159	queries	
547-10	64160-64163	you	
547-11	64164-64168	wish	
547-12	64169-64171	to	
547-13	64172-64178	report	
547-14	64179-64181	to	
547-15	64182-64185	the	
547-16	64186-64189	WRC	
547-17	64189-64190	.	

#Text=To select all queries associated with a WRC tracking number, select a row from the Currently Saved Queries table, rather than using the check boxes.
548-1	64191-64193	To	
548-2	64194-64200	select	
548-3	64201-64204	all	
548-4	64205-64212	queries	
548-5	64213-64223	associated	
548-6	64224-64228	with	
548-7	64229-64230	a	
548-8	64231-64234	WRC	
548-9	64235-64243	tracking	
548-10	64244-64250	number	
548-11	64250-64251	,	
548-12	64252-64258	select	
548-13	64259-64260	a	
548-14	64261-64264	row	
548-15	64265-64269	from	
548-16	64270-64273	the	
548-17	64274-64283	Currently	
548-18	64284-64289	Saved	
548-19	64290-64297	Queries	
548-20	64298-64303	table	
548-21	64303-64304	,	
548-22	64305-64311	rather	
548-23	64312-64316	than	
548-24	64317-64322	using	
548-25	64323-64326	the	
548-26	64327-64332	check	
548-27	64333-64338	boxes	
548-28	64338-64339	.	

#Text=In either case, you then select the Generate Report button.
549-1	64340-64342	In	
549-2	64343-64349	either	
549-3	64350-64354	case	
549-4	64354-64355	,	
549-5	64356-64359	you	
549-6	64360-64364	then	
549-7	64365-64371	select	
549-8	64372-64375	the	
549-9	64376-64384	Generate	
549-10	64385-64391	Report	
549-11	64392-64398	button	
549-12	64398-64399	.	

#Text=The Generate Report tool creates a xml file that includes the query statement, the query plan with runtime statistics, the class definition, and the sql int file associated with each selected query.
550-1	64400-64403	The	
550-2	64404-64412	Generate	
550-3	64413-64419	Report	
550-4	64420-64424	tool	
550-5	64425-64432	creates	
550-6	64433-64434	a	
550-7	64435-64438	xml	
550-8	64439-64443	file	
550-9	64444-64448	that	
550-10	64449-64457	includes	
550-11	64458-64461	the	
550-12	64462-64467	query	
550-13	64468-64477	statement	
550-14	64477-64478	,	
550-15	64479-64482	the	
550-16	64483-64488	query	
550-17	64489-64493	plan	
550-18	64494-64498	with	
550-19	64499-64506	runtime	
550-20	64507-64517	statistics	
550-21	64517-64518	,	
550-22	64519-64522	the	
550-23	64523-64528	class	
550-24	64529-64539	definition	
550-25	64539-64540	,	
550-26	64541-64544	and	
550-27	64545-64548	the	
550-28	64549-64552	sql	
550-29	64553-64556	int	
550-30	64557-64561	file	
550-31	64562-64572	associated	
550-32	64573-64577	with	
550-33	64578-64582	each	
550-34	64583-64591	selected	
550-35	64592-64597	query	
550-36	64597-64598	.	

#Text=If you select queries associated with a single WRC tracking number, the generated file will have a default name such as WRC12345.xml.
551-1	64599-64601	If	
551-2	64602-64605	you	
551-3	64606-64612	select	
551-4	64613-64620	queries	
551-5	64621-64631	associated	
551-6	64632-64636	with	
551-7	64637-64638	a	
551-8	64639-64645	single	
551-9	64646-64649	WRC	
551-10	64650-64658	tracking	
551-11	64659-64665	number	
551-12	64665-64666	,	
551-13	64667-64670	the	
551-14	64671-64680	generated	
551-15	64681-64685	file	
551-16	64686-64690	will	
551-17	64691-64695	have	
551-18	64696-64697	a	
551-19	64698-64705	default	
551-20	64706-64710	name	
551-21	64711-64715	such	
551-22	64716-64718	as	
551-23	64719-64727	WRC12345	
551-24	64727-64728	.	
551-25	64728-64731	xml	
551-26	64731-64732	.	

#Text=If you select queries associated with more than one WRC tracking number, the generated file will have the default name WRCMultiple.xml.
552-1	64733-64735	If	
552-2	64736-64739	you	
552-3	64740-64746	select	
552-4	64747-64754	queries	
552-5	64755-64765	associated	
552-6	64766-64770	with	
552-7	64771-64775	more	
552-8	64776-64780	than	
552-9	64781-64784	one	
552-10	64785-64788	WRC	
552-11	64789-64797	tracking	
552-12	64798-64804	number	
552-13	64804-64805	,	
552-14	64806-64809	the	
552-15	64810-64819	generated	
552-16	64820-64824	file	
552-17	64825-64829	will	
552-18	64830-64834	have	
552-19	64835-64838	the	
552-20	64839-64846	default	
552-21	64847-64851	name	
552-22	64852-64867	WRCMultiple.xml	
552-23	64867-64868	.	

#Text=A dialog box appears that asks you to specify the location to save the report to.
553-1	64869-64870	A	
553-2	64871-64877	dialog	
553-3	64878-64881	box	
553-4	64882-64889	appears	
553-5	64890-64894	that	
553-6	64895-64899	asks	
553-7	64900-64903	you	
553-8	64904-64906	to	
553-9	64907-64914	specify	
553-10	64915-64918	the	
553-11	64919-64927	location	
553-12	64928-64930	to	
553-13	64931-64935	save	
553-14	64936-64939	the	
553-15	64940-64946	report	
553-16	64947-64949	to	
553-17	64949-64950	.	

#Text=After the report is saved, you can click the Mail to link to send the report to WRC customer support.
554-1	64951-64956	After	
554-2	64957-64960	the	
554-3	64961-64967	report	
554-4	64968-64970	is	
554-5	64971-64976	saved	
554-6	64976-64977	,	
554-7	64978-64981	you	
554-8	64982-64985	can	
554-9	64986-64991	click	
554-10	64992-64995	the	
554-11	64996-65000	Mail	
554-12	65001-65003	to	
554-13	65004-65008	link	
554-14	65009-65011	to	
554-15	65012-65016	send	
554-16	65017-65020	the	
554-17	65021-65027	report	
554-18	65028-65030	to	
554-19	65031-65034	WRC	
554-20	65035-65043	customer	
554-21	65044-65051	support	
554-22	65051-65052	.	

#Text=Attach the file using the mail client's attach/insert capability.
555-1	65053-65059	Attach	
555-2	65060-65063	the	
555-3	65064-65068	file	
555-4	65069-65074	using	
555-5	65075-65078	the	
555-6	65079-65083	mail	
555-7	65084-65092	client's	
555-8	65093-65099	attach	
555-9	65099-65100	/	
555-10	65100-65106	insert	
555-11	65107-65117	capability	
555-12	65117-65118	.	

#Text=Cached QueriesSQL Performance Analysis Toolkit
#Text=View this item as PDF  |  Download all PDFs
#Text=© 2021 InterSystems Corporation, Cambridge, MA.
556-1	65119-65125	Cached	
556-2	65126-65136	QueriesSQL	
556-3	65137-65148	Performance	
556-4	65149-65157	Analysis	
556-5	65158-65165	Toolkit	
556-6	65166-65170	View	
556-7	65171-65175	this	
556-8	65176-65180	item	
556-9	65181-65183	as	
556-10	65184-65187	PDF	
556-11	65187-65189	  	
556-12	65189-65190	|	
556-13	65190-65192	  	
556-14	65192-65200	Download	
556-15	65201-65204	all	
556-16	65205-65209	PDFs	
556-17	65210-65211	©	
556-18	65212-65216	2021	
556-19	65217-65229	InterSystems	
556-20	65230-65241	Corporation	
556-21	65241-65242	,	
556-22	65243-65252	Cambridge	
556-23	65252-65253	,	
556-24	65254-65256	MA	
556-25	65256-65257	.	

#Text=All rights reserved.
557-1	65258-65261	All	
557-2	65262-65268	rights	
557-3	65269-65277	reserved	
557-4	65277-65278	.	

#Text=Privacy
#Text=& Terms
#Text=Guarantee
#Text=Section 508
#Text=Cookies SettingsCookie List
#Text=Content date/time: 2021-04-14 05:23:32DocReleaseID: IRISforHealth2020.4
558-1	65279-65286	Privacy	
558-2	65287-65288	&	
558-3	65289-65294	Terms	
558-4	65295-65304	Guarantee	
558-5	65305-65312	Section	
558-6	65312-65313	 	
558-7	65313-65316	508	
558-8	65317-65324	Cookies	
558-9	65325-65339	SettingsCookie	
558-10	65340-65344	List	
558-11	65345-65352	Content	
558-12	65353-65357	date	
558-13	65357-65358	/	
558-14	65358-65362	time	
558-15	65362-65363	:	
558-16	65364-65368	2021	
558-17	65368-65369	-	
558-18	65369-65371	04	
558-19	65371-65372	-	
558-20	65372-65374	14	
558-21	65375-65377	05	
558-22	65377-65378	:	
558-23	65378-65380	23	
558-24	65380-65381	:	
558-25	65381-65395	32DocReleaseID	
558-26	65395-65396	:	
558-27	65397-65416	IRISforHealth2020.4	
