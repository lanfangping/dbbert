#FORMAT=WebAnno TSV 3.3
#T_SP=custom.Span|label
#T_RL=custom.Relation|label|BT_custom.Span


#Text=Optimizing Performance - MythTV Official Wiki
#Text=Optimizing Performance
#Text=From MythTV Official Wiki
#Text=Jump to:\t\t\t\t\tnavigation, \t\t\t\t\tsearch
#Text=This HOWTO aims to collect the multitude of tips regarding optimizing performance of your system for use with MythTV.
1-1	0-10	Optimizing	_	_	_	
1-2	11-22	Performance	_	_	_	
1-3	23-24	-	_	_	_	
1-4	25-31	MythTV	_	_	_	
1-5	32-40	Official	_	_	_	
1-6	41-45	Wiki	_	_	_	
1-7	46-56	Optimizing	_	_	_	
1-8	57-68	Performance	_	_	_	
1-9	69-73	From	_	_	_	
1-10	74-80	MythTV	_	_	_	
1-11	81-89	Official	_	_	_	
1-12	90-94	Wiki	_	_	_	
1-13	95-99	Jump	_	_	_	
1-14	100-102	to	_	_	_	
1-15	102-103	:	_	_	_	
1-16	108-118	navigation	_	_	_	
1-17	118-119	,	_	_	_	
1-18	125-131	search	_	_	_	
1-19	132-136	This	_	_	_	
1-20	137-142	HOWTO	_	_	_	
1-21	143-147	aims	_	_	_	
1-22	148-150	to	_	_	_	
1-23	151-158	collect	_	_	_	
1-24	159-162	the	_	_	_	
1-25	163-172	multitude	_	_	_	
1-26	173-175	of	_	_	_	
1-27	176-180	tips	_	_	_	
1-28	181-190	regarding	_	_	_	
1-29	191-201	optimizing	_	_	_	
1-30	202-213	performance	_	_	_	
1-31	214-216	of	_	_	_	
1-32	217-221	your	_	_	_	
1-33	222-228	system	_	_	_	
1-34	229-232	for	_	_	_	
1-35	233-236	use	_	_	_	
1-36	237-241	with	_	_	_	
1-37	242-248	MythTV	_	_	_	
1-38	248-249	.	_	_	_	

#Text=Contents
#Text=1 File Systems
#Text=1.1 Local File Systems
#Text=1.1.1 Put the database on a separate spindle
#Text=1.1.2 General Tips For Any File System
#Text=1.1.2.1 Combat Fragmentation
#Text=1.1.2.2 Disabling File Access Time Logging
#Text=1.1.2.3 Using "relatime" Mount Option
#Text=1.1.3 XFS-Specific Tips
#Text=1.1.3.1 Combat Fragmentation
#Text=1.1.3.2 Optimizing XFS on RAID Arrays
#Text=1.1.3.2.1 Examples
#Text=1.1.3.3 Further Information
#Text=1.2 Network File Systems
#Text=1.2.1 Disable NFS file attribute caching
#Text=1.2.2 NFS servers
#Text=1.3 RemoteFS
#Text=2 Devices
#Text=2.1 Capture Cards
#Text=2.2 Video Cards & Hardware Accelerated Video
#Text=2.2.1 VDPAU
#Text=2.2.2 VAAPI
#Text=2.2.3 CrystalHD
#Text=2.3 CPU / Processor
#Text=2.3.1 Clock Speed Throttling
#Text=3 Networks
#Text=3.1 Wireless Networks
#Text=3.2 Ethernet Full-Duplex Mode
#Text=4 Operating System
#Text=4.1 Kernel Selection
#Text=4.2 Kernel Configuration
#Text=4.2.1 Processor Family
#Text=4.2.2 IDE Controller
#Text=4.2.3 Preemptible Kernel
#Text=4.2.4 Timer Frequency
#Text=4.3 Realtime Threads
#Text=4.4 PCI Latency
#Text=4.5 RTC Maximum Frequency
#Text=4.6 Linux Distribution Selection
#Text=5 Other Software
#Text=5.1 MythTV
#Text=5.1.1 Multiple Machines
#Text=5.1.2 Frontend Playback Profiles
#Text=5.1.3 Recording Settings
#Text=5.1.4 Mythfilldatabase Scheduling
#Text=5.2 MySQL Database Tweaks
#Text=5.3 XORG CPU Hogging
#Text=5.4 Lightweight Window Managers
#Text=File Systems
#Text=Local File Systems
#Text=Put the database on a separate spindle
#Text=MythTV reads and writes large video files and it reads and writes small bits of metadata from a database.
2-1	250-258	Contents	_	_	_	
2-2	259-260	1	_	_	_	
2-3	261-265	File	_	_	_	
2-4	266-273	Systems	_	_	_	
2-5	274-277	1.1	_	_	_	
2-6	278-283	Local	_	_	_	
2-7	284-288	File	_	_	_	
2-8	289-296	Systems	_	_	_	
2-9	297-302	1.1.1	_	_	_	
2-10	303-306	Put	_	_	_	
2-11	307-310	the	_	_	_	
2-12	311-319	database	_	_	_	
2-13	320-322	on	_	_	_	
2-14	323-324	a	_	_	_	
2-15	325-333	separate	_	_	_	
2-16	334-341	spindle	_	_	_	
2-17	342-347	1.1.2	_	_	_	
2-18	348-355	General	_	_	_	
2-19	356-360	Tips	_	_	_	
2-20	361-364	For	_	_	_	
2-21	365-368	Any	_	_	_	
2-22	369-373	File	_	_	_	
2-23	374-380	System	_	_	_	
2-24	381-388	1.1.2.1	_	_	_	
2-25	389-395	Combat	_	_	_	
2-26	396-409	Fragmentation	_	_	_	
2-27	410-417	1.1.2.2	_	_	_	
2-28	418-427	Disabling	_	_	_	
2-29	428-432	File	_	_	_	
2-30	433-439	Access	_	_	_	
2-31	440-444	Time	_	_	_	
2-32	445-452	Logging	_	_	_	
2-33	453-460	1.1.2.3	_	_	_	
2-34	461-466	Using	_	_	_	
2-35	467-468	"	_	_	_	
2-36	468-476	relatime	_	_	_	
2-37	476-477	"	_	_	_	
2-38	478-483	Mount	_	_	_	
2-39	484-490	Option	_	_	_	
2-40	491-496	1.1.3	_	_	_	
2-41	497-509	XFS-Specific	_	_	_	
2-42	510-514	Tips	_	_	_	
2-43	515-522	1.1.3.1	_	_	_	
2-44	523-529	Combat	_	_	_	
2-45	530-543	Fragmentation	_	_	_	
2-46	544-551	1.1.3.2	_	_	_	
2-47	552-562	Optimizing	_	_	_	
2-48	563-566	XFS	_	_	_	
2-49	567-569	on	_	_	_	
2-50	570-574	RAID	_	_	_	
2-51	575-581	Arrays	_	_	_	
2-52	582-591	1.1.3.2.1	_	_	_	
2-53	592-600	Examples	_	_	_	
2-54	601-608	1.1.3.3	_	_	_	
2-55	609-616	Further	_	_	_	
2-56	617-628	Information	_	_	_	
2-57	629-632	1.2	_	_	_	
2-58	633-640	Network	_	_	_	
2-59	641-645	File	_	_	_	
2-60	646-653	Systems	_	_	_	
2-61	654-659	1.2.1	_	_	_	
2-62	660-667	Disable	_	_	_	
2-63	668-671	NFS	_	_	_	
2-64	672-676	file	_	_	_	
2-65	677-686	attribute	_	_	_	
2-66	687-694	caching	_	_	_	
2-67	695-700	1.2.2	_	_	_	
2-68	701-704	NFS	_	_	_	
2-69	705-712	servers	_	_	_	
2-70	713-716	1.3	_	_	_	
2-71	717-725	RemoteFS	_	_	_	
2-72	726-727	2	_	_	_	
2-73	728-735	Devices	_	_	_	
2-74	736-739	2.1	_	_	_	
2-75	740-747	Capture	_	_	_	
2-76	748-753	Cards	_	_	_	
2-77	754-757	2.2	_	_	_	
2-78	758-763	Video	_	_	_	
2-79	764-769	Cards	_	_	_	
2-80	770-771	&	_	_	_	
2-81	772-780	Hardware	_	_	_	
2-82	781-792	Accelerated	_	_	_	
2-83	793-798	Video	_	_	_	
2-84	799-804	2.2.1	_	_	_	
2-85	805-810	VDPAU	_	_	_	
2-86	811-816	2.2.2	_	_	_	
2-87	817-822	VAAPI	_	_	_	
2-88	823-828	2.2.3	_	_	_	
2-89	829-838	CrystalHD	_	_	_	
2-90	839-842	2.3	_	_	_	
2-91	843-846	CPU	_	_	_	
2-92	847-848	/	_	_	_	
2-93	849-858	Processor	_	_	_	
2-94	859-864	2.3.1	_	_	_	
2-95	865-870	Clock	_	_	_	
2-96	871-876	Speed	_	_	_	
2-97	877-887	Throttling	_	_	_	
2-98	888-889	3	_	_	_	
2-99	890-898	Networks	_	_	_	
2-100	899-902	3.1	_	_	_	
2-101	903-911	Wireless	_	_	_	
2-102	912-920	Networks	_	_	_	
2-103	921-924	3.2	_	_	_	
2-104	925-933	Ethernet	_	_	_	
2-105	934-945	Full-Duplex	_	_	_	
2-106	946-950	Mode	_	_	_	
2-107	951-952	4	_	_	_	
2-108	953-962	Operating	_	_	_	
2-109	963-969	System	_	_	_	
2-110	970-973	4.1	_	_	_	
2-111	974-980	Kernel	_	_	_	
2-112	981-990	Selection	_	_	_	
2-113	991-994	4.2	_	_	_	
2-114	995-1001	Kernel	_	_	_	
2-115	1002-1015	Configuration	_	_	_	
2-116	1016-1021	4.2.1	_	_	_	
2-117	1022-1031	Processor	_	_	_	
2-118	1032-1038	Family	_	_	_	
2-119	1039-1044	4.2.2	_	_	_	
2-120	1045-1048	IDE	_	_	_	
2-121	1049-1059	Controller	_	_	_	
2-122	1060-1065	4.2.3	_	_	_	
2-123	1066-1077	Preemptible	_	_	_	
2-124	1078-1084	Kernel	_	_	_	
2-125	1085-1090	4.2.4	_	_	_	
2-126	1091-1096	Timer	_	_	_	
2-127	1097-1106	Frequency	_	_	_	
2-128	1107-1110	4.3	_	_	_	
2-129	1111-1119	Realtime	_	_	_	
2-130	1120-1127	Threads	_	_	_	
2-131	1128-1131	4.4	_	_	_	
2-132	1132-1135	PCI	_	_	_	
2-133	1136-1143	Latency	_	_	_	
2-134	1144-1147	4.5	_	_	_	
2-135	1148-1151	RTC	_	_	_	
2-136	1152-1159	Maximum	_	_	_	
2-137	1160-1169	Frequency	_	_	_	
2-138	1170-1173	4.6	_	_	_	
2-139	1174-1179	Linux	_	_	_	
2-140	1180-1192	Distribution	_	_	_	
2-141	1193-1202	Selection	_	_	_	
2-142	1203-1204	5	_	_	_	
2-143	1205-1210	Other	_	_	_	
2-144	1211-1219	Software	_	_	_	
2-145	1220-1223	5.1	_	_	_	
2-146	1224-1230	MythTV	_	_	_	
2-147	1231-1236	5.1.1	_	_	_	
2-148	1237-1245	Multiple	_	_	_	
2-149	1246-1254	Machines	_	_	_	
2-150	1255-1260	5.1.2	_	_	_	
2-151	1261-1269	Frontend	_	_	_	
2-152	1270-1278	Playback	_	_	_	
2-153	1279-1287	Profiles	_	_	_	
2-154	1288-1293	5.1.3	_	_	_	
2-155	1294-1303	Recording	_	_	_	
2-156	1304-1312	Settings	_	_	_	
2-157	1313-1318	5.1.4	_	_	_	
2-158	1319-1335	Mythfilldatabase	_	_	_	
2-159	1336-1346	Scheduling	_	_	_	
2-160	1347-1350	5.2	_	_	_	
2-161	1351-1356	MySQL	_	_	_	
2-162	1357-1365	Database	_	_	_	
2-163	1366-1372	Tweaks	_	_	_	
2-164	1373-1376	5.3	_	_	_	
2-165	1377-1381	XORG	_	_	_	
2-166	1382-1385	CPU	_	_	_	
2-167	1386-1393	Hogging	_	_	_	
2-168	1394-1397	5.4	_	_	_	
2-169	1398-1409	Lightweight	_	_	_	
2-170	1410-1416	Window	_	_	_	
2-171	1417-1425	Managers	_	_	_	
2-172	1426-1430	File	_	_	_	
2-173	1431-1438	Systems	_	_	_	
2-174	1439-1444	Local	_	_	_	
2-175	1445-1449	File	_	_	_	
2-176	1450-1457	Systems	_	_	_	
2-177	1458-1461	Put	_	_	_	
2-178	1462-1465	the	_	_	_	
2-179	1466-1474	database	_	_	_	
2-180	1475-1477	on	_	_	_	
2-181	1478-1479	a	_	_	_	
2-182	1480-1488	separate	_	_	_	
2-183	1489-1496	spindle	_	_	_	
2-184	1497-1503	MythTV	_	_	_	
2-185	1504-1509	reads	_	_	_	
2-186	1510-1513	and	_	_	_	
2-187	1514-1520	writes	_	_	_	
2-188	1521-1526	large	_	_	_	
2-189	1527-1532	video	_	_	_	
2-190	1533-1538	files	_	_	_	
2-191	1539-1542	and	_	_	_	
2-192	1543-1545	it	_	_	_	
2-193	1546-1551	reads	_	_	_	
2-194	1552-1555	and	_	_	_	
2-195	1556-1562	writes	_	_	_	
2-196	1563-1568	small	_	_	_	
2-197	1569-1573	bits	_	_	_	
2-198	1574-1576	of	_	_	_	
2-199	1577-1585	metadata	_	_	_	
2-200	1586-1590	from	_	_	_	
2-201	1591-1592	a	_	_	_	
2-202	1593-1601	database	_	_	_	
2-203	1601-1602	.	_	_	_	

#Text=The small bits of metadata are accessed frequently enough that the seeks can more than halve the overall performance of access to the large video files MythTV also uses.
3-1	1603-1606	The	_	_	_	
3-2	1607-1612	small	_	_	_	
3-3	1613-1617	bits	_	_	_	
3-4	1618-1620	of	_	_	_	
3-5	1621-1629	metadata	_	_	_	
3-6	1630-1633	are	_	_	_	
3-7	1634-1642	accessed	_	_	_	
3-8	1643-1653	frequently	_	_	_	
3-9	1654-1660	enough	_	_	_	
3-10	1661-1665	that	_	_	_	
3-11	1666-1669	the	_	_	_	
3-12	1670-1675	seeks	_	_	_	
3-13	1676-1679	can	_	_	_	
3-14	1680-1684	more	_	_	_	
3-15	1685-1689	than	_	_	_	
3-16	1690-1695	halve	_	_	_	
3-17	1696-1699	the	_	_	_	
3-18	1700-1707	overall	_	_	_	
3-19	1708-1719	performance	_	_	_	
3-20	1720-1722	of	_	_	_	
3-21	1723-1729	access	_	_	_	
3-22	1730-1732	to	_	_	_	
3-23	1733-1736	the	_	_	_	
3-24	1737-1742	large	_	_	_	
3-25	1743-1748	video	_	_	_	
3-26	1749-1754	files	_	_	_	
3-27	1755-1761	MythTV	_	_	_	
3-28	1762-1766	also	_	_	_	
3-29	1767-1771	uses	_	_	_	
3-30	1771-1772	.	_	_	_	

#Text=Past the experimentation point it makes a lot of sense to allocate one small disk to the OS and the database and use a separate drive or drives for everything else.
4-1	1773-1777	Past	_	_	_	
4-2	1778-1781	the	_	_	_	
4-3	1782-1797	experimentation	_	_	_	
4-4	1798-1803	point	_	_	_	
4-5	1804-1806	it	_	_	_	
4-6	1807-1812	makes	_	_	_	
4-7	1813-1814	a	_	_	_	
4-8	1815-1818	lot	_	_	_	
4-9	1819-1821	of	_	_	_	
4-10	1822-1827	sense	_	_	_	
4-11	1828-1830	to	_	_	_	
4-12	1831-1839	allocate	_	_	_	
4-13	1840-1843	one	_	_	_	
4-14	1844-1849	small	_	_	_	
4-15	1850-1854	disk	_	_	_	
4-16	1855-1857	to	_	_	_	
4-17	1858-1861	the	_	_	_	
4-18	1862-1864	OS	_	_	_	
4-19	1865-1868	and	_	_	_	
4-20	1869-1872	the	_	_	_	
4-21	1873-1881	database	_	_	_	
4-22	1882-1885	and	_	_	_	
4-23	1886-1889	use	_	_	_	
4-24	1890-1891	a	_	_	_	
4-25	1892-1900	separate	_	_	_	
4-26	1901-1906	drive	_	_	_	
4-27	1907-1909	or	_	_	_	
4-28	1910-1916	drives	_	_	_	
4-29	1917-1920	for	_	_	_	
4-30	1921-1931	everything	_	_	_	
4-31	1932-1936	else	_	_	_	
4-32	1936-1937	.	_	_	_	

#Text=The database is generally under /var unless you have moved it.
5-1	1938-1941	The	_	_	_	
5-2	1942-1950	database	_	_	_	
5-3	1951-1953	is	_	_	_	
5-4	1954-1963	generally	_	_	_	
5-5	1964-1969	under	_	_	_	
5-6	1970-1971	/	_	_	_	
5-7	1971-1974	var	_	_	_	
5-8	1975-1981	unless	_	_	_	
5-9	1982-1985	you	_	_	_	
5-10	1986-1990	have	_	_	_	
5-11	1991-1996	moved	_	_	_	
5-12	1997-1999	it	_	_	_	
5-13	1999-2000	.	_	_	_	

#Text=General Tips For Any File System
#Text=Combat Fragmentation
#Text=Fragmentation happens when the data placement of files is not contiguous on disk, causing time-consuming head seeks when reading or writing a file.
6-1	2001-2008	General	_	_	_	
6-2	2009-2013	Tips	_	_	_	
6-3	2014-2017	For	_	_	_	
6-4	2018-2021	Any	_	_	_	
6-5	2022-2026	File	_	_	_	
6-6	2027-2033	System	_	_	_	
6-7	2034-2040	Combat	_	_	_	
6-8	2041-2054	Fragmentation	_	_	_	
6-9	2055-2068	Fragmentation	_	_	_	
6-10	2069-2076	happens	_	_	_	
6-11	2077-2081	when	_	_	_	
6-12	2082-2085	the	_	_	_	
6-13	2086-2090	data	_	_	_	
6-14	2091-2100	placement	_	_	_	
6-15	2101-2103	of	_	_	_	
6-16	2104-2109	files	_	_	_	
6-17	2110-2112	is	_	_	_	
6-18	2113-2116	not	_	_	_	
6-19	2117-2127	contiguous	_	_	_	
6-20	2128-2130	on	_	_	_	
6-21	2131-2135	disk	_	_	_	
6-22	2135-2136	,	_	_	_	
6-23	2137-2144	causing	_	_	_	
6-24	2145-2159	time-consuming	_	_	_	
6-25	2160-2164	head	_	_	_	
6-26	2165-2170	seeks	_	_	_	
6-27	2171-2175	when	_	_	_	
6-28	2176-2183	reading	_	_	_	
6-29	2184-2186	or	_	_	_	
6-30	2187-2194	writing	_	_	_	
6-31	2195-2196	a	_	_	_	
6-32	2197-2201	file	_	_	_	
6-33	2201-2202	.	_	_	_	

#Text=MythTV recordings on disk can become quite fragmented, due to several factors, such as the fact that MythTV writes large files over a very long period of time, the fact that recording files may have drastically different sizes, and the fact that many MythTV systems have multiple capture cards--allowing for recording multiple shows at once.
7-1	2203-2209	MythTV	_	_	_	
7-2	2210-2220	recordings	_	_	_	
7-3	2221-2223	on	_	_	_	
7-4	2224-2228	disk	_	_	_	
7-5	2229-2232	can	_	_	_	
7-6	2233-2239	become	_	_	_	
7-7	2240-2245	quite	_	_	_	
7-8	2246-2256	fragmented	_	_	_	
7-9	2256-2257	,	_	_	_	
7-10	2258-2261	due	_	_	_	
7-11	2262-2264	to	_	_	_	
7-12	2265-2272	several	_	_	_	
7-13	2273-2280	factors	_	_	_	
7-14	2280-2281	,	_	_	_	
7-15	2282-2286	such	_	_	_	
7-16	2287-2289	as	_	_	_	
7-17	2290-2293	the	_	_	_	
7-18	2294-2298	fact	_	_	_	
7-19	2299-2303	that	_	_	_	
7-20	2304-2310	MythTV	_	_	_	
7-21	2311-2317	writes	_	_	_	
7-22	2318-2323	large	_	_	_	
7-23	2324-2329	files	_	_	_	
7-24	2330-2334	over	_	_	_	
7-25	2335-2336	a	_	_	_	
7-26	2337-2341	very	_	_	_	
7-27	2342-2346	long	_	_	_	
7-28	2347-2353	period	_	_	_	
7-29	2354-2356	of	_	_	_	
7-30	2357-2361	time	_	_	_	
7-31	2361-2362	,	_	_	_	
7-32	2363-2366	the	_	_	_	
7-33	2367-2371	fact	_	_	_	
7-34	2372-2376	that	_	_	_	
7-35	2377-2386	recording	_	_	_	
7-36	2387-2392	files	_	_	_	
7-37	2393-2396	may	_	_	_	
7-38	2397-2401	have	_	_	_	
7-39	2402-2413	drastically	_	_	_	
7-40	2414-2423	different	_	_	_	
7-41	2424-2429	sizes	_	_	_	
7-42	2429-2430	,	_	_	_	
7-43	2431-2434	and	_	_	_	
7-44	2435-2438	the	_	_	_	
7-45	2439-2443	fact	_	_	_	
7-46	2444-2448	that	_	_	_	
7-47	2449-2453	many	_	_	_	
7-48	2454-2460	MythTV	_	_	_	
7-49	2461-2468	systems	_	_	_	
7-50	2469-2473	have	_	_	_	
7-51	2474-2482	multiple	_	_	_	
7-52	2483-2490	capture	_	_	_	
7-53	2491-2496	cards	_	_	_	
7-54	2496-2497	-	_	_	_	
7-55	2497-2498	-	_	_	_	
7-56	2498-2506	allowing	_	_	_	
7-57	2507-2510	for	_	_	_	
7-58	2511-2520	recording	_	_	_	
7-59	2521-2529	multiple	_	_	_	
7-60	2530-2535	shows	_	_	_	
7-61	2536-2538	at	_	_	_	
7-62	2539-2543	once	_	_	_	
7-63	2543-2544	.	_	_	_	

#Text=Note, also, that any time MythTV is recording multiple shows to a single filesystem (even if in different directories and/or in different Storage Groups), the recordings will necessarily be fragmented.
8-1	2545-2549	Note	_	_	_	
8-2	2549-2550	,	_	_	_	
8-3	2551-2555	also	_	_	_	
8-4	2555-2556	,	_	_	_	
8-5	2557-2561	that	_	_	_	
8-6	2562-2565	any	_	_	_	
8-7	2566-2570	time	_	_	_	
8-8	2571-2577	MythTV	_	_	_	
8-9	2578-2580	is	_	_	_	
8-10	2581-2590	recording	_	_	_	
8-11	2591-2599	multiple	_	_	_	
8-12	2600-2605	shows	_	_	_	
8-13	2606-2608	to	_	_	_	
8-14	2609-2610	a	_	_	_	
8-15	2611-2617	single	_	_	_	
8-16	2618-2628	filesystem	_	_	_	
8-17	2629-2630	(	_	_	_	
8-18	2630-2634	even	_	_	_	
8-19	2635-2637	if	_	_	_	
8-20	2638-2640	in	_	_	_	
8-21	2641-2650	different	_	_	_	
8-22	2651-2662	directories	_	_	_	
8-23	2663-2666	and	_	_	_	
8-24	2666-2667	/	_	_	_	
8-25	2667-2669	or	_	_	_	
8-26	2670-2672	in	_	_	_	
8-27	2673-2682	different	_	_	_	
8-28	2683-2690	Storage	_	_	_	
8-29	2691-2697	Groups	_	_	_	
8-30	2697-2698	)	_	_	_	
8-31	2698-2699	,	_	_	_	
8-32	2700-2703	the	_	_	_	
8-33	2704-2714	recordings	_	_	_	
8-34	2715-2719	will	_	_	_	
8-35	2720-2731	necessarily	_	_	_	
8-36	2732-2734	be	_	_	_	
8-37	2735-2745	fragmented	_	_	_	
8-38	2745-2746	.	_	_	_	

#Text=Configuring multiple local filesystems within MythTV's Storage Groups will allow MythTV to write recordings to separate filesystems, thereby minimizing fragmentation.
9-1	2747-2758	Configuring	_	_	_	
9-2	2759-2767	multiple	_	_	_	
9-3	2768-2773	local	_	_	_	
9-4	2774-2785	filesystems	_	_	_	
9-5	2786-2792	within	_	_	_	
9-6	2793-2801	MythTV's	_	_	_	
9-7	2802-2809	Storage	_	_	_	
9-8	2810-2816	Groups	_	_	_	
9-9	2817-2821	will	_	_	_	
9-10	2822-2827	allow	_	_	_	
9-11	2828-2834	MythTV	_	_	_	
9-12	2835-2837	to	_	_	_	
9-13	2838-2843	write	_	_	_	
9-14	2844-2854	recordings	_	_	_	
9-15	2855-2857	to	_	_	_	
9-16	2858-2866	separate	_	_	_	
9-17	2867-2878	filesystems	_	_	_	
9-18	2878-2879	,	_	_	_	
9-19	2880-2887	thereby	_	_	_	
9-20	2888-2898	minimizing	_	_	_	
9-21	2899-2912	fragmentation	_	_	_	
9-22	2912-2913	.	_	_	_	

#Text=Therefore, the best approach to combat fragmentation is to ensure each computer running mythbackend has at least as many local (and available) filesystems as capture cards.
10-1	2914-2923	Therefore	_	_	_	
10-2	2923-2924	,	_	_	_	
10-3	2925-2928	the	_	_	_	
10-4	2929-2933	best	_	_	_	
10-5	2934-2942	approach	_	_	_	
10-6	2943-2945	to	_	_	_	
10-7	2946-2952	combat	_	_	_	
10-8	2953-2966	fragmentation	_	_	_	
10-9	2967-2969	is	_	_	_	
10-10	2970-2972	to	_	_	_	
10-11	2973-2979	ensure	_	_	_	
10-12	2980-2984	each	_	_	_	
10-13	2985-2993	computer	_	_	_	
10-14	2994-3001	running	_	_	_	
10-15	3002-3013	mythbackend	_	_	_	
10-16	3014-3017	has	_	_	_	
10-17	3018-3020	at	_	_	_	
10-18	3021-3026	least	_	_	_	
10-19	3027-3029	as	_	_	_	
10-20	3030-3034	many	_	_	_	
10-21	3035-3040	local	_	_	_	
10-22	3041-3042	(	_	_	_	
10-23	3042-3045	and	_	_	_	
10-24	3046-3055	available	_	_	_	
10-25	3055-3056	)	_	_	_	
10-26	3057-3068	filesystems	_	_	_	
10-27	3069-3071	as	_	_	_	
10-28	3072-3079	capture	_	_	_	
10-29	3080-3085	cards	_	_	_	
10-30	3085-3086	.	_	_	_	

#Text=If using a combination of local and network-mounted filesystems, you may need to adjust the Storage Groups Weighting to cause MythTV to write to network-mounted filesystems (though doing so may negatively impact performance, meaning the use of a sufficient number of local filesystems or the use of only network-mounted filesystems is preferred).
11-1	3087-3089	If	_	_	_	
11-2	3090-3095	using	_	_	_	
11-3	3096-3097	a	_	_	_	
11-4	3098-3109	combination	_	_	_	
11-5	3110-3112	of	_	_	_	
11-6	3113-3118	local	_	_	_	
11-7	3119-3122	and	_	_	_	
11-8	3123-3138	network-mounted	_	_	_	
11-9	3139-3150	filesystems	_	_	_	
11-10	3150-3151	,	_	_	_	
11-11	3152-3155	you	_	_	_	
11-12	3156-3159	may	_	_	_	
11-13	3160-3164	need	_	_	_	
11-14	3165-3167	to	_	_	_	
11-15	3168-3174	adjust	_	_	_	
11-16	3175-3178	the	_	_	_	
11-17	3179-3186	Storage	_	_	_	
11-18	3187-3193	Groups	_	_	_	
11-19	3194-3203	Weighting	_	_	_	
11-20	3204-3206	to	_	_	_	
11-21	3207-3212	cause	_	_	_	
11-22	3213-3219	MythTV	_	_	_	
11-23	3220-3222	to	_	_	_	
11-24	3223-3228	write	_	_	_	
11-25	3229-3231	to	_	_	_	
11-26	3232-3247	network-mounted	_	_	_	
11-27	3248-3259	filesystems	_	_	_	
11-28	3260-3261	(	_	_	_	
11-29	3261-3267	though	_	_	_	
11-30	3268-3273	doing	_	_	_	
11-31	3274-3276	so	_	_	_	
11-32	3277-3280	may	_	_	_	
11-33	3281-3291	negatively	_	_	_	
11-34	3292-3298	impact	_	_	_	
11-35	3299-3310	performance	_	_	_	
11-36	3310-3311	,	_	_	_	
11-37	3312-3319	meaning	_	_	_	
11-38	3320-3323	the	_	_	_	
11-39	3324-3327	use	_	_	_	
11-40	3328-3330	of	_	_	_	
11-41	3331-3332	a	_	_	_	
11-42	3333-3343	sufficient	_	_	_	
11-43	3344-3350	number	_	_	_	
11-44	3351-3353	of	_	_	_	
11-45	3354-3359	local	_	_	_	
11-46	3360-3371	filesystems	_	_	_	
11-47	3372-3374	or	_	_	_	
11-48	3375-3378	the	_	_	_	
11-49	3379-3382	use	_	_	_	
11-50	3383-3385	of	_	_	_	
11-51	3386-3390	only	_	_	_	
11-52	3391-3406	network-mounted	_	_	_	
11-53	3407-3418	filesystems	_	_	_	
11-54	3419-3421	is	_	_	_	
11-55	3422-3431	preferred	_	_	_	
11-56	3431-3432	)	_	_	_	
11-57	3432-3433	.	_	_	_	

#Text=The availability of a filesystem is somewhat dependent on that filesystem having space available for writing (i.e. having 2 filesystems for 2 capture cards with one filesystem completely full and the other only half full will not help prevent fragmentation, though if both are full, autoexpiration should allow either to be used).
12-1	3434-3437	The	_	_	_	
12-2	3438-3450	availability	_	_	_	
12-3	3451-3453	of	_	_	_	
12-4	3454-3455	a	_	_	_	
12-5	3456-3466	filesystem	_	_	_	
12-6	3467-3469	is	_	_	_	
12-7	3470-3478	somewhat	_	_	_	
12-8	3479-3488	dependent	_	_	_	
12-9	3489-3491	on	_	_	_	
12-10	3492-3496	that	_	_	_	
12-11	3497-3507	filesystem	_	_	_	
12-12	3508-3514	having	_	_	_	
12-13	3515-3520	space	_	_	_	
12-14	3521-3530	available	_	_	_	
12-15	3531-3534	for	_	_	_	
12-16	3535-3542	writing	_	_	_	
12-17	3543-3544	(	_	_	_	
12-18	3544-3547	i.e	_	_	_	
12-19	3547-3548	.	_	_	_	
12-20	3549-3555	having	_	_	_	
12-21	3556-3557	2	_	_	_	
12-22	3558-3569	filesystems	_	_	_	
12-23	3570-3573	for	_	_	_	
12-24	3574-3575	2	_	_	_	
12-25	3576-3583	capture	_	_	_	
12-26	3584-3589	cards	_	_	_	
12-27	3590-3594	with	_	_	_	
12-28	3595-3598	one	_	_	_	
12-29	3599-3609	filesystem	_	_	_	
12-30	3610-3620	completely	_	_	_	
12-31	3621-3625	full	_	_	_	
12-32	3626-3629	and	_	_	_	
12-33	3630-3633	the	_	_	_	
12-34	3634-3639	other	_	_	_	
12-35	3640-3644	only	_	_	_	
12-36	3645-3649	half	_	_	_	
12-37	3650-3654	full	_	_	_	
12-38	3655-3659	will	_	_	_	
12-39	3660-3663	not	_	_	_	
12-40	3664-3668	help	_	_	_	
12-41	3669-3676	prevent	_	_	_	
12-42	3677-3690	fragmentation	_	_	_	
12-43	3690-3691	,	_	_	_	
12-44	3692-3698	though	_	_	_	
12-45	3699-3701	if	_	_	_	
12-46	3702-3706	both	_	_	_	
12-47	3707-3710	are	_	_	_	
12-48	3711-3715	full	_	_	_	
12-49	3715-3716	,	_	_	_	
12-50	3717-3731	autoexpiration	_	_	_	
12-51	3732-3738	should	_	_	_	
12-52	3739-3744	allow	_	_	_	
12-53	3745-3751	either	_	_	_	
12-54	3752-3754	to	_	_	_	
12-55	3755-3757	be	_	_	_	
12-56	3758-3762	used	_	_	_	
12-57	3762-3763	)	_	_	_	
12-58	3763-3764	.	_	_	_	

#Text=Fragmentation can be measured by the "filefrag" command on most any filesystem.
13-1	3765-3778	Fragmentation	_	_	_	
13-2	3779-3782	can	_	_	_	
13-3	3783-3785	be	_	_	_	
13-4	3786-3794	measured	_	_	_	
13-5	3795-3797	by	_	_	_	
13-6	3798-3801	the	_	_	_	
13-7	3802-3803	"	_	_	_	
13-8	3803-3811	filefrag	_	_	_	
13-9	3811-3812	"	_	_	_	
13-10	3813-3820	command	_	_	_	
13-11	3821-3823	on	_	_	_	
13-12	3824-3828	most	_	_	_	
13-13	3829-3832	any	_	_	_	
13-14	3833-3843	filesystem	_	_	_	
13-15	3843-3844	.	_	_	_	

#Text=Disabling File Access Time Logging
#Text=Most filesystems log the access times of files.
14-1	3845-3854	Disabling	_	_	_	
14-2	3855-3859	File	_	_	_	
14-3	3860-3866	Access	_	_	_	
14-4	3867-3871	Time	_	_	_	
14-5	3872-3879	Logging	_	_	_	
14-6	3880-3884	Most	_	_	_	
14-7	3885-3896	filesystems	_	_	_	
14-8	3897-3900	log	_	_	_	
14-9	3901-3904	the	_	_	_	
14-10	3905-3911	access	_	_	_	
14-11	3912-3917	times	_	_	_	
14-12	3918-3920	of	_	_	_	
14-13	3921-3926	files	_	_	_	
14-14	3926-3927	.	_	_	_	

#Text=Generally this file metadata shouldn't be necessary, however, if for some strange reason you experience problems, then don't apply this tweak.
15-1	3928-3937	Generally	_	_	_	
15-2	3938-3942	this	_	_	_	
15-3	3943-3947	file	_	_	_	
15-4	3948-3956	metadata	_	_	_	
15-5	3957-3966	shouldn't	_	_	_	
15-6	3967-3969	be	_	_	_	
15-7	3970-3979	necessary	_	_	_	
15-8	3979-3980	,	_	_	_	
15-9	3981-3988	however	_	_	_	
15-10	3988-3989	,	_	_	_	
15-11	3990-3992	if	_	_	_	
15-12	3993-3996	for	_	_	_	
15-13	3997-4001	some	_	_	_	
15-14	4002-4009	strange	_	_	_	
15-15	4010-4016	reason	_	_	_	
15-16	4017-4020	you	_	_	_	
15-17	4021-4031	experience	_	_	_	
15-18	4032-4040	problems	_	_	_	
15-19	4040-4041	,	_	_	_	
15-20	4042-4046	then	_	_	_	
15-21	4047-4052	don't	_	_	_	
15-22	4053-4058	apply	_	_	_	
15-23	4059-4063	this	_	_	_	
15-24	4064-4069	tweak	_	_	_	
15-25	4069-4070	.	_	_	_	

#Text=To disable the logging of file access times, add the "noatime" and "nodiratime" options to your /etc/fstab:
#Text=# 1.5 TB RAID 5 array.
16-1	4071-4073	To	_	_	_	
16-2	4074-4081	disable	_	_	_	
16-3	4082-4085	the	_	_	_	
16-4	4086-4093	logging	_	_	_	
16-5	4094-4096	of	_	_	_	
16-6	4097-4101	file	_	_	_	
16-7	4102-4108	access	_	_	_	
16-8	4109-4114	times	_	_	_	
16-9	4114-4115	,	_	_	_	
16-10	4116-4119	add	_	_	_	
16-11	4120-4123	the	_	_	_	
16-12	4124-4125	"	_	_	_	
16-13	4125-4132	noatime	_	_	_	
16-14	4132-4133	"	_	_	_	
16-15	4134-4137	and	_	_	_	
16-16	4138-4139	"	_	_	_	
16-17	4139-4149	nodiratime	_	_	_	
16-18	4149-4150	"	_	_	_	
16-19	4151-4158	options	_	_	_	
16-20	4159-4161	to	_	_	_	
16-21	4162-4166	your	_	_	_	
16-22	4167-4168	/	_	_	_	
16-23	4168-4171	etc	_	_	_	
16-24	4171-4172	/	_	_	_	
16-25	4172-4177	fstab	_	_	_	
16-26	4177-4178	:	_	_	_	
16-27	4179-4180	#	_	_	_	
16-28	4181-4184	1.5	_	_	_	
16-29	4185-4187	TB	_	_	_	
16-30	4188-4192	RAID	_	_	_	
16-31	4193-4194	5	_	_	_	
16-32	4195-4200	array	_	_	_	
16-33	4200-4201	.	_	_	_	

#Text=Large file optimization: 64m of prealloc
#Text=# NO logging of access times: improves performance
#Text=# NO block devices or suid progs allowed: improves security
#Text=/dev/md0
#Text=/terabyte
#Text=xfs defaults,noatime,nodiratime,nosuid,nodev,allocsize=64m 0
#Text=If you get something like the following, the mount option is not supported for your filesystem:
#Text=mount: wrong fs type, bad option, bad superblock on /dev/md0,
#Text=missing codepage or helper program, or other error
#Text=In some cases useful info is found in syslog - try
#Text=dmesg | tail
#Text=or so
#Text=# dmesg | tail would return something like:
#Text=YOUR_FILESYSTEM_TYPE: unknown mount option [noatime].
17-1	4202-4207	Large	_	_	_	
17-2	4208-4212	file	_	_	_	
17-3	4213-4225	optimization	_	_	_	
17-4	4225-4226	:	_	_	_	
17-5	4227-4230	64m	_	_	_	
17-6	4231-4233	of	_	_	_	
17-7	4234-4242	prealloc	_	_	_	
17-8	4243-4244	#	_	_	_	
17-9	4245-4247	NO	_	_	_	
17-10	4248-4255	logging	_	_	_	
17-11	4256-4258	of	_	_	_	
17-12	4259-4265	access	_	_	_	
17-13	4266-4271	times	_	_	_	
17-14	4271-4272	:	_	_	_	
17-15	4273-4281	improves	_	_	_	
17-16	4282-4293	performance	_	_	_	
17-17	4294-4295	#	_	_	_	
17-18	4296-4298	NO	_	_	_	
17-19	4299-4304	block	_	_	_	
17-20	4305-4312	devices	_	_	_	
17-21	4313-4315	or	_	_	_	
17-22	4316-4320	suid	_	_	_	
17-23	4321-4326	progs	_	_	_	
17-24	4327-4334	allowed	_	_	_	
17-25	4334-4335	:	_	_	_	
17-26	4336-4344	improves	_	_	_	
17-27	4345-4353	security	_	_	_	
17-28	4354-4355	/	_	_	_	
17-29	4355-4358	dev	_	_	_	
17-30	4358-4359	/	_	_	_	
17-31	4359-4362	md0	_	_	_	
17-32	4363-4364	/	_	_	_	
17-33	4364-4372	terabyte	_	_	_	
17-34	4373-4376	xfs	_	_	_	
17-35	4377-4385	defaults	_	_	_	
17-36	4385-4386	,	_	_	_	
17-37	4386-4393	noatime	_	_	_	
17-38	4393-4394	,	_	_	_	
17-39	4394-4404	nodiratime	_	_	_	
17-40	4404-4405	,	_	_	_	
17-41	4405-4411	nosuid	_	_	_	
17-42	4411-4412	,	_	_	_	
17-43	4412-4417	nodev	_	_	_	
17-44	4417-4418	,	_	_	_	
17-45	4418-4427	allocsize	_	_	_	
17-46	4427-4428	=	_	_	_	
17-47	4428-4431	64m	_	_	_	
17-48	4432-4433	0	_	_	_	
17-49	4434-4436	If	_	_	_	
17-50	4437-4440	you	_	_	_	
17-51	4441-4444	get	_	_	_	
17-52	4445-4454	something	_	_	_	
17-53	4455-4459	like	_	_	_	
17-54	4460-4463	the	_	_	_	
17-55	4464-4473	following	_	_	_	
17-56	4473-4474	,	_	_	_	
17-57	4475-4478	the	_	_	_	
17-58	4479-4484	mount	_	_	_	
17-59	4485-4491	option	_	_	_	
17-60	4492-4494	is	_	_	_	
17-61	4495-4498	not	_	_	_	
17-62	4499-4508	supported	_	_	_	
17-63	4509-4512	for	_	_	_	
17-64	4513-4517	your	_	_	_	
17-65	4518-4528	filesystem	_	_	_	
17-66	4528-4529	:	_	_	_	
17-67	4530-4535	mount	_	_	_	
17-68	4535-4536	:	_	_	_	
17-69	4537-4542	wrong	_	_	_	
17-70	4543-4545	fs	_	_	_	
17-71	4546-4550	type	_	_	_	
17-72	4550-4551	,	_	_	_	
17-73	4552-4555	bad	_	_	_	
17-74	4556-4562	option	_	_	_	
17-75	4562-4563	,	_	_	_	
17-76	4564-4567	bad	_	_	_	
17-77	4568-4578	superblock	_	_	_	
17-78	4579-4581	on	_	_	_	
17-79	4582-4583	/	_	_	_	
17-80	4583-4586	dev	_	_	_	
17-81	4586-4587	/	_	_	_	
17-82	4587-4590	md0	_	_	_	
17-83	4590-4591	,	_	_	_	
17-84	4592-4599	missing	_	_	_	
17-85	4600-4608	codepage	_	_	_	
17-86	4609-4611	or	_	_	_	
17-87	4612-4618	helper	_	_	_	
17-88	4619-4626	program	_	_	_	
17-89	4626-4627	,	_	_	_	
17-90	4628-4630	or	_	_	_	
17-91	4631-4636	other	_	_	_	
17-92	4637-4642	error	_	_	_	
17-93	4643-4645	In	_	_	_	
17-94	4646-4650	some	_	_	_	
17-95	4651-4656	cases	_	_	_	
17-96	4657-4663	useful	_	_	_	
17-97	4664-4668	info	_	_	_	
17-98	4669-4671	is	_	_	_	
17-99	4672-4677	found	_	_	_	
17-100	4678-4680	in	_	_	_	
17-101	4681-4687	syslog	_	_	_	
17-102	4688-4689	-	_	_	_	
17-103	4690-4693	try	_	_	_	
17-104	4694-4699	dmesg	_	_	_	
17-105	4700-4701	|	_	_	_	
17-106	4702-4706	tail	_	_	_	
17-107	4707-4709	or	_	_	_	
17-108	4710-4712	so	_	_	_	
17-109	4713-4714	#	_	_	_	
17-110	4715-4720	dmesg	_	_	_	
17-111	4721-4722	|	_	_	_	
17-112	4723-4727	tail	_	_	_	
17-113	4728-4733	would	_	_	_	
17-114	4734-4740	return	_	_	_	
17-115	4741-4750	something	_	_	_	
17-116	4751-4755	like	_	_	_	
17-117	4755-4756	:	_	_	_	
17-118	4757-4777	YOUR_FILESYSTEM_TYPE	_	_	_	
17-119	4777-4778	:	_	_	_	
17-120	4779-4786	unknown	_	_	_	
17-121	4787-4792	mount	_	_	_	
17-122	4793-4799	option	_	_	_	
17-123	4800-4801	[	_	_	_	
17-124	4801-4808	noatime	_	_	_	
17-125	4808-4809	]	_	_	_	
17-126	4809-4810	.	_	_	_	

#Text=Using "relatime" Mount Option
#Text=You may also wish to look into the "relatime" mount option to improve performance, but still have file access times updated.
18-1	4811-4816	Using	_	_	_	
18-2	4817-4818	"	_	_	_	
18-3	4818-4826	relatime	_	_	_	
18-4	4826-4827	"	_	_	_	
18-5	4828-4833	Mount	_	_	_	
18-6	4834-4840	Option	_	_	_	
18-7	4841-4844	You	_	_	_	
18-8	4845-4848	may	_	_	_	
18-9	4849-4853	also	_	_	_	
18-10	4854-4858	wish	_	_	_	
18-11	4859-4861	to	_	_	_	
18-12	4862-4866	look	_	_	_	
18-13	4867-4871	into	_	_	_	
18-14	4872-4875	the	_	_	_	
18-15	4876-4877	"	_	_	_	
18-16	4877-4885	relatime	_	_	_	
18-17	4885-4886	"	_	_	_	
18-18	4887-4892	mount	_	_	_	
18-19	4893-4899	option	_	_	_	
18-20	4900-4902	to	_	_	_	
18-21	4903-4910	improve	_	_	_	
18-22	4911-4922	performance	_	_	_	
18-23	4922-4923	,	_	_	_	
18-24	4924-4927	but	_	_	_	
18-25	4928-4933	still	_	_	_	
18-26	4934-4938	have	_	_	_	
18-27	4939-4943	file	_	_	_	
18-28	4944-4950	access	_	_	_	
18-29	4951-4956	times	_	_	_	
18-30	4957-4964	updated	_	_	_	
18-31	4964-4965	.	_	_	_	

#Text=This is an alternative to using noatime and nodiratime.
19-1	4966-4970	This	_	_	_	
19-2	4971-4973	is	_	_	_	
19-3	4974-4976	an	_	_	_	
19-4	4977-4988	alternative	_	_	_	
19-5	4989-4991	to	_	_	_	
19-6	4992-4997	using	_	_	_	
19-7	4998-5005	noatime	_	_	_	
19-8	5006-5009	and	_	_	_	
19-9	5010-5020	nodiratime	_	_	_	
19-10	5020-5021	.	_	_	_	

#Text=For more information on this (and related discussion), see: Linux: Replacing atime With relatime
#Text=XFS-Specific Tips
#Text=Combat Fragmentation
#Text=Under XFS, an additional command can be used to measure filesystem fragmentation: "xfs_bmap".
20-1	5022-5025	For	_	_	_	
20-2	5026-5030	more	_	_	_	
20-3	5031-5042	information	_	_	_	
20-4	5043-5045	on	_	_	_	
20-5	5046-5050	this	_	_	_	
20-6	5051-5052	(	_	_	_	
20-7	5052-5055	and	_	_	_	
20-8	5056-5063	related	_	_	_	
20-9	5064-5074	discussion	_	_	_	
20-10	5074-5075	)	_	_	_	
20-11	5075-5076	,	_	_	_	
20-12	5077-5080	see	_	_	_	
20-13	5080-5081	:	_	_	_	
20-14	5082-5087	Linux	_	_	_	
20-15	5087-5088	:	_	_	_	
20-16	5089-5098	Replacing	_	_	_	
20-17	5099-5104	atime	_	_	_	
20-18	5105-5109	With	_	_	_	
20-19	5110-5118	relatime	_	_	_	
20-20	5119-5131	XFS-Specific	_	_	_	
20-21	5132-5136	Tips	_	_	_	
20-22	5137-5143	Combat	_	_	_	
20-23	5144-5157	Fragmentation	_	_	_	
20-24	5158-5163	Under	_	_	_	
20-25	5164-5167	XFS	_	_	_	
20-26	5167-5168	,	_	_	_	
20-27	5169-5171	an	_	_	_	
20-28	5172-5182	additional	_	_	_	
20-29	5183-5190	command	_	_	_	
20-30	5191-5194	can	_	_	_	
20-31	5195-5197	be	_	_	_	
20-32	5198-5202	used	_	_	_	
20-33	5203-5205	to	_	_	_	
20-34	5206-5213	measure	_	_	_	
20-35	5214-5224	filesystem	_	_	_	
20-36	5225-5238	fragmentation	_	_	_	
20-37	5238-5239	:	_	_	_	
20-38	5240-5241	"	_	_	_	
20-39	5241-5249	xfs_bmap	_	_	_	
20-40	5249-5250	"	_	_	_	
20-41	5250-5251	.	_	_	_	

#Text=The xfs filesystem has a mount option which can help combat this fragmentation: allocsize
#Text=allocsize=size
#Text=Sets the buffered I/O end-of-file preallocation size when
#Text=doing delayed allocation writeout (default size is 64KiB).
21-1	5252-5255	The	_	_	_	
21-2	5256-5259	xfs	_	_	_	
21-3	5260-5270	filesystem	_	_	_	
21-4	5271-5274	has	_	_	_	
21-5	5275-5276	a	_	_	_	
21-6	5277-5282	mount	_	_	_	
21-7	5283-5289	option	_	_	_	
21-8	5290-5295	which	_	_	_	
21-9	5296-5299	can	_	_	_	
21-10	5300-5304	help	_	_	_	
21-11	5305-5311	combat	_	_	_	
21-12	5312-5316	this	_	_	_	
21-13	5317-5330	fragmentation	_	_	_	
21-14	5330-5331	:	_	_	_	
21-15	5332-5341	allocsize	_	_	_	
21-16	5342-5351	allocsize	_	_	_	
21-17	5351-5352	=	_	_	_	
21-18	5352-5356	size	_	_	_	
21-19	5357-5361	Sets	_	_	_	
21-20	5362-5365	the	_	_	_	
21-21	5366-5374	buffered	_	_	_	
21-22	5375-5376	I	_	_	_	
21-23	5376-5377	/	_	_	_	
21-24	5377-5378	O	_	_	_	
21-25	5379-5390	end-of-file	_	_	_	
21-26	5391-5404	preallocation	_	_	_	
21-27	5405-5409	size	_	_	_	
21-28	5410-5414	when	_	_	_	
21-29	5415-5420	doing	_	_	_	
21-30	5421-5428	delayed	_	_	_	
21-31	5429-5439	allocation	_	_	_	
21-32	5440-5448	writeout	_	_	_	
21-33	5449-5450	(	_	_	_	
21-34	5450-5457	default	_	_	_	
21-35	5458-5462	size	_	_	_	
21-36	5463-5465	is	_	_	_	
21-37	5466-5471	64KiB	_	_	_	
21-38	5471-5472	)	_	_	_	
21-39	5472-5473	.	_	_	_	

#Text=Valid values for this option are page size (typically 4KiB)
#Text=through to 1GiB, inclusive, in power-of-2 increments.
22-1	5474-5479	Valid	_	_	_	
22-2	5480-5486	values	_	_	_	
22-3	5487-5490	for	_	_	_	
22-4	5491-5495	this	_	_	_	
22-5	5496-5502	option	_	_	_	
22-6	5503-5506	are	_	_	_	
22-7	5507-5511	page	_	_	_	
22-8	5512-5516	size	_	_	_	
22-9	5517-5518	(	_	_	_	
22-10	5518-5527	typically	_	_	_	
22-11	5528-5532	4KiB	_	_	_	
22-12	5532-5533	)	_	_	_	
22-13	5534-5541	through	_	_	_	
22-14	5542-5544	to	_	_	_	
22-15	5545-5549	1GiB	_	_	_	
22-16	5549-5550	,	_	_	_	
22-17	5551-5560	inclusive	_	_	_	
22-18	5560-5561	,	_	_	_	
22-19	5562-5564	in	_	_	_	
22-20	5565-5573	power-of	_	_	_	
22-21	5573-5574	-	_	_	_	
22-22	5574-5575	2	_	_	_	
22-23	5576-5586	increments	_	_	_	
22-24	5586-5587	.	_	_	_	

#Text=This can be added to /etc/fstab, for example:
#Text=/dev/sd1
#Text=/video
#Text=xfs
#Text=defaults,allocsize=64m 0 0
#Text=This essentially causes xfs to speculatively preallocate 64m of space at a time for a file when writing, and can greatly reduce fragmentation.
23-1	5588-5592	This	_	_	_	
23-2	5593-5596	can	_	_	_	
23-3	5597-5599	be	_	_	_	
23-4	5600-5605	added	_	_	_	
23-5	5606-5608	to	_	_	_	
23-6	5609-5610	/	_	_	_	
23-7	5610-5613	etc	_	_	_	
23-8	5613-5614	/	_	_	_	
23-9	5614-5619	fstab	_	_	_	
23-10	5619-5620	,	_	_	_	
23-11	5621-5624	for	_	_	_	
23-12	5625-5632	example	_	_	_	
23-13	5632-5633	:	_	_	_	
23-14	5634-5635	/	_	_	_	
23-15	5635-5638	dev	_	_	_	
23-16	5638-5639	/	_	_	_	
23-17	5639-5642	sd1	_	_	_	
23-18	5643-5644	/	_	_	_	
23-19	5644-5649	video	_	_	_	
23-20	5650-5653	xfs	_	_	_	
23-21	5654-5662	defaults	_	_	_	
23-22	5662-5663	,	_	_	_	
23-23	5663-5672	allocsize	_	_	_	
23-24	5672-5673	=	_	_	_	
23-25	5673-5676	64m	_	_	_	
23-26	5677-5678	0	_	_	_	
23-27	5679-5680	0	_	_	_	
23-28	5681-5685	This	_	_	_	
23-29	5686-5697	essentially	_	_	_	
23-30	5698-5704	causes	_	_	_	
23-31	5705-5708	xfs	_	_	_	
23-32	5709-5711	to	_	_	_	
23-33	5712-5725	speculatively	_	_	_	
23-34	5726-5737	preallocate	_	_	_	
23-35	5738-5741	64m	_	_	_	
23-36	5742-5744	of	_	_	_	
23-37	5745-5750	space	_	_	_	
23-38	5751-5753	at	_	_	_	
23-39	5754-5755	a	_	_	_	
23-40	5756-5760	time	_	_	_	
23-41	5761-5764	for	_	_	_	
23-42	5765-5766	a	_	_	_	
23-43	5767-5771	file	_	_	_	
23-44	5772-5776	when	_	_	_	
23-45	5777-5784	writing	_	_	_	
23-46	5784-5785	,	_	_	_	
23-47	5786-5789	and	_	_	_	
23-48	5790-5793	can	_	_	_	
23-49	5794-5801	greatly	_	_	_	
23-50	5802-5808	reduce	_	_	_	
23-51	5809-5822	fragmentation	_	_	_	
23-52	5822-5823	.	_	_	_	

#Text=MythTV syncs the file it is writing to disk regularly to prevent the filesystem for freezing up for long periods of time writing large chunks of data that MythTV is generating and so preventing smooth simultaneous playback of the same or different file from that filesystem.
24-1	5824-5830	MythTV	_	_	_	
24-2	5831-5836	syncs	_	_	_	
24-3	5837-5840	the	_	_	_	
24-4	5841-5845	file	_	_	_	
24-5	5846-5848	it	_	_	_	
24-6	5849-5851	is	_	_	_	
24-7	5852-5859	writing	_	_	_	
24-8	5860-5862	to	_	_	_	
24-9	5863-5867	disk	_	_	_	
24-10	5868-5877	regularly	_	_	_	
24-11	5878-5880	to	_	_	_	
24-12	5881-5888	prevent	_	_	_	
24-13	5889-5892	the	_	_	_	
24-14	5893-5903	filesystem	_	_	_	
24-15	5904-5907	for	_	_	_	
24-16	5908-5916	freezing	_	_	_	
24-17	5917-5919	up	_	_	_	
24-18	5920-5923	for	_	_	_	
24-19	5924-5928	long	_	_	_	
24-20	5929-5936	periods	_	_	_	
24-21	5937-5939	of	_	_	_	
24-22	5940-5944	time	_	_	_	
24-23	5945-5952	writing	_	_	_	
24-24	5953-5958	large	_	_	_	
24-25	5959-5965	chunks	_	_	_	
24-26	5966-5968	of	_	_	_	
24-27	5969-5973	data	_	_	_	
24-28	5974-5978	that	_	_	_	
24-29	5979-5985	MythTV	_	_	_	
24-30	5986-5988	is	_	_	_	
24-31	5989-5999	generating	_	_	_	
24-32	6000-6003	and	_	_	_	
24-33	6004-6006	so	_	_	_	
24-34	6007-6017	preventing	_	_	_	
24-35	6018-6024	smooth	_	_	_	
24-36	6025-6037	simultaneous	_	_	_	
24-37	6038-6046	playback	_	_	_	
24-38	6047-6049	of	_	_	_	
24-39	6050-6053	the	_	_	_	
24-40	6054-6058	same	_	_	_	
24-41	6059-6061	or	_	_	_	
24-42	6062-6071	different	_	_	_	
24-43	6072-6076	file	_	_	_	
24-44	6077-6081	from	_	_	_	
24-45	6082-6086	that	_	_	_	
24-46	6087-6097	filesystem	_	_	_	
24-47	6097-6098	.	_	_	_	

#Text=For files which are already heavily fragmented, the xfs_fsr command (from the xfsdump package) can be used to defragment individual files, or an entire filesystem.
25-1	6099-6102	For	_	_	_	
25-2	6103-6108	files	_	_	_	
25-3	6109-6114	which	_	_	_	
25-4	6115-6118	are	_	_	_	
25-5	6119-6126	already	_	_	_	
25-6	6127-6134	heavily	_	_	_	
25-7	6135-6145	fragmented	_	_	_	
25-8	6145-6146	,	_	_	_	
25-9	6147-6150	the	_	_	_	
25-10	6151-6158	xfs_fsr	_	_	_	
25-11	6159-6166	command	_	_	_	
25-12	6167-6168	(	_	_	_	
25-13	6168-6172	from	_	_	_	
25-14	6173-6176	the	_	_	_	
25-15	6177-6184	xfsdump	_	_	_	
25-16	6185-6192	package	_	_	_	
25-17	6192-6193	)	_	_	_	
25-18	6194-6197	can	_	_	_	
25-19	6198-6200	be	_	_	_	
25-20	6201-6205	used	_	_	_	
25-21	6206-6208	to	_	_	_	
25-22	6209-6219	defragment	_	_	_	
25-23	6220-6230	individual	_	_	_	
25-24	6231-6236	files	_	_	_	
25-25	6236-6237	,	_	_	_	
25-26	6238-6240	or	_	_	_	
25-27	6241-6243	an	_	_	_	
25-28	6244-6250	entire	_	_	_	
25-29	6251-6261	filesystem	_	_	_	
25-30	6261-6262	.	_	_	_	

#Text=Run the following command to determine how fragmented your filesystem is:
#Text=xfs_db -c frag -r /dev/sda1
#Text=xfs_fsr with no parameters will run for two hours.
26-1	6263-6266	Run	_	_	_	
26-2	6267-6270	the	_	_	_	
26-3	6271-6280	following	_	_	_	
26-4	6281-6288	command	_	_	_	
26-5	6289-6291	to	_	_	_	
26-6	6292-6301	determine	_	_	_	
26-7	6302-6305	how	_	_	_	
26-8	6306-6316	fragmented	_	_	_	
26-9	6317-6321	your	_	_	_	
26-10	6322-6332	filesystem	_	_	_	
26-11	6333-6335	is	_	_	_	
26-12	6335-6336	:	_	_	_	
26-13	6337-6343	xfs_db	_	_	_	
26-14	6344-6345	-	_	_	_	
26-15	6345-6346	c	_	_	_	
26-16	6347-6351	frag	_	_	_	
26-17	6352-6353	-	_	_	_	
26-18	6353-6354	r	_	_	_	
26-19	6355-6356	/	_	_	_	
26-20	6356-6359	dev	_	_	_	
26-21	6359-6360	/	_	_	_	
26-22	6360-6364	sda1	_	_	_	
26-23	6365-6372	xfs_fsr	_	_	_	
26-24	6373-6377	with	_	_	_	
26-25	6378-6380	no	_	_	_	
26-26	6381-6391	parameters	_	_	_	
26-27	6392-6396	will	_	_	_	
26-28	6397-6400	run	_	_	_	
26-29	6401-6404	for	_	_	_	
26-30	6405-6408	two	_	_	_	
26-31	6409-6414	hours	_	_	_	
26-32	6414-6415	.	_	_	_	

#Text=The -t parameter specifies how long it runs in seconds.
27-1	6416-6419	The	_	_	_	
27-2	6420-6421	-	_	_	_	
27-3	6421-6422	t	_	_	_	
27-4	6423-6432	parameter	_	_	_	
27-5	6433-6442	specifies	_	_	_	
27-6	6443-6446	how	_	_	_	
27-7	6447-6451	long	_	_	_	
27-8	6452-6454	it	_	_	_	
27-9	6455-6459	runs	_	_	_	
27-10	6460-6462	in	_	_	_	
27-11	6463-6470	seconds	_	_	_	
27-12	6470-6471	.	_	_	_	

#Text=It keeps track of where it got up to and can be run repeatedly.
28-1	6472-6474	It	_	_	_	
28-2	6475-6480	keeps	_	_	_	
28-3	6481-6486	track	_	_	_	
28-4	6487-6489	of	_	_	_	
28-5	6490-6495	where	_	_	_	
28-6	6496-6498	it	_	_	_	
28-7	6499-6502	got	_	_	_	
28-8	6503-6505	up	_	_	_	
28-9	6506-6508	to	_	_	_	
28-10	6509-6512	and	_	_	_	
28-11	6513-6516	can	_	_	_	
28-12	6517-6519	be	_	_	_	
28-13	6520-6523	run	_	_	_	
28-14	6524-6534	repeatedly	_	_	_	
28-15	6534-6535	.	_	_	_	

#Text=It can be added to our crontab to periodically defragment your disk.
29-1	6536-6538	It	_	_	_	
29-2	6539-6542	can	_	_	_	
29-3	6543-6545	be	_	_	_	
29-4	6546-6551	added	_	_	_	
29-5	6552-6554	to	_	_	_	
29-6	6555-6558	our	_	_	_	
29-7	6559-6566	crontab	_	_	_	
29-8	6567-6569	to	_	_	_	
29-9	6570-6582	periodically	_	_	_	
29-10	6583-6593	defragment	_	_	_	
29-11	6594-6598	your	_	_	_	
29-12	6599-6603	disk	_	_	_	
29-13	6603-6604	.	_	_	_	

#Text=Add the following to /etc/crontab:
#Text=30 1 * * * root /usr/sbin/xfs_fsr -t 21600 >/dev/null 2>&1
#Text=to run it every night at 1:30 for 6 hours.
30-1	6605-6608	Add	_	_	_	
30-2	6609-6612	the	_	_	_	
30-3	6613-6622	following	_	_	_	
30-4	6623-6625	to	_	_	_	
30-5	6626-6627	/	_	_	_	
30-6	6627-6630	etc	_	_	_	
30-7	6630-6631	/	_	_	_	
30-8	6631-6638	crontab	_	_	_	
30-9	6638-6639	:	_	_	_	
30-10	6640-6642	30	_	_	_	
30-11	6643-6644	1	_	_	_	
30-12	6645-6646	*	_	_	_	
30-13	6647-6648	*	_	_	_	
30-14	6649-6650	*	_	_	_	
30-15	6651-6655	root	_	_	_	
30-16	6656-6657	/	_	_	_	
30-17	6657-6660	usr	_	_	_	
30-18	6660-6661	/	_	_	_	
30-19	6661-6665	sbin	_	_	_	
30-20	6665-6666	/	_	_	_	
30-21	6666-6673	xfs_fsr	_	_	_	
30-22	6674-6675	-	_	_	_	
30-23	6675-6676	t	_	_	_	
30-24	6677-6682	21600	_	_	_	
30-25	6683-6684	>	_	_	_	
30-26	6684-6685	/	_	_	_	
30-27	6685-6688	dev	_	_	_	
30-28	6688-6689	/	_	_	_	
30-29	6689-6693	null	_	_	_	
30-30	6694-6695	2	_	_	_	
30-31	6695-6696	>	_	_	_	
30-32	6696-6697	&	_	_	_	
30-33	6697-6698	1	_	_	_	
30-34	6699-6701	to	_	_	_	
30-35	6702-6705	run	_	_	_	
30-36	6706-6708	it	_	_	_	
30-37	6709-6714	every	_	_	_	
30-38	6715-6720	night	_	_	_	
30-39	6721-6723	at	_	_	_	
30-40	6724-6725	1	_	_	_	
30-41	6725-6726	:	_	_	_	
30-42	6726-6728	30	_	_	_	
30-43	6729-6732	for	_	_	_	
30-44	6733-6734	6	_	_	_	
30-45	6735-6740	hours	_	_	_	
30-46	6740-6741	.	_	_	_	

#Text=Don't forget to see the complete XFS_Filesystem wiki page that includes general info about XFS, defragmenting, disk checking and maintenance, etc.
31-1	6742-6747	Don't	_	_	_	
31-2	6748-6754	forget	_	_	_	
31-3	6755-6757	to	_	_	_	
31-4	6758-6761	see	_	_	_	
31-5	6762-6765	the	_	_	_	
31-6	6766-6774	complete	_	_	_	
31-7	6775-6789	XFS_Filesystem	_	_	_	
31-8	6790-6794	wiki	_	_	_	
31-9	6795-6799	page	_	_	_	
31-10	6800-6804	that	_	_	_	
31-11	6805-6813	includes	_	_	_	
31-12	6814-6821	general	_	_	_	
31-13	6822-6826	info	_	_	_	
31-14	6827-6832	about	_	_	_	
31-15	6833-6836	XFS	_	_	_	
31-16	6836-6837	,	_	_	_	
31-17	6838-6851	defragmenting	_	_	_	
31-18	6851-6852	,	_	_	_	
31-19	6853-6857	disk	_	_	_	
31-20	6858-6866	checking	_	_	_	
31-21	6867-6870	and	_	_	_	
31-22	6871-6882	maintenance	_	_	_	
31-23	6882-6883	,	_	_	_	
31-24	6884-6887	etc	_	_	_	
31-25	6887-6888	.	_	_	_	

#Text=Optimizing XFS on RAID Arrays
#Text=Some more RAID specific tweaks for XFS were found in this helpful article: Optimizing XFS on RAID Arrays.
32-1	6889-6899	Optimizing	_	_	_	
32-2	6900-6903	XFS	_	_	_	
32-3	6904-6906	on	_	_	_	
32-4	6907-6911	RAID	_	_	_	
32-5	6912-6918	Arrays	_	_	_	
32-6	6919-6923	Some	_	_	_	
32-7	6924-6928	more	_	_	_	
32-8	6929-6933	RAID	_	_	_	
32-9	6934-6942	specific	_	_	_	
32-10	6943-6949	tweaks	_	_	_	
32-11	6950-6953	for	_	_	_	
32-12	6954-6957	XFS	_	_	_	
32-13	6958-6962	were	_	_	_	
32-14	6963-6968	found	_	_	_	
32-15	6969-6971	in	_	_	_	
32-16	6972-6976	this	_	_	_	
32-17	6977-6984	helpful	_	_	_	
32-18	6985-6992	article	_	_	_	
32-19	6992-6993	:	_	_	_	
32-20	6994-7004	Optimizing	_	_	_	
32-21	7005-7008	XFS	_	_	_	
32-22	7009-7011	on	_	_	_	
32-23	7012-7016	RAID	_	_	_	
32-24	7017-7023	Arrays	_	_	_	
32-25	7023-7024	.	_	_	_	

#Text=This section is a slightly reformatted version of that article.
33-1	7025-7029	This	_	_	_	
33-2	7030-7037	section	_	_	_	
33-3	7038-7040	is	_	_	_	
33-4	7041-7042	a	_	_	_	
33-5	7043-7051	slightly	_	_	_	
33-6	7052-7063	reformatted	_	_	_	
33-7	7064-7071	version	_	_	_	
33-8	7072-7074	of	_	_	_	
33-9	7075-7079	that	_	_	_	
33-10	7080-7087	article	_	_	_	
33-11	7087-7088	.	_	_	_	

#Text=Please note the author of that article incorrectly used the term "block size" in some places when he really meant "stripe size" or "chunk size".
#Text=block size refers to the filesystem's unit of data transfer.
34-1	7089-7095	Please	_	_	_	
34-2	7096-7100	note	_	_	_	
34-3	7101-7104	the	_	_	_	
34-4	7105-7111	author	_	_	_	
34-5	7112-7114	of	_	_	_	
34-6	7115-7119	that	_	_	_	
34-7	7120-7127	article	_	_	_	
34-8	7128-7139	incorrectly	_	_	_	
34-9	7140-7144	used	_	_	_	
34-10	7145-7148	the	_	_	_	
34-11	7149-7153	term	_	_	_	
34-12	7154-7155	"	_	_	_	
34-13	7155-7160	block	_	_	_	
34-14	7161-7165	size	_	_	_	
34-15	7165-7166	"	_	_	_	
34-16	7167-7169	in	_	_	_	
34-17	7170-7174	some	_	_	_	
34-18	7175-7181	places	_	_	_	
34-19	7182-7186	when	_	_	_	
34-20	7187-7189	he	_	_	_	
34-21	7190-7196	really	_	_	_	
34-22	7197-7202	meant	_	_	_	
34-23	7203-7204	"	_	_	_	
34-24	7204-7210	stripe	_	_	_	
34-25	7211-7215	size	_	_	_	
34-26	7215-7216	"	_	_	_	
34-27	7217-7219	or	_	_	_	
34-28	7220-7221	"	_	_	_	
34-29	7221-7226	chunk	_	_	_	
34-30	7227-7231	size	_	_	_	
34-31	7231-7232	"	_	_	_	
34-32	7232-7233	.	_	_	_	
34-33	7234-7239	block	_	_	_	
34-34	7240-7244	size	_	_	_	
34-35	7245-7251	refers	_	_	_	
34-36	7252-7254	to	_	_	_	
34-37	7255-7258	the	_	_	_	
34-38	7259-7271	filesystem's	_	_	_	
34-39	7272-7276	unit	_	_	_	
34-40	7277-7279	of	_	_	_	
34-41	7280-7284	data	_	_	_	
34-42	7285-7293	transfer	_	_	_	
34-43	7293-7294	.	_	_	_	

#Text=This is set at format time for the filesystem.
35-1	7295-7299	This	_	_	_	
35-2	7300-7302	is	_	_	_	
35-3	7303-7306	set	_	_	_	
35-4	7307-7309	at	_	_	_	
35-5	7310-7316	format	_	_	_	
35-6	7317-7321	time	_	_	_	
35-7	7322-7325	for	_	_	_	
35-8	7326-7329	the	_	_	_	
35-9	7330-7340	filesystem	_	_	_	
35-10	7340-7341	.	_	_	_	

#Text=The default value is 4096 bytes (4 KiB), the minimum is 512, and the maximum is 65536 (64 KiB).
36-1	7342-7345	The	_	_	_	
36-2	7346-7353	default	_	_	_	
36-3	7354-7359	value	_	_	_	
36-4	7360-7362	is	_	_	_	
36-5	7363-7367	4096	_	_	_	
36-6	7368-7373	bytes	_	_	_	
36-7	7374-7375	(	_	_	_	
36-8	7375-7376	4	_	_	_	
36-9	7377-7380	KiB	_	_	_	
36-10	7380-7381	)	_	_	_	
36-11	7381-7382	,	_	_	_	
36-12	7383-7386	the	_	_	_	
36-13	7387-7394	minimum	_	_	_	
36-14	7395-7397	is	_	_	_	
36-15	7398-7401	512	_	_	_	
36-16	7401-7402	,	_	_	_	
36-17	7403-7406	and	_	_	_	
36-18	7407-7410	the	_	_	_	
36-19	7411-7418	maximum	_	_	_	
36-20	7419-7421	is	_	_	_	
36-21	7422-7427	65536	_	_	_	
36-22	7428-7429	(	_	_	_	
36-23	7429-7431	64	_	_	_	
36-24	7432-7435	KiB	_	_	_	
36-25	7435-7436	)	_	_	_	
36-26	7436-7437	.	_	_	_	

#Text=XFS on Linux
#Text=currently only supports pagesize or smaller blocks.
#Text=chunk size or stripe size refers to the RAID array's unit of data transfer.
37-1	7438-7441	XFS	_	_	_	
37-2	7442-7444	on	_	_	_	
37-3	7445-7450	Linux	_	_	_	
37-4	7451-7460	currently	_	_	_	
37-5	7461-7465	only	_	_	_	
37-6	7466-7474	supports	_	_	_	
37-7	7475-7483	pagesize	_	_	_	
37-8	7484-7486	or	_	_	_	
37-9	7487-7494	smaller	_	_	_	
37-10	7495-7501	blocks	_	_	_	
37-11	7501-7502	.	_	_	_	
37-12	7503-7508	chunk	_	_	_	
37-13	7509-7513	size	_	_	_	
37-14	7514-7516	or	_	_	_	
37-15	7517-7523	stripe	_	_	_	
37-16	7524-7528	size	_	_	_	
37-17	7529-7535	refers	_	_	_	
37-18	7536-7538	to	_	_	_	
37-19	7539-7542	the	_	_	_	
37-20	7543-7547	RAID	_	_	_	
37-21	7548-7555	array's	_	_	_	
37-22	7556-7560	unit	_	_	_	
37-23	7561-7563	of	_	_	_	
37-24	7564-7568	data	_	_	_	
37-25	7569-7577	transfer	_	_	_	
37-26	7577-7578	.	_	_	_	

#Text=This is set during RAID array creation time for the array (in software raid, the --chunk=X option to mdadm).
38-1	7579-7583	This	_	_	_	
38-2	7584-7586	is	_	_	_	
38-3	7587-7590	set	_	_	_	
38-4	7591-7597	during	_	_	_	
38-5	7598-7602	RAID	_	_	_	
38-6	7603-7608	array	_	_	_	
38-7	7609-7617	creation	_	_	_	
38-8	7618-7622	time	_	_	_	
38-9	7623-7626	for	_	_	_	
38-10	7627-7630	the	_	_	_	
38-11	7631-7636	array	_	_	_	
38-12	7637-7638	(	_	_	_	
38-13	7638-7640	in	_	_	_	
38-14	7641-7649	software	_	_	_	
38-15	7650-7654	raid	_	_	_	
38-16	7654-7655	,	_	_	_	
38-17	7656-7659	the	_	_	_	
38-18	7660-7661	-	_	_	_	
38-19	7661-7662	-	_	_	_	
38-20	7662-7667	chunk	_	_	_	
38-21	7667-7668	=	_	_	_	
38-22	7668-7669	X	_	_	_	
38-23	7670-7676	option	_	_	_	
38-24	7677-7679	to	_	_	_	
38-25	7680-7685	mdadm	_	_	_	
38-26	7685-7686	)	_	_	_	
38-27	7686-7687	.	_	_	_	

#Text=For me, mkfs.xfs complained when using chunk size=256KB, and block size=4096 bytes and specifying a sunit & swidth calculated using the block size.
39-1	7688-7691	For	_	_	_	
39-2	7692-7694	me	_	_	_	
39-3	7694-7695	,	_	_	_	
39-4	7696-7704	mkfs.xfs	_	_	_	
39-5	7705-7715	complained	_	_	_	
39-6	7716-7720	when	_	_	_	
39-7	7721-7726	using	_	_	_	
39-8	7727-7732	chunk	_	_	_	
39-9	7733-7737	size	_	_	_	
39-10	7737-7738	=	_	_	_	
39-11	7738-7743	256KB	_	_	_	
39-12	7743-7744	,	_	_	_	
39-13	7745-7748	and	_	_	_	
39-14	7749-7754	block	_	_	_	
39-15	7755-7759	size	_	_	_	
39-16	7759-7760	=	_	_	_	
39-17	7760-7764	4096	_	_	_	
39-18	7765-7770	bytes	_	_	_	
39-19	7771-7774	and	_	_	_	
39-20	7775-7785	specifying	_	_	_	
39-21	7786-7787	a	_	_	_	
39-22	7788-7793	sunit	_	_	_	
39-23	7794-7795	&	_	_	_	
39-24	7796-7802	swidth	_	_	_	
39-25	7803-7813	calculated	_	_	_	
39-26	7814-7819	using	_	_	_	
39-27	7820-7823	the	_	_	_	
39-28	7824-7829	block	_	_	_	
39-29	7830-7834	size	_	_	_	
39-30	7834-7835	.	_	_	_	

#Text=The values it mentions are correct if calculated using the chunk size.
40-1	7836-7839	The	_	_	_	
40-2	7840-7846	values	_	_	_	
40-3	7847-7849	it	_	_	_	
40-4	7850-7858	mentions	_	_	_	
40-5	7859-7862	are	_	_	_	
40-6	7863-7870	correct	_	_	_	
40-7	7871-7873	if	_	_	_	
40-8	7874-7884	calculated	_	_	_	
40-9	7885-7890	using	_	_	_	
40-10	7891-7894	the	_	_	_	
40-11	7895-7900	chunk	_	_	_	
40-12	7901-7905	size	_	_	_	
40-13	7905-7906	.	_	_	_	

#Text=Therefore, this section assumes sunit & swidth calculated using chunk size.
41-1	7907-7916	Therefore	_	_	_	
41-2	7916-7917	,	_	_	_	
41-3	7918-7922	this	_	_	_	
41-4	7923-7930	section	_	_	_	
41-5	7931-7938	assumes	_	_	_	
41-6	7939-7944	sunit	_	_	_	
41-7	7945-7946	&	_	_	_	
41-8	7947-7953	swidth	_	_	_	
41-9	7954-7964	calculated	_	_	_	
41-10	7965-7970	using	_	_	_	
41-11	7971-7976	chunk	_	_	_	
41-12	7977-7981	size	_	_	_	
41-13	7981-7982	.	_	_	_	

#Text=If you are having trouble, try my
#Text=script.
42-1	7983-7985	If	_	_	_	
42-2	7986-7989	you	_	_	_	
42-3	7990-7993	are	_	_	_	
42-4	7994-8000	having	_	_	_	
42-5	8001-8008	trouble	_	_	_	
42-6	8008-8009	,	_	_	_	
42-7	8010-8013	try	_	_	_	
42-8	8014-8016	my	_	_	_	
42-9	8017-8023	script	_	_	_	
42-10	8023-8024	.	_	_	_	

#Text=XFS has builtin optimizations for reading data from RAID arrays.
43-1	8025-8028	XFS	_	_	_	
43-2	8029-8032	has	_	_	_	
43-3	8033-8040	builtin	_	_	_	
43-4	8041-8054	optimizations	_	_	_	
43-5	8055-8058	for	_	_	_	
43-6	8059-8066	reading	_	_	_	
43-7	8067-8071	data	_	_	_	
43-8	8072-8076	from	_	_	_	
43-9	8077-8081	RAID	_	_	_	
43-10	8082-8088	arrays	_	_	_	
43-11	8088-8089	.	_	_	_	

#Text=These options can be specified at mkfs time or at mount time (you can even set them while the system is running using the mount -o remount command) and can affect the performance of your system.
44-1	8090-8095	These	_	_	_	
44-2	8096-8103	options	_	_	_	
44-3	8104-8107	can	_	_	_	
44-4	8108-8110	be	_	_	_	
44-5	8111-8120	specified	_	_	_	
44-6	8121-8123	at	_	_	_	
44-7	8124-8128	mkfs	_	_	_	
44-8	8129-8133	time	_	_	_	
44-9	8134-8136	or	_	_	_	
44-10	8137-8139	at	_	_	_	
44-11	8140-8145	mount	_	_	_	
44-12	8146-8150	time	_	_	_	
44-13	8151-8152	(	_	_	_	
44-14	8152-8155	you	_	_	_	
44-15	8156-8159	can	_	_	_	
44-16	8160-8164	even	_	_	_	
44-17	8165-8168	set	_	_	_	
44-18	8169-8173	them	_	_	_	
44-19	8174-8179	while	_	_	_	
44-20	8180-8183	the	_	_	_	
44-21	8184-8190	system	_	_	_	
44-22	8191-8193	is	_	_	_	
44-23	8194-8201	running	_	_	_	
44-24	8202-8207	using	_	_	_	
44-25	8208-8211	the	_	_	_	
44-26	8212-8217	mount	_	_	_	
44-27	8218-8219	-	_	_	_	
44-28	8219-8220	o	_	_	_	
44-29	8221-8228	remount	_	_	_	
44-30	8229-8236	command	_	_	_	
44-31	8236-8237	)	_	_	_	
44-32	8238-8241	and	_	_	_	
44-33	8242-8245	can	_	_	_	
44-34	8246-8252	affect	_	_	_	
44-35	8253-8256	the	_	_	_	
44-36	8257-8268	performance	_	_	_	
44-37	8269-8271	of	_	_	_	
44-38	8272-8276	your	_	_	_	
44-39	8277-8283	system	_	_	_	
44-40	8283-8284	.	_	_	_	

#Text=There are two parameters for tweaking how XFS handles your RAID arrays (there are actually four, but you only need to use these two): sunit and swidth.
#Text=sunit is the stripe unit and swidth is the stripe width.
45-1	8285-8290	There	_	_	_	
45-2	8291-8294	are	_	_	_	
45-3	8295-8298	two	_	_	_	
45-4	8299-8309	parameters	_	_	_	
45-5	8310-8313	for	_	_	_	
45-6	8314-8322	tweaking	_	_	_	
45-7	8323-8326	how	_	_	_	
45-8	8327-8330	XFS	_	_	_	
45-9	8331-8338	handles	_	_	_	
45-10	8339-8343	your	_	_	_	
45-11	8344-8348	RAID	_	_	_	
45-12	8349-8355	arrays	_	_	_	
45-13	8356-8357	(	_	_	_	
45-14	8357-8362	there	_	_	_	
45-15	8363-8366	are	_	_	_	
45-16	8367-8375	actually	_	_	_	
45-17	8376-8380	four	_	_	_	
45-18	8380-8381	,	_	_	_	
45-19	8382-8385	but	_	_	_	
45-20	8386-8389	you	_	_	_	
45-21	8390-8394	only	_	_	_	
45-22	8395-8399	need	_	_	_	
45-23	8400-8402	to	_	_	_	
45-24	8403-8406	use	_	_	_	
45-25	8407-8412	these	_	_	_	
45-26	8413-8416	two	_	_	_	
45-27	8416-8417	)	_	_	_	
45-28	8417-8418	:	_	_	_	
45-29	8419-8424	sunit	_	_	_	
45-30	8425-8428	and	_	_	_	
45-31	8429-8435	swidth	_	_	_	
45-32	8435-8436	.	_	_	_	
45-33	8437-8442	sunit	_	_	_	
45-34	8443-8445	is	_	_	_	
45-35	8446-8449	the	_	_	_	
45-36	8450-8456	stripe	_	_	_	
45-37	8457-8461	unit	_	_	_	
45-38	8462-8465	and	_	_	_	
45-39	8466-8472	swidth	_	_	_	
45-40	8473-8475	is	_	_	_	
45-41	8476-8479	the	_	_	_	
45-42	8480-8486	stripe	_	_	_	
45-43	8487-8492	width	_	_	_	
45-44	8492-8493	.	_	_	_	

#Text=The stripe unit sits on a single disk while the stripe width spans the entire array; in this way the sunit is similar to the stripe size of your array.
46-1	8494-8497	The	_	_	_	
46-2	8498-8504	stripe	_	_	_	
46-3	8505-8509	unit	_	_	_	
46-4	8510-8514	sits	_	_	_	
46-5	8515-8517	on	_	_	_	
46-6	8518-8519	a	_	_	_	
46-7	8520-8526	single	_	_	_	
46-8	8527-8531	disk	_	_	_	
46-9	8532-8537	while	_	_	_	
46-10	8538-8541	the	_	_	_	
46-11	8542-8548	stripe	_	_	_	
46-12	8549-8554	width	_	_	_	
46-13	8555-8560	spans	_	_	_	
46-14	8561-8564	the	_	_	_	
46-15	8565-8571	entire	_	_	_	
46-16	8572-8577	array	_	_	_	
46-17	8577-8578	;	_	_	_	
46-18	8579-8581	in	_	_	_	
46-19	8582-8586	this	_	_	_	
46-20	8587-8590	way	_	_	_	
46-21	8591-8594	the	_	_	_	
46-22	8595-8600	sunit	_	_	_	
46-23	8601-8603	is	_	_	_	
46-24	8604-8611	similar	_	_	_	
46-25	8612-8614	to	_	_	_	
46-26	8615-8618	the	_	_	_	
46-27	8619-8625	stripe	_	_	_	
46-28	8626-8630	size	_	_	_	
46-29	8631-8633	of	_	_	_	
46-30	8634-8638	your	_	_	_	
46-31	8639-8644	array	_	_	_	
46-32	8644-8645	.	_	_	_	

#Text=Before you begin, you’ll need to know:
#Text=What type of RAID array you’re using
#Text=The number of disks in the array
#Text=The stripe size (aka the chunk size in software RAID).
47-1	8646-8652	Before	_	_	_	
47-2	8653-8656	you	_	_	_	
47-3	8657-8662	begin	_	_	_	
47-4	8662-8663	,	_	_	_	
47-5	8664-8667	you	_	_	_	
47-6	8667-8668	’	_	_	_	
47-7	8668-8670	ll	_	_	_	
47-8	8671-8675	need	_	_	_	
47-9	8676-8678	to	_	_	_	
47-10	8679-8683	know	_	_	_	
47-11	8683-8684	:	_	_	_	
47-12	8685-8689	What	_	_	_	
47-13	8690-8694	type	_	_	_	
47-14	8695-8697	of	_	_	_	
47-15	8698-8702	RAID	_	_	_	
47-16	8703-8708	array	_	_	_	
47-17	8709-8712	you	_	_	_	
47-18	8712-8713	’	_	_	_	
47-19	8713-8715	re	_	_	_	
47-20	8716-8721	using	_	_	_	
47-21	8722-8725	The	_	_	_	
47-22	8726-8732	number	_	_	_	
47-23	8733-8735	of	_	_	_	
47-24	8736-8741	disks	_	_	_	
47-25	8742-8744	in	_	_	_	
47-26	8745-8748	the	_	_	_	
47-27	8749-8754	array	_	_	_	
47-28	8755-8758	The	_	_	_	
47-29	8759-8765	stripe	_	_	_	
47-30	8766-8770	size	_	_	_	
47-31	8771-8772	(	_	_	_	
47-32	8772-8775	aka	_	_	_	
47-33	8776-8779	the	_	_	_	
47-34	8780-8785	chunk	_	_	_	
47-35	8786-8790	size	_	_	_	
47-36	8791-8793	in	_	_	_	
47-37	8794-8802	software	_	_	_	
47-38	8803-8807	RAID	_	_	_	
47-39	8807-8808	)	_	_	_	
47-40	8808-8809	.	_	_	_	

#Text=For RAID{1,0,10} arrays, the number of “disks” is equal to the number of spindles.
48-1	8810-8813	For	_	_	_	
48-2	8814-8818	RAID	_	_	_	
48-3	8818-8819	{	_	_	_	
48-4	8819-8825	1,0,10	_	_	_	
48-5	8825-8826	}	_	_	_	
48-6	8827-8833	arrays	_	_	_	
48-7	8833-8834	,	_	_	_	
48-8	8835-8838	the	_	_	_	
48-9	8839-8845	number	_	_	_	
48-10	8846-8848	of	_	_	_	
48-11	8849-8850	“	_	_	_	
48-12	8850-8855	disks	_	_	_	
48-13	8855-8856	”	_	_	_	
48-14	8857-8859	is	_	_	_	
48-15	8860-8865	equal	_	_	_	
48-16	8866-8868	to	_	_	_	
48-17	8869-8872	the	_	_	_	
48-18	8873-8879	number	_	_	_	
48-19	8880-8882	of	_	_	_	
48-20	8883-8891	spindles	_	_	_	
48-21	8891-8892	.	_	_	_	

#Text=For RAID{5,6} arrays, the number of disks is equal to N-1 for RAID5 and N-2 for RAID6, where N is the number of spindles.
49-1	8893-8896	For	_	_	_	
49-2	8897-8901	RAID	_	_	_	
49-3	8901-8902	{	_	_	_	
49-4	8902-8905	5,6	_	_	_	
49-5	8905-8906	}	_	_	_	
49-6	8907-8913	arrays	_	_	_	
49-7	8913-8914	,	_	_	_	
49-8	8915-8918	the	_	_	_	
49-9	8919-8925	number	_	_	_	
49-10	8926-8928	of	_	_	_	
49-11	8929-8934	disks	_	_	_	
49-12	8935-8937	is	_	_	_	
49-13	8938-8943	equal	_	_	_	
49-14	8944-8946	to	_	_	_	
49-15	8947-8948	N	_	_	_	
49-16	8948-8949	-	_	_	_	
49-17	8949-8950	1	_	_	_	
49-18	8951-8954	for	_	_	_	
49-19	8955-8960	RAID5	_	_	_	
49-20	8961-8964	and	_	_	_	
49-21	8965-8966	N	_	_	_	
49-22	8966-8967	-	_	_	_	
49-23	8967-8968	2	_	_	_	
49-24	8969-8972	for	_	_	_	
49-25	8973-8978	RAID6	_	_	_	
49-26	8978-8979	,	_	_	_	
49-27	8980-8985	where	_	_	_	
49-28	8986-8987	N	_	_	_	
49-29	8988-8990	is	_	_	_	
49-30	8991-8994	the	_	_	_	
49-31	8995-9001	number	_	_	_	
49-32	9002-9004	of	_	_	_	
49-33	9005-9013	spindles	_	_	_	
49-34	9013-9014	.	_	_	_	

#Text=If you guessed that the sunit is equal to your stripe size, you’re almost correct.
50-1	9015-9017	If	_	_	_	
50-2	9018-9021	you	_	_	_	
50-3	9022-9029	guessed	_	_	_	
50-4	9030-9034	that	_	_	_	
50-5	9035-9038	the	_	_	_	
50-6	9039-9044	sunit	_	_	_	
50-7	9045-9047	is	_	_	_	
50-8	9048-9053	equal	_	_	_	
50-9	9054-9056	to	_	_	_	
50-10	9057-9061	your	_	_	_	
50-11	9062-9068	stripe	_	_	_	
50-12	9069-9073	size	_	_	_	
50-13	9073-9074	,	_	_	_	
50-14	9075-9078	you	_	_	_	
50-15	9078-9079	’	_	_	_	
50-16	9079-9081	re	_	_	_	
50-17	9082-9088	almost	_	_	_	
50-18	9089-9096	correct	_	_	_	
50-19	9096-9097	.	_	_	_	

#Text=The sunit is measured in 512-byte block units (from the mount man page), so for a 64kB stripe size your sunit=128, for 256kB use sunit=512.
51-1	9098-9101	The	_	_	_	
51-2	9102-9107	sunit	_	_	_	
51-3	9108-9110	is	_	_	_	
51-4	9111-9119	measured	_	_	_	
51-5	9120-9122	in	_	_	_	
51-6	9123-9126	512	_	_	_	
51-7	9126-9127	-	_	_	_	
51-8	9127-9131	byte	_	_	_	
51-9	9132-9137	block	_	_	_	
51-10	9138-9143	units	_	_	_	
51-11	9144-9145	(	_	_	_	
51-12	9145-9149	from	_	_	_	
51-13	9150-9153	the	_	_	_	
51-14	9154-9159	mount	_	_	_	
51-15	9160-9163	man	_	_	_	
51-16	9164-9168	page	_	_	_	
51-17	9168-9169	)	_	_	_	
51-18	9169-9170	,	_	_	_	
51-19	9171-9173	so	_	_	_	
51-20	9174-9177	for	_	_	_	
51-21	9178-9179	a	_	_	_	
51-22	9180-9184	64kB	_	_	_	
51-23	9185-9191	stripe	_	_	_	
51-24	9192-9196	size	_	_	_	
51-25	9197-9201	your	_	_	_	
51-26	9202-9207	sunit	_	_	_	
51-27	9207-9208	=	_	_	_	
51-28	9208-9211	128	_	_	_	
51-29	9211-9212	,	_	_	_	
51-30	9213-9216	for	_	_	_	
51-31	9217-9222	256kB	_	_	_	
51-32	9223-9226	use	_	_	_	
51-33	9227-9232	sunit	_	_	_	
51-34	9232-9233	=	_	_	_	
51-35	9233-9236	512	_	_	_	
51-36	9236-9237	.	_	_	_	

#Text=As mentioned before, the swidth spans the entire array, but is also measured in 512-byte blocks, so you’ll want to multiply the number of disks calculated above by the sunit for your stripe size.
52-1	9238-9240	As	_	_	_	
52-2	9241-9250	mentioned	_	_	_	
52-3	9251-9257	before	_	_	_	
52-4	9257-9258	,	_	_	_	
52-5	9259-9262	the	_	_	_	
52-6	9263-9269	swidth	_	_	_	
52-7	9270-9275	spans	_	_	_	
52-8	9276-9279	the	_	_	_	
52-9	9280-9286	entire	_	_	_	
52-10	9287-9292	array	_	_	_	
52-11	9292-9293	,	_	_	_	
52-12	9294-9297	but	_	_	_	
52-13	9298-9300	is	_	_	_	
52-14	9301-9305	also	_	_	_	
52-15	9306-9314	measured	_	_	_	
52-16	9315-9317	in	_	_	_	
52-17	9318-9321	512	_	_	_	
52-18	9321-9322	-	_	_	_	
52-19	9322-9326	byte	_	_	_	
52-20	9327-9333	blocks	_	_	_	
52-21	9333-9334	,	_	_	_	
52-22	9335-9337	so	_	_	_	
52-23	9338-9341	you	_	_	_	
52-24	9341-9342	’	_	_	_	
52-25	9342-9344	ll	_	_	_	
52-26	9345-9349	want	_	_	_	
52-27	9350-9352	to	_	_	_	
52-28	9353-9361	multiply	_	_	_	
52-29	9362-9365	the	_	_	_	
52-30	9366-9372	number	_	_	_	
52-31	9373-9375	of	_	_	_	
52-32	9376-9381	disks	_	_	_	
52-33	9382-9392	calculated	_	_	_	
52-34	9393-9398	above	_	_	_	
52-35	9399-9401	by	_	_	_	
52-36	9402-9405	the	_	_	_	
52-37	9406-9411	sunit	_	_	_	
52-38	9412-9415	for	_	_	_	
52-39	9416-9420	your	_	_	_	
52-40	9421-9427	stripe	_	_	_	
52-41	9428-9432	size	_	_	_	
52-42	9432-9433	.	_	_	_	

#Text=Note:
#Text=If you have not formatted your xfs partition yet, you may set a blocksize in mkfs.xfs using the -b size=X option.
53-1	9434-9438	Note	_	_	_	
53-2	9438-9439	:	_	_	_	
53-3	9440-9442	If	_	_	_	
53-4	9443-9446	you	_	_	_	
53-5	9447-9451	have	_	_	_	
53-6	9452-9455	not	_	_	_	
53-7	9456-9465	formatted	_	_	_	
53-8	9466-9470	your	_	_	_	
53-9	9471-9474	xfs	_	_	_	
53-10	9475-9484	partition	_	_	_	
53-11	9485-9488	yet	_	_	_	
53-12	9488-9489	,	_	_	_	
53-13	9490-9493	you	_	_	_	
53-14	9494-9497	may	_	_	_	
53-15	9498-9501	set	_	_	_	
53-16	9502-9503	a	_	_	_	
53-17	9504-9513	blocksize	_	_	_	
53-18	9514-9516	in	_	_	_	
53-19	9517-9525	mkfs.xfs	_	_	_	
53-20	9526-9531	using	_	_	_	
53-21	9532-9535	the	_	_	_	
53-22	9536-9537	-	_	_	_	
53-23	9537-9538	b	_	_	_	
53-24	9539-9543	size	_	_	_	
53-25	9543-9544	=	_	_	_	
53-26	9544-9545	X	_	_	_	
53-27	9546-9552	option	_	_	_	
53-28	9552-9553	.	_	_	_	

#Text=The default is usually 4096 bytes (4 KiB) on most systems.
54-1	9554-9557	The	_	_	_	
54-2	9558-9565	default	_	_	_	
54-3	9566-9568	is	_	_	_	
54-4	9569-9576	usually	_	_	_	
54-5	9577-9581	4096	_	_	_	
54-6	9582-9587	bytes	_	_	_	
54-7	9588-9589	(	_	_	_	
54-8	9589-9590	4	_	_	_	
54-9	9591-9594	KiB	_	_	_	
54-10	9594-9595	)	_	_	_	
54-11	9596-9598	on	_	_	_	
54-12	9599-9603	most	_	_	_	
54-13	9604-9611	systems	_	_	_	
54-14	9611-9612	.	_	_	_	

#Text=(Remember blocksize is limited to your system's memory pagesize. blocksize <= pagesize).
55-1	9613-9614	(	_	_	_	
55-2	9614-9622	Remember	_	_	_	
55-3	9623-9632	blocksize	_	_	_	
55-4	9633-9635	is	_	_	_	
55-5	9636-9643	limited	_	_	_	
55-6	9644-9646	to	_	_	_	
55-7	9647-9651	your	_	_	_	
55-8	9652-9660	system's	_	_	_	
55-9	9661-9667	memory	_	_	_	
55-10	9668-9676	pagesize	_	_	_	
55-11	9676-9677	.	_	_	_	
55-12	9678-9687	blocksize	_	_	_	
55-13	9688-9689	<	_	_	_	
55-14	9689-9690	=	_	_	_	
55-15	9691-9699	pagesize	_	_	_	
55-16	9699-9700	)	_	_	_	
55-17	9700-9701	.	_	_	_	

#Text=If already created, use the following command, and look for bsize=X in output:
#Text=# replace /dev/md0 with your device's name
#Text=xfs_info /dev/md0
#Text=Examples
#Text=Calculate the correct values for your system using these examples as a guideline.
56-1	9702-9704	If	_	_	_	
56-2	9705-9712	already	_	_	_	
56-3	9713-9720	created	_	_	_	
56-4	9720-9721	,	_	_	_	
56-5	9722-9725	use	_	_	_	
56-6	9726-9729	the	_	_	_	
56-7	9730-9739	following	_	_	_	
56-8	9740-9747	command	_	_	_	
56-9	9747-9748	,	_	_	_	
56-10	9749-9752	and	_	_	_	
56-11	9753-9757	look	_	_	_	
56-12	9758-9761	for	_	_	_	
56-13	9762-9767	bsize	_	_	_	
56-14	9767-9768	=	_	_	_	
56-15	9768-9769	X	_	_	_	
56-16	9770-9772	in	_	_	_	
56-17	9773-9779	output	_	_	_	
56-18	9779-9780	:	_	_	_	
56-19	9781-9782	#	_	_	_	
56-20	9783-9790	replace	_	_	_	
56-21	9791-9792	/	_	_	_	
56-22	9792-9795	dev	_	_	_	
56-23	9795-9796	/	_	_	_	
56-24	9796-9799	md0	_	_	_	
56-25	9800-9804	with	_	_	_	
56-26	9805-9809	your	_	_	_	
56-27	9810-9818	device's	_	_	_	
56-28	9819-9823	name	_	_	_	
56-29	9824-9832	xfs_info	_	_	_	
56-30	9833-9834	/	_	_	_	
56-31	9834-9837	dev	_	_	_	
56-32	9837-9838	/	_	_	_	
56-33	9838-9841	md0	_	_	_	
56-34	9842-9850	Examples	_	_	_	
56-35	9851-9860	Calculate	_	_	_	
56-36	9861-9864	the	_	_	_	
56-37	9865-9872	correct	_	_	_	
56-38	9873-9879	values	_	_	_	
56-39	9880-9883	for	_	_	_	
56-40	9884-9888	your	_	_	_	
56-41	9889-9895	system	_	_	_	
56-42	9896-9901	using	_	_	_	
56-43	9902-9907	these	_	_	_	
56-44	9908-9916	examples	_	_	_	
56-45	9917-9919	as	_	_	_	
56-46	9920-9921	a	_	_	_	
56-47	9922-9931	guideline	_	_	_	
56-48	9931-9932	.	_	_	_	

#Text=A 4-disk RAID0 array with a 64kB stripe size will have a sunit of 128 and a swidth of 4*128=512.
57-1	9933-9934	A	_	_	_	
57-2	9935-9936	4	_	_	_	
57-3	9936-9937	-	_	_	_	
57-4	9937-9941	disk	_	_	_	
57-5	9942-9947	RAID0	_	_	_	
57-6	9948-9953	array	_	_	_	
57-7	9954-9958	with	_	_	_	
57-8	9959-9960	a	_	_	_	
57-9	9961-9965	64kB	_	_	_	
57-10	9966-9972	stripe	_	_	_	
57-11	9973-9977	size	_	_	_	
57-12	9978-9982	will	_	_	_	
57-13	9983-9987	have	_	_	_	
57-14	9988-9989	a	_	_	_	
57-15	9990-9995	sunit	_	_	_	
57-16	9996-9998	of	_	_	_	
57-17	9999-10002	128	_	_	_	
57-18	10003-10006	and	_	_	_	
57-19	10007-10008	a	_	_	_	
57-20	10009-10015	swidth	_	_	_	
57-21	10016-10018	of	_	_	_	
57-22	10019-10020	4	_	_	_	
57-23	10020-10021	*	_	_	_	
57-24	10021-10024	128	_	_	_	
57-25	10024-10025	=	_	_	_	
57-26	10025-10028	512	_	_	_	
57-27	10028-10029	.	_	_	_	

#Text=Your mkfs.xfs and mount commands would thus be:
#Text=#Note that you should only need to use one of these.
58-1	10030-10034	Your	_	_	_	
58-2	10035-10043	mkfs.xfs	_	_	_	
58-3	10044-10047	and	_	_	_	
58-4	10048-10053	mount	_	_	_	
58-5	10054-10062	commands	_	_	_	
58-6	10063-10068	would	_	_	_	
58-7	10069-10073	thus	_	_	_	
58-8	10074-10076	be	_	_	_	
58-9	10076-10077	:	_	_	_	
58-10	10078-10079	#	_	_	_	
58-11	10079-10083	Note	_	_	_	
58-12	10084-10088	that	_	_	_	
58-13	10089-10092	you	_	_	_	
58-14	10093-10099	should	_	_	_	
58-15	10100-10104	only	_	_	_	
58-16	10105-10109	need	_	_	_	
58-17	10110-10112	to	_	_	_	
58-18	10113-10116	use	_	_	_	
58-19	10117-10120	one	_	_	_	
58-20	10121-10123	of	_	_	_	
58-21	10124-10129	these	_	_	_	
58-22	10129-10130	.	_	_	_	

#Text=You may also add the sunit and swidth options to /etc/fstab to make the second one permanent.
#Text=mkfs.xfs -d sunit=128,swidth=512 /dev/whatever
#Text=mount -o remount,sunit=128,swidth=512
#Text=An 8-disk RAID6 array with a 256kB stripe size will have a sunit of 512 and a swidth of (8-2)*512=3072.
59-1	10131-10134	You	_	_	_	
59-2	10135-10138	may	_	_	_	
59-3	10139-10143	also	_	_	_	
59-4	10144-10147	add	_	_	_	
59-5	10148-10151	the	_	_	_	
59-6	10152-10157	sunit	_	_	_	
59-7	10158-10161	and	_	_	_	
59-8	10162-10168	swidth	_	_	_	
59-9	10169-10176	options	_	_	_	
59-10	10177-10179	to	_	_	_	
59-11	10180-10181	/	_	_	_	
59-12	10181-10184	etc	_	_	_	
59-13	10184-10185	/	_	_	_	
59-14	10185-10190	fstab	_	_	_	
59-15	10191-10193	to	_	_	_	
59-16	10194-10198	make	_	_	_	
59-17	10199-10202	the	_	_	_	
59-18	10203-10209	second	_	_	_	
59-19	10210-10213	one	_	_	_	
59-20	10214-10223	permanent	_	_	_	
59-21	10223-10224	.	_	_	_	
59-22	10225-10233	mkfs.xfs	_	_	_	
59-23	10234-10235	-	_	_	_	
59-24	10235-10236	d	_	_	_	
59-25	10237-10242	sunit	_	_	_	
59-26	10242-10243	=	_	_	_	
59-27	10243-10246	128	_	_	_	
59-28	10246-10247	,	_	_	_	
59-29	10247-10253	swidth	_	_	_	
59-30	10253-10254	=	_	_	_	
59-31	10254-10257	512	_	_	_	
59-32	10258-10259	/	_	_	_	
59-33	10259-10262	dev	_	_	_	
59-34	10262-10263	/	_	_	_	
59-35	10263-10271	whatever	_	_	_	
59-36	10272-10277	mount	_	_	_	
59-37	10278-10279	-	_	_	_	
59-38	10279-10280	o	_	_	_	
59-39	10281-10288	remount	_	_	_	
59-40	10288-10289	,	_	_	_	
59-41	10289-10294	sunit	_	_	_	
59-42	10294-10295	=	_	_	_	
59-43	10295-10298	128	_	_	_	
59-44	10298-10299	,	_	_	_	
59-45	10299-10305	swidth	_	_	_	
59-46	10305-10306	=	_	_	_	
59-47	10306-10309	512	_	_	_	
59-48	10310-10312	An	_	_	_	
59-49	10313-10314	8	_	_	_	
59-50	10314-10315	-	_	_	_	
59-51	10315-10319	disk	_	_	_	
59-52	10320-10325	RAID6	_	_	_	
59-53	10326-10331	array	_	_	_	
59-54	10332-10336	with	_	_	_	
59-55	10337-10338	a	_	_	_	
59-56	10339-10344	256kB	_	_	_	
59-57	10345-10351	stripe	_	_	_	
59-58	10352-10356	size	_	_	_	
59-59	10357-10361	will	_	_	_	
59-60	10362-10366	have	_	_	_	
59-61	10367-10368	a	_	_	_	
59-62	10369-10374	sunit	_	_	_	
59-63	10375-10377	of	_	_	_	
59-64	10378-10381	512	_	_	_	
59-65	10382-10385	and	_	_	_	
59-66	10386-10387	a	_	_	_	
59-67	10388-10394	swidth	_	_	_	
59-68	10395-10397	of	_	_	_	
59-69	10398-10399	(	_	_	_	
59-70	10399-10400	8	_	_	_	
59-71	10400-10401	-	_	_	_	
59-72	10401-10402	2	_	_	_	
59-73	10402-10403	)	_	_	_	
59-74	10403-10404	*	_	_	_	
59-75	10404-10407	512	_	_	_	
59-76	10407-10408	=	_	_	_	
59-77	10408-10412	3072	_	_	_	
59-78	10412-10413	.	_	_	_	

#Text=Your commands would thus be:
#Text=mkfs.xfs -d sunit=512,swidth=3072 /dev/whatever
#Text=mount -o remount,sunit=512,swidth=3072
#Text=Further Information
#Text=If you are having trouble figuring this out (as I did at first), here is a useful bash script to help you.
60-1	10414-10418	Your	_	_	_	
60-2	10419-10427	commands	_	_	_	
60-3	10428-10433	would	_	_	_	
60-4	10434-10438	thus	_	_	_	
60-5	10439-10441	be	_	_	_	
60-6	10441-10442	:	_	_	_	
60-7	10443-10451	mkfs.xfs	_	_	_	
60-8	10452-10453	-	_	_	_	
60-9	10453-10454	d	_	_	_	
60-10	10455-10460	sunit	_	_	_	
60-11	10460-10461	=	_	_	_	
60-12	10461-10464	512	_	_	_	
60-13	10464-10465	,	_	_	_	
60-14	10465-10471	swidth	_	_	_	
60-15	10471-10472	=	_	_	_	
60-16	10472-10476	3072	_	_	_	
60-17	10477-10478	/	_	_	_	
60-18	10478-10481	dev	_	_	_	
60-19	10481-10482	/	_	_	_	
60-20	10482-10490	whatever	_	_	_	
60-21	10491-10496	mount	_	_	_	
60-22	10497-10498	-	_	_	_	
60-23	10498-10499	o	_	_	_	
60-24	10500-10507	remount	_	_	_	
60-25	10507-10508	,	_	_	_	
60-26	10508-10513	sunit	_	_	_	
60-27	10513-10514	=	_	_	_	
60-28	10514-10517	512	_	_	_	
60-29	10517-10518	,	_	_	_	
60-30	10518-10524	swidth	_	_	_	
60-31	10524-10525	=	_	_	_	
60-32	10525-10529	3072	_	_	_	
60-33	10530-10537	Further	_	_	_	
60-34	10538-10549	Information	_	_	_	
60-35	10550-10552	If	_	_	_	
60-36	10553-10556	you	_	_	_	
60-37	10557-10560	are	_	_	_	
60-38	10561-10567	having	_	_	_	
60-39	10568-10575	trouble	_	_	_	
60-40	10576-10584	figuring	_	_	_	
60-41	10585-10589	this	_	_	_	
60-42	10590-10593	out	_	_	_	
60-43	10594-10595	(	_	_	_	
60-44	10595-10597	as	_	_	_	
60-45	10598-10599	I	_	_	_	
60-46	10600-10603	did	_	_	_	
60-47	10604-10606	at	_	_	_	
60-48	10607-10612	first	_	_	_	
60-49	10612-10613	)	_	_	_	
60-50	10613-10614	,	_	_	_	
60-51	10615-10619	here	_	_	_	
60-52	10620-10622	is	_	_	_	
60-53	10623-10624	a	_	_	_	
60-54	10625-10631	useful	_	_	_	
60-55	10632-10636	bash	_	_	_	
60-56	10637-10643	script	_	_	_	
60-57	10644-10646	to	_	_	_	
60-58	10647-10651	help	_	_	_	
60-59	10652-10655	you	_	_	_	
60-60	10655-10656	.	_	_	_	

#Text=It only requires that you have the "bc" bash calculator program installed.
61-1	10657-10659	It	_	_	_	
61-2	10660-10664	only	_	_	_	
61-3	10665-10673	requires	_	_	_	
61-4	10674-10678	that	_	_	_	
61-5	10679-10682	you	_	_	_	
61-6	10683-10687	have	_	_	_	
61-7	10688-10691	the	_	_	_	
61-8	10692-10693	"	_	_	_	
61-9	10693-10695	bc	_	_	_	
61-10	10695-10696	"	_	_	_	
61-11	10697-10701	bash	_	_	_	
61-12	10702-10712	calculator	_	_	_	
61-13	10713-10720	program	_	_	_	
61-14	10721-10730	installed	_	_	_	
61-15	10730-10731	.	_	_	_	

#Text=To get it in Ubuntu, use "sudo apt-get install bc".
62-1	10732-10734	To	_	_	_	
62-2	10735-10738	get	_	_	_	
62-3	10739-10741	it	_	_	_	
62-4	10742-10744	in	_	_	_	
62-5	10745-10751	Ubuntu	_	_	_	
62-6	10751-10752	,	_	_	_	
62-7	10753-10756	use	_	_	_	
62-8	10757-10758	"	_	_	_	
62-9	10758-10762	sudo	_	_	_	
62-10	10763-10770	apt-get	_	_	_	
62-11	10771-10778	install	_	_	_	
62-12	10779-10781	bc	_	_	_	
62-13	10781-10782	"	_	_	_	
62-14	10782-10783	.	_	_	_	

#Text=Put the following in a text editor, and chmod +x it, tweak values to match your system and run.
#Text=#!
63-1	10784-10787	Put	_	_	_	
63-2	10788-10791	the	_	_	_	
63-3	10792-10801	following	_	_	_	
63-4	10802-10804	in	_	_	_	
63-5	10805-10806	a	_	_	_	
63-6	10807-10811	text	_	_	_	
63-7	10812-10818	editor	_	_	_	
63-8	10818-10819	,	_	_	_	
63-9	10820-10823	and	_	_	_	
63-10	10824-10829	chmod	_	_	_	
63-11	10830-10831	+	_	_	_	
63-12	10831-10832	x	_	_	_	
63-13	10833-10835	it	_	_	_	
63-14	10835-10836	,	_	_	_	
63-15	10837-10842	tweak	_	_	_	
63-16	10843-10849	values	_	_	_	
63-17	10850-10852	to	_	_	_	
63-18	10853-10858	match	_	_	_	
63-19	10859-10863	your	_	_	_	
63-20	10864-10870	system	_	_	_	
63-21	10871-10874	and	_	_	_	
63-22	10875-10878	run	_	_	_	
63-23	10878-10879	.	_	_	_	
63-24	10880-10881	#	_	_	_	
63-25	10881-10882	!	_	_	_	

#Text=/bin/bash
#Text=BLOCKSIZE=4096 # Make sure this is in bytes
#Text=CHUNKSIZE=256
#Text=# Make sure this is in KiB
#Text=NUMSPINDLES=8
#Text=RAID_TYPE=6
#Text=RAID_DEVICE_NAME="/dev/md0" # Specify device name for your RAID device
#Text=FSLABEL="mythtv" # specify filesystem label for generating mkfs line here
#Text=case "$RAID_TYPE" in
#Text=RAID_DISKS=${NUMSPINDLES};
#Text=RAID_DISKS=${NUMSPINDLES};
#Text=10)
#Text=RAID_DISKS=${NUMSPINDLES};
#Text=RAID_DISKS=`echo "${NUMSPINDLES} - 1" | bc`;
#Text=RAID_DISKS=`echo "${NUMSPINDLES} - 2" | bc`;
#Text=echo "Please specify RAID_TYPE as one of: 0, 1, 10, 5, or 6."
#Text=exit
#Text=esac
#Text=SUNIT=`echo "${CHUNKSIZE} * 1024 / 512" | bc`
#Text=SWIDTH=`echo "$RAID_DISKS * ${SUNIT}" | bc`
#Text=echo "System blocksize=${BLOCKSIZE}"
#Text=echo "Chunk Size=${CHUNKSIZE} KiB"
#Text=echo "NumSpindles=${NUMSPINDLES}"
#Text=echo "RAID Type=${RAID_TYPE}"
#Text=echo "RAID Disks (usable for data)=${RAID_DISKS}"
#Text=echo "Calculated values:"
#Text=echo "Stripe Unit=${SUNIT}"
#Text=echo -e "Stripe Width=${SWIDTH}\\n"
#Text=echo "mkfs line:"
#Text=echo -e "mkfs.xfs -b size=${BLOCKSIZE} -d sunit=${SUNIT},swidth=${SWIDTH} -L ${FSLABEL} ${RAID_DEVICE_NAME}\\n"
#Text=echo "mount line:"
#Text=echo -e "mount -o remount,sunit=${SUNIT},swidth=${SWIDTH}\\n"
#Text=echo "Add these options to your /etc/fstab to make permanent:"
#Text=echo "sunit=${SUNIT},swidth=${SWIDTH}"
#Text=Please refer to the following references for more details and other useful tweaks to improve the performance of your XFS filesystem:
#Text=Filesystem Performance Tweaking with XFS
#Text=Optimizing XFS on RAID Arrays
#Text=Network File Systems
#Text=Disable NFS file attribute caching
#Text=if you are using SMB (not CIFS), you can try the ttl option using "-o ttl=100" which should set your timeout lower than the default.
64-1	10882-10883	/	_	_	_	
64-2	10883-10886	bin	_	_	_	
64-3	10886-10887	/	_	_	_	
64-4	10887-10891	bash	_	_	_	
64-5	10892-10901	BLOCKSIZE	_	_	_	
64-6	10901-10902	=	_	_	_	
64-7	10902-10906	4096	_	_	_	
64-8	10907-10908	#	_	_	_	
64-9	10909-10913	Make	_	_	_	
64-10	10914-10918	sure	_	_	_	
64-11	10919-10923	this	_	_	_	
64-12	10924-10926	is	_	_	_	
64-13	10927-10929	in	_	_	_	
64-14	10930-10935	bytes	_	_	_	
64-15	10936-10945	CHUNKSIZE	_	_	_	
64-16	10945-10946	=	_	_	_	
64-17	10946-10949	256	_	_	_	
64-18	10950-10951	#	_	_	_	
64-19	10952-10956	Make	_	_	_	
64-20	10957-10961	sure	_	_	_	
64-21	10962-10966	this	_	_	_	
64-22	10967-10969	is	_	_	_	
64-23	10970-10972	in	_	_	_	
64-24	10973-10976	KiB	_	_	_	
64-25	10977-10988	NUMSPINDLES	_	_	_	
64-26	10988-10989	=	_	_	_	
64-27	10989-10990	8	_	_	_	
64-28	10991-11000	RAID_TYPE	_	_	_	
64-29	11000-11001	=	_	_	_	
64-30	11001-11002	6	_	_	_	
64-31	11003-11019	RAID_DEVICE_NAME	_	_	_	
64-32	11019-11020	=	_	_	_	
64-33	11020-11021	"	_	_	_	
64-34	11021-11022	/	_	_	_	
64-35	11022-11025	dev	_	_	_	
64-36	11025-11026	/	_	_	_	
64-37	11026-11029	md0	_	_	_	
64-38	11029-11030	"	_	_	_	
64-39	11031-11032	#	_	_	_	
64-40	11033-11040	Specify	_	_	_	
64-41	11041-11047	device	_	_	_	
64-42	11048-11052	name	_	_	_	
64-43	11053-11056	for	_	_	_	
64-44	11057-11061	your	_	_	_	
64-45	11062-11066	RAID	_	_	_	
64-46	11067-11073	device	_	_	_	
64-47	11074-11081	FSLABEL	_	_	_	
64-48	11081-11082	=	_	_	_	
64-49	11082-11083	"	_	_	_	
64-50	11083-11089	mythtv	_	_	_	
64-51	11089-11090	"	_	_	_	
64-52	11091-11092	#	_	_	_	
64-53	11093-11100	specify	_	_	_	
64-54	11101-11111	filesystem	_	_	_	
64-55	11112-11117	label	_	_	_	
64-56	11118-11121	for	_	_	_	
64-57	11122-11132	generating	_	_	_	
64-58	11133-11137	mkfs	_	_	_	
64-59	11138-11142	line	_	_	_	
64-60	11143-11147	here	_	_	_	
64-61	11148-11152	case	_	_	_	
64-62	11153-11154	"	_	_	_	
64-63	11154-11155	$	_	_	_	
64-64	11155-11164	RAID_TYPE	_	_	_	
64-65	11164-11165	"	_	_	_	
64-66	11166-11168	in	_	_	_	
64-67	11169-11179	RAID_DISKS	_	_	_	
64-68	11179-11180	=	_	_	_	
64-69	11180-11181	$	_	_	_	
64-70	11181-11182	{	_	_	_	
64-71	11182-11193	NUMSPINDLES	_	_	_	
64-72	11193-11194	}	_	_	_	
64-73	11194-11195	;	_	_	_	
64-74	11196-11206	RAID_DISKS	_	_	_	
64-75	11206-11207	=	_	_	_	
64-76	11207-11208	$	_	_	_	
64-77	11208-11209	{	_	_	_	
64-78	11209-11220	NUMSPINDLES	_	_	_	
64-79	11220-11221	}	_	_	_	
64-80	11221-11222	;	_	_	_	
64-81	11223-11225	10	_	_	_	
64-82	11225-11226	)	_	_	_	
64-83	11227-11237	RAID_DISKS	_	_	_	
64-84	11237-11238	=	_	_	_	
64-85	11238-11239	$	_	_	_	
64-86	11239-11240	{	_	_	_	
64-87	11240-11251	NUMSPINDLES	_	_	_	
64-88	11251-11252	}	_	_	_	
64-89	11252-11253	;	_	_	_	
64-90	11254-11264	RAID_DISKS	_	_	_	
64-91	11264-11265	=	_	_	_	
64-92	11265-11266	`	_	_	_	
64-93	11266-11270	echo	_	_	_	
64-94	11271-11272	"	_	_	_	
64-95	11272-11273	$	_	_	_	
64-96	11273-11274	{	_	_	_	
64-97	11274-11285	NUMSPINDLES	_	_	_	
64-98	11285-11286	}	_	_	_	
64-99	11287-11288	-	_	_	_	
64-100	11289-11290	1	_	_	_	
64-101	11290-11291	"	_	_	_	
64-102	11292-11293	|	_	_	_	
64-103	11294-11296	bc	_	_	_	
64-104	11296-11297	`	_	_	_	
64-105	11297-11298	;	_	_	_	
64-106	11299-11309	RAID_DISKS	_	_	_	
64-107	11309-11310	=	_	_	_	
64-108	11310-11311	`	_	_	_	
64-109	11311-11315	echo	_	_	_	
64-110	11316-11317	"	_	_	_	
64-111	11317-11318	$	_	_	_	
64-112	11318-11319	{	_	_	_	
64-113	11319-11330	NUMSPINDLES	_	_	_	
64-114	11330-11331	}	_	_	_	
64-115	11332-11333	-	_	_	_	
64-116	11334-11335	2	_	_	_	
64-117	11335-11336	"	_	_	_	
64-118	11337-11338	|	_	_	_	
64-119	11339-11341	bc	_	_	_	
64-120	11341-11342	`	_	_	_	
64-121	11342-11343	;	_	_	_	
64-122	11344-11348	echo	_	_	_	
64-123	11349-11350	"	_	_	_	
64-124	11350-11356	Please	_	_	_	
64-125	11357-11364	specify	_	_	_	
64-126	11365-11374	RAID_TYPE	_	_	_	
64-127	11375-11377	as	_	_	_	
64-128	11378-11381	one	_	_	_	
64-129	11382-11384	of	_	_	_	
64-130	11384-11385	:	_	_	_	
64-131	11386-11387	0	_	_	_	
64-132	11387-11388	,	_	_	_	
64-133	11389-11390	1	_	_	_	
64-134	11390-11391	,	_	_	_	
64-135	11392-11394	10	_	_	_	
64-136	11394-11395	,	_	_	_	
64-137	11396-11397	5	_	_	_	
64-138	11397-11398	,	_	_	_	
64-139	11399-11401	or	_	_	_	
64-140	11402-11403	6	_	_	_	
64-141	11403-11404	.	_	_	_	
64-142	11404-11405	"	_	_	_	
64-143	11406-11410	exit	_	_	_	
64-144	11411-11415	esac	_	_	_	
64-145	11416-11421	SUNIT	_	_	_	
64-146	11421-11422	=	_	_	_	
64-147	11422-11423	`	_	_	_	
64-148	11423-11427	echo	_	_	_	
64-149	11428-11429	"	_	_	_	
64-150	11429-11430	$	_	_	_	
64-151	11430-11431	{	_	_	_	
64-152	11431-11440	CHUNKSIZE	_	_	_	
64-153	11440-11441	}	_	_	_	
64-154	11442-11443	*	_	_	_	
64-155	11444-11448	1024	_	_	_	
64-156	11449-11450	/	_	_	_	
64-157	11451-11454	512	_	_	_	
64-158	11454-11455	"	_	_	_	
64-159	11456-11457	|	_	_	_	
64-160	11458-11460	bc	_	_	_	
64-161	11460-11461	`	_	_	_	
64-162	11462-11468	SWIDTH	_	_	_	
64-163	11468-11469	=	_	_	_	
64-164	11469-11470	`	_	_	_	
64-165	11470-11474	echo	_	_	_	
64-166	11475-11476	"	_	_	_	
64-167	11476-11477	$	_	_	_	
64-168	11477-11487	RAID_DISKS	_	_	_	
64-169	11488-11489	*	_	_	_	
64-170	11490-11491	$	_	_	_	
64-171	11491-11492	{	_	_	_	
64-172	11492-11497	SUNIT	_	_	_	
64-173	11497-11498	}	_	_	_	
64-174	11498-11499	"	_	_	_	
64-175	11500-11501	|	_	_	_	
64-176	11502-11504	bc	_	_	_	
64-177	11504-11505	`	_	_	_	
64-178	11506-11510	echo	_	_	_	
64-179	11511-11512	"	_	_	_	
64-180	11512-11518	System	_	_	_	
64-181	11519-11528	blocksize	_	_	_	
64-182	11528-11529	=	_	_	_	
64-183	11529-11530	$	_	_	_	
64-184	11530-11531	{	_	_	_	
64-185	11531-11540	BLOCKSIZE	_	_	_	
64-186	11540-11541	}	_	_	_	
64-187	11541-11542	"	_	_	_	
64-188	11543-11547	echo	_	_	_	
64-189	11548-11549	"	_	_	_	
64-190	11549-11554	Chunk	_	_	_	
64-191	11555-11559	Size	_	_	_	
64-192	11559-11560	=	_	_	_	
64-193	11560-11561	$	_	_	_	
64-194	11561-11562	{	_	_	_	
64-195	11562-11571	CHUNKSIZE	_	_	_	
64-196	11571-11572	}	_	_	_	
64-197	11573-11576	KiB	_	_	_	
64-198	11576-11577	"	_	_	_	
64-199	11578-11582	echo	_	_	_	
64-200	11583-11584	"	_	_	_	
64-201	11584-11595	NumSpindles	_	_	_	
64-202	11595-11596	=	_	_	_	
64-203	11596-11597	$	_	_	_	
64-204	11597-11598	{	_	_	_	
64-205	11598-11609	NUMSPINDLES	_	_	_	
64-206	11609-11610	}	_	_	_	
64-207	11610-11611	"	_	_	_	
64-208	11612-11616	echo	_	_	_	
64-209	11617-11618	"	_	_	_	
64-210	11618-11622	RAID	_	_	_	
64-211	11623-11627	Type	_	_	_	
64-212	11627-11628	=	_	_	_	
64-213	11628-11629	$	_	_	_	
64-214	11629-11630	{	_	_	_	
64-215	11630-11639	RAID_TYPE	_	_	_	
64-216	11639-11640	}	_	_	_	
64-217	11640-11641	"	_	_	_	
64-218	11642-11646	echo	_	_	_	
64-219	11647-11648	"	_	_	_	
64-220	11648-11652	RAID	_	_	_	
64-221	11653-11658	Disks	_	_	_	
64-222	11659-11660	(	_	_	_	
64-223	11660-11666	usable	_	_	_	
64-224	11667-11670	for	_	_	_	
64-225	11671-11675	data	_	_	_	
64-226	11675-11676	)	_	_	_	
64-227	11676-11677	=	_	_	_	
64-228	11677-11678	$	_	_	_	
64-229	11678-11679	{	_	_	_	
64-230	11679-11689	RAID_DISKS	_	_	_	
64-231	11689-11690	}	_	_	_	
64-232	11690-11691	"	_	_	_	
64-233	11692-11696	echo	_	_	_	
64-234	11697-11698	"	_	_	_	
64-235	11698-11708	Calculated	_	_	_	
64-236	11709-11715	values	_	_	_	
64-237	11715-11716	:	_	_	_	
64-238	11716-11717	"	_	_	_	
64-239	11718-11722	echo	_	_	_	
64-240	11723-11724	"	_	_	_	
64-241	11724-11730	Stripe	_	_	_	
64-242	11731-11735	Unit	_	_	_	
64-243	11735-11736	=	_	_	_	
64-244	11736-11737	$	_	_	_	
64-245	11737-11738	{	_	_	_	
64-246	11738-11743	SUNIT	_	_	_	
64-247	11743-11744	}	_	_	_	
64-248	11744-11745	"	_	_	_	
64-249	11746-11750	echo	_	_	_	
64-250	11751-11752	-	_	_	_	
64-251	11752-11753	e	_	_	_	
64-252	11754-11755	"	_	_	_	
64-253	11755-11761	Stripe	_	_	_	
64-254	11762-11767	Width	_	_	_	
64-255	11767-11768	=	_	_	_	
64-256	11768-11769	$	_	_	_	
64-257	11769-11770	{	_	_	_	
64-258	11770-11776	SWIDTH	_	_	_	
64-259	11776-11777	}	_	_	_	
64-260	11777-11778	\	_	_	_	
64-261	11778-11779	n	_	_	_	
64-262	11779-11780	"	_	_	_	
64-263	11781-11785	echo	_	_	_	
64-264	11786-11787	"	_	_	_	
64-265	11787-11791	mkfs	_	_	_	
64-266	11792-11796	line	_	_	_	
64-267	11796-11797	:	_	_	_	
64-268	11797-11798	"	_	_	_	
64-269	11799-11803	echo	_	_	_	
64-270	11804-11805	-	_	_	_	
64-271	11805-11806	e	_	_	_	
64-272	11807-11808	"	_	_	_	
64-273	11808-11816	mkfs.xfs	_	_	_	
64-274	11817-11818	-	_	_	_	
64-275	11818-11819	b	_	_	_	
64-276	11820-11824	size	_	_	_	
64-277	11824-11825	=	_	_	_	
64-278	11825-11826	$	_	_	_	
64-279	11826-11827	{	_	_	_	
64-280	11827-11836	BLOCKSIZE	_	_	_	
64-281	11836-11837	}	_	_	_	
64-282	11838-11839	-	_	_	_	
64-283	11839-11840	d	_	_	_	
64-284	11841-11846	sunit	_	_	_	
64-285	11846-11847	=	_	_	_	
64-286	11847-11848	$	_	_	_	
64-287	11848-11849	{	_	_	_	
64-288	11849-11854	SUNIT	_	_	_	
64-289	11854-11855	}	_	_	_	
64-290	11855-11856	,	_	_	_	
64-291	11856-11862	swidth	_	_	_	
64-292	11862-11863	=	_	_	_	
64-293	11863-11864	$	_	_	_	
64-294	11864-11865	{	_	_	_	
64-295	11865-11871	SWIDTH	_	_	_	
64-296	11871-11872	}	_	_	_	
64-297	11873-11874	-	_	_	_	
64-298	11874-11875	L	_	_	_	
64-299	11876-11877	$	_	_	_	
64-300	11877-11878	{	_	_	_	
64-301	11878-11885	FSLABEL	_	_	_	
64-302	11885-11886	}	_	_	_	
64-303	11887-11888	$	_	_	_	
64-304	11888-11889	{	_	_	_	
64-305	11889-11905	RAID_DEVICE_NAME	_	_	_	
64-306	11905-11906	}	_	_	_	
64-307	11906-11907	\	_	_	_	
64-308	11907-11908	n	_	_	_	
64-309	11908-11909	"	_	_	_	
64-310	11910-11914	echo	_	_	_	
64-311	11915-11916	"	_	_	_	
64-312	11916-11921	mount	_	_	_	
64-313	11922-11926	line	_	_	_	
64-314	11926-11927	:	_	_	_	
64-315	11927-11928	"	_	_	_	
64-316	11929-11933	echo	_	_	_	
64-317	11934-11935	-	_	_	_	
64-318	11935-11936	e	_	_	_	
64-319	11937-11938	"	_	_	_	
64-320	11938-11943	mount	_	_	_	
64-321	11944-11945	-	_	_	_	
64-322	11945-11946	o	_	_	_	
64-323	11947-11954	remount	_	_	_	
64-324	11954-11955	,	_	_	_	
64-325	11955-11960	sunit	_	_	_	
64-326	11960-11961	=	_	_	_	
64-327	11961-11962	$	_	_	_	
64-328	11962-11963	{	_	_	_	
64-329	11963-11968	SUNIT	_	_	_	
64-330	11968-11969	}	_	_	_	
64-331	11969-11970	,	_	_	_	
64-332	11970-11976	swidth	_	_	_	
64-333	11976-11977	=	_	_	_	
64-334	11977-11978	$	_	_	_	
64-335	11978-11979	{	_	_	_	
64-336	11979-11985	SWIDTH	_	_	_	
64-337	11985-11986	}	_	_	_	
64-338	11986-11987	\	_	_	_	
64-339	11987-11988	n	_	_	_	
64-340	11988-11989	"	_	_	_	
64-341	11990-11994	echo	_	_	_	
64-342	11995-11996	"	_	_	_	
64-343	11996-11999	Add	_	_	_	
64-344	12000-12005	these	_	_	_	
64-345	12006-12013	options	_	_	_	
64-346	12014-12016	to	_	_	_	
64-347	12017-12021	your	_	_	_	
64-348	12022-12023	/	_	_	_	
64-349	12023-12026	etc	_	_	_	
64-350	12026-12027	/	_	_	_	
64-351	12027-12032	fstab	_	_	_	
64-352	12033-12035	to	_	_	_	
64-353	12036-12040	make	_	_	_	
64-354	12041-12050	permanent	_	_	_	
64-355	12050-12051	:	_	_	_	
64-356	12051-12052	"	_	_	_	
64-357	12053-12057	echo	_	_	_	
64-358	12058-12059	"	_	_	_	
64-359	12059-12064	sunit	_	_	_	
64-360	12064-12065	=	_	_	_	
64-361	12065-12066	$	_	_	_	
64-362	12066-12067	{	_	_	_	
64-363	12067-12072	SUNIT	_	_	_	
64-364	12072-12073	}	_	_	_	
64-365	12073-12074	,	_	_	_	
64-366	12074-12080	swidth	_	_	_	
64-367	12080-12081	=	_	_	_	
64-368	12081-12082	$	_	_	_	
64-369	12082-12083	{	_	_	_	
64-370	12083-12089	SWIDTH	_	_	_	
64-371	12089-12090	}	_	_	_	
64-372	12090-12091	"	_	_	_	
64-373	12092-12098	Please	_	_	_	
64-374	12099-12104	refer	_	_	_	
64-375	12105-12107	to	_	_	_	
64-376	12108-12111	the	_	_	_	
64-377	12112-12121	following	_	_	_	
64-378	12122-12132	references	_	_	_	
64-379	12133-12136	for	_	_	_	
64-380	12137-12141	more	_	_	_	
64-381	12142-12149	details	_	_	_	
64-382	12150-12153	and	_	_	_	
64-383	12154-12159	other	_	_	_	
64-384	12160-12166	useful	_	_	_	
64-385	12167-12173	tweaks	_	_	_	
64-386	12174-12176	to	_	_	_	
64-387	12177-12184	improve	_	_	_	
64-388	12185-12188	the	_	_	_	
64-389	12189-12200	performance	_	_	_	
64-390	12201-12203	of	_	_	_	
64-391	12204-12208	your	_	_	_	
64-392	12209-12212	XFS	_	_	_	
64-393	12213-12223	filesystem	_	_	_	
64-394	12223-12224	:	_	_	_	
64-395	12225-12235	Filesystem	_	_	_	
64-396	12236-12247	Performance	_	_	_	
64-397	12248-12256	Tweaking	_	_	_	
64-398	12257-12261	with	_	_	_	
64-399	12262-12265	XFS	_	_	_	
64-400	12266-12276	Optimizing	_	_	_	
64-401	12277-12280	XFS	_	_	_	
64-402	12281-12283	on	_	_	_	
64-403	12284-12288	RAID	_	_	_	
64-404	12289-12295	Arrays	_	_	_	
64-405	12296-12303	Network	_	_	_	
64-406	12304-12308	File	_	_	_	
64-407	12309-12316	Systems	_	_	_	
64-408	12317-12324	Disable	_	_	_	
64-409	12325-12328	NFS	_	_	_	
64-410	12329-12333	file	_	_	_	
64-411	12334-12343	attribute	_	_	_	
64-412	12344-12351	caching	_	_	_	
64-413	12352-12354	if	_	_	_	
64-414	12355-12358	you	_	_	_	
64-415	12359-12362	are	_	_	_	
64-416	12363-12368	using	_	_	_	
64-417	12369-12372	SMB	_	_	_	
64-418	12373-12374	(	_	_	_	
64-419	12374-12377	not	_	_	_	
64-420	12378-12382	CIFS	_	_	_	
64-421	12382-12383	)	_	_	_	
64-422	12383-12384	,	_	_	_	
64-423	12385-12388	you	_	_	_	
64-424	12389-12392	can	_	_	_	
64-425	12393-12396	try	_	_	_	
64-426	12397-12400	the	_	_	_	
64-427	12401-12404	ttl	_	_	_	
64-428	12405-12411	option	_	_	_	
64-429	12412-12417	using	_	_	_	
64-430	12418-12419	"	_	_	_	
64-431	12419-12420	-	_	_	_	
64-432	12420-12421	o	_	_	_	
64-433	12422-12425	ttl	_	_	_	
64-434	12425-12426	=	_	_	_	
64-435	12426-12429	100	_	_	_	
64-436	12429-12430	"	_	_	_	
64-437	12431-12436	which	_	_	_	
64-438	12437-12443	should	_	_	_	
64-439	12444-12447	set	_	_	_	
64-440	12448-12452	your	_	_	_	
64-441	12453-12460	timeout	_	_	_	
64-442	12461-12466	lower	_	_	_	
64-443	12467-12471	than	_	_	_	
64-444	12472-12475	the	_	_	_	
64-445	12476-12483	default	_	_	_	
64-446	12483-12484	.	_	_	_	

#Text=The default is supposed to be 1000ms which equals 1 second, but one user has reported that setting ttl=100 corrected the issue for him, so SMB users can give it a try.
65-1	12485-12488	The	_	_	_	
65-2	12489-12496	default	_	_	_	
65-3	12497-12499	is	_	_	_	
65-4	12500-12508	supposed	_	_	_	
65-5	12509-12511	to	_	_	_	
65-6	12512-12514	be	_	_	_	
65-7	12515-12521	1000ms	_	_	_	
65-8	12522-12527	which	_	_	_	
65-9	12528-12534	equals	_	_	_	
65-10	12535-12536	1	_	_	_	
65-11	12537-12543	second	_	_	_	
65-12	12543-12544	,	_	_	_	
65-13	12545-12548	but	_	_	_	
65-14	12549-12552	one	_	_	_	
65-15	12553-12557	user	_	_	_	
65-16	12558-12561	has	_	_	_	
65-17	12562-12570	reported	_	_	_	
65-18	12571-12575	that	_	_	_	
65-19	12576-12583	setting	_	_	_	
65-20	12584-12587	ttl	_	_	_	
65-21	12587-12588	=	_	_	_	
65-22	12588-12591	100	_	_	_	
65-23	12592-12601	corrected	_	_	_	
65-24	12602-12605	the	_	_	_	
65-25	12606-12611	issue	_	_	_	
65-26	12612-12615	for	_	_	_	
65-27	12616-12619	him	_	_	_	
65-28	12619-12620	,	_	_	_	
65-29	12621-12623	so	_	_	_	
65-30	12624-12627	SMB	_	_	_	
65-31	12628-12633	users	_	_	_	
65-32	12634-12637	can	_	_	_	
65-33	12638-12642	give	_	_	_	
65-34	12643-12645	it	_	_	_	
65-35	12646-12647	a	_	_	_	
65-36	12648-12651	try	_	_	_	
65-37	12651-12652	.	_	_	_	

#Text=NFS servers
#Text=Ensure that your NFS server is running in 'async' mode (configured in /etc/exports).
66-1	12653-12656	NFS	_	_	_	
66-2	12657-12664	servers	_	_	_	
66-3	12665-12671	Ensure	_	_	_	
66-4	12672-12676	that	_	_	_	
66-5	12677-12681	your	_	_	_	
66-6	12682-12685	NFS	_	_	_	
66-7	12686-12692	server	_	_	_	
66-8	12693-12695	is	_	_	_	
66-9	12696-12703	running	_	_	_	
66-10	12704-12706	in	_	_	_	
66-11	12707-12708	'	_	_	_	
66-12	12708-12713	async	_	_	_	
66-13	12713-12714	'	_	_	_	
66-14	12715-12719	mode	_	_	_	
66-15	12720-12721	(	_	_	_	
66-16	12721-12731	configured	_	_	_	
66-17	12732-12734	in	_	_	_	
66-18	12735-12736	/	_	_	_	
66-19	12736-12739	etc	_	_	_	
66-20	12739-12740	/	_	_	_	
66-21	12740-12747	exports	_	_	_	
66-22	12747-12748	)	_	_	_	
66-23	12748-12749	.	_	_	_	

#Text=The default for many NFS servers is 'async', but recent versions of debian now default to 'sync', which can result in very low throughput and the dreaded "TFW, Error: Write() -- IOBOUND" errors.
67-1	12750-12753	The	_	_	_	
67-2	12754-12761	default	_	_	_	
67-3	12762-12765	for	_	_	_	
67-4	12766-12770	many	_	_	_	
67-5	12771-12774	NFS	_	_	_	
67-6	12775-12782	servers	_	_	_	
67-7	12783-12785	is	_	_	_	
67-8	12786-12787	'	_	_	_	
67-9	12787-12792	async	_	_	_	
67-10	12792-12793	'	_	_	_	
67-11	12793-12794	,	_	_	_	
67-12	12795-12798	but	_	_	_	
67-13	12799-12805	recent	_	_	_	
67-14	12806-12814	versions	_	_	_	
67-15	12815-12817	of	_	_	_	
67-16	12818-12824	debian	_	_	_	
67-17	12825-12828	now	_	_	_	
67-18	12829-12836	default	_	_	_	
67-19	12837-12839	to	_	_	_	
67-20	12840-12841	'	_	_	_	
67-21	12841-12845	sync	_	_	_	
67-22	12845-12846	'	_	_	_	
67-23	12846-12847	,	_	_	_	
67-24	12848-12853	which	_	_	_	
67-25	12854-12857	can	_	_	_	
67-26	12858-12864	result	_	_	_	
67-27	12865-12867	in	_	_	_	
67-28	12868-12872	very	_	_	_	
67-29	12873-12876	low	_	_	_	
67-30	12877-12887	throughput	_	_	_	
67-31	12888-12891	and	_	_	_	
67-32	12892-12895	the	_	_	_	
67-33	12896-12903	dreaded	_	_	_	
67-34	12904-12905	"	_	_	_	
67-35	12905-12908	TFW	_	_	_	
67-36	12908-12909	,	_	_	_	
67-37	12910-12915	Error	_	_	_	
67-38	12915-12916	:	_	_	_	
67-39	12917-12922	Write	_	_	_	
67-40	12922-12923	(	_	_	_	
67-41	12923-12924	)	_	_	_	
67-42	12925-12926	-	_	_	_	
67-43	12926-12927	-	_	_	_	
67-44	12928-12935	IOBOUND	_	_	_	
67-45	12935-12936	"	_	_	_	
67-46	12937-12943	errors	_	_	_	
67-47	12943-12944	.	_	_	_	

#Text=Example of setting async in /etc/exports:
#Text=/mnt/store
#Text=192.168.1.3/32(rw,async,udp)
#Text=There are a few other NFS mount options that can help, such as "intr", "nfsvers=3", "actimeo=0" , "noatime" and "tcp"/"udp".
68-1	12945-12952	Example	_	_	_	
68-2	12953-12955	of	_	_	_	
68-3	12956-12963	setting	_	_	_	
68-4	12964-12969	async	_	_	_	
68-5	12970-12972	in	_	_	_	
68-6	12973-12974	/	_	_	_	
68-7	12974-12977	etc	_	_	_	
68-8	12977-12978	/	_	_	_	
68-9	12978-12985	exports	_	_	_	
68-10	12985-12986	:	_	_	_	
68-11	12987-12988	/	_	_	_	
68-12	12988-12991	mnt	_	_	_	
68-13	12991-12992	/	_	_	_	
68-14	12992-12997	store	_	_	_	
68-15	12998-13009	192.168.1.3	_	_	_	
68-16	13009-13010	/	_	_	_	
68-17	13010-13012	32	_	_	_	
68-18	13012-13013	(	_	_	_	
68-19	13013-13015	rw	_	_	_	
68-20	13015-13016	,	_	_	_	
68-21	13016-13021	async	_	_	_	
68-22	13021-13022	,	_	_	_	
68-23	13022-13025	udp	_	_	_	
68-24	13025-13026	)	_	_	_	
68-25	13027-13032	There	_	_	_	
68-26	13033-13036	are	_	_	_	
68-27	13037-13038	a	_	_	_	
68-28	13039-13042	few	_	_	_	
68-29	13043-13048	other	_	_	_	
68-30	13049-13052	NFS	_	_	_	
68-31	13053-13058	mount	_	_	_	
68-32	13059-13066	options	_	_	_	
68-33	13067-13071	that	_	_	_	
68-34	13072-13075	can	_	_	_	
68-35	13076-13080	help	_	_	_	
68-36	13080-13081	,	_	_	_	
68-37	13082-13086	such	_	_	_	
68-38	13087-13089	as	_	_	_	
68-39	13090-13091	"	_	_	_	
68-40	13091-13095	intr	_	_	_	
68-41	13095-13096	"	_	_	_	
68-42	13096-13097	,	_	_	_	
68-43	13098-13099	"	_	_	_	
68-44	13099-13106	nfsvers	_	_	_	
68-45	13106-13107	=	_	_	_	
68-46	13107-13108	3	_	_	_	
68-47	13108-13109	"	_	_	_	
68-48	13109-13110	,	_	_	_	
68-49	13111-13112	"	_	_	_	
68-50	13112-13119	actimeo	_	_	_	
68-51	13119-13120	=	_	_	_	
68-52	13120-13121	0	_	_	_	
68-53	13121-13122	"	_	_	_	
68-54	13123-13124	,	_	_	_	
68-55	13125-13126	"	_	_	_	
68-56	13126-13133	noatime	_	_	_	
68-57	13133-13134	"	_	_	_	
68-58	13135-13138	and	_	_	_	
68-59	13139-13140	"	_	_	_	
68-60	13140-13143	tcp	_	_	_	
68-61	13143-13144	"	_	_	_	
68-62	13144-13145	/	_	_	_	
68-63	13145-13146	"	_	_	_	
68-64	13146-13149	udp	_	_	_	
68-65	13149-13150	"	_	_	_	
68-66	13150-13151	.	_	_	_	

#Text=You can read the man pages for a more detailed description, but suggestions are below.
#Text=nfsvers=3 - This tells the client to use NFS v3, which is better than NFS v2.
69-1	13152-13155	You	_	_	_	
69-2	13156-13159	can	_	_	_	
69-3	13160-13164	read	_	_	_	
69-4	13165-13168	the	_	_	_	
69-5	13169-13172	man	_	_	_	
69-6	13173-13178	pages	_	_	_	
69-7	13179-13182	for	_	_	_	
69-8	13183-13184	a	_	_	_	
69-9	13185-13189	more	_	_	_	
69-10	13190-13198	detailed	_	_	_	
69-11	13199-13210	description	_	_	_	
69-12	13210-13211	,	_	_	_	
69-13	13212-13215	but	_	_	_	
69-14	13216-13227	suggestions	_	_	_	
69-15	13228-13231	are	_	_	_	
69-16	13232-13237	below	_	_	_	
69-17	13237-13238	.	_	_	_	
69-18	13239-13246	nfsvers	_	_	_	
69-19	13246-13247	=	_	_	_	
69-20	13247-13248	3	_	_	_	
69-21	13249-13250	-	_	_	_	
69-22	13251-13255	This	_	_	_	
69-23	13256-13261	tells	_	_	_	
69-24	13262-13265	the	_	_	_	
69-25	13266-13272	client	_	_	_	
69-26	13273-13275	to	_	_	_	
69-27	13276-13279	use	_	_	_	
69-28	13280-13283	NFS	_	_	_	
69-29	13284-13286	v3	_	_	_	
69-30	13286-13287	,	_	_	_	
69-31	13288-13293	which	_	_	_	
69-32	13294-13296	is	_	_	_	
69-33	13297-13303	better	_	_	_	
69-34	13304-13308	than	_	_	_	
69-35	13309-13312	NFS	_	_	_	
69-36	13313-13315	v2	_	_	_	
69-37	13315-13316	.	_	_	_	

#Text=Of course, the server has to also support it.
#Text=actimeo=0 - disable this attribute caching to allow the frontend to see updates from the backend quicker.
70-1	13317-13319	Of	_	_	_	
70-2	13320-13326	course	_	_	_	
70-3	13326-13327	,	_	_	_	
70-4	13328-13331	the	_	_	_	
70-5	13332-13338	server	_	_	_	
70-6	13339-13342	has	_	_	_	
70-7	13343-13345	to	_	_	_	
70-8	13346-13350	also	_	_	_	
70-9	13351-13358	support	_	_	_	
70-10	13359-13361	it	_	_	_	
70-11	13361-13362	.	_	_	_	
70-12	13363-13370	actimeo	_	_	_	
70-13	13370-13371	=	_	_	_	
70-14	13371-13372	0	_	_	_	
70-15	13373-13374	-	_	_	_	
70-16	13375-13382	disable	_	_	_	
70-17	13383-13387	this	_	_	_	
70-18	13388-13397	attribute	_	_	_	
70-19	13398-13405	caching	_	_	_	
70-20	13406-13408	to	_	_	_	
70-21	13409-13414	allow	_	_	_	
70-22	13415-13418	the	_	_	_	
70-23	13419-13427	frontend	_	_	_	
70-24	13428-13430	to	_	_	_	
70-25	13431-13434	see	_	_	_	
70-26	13435-13442	updates	_	_	_	
70-27	13443-13447	from	_	_	_	
70-28	13448-13451	the	_	_	_	
70-29	13452-13459	backend	_	_	_	
70-30	13460-13467	quicker	_	_	_	
70-31	13467-13468	.	_	_	_	

#Text=The problem has been seen where LiveTV fails to transition from one program to another.
71-1	13469-13472	The	_	_	_	
71-2	13473-13480	problem	_	_	_	
71-3	13481-13484	has	_	_	_	
71-4	13485-13489	been	_	_	_	
71-5	13490-13494	seen	_	_	_	
71-6	13495-13500	where	_	_	_	
71-7	13501-13507	LiveTV	_	_	_	
71-8	13508-13513	fails	_	_	_	
71-9	13514-13516	to	_	_	_	
71-10	13517-13527	transition	_	_	_	
71-11	13528-13532	from	_	_	_	
71-12	13533-13536	one	_	_	_	
71-13	13537-13544	program	_	_	_	
71-14	13545-13547	to	_	_	_	
71-15	13548-13555	another	_	_	_	
71-16	13555-13556	.	_	_	_	

#Text=The cache file attribute prevents the frontend from opening the new file promptly.
72-1	13557-13560	The	_	_	_	
72-2	13561-13566	cache	_	_	_	
72-3	13567-13571	file	_	_	_	
72-4	13572-13581	attribute	_	_	_	
72-5	13582-13590	prevents	_	_	_	
72-6	13591-13594	the	_	_	_	
72-7	13595-13603	frontend	_	_	_	
72-8	13604-13608	from	_	_	_	
72-9	13609-13616	opening	_	_	_	
72-10	13617-13620	the	_	_	_	
72-11	13621-13624	new	_	_	_	
72-12	13625-13629	file	_	_	_	
72-13	13630-13638	promptly	_	_	_	
72-14	13638-13639	.	_	_	_	

#Text=This also causes more load on the server if that is a issue.
#Text=tcp - This tells NFS to use TCP instead of UDP.
73-1	13640-13644	This	_	_	_	
73-2	13645-13649	also	_	_	_	
73-3	13650-13656	causes	_	_	_	
73-4	13657-13661	more	_	_	_	
73-5	13662-13666	load	_	_	_	
73-6	13667-13669	on	_	_	_	
73-7	13670-13673	the	_	_	_	
73-8	13674-13680	server	_	_	_	
73-9	13681-13683	if	_	_	_	
73-10	13684-13688	that	_	_	_	
73-11	13689-13691	is	_	_	_	
73-12	13692-13693	a	_	_	_	
73-13	13694-13699	issue	_	_	_	
73-14	13699-13700	.	_	_	_	
73-15	13701-13704	tcp	_	_	_	
73-16	13705-13706	-	_	_	_	
73-17	13707-13711	This	_	_	_	
73-18	13712-13717	tells	_	_	_	
73-19	13718-13721	NFS	_	_	_	
73-20	13722-13724	to	_	_	_	
73-21	13725-13728	use	_	_	_	
73-22	13729-13732	TCP	_	_	_	
73-23	13733-13740	instead	_	_	_	
73-24	13741-13743	of	_	_	_	
73-25	13744-13747	UDP	_	_	_	
73-26	13747-13748	.	_	_	_	

#Text=It has been reported to improve performance for some, but has also caused repeated 3-5 second filesystem freeze-ups for others.
74-1	13749-13751	It	_	_	_	
74-2	13752-13755	has	_	_	_	
74-3	13756-13760	been	_	_	_	
74-4	13761-13769	reported	_	_	_	
74-5	13770-13772	to	_	_	_	
74-6	13773-13780	improve	_	_	_	
74-7	13781-13792	performance	_	_	_	
74-8	13793-13796	for	_	_	_	
74-9	13797-13801	some	_	_	_	
74-10	13801-13802	,	_	_	_	
74-11	13803-13806	but	_	_	_	
74-12	13807-13810	has	_	_	_	
74-13	13811-13815	also	_	_	_	
74-14	13816-13822	caused	_	_	_	
74-15	13823-13831	repeated	_	_	_	
74-16	13832-13833	3	_	_	_	
74-17	13833-13834	-	_	_	_	
74-18	13834-13835	5	_	_	_	
74-19	13836-13842	second	_	_	_	
74-20	13843-13853	filesystem	_	_	_	
74-21	13854-13864	freeze-ups	_	_	_	
74-22	13865-13868	for	_	_	_	
74-23	13869-13875	others	_	_	_	
74-24	13875-13876	.	_	_	_	

#Text=If you have a network with only 1000-mbit clients or suffer performance problems with udp, you can try this.
75-1	13877-13879	If	_	_	_	
75-2	13880-13883	you	_	_	_	
75-3	13884-13888	have	_	_	_	
75-4	13889-13890	a	_	_	_	
75-5	13891-13898	network	_	_	_	
75-6	13899-13903	with	_	_	_	
75-7	13904-13908	only	_	_	_	
75-8	13909-13913	1000	_	_	_	
75-9	13913-13914	-	_	_	_	
75-10	13914-13918	mbit	_	_	_	
75-11	13919-13926	clients	_	_	_	
75-12	13927-13929	or	_	_	_	
75-13	13930-13936	suffer	_	_	_	
75-14	13937-13948	performance	_	_	_	
75-15	13949-13957	problems	_	_	_	
75-16	13958-13962	with	_	_	_	
75-17	13963-13966	udp	_	_	_	
75-18	13966-13967	,	_	_	_	
75-19	13968-13971	you	_	_	_	
75-20	13972-13975	can	_	_	_	
75-21	13976-13979	try	_	_	_	
75-22	13980-13984	this	_	_	_	
75-23	13984-13985	.	_	_	_	

#Text=Poor performance with tcp may be improved by setting rsize and wsize to appropriate values (usuall 32KB).
#Text=udp - This tell NFS to use UDP instead of TCP.
76-1	13986-13990	Poor	_	_	_	
76-2	13991-14002	performance	_	_	_	
76-3	14003-14007	with	_	_	_	
76-4	14008-14011	tcp	_	_	_	
76-5	14012-14015	may	_	_	_	
76-6	14016-14018	be	_	_	_	
76-7	14019-14027	improved	_	_	_	
76-8	14028-14030	by	_	_	_	
76-9	14031-14038	setting	_	_	_	
76-10	14039-14044	rsize	_	_	_	
76-11	14045-14048	and	_	_	_	
76-12	14049-14054	wsize	_	_	_	
76-13	14055-14057	to	_	_	_	
76-14	14058-14069	appropriate	_	_	_	
76-15	14070-14076	values	_	_	_	
76-16	14077-14078	(	_	_	_	
76-17	14078-14084	usuall	_	_	_	
76-18	14085-14089	32KB	_	_	_	
76-19	14089-14090	)	_	_	_	
76-20	14090-14091	.	_	_	_	
76-21	14092-14095	udp	_	_	_	
76-22	14096-14097	-	_	_	_	
76-23	14098-14102	This	_	_	_	
76-24	14103-14107	tell	_	_	_	
76-25	14108-14111	NFS	_	_	_	
76-26	14112-14114	to	_	_	_	
76-27	14115-14118	use	_	_	_	
76-28	14119-14122	UDP	_	_	_	
76-29	14123-14130	instead	_	_	_	
76-30	14131-14133	of	_	_	_	
76-31	14134-14137	TCP	_	_	_	
76-32	14137-14138	.	_	_	_	

#Text=This is the traditional mechanism for NFS to utilize.
77-1	14139-14143	This	_	_	_	
77-2	14144-14146	is	_	_	_	
77-3	14147-14150	the	_	_	_	
77-4	14151-14162	traditional	_	_	_	
77-5	14163-14172	mechanism	_	_	_	
77-6	14173-14176	for	_	_	_	
77-7	14177-14180	NFS	_	_	_	
77-8	14181-14183	to	_	_	_	
77-9	14184-14191	utilize	_	_	_	
77-10	14191-14192	.	_	_	_	

#Text=For networks containing wifi or 100-mbit clients this is probably the best option.
78-1	14193-14196	For	_	_	_	
78-2	14197-14205	networks	_	_	_	
78-3	14206-14216	containing	_	_	_	
78-4	14217-14221	wifi	_	_	_	
78-5	14222-14224	or	_	_	_	
78-6	14225-14228	100	_	_	_	
78-7	14228-14229	-	_	_	_	
78-8	14229-14233	mbit	_	_	_	
78-9	14234-14241	clients	_	_	_	
78-10	14242-14246	this	_	_	_	
78-11	14247-14249	is	_	_	_	
78-12	14250-14258	probably	_	_	_	
78-13	14259-14262	the	_	_	_	
78-14	14263-14267	best	_	_	_	
78-15	14268-14274	option	_	_	_	
78-16	14274-14275	.	_	_	_	

#Text=If you get video stuttering with either tcp or udp, try the other one.
#Text=rsize=32768,wsize=32768 - These tell your nfs client to use a particular block size, 32KB in this case.
79-1	14276-14278	If	_	_	_	
79-2	14279-14282	you	_	_	_	
79-3	14283-14286	get	_	_	_	
79-4	14287-14292	video	_	_	_	
79-5	14293-14303	stuttering	_	_	_	
79-6	14304-14308	with	_	_	_	
79-7	14309-14315	either	_	_	_	
79-8	14316-14319	tcp	_	_	_	
79-9	14320-14322	or	_	_	_	
79-10	14323-14326	udp	_	_	_	
79-11	14326-14327	,	_	_	_	
79-12	14328-14331	try	_	_	_	
79-13	14332-14335	the	_	_	_	
79-14	14336-14341	other	_	_	_	
79-15	14342-14345	one	_	_	_	
79-16	14345-14346	.	_	_	_	
79-17	14347-14352	rsize	_	_	_	
79-18	14352-14353	=	_	_	_	
79-19	14353-14358	32768	_	_	_	
79-20	14358-14359	,	_	_	_	
79-21	14359-14364	wsize	_	_	_	
79-22	14364-14365	=	_	_	_	
79-23	14365-14370	32768	_	_	_	
79-24	14371-14372	-	_	_	_	
79-25	14373-14378	These	_	_	_	
79-26	14379-14383	tell	_	_	_	
79-27	14384-14388	your	_	_	_	
79-28	14389-14392	nfs	_	_	_	
79-29	14393-14399	client	_	_	_	
79-30	14400-14402	to	_	_	_	
79-31	14403-14406	use	_	_	_	
79-32	14407-14408	a	_	_	_	
79-33	14409-14419	particular	_	_	_	
79-34	14420-14425	block	_	_	_	
79-35	14426-14430	size	_	_	_	
79-36	14430-14431	,	_	_	_	
79-37	14432-14436	32KB	_	_	_	
79-38	14437-14439	in	_	_	_	
79-39	14440-14444	this	_	_	_	
79-40	14445-14449	case	_	_	_	
79-41	14449-14450	.	_	_	_	

#Text=Modern NFS clients auto-negotiate a block size so this isn't really necessary for udp where a block size of 32KB is generally auto-negotiated.
80-1	14451-14457	Modern	_	_	_	
80-2	14458-14461	NFS	_	_	_	
80-3	14462-14469	clients	_	_	_	
80-4	14470-14484	auto-negotiate	_	_	_	
80-5	14485-14486	a	_	_	_	
80-6	14487-14492	block	_	_	_	
80-7	14493-14497	size	_	_	_	
80-8	14498-14500	so	_	_	_	
80-9	14501-14505	this	_	_	_	
80-10	14506-14511	isn't	_	_	_	
80-11	14512-14518	really	_	_	_	
80-12	14519-14528	necessary	_	_	_	
80-13	14529-14532	for	_	_	_	
80-14	14533-14536	udp	_	_	_	
80-15	14537-14542	where	_	_	_	
80-16	14543-14544	a	_	_	_	
80-17	14545-14550	block	_	_	_	
80-18	14551-14555	size	_	_	_	
80-19	14556-14558	of	_	_	_	
80-20	14559-14563	32KB	_	_	_	
80-21	14564-14566	is	_	_	_	
80-22	14567-14576	generally	_	_	_	
80-23	14577-14592	auto-negotiated	_	_	_	
80-24	14592-14593	.	_	_	_	

#Text=However with tcp the auto-negotiated block size can be too large resulting in very high latency.
81-1	14594-14601	However	_	_	_	
81-2	14602-14606	with	_	_	_	
81-3	14607-14610	tcp	_	_	_	
81-4	14611-14614	the	_	_	_	
81-5	14615-14630	auto-negotiated	_	_	_	
81-6	14631-14636	block	_	_	_	
81-7	14637-14641	size	_	_	_	
81-8	14642-14645	can	_	_	_	
81-9	14646-14648	be	_	_	_	
81-10	14649-14652	too	_	_	_	
81-11	14653-14658	large	_	_	_	
81-12	14659-14668	resulting	_	_	_	
81-13	14669-14671	in	_	_	_	
81-14	14672-14676	very	_	_	_	
81-15	14677-14681	high	_	_	_	
81-16	14682-14689	latency	_	_	_	
81-17	14689-14690	.	_	_	_	

#Text=On Linux, check the output of /proc/mounts and if rsize or wsize depart very far from 32KB, you probably do want to set this.
#Text=intr - Makes I/O to a NFS mounted filesystem interuptable if the server is down.
82-1	14691-14693	On	_	_	_	
82-2	14694-14699	Linux	_	_	_	
82-3	14699-14700	,	_	_	_	
82-4	14701-14706	check	_	_	_	
82-5	14707-14710	the	_	_	_	
82-6	14711-14717	output	_	_	_	
82-7	14718-14720	of	_	_	_	
82-8	14721-14722	/	_	_	_	
82-9	14722-14726	proc	_	_	_	
82-10	14726-14727	/	_	_	_	
82-11	14727-14733	mounts	_	_	_	
82-12	14734-14737	and	_	_	_	
82-13	14738-14740	if	_	_	_	
82-14	14741-14746	rsize	_	_	_	
82-15	14747-14749	or	_	_	_	
82-16	14750-14755	wsize	_	_	_	
82-17	14756-14762	depart	_	_	_	
82-18	14763-14767	very	_	_	_	
82-19	14768-14771	far	_	_	_	
82-20	14772-14776	from	_	_	_	
82-21	14777-14781	32KB	_	_	_	
82-22	14781-14782	,	_	_	_	
82-23	14783-14786	you	_	_	_	
82-24	14787-14795	probably	_	_	_	
82-25	14796-14798	do	_	_	_	
82-26	14799-14803	want	_	_	_	
82-27	14804-14806	to	_	_	_	
82-28	14807-14810	set	_	_	_	
82-29	14811-14815	this	_	_	_	
82-30	14815-14816	.	_	_	_	
82-31	14817-14821	intr	_	_	_	
82-32	14822-14823	-	_	_	_	
82-33	14824-14829	Makes	_	_	_	
82-34	14830-14831	I	_	_	_	
82-35	14831-14832	/	_	_	_	
82-36	14832-14833	O	_	_	_	
82-37	14834-14836	to	_	_	_	
82-38	14837-14838	a	_	_	_	
82-39	14839-14842	NFS	_	_	_	
82-40	14843-14850	mounted	_	_	_	
82-41	14851-14861	filesystem	_	_	_	
82-42	14862-14874	interuptable	_	_	_	
82-43	14875-14877	if	_	_	_	
82-44	14878-14881	the	_	_	_	
82-45	14882-14888	server	_	_	_	
82-46	14889-14891	is	_	_	_	
82-47	14892-14896	down	_	_	_	
82-48	14896-14897	.	_	_	_	

#Text=If not given the I/O becomes a uninteruptable sleep which causes the process to be impossible to kill until the server comes up again.
83-1	14898-14900	If	_	_	_	
83-2	14901-14904	not	_	_	_	
83-3	14905-14910	given	_	_	_	
83-4	14911-14914	the	_	_	_	
83-5	14915-14916	I	_	_	_	
83-6	14916-14917	/	_	_	_	
83-7	14917-14918	O	_	_	_	
83-8	14919-14926	becomes	_	_	_	
83-9	14927-14928	a	_	_	_	
83-10	14929-14943	uninteruptable	_	_	_	
83-11	14944-14949	sleep	_	_	_	
83-12	14950-14955	which	_	_	_	
83-13	14956-14962	causes	_	_	_	
83-14	14963-14966	the	_	_	_	
83-15	14967-14974	process	_	_	_	
83-16	14975-14977	to	_	_	_	
83-17	14978-14980	be	_	_	_	
83-18	14981-14991	impossible	_	_	_	
83-19	14992-14994	to	_	_	_	
83-20	14995-14999	kill	_	_	_	
83-21	15000-15005	until	_	_	_	
83-22	15006-15009	the	_	_	_	
83-23	15010-15016	server	_	_	_	
83-24	15017-15022	comes	_	_	_	
83-25	15023-15025	up	_	_	_	
83-26	15026-15031	again	_	_	_	
83-27	15031-15032	.	_	_	_	

#Text=This is a no-op on newer Linux kernels and you must use async instead.
#Text=async - Like intr this allows you to kill a process that has a file open on an unresponsive NFS server.
84-1	15033-15037	This	_	_	_	
84-2	15038-15040	is	_	_	_	
84-3	15041-15042	a	_	_	_	
84-4	15043-15048	no-op	_	_	_	
84-5	15049-15051	on	_	_	_	
84-6	15052-15057	newer	_	_	_	
84-7	15058-15063	Linux	_	_	_	
84-8	15064-15071	kernels	_	_	_	
84-9	15072-15075	and	_	_	_	
84-10	15076-15079	you	_	_	_	
84-11	15080-15084	must	_	_	_	
84-12	15085-15088	use	_	_	_	
84-13	15089-15094	async	_	_	_	
84-14	15095-15102	instead	_	_	_	
84-15	15102-15103	.	_	_	_	
84-16	15104-15109	async	_	_	_	
84-17	15110-15111	-	_	_	_	
84-18	15112-15116	Like	_	_	_	
84-19	15117-15121	intr	_	_	_	
84-20	15122-15126	this	_	_	_	
84-21	15127-15133	allows	_	_	_	
84-22	15134-15137	you	_	_	_	
84-23	15138-15140	to	_	_	_	
84-24	15141-15145	kill	_	_	_	
84-25	15146-15147	a	_	_	_	
84-26	15148-15155	process	_	_	_	
84-27	15156-15160	that	_	_	_	
84-28	15161-15164	has	_	_	_	
84-29	15165-15166	a	_	_	_	
84-30	15167-15171	file	_	_	_	
84-31	15172-15176	open	_	_	_	
84-32	15177-15179	on	_	_	_	
84-33	15180-15182	an	_	_	_	
84-34	15183-15195	unresponsive	_	_	_	
84-35	15196-15199	NFS	_	_	_	
84-36	15200-15206	server	_	_	_	
84-37	15206-15207	.	_	_	_	

#Text=On Linux this should always be used for A/V only volumes, unless you are using a kernel that still supports intr.
85-1	15208-15210	On	_	_	_	
85-2	15211-15216	Linux	_	_	_	
85-3	15217-15221	this	_	_	_	
85-4	15222-15228	should	_	_	_	
85-5	15229-15235	always	_	_	_	
85-6	15236-15238	be	_	_	_	
85-7	15239-15243	used	_	_	_	
85-8	15244-15247	for	_	_	_	
85-9	15248-15249	A	_	_	_	
85-10	15249-15250	/	_	_	_	
85-11	15250-15251	V	_	_	_	
85-12	15252-15256	only	_	_	_	
85-13	15257-15264	volumes	_	_	_	
85-14	15264-15265	,	_	_	_	
85-15	15266-15272	unless	_	_	_	
85-16	15273-15276	you	_	_	_	
85-17	15277-15280	are	_	_	_	
85-18	15281-15286	using	_	_	_	
85-19	15287-15288	a	_	_	_	
85-20	15289-15295	kernel	_	_	_	
85-21	15296-15300	that	_	_	_	
85-22	15301-15306	still	_	_	_	
85-23	15307-15315	supports	_	_	_	
85-24	15316-15320	intr	_	_	_	
85-25	15320-15321	.	_	_	_	

#Text=Otherwise, you can end up with a permanently hung backend or frontend if a remote volume goes down for some reason.
#Text=soft - If the NFS server becomes unavailable the NFS client will generate "soft" errors instead of hanging.
86-1	15322-15331	Otherwise	_	_	_	
86-2	15331-15332	,	_	_	_	
86-3	15333-15336	you	_	_	_	
86-4	15337-15340	can	_	_	_	
86-5	15341-15344	end	_	_	_	
86-6	15345-15347	up	_	_	_	
86-7	15348-15352	with	_	_	_	
86-8	15353-15354	a	_	_	_	
86-9	15355-15366	permanently	_	_	_	
86-10	15367-15371	hung	_	_	_	
86-11	15372-15379	backend	_	_	_	
86-12	15380-15382	or	_	_	_	
86-13	15383-15391	frontend	_	_	_	
86-14	15392-15394	if	_	_	_	
86-15	15395-15396	a	_	_	_	
86-16	15397-15403	remote	_	_	_	
86-17	15404-15410	volume	_	_	_	
86-18	15411-15415	goes	_	_	_	
86-19	15416-15420	down	_	_	_	
86-20	15421-15424	for	_	_	_	
86-21	15425-15429	some	_	_	_	
86-22	15430-15436	reason	_	_	_	
86-23	15436-15437	.	_	_	_	
86-24	15438-15442	soft	_	_	_	
86-25	15443-15444	-	_	_	_	
86-26	15445-15447	If	_	_	_	
86-27	15448-15451	the	_	_	_	
86-28	15452-15455	NFS	_	_	_	
86-29	15456-15462	server	_	_	_	
86-30	15463-15470	becomes	_	_	_	
86-31	15471-15482	unavailable	_	_	_	
86-32	15483-15486	the	_	_	_	
86-33	15487-15490	NFS	_	_	_	
86-34	15491-15497	client	_	_	_	
86-35	15498-15502	will	_	_	_	
86-36	15503-15511	generate	_	_	_	
86-37	15512-15513	"	_	_	_	
86-38	15513-15517	soft	_	_	_	
86-39	15517-15518	"	_	_	_	
86-40	15519-15525	errors	_	_	_	
86-41	15526-15533	instead	_	_	_	
86-42	15534-15536	of	_	_	_	
86-43	15537-15544	hanging	_	_	_	
86-44	15544-15545	.	_	_	_	

#Text=Some software will handle this well, other much less well.
87-1	15546-15550	Some	_	_	_	
87-2	15551-15559	software	_	_	_	
87-3	15560-15564	will	_	_	_	
87-4	15565-15571	handle	_	_	_	
87-5	15572-15576	this	_	_	_	
87-6	15577-15581	well	_	_	_	
87-7	15581-15582	,	_	_	_	
87-8	15583-15588	other	_	_	_	
87-9	15589-15593	much	_	_	_	
87-10	15594-15598	less	_	_	_	
87-11	15599-15603	well	_	_	_	
87-12	15603-15604	.	_	_	_	

#Text=In the later case file corruption will result.
88-1	15605-15607	In	_	_	_	
88-2	15608-15611	the	_	_	_	
88-3	15612-15617	later	_	_	_	
88-4	15618-15622	case	_	_	_	
88-5	15623-15627	file	_	_	_	
88-6	15628-15638	corruption	_	_	_	
88-7	15639-15643	will	_	_	_	
88-8	15644-15650	result	_	_	_	
88-9	15650-15651	.	_	_	_	

#Text=For a file system solely used for A/V data this is safe and can avoid the a frontend or backend entering uninterruptible sleep.
89-1	15652-15655	For	_	_	_	
89-2	15656-15657	a	_	_	_	
89-3	15658-15662	file	_	_	_	
89-4	15663-15669	system	_	_	_	
89-5	15670-15676	solely	_	_	_	
89-6	15677-15681	used	_	_	_	
89-7	15682-15685	for	_	_	_	
89-8	15686-15687	A	_	_	_	
89-9	15687-15688	/	_	_	_	
89-10	15688-15689	V	_	_	_	
89-11	15690-15694	data	_	_	_	
89-12	15695-15699	this	_	_	_	
89-13	15700-15702	is	_	_	_	
89-14	15703-15707	safe	_	_	_	
89-15	15708-15711	and	_	_	_	
89-16	15712-15715	can	_	_	_	
89-17	15716-15721	avoid	_	_	_	
89-18	15722-15725	the	_	_	_	
89-19	15726-15727	a	_	_	_	
89-20	15728-15736	frontend	_	_	_	
89-21	15737-15739	or	_	_	_	
89-22	15740-15747	backend	_	_	_	
89-23	15748-15756	entering	_	_	_	
89-24	15757-15772	uninterruptible	_	_	_	
89-25	15773-15778	sleep	_	_	_	
89-26	15778-15779	.	_	_	_	

#Text=Example /etc/fstab entry:
#Text=server:/mythtv/rec0 /mythtv/rec0 nfs async,nfsvers=3,actimeo=0,tcp,rsize=32768,wsize=32768
#Text=server:/mythtv/rec1 /mythtv/rec1 nfs async,nfsvers=3,actimeo=0,udp
#Text=RemoteFS
#Text=This is a fuse based file system that may be well suited to providing network access at remote frontends typically required.
90-1	15780-15787	Example	_	_	_	
90-2	15788-15789	/	_	_	_	
90-3	15789-15792	etc	_	_	_	
90-4	15792-15793	/	_	_	_	
90-5	15793-15798	fstab	_	_	_	
90-6	15799-15804	entry	_	_	_	
90-7	15804-15805	:	_	_	_	
90-8	15806-15812	server	_	_	_	
90-9	15812-15813	:	_	_	_	
90-10	15813-15814	/	_	_	_	
90-11	15814-15820	mythtv	_	_	_	
90-12	15820-15821	/	_	_	_	
90-13	15821-15825	rec0	_	_	_	
90-14	15826-15827	/	_	_	_	
90-15	15827-15833	mythtv	_	_	_	
90-16	15833-15834	/	_	_	_	
90-17	15834-15838	rec0	_	_	_	
90-18	15839-15842	nfs	_	_	_	
90-19	15843-15848	async	_	_	_	
90-20	15848-15849	,	_	_	_	
90-21	15849-15856	nfsvers	_	_	_	
90-22	15856-15857	=	_	_	_	
90-23	15857-15858	3	_	_	_	
90-24	15858-15859	,	_	_	_	
90-25	15859-15866	actimeo	_	_	_	
90-26	15866-15867	=	_	_	_	
90-27	15867-15868	0	_	_	_	
90-28	15868-15869	,	_	_	_	
90-29	15869-15872	tcp	_	_	_	
90-30	15872-15873	,	_	_	_	
90-31	15873-15878	rsize	_	_	_	
90-32	15878-15879	=	_	_	_	
90-33	15879-15884	32768	_	_	_	
90-34	15884-15885	,	_	_	_	
90-35	15885-15890	wsize	_	_	_	
90-36	15890-15891	=	_	_	_	
90-37	15891-15896	32768	_	_	_	
90-38	15897-15903	server	_	_	_	
90-39	15903-15904	:	_	_	_	
90-40	15904-15905	/	_	_	_	
90-41	15905-15911	mythtv	_	_	_	
90-42	15911-15912	/	_	_	_	
90-43	15912-15916	rec1	_	_	_	
90-44	15917-15918	/	_	_	_	
90-45	15918-15924	mythtv	_	_	_	
90-46	15924-15925	/	_	_	_	
90-47	15925-15929	rec1	_	_	_	
90-48	15930-15933	nfs	_	_	_	
90-49	15934-15939	async	_	_	_	
90-50	15939-15940	,	_	_	_	
90-51	15940-15947	nfsvers	_	_	_	
90-52	15947-15948	=	_	_	_	
90-53	15948-15949	3	_	_	_	
90-54	15949-15950	,	_	_	_	
90-55	15950-15957	actimeo	_	_	_	
90-56	15957-15958	=	_	_	_	
90-57	15958-15959	0	_	_	_	
90-58	15959-15960	,	_	_	_	
90-59	15960-15963	udp	_	_	_	
90-60	15964-15972	RemoteFS	_	_	_	
90-61	15973-15977	This	_	_	_	
90-62	15978-15980	is	_	_	_	
90-63	15981-15982	a	_	_	_	
90-64	15983-15987	fuse	_	_	_	
90-65	15988-15993	based	_	_	_	
90-66	15994-15998	file	_	_	_	
90-67	15999-16005	system	_	_	_	
90-68	16006-16010	that	_	_	_	
90-69	16011-16014	may	_	_	_	
90-70	16015-16017	be	_	_	_	
90-71	16018-16022	well	_	_	_	
90-72	16023-16029	suited	_	_	_	
90-73	16030-16032	to	_	_	_	
90-74	16033-16042	providing	_	_	_	
90-75	16043-16050	network	_	_	_	
90-76	16051-16057	access	_	_	_	
90-77	16058-16060	at	_	_	_	
90-78	16061-16067	remote	_	_	_	
90-79	16068-16077	frontends	_	_	_	
90-80	16078-16087	typically	_	_	_	
90-81	16088-16096	required	_	_	_	
90-82	16096-16097	.	_	_	_	

#Text=I have utilised this on my own setup and have found it to be faster / more responsive than the previous NFS setup I was using (regardless of options used above).
91-1	16098-16099	I	_	_	_	
91-2	16100-16104	have	_	_	_	
91-3	16105-16113	utilised	_	_	_	
91-4	16114-16118	this	_	_	_	
91-5	16119-16121	on	_	_	_	
91-6	16122-16124	my	_	_	_	
91-7	16125-16128	own	_	_	_	
91-8	16129-16134	setup	_	_	_	
91-9	16135-16138	and	_	_	_	
91-10	16139-16143	have	_	_	_	
91-11	16144-16149	found	_	_	_	
91-12	16150-16152	it	_	_	_	
91-13	16153-16155	to	_	_	_	
91-14	16156-16158	be	_	_	_	
91-15	16159-16165	faster	_	_	_	
91-16	16166-16167	/	_	_	_	
91-17	16168-16172	more	_	_	_	
91-18	16173-16183	responsive	_	_	_	
91-19	16184-16188	than	_	_	_	
91-20	16189-16192	the	_	_	_	
91-21	16193-16201	previous	_	_	_	
91-22	16202-16205	NFS	_	_	_	
91-23	16206-16211	setup	_	_	_	
91-24	16212-16213	I	_	_	_	
91-25	16214-16217	was	_	_	_	
91-26	16218-16223	using	_	_	_	
91-27	16224-16225	(	_	_	_	
91-28	16225-16235	regardless	_	_	_	
91-29	16236-16238	of	_	_	_	
91-30	16239-16246	options	_	_	_	
91-31	16247-16251	used	_	_	_	
91-32	16252-16257	above	_	_	_	
91-33	16257-16258	)	_	_	_	
91-34	16258-16259	.	_	_	_	

#Text=NFS provides lots of sophisticated features for handling large numbers of users accessing via different types of network links and therefore latencies etc. these features are unlikely to be of any benefit for typically LAN connected systems especially as they are often just ro.
92-1	16260-16263	NFS	_	_	_	
92-2	16264-16272	provides	_	_	_	
92-3	16273-16277	lots	_	_	_	
92-4	16278-16280	of	_	_	_	
92-5	16281-16294	sophisticated	_	_	_	
92-6	16295-16303	features	_	_	_	
92-7	16304-16307	for	_	_	_	
92-8	16308-16316	handling	_	_	_	
92-9	16317-16322	large	_	_	_	
92-10	16323-16330	numbers	_	_	_	
92-11	16331-16333	of	_	_	_	
92-12	16334-16339	users	_	_	_	
92-13	16340-16349	accessing	_	_	_	
92-14	16350-16353	via	_	_	_	
92-15	16354-16363	different	_	_	_	
92-16	16364-16369	types	_	_	_	
92-17	16370-16372	of	_	_	_	
92-18	16373-16380	network	_	_	_	
92-19	16381-16386	links	_	_	_	
92-20	16387-16390	and	_	_	_	
92-21	16391-16400	therefore	_	_	_	
92-22	16401-16410	latencies	_	_	_	
92-23	16411-16414	etc	_	_	_	
92-24	16414-16415	.	_	_	_	
92-25	16416-16421	these	_	_	_	
92-26	16422-16430	features	_	_	_	
92-27	16431-16434	are	_	_	_	
92-28	16435-16443	unlikely	_	_	_	
92-29	16444-16446	to	_	_	_	
92-30	16447-16449	be	_	_	_	
92-31	16450-16452	of	_	_	_	
92-32	16453-16456	any	_	_	_	
92-33	16457-16464	benefit	_	_	_	
92-34	16465-16468	for	_	_	_	
92-35	16469-16478	typically	_	_	_	
92-36	16479-16482	LAN	_	_	_	
92-37	16483-16492	connected	_	_	_	
92-38	16493-16500	systems	_	_	_	
92-39	16501-16511	especially	_	_	_	
92-40	16512-16514	as	_	_	_	
92-41	16515-16519	they	_	_	_	
92-42	16520-16523	are	_	_	_	
92-43	16524-16529	often	_	_	_	
92-44	16530-16534	just	_	_	_	
92-45	16535-16537	ro	_	_	_	
92-46	16537-16538	.	_	_	_	

#Text=The author appears to have done quite a lot of performance testing which you can see here https://sourceforge.net/apps/mediawiki/remotefs/index.php?
93-1	16539-16542	The	_	_	_	
93-2	16543-16549	author	_	_	_	
93-3	16550-16557	appears	_	_	_	
93-4	16558-16560	to	_	_	_	
93-5	16561-16565	have	_	_	_	
93-6	16566-16570	done	_	_	_	
93-7	16571-16576	quite	_	_	_	
93-8	16577-16578	a	_	_	_	
93-9	16579-16582	lot	_	_	_	
93-10	16583-16585	of	_	_	_	
93-11	16586-16597	performance	_	_	_	
93-12	16598-16605	testing	_	_	_	
93-13	16606-16611	which	_	_	_	
93-14	16612-16615	you	_	_	_	
93-15	16616-16619	can	_	_	_	
93-16	16620-16623	see	_	_	_	
93-17	16624-16628	here	_	_	_	
93-18	16629-16634	https	_	_	_	
93-19	16634-16635	:	_	_	_	
93-20	16635-16636	/	_	_	_	
93-21	16636-16637	/	_	_	_	
93-22	16637-16652	sourceforge.net	_	_	_	
93-23	16652-16653	/	_	_	_	
93-24	16653-16657	apps	_	_	_	
93-25	16657-16658	/	_	_	_	
93-26	16658-16667	mediawiki	_	_	_	
93-27	16667-16668	/	_	_	_	
93-28	16668-16676	remotefs	_	_	_	
93-29	16676-16677	/	_	_	_	
93-30	16677-16686	index.php	_	_	_	
93-31	16686-16687	?	_	_	_	

#Text=title=Development:Performance_Tests Certainly worthy of testing / review IMHO.
94-1	16687-16692	title	_	_	_	
94-2	16692-16693	=	_	_	_	
94-3	16693-16704	Development	_	_	_	
94-4	16704-16705	:	_	_	_	
94-5	16705-16722	Performance_Tests	_	_	_	
94-6	16723-16732	Certainly	_	_	_	
94-7	16733-16739	worthy	_	_	_	
94-8	16740-16742	of	_	_	_	
94-9	16743-16750	testing	_	_	_	
94-10	16751-16752	/	_	_	_	
94-11	16753-16759	review	_	_	_	
94-12	16760-16764	IMHO	_	_	_	
94-13	16764-16765	.	_	_	_	

#Text=Devices
#Text=Capture Cards
#Text=For backend machines, or machines that are a combination frontend/backend, the type of capture card used will impact performance.
95-1	16766-16773	Devices	_	_	_	
95-2	16774-16781	Capture	_	_	_	
95-3	16782-16787	Cards	_	_	_	
95-4	16788-16791	For	_	_	_	
95-5	16792-16799	backend	_	_	_	
95-6	16800-16808	machines	_	_	_	
95-7	16808-16809	,	_	_	_	
95-8	16810-16812	or	_	_	_	
95-9	16813-16821	machines	_	_	_	
95-10	16822-16826	that	_	_	_	
95-11	16827-16830	are	_	_	_	
95-12	16831-16832	a	_	_	_	
95-13	16833-16844	combination	_	_	_	
95-14	16845-16853	frontend	_	_	_	
95-15	16853-16854	/	_	_	_	
95-16	16854-16861	backend	_	_	_	
95-17	16861-16862	,	_	_	_	
95-18	16863-16866	the	_	_	_	
95-19	16867-16871	type	_	_	_	
95-20	16872-16874	of	_	_	_	
95-21	16875-16882	capture	_	_	_	
95-22	16883-16887	card	_	_	_	
95-23	16888-16892	used	_	_	_	
95-24	16893-16897	will	_	_	_	
95-25	16898-16904	impact	_	_	_	
95-26	16905-16916	performance	_	_	_	
95-27	16916-16917	.	_	_	_	

#Text=With a typical analog capture card, such as the popular bttv cards, the CPU must encode the raw video to MPEG-4 or RTjpeg on the fly.
96-1	16918-16922	With	_	_	_	
96-2	16923-16924	a	_	_	_	
96-3	16925-16932	typical	_	_	_	
96-4	16933-16939	analog	_	_	_	
96-5	16940-16947	capture	_	_	_	
96-6	16948-16952	card	_	_	_	
96-7	16952-16953	,	_	_	_	
96-8	16954-16958	such	_	_	_	
96-9	16959-16961	as	_	_	_	
96-10	16962-16965	the	_	_	_	
96-11	16966-16973	popular	_	_	_	
96-12	16974-16978	bttv	_	_	_	
96-13	16979-16984	cards	_	_	_	
96-14	16984-16985	,	_	_	_	
96-15	16986-16989	the	_	_	_	
96-16	16990-16993	CPU	_	_	_	
96-17	16994-16998	must	_	_	_	
96-18	16999-17005	encode	_	_	_	
96-19	17006-17009	the	_	_	_	
96-20	17010-17013	raw	_	_	_	
96-21	17014-17019	video	_	_	_	
96-22	17020-17022	to	_	_	_	
96-23	17023-17027	MPEG	_	_	_	
96-24	17027-17028	-	_	_	_	
96-25	17028-17029	4	_	_	_	
96-26	17030-17032	or	_	_	_	
96-27	17033-17039	RTjpeg	_	_	_	
96-28	17040-17042	on	_	_	_	
96-29	17043-17046	the	_	_	_	
96-30	17047-17050	fly	_	_	_	
96-31	17050-17051	.	_	_	_	

#Text=When watching live TV on a combination frontend/backend machine, the machine has to both encode AND decode the video stream simultaneously.
97-1	17052-17056	When	_	_	_	
97-2	17057-17065	watching	_	_	_	
97-3	17066-17070	live	_	_	_	
97-4	17071-17073	TV	_	_	_	
97-5	17074-17076	on	_	_	_	
97-6	17077-17078	a	_	_	_	
97-7	17079-17090	combination	_	_	_	
97-8	17091-17099	frontend	_	_	_	
97-9	17099-17100	/	_	_	_	
97-10	17100-17107	backend	_	_	_	
97-11	17108-17115	machine	_	_	_	
97-12	17115-17116	,	_	_	_	
97-13	17117-17120	the	_	_	_	
97-14	17121-17128	machine	_	_	_	
97-15	17129-17132	has	_	_	_	
97-16	17133-17135	to	_	_	_	
97-17	17136-17140	both	_	_	_	
97-18	17141-17147	encode	_	_	_	
97-19	17148-17151	AND	_	_	_	
97-20	17152-17158	decode	_	_	_	
97-21	17159-17162	the	_	_	_	
97-22	17163-17168	video	_	_	_	
97-23	17169-17175	stream	_	_	_	
97-24	17176-17190	simultaneously	_	_	_	
97-25	17190-17191	.	_	_	_	

#Text=Luckily there are two options:
#Text=Hardware MPEG-2 Capture Cards, such as the popular Hauppauge PVR-150 and PVR-500.
98-1	17192-17199	Luckily	_	_	_	
98-2	17200-17205	there	_	_	_	
98-3	17206-17209	are	_	_	_	
98-4	17210-17213	two	_	_	_	
98-5	17214-17221	options	_	_	_	
98-6	17221-17222	:	_	_	_	
98-7	17223-17231	Hardware	_	_	_	
98-8	17232-17236	MPEG	_	_	_	
98-9	17236-17237	-	_	_	_	
98-10	17237-17238	2	_	_	_	
98-11	17239-17246	Capture	_	_	_	
98-12	17247-17252	Cards	_	_	_	
98-13	17252-17253	,	_	_	_	
98-14	17254-17258	such	_	_	_	
98-15	17259-17261	as	_	_	_	
98-16	17262-17265	the	_	_	_	
98-17	17266-17273	popular	_	_	_	
98-18	17274-17283	Hauppauge	_	_	_	
98-19	17284-17287	PVR	_	_	_	
98-20	17287-17288	-	_	_	_	
98-21	17288-17291	150	_	_	_	
98-22	17292-17295	and	_	_	_	
98-23	17296-17299	PVR	_	_	_	
98-24	17299-17300	-	_	_	_	
98-25	17300-17303	500	_	_	_	
98-26	17303-17304	.	_	_	_	

#Text=Digital tuners, such as the pcHDTV HD-5500, which work with both OTA 8VSB signals as well as QAM for digital cable systems.
99-1	17305-17312	Digital	_	_	_	
99-2	17313-17319	tuners	_	_	_	
99-3	17319-17320	,	_	_	_	
99-4	17321-17325	such	_	_	_	
99-5	17326-17328	as	_	_	_	
99-6	17329-17332	the	_	_	_	
99-7	17333-17339	pcHDTV	_	_	_	
99-8	17340-17342	HD	_	_	_	
99-9	17342-17343	-	_	_	_	
99-10	17343-17347	5500	_	_	_	
99-11	17347-17348	,	_	_	_	
99-12	17349-17354	which	_	_	_	
99-13	17355-17359	work	_	_	_	
99-14	17360-17364	with	_	_	_	
99-15	17365-17369	both	_	_	_	
99-16	17370-17373	OTA	_	_	_	
99-17	17374-17378	8VSB	_	_	_	
99-18	17379-17386	signals	_	_	_	
99-19	17387-17389	as	_	_	_	
99-20	17390-17394	well	_	_	_	
99-21	17395-17397	as	_	_	_	
99-22	17398-17401	QAM	_	_	_	
99-23	17402-17405	for	_	_	_	
99-24	17406-17413	digital	_	_	_	
99-25	17414-17419	cable	_	_	_	
99-26	17420-17427	systems	_	_	_	
99-27	17427-17428	.	_	_	_	

#Text=With cards of this type, the machine's CPU doesn't have to encode the incoming video.
100-1	17429-17433	With	_	_	_	
100-2	17434-17439	cards	_	_	_	
100-3	17440-17442	of	_	_	_	
100-4	17443-17447	this	_	_	_	
100-5	17448-17452	type	_	_	_	
100-6	17452-17453	,	_	_	_	
100-7	17454-17457	the	_	_	_	
100-8	17458-17467	machine's	_	_	_	
100-9	17468-17471	CPU	_	_	_	
100-10	17472-17479	doesn't	_	_	_	
100-11	17480-17484	have	_	_	_	
100-12	17485-17487	to	_	_	_	
100-13	17488-17494	encode	_	_	_	
100-14	17495-17498	the	_	_	_	
100-15	17499-17507	incoming	_	_	_	
100-16	17508-17513	video	_	_	_	
100-17	17513-17514	.	_	_	_	

#Text=Instead, it simply receives the MPEG-2 stream from the card and dumps it to disk.
101-1	17515-17522	Instead	_	_	_	
101-2	17522-17523	,	_	_	_	
101-3	17524-17526	it	_	_	_	
101-4	17527-17533	simply	_	_	_	
101-5	17534-17542	receives	_	_	_	
101-6	17543-17546	the	_	_	_	
101-7	17547-17551	MPEG	_	_	_	
101-8	17551-17552	-	_	_	_	
101-9	17552-17553	2	_	_	_	
101-10	17554-17560	stream	_	_	_	
101-11	17561-17565	from	_	_	_	
101-12	17566-17569	the	_	_	_	
101-13	17570-17574	card	_	_	_	
101-14	17575-17578	and	_	_	_	
101-15	17579-17584	dumps	_	_	_	
101-16	17585-17587	it	_	_	_	
101-17	17588-17590	to	_	_	_	
101-18	17591-17595	disk	_	_	_	
101-19	17595-17596	.	_	_	_	

#Text=This makes the recording process a simple operation, with relatively low resource usage.
102-1	17597-17601	This	_	_	_	
102-2	17602-17607	makes	_	_	_	
102-3	17608-17611	the	_	_	_	
102-4	17612-17621	recording	_	_	_	
102-5	17622-17629	process	_	_	_	
102-6	17630-17631	a	_	_	_	
102-7	17632-17638	simple	_	_	_	
102-8	17639-17648	operation	_	_	_	
102-9	17648-17649	,	_	_	_	
102-10	17650-17654	with	_	_	_	
102-11	17655-17665	relatively	_	_	_	
102-12	17666-17669	low	_	_	_	
102-13	17670-17678	resource	_	_	_	
102-14	17679-17684	usage	_	_	_	
102-15	17684-17685	.	_	_	_	

#Text=Video Cards & Hardware Accelerated Video
#Text=Several options are available for accelerating video output:
#Text=VDPAU
#Text=VDPAU is currently NVIDIA-only for the time being, but provides for GPU-accelerated decode of MPEG-1, MPEG-2, H.264, and VC-1 bitstreams, as well as post-processing of decoded video including temporal and spatial deinterlacing, inverse telecine, and noise reduction.
103-1	17686-17691	Video	_	_	_	
103-2	17692-17697	Cards	_	_	_	
103-3	17698-17699	&	_	_	_	
103-4	17700-17708	Hardware	_	_	_	
103-5	17709-17720	Accelerated	_	_	_	
103-6	17721-17726	Video	_	_	_	
103-7	17727-17734	Several	_	_	_	
103-8	17735-17742	options	_	_	_	
103-9	17743-17746	are	_	_	_	
103-10	17747-17756	available	_	_	_	
103-11	17757-17760	for	_	_	_	
103-12	17761-17773	accelerating	_	_	_	
103-13	17774-17779	video	_	_	_	
103-14	17780-17786	output	_	_	_	
103-15	17786-17787	:	_	_	_	
103-16	17788-17793	VDPAU	_	_	_	
103-17	17794-17799	VDPAU	_	_	_	
103-18	17800-17802	is	_	_	_	
103-19	17803-17812	currently	_	_	_	
103-20	17813-17824	NVIDIA-only	_	_	_	
103-21	17825-17828	for	_	_	_	
103-22	17829-17832	the	_	_	_	
103-23	17833-17837	time	_	_	_	
103-24	17838-17843	being	_	_	_	
103-25	17843-17844	,	_	_	_	
103-26	17845-17848	but	_	_	_	
103-27	17849-17857	provides	_	_	_	
103-28	17858-17861	for	_	_	_	
103-29	17862-17877	GPU-accelerated	_	_	_	
103-30	17878-17884	decode	_	_	_	
103-31	17885-17887	of	_	_	_	
103-32	17888-17892	MPEG	_	_	_	
103-33	17892-17893	-	_	_	_	
103-34	17893-17894	1	_	_	_	
103-35	17894-17895	,	_	_	_	
103-36	17896-17900	MPEG	_	_	_	
103-37	17900-17901	-	_	_	_	
103-38	17901-17902	2	_	_	_	
103-39	17902-17903	,	_	_	_	
103-40	17904-17905	H	_	_	_	
103-41	17905-17909	.264	_	_	_	
103-42	17909-17910	,	_	_	_	
103-43	17911-17914	and	_	_	_	
103-44	17915-17917	VC	_	_	_	
103-45	17917-17918	-	_	_	_	
103-46	17918-17919	1	_	_	_	
103-47	17920-17930	bitstreams	_	_	_	
103-48	17930-17931	,	_	_	_	
103-49	17932-17934	as	_	_	_	
103-50	17935-17939	well	_	_	_	
103-51	17940-17942	as	_	_	_	
103-52	17943-17958	post-processing	_	_	_	
103-53	17959-17961	of	_	_	_	
103-54	17962-17969	decoded	_	_	_	
103-55	17970-17975	video	_	_	_	
103-56	17976-17985	including	_	_	_	
103-57	17986-17994	temporal	_	_	_	
103-58	17995-17998	and	_	_	_	
103-59	17999-18006	spatial	_	_	_	
103-60	18007-18020	deinterlacing	_	_	_	
103-61	18020-18021	,	_	_	_	
103-62	18022-18029	inverse	_	_	_	
103-63	18030-18038	telecine	_	_	_	
103-64	18038-18039	,	_	_	_	
103-65	18040-18043	and	_	_	_	
103-66	18044-18049	noise	_	_	_	
103-67	18050-18059	reduction	_	_	_	
103-68	18059-18060	.	_	_	_	

#Text=VAAPI
#Text=CrystalHD
#Text=CPU / Processor
#Text=Clock Speed Throttling
#Text=There are several conditions in which your computer's CPU may be scaled down from its maximum clock speed:
#Text=A laptop or notebook has scaled down the CPU automatically due to being unplugged from an AC power source and running on the battery
#Text=The system has detected an unsafe thermal condition, and has scaled back the clock speed to avoid damage
#Text=The CPU speed has been configured incorrectly in the BIOS
#Text=The CPU speed has been manually configured to a lower speed at runtime
#Text=You can check your CPU's current operating frequency by running the command:
#Text=cat /proc/cpuinfo
#Text=If your system is slowing down because it is at its thermal limits, the only real option is to beef up your cooling capacity.
104-1	18061-18066	VAAPI	_	_	_	
104-2	18067-18076	CrystalHD	_	_	_	
104-3	18077-18080	CPU	_	_	_	
104-4	18081-18082	/	_	_	_	
104-5	18083-18092	Processor	_	_	_	
104-6	18093-18098	Clock	_	_	_	
104-7	18099-18104	Speed	_	_	_	
104-8	18105-18115	Throttling	_	_	_	
104-9	18116-18121	There	_	_	_	
104-10	18122-18125	are	_	_	_	
104-11	18126-18133	several	_	_	_	
104-12	18134-18144	conditions	_	_	_	
104-13	18145-18147	in	_	_	_	
104-14	18148-18153	which	_	_	_	
104-15	18154-18158	your	_	_	_	
104-16	18159-18169	computer's	_	_	_	
104-17	18170-18173	CPU	_	_	_	
104-18	18174-18177	may	_	_	_	
104-19	18178-18180	be	_	_	_	
104-20	18181-18187	scaled	_	_	_	
104-21	18188-18192	down	_	_	_	
104-22	18193-18197	from	_	_	_	
104-23	18198-18201	its	_	_	_	
104-24	18202-18209	maximum	_	_	_	
104-25	18210-18215	clock	_	_	_	
104-26	18216-18221	speed	_	_	_	
104-27	18221-18222	:	_	_	_	
104-28	18223-18224	A	_	_	_	
104-29	18225-18231	laptop	_	_	_	
104-30	18232-18234	or	_	_	_	
104-31	18235-18243	notebook	_	_	_	
104-32	18244-18247	has	_	_	_	
104-33	18248-18254	scaled	_	_	_	
104-34	18255-18259	down	_	_	_	
104-35	18260-18263	the	_	_	_	
104-36	18264-18267	CPU	_	_	_	
104-37	18268-18281	automatically	_	_	_	
104-38	18282-18285	due	_	_	_	
104-39	18286-18288	to	_	_	_	
104-40	18289-18294	being	_	_	_	
104-41	18295-18304	unplugged	_	_	_	
104-42	18305-18309	from	_	_	_	
104-43	18310-18312	an	_	_	_	
104-44	18313-18315	AC	_	_	_	
104-45	18316-18321	power	_	_	_	
104-46	18322-18328	source	_	_	_	
104-47	18329-18332	and	_	_	_	
104-48	18333-18340	running	_	_	_	
104-49	18341-18343	on	_	_	_	
104-50	18344-18347	the	_	_	_	
104-51	18348-18355	battery	_	_	_	
104-52	18356-18359	The	_	_	_	
104-53	18360-18366	system	_	_	_	
104-54	18367-18370	has	_	_	_	
104-55	18371-18379	detected	_	_	_	
104-56	18380-18382	an	_	_	_	
104-57	18383-18389	unsafe	_	_	_	
104-58	18390-18397	thermal	_	_	_	
104-59	18398-18407	condition	_	_	_	
104-60	18407-18408	,	_	_	_	
104-61	18409-18412	and	_	_	_	
104-62	18413-18416	has	_	_	_	
104-63	18417-18423	scaled	_	_	_	
104-64	18424-18428	back	_	_	_	
104-65	18429-18432	the	_	_	_	
104-66	18433-18438	clock	_	_	_	
104-67	18439-18444	speed	_	_	_	
104-68	18445-18447	to	_	_	_	
104-69	18448-18453	avoid	_	_	_	
104-70	18454-18460	damage	_	_	_	
104-71	18461-18464	The	_	_	_	
104-72	18465-18468	CPU	_	_	_	
104-73	18469-18474	speed	_	_	_	
104-74	18475-18478	has	_	_	_	
104-75	18479-18483	been	_	_	_	
104-76	18484-18494	configured	_	_	_	
104-77	18495-18506	incorrectly	_	_	_	
104-78	18507-18509	in	_	_	_	
104-79	18510-18513	the	_	_	_	
104-80	18514-18518	BIOS	_	_	_	
104-81	18519-18522	The	_	_	_	
104-82	18523-18526	CPU	_	_	_	
104-83	18527-18532	speed	_	_	_	
104-84	18533-18536	has	_	_	_	
104-85	18537-18541	been	_	_	_	
104-86	18542-18550	manually	_	_	_	
104-87	18551-18561	configured	_	_	_	
104-88	18562-18564	to	_	_	_	
104-89	18565-18566	a	_	_	_	
104-90	18567-18572	lower	_	_	_	
104-91	18573-18578	speed	_	_	_	
104-92	18579-18581	at	_	_	_	
104-93	18582-18589	runtime	_	_	_	
104-94	18590-18593	You	_	_	_	
104-95	18594-18597	can	_	_	_	
104-96	18598-18603	check	_	_	_	
104-97	18604-18608	your	_	_	_	
104-98	18609-18614	CPU's	_	_	_	
104-99	18615-18622	current	_	_	_	
104-100	18623-18632	operating	_	_	_	
104-101	18633-18642	frequency	_	_	_	
104-102	18643-18645	by	_	_	_	
104-103	18646-18653	running	_	_	_	
104-104	18654-18657	the	_	_	_	
104-105	18658-18665	command	_	_	_	
104-106	18665-18666	:	_	_	_	
104-107	18667-18670	cat	_	_	_	
104-108	18671-18672	/	_	_	_	
104-109	18672-18676	proc	_	_	_	
104-110	18676-18677	/	_	_	_	
104-111	18677-18684	cpuinfo	_	_	_	
104-112	18685-18687	If	_	_	_	
104-113	18688-18692	your	_	_	_	
104-114	18693-18699	system	_	_	_	
104-115	18700-18702	is	_	_	_	
104-116	18703-18710	slowing	_	_	_	
104-117	18711-18715	down	_	_	_	
104-118	18716-18723	because	_	_	_	
104-119	18724-18726	it	_	_	_	
104-120	18727-18729	is	_	_	_	
104-121	18730-18732	at	_	_	_	
104-122	18733-18736	its	_	_	_	
104-123	18737-18744	thermal	_	_	_	
104-124	18745-18751	limits	_	_	_	
104-125	18751-18752	,	_	_	_	
104-126	18753-18756	the	_	_	_	
104-127	18757-18761	only	_	_	_	
104-128	18762-18766	real	_	_	_	
104-129	18767-18773	option	_	_	_	
104-130	18774-18776	is	_	_	_	
104-131	18777-18779	to	_	_	_	
104-132	18780-18784	beef	_	_	_	
104-133	18785-18787	up	_	_	_	
104-134	18788-18792	your	_	_	_	
104-135	18793-18800	cooling	_	_	_	
104-136	18801-18809	capacity	_	_	_	
104-137	18809-18810	.	_	_	_	

#Text=This could be in the form of a larger heatsink, a larger fan, or even liquid cooling.
105-1	18811-18815	This	_	_	_	
105-2	18816-18821	could	_	_	_	
105-3	18822-18824	be	_	_	_	
105-4	18825-18827	in	_	_	_	
105-5	18828-18831	the	_	_	_	
105-6	18832-18836	form	_	_	_	
105-7	18837-18839	of	_	_	_	
105-8	18840-18841	a	_	_	_	
105-9	18842-18848	larger	_	_	_	
105-10	18849-18857	heatsink	_	_	_	
105-11	18857-18858	,	_	_	_	
105-12	18859-18860	a	_	_	_	
105-13	18861-18867	larger	_	_	_	
105-14	18868-18871	fan	_	_	_	
105-15	18871-18872	,	_	_	_	
105-16	18873-18875	or	_	_	_	
105-17	18876-18880	even	_	_	_	
105-18	18881-18887	liquid	_	_	_	
105-19	18888-18895	cooling	_	_	_	
105-20	18895-18896	.	_	_	_	

#Text=A CPU that is incorrectly configured in the BIOS should be easy to check and easy to fix, but take care that you don't unintentionally overclock it in the process.
106-1	18897-18898	A	_	_	_	
106-2	18899-18902	CPU	_	_	_	
106-3	18903-18907	that	_	_	_	
106-4	18908-18910	is	_	_	_	
106-5	18911-18922	incorrectly	_	_	_	
106-6	18923-18933	configured	_	_	_	
106-7	18934-18936	in	_	_	_	
106-8	18937-18940	the	_	_	_	
106-9	18941-18945	BIOS	_	_	_	
106-10	18946-18952	should	_	_	_	
106-11	18953-18955	be	_	_	_	
106-12	18956-18960	easy	_	_	_	
106-13	18961-18963	to	_	_	_	
106-14	18964-18969	check	_	_	_	
106-15	18970-18973	and	_	_	_	
106-16	18974-18978	easy	_	_	_	
106-17	18979-18981	to	_	_	_	
106-18	18982-18985	fix	_	_	_	
106-19	18985-18986	,	_	_	_	
106-20	18987-18990	but	_	_	_	
106-21	18991-18995	take	_	_	_	
106-22	18996-19000	care	_	_	_	
106-23	19001-19005	that	_	_	_	
106-24	19006-19009	you	_	_	_	
106-25	19010-19015	don't	_	_	_	
106-26	19016-19031	unintentionally	_	_	_	
106-27	19032-19041	overclock	_	_	_	
106-28	19042-19044	it	_	_	_	
106-29	19045-19047	in	_	_	_	
106-30	19048-19051	the	_	_	_	
106-31	19052-19059	process	_	_	_	
106-32	19059-19060	.	_	_	_	

#Text=Changing a manual control or overriding an automatic speed control will likely be distribution-dependent, or subject to your choice of adjustment tools.
107-1	19061-19069	Changing	_	_	_	
107-2	19070-19071	a	_	_	_	
107-3	19072-19078	manual	_	_	_	
107-4	19079-19086	control	_	_	_	
107-5	19087-19089	or	_	_	_	
107-6	19090-19100	overriding	_	_	_	
107-7	19101-19103	an	_	_	_	
107-8	19104-19113	automatic	_	_	_	
107-9	19114-19119	speed	_	_	_	
107-10	19120-19127	control	_	_	_	
107-11	19128-19132	will	_	_	_	
107-12	19133-19139	likely	_	_	_	
107-13	19140-19142	be	_	_	_	
107-14	19143-19165	distribution-dependent	_	_	_	
107-15	19165-19166	,	_	_	_	
107-16	19167-19169	or	_	_	_	
107-17	19170-19177	subject	_	_	_	
107-18	19178-19180	to	_	_	_	
107-19	19181-19185	your	_	_	_	
107-20	19186-19192	choice	_	_	_	
107-21	19193-19195	of	_	_	_	
107-22	19196-19206	adjustment	_	_	_	
107-23	19207-19212	tools	_	_	_	
107-24	19212-19213	.	_	_	_	

#Text=Networks
#Text=Wireless Networks
#Text=While it is possible to run MythTV over a wireless network, you may find that you have better performance when using a wired connection.
108-1	19214-19222	Networks	_	_	_	
108-2	19223-19231	Wireless	_	_	_	
108-3	19232-19240	Networks	_	_	_	
108-4	19241-19246	While	_	_	_	
108-5	19247-19249	it	_	_	_	
108-6	19250-19252	is	_	_	_	
108-7	19253-19261	possible	_	_	_	
108-8	19262-19264	to	_	_	_	
108-9	19265-19268	run	_	_	_	
108-10	19269-19275	MythTV	_	_	_	
108-11	19276-19280	over	_	_	_	
108-12	19281-19282	a	_	_	_	
108-13	19283-19291	wireless	_	_	_	
108-14	19292-19299	network	_	_	_	
108-15	19299-19300	,	_	_	_	
108-16	19301-19304	you	_	_	_	
108-17	19305-19308	may	_	_	_	
108-18	19309-19313	find	_	_	_	
108-19	19314-19318	that	_	_	_	
108-20	19319-19322	you	_	_	_	
108-21	19323-19327	have	_	_	_	
108-22	19328-19334	better	_	_	_	
108-23	19335-19346	performance	_	_	_	
108-24	19347-19351	when	_	_	_	
108-25	19352-19357	using	_	_	_	
108-26	19358-19359	a	_	_	_	
108-27	19360-19365	wired	_	_	_	
108-28	19366-19376	connection	_	_	_	
108-29	19376-19377	.	_	_	_	

#Text=With a wireless connection, your bandwidth & latency are dependent on your distance from the access point, interference from other devices, the number of wireless users on the network, and the capabilities of your equipment at both ends.
109-1	19378-19382	With	_	_	_	
109-2	19383-19384	a	_	_	_	
109-3	19385-19393	wireless	_	_	_	
109-4	19394-19404	connection	_	_	_	
109-5	19404-19405	,	_	_	_	
109-6	19406-19410	your	_	_	_	
109-7	19411-19420	bandwidth	_	_	_	
109-8	19421-19422	&	_	_	_	
109-9	19423-19430	latency	_	_	_	
109-10	19431-19434	are	_	_	_	
109-11	19435-19444	dependent	_	_	_	
109-12	19445-19447	on	_	_	_	
109-13	19448-19452	your	_	_	_	
109-14	19453-19461	distance	_	_	_	
109-15	19462-19466	from	_	_	_	
109-16	19467-19470	the	_	_	_	
109-17	19471-19477	access	_	_	_	
109-18	19478-19483	point	_	_	_	
109-19	19483-19484	,	_	_	_	
109-20	19485-19497	interference	_	_	_	
109-21	19498-19502	from	_	_	_	
109-22	19503-19508	other	_	_	_	
109-23	19509-19516	devices	_	_	_	
109-24	19516-19517	,	_	_	_	
109-25	19518-19521	the	_	_	_	
109-26	19522-19528	number	_	_	_	
109-27	19529-19531	of	_	_	_	
109-28	19532-19540	wireless	_	_	_	
109-29	19541-19546	users	_	_	_	
109-30	19547-19549	on	_	_	_	
109-31	19550-19553	the	_	_	_	
109-32	19554-19561	network	_	_	_	
109-33	19561-19562	,	_	_	_	
109-34	19563-19566	and	_	_	_	
109-35	19567-19570	the	_	_	_	
109-36	19571-19583	capabilities	_	_	_	
109-37	19584-19586	of	_	_	_	
109-38	19587-19591	your	_	_	_	
109-39	19592-19601	equipment	_	_	_	
109-40	19602-19604	at	_	_	_	
109-41	19605-19609	both	_	_	_	
109-42	19610-19614	ends	_	_	_	
109-43	19614-19615	.	_	_	_	

#Text=If you find that you have trouble with skips and/or dropouts when watching content on a wireless front end, it would be good to test the same setup with a wired connection to determine if the network is the problem.
110-1	19616-19618	If	_	_	_	
110-2	19619-19622	you	_	_	_	
110-3	19623-19627	find	_	_	_	
110-4	19628-19632	that	_	_	_	
110-5	19633-19636	you	_	_	_	
110-6	19637-19641	have	_	_	_	
110-7	19642-19649	trouble	_	_	_	
110-8	19650-19654	with	_	_	_	
110-9	19655-19660	skips	_	_	_	
110-10	19661-19664	and	_	_	_	
110-11	19664-19665	/	_	_	_	
110-12	19665-19667	or	_	_	_	
110-13	19668-19676	dropouts	_	_	_	
110-14	19677-19681	when	_	_	_	
110-15	19682-19690	watching	_	_	_	
110-16	19691-19698	content	_	_	_	
110-17	19699-19701	on	_	_	_	
110-18	19702-19703	a	_	_	_	
110-19	19704-19712	wireless	_	_	_	
110-20	19713-19718	front	_	_	_	
110-21	19719-19722	end	_	_	_	
110-22	19722-19723	,	_	_	_	
110-23	19724-19726	it	_	_	_	
110-24	19727-19732	would	_	_	_	
110-25	19733-19735	be	_	_	_	
110-26	19736-19740	good	_	_	_	
110-27	19741-19743	to	_	_	_	
110-28	19744-19748	test	_	_	_	
110-29	19749-19752	the	_	_	_	
110-30	19753-19757	same	_	_	_	
110-31	19758-19763	setup	_	_	_	
110-32	19764-19768	with	_	_	_	
110-33	19769-19770	a	_	_	_	
110-34	19771-19776	wired	_	_	_	
110-35	19777-19787	connection	_	_	_	
110-36	19788-19790	to	_	_	_	
110-37	19791-19800	determine	_	_	_	
110-38	19801-19803	if	_	_	_	
110-39	19804-19807	the	_	_	_	
110-40	19808-19815	network	_	_	_	
110-41	19816-19818	is	_	_	_	
110-42	19819-19822	the	_	_	_	
110-43	19823-19830	problem	_	_	_	
110-44	19830-19831	.	_	_	_	

#Text=Ethernet Full-Duplex Mode
#Text=Make sure that your ethernet adapters are running in full duplex mode.
111-1	19832-19840	Ethernet	_	_	_	
111-2	19841-19852	Full-Duplex	_	_	_	
111-3	19853-19857	Mode	_	_	_	
111-4	19858-19862	Make	_	_	_	
111-5	19863-19867	sure	_	_	_	
111-6	19868-19872	that	_	_	_	
111-7	19873-19877	your	_	_	_	
111-8	19878-19886	ethernet	_	_	_	
111-9	19887-19895	adapters	_	_	_	
111-10	19896-19899	are	_	_	_	
111-11	19900-19907	running	_	_	_	
111-12	19908-19910	in	_	_	_	
111-13	19911-19915	full	_	_	_	
111-14	19916-19922	duplex	_	_	_	
111-15	19923-19927	mode	_	_	_	
111-16	19927-19928	.	_	_	_	

#Text=Check your current configuration with this command:
#Text=ethtool eth0
#Text=Typically both sides will be configured for autonegotiation by default and you will get the best possible connection automatically but there are conditions--typically involving old or buggy hardware--when this may not happen.
112-1	19929-19934	Check	_	_	_	
112-2	19935-19939	your	_	_	_	
112-3	19940-19947	current	_	_	_	
112-4	19948-19961	configuration	_	_	_	
112-5	19962-19966	with	_	_	_	
112-6	19967-19971	this	_	_	_	
112-7	19972-19979	command	_	_	_	
112-8	19979-19980	:	_	_	_	
112-9	19981-19988	ethtool	_	_	_	
112-10	19989-19993	eth0	_	_	_	
112-11	19994-20003	Typically	_	_	_	
112-12	20004-20008	both	_	_	_	
112-13	20009-20014	sides	_	_	_	
112-14	20015-20019	will	_	_	_	
112-15	20020-20022	be	_	_	_	
112-16	20023-20033	configured	_	_	_	
112-17	20034-20037	for	_	_	_	
112-18	20038-20053	autonegotiation	_	_	_	
112-19	20054-20056	by	_	_	_	
112-20	20057-20064	default	_	_	_	
112-21	20065-20068	and	_	_	_	
112-22	20069-20072	you	_	_	_	
112-23	20073-20077	will	_	_	_	
112-24	20078-20081	get	_	_	_	
112-25	20082-20085	the	_	_	_	
112-26	20086-20090	best	_	_	_	
112-27	20091-20099	possible	_	_	_	
112-28	20100-20110	connection	_	_	_	
112-29	20111-20124	automatically	_	_	_	
112-30	20125-20128	but	_	_	_	
112-31	20129-20134	there	_	_	_	
112-32	20135-20138	are	_	_	_	
112-33	20139-20149	conditions	_	_	_	
112-34	20149-20150	-	_	_	_	
112-35	20150-20151	-	_	_	_	
112-36	20151-20160	typically	_	_	_	
112-37	20161-20170	involving	_	_	_	
112-38	20171-20174	old	_	_	_	
112-39	20175-20177	or	_	_	_	
112-40	20178-20183	buggy	_	_	_	
112-41	20184-20192	hardware	_	_	_	
112-42	20192-20193	-	_	_	_	
112-43	20193-20194	-	_	_	_	
112-44	20194-20198	when	_	_	_	
112-45	20199-20203	this	_	_	_	
112-46	20204-20207	may	_	_	_	
112-47	20208-20211	not	_	_	_	
112-48	20212-20218	happen	_	_	_	
112-49	20218-20219	.	_	_	_	

#Text=The following can be used to disable autonegotiation and force a 100base-T network adapter into full duplex mode, when autonegotiation is failing.
#Text=ethtool -s eth0 speed 100 duplex full autoneg off
#Text=This problem can exhibit itself with "IOBOUND" errors in your logs.
113-1	20220-20223	The	_	_	_	
113-2	20224-20233	following	_	_	_	
113-3	20234-20237	can	_	_	_	
113-4	20238-20240	be	_	_	_	
113-5	20241-20245	used	_	_	_	
113-6	20246-20248	to	_	_	_	
113-7	20249-20256	disable	_	_	_	
113-8	20257-20272	autonegotiation	_	_	_	
113-9	20273-20276	and	_	_	_	
113-10	20277-20282	force	_	_	_	
113-11	20283-20284	a	_	_	_	
113-12	20285-20294	100base-T	_	_	_	
113-13	20295-20302	network	_	_	_	
113-14	20303-20310	adapter	_	_	_	
113-15	20311-20315	into	_	_	_	
113-16	20316-20320	full	_	_	_	
113-17	20321-20327	duplex	_	_	_	
113-18	20328-20332	mode	_	_	_	
113-19	20332-20333	,	_	_	_	
113-20	20334-20338	when	_	_	_	
113-21	20339-20354	autonegotiation	_	_	_	
113-22	20355-20357	is	_	_	_	
113-23	20358-20365	failing	_	_	_	
113-24	20365-20366	.	_	_	_	
113-25	20367-20374	ethtool	_	_	_	
113-26	20375-20376	-	_	_	_	
113-27	20376-20377	s	_	_	_	
113-28	20378-20382	eth0	_	_	_	
113-29	20383-20388	speed	_	_	_	
113-30	20389-20392	100	_	_	_	
113-31	20393-20399	duplex	_	_	_	
113-32	20400-20404	full	_	_	_	
113-33	20405-20412	autoneg	_	_	_	
113-34	20413-20416	off	_	_	_	
113-35	20417-20421	This	_	_	_	
113-36	20422-20429	problem	_	_	_	
113-37	20430-20433	can	_	_	_	
113-38	20434-20441	exhibit	_	_	_	
113-39	20442-20448	itself	_	_	_	
113-40	20449-20453	with	_	_	_	
113-41	20454-20455	"	_	_	_	
113-42	20455-20462	IOBOUND	_	_	_	
113-43	20462-20463	"	_	_	_	
113-44	20464-20470	errors	_	_	_	
113-45	20471-20473	in	_	_	_	
113-46	20474-20478	your	_	_	_	
113-47	20479-20483	logs	_	_	_	
113-48	20483-20484	.	_	_	_	

#Text=Note: To use full-duplex mode, your network card must be connected to a switch (not a hub) and the switch must be configured to allow full-duplex operation (almost always the default) on the ports that are being used.
114-1	20485-20489	Note	_	_	_	
114-2	20489-20490	:	_	_	_	
114-3	20491-20493	To	_	_	_	
114-4	20494-20497	use	_	_	_	
114-5	20498-20509	full-duplex	_	_	_	
114-6	20510-20514	mode	_	_	_	
114-7	20514-20515	,	_	_	_	
114-8	20516-20520	your	_	_	_	
114-9	20521-20528	network	_	_	_	
114-10	20529-20533	card	_	_	_	
114-11	20534-20538	must	_	_	_	
114-12	20539-20541	be	_	_	_	
114-13	20542-20551	connected	_	_	_	
114-14	20552-20554	to	_	_	_	
114-15	20555-20556	a	_	_	_	
114-16	20557-20563	switch	_	_	_	
114-17	20564-20565	(	_	_	_	
114-18	20565-20568	not	_	_	_	
114-19	20569-20570	a	_	_	_	
114-20	20571-20574	hub	_	_	_	
114-21	20574-20575	)	_	_	_	
114-22	20576-20579	and	_	_	_	
114-23	20580-20583	the	_	_	_	
114-24	20584-20590	switch	_	_	_	
114-25	20591-20595	must	_	_	_	
114-26	20596-20598	be	_	_	_	
114-27	20599-20609	configured	_	_	_	
114-28	20610-20612	to	_	_	_	
114-29	20613-20618	allow	_	_	_	
114-30	20619-20630	full-duplex	_	_	_	
114-31	20631-20640	operation	_	_	_	
114-32	20641-20642	(	_	_	_	
114-33	20642-20648	almost	_	_	_	
114-34	20649-20655	always	_	_	_	
114-35	20656-20659	the	_	_	_	
114-36	20660-20667	default	_	_	_	
114-37	20667-20668	)	_	_	_	
114-38	20669-20671	on	_	_	_	
114-39	20672-20675	the	_	_	_	
114-40	20676-20681	ports	_	_	_	
114-41	20682-20686	that	_	_	_	
114-42	20687-20690	are	_	_	_	
114-43	20691-20696	being	_	_	_	
114-44	20697-20701	used	_	_	_	
114-45	20701-20702	.	_	_	_	

#Text=By definition, a network switch supports full duplex operation and a network hub (sometimes referred to as a repeater) does not.
115-1	20703-20705	By	_	_	_	
115-2	20706-20716	definition	_	_	_	
115-3	20716-20717	,	_	_	_	
115-4	20718-20719	a	_	_	_	
115-5	20720-20727	network	_	_	_	
115-6	20728-20734	switch	_	_	_	
115-7	20735-20743	supports	_	_	_	
115-8	20744-20748	full	_	_	_	
115-9	20749-20755	duplex	_	_	_	
115-10	20756-20765	operation	_	_	_	
115-11	20766-20769	and	_	_	_	
115-12	20770-20771	a	_	_	_	
115-13	20772-20779	network	_	_	_	
115-14	20780-20783	hub	_	_	_	
115-15	20784-20785	(	_	_	_	
115-16	20785-20794	sometimes	_	_	_	
115-17	20795-20803	referred	_	_	_	
115-18	20804-20806	to	_	_	_	
115-19	20807-20809	as	_	_	_	
115-20	20810-20811	a	_	_	_	
115-21	20812-20820	repeater	_	_	_	
115-22	20820-20821	)	_	_	_	
115-23	20822-20826	does	_	_	_	
115-24	20827-20830	not	_	_	_	
115-25	20830-20831	.	_	_	_	

#Text=If you are connecting to a hub, full-duplex operation will not be possible.
116-1	20832-20834	If	_	_	_	
116-2	20835-20838	you	_	_	_	
116-3	20839-20842	are	_	_	_	
116-4	20843-20853	connecting	_	_	_	
116-5	20854-20856	to	_	_	_	
116-6	20857-20858	a	_	_	_	
116-7	20859-20862	hub	_	_	_	
116-8	20862-20863	,	_	_	_	
116-9	20864-20875	full-duplex	_	_	_	
116-10	20876-20885	operation	_	_	_	
116-11	20886-20890	will	_	_	_	
116-12	20891-20894	not	_	_	_	
116-13	20895-20897	be	_	_	_	
116-14	20898-20906	possible	_	_	_	
116-15	20906-20907	.	_	_	_	

#Text=Most switches support using 100base-T (Fast Ethernet) as well as 10base-T, while most hubs will only use 10base-T, and while a few 100base-T hubs (and 10base-T switches) do exist, they are quite rare.
117-1	20908-20912	Most	_	_	_	
117-2	20913-20921	switches	_	_	_	
117-3	20922-20929	support	_	_	_	
117-4	20930-20935	using	_	_	_	
117-5	20936-20945	100base-T	_	_	_	
117-6	20946-20947	(	_	_	_	
117-7	20947-20951	Fast	_	_	_	
117-8	20952-20960	Ethernet	_	_	_	
117-9	20960-20961	)	_	_	_	
117-10	20962-20964	as	_	_	_	
117-11	20965-20969	well	_	_	_	
117-12	20970-20972	as	_	_	_	
117-13	20973-20981	10base-T	_	_	_	
117-14	20981-20982	,	_	_	_	
117-15	20983-20988	while	_	_	_	
117-16	20989-20993	most	_	_	_	
117-17	20994-20998	hubs	_	_	_	
117-18	20999-21003	will	_	_	_	
117-19	21004-21008	only	_	_	_	
117-20	21009-21012	use	_	_	_	
117-21	21013-21021	10base-T	_	_	_	
117-22	21021-21022	,	_	_	_	
117-23	21023-21026	and	_	_	_	
117-24	21027-21032	while	_	_	_	
117-25	21033-21034	a	_	_	_	
117-26	21035-21038	few	_	_	_	
117-27	21039-21048	100base-T	_	_	_	
117-28	21049-21053	hubs	_	_	_	
117-29	21054-21055	(	_	_	_	
117-30	21055-21058	and	_	_	_	
117-31	21059-21067	10base-T	_	_	_	
117-32	21068-21076	switches	_	_	_	
117-33	21076-21077	)	_	_	_	
117-34	21078-21080	do	_	_	_	
117-35	21081-21086	exist	_	_	_	
117-36	21086-21087	,	_	_	_	
117-37	21088-21092	they	_	_	_	
117-38	21093-21096	are	_	_	_	
117-39	21097-21102	quite	_	_	_	
117-40	21103-21107	rare	_	_	_	
117-41	21107-21108	.	_	_	_	

#Text=Gigabit switches can reliably be expected to handle both fast ethernet and normal ethernet connections in addition to the gigabit ethernet speeds.
118-1	21109-21116	Gigabit	_	_	_	
118-2	21117-21125	switches	_	_	_	
118-3	21126-21129	can	_	_	_	
118-4	21130-21138	reliably	_	_	_	
118-5	21139-21141	be	_	_	_	
118-6	21142-21150	expected	_	_	_	
118-7	21151-21153	to	_	_	_	
118-8	21154-21160	handle	_	_	_	
118-9	21161-21165	both	_	_	_	
118-10	21166-21170	fast	_	_	_	
118-11	21171-21179	ethernet	_	_	_	
118-12	21180-21183	and	_	_	_	
118-13	21184-21190	normal	_	_	_	
118-14	21191-21199	ethernet	_	_	_	
118-15	21200-21211	connections	_	_	_	
118-16	21212-21214	in	_	_	_	
118-17	21215-21223	addition	_	_	_	
118-18	21224-21226	to	_	_	_	
118-19	21227-21230	the	_	_	_	
118-20	21231-21238	gigabit	_	_	_	
118-21	21239-21247	ethernet	_	_	_	
118-22	21248-21254	speeds	_	_	_	
118-23	21254-21255	.	_	_	_	

#Text=Do not disable autonegotiation if things are currently working correctly.
119-1	21256-21258	Do	_	_	_	
119-2	21259-21262	not	_	_	_	
119-3	21263-21270	disable	_	_	_	
119-4	21271-21286	autonegotiation	_	_	_	
119-5	21287-21289	if	_	_	_	
119-6	21290-21296	things	_	_	_	
119-7	21297-21300	are	_	_	_	
119-8	21301-21310	currently	_	_	_	
119-9	21311-21318	working	_	_	_	
119-10	21319-21328	correctly	_	_	_	
119-11	21328-21329	.	_	_	_	

#Text=This will only create new problems, not prevent future ones.
120-1	21330-21334	This	_	_	_	
120-2	21335-21339	will	_	_	_	
120-3	21340-21344	only	_	_	_	
120-4	21345-21351	create	_	_	_	
120-5	21352-21355	new	_	_	_	
120-6	21356-21364	problems	_	_	_	
120-7	21364-21365	,	_	_	_	
120-8	21366-21369	not	_	_	_	
120-9	21370-21377	prevent	_	_	_	
120-10	21378-21384	future	_	_	_	
120-11	21385-21389	ones	_	_	_	
120-12	21389-21390	.	_	_	_	

#Text=Forced connections can't advertise what they are capable of so the autonegotiating side must assume half-duplex.
121-1	21391-21397	Forced	_	_	_	
121-2	21398-21409	connections	_	_	_	
121-3	21410-21415	can't	_	_	_	
121-4	21416-21425	advertise	_	_	_	
121-5	21426-21430	what	_	_	_	
121-6	21431-21435	they	_	_	_	
121-7	21436-21439	are	_	_	_	
121-8	21440-21447	capable	_	_	_	
121-9	21448-21450	of	_	_	_	
121-10	21451-21453	so	_	_	_	
121-11	21454-21457	the	_	_	_	
121-12	21458-21473	autonegotiating	_	_	_	
121-13	21474-21478	side	_	_	_	
121-14	21479-21483	must	_	_	_	
121-15	21484-21490	assume	_	_	_	
121-16	21491-21502	half-duplex	_	_	_	
121-17	21502-21503	.	_	_	_	

#Text=You will actually be creating a problem if the now forced connection was already full-duplex.
122-1	21504-21507	You	_	_	_	
122-2	21508-21512	will	_	_	_	
122-3	21513-21521	actually	_	_	_	
122-4	21522-21524	be	_	_	_	
122-5	21525-21533	creating	_	_	_	
122-6	21534-21535	a	_	_	_	
122-7	21536-21543	problem	_	_	_	
122-8	21544-21546	if	_	_	_	
122-9	21547-21550	the	_	_	_	
122-10	21551-21554	now	_	_	_	
122-11	21555-21561	forced	_	_	_	
122-12	21562-21572	connection	_	_	_	
122-13	21573-21576	was	_	_	_	
122-14	21577-21584	already	_	_	_	
122-15	21585-21596	full-duplex	_	_	_	
122-16	21596-21597	.	_	_	_	

#Text=It should be noted that most consumer-level switches and home routers do not support manual port configuration and this will result in them selecting a half-duplex connection if the remote end is no longer participating in connection negotiation.
123-1	21598-21600	It	_	_	_	
123-2	21601-21607	should	_	_	_	
123-3	21608-21610	be	_	_	_	
123-4	21611-21616	noted	_	_	_	
123-5	21617-21621	that	_	_	_	
123-6	21622-21626	most	_	_	_	
123-7	21627-21641	consumer-level	_	_	_	
123-8	21642-21650	switches	_	_	_	
123-9	21651-21654	and	_	_	_	
123-10	21655-21659	home	_	_	_	
123-11	21660-21667	routers	_	_	_	
123-12	21668-21670	do	_	_	_	
123-13	21671-21674	not	_	_	_	
123-14	21675-21682	support	_	_	_	
123-15	21683-21689	manual	_	_	_	
123-16	21690-21694	port	_	_	_	
123-17	21695-21708	configuration	_	_	_	
123-18	21709-21712	and	_	_	_	
123-19	21713-21717	this	_	_	_	
123-20	21718-21722	will	_	_	_	
123-21	21723-21729	result	_	_	_	
123-22	21730-21732	in	_	_	_	
123-23	21733-21737	them	_	_	_	
123-24	21738-21747	selecting	_	_	_	
123-25	21748-21749	a	_	_	_	
123-26	21750-21761	half-duplex	_	_	_	
123-27	21762-21772	connection	_	_	_	
123-28	21773-21775	if	_	_	_	
123-29	21776-21779	the	_	_	_	
123-30	21780-21786	remote	_	_	_	
123-31	21787-21790	end	_	_	_	
123-32	21791-21793	is	_	_	_	
123-33	21794-21796	no	_	_	_	
123-34	21797-21803	longer	_	_	_	
123-35	21804-21817	participating	_	_	_	
123-36	21818-21820	in	_	_	_	
123-37	21821-21831	connection	_	_	_	
123-38	21832-21843	negotiation	_	_	_	
123-39	21843-21844	.	_	_	_	

#Text=Nearly all of the time, using autonegotiation on all of the equipment will give you the best possible results.
124-1	21845-21851	Nearly	_	_	_	
124-2	21852-21855	all	_	_	_	
124-3	21856-21858	of	_	_	_	
124-4	21859-21862	the	_	_	_	
124-5	21863-21867	time	_	_	_	
124-6	21867-21868	,	_	_	_	
124-7	21869-21874	using	_	_	_	
124-8	21875-21890	autonegotiation	_	_	_	
124-9	21891-21893	on	_	_	_	
124-10	21894-21897	all	_	_	_	
124-11	21898-21900	of	_	_	_	
124-12	21901-21904	the	_	_	_	
124-13	21905-21914	equipment	_	_	_	
124-14	21915-21919	will	_	_	_	
124-15	21920-21924	give	_	_	_	
124-16	21925-21928	you	_	_	_	
124-17	21929-21932	the	_	_	_	
124-18	21933-21937	best	_	_	_	
124-19	21938-21946	possible	_	_	_	
124-20	21947-21954	results	_	_	_	
124-21	21954-21955	.	_	_	_	

#Text=If you encounter problems with autonegotiation you can opt to manually configure settings for that device but it is highly recommended that you manually configure every piece of equipment on that segment as well.
125-1	21956-21958	If	_	_	_	
125-2	21959-21962	you	_	_	_	
125-3	21963-21972	encounter	_	_	_	
125-4	21973-21981	problems	_	_	_	
125-5	21982-21986	with	_	_	_	
125-6	21987-22002	autonegotiation	_	_	_	
125-7	22003-22006	you	_	_	_	
125-8	22007-22010	can	_	_	_	
125-9	22011-22014	opt	_	_	_	
125-10	22015-22017	to	_	_	_	
125-11	22018-22026	manually	_	_	_	
125-12	22027-22036	configure	_	_	_	
125-13	22037-22045	settings	_	_	_	
125-14	22046-22049	for	_	_	_	
125-15	22050-22054	that	_	_	_	
125-16	22055-22061	device	_	_	_	
125-17	22062-22065	but	_	_	_	
125-18	22066-22068	it	_	_	_	
125-19	22069-22071	is	_	_	_	
125-20	22072-22078	highly	_	_	_	
125-21	22079-22090	recommended	_	_	_	
125-22	22091-22095	that	_	_	_	
125-23	22096-22099	you	_	_	_	
125-24	22100-22108	manually	_	_	_	
125-25	22109-22118	configure	_	_	_	
125-26	22119-22124	every	_	_	_	
125-27	22125-22130	piece	_	_	_	
125-28	22131-22133	of	_	_	_	
125-29	22134-22143	equipment	_	_	_	
125-30	22144-22146	on	_	_	_	
125-31	22147-22151	that	_	_	_	
125-32	22152-22159	segment	_	_	_	
125-33	22160-22162	as	_	_	_	
125-34	22163-22167	well	_	_	_	
125-35	22167-22168	.	_	_	_	

#Text=Operating System
#Text=Kernel Selection
#Text=Many Linux distributions have alternative pre-compiled kernels that you can use.
126-1	22169-22178	Operating	_	_	_	
126-2	22179-22185	System	_	_	_	
126-3	22186-22192	Kernel	_	_	_	
126-4	22193-22202	Selection	_	_	_	
126-5	22203-22207	Many	_	_	_	
126-6	22208-22213	Linux	_	_	_	
126-7	22214-22227	distributions	_	_	_	
126-8	22228-22232	have	_	_	_	
126-9	22233-22244	alternative	_	_	_	
126-10	22245-22257	pre-compiled	_	_	_	
126-11	22258-22265	kernels	_	_	_	
126-12	22266-22270	that	_	_	_	
126-13	22271-22274	you	_	_	_	
126-14	22275-22278	can	_	_	_	
126-15	22279-22282	use	_	_	_	
126-16	22282-22283	.	_	_	_	

#Text=Depending on how sensitive your setup is to latency, you can test out different ones to see if they solve your issues and reduce latency caused by the kernel scheduler.
127-1	22284-22293	Depending	_	_	_	
127-2	22294-22296	on	_	_	_	
127-3	22297-22300	how	_	_	_	
127-4	22301-22310	sensitive	_	_	_	
127-5	22311-22315	your	_	_	_	
127-6	22316-22321	setup	_	_	_	
127-7	22322-22324	is	_	_	_	
127-8	22325-22327	to	_	_	_	
127-9	22328-22335	latency	_	_	_	
127-10	22335-22336	,	_	_	_	
127-11	22337-22340	you	_	_	_	
127-12	22341-22344	can	_	_	_	
127-13	22345-22349	test	_	_	_	
127-14	22350-22353	out	_	_	_	
127-15	22354-22363	different	_	_	_	
127-16	22364-22368	ones	_	_	_	
127-17	22369-22371	to	_	_	_	
127-18	22372-22375	see	_	_	_	
127-19	22376-22378	if	_	_	_	
127-20	22379-22383	they	_	_	_	
127-21	22384-22389	solve	_	_	_	
127-22	22390-22394	your	_	_	_	
127-23	22395-22401	issues	_	_	_	
127-24	22402-22405	and	_	_	_	
127-25	22406-22412	reduce	_	_	_	
127-26	22413-22420	latency	_	_	_	
127-27	22421-22427	caused	_	_	_	
127-28	22428-22430	by	_	_	_	
127-29	22431-22434	the	_	_	_	
127-30	22435-22441	kernel	_	_	_	
127-31	22442-22451	scheduler	_	_	_	
127-32	22451-22452	.	_	_	_	

#Text=Decoding and playback on low powered machines are more sensitive to latency.
128-1	22453-22461	Decoding	_	_	_	
128-2	22462-22465	and	_	_	_	
128-3	22466-22474	playback	_	_	_	
128-4	22475-22477	on	_	_	_	
128-5	22478-22481	low	_	_	_	
128-6	22482-22489	powered	_	_	_	
128-7	22490-22498	machines	_	_	_	
128-8	22499-22502	are	_	_	_	
128-9	22503-22507	more	_	_	_	
128-10	22508-22517	sensitive	_	_	_	
128-11	22518-22520	to	_	_	_	
128-12	22521-22528	latency	_	_	_	
128-13	22528-22529	.	_	_	_	

#Text=This article on Ubuntu describe various different kernels.
129-1	22530-22534	This	_	_	_	
129-2	22535-22542	article	_	_	_	
129-3	22543-22545	on	_	_	_	
129-4	22546-22552	Ubuntu	_	_	_	
129-5	22553-22561	describe	_	_	_	
129-6	22562-22569	various	_	_	_	
129-7	22570-22579	different	_	_	_	
129-8	22580-22587	kernels	_	_	_	
129-9	22587-22588	.	_	_	_	

#Text=Kernel Configuration
#Text=If you're compiling your own kernel, you might want to try out the following options:
#Text=Processor Family
#Text=Ensure that the "Processor Family" (in "Processor Type and Features") is configured correctly.
130-1	22589-22595	Kernel	_	_	_	
130-2	22596-22609	Configuration	_	_	_	
130-3	22610-22612	If	_	_	_	
130-4	22613-22619	you're	_	_	_	
130-5	22620-22629	compiling	_	_	_	
130-6	22630-22634	your	_	_	_	
130-7	22635-22638	own	_	_	_	
130-8	22639-22645	kernel	_	_	_	
130-9	22645-22646	,	_	_	_	
130-10	22647-22650	you	_	_	_	
130-11	22651-22656	might	_	_	_	
130-12	22657-22661	want	_	_	_	
130-13	22662-22664	to	_	_	_	
130-14	22665-22668	try	_	_	_	
130-15	22669-22672	out	_	_	_	
130-16	22673-22676	the	_	_	_	
130-17	22677-22686	following	_	_	_	
130-18	22687-22694	options	_	_	_	
130-19	22694-22695	:	_	_	_	
130-20	22696-22705	Processor	_	_	_	
130-21	22706-22712	Family	_	_	_	
130-22	22713-22719	Ensure	_	_	_	
130-23	22720-22724	that	_	_	_	
130-24	22725-22728	the	_	_	_	
130-25	22729-22730	"	_	_	_	
130-26	22730-22739	Processor	_	_	_	
130-27	22740-22746	Family	_	_	_	
130-28	22746-22747	"	_	_	_	
130-29	22748-22749	(	_	_	_	
130-30	22749-22751	in	_	_	_	
130-31	22752-22753	"	_	_	_	
130-32	22753-22762	Processor	_	_	_	
130-33	22763-22767	Type	_	_	_	
130-34	22768-22771	and	_	_	_	
130-35	22772-22780	Features	_	_	_	
130-36	22780-22781	"	_	_	_	
130-37	22781-22782	)	_	_	_	
130-38	22783-22785	is	_	_	_	
130-39	22786-22796	configured	_	_	_	
130-40	22797-22806	correctly	_	_	_	
130-41	22806-22807	.	_	_	_	

#Text=IDE Controller
#Text=Ensure that the correct IDE controller is set (in "Device Drivers->ATA/ATAPI support->PCI IDE chipset support").
131-1	22808-22811	IDE	_	_	_	
131-2	22812-22822	Controller	_	_	_	
131-3	22823-22829	Ensure	_	_	_	
131-4	22830-22834	that	_	_	_	
131-5	22835-22838	the	_	_	_	
131-6	22839-22846	correct	_	_	_	
131-7	22847-22850	IDE	_	_	_	
131-8	22851-22861	controller	_	_	_	
131-9	22862-22864	is	_	_	_	
131-10	22865-22868	set	_	_	_	
131-11	22869-22870	(	_	_	_	
131-12	22870-22872	in	_	_	_	
131-13	22873-22874	"	_	_	_	
131-14	22874-22880	Device	_	_	_	
131-15	22881-22888	Drivers	_	_	_	
131-16	22888-22889	-	_	_	_	
131-17	22889-22890	>	_	_	_	
131-18	22890-22893	ATA	_	_	_	
131-19	22893-22894	/	_	_	_	
131-20	22894-22899	ATAPI	_	_	_	
131-21	22900-22907	support	_	_	_	
131-22	22907-22908	-	_	_	_	
131-23	22908-22909	>	_	_	_	
131-24	22909-22912	PCI	_	_	_	
131-25	22913-22916	IDE	_	_	_	
131-26	22917-22924	chipset	_	_	_	
131-27	22925-22932	support	_	_	_	
131-28	22932-22933	"	_	_	_	
131-29	22933-22934	)	_	_	_	
131-30	22934-22935	.	_	_	_	

#Text=There is a generic IDE controller driver in the kernel that will handle many different chipsets, but it's performance is sub-par.
132-1	22936-22941	There	_	_	_	
132-2	22942-22944	is	_	_	_	
132-3	22945-22946	a	_	_	_	
132-4	22947-22954	generic	_	_	_	
132-5	22955-22958	IDE	_	_	_	
132-6	22959-22969	controller	_	_	_	
132-7	22970-22976	driver	_	_	_	
132-8	22977-22979	in	_	_	_	
132-9	22980-22983	the	_	_	_	
132-10	22984-22990	kernel	_	_	_	
132-11	22991-22995	that	_	_	_	
132-12	22996-23000	will	_	_	_	
132-13	23001-23007	handle	_	_	_	
132-14	23008-23012	many	_	_	_	
132-15	23013-23022	different	_	_	_	
132-16	23023-23031	chipsets	_	_	_	
132-17	23031-23032	,	_	_	_	
132-18	23033-23036	but	_	_	_	
132-19	23037-23041	it's	_	_	_	
132-20	23042-23053	performance	_	_	_	
132-21	23054-23056	is	_	_	_	
132-22	23057-23064	sub-par	_	_	_	
132-23	23064-23065	.	_	_	_	

#Text=Preemptible Kernel
#Text=Kernel preemption allows high priority threads to interrupt even kernel operations -- this ensures the lowest possible latency when responding to important events.
133-1	23066-23077	Preemptible	_	_	_	
133-2	23078-23084	Kernel	_	_	_	
133-3	23085-23091	Kernel	_	_	_	
133-4	23092-23102	preemption	_	_	_	
133-5	23103-23109	allows	_	_	_	
133-6	23110-23114	high	_	_	_	
133-7	23115-23123	priority	_	_	_	
133-8	23124-23131	threads	_	_	_	
133-9	23132-23134	to	_	_	_	
133-10	23135-23144	interrupt	_	_	_	
133-11	23145-23149	even	_	_	_	
133-12	23150-23156	kernel	_	_	_	
133-13	23157-23167	operations	_	_	_	
133-14	23168-23169	-	_	_	_	
133-15	23169-23170	-	_	_	_	
133-16	23171-23175	this	_	_	_	
133-17	23176-23183	ensures	_	_	_	
133-18	23184-23187	the	_	_	_	
133-19	23188-23194	lowest	_	_	_	
133-20	23195-23203	possible	_	_	_	
133-21	23204-23211	latency	_	_	_	
133-22	23212-23216	when	_	_	_	
133-23	23217-23227	responding	_	_	_	
133-24	23228-23230	to	_	_	_	
133-25	23231-23240	important	_	_	_	
133-26	23241-23247	events	_	_	_	
133-27	23247-23248	.	_	_	_	

#Text=(Note: apparently some IVTV drivers show stability problems with a preemptible kernel.)
134-1	23249-23250	(	_	_	_	
134-2	23250-23254	Note	_	_	_	
134-3	23254-23255	:	_	_	_	
134-4	23256-23266	apparently	_	_	_	
134-5	23267-23271	some	_	_	_	
134-6	23272-23276	IVTV	_	_	_	
134-7	23277-23284	drivers	_	_	_	
134-8	23285-23289	show	_	_	_	
134-9	23290-23299	stability	_	_	_	
134-10	23300-23308	problems	_	_	_	
134-11	23309-23313	with	_	_	_	
134-12	23314-23315	a	_	_	_	
134-13	23316-23327	preemptible	_	_	_	
134-14	23328-23334	kernel	_	_	_	
134-15	23334-23335	.	_	_	_	
134-16	23335-23336	)	_	_	_	

#Text=Timer Frequency
#Text=Increasing the scheduler's timer frequency to 1000Hz can reduce latency between multiple threads of execution (at a small cost to overall performance), e.g. when recording/playing multiple video streams.
135-1	23337-23342	Timer	_	_	_	
135-2	23343-23352	Frequency	_	_	_	
135-3	23353-23363	Increasing	_	_	_	
135-4	23364-23367	the	_	_	_	
135-5	23368-23379	scheduler's	_	_	_	
135-6	23380-23385	timer	_	_	_	
135-7	23386-23395	frequency	_	_	_	
135-8	23396-23398	to	_	_	_	
135-9	23399-23405	1000Hz	_	_	_	
135-10	23406-23409	can	_	_	_	
135-11	23410-23416	reduce	_	_	_	
135-12	23417-23424	latency	_	_	_	
135-13	23425-23432	between	_	_	_	
135-14	23433-23441	multiple	_	_	_	
135-15	23442-23449	threads	_	_	_	
135-16	23450-23452	of	_	_	_	
135-17	23453-23462	execution	_	_	_	
135-18	23463-23464	(	_	_	_	
135-19	23464-23466	at	_	_	_	
135-20	23467-23468	a	_	_	_	
135-21	23469-23474	small	_	_	_	
135-22	23475-23479	cost	_	_	_	
135-23	23480-23482	to	_	_	_	
135-24	23483-23490	overall	_	_	_	
135-25	23491-23502	performance	_	_	_	
135-26	23502-23503	)	_	_	_	
135-27	23503-23504	,	_	_	_	
135-28	23505-23508	e.g	_	_	_	
135-29	23508-23509	.	_	_	_	
135-30	23510-23514	when	_	_	_	
135-31	23515-23524	recording	_	_	_	
135-32	23524-23525	/	_	_	_	
135-33	23525-23532	playing	_	_	_	
135-34	23533-23541	multiple	_	_	_	
135-35	23542-23547	video	_	_	_	
135-36	23548-23555	streams	_	_	_	
135-37	23555-23556	.	_	_	_	

#Text=Generally you will want to pick 300Hz which is neatly divisible by both 50Hz (PAL) and 60Hz (NTSC) because of the frame rates involved in displaying your media.
136-1	23557-23566	Generally	_	_	_	
136-2	23567-23570	you	_	_	_	
136-3	23571-23575	will	_	_	_	
136-4	23576-23580	want	_	_	_	
136-5	23581-23583	to	_	_	_	
136-6	23584-23588	pick	_	_	_	
136-7	23589-23594	300Hz	_	_	_	
136-8	23595-23600	which	_	_	_	
136-9	23601-23603	is	_	_	_	
136-10	23604-23610	neatly	_	_	_	
136-11	23611-23620	divisible	_	_	_	
136-12	23621-23623	by	_	_	_	
136-13	23624-23628	both	_	_	_	
136-14	23629-23633	50Hz	_	_	_	
136-15	23634-23635	(	_	_	_	
136-16	23635-23638	PAL	_	_	_	
136-17	23638-23639	)	_	_	_	
136-18	23640-23643	and	_	_	_	
136-19	23644-23648	60Hz	_	_	_	
136-20	23649-23650	(	_	_	_	
136-21	23650-23654	NTSC	_	_	_	
136-22	23654-23655	)	_	_	_	
136-23	23656-23663	because	_	_	_	
136-24	23664-23666	of	_	_	_	
136-25	23667-23670	the	_	_	_	
136-26	23671-23676	frame	_	_	_	
136-27	23677-23682	rates	_	_	_	
136-28	23683-23691	involved	_	_	_	
136-29	23692-23694	in	_	_	_	
136-30	23695-23705	displaying	_	_	_	
136-31	23706-23710	your	_	_	_	
136-32	23711-23716	media	_	_	_	
136-33	23716-23717	.	_	_	_	

#Text=On some machines you may hear an annoying high-pitched "whistle": reduce the frequency to 250Hz or lower to avoid this.
137-1	23718-23720	On	_	_	_	
137-2	23721-23725	some	_	_	_	
137-3	23726-23734	machines	_	_	_	
137-4	23735-23738	you	_	_	_	
137-5	23739-23742	may	_	_	_	
137-6	23743-23747	hear	_	_	_	
137-7	23748-23750	an	_	_	_	
137-8	23751-23759	annoying	_	_	_	
137-9	23760-23772	high-pitched	_	_	_	
137-10	23773-23774	"	_	_	_	
137-11	23774-23781	whistle	_	_	_	
137-12	23781-23782	"	_	_	_	
137-13	23782-23783	:	_	_	_	
137-14	23784-23790	reduce	_	_	_	
137-15	23791-23794	the	_	_	_	
137-16	23795-23804	frequency	_	_	_	
137-17	23805-23807	to	_	_	_	
137-18	23808-23813	250Hz	_	_	_	
137-19	23814-23816	or	_	_	_	
137-20	23817-23822	lower	_	_	_	
137-21	23823-23825	to	_	_	_	
137-22	23826-23831	avoid	_	_	_	
137-23	23832-23836	this	_	_	_	
137-24	23836-23837	.	_	_	_	

#Text=Realtime Threads
#Text=The mythfrontend & mythtv threads can be configured to run with "realtime" priorities - if the frontend is configured this way, and if sufficient privileges are available to the user running mythfrontend.
138-1	23838-23846	Realtime	_	_	_	
138-2	23847-23854	Threads	_	_	_	
138-3	23855-23858	The	_	_	_	
138-4	23859-23871	mythfrontend	_	_	_	
138-5	23872-23873	&	_	_	_	
138-6	23874-23880	mythtv	_	_	_	
138-7	23881-23888	threads	_	_	_	
138-8	23889-23892	can	_	_	_	
138-9	23893-23895	be	_	_	_	
138-10	23896-23906	configured	_	_	_	
138-11	23907-23909	to	_	_	_	
138-12	23910-23913	run	_	_	_	
138-13	23914-23918	with	_	_	_	
138-14	23919-23920	"	_	_	_	
138-15	23920-23928	realtime	_	_	_	
138-16	23928-23929	"	_	_	_	
138-17	23930-23940	priorities	_	_	_	
138-18	23941-23942	-	_	_	_	
138-19	23943-23945	if	_	_	_	
138-20	23946-23949	the	_	_	_	
138-21	23950-23958	frontend	_	_	_	
138-22	23959-23961	is	_	_	_	
138-23	23962-23972	configured	_	_	_	
138-24	23973-23977	this	_	_	_	
138-25	23978-23981	way	_	_	_	
138-26	23981-23982	,	_	_	_	
138-27	23983-23986	and	_	_	_	
138-28	23987-23989	if	_	_	_	
138-29	23990-24000	sufficient	_	_	_	
138-30	24001-24011	privileges	_	_	_	
138-31	24012-24015	are	_	_	_	
138-32	24016-24025	available	_	_	_	
138-33	24026-24028	to	_	_	_	
138-34	24029-24032	the	_	_	_	
138-35	24033-24037	user	_	_	_	
138-36	24038-24045	running	_	_	_	
138-37	24046-24058	mythfrontend	_	_	_	
138-38	24058-24059	.	_	_	_	

#Text=The HOWTO has an excellent section on how to set your system up to enable this (look for "Enabling real-time scheduling of the display thread.")
139-1	24060-24063	The	_	_	_	
139-2	24064-24069	HOWTO	_	_	_	
139-3	24070-24073	has	_	_	_	
139-4	24074-24076	an	_	_	_	
139-5	24077-24086	excellent	_	_	_	
139-6	24087-24094	section	_	_	_	
139-7	24095-24097	on	_	_	_	
139-8	24098-24101	how	_	_	_	
139-9	24102-24104	to	_	_	_	
139-10	24105-24108	set	_	_	_	
139-11	24109-24113	your	_	_	_	
139-12	24114-24120	system	_	_	_	
139-13	24121-24123	up	_	_	_	
139-14	24124-24126	to	_	_	_	
139-15	24127-24133	enable	_	_	_	
139-16	24134-24138	this	_	_	_	
139-17	24139-24140	(	_	_	_	
139-18	24140-24144	look	_	_	_	
139-19	24145-24148	for	_	_	_	
139-20	24149-24150	"	_	_	_	
139-21	24150-24158	Enabling	_	_	_	
139-22	24159-24168	real-time	_	_	_	
139-23	24169-24179	scheduling	_	_	_	
139-24	24180-24182	of	_	_	_	
139-25	24183-24186	the	_	_	_	
139-26	24187-24194	display	_	_	_	
139-27	24195-24201	thread	_	_	_	
139-28	24201-24202	.	_	_	_	
139-29	24202-24203	"	_	_	_	
139-30	24203-24204	)	_	_	_	

#Text=You will also need to select "Enable Realtime Priority Threads" in the General Playback frontend setup dialogue.
140-1	24205-24208	You	_	_	_	
140-2	24209-24213	will	_	_	_	
140-3	24214-24218	also	_	_	_	
140-4	24219-24223	need	_	_	_	
140-5	24224-24226	to	_	_	_	
140-6	24227-24233	select	_	_	_	
140-7	24234-24235	"	_	_	_	
140-8	24235-24241	Enable	_	_	_	
140-9	24242-24250	Realtime	_	_	_	
140-10	24251-24259	Priority	_	_	_	
140-11	24260-24267	Threads	_	_	_	
140-12	24267-24268	"	_	_	_	
140-13	24269-24271	in	_	_	_	
140-14	24272-24275	the	_	_	_	
140-15	24276-24283	General	_	_	_	
140-16	24284-24292	Playback	_	_	_	
140-17	24293-24301	frontend	_	_	_	
140-18	24302-24307	setup	_	_	_	
140-19	24308-24316	dialogue	_	_	_	
140-20	24316-24317	.	_	_	_	

#Text=Realtime threads can help smooth out video and audio, because the system scheduler gives very high priority to mythtv.
141-1	24318-24326	Realtime	_	_	_	
141-2	24327-24334	threads	_	_	_	
141-3	24335-24338	can	_	_	_	
141-4	24339-24343	help	_	_	_	
141-5	24344-24350	smooth	_	_	_	
141-6	24351-24354	out	_	_	_	
141-7	24355-24360	video	_	_	_	
141-8	24361-24364	and	_	_	_	
141-9	24365-24370	audio	_	_	_	
141-10	24370-24371	,	_	_	_	
141-11	24372-24379	because	_	_	_	
141-12	24380-24383	the	_	_	_	
141-13	24384-24390	system	_	_	_	
141-14	24391-24400	scheduler	_	_	_	
141-15	24401-24406	gives	_	_	_	
141-16	24407-24411	very	_	_	_	
141-17	24412-24416	high	_	_	_	
141-18	24417-24425	priority	_	_	_	
141-19	24426-24428	to	_	_	_	
141-20	24429-24435	mythtv	_	_	_	
141-21	24435-24436	.	_	_	_	

#Text=For more information on how this works, see the Real-Time chapter in Robert Love's great Linux Kernel Development book.
142-1	24437-24440	For	_	_	_	
142-2	24441-24445	more	_	_	_	
142-3	24446-24457	information	_	_	_	
142-4	24458-24460	on	_	_	_	
142-5	24461-24464	how	_	_	_	
142-6	24465-24469	this	_	_	_	
142-7	24470-24475	works	_	_	_	
142-8	24475-24476	,	_	_	_	
142-9	24477-24480	see	_	_	_	
142-10	24481-24484	the	_	_	_	
142-11	24485-24494	Real-Time	_	_	_	
142-12	24495-24502	chapter	_	_	_	
142-13	24503-24505	in	_	_	_	
142-14	24506-24512	Robert	_	_	_	
142-15	24513-24519	Love's	_	_	_	
142-16	24520-24525	great	_	_	_	
142-17	24526-24531	Linux	_	_	_	
142-18	24532-24538	Kernel	_	_	_	
142-19	24539-24550	Development	_	_	_	
142-20	24551-24555	book	_	_	_	
142-21	24555-24556	.	_	_	_	

#Text=PCI Latency
#Text=Incorrect or less-than-optimal settings of PCI Latency can cause performance-related problems.
143-1	24557-24560	PCI	_	_	_	
143-2	24561-24568	Latency	_	_	_	
143-3	24569-24578	Incorrect	_	_	_	
143-4	24579-24581	or	_	_	_	
143-5	24582-24599	less-than-optimal	_	_	_	
143-6	24600-24608	settings	_	_	_	
143-7	24609-24611	of	_	_	_	
143-8	24612-24615	PCI	_	_	_	
143-9	24616-24623	Latency	_	_	_	
143-10	24624-24627	can	_	_	_	
143-11	24628-24633	cause	_	_	_	
143-12	24634-24653	performance-related	_	_	_	
143-13	24654-24662	problems	_	_	_	
143-14	24662-24663	.	_	_	_	

#Text=See the page PCI Latency
#Text=RTC Maximum Frequency
#Text=See Adjusting_the_RTC_Interrupt_Frequency
#Text=Linux Distribution Selection
#Text=At a more fundamental level, your choice of a Linux distribution can have a large impact on the overall performance of your Myth machine.
144-1	24664-24667	See	_	_	_	
144-2	24668-24671	the	_	_	_	
144-3	24672-24676	page	_	_	_	
144-4	24677-24680	PCI	_	_	_	
144-5	24681-24688	Latency	_	_	_	
144-6	24689-24692	RTC	_	_	_	
144-7	24693-24700	Maximum	_	_	_	
144-8	24701-24710	Frequency	_	_	_	
144-9	24711-24714	See	_	_	_	
144-10	24715-24752	Adjusting_the_RTC_Interrupt_Frequency	_	_	_	
144-11	24753-24758	Linux	_	_	_	
144-12	24759-24771	Distribution	_	_	_	
144-13	24772-24781	Selection	_	_	_	
144-14	24782-24784	At	_	_	_	
144-15	24785-24786	a	_	_	_	
144-16	24787-24791	more	_	_	_	
144-17	24792-24803	fundamental	_	_	_	
144-18	24804-24809	level	_	_	_	
144-19	24809-24810	,	_	_	_	
144-20	24811-24815	your	_	_	_	
144-21	24816-24822	choice	_	_	_	
144-22	24823-24825	of	_	_	_	
144-23	24826-24827	a	_	_	_	
144-24	24828-24833	Linux	_	_	_	
144-25	24834-24846	distribution	_	_	_	
144-26	24847-24850	can	_	_	_	
144-27	24851-24855	have	_	_	_	
144-28	24856-24857	a	_	_	_	
144-29	24858-24863	large	_	_	_	
144-30	24864-24870	impact	_	_	_	
144-31	24871-24873	on	_	_	_	
144-32	24874-24877	the	_	_	_	
144-33	24878-24885	overall	_	_	_	
144-34	24886-24897	performance	_	_	_	
144-35	24898-24900	of	_	_	_	
144-36	24901-24905	your	_	_	_	
144-37	24906-24910	Myth	_	_	_	
144-38	24911-24918	machine	_	_	_	
144-39	24918-24919	.	_	_	_	

#Text=Most "modern" distributions (Fedora, Ubuntu, etc) come with default installations intended to give the best initial user experience by providing support for scores of devices & programs, with automation wherever possible.
145-1	24920-24924	Most	_	_	_	
145-2	24925-24926	"	_	_	_	
145-3	24926-24932	modern	_	_	_	
145-4	24932-24933	"	_	_	_	
145-5	24934-24947	distributions	_	_	_	
145-6	24948-24949	(	_	_	_	
145-7	24949-24955	Fedora	_	_	_	
145-8	24955-24956	,	_	_	_	
145-9	24957-24963	Ubuntu	_	_	_	
145-10	24963-24964	,	_	_	_	
145-11	24965-24968	etc	_	_	_	
145-12	24968-24969	)	_	_	_	
145-13	24970-24974	come	_	_	_	
145-14	24975-24979	with	_	_	_	
145-15	24980-24987	default	_	_	_	
145-16	24988-25001	installations	_	_	_	
145-17	25002-25010	intended	_	_	_	
145-18	25011-25013	to	_	_	_	
145-19	25014-25018	give	_	_	_	
145-20	25019-25022	the	_	_	_	
145-21	25023-25027	best	_	_	_	
145-22	25028-25035	initial	_	_	_	
145-23	25036-25040	user	_	_	_	
145-24	25041-25051	experience	_	_	_	
145-25	25052-25054	by	_	_	_	
145-26	25055-25064	providing	_	_	_	
145-27	25065-25072	support	_	_	_	
145-28	25073-25076	for	_	_	_	
145-29	25077-25083	scores	_	_	_	
145-30	25084-25086	of	_	_	_	
145-31	25087-25094	devices	_	_	_	
145-32	25095-25096	&	_	_	_	
145-33	25097-25105	programs	_	_	_	
145-34	25105-25106	,	_	_	_	
145-35	25107-25111	with	_	_	_	
145-36	25112-25122	automation	_	_	_	
145-37	25123-25131	wherever	_	_	_	
145-38	25132-25140	possible	_	_	_	
145-39	25140-25141	.	_	_	_	

#Text=The downside to this, is that these default installations have large kernels and large numbers of background processes running to support this usage.
146-1	25142-25145	The	_	_	_	
146-2	25146-25154	downside	_	_	_	
146-3	25155-25157	to	_	_	_	
146-4	25158-25162	this	_	_	_	
146-5	25162-25163	,	_	_	_	
146-6	25164-25166	is	_	_	_	
146-7	25167-25171	that	_	_	_	
146-8	25172-25177	these	_	_	_	
146-9	25178-25185	default	_	_	_	
146-10	25186-25199	installations	_	_	_	
146-11	25200-25204	have	_	_	_	
146-12	25205-25210	large	_	_	_	
146-13	25211-25218	kernels	_	_	_	
146-14	25219-25222	and	_	_	_	
146-15	25223-25228	large	_	_	_	
146-16	25229-25236	numbers	_	_	_	
146-17	25237-25239	of	_	_	_	
146-18	25240-25250	background	_	_	_	
146-19	25251-25260	processes	_	_	_	
146-20	25261-25268	running	_	_	_	
146-21	25269-25271	to	_	_	_	
146-22	25272-25279	support	_	_	_	
146-23	25280-25284	this	_	_	_	
146-24	25285-25290	usage	_	_	_	
146-25	25290-25291	.	_	_	_	

#Text=While any distribution can be whittled down to meet a more focused need, it takes an effort to do so.
147-1	25292-25297	While	_	_	_	
147-2	25298-25301	any	_	_	_	
147-3	25302-25314	distribution	_	_	_	
147-4	25315-25318	can	_	_	_	
147-5	25319-25321	be	_	_	_	
147-6	25322-25330	whittled	_	_	_	
147-7	25331-25335	down	_	_	_	
147-8	25336-25338	to	_	_	_	
147-9	25339-25343	meet	_	_	_	
147-10	25344-25345	a	_	_	_	
147-11	25346-25350	more	_	_	_	
147-12	25351-25358	focused	_	_	_	
147-13	25359-25363	need	_	_	_	
147-14	25363-25364	,	_	_	_	
147-15	25365-25367	it	_	_	_	
147-16	25368-25373	takes	_	_	_	
147-17	25374-25376	an	_	_	_	
147-18	25377-25383	effort	_	_	_	
147-19	25384-25386	to	_	_	_	
147-20	25387-25389	do	_	_	_	
147-21	25390-25392	so	_	_	_	
147-22	25392-25393	.	_	_	_	

#Text=An alternative approach, is to select a distribution such as Gentoo that provides you with a blank slate by default.
148-1	25394-25396	An	_	_	_	
148-2	25397-25408	alternative	_	_	_	
148-3	25409-25417	approach	_	_	_	
148-4	25417-25418	,	_	_	_	
148-5	25419-25421	is	_	_	_	
148-6	25422-25424	to	_	_	_	
148-7	25425-25431	select	_	_	_	
148-8	25432-25433	a	_	_	_	
148-9	25434-25446	distribution	_	_	_	
148-10	25447-25451	such	_	_	_	
148-11	25452-25454	as	_	_	_	
148-12	25455-25461	Gentoo	_	_	_	
148-13	25462-25466	that	_	_	_	
148-14	25467-25475	provides	_	_	_	
148-15	25476-25479	you	_	_	_	
148-16	25480-25484	with	_	_	_	
148-17	25485-25486	a	_	_	_	
148-18	25487-25492	blank	_	_	_	
148-19	25493-25498	slate	_	_	_	
148-20	25499-25501	by	_	_	_	
148-21	25502-25509	default	_	_	_	
148-22	25509-25510	.	_	_	_	

#Text=This allows you to add only the components you need, ensuring a clean system with minimal effort.
149-1	25511-25515	This	_	_	_	
149-2	25516-25522	allows	_	_	_	
149-3	25523-25526	you	_	_	_	
149-4	25527-25529	to	_	_	_	
149-5	25530-25533	add	_	_	_	
149-6	25534-25538	only	_	_	_	
149-7	25539-25542	the	_	_	_	
149-8	25543-25553	components	_	_	_	
149-9	25554-25557	you	_	_	_	
149-10	25558-25562	need	_	_	_	
149-11	25562-25563	,	_	_	_	
149-12	25564-25572	ensuring	_	_	_	
149-13	25573-25574	a	_	_	_	
149-14	25575-25580	clean	_	_	_	
149-15	25581-25587	system	_	_	_	
149-16	25588-25592	with	_	_	_	
149-17	25593-25600	minimal	_	_	_	
149-18	25601-25607	effort	_	_	_	
149-19	25607-25608	.	_	_	_	

#Text=Other Software
#Text=MythTV
#Text=Multiple Machines
#Text=One great feature of the MythTV architecture is that the recording and playback functions are split between two applications - the backend and the frontend.
150-1	25609-25614	Other	_	_	_	
150-2	25615-25623	Software	_	_	_	
150-3	25624-25630	MythTV	_	_	_	
150-4	25631-25639	Multiple	_	_	_	
150-5	25640-25648	Machines	_	_	_	
150-6	25649-25652	One	_	_	_	
150-7	25653-25658	great	_	_	_	
150-8	25659-25666	feature	_	_	_	
150-9	25667-25669	of	_	_	_	
150-10	25670-25673	the	_	_	_	
150-11	25674-25680	MythTV	_	_	_	
150-12	25681-25693	architecture	_	_	_	
150-13	25694-25696	is	_	_	_	
150-14	25697-25701	that	_	_	_	
150-15	25702-25705	the	_	_	_	
150-16	25706-25715	recording	_	_	_	
150-17	25716-25719	and	_	_	_	
150-18	25720-25728	playback	_	_	_	
150-19	25729-25738	functions	_	_	_	
150-20	25739-25742	are	_	_	_	
150-21	25743-25748	split	_	_	_	
150-22	25749-25756	between	_	_	_	
150-23	25757-25760	two	_	_	_	
150-24	25761-25773	applications	_	_	_	
150-25	25774-25775	-	_	_	_	
150-26	25776-25779	the	_	_	_	
150-27	25780-25787	backend	_	_	_	
150-28	25788-25791	and	_	_	_	
150-29	25792-25795	the	_	_	_	
150-30	25796-25804	frontend	_	_	_	
150-31	25804-25805	.	_	_	_	

#Text=While they can both be run on the same machine, one of the easiest performance boosts is to simply split these tasks between two machines.
151-1	25806-25811	While	_	_	_	
151-2	25812-25816	they	_	_	_	
151-3	25817-25820	can	_	_	_	
151-4	25821-25825	both	_	_	_	
151-5	25826-25828	be	_	_	_	
151-6	25829-25832	run	_	_	_	
151-7	25833-25835	on	_	_	_	
151-8	25836-25839	the	_	_	_	
151-9	25840-25844	same	_	_	_	
151-10	25845-25852	machine	_	_	_	
151-11	25852-25853	,	_	_	_	
151-12	25854-25857	one	_	_	_	
151-13	25858-25860	of	_	_	_	
151-14	25861-25864	the	_	_	_	
151-15	25865-25872	easiest	_	_	_	
151-16	25873-25884	performance	_	_	_	
151-17	25885-25891	boosts	_	_	_	
151-18	25892-25894	is	_	_	_	
151-19	25895-25897	to	_	_	_	
151-20	25898-25904	simply	_	_	_	
151-21	25905-25910	split	_	_	_	
151-22	25911-25916	these	_	_	_	
151-23	25917-25922	tasks	_	_	_	
151-24	25923-25930	between	_	_	_	
151-25	25931-25934	two	_	_	_	
151-26	25935-25943	machines	_	_	_	
151-27	25943-25944	.	_	_	_	

#Text=If desired, it is even possible to set up an additional backend machine to assist with recording and/or commercial flagging & transcoding tasks.
152-1	25945-25947	If	_	_	_	
152-2	25948-25955	desired	_	_	_	
152-3	25955-25956	,	_	_	_	
152-4	25957-25959	it	_	_	_	
152-5	25960-25962	is	_	_	_	
152-6	25963-25967	even	_	_	_	
152-7	25968-25976	possible	_	_	_	
152-8	25977-25979	to	_	_	_	
152-9	25980-25983	set	_	_	_	
152-10	25984-25986	up	_	_	_	
152-11	25987-25989	an	_	_	_	
152-12	25990-26000	additional	_	_	_	
152-13	26001-26008	backend	_	_	_	
152-14	26009-26016	machine	_	_	_	
152-15	26017-26019	to	_	_	_	
152-16	26020-26026	assist	_	_	_	
152-17	26027-26031	with	_	_	_	
152-18	26032-26041	recording	_	_	_	
152-19	26042-26045	and	_	_	_	
152-20	26045-26046	/	_	_	_	
152-21	26046-26048	or	_	_	_	
152-22	26049-26059	commercial	_	_	_	
152-23	26060-26068	flagging	_	_	_	
152-24	26069-26070	&	_	_	_	
152-25	26071-26082	transcoding	_	_	_	
152-26	26083-26088	tasks	_	_	_	
152-27	26088-26089	.	_	_	_	

#Text=This sort of arrangement may be beneficial if the backend machines are low-power (unable to keep up with the transcoding jobs), and is a good way to ensure that post-processing operations do not interfere with active recordings.
153-1	26090-26094	This	_	_	_	
153-2	26095-26099	sort	_	_	_	
153-3	26100-26102	of	_	_	_	
153-4	26103-26114	arrangement	_	_	_	
153-5	26115-26118	may	_	_	_	
153-6	26119-26121	be	_	_	_	
153-7	26122-26132	beneficial	_	_	_	
153-8	26133-26135	if	_	_	_	
153-9	26136-26139	the	_	_	_	
153-10	26140-26147	backend	_	_	_	
153-11	26148-26156	machines	_	_	_	
153-12	26157-26160	are	_	_	_	
153-13	26161-26170	low-power	_	_	_	
153-14	26171-26172	(	_	_	_	
153-15	26172-26178	unable	_	_	_	
153-16	26179-26181	to	_	_	_	
153-17	26182-26186	keep	_	_	_	
153-18	26187-26189	up	_	_	_	
153-19	26190-26194	with	_	_	_	
153-20	26195-26198	the	_	_	_	
153-21	26199-26210	transcoding	_	_	_	
153-22	26211-26215	jobs	_	_	_	
153-23	26215-26216	)	_	_	_	
153-24	26216-26217	,	_	_	_	
153-25	26218-26221	and	_	_	_	
153-26	26222-26224	is	_	_	_	
153-27	26225-26226	a	_	_	_	
153-28	26227-26231	good	_	_	_	
153-29	26232-26235	way	_	_	_	
153-30	26236-26238	to	_	_	_	
153-31	26239-26245	ensure	_	_	_	
153-32	26246-26250	that	_	_	_	
153-33	26251-26266	post-processing	_	_	_	
153-34	26267-26277	operations	_	_	_	
153-35	26278-26280	do	_	_	_	
153-36	26281-26284	not	_	_	_	
153-37	26285-26294	interfere	_	_	_	
153-38	26295-26299	with	_	_	_	
153-39	26300-26306	active	_	_	_	
153-40	26307-26317	recordings	_	_	_	
153-41	26317-26318	.	_	_	_	

#Text=Frontend Playback Profiles
#Text=The choice of an appropriate playback profile can make a huge difference in the perceived performance of your MythTV frontend.
154-1	26319-26327	Frontend	_	_	_	
154-2	26328-26336	Playback	_	_	_	
154-3	26337-26345	Profiles	_	_	_	
154-4	26346-26349	The	_	_	_	
154-5	26350-26356	choice	_	_	_	
154-6	26357-26359	of	_	_	_	
154-7	26360-26362	an	_	_	_	
154-8	26363-26374	appropriate	_	_	_	
154-9	26375-26383	playback	_	_	_	
154-10	26384-26391	profile	_	_	_	
154-11	26392-26395	can	_	_	_	
154-12	26396-26400	make	_	_	_	
154-13	26401-26402	a	_	_	_	
154-14	26403-26407	huge	_	_	_	
154-15	26408-26418	difference	_	_	_	
154-16	26419-26421	in	_	_	_	
154-17	26422-26425	the	_	_	_	
154-18	26426-26435	perceived	_	_	_	
154-19	26436-26447	performance	_	_	_	
154-20	26448-26450	of	_	_	_	
154-21	26451-26455	your	_	_	_	
154-22	26456-26462	MythTV	_	_	_	
154-23	26463-26471	frontend	_	_	_	
154-24	26471-26472	.	_	_	_	

#Text=The playback profile decides which video decoder will be used, how the on-screen display is rendered, and which video filters (deinterlacing, etc) are used.
155-1	26473-26476	The	_	_	_	
155-2	26477-26485	playback	_	_	_	
155-3	26486-26493	profile	_	_	_	
155-4	26494-26501	decides	_	_	_	
155-5	26502-26507	which	_	_	_	
155-6	26508-26513	video	_	_	_	
155-7	26514-26521	decoder	_	_	_	
155-8	26522-26526	will	_	_	_	
155-9	26527-26529	be	_	_	_	
155-10	26530-26534	used	_	_	_	
155-11	26534-26535	,	_	_	_	
155-12	26536-26539	how	_	_	_	
155-13	26540-26543	the	_	_	_	
155-14	26544-26553	on-screen	_	_	_	
155-15	26554-26561	display	_	_	_	
155-16	26562-26564	is	_	_	_	
155-17	26565-26573	rendered	_	_	_	
155-18	26573-26574	,	_	_	_	
155-19	26575-26578	and	_	_	_	
155-20	26579-26584	which	_	_	_	
155-21	26585-26590	video	_	_	_	
155-22	26591-26598	filters	_	_	_	
155-23	26599-26600	(	_	_	_	
155-24	26600-26613	deinterlacing	_	_	_	
155-25	26613-26614	,	_	_	_	
155-26	26615-26618	etc	_	_	_	
155-27	26618-26619	)	_	_	_	
155-28	26620-26623	are	_	_	_	
155-29	26624-26628	used	_	_	_	
155-30	26628-26629	.	_	_	_	

#Text=The playback profile also dictates how hardware acceleration is used, which is especially important on low-end PCs or machines processing HD content.
156-1	26630-26633	The	_	_	_	
156-2	26634-26642	playback	_	_	_	
156-3	26643-26650	profile	_	_	_	
156-4	26651-26655	also	_	_	_	
156-5	26656-26664	dictates	_	_	_	
156-6	26665-26668	how	_	_	_	
156-7	26669-26677	hardware	_	_	_	
156-8	26678-26690	acceleration	_	_	_	
156-9	26691-26693	is	_	_	_	
156-10	26694-26698	used	_	_	_	
156-11	26698-26699	,	_	_	_	
156-12	26700-26705	which	_	_	_	
156-13	26706-26708	is	_	_	_	
156-14	26709-26719	especially	_	_	_	
156-15	26720-26729	important	_	_	_	
156-16	26730-26732	on	_	_	_	
156-17	26733-26740	low-end	_	_	_	
156-18	26741-26744	PCs	_	_	_	
156-19	26745-26747	or	_	_	_	
156-20	26748-26756	machines	_	_	_	
156-21	26757-26767	processing	_	_	_	
156-22	26768-26770	HD	_	_	_	
156-23	26771-26778	content	_	_	_	
156-24	26778-26779	.	_	_	_	

#Text=Recording Settings
#Text=Part of "optimizing" is determining what you actually need, not just making something as good as it can get.
157-1	26780-26789	Recording	_	_	_	
157-2	26790-26798	Settings	_	_	_	
157-3	26799-26803	Part	_	_	_	
157-4	26804-26806	of	_	_	_	
157-5	26807-26808	"	_	_	_	
157-6	26808-26818	optimizing	_	_	_	
157-7	26818-26819	"	_	_	_	
157-8	26820-26822	is	_	_	_	
157-9	26823-26834	determining	_	_	_	
157-10	26835-26839	what	_	_	_	
157-11	26840-26843	you	_	_	_	
157-12	26844-26852	actually	_	_	_	
157-13	26853-26857	need	_	_	_	
157-14	26857-26858	,	_	_	_	
157-15	26859-26862	not	_	_	_	
157-16	26863-26867	just	_	_	_	
157-17	26868-26874	making	_	_	_	
157-18	26875-26884	something	_	_	_	
157-19	26885-26887	as	_	_	_	
157-20	26888-26892	good	_	_	_	
157-21	26893-26895	as	_	_	_	
157-22	26896-26898	it	_	_	_	
157-23	26899-26902	can	_	_	_	
157-24	26903-26906	get	_	_	_	
157-25	26906-26907	.	_	_	_	

#Text=For example, if you only watch recordings on your iPod and nothing else, you might as well configure your tuners to record TV at 320x240 resolution.
158-1	26908-26911	For	_	_	_	
158-2	26912-26919	example	_	_	_	
158-3	26919-26920	,	_	_	_	
158-4	26921-26923	if	_	_	_	
158-5	26924-26927	you	_	_	_	
158-6	26928-26932	only	_	_	_	
158-7	26933-26938	watch	_	_	_	
158-8	26939-26949	recordings	_	_	_	
158-9	26950-26952	on	_	_	_	
158-10	26953-26957	your	_	_	_	
158-11	26958-26962	iPod	_	_	_	
158-12	26963-26966	and	_	_	_	
158-13	26967-26974	nothing	_	_	_	
158-14	26975-26979	else	_	_	_	
158-15	26979-26980	,	_	_	_	
158-16	26981-26984	you	_	_	_	
158-17	26985-26990	might	_	_	_	
158-18	26991-26993	as	_	_	_	
158-19	26994-26998	well	_	_	_	
158-20	26999-27008	configure	_	_	_	
158-21	27009-27013	your	_	_	_	
158-22	27014-27020	tuners	_	_	_	
158-23	27021-27023	to	_	_	_	
158-24	27024-27030	record	_	_	_	
158-25	27031-27033	TV	_	_	_	
158-26	27034-27036	at	_	_	_	
158-27	27037-27044	320x240	_	_	_	
158-28	27045-27055	resolution	_	_	_	
158-29	27055-27056	.	_	_	_	

#Text=Doing this will allow faster processing (commercial removal, etc), and the reduced file sizes will let you store more videos and copy them to/from your devices faster.
159-1	27057-27062	Doing	_	_	_	
159-2	27063-27067	this	_	_	_	
159-3	27068-27072	will	_	_	_	
159-4	27073-27078	allow	_	_	_	
159-5	27079-27085	faster	_	_	_	
159-6	27086-27096	processing	_	_	_	
159-7	27097-27098	(	_	_	_	
159-8	27098-27108	commercial	_	_	_	
159-9	27109-27116	removal	_	_	_	
159-10	27116-27117	,	_	_	_	
159-11	27118-27121	etc	_	_	_	
159-12	27121-27122	)	_	_	_	
159-13	27122-27123	,	_	_	_	
159-14	27124-27127	and	_	_	_	
159-15	27128-27131	the	_	_	_	
159-16	27132-27139	reduced	_	_	_	
159-17	27140-27144	file	_	_	_	
159-18	27145-27150	sizes	_	_	_	
159-19	27151-27155	will	_	_	_	
159-20	27156-27159	let	_	_	_	
159-21	27160-27163	you	_	_	_	
159-22	27164-27169	store	_	_	_	
159-23	27170-27174	more	_	_	_	
159-24	27175-27181	videos	_	_	_	
159-25	27182-27185	and	_	_	_	
159-26	27186-27190	copy	_	_	_	
159-27	27191-27195	them	_	_	_	
159-28	27196-27198	to	_	_	_	
159-29	27198-27199	/	_	_	_	
159-30	27199-27203	from	_	_	_	
159-31	27204-27208	your	_	_	_	
159-32	27209-27216	devices	_	_	_	
159-33	27217-27223	faster	_	_	_	
159-34	27223-27224	.	_	_	_	

#Text=Likewise, if you intend to burn a significant number of your recordings to DVD, you could save your backend a lot of work by saving your recordings directly to a DVD-compliant resolution, and in DVD-compliant MPEG-2 if your capture card supports it.
160-1	27225-27233	Likewise	_	_	_	
160-2	27233-27234	,	_	_	_	
160-3	27235-27237	if	_	_	_	
160-4	27238-27241	you	_	_	_	
160-5	27242-27248	intend	_	_	_	
160-6	27249-27251	to	_	_	_	
160-7	27252-27256	burn	_	_	_	
160-8	27257-27258	a	_	_	_	
160-9	27259-27270	significant	_	_	_	
160-10	27271-27277	number	_	_	_	
160-11	27278-27280	of	_	_	_	
160-12	27281-27285	your	_	_	_	
160-13	27286-27296	recordings	_	_	_	
160-14	27297-27299	to	_	_	_	
160-15	27300-27303	DVD	_	_	_	
160-16	27303-27304	,	_	_	_	
160-17	27305-27308	you	_	_	_	
160-18	27309-27314	could	_	_	_	
160-19	27315-27319	save	_	_	_	
160-20	27320-27324	your	_	_	_	
160-21	27325-27332	backend	_	_	_	
160-22	27333-27334	a	_	_	_	
160-23	27335-27338	lot	_	_	_	
160-24	27339-27341	of	_	_	_	
160-25	27342-27346	work	_	_	_	
160-26	27347-27349	by	_	_	_	
160-27	27350-27356	saving	_	_	_	
160-28	27357-27361	your	_	_	_	
160-29	27362-27372	recordings	_	_	_	
160-30	27373-27381	directly	_	_	_	
160-31	27382-27384	to	_	_	_	
160-32	27385-27386	a	_	_	_	
160-33	27387-27400	DVD-compliant	_	_	_	
160-34	27401-27411	resolution	_	_	_	
160-35	27411-27412	,	_	_	_	
160-36	27413-27416	and	_	_	_	
160-37	27417-27419	in	_	_	_	
160-38	27420-27433	DVD-compliant	_	_	_	
160-39	27434-27438	MPEG	_	_	_	
160-40	27438-27439	-	_	_	_	
160-41	27439-27440	2	_	_	_	
160-42	27441-27443	if	_	_	_	
160-43	27444-27448	your	_	_	_	
160-44	27449-27456	capture	_	_	_	
160-45	27457-27461	card	_	_	_	
160-46	27462-27470	supports	_	_	_	
160-47	27471-27473	it	_	_	_	
160-48	27473-27474	.	_	_	_	

#Text=(More information is available in the MythArchive page.)
161-1	27475-27476	(	_	_	_	
161-2	27476-27480	More	_	_	_	
161-3	27481-27492	information	_	_	_	
161-4	27493-27495	is	_	_	_	
161-5	27496-27505	available	_	_	_	
161-6	27506-27508	in	_	_	_	
161-7	27509-27512	the	_	_	_	
161-8	27513-27524	MythArchive	_	_	_	
161-9	27525-27529	page	_	_	_	
161-10	27529-27530	.	_	_	_	
161-11	27530-27531	)	_	_	_	

#Text=Even if you watch your recordings from a frontend on your TV, you may still find it worthwhile to play with the recording settings.
162-1	27532-27536	Even	_	_	_	
162-2	27537-27539	if	_	_	_	
162-3	27540-27543	you	_	_	_	
162-4	27544-27549	watch	_	_	_	
162-5	27550-27554	your	_	_	_	
162-6	27555-27565	recordings	_	_	_	
162-7	27566-27570	from	_	_	_	
162-8	27571-27572	a	_	_	_	
162-9	27573-27581	frontend	_	_	_	
162-10	27582-27584	on	_	_	_	
162-11	27585-27589	your	_	_	_	
162-12	27590-27592	TV	_	_	_	
162-13	27592-27593	,	_	_	_	
162-14	27594-27597	you	_	_	_	
162-15	27598-27601	may	_	_	_	
162-16	27602-27607	still	_	_	_	
162-17	27608-27612	find	_	_	_	
162-18	27613-27615	it	_	_	_	
162-19	27616-27626	worthwhile	_	_	_	
162-20	27627-27629	to	_	_	_	
162-21	27630-27634	play	_	_	_	
162-22	27635-27639	with	_	_	_	
162-23	27640-27643	the	_	_	_	
162-24	27644-27653	recording	_	_	_	
162-25	27654-27662	settings	_	_	_	
162-26	27662-27663	.	_	_	_	

#Text=You may find that a lower audio bitrate eliminates hiss in the audio track, or that a lower resolution with an equivalent bitrate produces fewer objectionable video artifacts.
163-1	27664-27667	You	_	_	_	
163-2	27668-27671	may	_	_	_	
163-3	27672-27676	find	_	_	_	
163-4	27677-27681	that	_	_	_	
163-5	27682-27683	a	_	_	_	
163-6	27684-27689	lower	_	_	_	
163-7	27690-27695	audio	_	_	_	
163-8	27696-27703	bitrate	_	_	_	
163-9	27704-27714	eliminates	_	_	_	
163-10	27715-27719	hiss	_	_	_	
163-11	27720-27722	in	_	_	_	
163-12	27723-27726	the	_	_	_	
163-13	27727-27732	audio	_	_	_	
163-14	27733-27738	track	_	_	_	
163-15	27738-27739	,	_	_	_	
163-16	27740-27742	or	_	_	_	
163-17	27743-27747	that	_	_	_	
163-18	27748-27749	a	_	_	_	
163-19	27750-27755	lower	_	_	_	
163-20	27756-27766	resolution	_	_	_	
163-21	27767-27771	with	_	_	_	
163-22	27772-27774	an	_	_	_	
163-23	27775-27785	equivalent	_	_	_	
163-24	27786-27793	bitrate	_	_	_	
163-25	27794-27802	produces	_	_	_	
163-26	27803-27808	fewer	_	_	_	
163-27	27809-27822	objectionable	_	_	_	
163-28	27823-27828	video	_	_	_	
163-29	27829-27838	artifacts	_	_	_	
163-30	27838-27839	.	_	_	_	

#Text=Or, if your frontend isn't very powerful, or your network is congested, a lower bitrate may help make smooth video possible where it otherwise would not have been.
164-1	27840-27842	Or	_	_	_	
164-2	27842-27843	,	_	_	_	
164-3	27844-27846	if	_	_	_	
164-4	27847-27851	your	_	_	_	
164-5	27852-27860	frontend	_	_	_	
164-6	27861-27866	isn't	_	_	_	
164-7	27867-27871	very	_	_	_	
164-8	27872-27880	powerful	_	_	_	
164-9	27880-27881	,	_	_	_	
164-10	27882-27884	or	_	_	_	
164-11	27885-27889	your	_	_	_	
164-12	27890-27897	network	_	_	_	
164-13	27898-27900	is	_	_	_	
164-14	27901-27910	congested	_	_	_	
164-15	27910-27911	,	_	_	_	
164-16	27912-27913	a	_	_	_	
164-17	27914-27919	lower	_	_	_	
164-18	27920-27927	bitrate	_	_	_	
164-19	27928-27931	may	_	_	_	
164-20	27932-27936	help	_	_	_	
164-21	27937-27941	make	_	_	_	
164-22	27942-27948	smooth	_	_	_	
164-23	27949-27954	video	_	_	_	
164-24	27955-27963	possible	_	_	_	
164-25	27964-27969	where	_	_	_	
164-26	27970-27972	it	_	_	_	
164-27	27973-27982	otherwise	_	_	_	
164-28	27983-27988	would	_	_	_	
164-29	27989-27992	not	_	_	_	
164-30	27993-27997	have	_	_	_	
164-31	27998-28002	been	_	_	_	
164-32	28002-28003	.	_	_	_	

#Text=Mythfilldatabase Scheduling
#Text=By default, Mythfilldatabase runs automatically every 24 hours to keep your listings up to date.
165-1	28004-28020	Mythfilldatabase	_	_	_	
165-2	28021-28031	Scheduling	_	_	_	
165-3	28032-28034	By	_	_	_	
165-4	28035-28042	default	_	_	_	
165-5	28042-28043	,	_	_	_	
165-6	28044-28060	Mythfilldatabase	_	_	_	
165-7	28061-28065	runs	_	_	_	
165-8	28066-28079	automatically	_	_	_	
165-9	28080-28085	every	_	_	_	
165-10	28086-28088	24	_	_	_	
165-11	28089-28094	hours	_	_	_	
165-12	28095-28097	to	_	_	_	
165-13	28098-28102	keep	_	_	_	
165-14	28103-28107	your	_	_	_	
165-15	28108-28116	listings	_	_	_	
165-16	28117-28119	up	_	_	_	
165-17	28120-28122	to	_	_	_	
165-18	28123-28127	date	_	_	_	
165-19	28127-28128	.	_	_	_	

#Text=Mythfilldatabase is known for being able to saturate I/O systems (See Troubleshooting:Mythfilldatabase_IO_bottleneck), which can cause problems on heavily used or low-power backends.
166-1	28129-28145	Mythfilldatabase	_	_	_	
166-2	28146-28148	is	_	_	_	
166-3	28149-28154	known	_	_	_	
166-4	28155-28158	for	_	_	_	
166-5	28159-28164	being	_	_	_	
166-6	28165-28169	able	_	_	_	
166-7	28170-28172	to	_	_	_	
166-8	28173-28181	saturate	_	_	_	
166-9	28182-28183	I	_	_	_	
166-10	28183-28184	/	_	_	_	
166-11	28184-28185	O	_	_	_	
166-12	28186-28193	systems	_	_	_	
166-13	28194-28195	(	_	_	_	
166-14	28195-28198	See	_	_	_	
166-15	28199-28214	Troubleshooting	_	_	_	
166-16	28214-28215	:	_	_	_	
166-17	28215-28245	Mythfilldatabase_IO_bottleneck	_	_	_	
166-18	28245-28246	)	_	_	_	
166-19	28246-28247	,	_	_	_	
166-20	28248-28253	which	_	_	_	
166-21	28254-28257	can	_	_	_	
166-22	28258-28263	cause	_	_	_	
166-23	28264-28272	problems	_	_	_	
166-24	28273-28275	on	_	_	_	
166-25	28276-28283	heavily	_	_	_	
166-26	28284-28288	used	_	_	_	
166-27	28289-28291	or	_	_	_	
166-28	28292-28301	low-power	_	_	_	
166-29	28302-28310	backends	_	_	_	
166-30	28310-28311	.	_	_	_	

#Text=If you have recording or playback issues during the default script timeslot (2AM-5AM), you can manually adjust the script's schedule via the frontend setup menu to better suit your particular usage.
167-1	28312-28314	If	_	_	_	
167-2	28315-28318	you	_	_	_	
167-3	28319-28323	have	_	_	_	
167-4	28324-28333	recording	_	_	_	
167-5	28334-28336	or	_	_	_	
167-6	28337-28345	playback	_	_	_	
167-7	28346-28352	issues	_	_	_	
167-8	28353-28359	during	_	_	_	
167-9	28360-28363	the	_	_	_	
167-10	28364-28371	default	_	_	_	
167-11	28372-28378	script	_	_	_	
167-12	28379-28387	timeslot	_	_	_	
167-13	28388-28389	(	_	_	_	
167-14	28389-28392	2AM	_	_	_	
167-15	28392-28393	-	_	_	_	
167-16	28393-28396	5AM	_	_	_	
167-17	28396-28397	)	_	_	_	
167-18	28397-28398	,	_	_	_	
167-19	28399-28402	you	_	_	_	
167-20	28403-28406	can	_	_	_	
167-21	28407-28415	manually	_	_	_	
167-22	28416-28422	adjust	_	_	_	
167-23	28423-28426	the	_	_	_	
167-24	28427-28435	script's	_	_	_	
167-25	28436-28444	schedule	_	_	_	
167-26	28445-28448	via	_	_	_	
167-27	28449-28452	the	_	_	_	
167-28	28453-28461	frontend	_	_	_	
167-29	28462-28467	setup	_	_	_	
167-30	28468-28472	menu	_	_	_	
167-31	28473-28475	to	_	_	_	
167-32	28476-28482	better	_	_	_	
167-33	28483-28487	suit	_	_	_	
167-34	28488-28492	your	_	_	_	
167-35	28493-28503	particular	_	_	_	
167-36	28504-28509	usage	_	_	_	
167-37	28509-28510	.	_	_	_	

#Text=Running the database and MySQL on a different machine is another way to alleviate these issues, to ensure consistent performance.
168-1	28511-28518	Running	_	_	_	
168-2	28519-28522	the	_	_	_	
168-3	28523-28531	database	_	_	_	
168-4	28532-28535	and	_	_	_	
168-5	28536-28541	MySQL	_	_	_	
168-6	28542-28544	on	_	_	_	
168-7	28545-28546	a	_	_	_	
168-8	28547-28556	different	_	_	_	
168-9	28557-28564	machine	_	_	_	
168-10	28565-28567	is	_	_	_	
168-11	28568-28575	another	_	_	_	
168-12	28576-28579	way	_	_	_	
168-13	28580-28582	to	_	_	_	
168-14	28583-28592	alleviate	_	_	_	
168-15	28593-28598	these	_	_	_	
168-16	28599-28605	issues	_	_	_	
168-17	28605-28606	,	_	_	_	
168-18	28607-28609	to	_	_	_	
168-19	28610-28616	ensure	_	_	_	
168-20	28617-28627	consistent	_	_	_	
168-21	28628-28639	performance	_	_	_	
168-22	28639-28640	.	_	_	_	

#Text=MySQL Database Tweaks
#Text=MySQL v8 (Ubuntu 20.04+) see *** below Deprecations
#Text=Taken from this thread in mythtv-users.
169-1	28641-28646	MySQL	_	_	_	
169-2	28647-28655	Database	_	_	_	
169-3	28656-28662	Tweaks	_	_	_	
169-4	28663-28668	MySQL	_	_	_	
169-5	28669-28671	v8	_	_	_	
169-6	28672-28673	(	_	_	_	
169-7	28673-28679	Ubuntu	_	_	_	
169-8	28680-28685	20.04	_	_	_	
169-9	28685-28686	+	_	_	_	
169-10	28686-28687	)	_	_	_	
169-11	28688-28691	see	_	_	_	
169-12	28692-28693	*	_	_	_	
169-13	28693-28694	*	_	_	_	
169-14	28694-28695	*	_	_	_	
169-15	28696-28701	below	_	_	_	
169-16	28702-28714	Deprecations	_	_	_	
169-17	28715-28720	Taken	_	_	_	
169-18	28721-28725	from	_	_	_	
169-19	28726-28730	this	_	_	_	
169-20	28731-28737	thread	_	_	_	
169-21	28738-28740	in	_	_	_	
169-22	28741-28753	mythtv-users	_	_	_	
169-23	28753-28754	.	_	_	_	

#Text=Add the following to the [mysqld] section of /etc/my.cnf to see improvements in database speed for MythTV as well as MythWeb.
170-1	28755-28758	Add	_	_	_	
170-2	28759-28762	the	_	_	_	
170-3	28763-28772	following	_	_	_	
170-4	28773-28775	to	_	_	_	
170-5	28776-28779	the	_	_	_	
170-6	28780-28781	[	_	_	_	
170-7	28781-28787	mysqld	_	_	_	
170-8	28787-28788	]	_	_	_	
170-9	28789-28796	section	_	_	_	
170-10	28797-28799	of	_	_	_	
170-11	28800-28801	/	_	_	_	
170-12	28801-28804	etc	_	_	_	
170-13	28804-28805	/	_	_	_	
170-14	28805-28811	my.cnf	_	_	_	
170-15	28812-28814	to	_	_	_	
170-16	28815-28818	see	_	_	_	
170-17	28819-28831	improvements	_	_	_	
170-18	28832-28834	in	_	_	_	
170-19	28835-28843	database	_	_	_	
170-20	28844-28849	speed	_	_	_	
170-21	28850-28853	for	_	_	_	
170-22	28854-28860	MythTV	_	_	_	
170-23	28861-28863	as	_	_	_	
170-24	28864-28868	well	_	_	_	
170-25	28869-28871	as	_	_	_	
170-26	28872-28879	MythWeb	_	_	_	
170-27	28879-28880	.	_	_	_	

#Text=Check your default values using 'mysql> show global variables;'
#Text=key_buffer = 48M
#Text=max_allowed_packet = 8M
#Text=table_cache = 128 # this setting is deprecated in mysql 5.6.23 and will prevent mysql from starting
#Text=sort_buffer_size = 48M
#Text=net_buffer_length = 1M
#Text=thread_cache_size = 4
#Text=query_cache_type = 1 ***
#Text=query_cache_size = 4M ***
#Text=N.B.
171-1	28881-28886	Check	_	_	_	
171-2	28887-28891	your	_	_	_	
171-3	28892-28899	default	_	_	_	
171-4	28900-28906	values	_	_	_	
171-5	28907-28912	using	_	_	_	
171-6	28913-28914	'	_	_	_	
171-7	28914-28919	mysql	_	_	_	
171-8	28919-28920	>	_	_	_	
171-9	28921-28925	show	_	_	_	
171-10	28926-28932	global	_	_	_	
171-11	28933-28942	variables	_	_	_	
171-12	28942-28943	;	_	_	_	
171-13	28943-28944	'	_	_	_	
171-14	28945-28955	key_buffer	parameter	_	_	
171-15	28956-28957	=	_	_	_	
171-16	28958-28961	48M	value	Associated With	171-14	
171-17	28962-28980	max_allowed_packet	parameter	_	_	
171-18	28981-28982	=	_	_	_	
171-19	28983-28985	8M	value	Associated With	171-17	
171-20	28986-28997	table_cache	parameter	_	_	
171-21	28998-28999	=	_	_	_	
171-22	29000-29003	128	value	Associated With	171-20	
171-23	29004-29005	#	_	_	_	
171-24	29006-29010	this	_	_	_	
171-25	29011-29018	setting	_	_	_	
171-26	29019-29021	is	_	_	_	
171-27	29022-29032	deprecated	_	_	_	
171-28	29033-29035	in	_	_	_	
171-29	29036-29041	mysql	_	_	_	
171-30	29042-29048	5.6.23	_	_	_	
171-31	29049-29052	and	_	_	_	
171-32	29053-29057	will	_	_	_	
171-33	29058-29065	prevent	_	_	_	
171-34	29066-29071	mysql	_	_	_	
171-35	29072-29076	from	_	_	_	
171-36	29077-29085	starting	_	_	_	
171-37	29086-29102	sort_buffer_size	parameter	_	_	
171-38	29103-29104	=	_	_	_	
171-39	29105-29108	48M	value	Associated With	171-37	
171-40	29109-29126	net_buffer_length	parameter	_	_	
171-41	29127-29128	=	_	_	_	
171-42	29129-29131	1M	value	Associated With	171-40	
171-43	29132-29149	thread_cache_size	parameter	_	_	
171-44	29150-29151	=	_	_	_	
171-45	29152-29153	4	value	Associated With	171-43	
171-46	29154-29170	query_cache_type	_	_	_	
171-47	29171-29172	=	_	_	_	
171-48	29173-29174	1	_	_	_	
171-49	29175-29176	*	_	_	_	
171-50	29176-29177	*	_	_	_	
171-51	29177-29178	*	_	_	_	
171-52	29179-29195	query_cache_size	_	_	_	
171-53	29196-29197	=	_	_	_	
171-54	29198-29200	4M	_	_	_	
171-55	29201-29202	*	_	_	_	
171-56	29202-29203	*	_	_	_	
171-57	29203-29204	*	_	_	_	
171-58	29205-29208	N.B	_	_	_	
171-59	29208-29209	.	_	_	_	

#Text=Turning on the query_cache (query_cache_type=1) can cause problems with if you have a newer server (>=5.7) and mixed clients (some below 5.7, some above).
172-1	29210-29217	Turning	_	_	_	
172-2	29218-29220	on	_	_	_	
172-3	29221-29224	the	_	_	_	
172-4	29225-29236	query_cache	_	_	_	
172-5	29237-29238	(	_	_	_	
172-6	29238-29254	query_cache_type	parameter	_	_	
172-7	29254-29255	=	_	_	_	
172-8	29255-29256	1	value	Associated With	172-6	
172-9	29256-29257	)	_	_	_	
172-10	29258-29261	can	_	_	_	
172-11	29262-29267	cause	_	_	_	
172-12	29268-29276	problems	_	_	_	
172-13	29277-29281	with	_	_	_	
172-14	29282-29284	if	_	_	_	
172-15	29285-29288	you	_	_	_	
172-16	29289-29293	have	_	_	_	
172-17	29294-29295	a	_	_	_	
172-18	29296-29301	newer	_	_	_	
172-19	29302-29308	server	_	_	_	
172-20	29309-29310	(	_	_	_	
172-21	29310-29311	>	_	_	_	
172-22	29311-29312	=	_	_	_	
172-23	29312-29315	5.7	_	_	_	
172-24	29315-29316	)	_	_	_	
172-25	29317-29320	and	_	_	_	
172-26	29321-29326	mixed	_	_	_	
172-27	29327-29334	clients	_	_	_	
172-28	29335-29336	(	_	_	_	
172-29	29336-29340	some	_	_	_	
172-30	29341-29346	below	_	_	_	
172-31	29347-29350	5.7	_	_	_	
172-32	29350-29351	,	_	_	_	
172-33	29352-29356	some	_	_	_	
172-34	29357-29362	above	_	_	_	
172-35	29362-29363	)	_	_	_	
172-36	29363-29364	.	_	_	_	

#Text=For example, the current Raspbian distro (Jessie) only ships with a v5.5 MySQL client.
173-1	29365-29368	For	_	_	_	
173-2	29369-29376	example	_	_	_	
173-3	29376-29377	,	_	_	_	
173-4	29378-29381	the	_	_	_	
173-5	29382-29389	current	_	_	_	
173-6	29390-29398	Raspbian	_	_	_	
173-7	29399-29405	distro	_	_	_	
173-8	29406-29407	(	_	_	_	
173-9	29407-29413	Jessie	_	_	_	
173-10	29413-29414	)	_	_	_	
173-11	29415-29419	only	_	_	_	
173-12	29420-29425	ships	_	_	_	
173-13	29426-29430	with	_	_	_	
173-14	29431-29432	a	_	_	_	
173-15	29433-29437	v5.5	_	_	_	
173-16	29438-29443	MySQL	_	_	_	
173-17	29444-29450	client	_	_	_	
173-18	29450-29451	.	_	_	_	

#Text=See this MySQL bug.
174-1	29452-29455	See	_	_	_	
174-2	29456-29460	this	_	_	_	
174-3	29461-29466	MySQL	_	_	_	
174-4	29467-29470	bug	_	_	_	
174-5	29470-29471	.	_	_	_	

#Text=There are also example my.cnf files included with your MySQL installation that have suggested values based on the amount of memory your system has.
175-1	29472-29477	There	_	_	_	
175-2	29478-29481	are	_	_	_	
175-3	29482-29486	also	_	_	_	
175-4	29487-29494	example	_	_	_	
175-5	29495-29501	my.cnf	_	_	_	
175-6	29502-29507	files	_	_	_	
175-7	29508-29516	included	_	_	_	
175-8	29517-29521	with	_	_	_	
175-9	29522-29526	your	_	_	_	
175-10	29527-29532	MySQL	_	_	_	
175-11	29533-29545	installation	_	_	_	
175-12	29546-29550	that	_	_	_	
175-13	29551-29555	have	_	_	_	
175-14	29556-29565	suggested	_	_	_	
175-15	29566-29572	values	_	_	_	
175-16	29573-29578	based	_	_	_	
175-17	29579-29581	on	_	_	_	
175-18	29582-29585	the	_	_	_	
175-19	29586-29592	amount	_	_	_	
175-20	29593-29595	of	_	_	_	
175-21	29596-29602	memory	_	_	_	
175-22	29603-29607	your	_	_	_	
175-23	29608-29614	system	_	_	_	
175-24	29615-29618	has	_	_	_	
175-25	29618-29619	.	_	_	_	

#Text=Information about them can be found in the MySQL documentation.
176-1	29620-29631	Information	_	_	_	
176-2	29632-29637	about	_	_	_	
176-3	29638-29642	them	_	_	_	
176-4	29643-29646	can	_	_	_	
176-5	29647-29649	be	_	_	_	
176-6	29650-29655	found	_	_	_	
176-7	29656-29658	in	_	_	_	
176-8	29659-29662	the	_	_	_	
176-9	29663-29668	MySQL	_	_	_	
176-10	29669-29682	documentation	_	_	_	
176-11	29682-29683	.	_	_	_	

#Text=There is a great Perl script available at mysqltuner.pl.
177-1	29684-29689	There	_	_	_	
177-2	29690-29692	is	_	_	_	
177-3	29693-29694	a	_	_	_	
177-4	29695-29700	great	_	_	_	
177-5	29701-29705	Perl	_	_	_	
177-6	29706-29712	script	_	_	_	
177-7	29713-29722	available	_	_	_	
177-8	29723-29725	at	_	_	_	
177-9	29726-29739	mysqltuner.pl	_	_	_	
177-10	29739-29740	.	_	_	_	

#Text=It will look through many of the MySQL server settings and report on variables that need to be changed.
178-1	29741-29743	It	_	_	_	
178-2	29744-29748	will	_	_	_	
178-3	29749-29753	look	_	_	_	
178-4	29754-29761	through	_	_	_	
178-5	29762-29766	many	_	_	_	
178-6	29767-29769	of	_	_	_	
178-7	29770-29773	the	_	_	_	
178-8	29774-29779	MySQL	_	_	_	
178-9	29780-29786	server	_	_	_	
178-10	29787-29795	settings	_	_	_	
178-11	29796-29799	and	_	_	_	
178-12	29800-29806	report	_	_	_	
178-13	29807-29809	on	_	_	_	
178-14	29810-29819	variables	_	_	_	
178-15	29820-29824	that	_	_	_	
178-16	29825-29829	need	_	_	_	
178-17	29830-29832	to	_	_	_	
178-18	29833-29835	be	_	_	_	
178-19	29836-29843	changed	_	_	_	
178-20	29843-29844	.	_	_	_	

#Text=Hints on usage [1]
#Text=XORG CPU Hogging
#Text=Under some circumstances, X can use huge amounts of CPU.
179-1	29845-29850	Hints	_	_	_	
179-2	29851-29853	on	_	_	_	
179-3	29854-29859	usage	_	_	_	
179-4	29860-29861	[	_	_	_	
179-5	29861-29862	1	_	_	_	
179-6	29862-29863	]	_	_	_	
179-7	29864-29868	XORG	_	_	_	
179-8	29869-29872	CPU	_	_	_	
179-9	29873-29880	Hogging	_	_	_	
179-10	29881-29886	Under	_	_	_	
179-11	29887-29891	some	_	_	_	
179-12	29892-29905	circumstances	_	_	_	
179-13	29905-29906	,	_	_	_	
179-14	29907-29908	X	_	_	_	
179-15	29909-29912	can	_	_	_	
179-16	29913-29916	use	_	_	_	
179-17	29917-29921	huge	_	_	_	
179-18	29922-29929	amounts	_	_	_	
179-19	29930-29932	of	_	_	_	
179-20	29933-29936	CPU	_	_	_	
179-21	29936-29937	.	_	_	_	

#Text=This may be fixed in some cases by increasing its priority above the base value of 0 (i.e. to a negative value). e.g. renice -2 [pid for X].
180-1	29938-29942	This	_	_	_	
180-2	29943-29946	may	_	_	_	
180-3	29947-29949	be	_	_	_	
180-4	29950-29955	fixed	_	_	_	
180-5	29956-29958	in	_	_	_	
180-6	29959-29963	some	_	_	_	
180-7	29964-29969	cases	_	_	_	
180-8	29970-29972	by	_	_	_	
180-9	29973-29983	increasing	_	_	_	
180-10	29984-29987	its	_	_	_	
180-11	29988-29996	priority	_	_	_	
180-12	29997-30002	above	_	_	_	
180-13	30003-30006	the	_	_	_	
180-14	30007-30011	base	_	_	_	
180-15	30012-30017	value	_	_	_	
180-16	30018-30020	of	_	_	_	
180-17	30021-30022	0	_	_	_	
180-18	30023-30024	(	_	_	_	
180-19	30024-30027	i.e	_	_	_	
180-20	30027-30028	.	_	_	_	
180-21	30029-30031	to	_	_	_	
180-22	30032-30033	a	_	_	_	
180-23	30034-30042	negative	_	_	_	
180-24	30043-30048	value	_	_	_	
180-25	30048-30049	)	_	_	_	
180-26	30049-30050	.	_	_	_	
180-27	30051-30054	e.g	_	_	_	
180-28	30054-30055	.	_	_	_	
180-29	30056-30062	renice	_	_	_	
180-30	30063-30064	-	_	_	_	
180-31	30064-30065	2	_	_	_	
180-32	30066-30067	[	_	_	_	
180-33	30067-30070	pid	_	_	_	
180-34	30071-30074	for	_	_	_	
180-35	30075-30076	X	_	_	_	
180-36	30076-30077	]	_	_	_	
180-37	30077-30078	.	_	_	_	

#Text=If you must renice a process, do so in small steps.
181-1	30079-30081	If	_	_	_	
181-2	30082-30085	you	_	_	_	
181-3	30086-30090	must	_	_	_	
181-4	30091-30097	renice	_	_	_	
181-5	30098-30099	a	_	_	_	
181-6	30100-30107	process	_	_	_	
181-7	30107-30108	,	_	_	_	
181-8	30109-30111	do	_	_	_	
181-9	30112-30114	so	_	_	_	
181-10	30115-30117	in	_	_	_	
181-11	30118-30123	small	_	_	_	
181-12	30124-30129	steps	_	_	_	
181-13	30129-30130	.	_	_	_	

#Text=Raising applications above the priority of mechanisms like kjournald or ksoftirqd can have adverse side-effects.
182-1	30131-30138	Raising	_	_	_	
182-2	30139-30151	applications	_	_	_	
182-3	30152-30157	above	_	_	_	
182-4	30158-30161	the	_	_	_	
182-5	30162-30170	priority	_	_	_	
182-6	30171-30173	of	_	_	_	
182-7	30174-30184	mechanisms	_	_	_	
182-8	30185-30189	like	_	_	_	
182-9	30190-30199	kjournald	_	_	_	
182-10	30200-30202	or	_	_	_	
182-11	30203-30212	ksoftirqd	_	_	_	
182-12	30213-30216	can	_	_	_	
182-13	30217-30221	have	_	_	_	
182-14	30222-30229	adverse	_	_	_	
182-15	30230-30242	side-effects	_	_	_	
182-16	30242-30243	.	_	_	_	

#Text=A second way of lowering Xorg CPU usage (especially when decoding is accelerated with XvMC or VDPAU) with nVidia cards, is to add
#Text=Option
#Text="UseEvents"
#Text="True"
#Text=to the Device section of your Xorg.conf.
183-1	30244-30245	A	_	_	_	
183-2	30246-30252	second	_	_	_	
183-3	30253-30256	way	_	_	_	
183-4	30257-30259	of	_	_	_	
183-5	30260-30268	lowering	_	_	_	
183-6	30269-30273	Xorg	_	_	_	
183-7	30274-30277	CPU	_	_	_	
183-8	30278-30283	usage	_	_	_	
183-9	30284-30285	(	_	_	_	
183-10	30285-30295	especially	_	_	_	
183-11	30296-30300	when	_	_	_	
183-12	30301-30309	decoding	_	_	_	
183-13	30310-30312	is	_	_	_	
183-14	30313-30324	accelerated	_	_	_	
183-15	30325-30329	with	_	_	_	
183-16	30330-30334	XvMC	_	_	_	
183-17	30335-30337	or	_	_	_	
183-18	30338-30343	VDPAU	_	_	_	
183-19	30343-30344	)	_	_	_	
183-20	30345-30349	with	_	_	_	
183-21	30350-30356	nVidia	_	_	_	
183-22	30357-30362	cards	_	_	_	
183-23	30362-30363	,	_	_	_	
183-24	30364-30366	is	_	_	_	
183-25	30367-30369	to	_	_	_	
183-26	30370-30373	add	_	_	_	
183-27	30374-30380	Option	_	_	_	
183-28	30381-30382	"	_	_	_	
183-29	30382-30391	UseEvents	_	_	_	
183-30	30391-30392	"	_	_	_	
183-31	30393-30394	"	_	_	_	
183-32	30394-30398	True	_	_	_	
183-33	30398-30399	"	_	_	_	
183-34	30400-30402	to	_	_	_	
183-35	30403-30406	the	_	_	_	
183-36	30407-30413	Device	_	_	_	
183-37	30414-30421	section	_	_	_	
183-38	30422-30424	of	_	_	_	
183-39	30425-30429	your	_	_	_	
183-40	30430-30439	Xorg.conf	_	_	_	
183-41	30439-30440	.	_	_	_	

#Text=(warning: although this works well for watching hd content, it's considered unstable for 3D software like gaming, etc... )
#Text=Lightweight Window Managers
#Text=While KDE & Gnome provide for a nice user experience, they also bring along a lot of baggage which is unnecessary for a dedicated Myth machine.
184-1	30441-30442	(	_	_	_	
184-2	30442-30449	warning	_	_	_	
184-3	30449-30450	:	_	_	_	
184-4	30451-30459	although	_	_	_	
184-5	30460-30464	this	_	_	_	
184-6	30465-30470	works	_	_	_	
184-7	30471-30475	well	_	_	_	
184-8	30476-30479	for	_	_	_	
184-9	30480-30488	watching	_	_	_	
184-10	30489-30491	hd	_	_	_	
184-11	30492-30499	content	_	_	_	
184-12	30499-30500	,	_	_	_	
184-13	30501-30505	it's	_	_	_	
184-14	30506-30516	considered	_	_	_	
184-15	30517-30525	unstable	_	_	_	
184-16	30526-30529	for	_	_	_	
184-17	30530-30532	3D	_	_	_	
184-18	30533-30541	software	_	_	_	
184-19	30542-30546	like	_	_	_	
184-20	30547-30553	gaming	_	_	_	
184-21	30553-30554	,	_	_	_	
184-22	30555-30558	etc	_	_	_	
184-23	30558-30559	.	_	_	_	
184-24	30559-30560	.	_	_	_	
184-25	30560-30561	.	_	_	_	
184-26	30562-30563	)	_	_	_	
184-27	30564-30575	Lightweight	_	_	_	
184-28	30576-30582	Window	_	_	_	
184-29	30583-30591	Managers	_	_	_	
184-30	30592-30597	While	_	_	_	
184-31	30598-30601	KDE	_	_	_	
184-32	30602-30603	&	_	_	_	
184-33	30604-30609	Gnome	_	_	_	
184-34	30610-30617	provide	_	_	_	
184-35	30618-30621	for	_	_	_	
184-36	30622-30623	a	_	_	_	
184-37	30624-30628	nice	_	_	_	
184-38	30629-30633	user	_	_	_	
184-39	30634-30644	experience	_	_	_	
184-40	30644-30645	,	_	_	_	
184-41	30646-30650	they	_	_	_	
184-42	30651-30655	also	_	_	_	
184-43	30656-30661	bring	_	_	_	
184-44	30662-30667	along	_	_	_	
184-45	30668-30669	a	_	_	_	
184-46	30670-30673	lot	_	_	_	
184-47	30674-30676	of	_	_	_	
184-48	30677-30684	baggage	_	_	_	
184-49	30685-30690	which	_	_	_	
184-50	30691-30693	is	_	_	_	
184-51	30694-30705	unnecessary	_	_	_	
184-52	30706-30709	for	_	_	_	
184-53	30710-30711	a	_	_	_	
184-54	30712-30721	dedicated	_	_	_	
184-55	30722-30726	Myth	_	_	_	
184-56	30727-30734	machine	_	_	_	
184-57	30734-30735	.	_	_	_	

#Text=Switching to a lightweight window manager such as WindowMaker,Fluxbox, or Ratpoison will reduce startup times and give you more available system resources at runtime.
185-1	30736-30745	Switching	_	_	_	
185-2	30746-30748	to	_	_	_	
185-3	30749-30750	a	_	_	_	
185-4	30751-30762	lightweight	_	_	_	
185-5	30763-30769	window	_	_	_	
185-6	30770-30777	manager	_	_	_	
185-7	30778-30782	such	_	_	_	
185-8	30783-30785	as	_	_	_	
185-9	30786-30797	WindowMaker	_	_	_	
185-10	30797-30798	,	_	_	_	
185-11	30798-30805	Fluxbox	_	_	_	
185-12	30805-30806	,	_	_	_	
185-13	30807-30809	or	_	_	_	
185-14	30810-30819	Ratpoison	_	_	_	
185-15	30820-30824	will	_	_	_	
185-16	30825-30831	reduce	_	_	_	
185-17	30832-30839	startup	_	_	_	
185-18	30840-30845	times	_	_	_	
185-19	30846-30849	and	_	_	_	
185-20	30850-30854	give	_	_	_	
185-21	30855-30858	you	_	_	_	
185-22	30859-30863	more	_	_	_	
185-23	30864-30873	available	_	_	_	
185-24	30874-30880	system	_	_	_	
185-25	30881-30890	resources	_	_	_	
185-26	30891-30893	at	_	_	_	
185-27	30894-30901	runtime	_	_	_	
185-28	30901-30902	.	_	_	_	

#Text=Retrieved from "http://www.mythtv.org/wiki?
186-1	30903-30912	Retrieved	_	_	_	
186-2	30913-30917	from	_	_	_	
186-3	30918-30919	"	_	_	_	
186-4	30919-30923	http	_	_	_	
186-5	30923-30924	:	_	_	_	
186-6	30924-30925	/	_	_	_	
186-7	30925-30926	/	_	_	_	
186-8	30926-30940	www.mythtv.org	_	_	_	
186-9	30940-30941	/	_	_	_	
186-10	30941-30945	wiki	_	_	_	
186-11	30945-30946	?	_	_	_	

#Text=title=Optimizing_Performance&oldid=65284"
#Text=Category: HOWTO
#Text=Navigation menu
#Text=Personal tools
#Text=Log in
#Text=Namespaces
#Text=Page
#Text=Discussion
#Text=Variants
#Text=Views
#Text=Read
#Text=View source
#Text=View history
#Text=More
#Text=Search
#Text=Wiki Navigation
#Text=Main pageRecent changesRandom pagepopularpagesWanted pagesHelp
#Text=Official Resources
#Text=Official WebsiteOfficial ForumOfficial DocumentationUser ManualIRC FAQMailing List ArchivesBug TrackerSource Code Repository
#Text=Tools
#Text=What links hereRelated changesSpecial pagesPermanent linkPage information
#Text=Print/export
#Text=Create a bookDownload as PDFPrintable version
#Text=This page was last modified on 6 May 2020, at 20:34.
187-1	30946-30951	title	_	_	_	
187-2	30951-30952	=	_	_	_	
187-3	30952-30974	Optimizing_Performance	_	_	_	
187-4	30974-30975	&	_	_	_	
187-5	30975-30980	oldid	_	_	_	
187-6	30980-30981	=	_	_	_	
187-7	30981-30986	65284	_	_	_	
187-8	30986-30987	"	_	_	_	
187-9	30988-30996	Category	_	_	_	
187-10	30996-30997	:	_	_	_	
187-11	30998-31003	HOWTO	_	_	_	
187-12	31004-31014	Navigation	_	_	_	
187-13	31015-31019	menu	_	_	_	
187-14	31020-31028	Personal	_	_	_	
187-15	31029-31034	tools	_	_	_	
187-16	31035-31038	Log	_	_	_	
187-17	31039-31041	in	_	_	_	
187-18	31042-31052	Namespaces	_	_	_	
187-19	31053-31057	Page	_	_	_	
187-20	31058-31068	Discussion	_	_	_	
187-21	31069-31077	Variants	_	_	_	
187-22	31078-31083	Views	_	_	_	
187-23	31084-31088	Read	_	_	_	
187-24	31089-31093	View	_	_	_	
187-25	31094-31100	source	_	_	_	
187-26	31101-31105	View	_	_	_	
187-27	31106-31113	history	_	_	_	
187-28	31114-31118	More	_	_	_	
187-29	31119-31125	Search	_	_	_	
187-30	31126-31130	Wiki	_	_	_	
187-31	31131-31141	Navigation	_	_	_	
187-32	31142-31146	Main	_	_	_	
187-33	31147-31157	pageRecent	_	_	_	
187-34	31158-31171	changesRandom	_	_	_	
187-35	31172-31194	pagepopularpagesWanted	_	_	_	
187-36	31195-31204	pagesHelp	_	_	_	
187-37	31205-31213	Official	_	_	_	
187-38	31214-31223	Resources	_	_	_	
187-39	31224-31232	Official	_	_	_	
187-40	31233-31248	WebsiteOfficial	_	_	_	
187-41	31249-31262	ForumOfficial	_	_	_	
187-42	31263-31280	DocumentationUser	_	_	_	
187-43	31281-31290	ManualIRC	_	_	_	
187-44	31291-31301	FAQMailing	_	_	_	
187-45	31302-31306	List	_	_	_	
187-46	31307-31318	ArchivesBug	_	_	_	
187-47	31319-31332	TrackerSource	_	_	_	
187-48	31333-31337	Code	_	_	_	
187-49	31338-31348	Repository	_	_	_	
187-50	31349-31354	Tools	_	_	_	
187-51	31355-31359	What	_	_	_	
187-52	31360-31365	links	_	_	_	
187-53	31366-31377	hereRelated	_	_	_	
187-54	31378-31392	changesSpecial	_	_	_	
187-55	31393-31407	pagesPermanent	_	_	_	
187-56	31408-31416	linkPage	_	_	_	
187-57	31417-31428	information	_	_	_	
187-58	31429-31434	Print	_	_	_	
187-59	31434-31435	/	_	_	_	
187-60	31435-31441	export	_	_	_	
187-61	31442-31448	Create	_	_	_	
187-62	31449-31450	a	_	_	_	
187-63	31451-31463	bookDownload	_	_	_	
187-64	31464-31466	as	_	_	_	
187-65	31467-31479	PDFPrintable	_	_	_	
187-66	31480-31487	version	_	_	_	
187-67	31488-31492	This	_	_	_	
187-68	31493-31497	page	_	_	_	
187-69	31498-31501	was	_	_	_	
187-70	31502-31506	last	_	_	_	
187-71	31507-31515	modified	_	_	_	
187-72	31516-31518	on	_	_	_	
187-73	31519-31520	6	_	_	_	
187-74	31521-31524	May	_	_	_	
187-75	31525-31529	2020	_	_	_	
187-76	31529-31530	,	_	_	_	
187-77	31531-31533	at	_	_	_	
187-78	31534-31536	20	_	_	_	
187-79	31536-31537	:	_	_	_	
187-80	31537-31539	34	_	_	_	
187-81	31539-31540	.	_	_	_	

#Text=Privacy policy
#Text=About MythTV Official Wiki
#Text=Disclaimers
188-1	31541-31548	Privacy	_	_	_	
188-2	31549-31555	policy	_	_	_	
188-3	31556-31561	About	_	_	_	
188-4	31562-31568	MythTV	_	_	_	
188-5	31569-31577	Official	_	_	_	
188-6	31578-31582	Wiki	_	_	_	
188-7	31583-31594	Disclaimers	_	_	_	
